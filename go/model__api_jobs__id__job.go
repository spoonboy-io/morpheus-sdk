/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ApiJobsIdJob struct for ApiJobsIdJob
type ApiJobsIdJob struct {
	// A name for the Job
	Name *string `json:"name,omitempty"`
	// Array of label strings, can be used for filtering.
	Labels []string `json:"labels,omitempty"`
	// Use this to set enabled state
	Enabled *bool `json:"enabled,omitempty"`
	Task NullableApiJobsIdJobTask `json:"task,omitempty"`
	Workflow NullableApiJobsIdJobTask `json:"workflow,omitempty"`
	// Scan Checklist. Only applies to type scap-package.
	ScanPath NullableString `json:"scanPath,omitempty"`
	// Security Profile. Only applies to type scap-package.
	SecurityProfile NullableString `json:"securityProfile,omitempty"`
	// Target type where job will execute
	TargetType *string `json:"targetType,omitempty"`
	Targets []ApiJobsIdJobTargets `json:"targets,omitempty"`
	// Instance Label. Only applicable if `targetType` is `instance-label`.
	InstanceLabel *string `json:"instanceLabel,omitempty"`
	// Server Label. Only applicable if `targetType` is `server-label`.
	ServerLabel *string `json:"serverLabel,omitempty"`
	ScheduleMode *OneOfstringlong `json:"scheduleMode,omitempty"`
	// Map of options to be used as values in the workflow tasks. These correspond to option types.
	CustomOptions *map[string]interface{} `json:"customOptions,omitempty"`
	// Job custom configuration (String in JSON format)
	CustomConfig *string `json:"customConfig,omitempty"`
	// Date and Time to execute the job. Use UTC time in the format 2020-02-15T05:00:00Z. Required when scheduleMode is 'dateTime'.
	DateTime *time.Time `json:"dateTime,omitempty"`
	// If true, executes job
	Run *bool `json:"run,omitempty"`
}

// NewApiJobsIdJob instantiates a new ApiJobsIdJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiJobsIdJob() *ApiJobsIdJob {
	this := ApiJobsIdJob{}
	var enabled bool = true
	this.Enabled = &enabled
	return &this
}

// NewApiJobsIdJobWithDefaults instantiates a new ApiJobsIdJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiJobsIdJobWithDefaults() *ApiJobsIdJob {
	this := ApiJobsIdJob{}
	var enabled bool = true
	this.Enabled = &enabled
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiJobsIdJob) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiJobsIdJob) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiJobsIdJob) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiJobsIdJob) SetName(v string) {
	o.Name = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiJobsIdJob) GetLabels() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiJobsIdJob) GetLabelsOk() (*[]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return &o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *ApiJobsIdJob) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *ApiJobsIdJob) SetLabels(v []string) {
	o.Labels = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ApiJobsIdJob) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiJobsIdJob) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ApiJobsIdJob) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ApiJobsIdJob) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetTask returns the Task field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiJobsIdJob) GetTask() ApiJobsIdJobTask {
	if o == nil || o.Task.Get() == nil {
		var ret ApiJobsIdJobTask
		return ret
	}
	return *o.Task.Get()
}

// GetTaskOk returns a tuple with the Task field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiJobsIdJob) GetTaskOk() (*ApiJobsIdJobTask, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Task.Get(), o.Task.IsSet()
}

// HasTask returns a boolean if a field has been set.
func (o *ApiJobsIdJob) HasTask() bool {
	if o != nil && o.Task.IsSet() {
		return true
	}

	return false
}

// SetTask gets a reference to the given NullableApiJobsIdJobTask and assigns it to the Task field.
func (o *ApiJobsIdJob) SetTask(v ApiJobsIdJobTask) {
	o.Task.Set(&v)
}
// SetTaskNil sets the value for Task to be an explicit nil
func (o *ApiJobsIdJob) SetTaskNil() {
	o.Task.Set(nil)
}

// UnsetTask ensures that no value is present for Task, not even an explicit nil
func (o *ApiJobsIdJob) UnsetTask() {
	o.Task.Unset()
}

// GetWorkflow returns the Workflow field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiJobsIdJob) GetWorkflow() ApiJobsIdJobTask {
	if o == nil || o.Workflow.Get() == nil {
		var ret ApiJobsIdJobTask
		return ret
	}
	return *o.Workflow.Get()
}

// GetWorkflowOk returns a tuple with the Workflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiJobsIdJob) GetWorkflowOk() (*ApiJobsIdJobTask, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Workflow.Get(), o.Workflow.IsSet()
}

// HasWorkflow returns a boolean if a field has been set.
func (o *ApiJobsIdJob) HasWorkflow() bool {
	if o != nil && o.Workflow.IsSet() {
		return true
	}

	return false
}

// SetWorkflow gets a reference to the given NullableApiJobsIdJobTask and assigns it to the Workflow field.
func (o *ApiJobsIdJob) SetWorkflow(v ApiJobsIdJobTask) {
	o.Workflow.Set(&v)
}
// SetWorkflowNil sets the value for Workflow to be an explicit nil
func (o *ApiJobsIdJob) SetWorkflowNil() {
	o.Workflow.Set(nil)
}

// UnsetWorkflow ensures that no value is present for Workflow, not even an explicit nil
func (o *ApiJobsIdJob) UnsetWorkflow() {
	o.Workflow.Unset()
}

// GetScanPath returns the ScanPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiJobsIdJob) GetScanPath() string {
	if o == nil || o.ScanPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.ScanPath.Get()
}

// GetScanPathOk returns a tuple with the ScanPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiJobsIdJob) GetScanPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ScanPath.Get(), o.ScanPath.IsSet()
}

// HasScanPath returns a boolean if a field has been set.
func (o *ApiJobsIdJob) HasScanPath() bool {
	if o != nil && o.ScanPath.IsSet() {
		return true
	}

	return false
}

// SetScanPath gets a reference to the given NullableString and assigns it to the ScanPath field.
func (o *ApiJobsIdJob) SetScanPath(v string) {
	o.ScanPath.Set(&v)
}
// SetScanPathNil sets the value for ScanPath to be an explicit nil
func (o *ApiJobsIdJob) SetScanPathNil() {
	o.ScanPath.Set(nil)
}

// UnsetScanPath ensures that no value is present for ScanPath, not even an explicit nil
func (o *ApiJobsIdJob) UnsetScanPath() {
	o.ScanPath.Unset()
}

// GetSecurityProfile returns the SecurityProfile field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiJobsIdJob) GetSecurityProfile() string {
	if o == nil || o.SecurityProfile.Get() == nil {
		var ret string
		return ret
	}
	return *o.SecurityProfile.Get()
}

// GetSecurityProfileOk returns a tuple with the SecurityProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiJobsIdJob) GetSecurityProfileOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SecurityProfile.Get(), o.SecurityProfile.IsSet()
}

// HasSecurityProfile returns a boolean if a field has been set.
func (o *ApiJobsIdJob) HasSecurityProfile() bool {
	if o != nil && o.SecurityProfile.IsSet() {
		return true
	}

	return false
}

// SetSecurityProfile gets a reference to the given NullableString and assigns it to the SecurityProfile field.
func (o *ApiJobsIdJob) SetSecurityProfile(v string) {
	o.SecurityProfile.Set(&v)
}
// SetSecurityProfileNil sets the value for SecurityProfile to be an explicit nil
func (o *ApiJobsIdJob) SetSecurityProfileNil() {
	o.SecurityProfile.Set(nil)
}

// UnsetSecurityProfile ensures that no value is present for SecurityProfile, not even an explicit nil
func (o *ApiJobsIdJob) UnsetSecurityProfile() {
	o.SecurityProfile.Unset()
}

// GetTargetType returns the TargetType field value if set, zero value otherwise.
func (o *ApiJobsIdJob) GetTargetType() string {
	if o == nil || o.TargetType == nil {
		var ret string
		return ret
	}
	return *o.TargetType
}

// GetTargetTypeOk returns a tuple with the TargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiJobsIdJob) GetTargetTypeOk() (*string, bool) {
	if o == nil || o.TargetType == nil {
		return nil, false
	}
	return o.TargetType, true
}

// HasTargetType returns a boolean if a field has been set.
func (o *ApiJobsIdJob) HasTargetType() bool {
	if o != nil && o.TargetType != nil {
		return true
	}

	return false
}

// SetTargetType gets a reference to the given string and assigns it to the TargetType field.
func (o *ApiJobsIdJob) SetTargetType(v string) {
	o.TargetType = &v
}

// GetTargets returns the Targets field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiJobsIdJob) GetTargets() []ApiJobsIdJobTargets {
	if o == nil  {
		var ret []ApiJobsIdJobTargets
		return ret
	}
	return o.Targets
}

// GetTargetsOk returns a tuple with the Targets field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiJobsIdJob) GetTargetsOk() (*[]ApiJobsIdJobTargets, bool) {
	if o == nil || o.Targets == nil {
		return nil, false
	}
	return &o.Targets, true
}

// HasTargets returns a boolean if a field has been set.
func (o *ApiJobsIdJob) HasTargets() bool {
	if o != nil && o.Targets != nil {
		return true
	}

	return false
}

// SetTargets gets a reference to the given []ApiJobsIdJobTargets and assigns it to the Targets field.
func (o *ApiJobsIdJob) SetTargets(v []ApiJobsIdJobTargets) {
	o.Targets = v
}

// GetInstanceLabel returns the InstanceLabel field value if set, zero value otherwise.
func (o *ApiJobsIdJob) GetInstanceLabel() string {
	if o == nil || o.InstanceLabel == nil {
		var ret string
		return ret
	}
	return *o.InstanceLabel
}

// GetInstanceLabelOk returns a tuple with the InstanceLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiJobsIdJob) GetInstanceLabelOk() (*string, bool) {
	if o == nil || o.InstanceLabel == nil {
		return nil, false
	}
	return o.InstanceLabel, true
}

// HasInstanceLabel returns a boolean if a field has been set.
func (o *ApiJobsIdJob) HasInstanceLabel() bool {
	if o != nil && o.InstanceLabel != nil {
		return true
	}

	return false
}

// SetInstanceLabel gets a reference to the given string and assigns it to the InstanceLabel field.
func (o *ApiJobsIdJob) SetInstanceLabel(v string) {
	o.InstanceLabel = &v
}

// GetServerLabel returns the ServerLabel field value if set, zero value otherwise.
func (o *ApiJobsIdJob) GetServerLabel() string {
	if o == nil || o.ServerLabel == nil {
		var ret string
		return ret
	}
	return *o.ServerLabel
}

// GetServerLabelOk returns a tuple with the ServerLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiJobsIdJob) GetServerLabelOk() (*string, bool) {
	if o == nil || o.ServerLabel == nil {
		return nil, false
	}
	return o.ServerLabel, true
}

// HasServerLabel returns a boolean if a field has been set.
func (o *ApiJobsIdJob) HasServerLabel() bool {
	if o != nil && o.ServerLabel != nil {
		return true
	}

	return false
}

// SetServerLabel gets a reference to the given string and assigns it to the ServerLabel field.
func (o *ApiJobsIdJob) SetServerLabel(v string) {
	o.ServerLabel = &v
}

// GetScheduleMode returns the ScheduleMode field value if set, zero value otherwise.
func (o *ApiJobsIdJob) GetScheduleMode() OneOfstringlong {
	if o == nil || o.ScheduleMode == nil {
		var ret OneOfstringlong
		return ret
	}
	return *o.ScheduleMode
}

// GetScheduleModeOk returns a tuple with the ScheduleMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiJobsIdJob) GetScheduleModeOk() (*OneOfstringlong, bool) {
	if o == nil || o.ScheduleMode == nil {
		return nil, false
	}
	return o.ScheduleMode, true
}

// HasScheduleMode returns a boolean if a field has been set.
func (o *ApiJobsIdJob) HasScheduleMode() bool {
	if o != nil && o.ScheduleMode != nil {
		return true
	}

	return false
}

// SetScheduleMode gets a reference to the given OneOfstringlong and assigns it to the ScheduleMode field.
func (o *ApiJobsIdJob) SetScheduleMode(v OneOfstringlong) {
	o.ScheduleMode = &v
}

// GetCustomOptions returns the CustomOptions field value if set, zero value otherwise.
func (o *ApiJobsIdJob) GetCustomOptions() map[string]interface{} {
	if o == nil || o.CustomOptions == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.CustomOptions
}

// GetCustomOptionsOk returns a tuple with the CustomOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiJobsIdJob) GetCustomOptionsOk() (*map[string]interface{}, bool) {
	if o == nil || o.CustomOptions == nil {
		return nil, false
	}
	return o.CustomOptions, true
}

// HasCustomOptions returns a boolean if a field has been set.
func (o *ApiJobsIdJob) HasCustomOptions() bool {
	if o != nil && o.CustomOptions != nil {
		return true
	}

	return false
}

// SetCustomOptions gets a reference to the given map[string]interface{} and assigns it to the CustomOptions field.
func (o *ApiJobsIdJob) SetCustomOptions(v map[string]interface{}) {
	o.CustomOptions = &v
}

// GetCustomConfig returns the CustomConfig field value if set, zero value otherwise.
func (o *ApiJobsIdJob) GetCustomConfig() string {
	if o == nil || o.CustomConfig == nil {
		var ret string
		return ret
	}
	return *o.CustomConfig
}

// GetCustomConfigOk returns a tuple with the CustomConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiJobsIdJob) GetCustomConfigOk() (*string, bool) {
	if o == nil || o.CustomConfig == nil {
		return nil, false
	}
	return o.CustomConfig, true
}

// HasCustomConfig returns a boolean if a field has been set.
func (o *ApiJobsIdJob) HasCustomConfig() bool {
	if o != nil && o.CustomConfig != nil {
		return true
	}

	return false
}

// SetCustomConfig gets a reference to the given string and assigns it to the CustomConfig field.
func (o *ApiJobsIdJob) SetCustomConfig(v string) {
	o.CustomConfig = &v
}

// GetDateTime returns the DateTime field value if set, zero value otherwise.
func (o *ApiJobsIdJob) GetDateTime() time.Time {
	if o == nil || o.DateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTime
}

// GetDateTimeOk returns a tuple with the DateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiJobsIdJob) GetDateTimeOk() (*time.Time, bool) {
	if o == nil || o.DateTime == nil {
		return nil, false
	}
	return o.DateTime, true
}

// HasDateTime returns a boolean if a field has been set.
func (o *ApiJobsIdJob) HasDateTime() bool {
	if o != nil && o.DateTime != nil {
		return true
	}

	return false
}

// SetDateTime gets a reference to the given time.Time and assigns it to the DateTime field.
func (o *ApiJobsIdJob) SetDateTime(v time.Time) {
	o.DateTime = &v
}

// GetRun returns the Run field value if set, zero value otherwise.
func (o *ApiJobsIdJob) GetRun() bool {
	if o == nil || o.Run == nil {
		var ret bool
		return ret
	}
	return *o.Run
}

// GetRunOk returns a tuple with the Run field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiJobsIdJob) GetRunOk() (*bool, bool) {
	if o == nil || o.Run == nil {
		return nil, false
	}
	return o.Run, true
}

// HasRun returns a boolean if a field has been set.
func (o *ApiJobsIdJob) HasRun() bool {
	if o != nil && o.Run != nil {
		return true
	}

	return false
}

// SetRun gets a reference to the given bool and assigns it to the Run field.
func (o *ApiJobsIdJob) SetRun(v bool) {
	o.Run = &v
}

func (o ApiJobsIdJob) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Task.IsSet() {
		toSerialize["task"] = o.Task.Get()
	}
	if o.Workflow.IsSet() {
		toSerialize["workflow"] = o.Workflow.Get()
	}
	if o.ScanPath.IsSet() {
		toSerialize["scanPath"] = o.ScanPath.Get()
	}
	if o.SecurityProfile.IsSet() {
		toSerialize["securityProfile"] = o.SecurityProfile.Get()
	}
	if o.TargetType != nil {
		toSerialize["targetType"] = o.TargetType
	}
	if o.Targets != nil {
		toSerialize["targets"] = o.Targets
	}
	if o.InstanceLabel != nil {
		toSerialize["instanceLabel"] = o.InstanceLabel
	}
	if o.ServerLabel != nil {
		toSerialize["serverLabel"] = o.ServerLabel
	}
	if o.ScheduleMode != nil {
		toSerialize["scheduleMode"] = o.ScheduleMode
	}
	if o.CustomOptions != nil {
		toSerialize["customOptions"] = o.CustomOptions
	}
	if o.CustomConfig != nil {
		toSerialize["customConfig"] = o.CustomConfig
	}
	if o.DateTime != nil {
		toSerialize["dateTime"] = o.DateTime
	}
	if o.Run != nil {
		toSerialize["run"] = o.Run
	}
	return json.Marshal(toSerialize)
}

type NullableApiJobsIdJob struct {
	value *ApiJobsIdJob
	isSet bool
}

func (v NullableApiJobsIdJob) Get() *ApiJobsIdJob {
	return v.value
}

func (v *NullableApiJobsIdJob) Set(val *ApiJobsIdJob) {
	v.value = val
	v.isSet = true
}

func (v NullableApiJobsIdJob) IsSet() bool {
	return v.isSet
}

func (v *NullableApiJobsIdJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiJobsIdJob(val *ApiJobsIdJob) *NullableApiJobsIdJob {
	return &NullableApiJobsIdJob{value: val, isSet: true}
}

func (v NullableApiJobsIdJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiJobsIdJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


