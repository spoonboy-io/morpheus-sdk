/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// NetworkRouterNat struct for NetworkRouterNat
type NetworkRouterNat struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	SourceNetwork *string `json:"sourceNetwork,omitempty"`
	DestinationNetwork NullableString `json:"destinationNetwork,omitempty"`
	TranslatedNetwork *string `json:"translatedNetwork,omitempty"`
	SourcePorts NullableString `json:"sourcePorts,omitempty"`
	DestinationPorts NullableString `json:"destinationPorts,omitempty"`
	TranslatedPorts NullableString `json:"translatedPorts,omitempty"`
	Priority *int32 `json:"priority,omitempty"`
	Protocol NullableString `json:"protocol,omitempty"`
	MatchIpv6DestinationPrefix NullableString `json:"matchIpv6DestinationPrefix,omitempty"`
	TranslatedIpv4SourcePrefix NullableString `json:"translatedIpv4SourcePrefix,omitempty"`
	RefType NullableString `json:"refType,omitempty"`
	RefId NullableString `json:"refId,omitempty"`
	SyncSource *string `json:"syncSource,omitempty"`
	InternalId NullableString `json:"internalId,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	ProviderId *string `json:"providerId,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
}

// NewNetworkRouterNat instantiates a new NetworkRouterNat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkRouterNat() *NetworkRouterNat {
	this := NetworkRouterNat{}
	return &this
}

// NewNetworkRouterNatWithDefaults instantiates a new NetworkRouterNat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkRouterNatWithDefaults() *NetworkRouterNat {
	this := NetworkRouterNat{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NetworkRouterNat) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterNat) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *NetworkRouterNat) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NetworkRouterNat) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterNat) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NetworkRouterNat) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *NetworkRouterNat) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterNat) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *NetworkRouterNat) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *NetworkRouterNat) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterNat) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *NetworkRouterNat) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetSourceNetwork returns the SourceNetwork field value if set, zero value otherwise.
func (o *NetworkRouterNat) GetSourceNetwork() string {
	if o == nil || o.SourceNetwork == nil {
		var ret string
		return ret
	}
	return *o.SourceNetwork
}

// GetSourceNetworkOk returns a tuple with the SourceNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterNat) GetSourceNetworkOk() (*string, bool) {
	if o == nil || o.SourceNetwork == nil {
		return nil, false
	}
	return o.SourceNetwork, true
}

// HasSourceNetwork returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasSourceNetwork() bool {
	if o != nil && o.SourceNetwork != nil {
		return true
	}

	return false
}

// SetSourceNetwork gets a reference to the given string and assigns it to the SourceNetwork field.
func (o *NetworkRouterNat) SetSourceNetwork(v string) {
	o.SourceNetwork = &v
}

// GetDestinationNetwork returns the DestinationNetwork field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterNat) GetDestinationNetwork() string {
	if o == nil || o.DestinationNetwork.Get() == nil {
		var ret string
		return ret
	}
	return *o.DestinationNetwork.Get()
}

// GetDestinationNetworkOk returns a tuple with the DestinationNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterNat) GetDestinationNetworkOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DestinationNetwork.Get(), o.DestinationNetwork.IsSet()
}

// HasDestinationNetwork returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasDestinationNetwork() bool {
	if o != nil && o.DestinationNetwork.IsSet() {
		return true
	}

	return false
}

// SetDestinationNetwork gets a reference to the given NullableString and assigns it to the DestinationNetwork field.
func (o *NetworkRouterNat) SetDestinationNetwork(v string) {
	o.DestinationNetwork.Set(&v)
}
// SetDestinationNetworkNil sets the value for DestinationNetwork to be an explicit nil
func (o *NetworkRouterNat) SetDestinationNetworkNil() {
	o.DestinationNetwork.Set(nil)
}

// UnsetDestinationNetwork ensures that no value is present for DestinationNetwork, not even an explicit nil
func (o *NetworkRouterNat) UnsetDestinationNetwork() {
	o.DestinationNetwork.Unset()
}

// GetTranslatedNetwork returns the TranslatedNetwork field value if set, zero value otherwise.
func (o *NetworkRouterNat) GetTranslatedNetwork() string {
	if o == nil || o.TranslatedNetwork == nil {
		var ret string
		return ret
	}
	return *o.TranslatedNetwork
}

// GetTranslatedNetworkOk returns a tuple with the TranslatedNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterNat) GetTranslatedNetworkOk() (*string, bool) {
	if o == nil || o.TranslatedNetwork == nil {
		return nil, false
	}
	return o.TranslatedNetwork, true
}

// HasTranslatedNetwork returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasTranslatedNetwork() bool {
	if o != nil && o.TranslatedNetwork != nil {
		return true
	}

	return false
}

// SetTranslatedNetwork gets a reference to the given string and assigns it to the TranslatedNetwork field.
func (o *NetworkRouterNat) SetTranslatedNetwork(v string) {
	o.TranslatedNetwork = &v
}

// GetSourcePorts returns the SourcePorts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterNat) GetSourcePorts() string {
	if o == nil || o.SourcePorts.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourcePorts.Get()
}

// GetSourcePortsOk returns a tuple with the SourcePorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterNat) GetSourcePortsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourcePorts.Get(), o.SourcePorts.IsSet()
}

// HasSourcePorts returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasSourcePorts() bool {
	if o != nil && o.SourcePorts.IsSet() {
		return true
	}

	return false
}

// SetSourcePorts gets a reference to the given NullableString and assigns it to the SourcePorts field.
func (o *NetworkRouterNat) SetSourcePorts(v string) {
	o.SourcePorts.Set(&v)
}
// SetSourcePortsNil sets the value for SourcePorts to be an explicit nil
func (o *NetworkRouterNat) SetSourcePortsNil() {
	o.SourcePorts.Set(nil)
}

// UnsetSourcePorts ensures that no value is present for SourcePorts, not even an explicit nil
func (o *NetworkRouterNat) UnsetSourcePorts() {
	o.SourcePorts.Unset()
}

// GetDestinationPorts returns the DestinationPorts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterNat) GetDestinationPorts() string {
	if o == nil || o.DestinationPorts.Get() == nil {
		var ret string
		return ret
	}
	return *o.DestinationPorts.Get()
}

// GetDestinationPortsOk returns a tuple with the DestinationPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterNat) GetDestinationPortsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DestinationPorts.Get(), o.DestinationPorts.IsSet()
}

// HasDestinationPorts returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasDestinationPorts() bool {
	if o != nil && o.DestinationPorts.IsSet() {
		return true
	}

	return false
}

// SetDestinationPorts gets a reference to the given NullableString and assigns it to the DestinationPorts field.
func (o *NetworkRouterNat) SetDestinationPorts(v string) {
	o.DestinationPorts.Set(&v)
}
// SetDestinationPortsNil sets the value for DestinationPorts to be an explicit nil
func (o *NetworkRouterNat) SetDestinationPortsNil() {
	o.DestinationPorts.Set(nil)
}

// UnsetDestinationPorts ensures that no value is present for DestinationPorts, not even an explicit nil
func (o *NetworkRouterNat) UnsetDestinationPorts() {
	o.DestinationPorts.Unset()
}

// GetTranslatedPorts returns the TranslatedPorts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterNat) GetTranslatedPorts() string {
	if o == nil || o.TranslatedPorts.Get() == nil {
		var ret string
		return ret
	}
	return *o.TranslatedPorts.Get()
}

// GetTranslatedPortsOk returns a tuple with the TranslatedPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterNat) GetTranslatedPortsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TranslatedPorts.Get(), o.TranslatedPorts.IsSet()
}

// HasTranslatedPorts returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasTranslatedPorts() bool {
	if o != nil && o.TranslatedPorts.IsSet() {
		return true
	}

	return false
}

// SetTranslatedPorts gets a reference to the given NullableString and assigns it to the TranslatedPorts field.
func (o *NetworkRouterNat) SetTranslatedPorts(v string) {
	o.TranslatedPorts.Set(&v)
}
// SetTranslatedPortsNil sets the value for TranslatedPorts to be an explicit nil
func (o *NetworkRouterNat) SetTranslatedPortsNil() {
	o.TranslatedPorts.Set(nil)
}

// UnsetTranslatedPorts ensures that no value is present for TranslatedPorts, not even an explicit nil
func (o *NetworkRouterNat) UnsetTranslatedPorts() {
	o.TranslatedPorts.Unset()
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *NetworkRouterNat) GetPriority() int32 {
	if o == nil || o.Priority == nil {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterNat) GetPriorityOk() (*int32, bool) {
	if o == nil || o.Priority == nil {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasPriority() bool {
	if o != nil && o.Priority != nil {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *NetworkRouterNat) SetPriority(v int32) {
	o.Priority = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterNat) GetProtocol() string {
	if o == nil || o.Protocol.Get() == nil {
		var ret string
		return ret
	}
	return *o.Protocol.Get()
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterNat) GetProtocolOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Protocol.Get(), o.Protocol.IsSet()
}

// HasProtocol returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasProtocol() bool {
	if o != nil && o.Protocol.IsSet() {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given NullableString and assigns it to the Protocol field.
func (o *NetworkRouterNat) SetProtocol(v string) {
	o.Protocol.Set(&v)
}
// SetProtocolNil sets the value for Protocol to be an explicit nil
func (o *NetworkRouterNat) SetProtocolNil() {
	o.Protocol.Set(nil)
}

// UnsetProtocol ensures that no value is present for Protocol, not even an explicit nil
func (o *NetworkRouterNat) UnsetProtocol() {
	o.Protocol.Unset()
}

// GetMatchIpv6DestinationPrefix returns the MatchIpv6DestinationPrefix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterNat) GetMatchIpv6DestinationPrefix() string {
	if o == nil || o.MatchIpv6DestinationPrefix.Get() == nil {
		var ret string
		return ret
	}
	return *o.MatchIpv6DestinationPrefix.Get()
}

// GetMatchIpv6DestinationPrefixOk returns a tuple with the MatchIpv6DestinationPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterNat) GetMatchIpv6DestinationPrefixOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MatchIpv6DestinationPrefix.Get(), o.MatchIpv6DestinationPrefix.IsSet()
}

// HasMatchIpv6DestinationPrefix returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasMatchIpv6DestinationPrefix() bool {
	if o != nil && o.MatchIpv6DestinationPrefix.IsSet() {
		return true
	}

	return false
}

// SetMatchIpv6DestinationPrefix gets a reference to the given NullableString and assigns it to the MatchIpv6DestinationPrefix field.
func (o *NetworkRouterNat) SetMatchIpv6DestinationPrefix(v string) {
	o.MatchIpv6DestinationPrefix.Set(&v)
}
// SetMatchIpv6DestinationPrefixNil sets the value for MatchIpv6DestinationPrefix to be an explicit nil
func (o *NetworkRouterNat) SetMatchIpv6DestinationPrefixNil() {
	o.MatchIpv6DestinationPrefix.Set(nil)
}

// UnsetMatchIpv6DestinationPrefix ensures that no value is present for MatchIpv6DestinationPrefix, not even an explicit nil
func (o *NetworkRouterNat) UnsetMatchIpv6DestinationPrefix() {
	o.MatchIpv6DestinationPrefix.Unset()
}

// GetTranslatedIpv4SourcePrefix returns the TranslatedIpv4SourcePrefix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterNat) GetTranslatedIpv4SourcePrefix() string {
	if o == nil || o.TranslatedIpv4SourcePrefix.Get() == nil {
		var ret string
		return ret
	}
	return *o.TranslatedIpv4SourcePrefix.Get()
}

// GetTranslatedIpv4SourcePrefixOk returns a tuple with the TranslatedIpv4SourcePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterNat) GetTranslatedIpv4SourcePrefixOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TranslatedIpv4SourcePrefix.Get(), o.TranslatedIpv4SourcePrefix.IsSet()
}

// HasTranslatedIpv4SourcePrefix returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasTranslatedIpv4SourcePrefix() bool {
	if o != nil && o.TranslatedIpv4SourcePrefix.IsSet() {
		return true
	}

	return false
}

// SetTranslatedIpv4SourcePrefix gets a reference to the given NullableString and assigns it to the TranslatedIpv4SourcePrefix field.
func (o *NetworkRouterNat) SetTranslatedIpv4SourcePrefix(v string) {
	o.TranslatedIpv4SourcePrefix.Set(&v)
}
// SetTranslatedIpv4SourcePrefixNil sets the value for TranslatedIpv4SourcePrefix to be an explicit nil
func (o *NetworkRouterNat) SetTranslatedIpv4SourcePrefixNil() {
	o.TranslatedIpv4SourcePrefix.Set(nil)
}

// UnsetTranslatedIpv4SourcePrefix ensures that no value is present for TranslatedIpv4SourcePrefix, not even an explicit nil
func (o *NetworkRouterNat) UnsetTranslatedIpv4SourcePrefix() {
	o.TranslatedIpv4SourcePrefix.Unset()
}

// GetRefType returns the RefType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterNat) GetRefType() string {
	if o == nil || o.RefType.Get() == nil {
		var ret string
		return ret
	}
	return *o.RefType.Get()
}

// GetRefTypeOk returns a tuple with the RefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterNat) GetRefTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefType.Get(), o.RefType.IsSet()
}

// HasRefType returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasRefType() bool {
	if o != nil && o.RefType.IsSet() {
		return true
	}

	return false
}

// SetRefType gets a reference to the given NullableString and assigns it to the RefType field.
func (o *NetworkRouterNat) SetRefType(v string) {
	o.RefType.Set(&v)
}
// SetRefTypeNil sets the value for RefType to be an explicit nil
func (o *NetworkRouterNat) SetRefTypeNil() {
	o.RefType.Set(nil)
}

// UnsetRefType ensures that no value is present for RefType, not even an explicit nil
func (o *NetworkRouterNat) UnsetRefType() {
	o.RefType.Unset()
}

// GetRefId returns the RefId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterNat) GetRefId() string {
	if o == nil || o.RefId.Get() == nil {
		var ret string
		return ret
	}
	return *o.RefId.Get()
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterNat) GetRefIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefId.Get(), o.RefId.IsSet()
}

// HasRefId returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasRefId() bool {
	if o != nil && o.RefId.IsSet() {
		return true
	}

	return false
}

// SetRefId gets a reference to the given NullableString and assigns it to the RefId field.
func (o *NetworkRouterNat) SetRefId(v string) {
	o.RefId.Set(&v)
}
// SetRefIdNil sets the value for RefId to be an explicit nil
func (o *NetworkRouterNat) SetRefIdNil() {
	o.RefId.Set(nil)
}

// UnsetRefId ensures that no value is present for RefId, not even an explicit nil
func (o *NetworkRouterNat) UnsetRefId() {
	o.RefId.Unset()
}

// GetSyncSource returns the SyncSource field value if set, zero value otherwise.
func (o *NetworkRouterNat) GetSyncSource() string {
	if o == nil || o.SyncSource == nil {
		var ret string
		return ret
	}
	return *o.SyncSource
}

// GetSyncSourceOk returns a tuple with the SyncSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterNat) GetSyncSourceOk() (*string, bool) {
	if o == nil || o.SyncSource == nil {
		return nil, false
	}
	return o.SyncSource, true
}

// HasSyncSource returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasSyncSource() bool {
	if o != nil && o.SyncSource != nil {
		return true
	}

	return false
}

// SetSyncSource gets a reference to the given string and assigns it to the SyncSource field.
func (o *NetworkRouterNat) SetSyncSource(v string) {
	o.SyncSource = &v
}

// GetInternalId returns the InternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterNat) GetInternalId() string {
	if o == nil || o.InternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.InternalId.Get()
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterNat) GetInternalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InternalId.Get(), o.InternalId.IsSet()
}

// HasInternalId returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasInternalId() bool {
	if o != nil && o.InternalId.IsSet() {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given NullableString and assigns it to the InternalId field.
func (o *NetworkRouterNat) SetInternalId(v string) {
	o.InternalId.Set(&v)
}
// SetInternalIdNil sets the value for InternalId to be an explicit nil
func (o *NetworkRouterNat) SetInternalIdNil() {
	o.InternalId.Set(nil)
}

// UnsetInternalId ensures that no value is present for InternalId, not even an explicit nil
func (o *NetworkRouterNat) UnsetInternalId() {
	o.InternalId.Unset()
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *NetworkRouterNat) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterNat) GetExternalIdOk() (*string, bool) {
	if o == nil || o.ExternalId == nil {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasExternalId() bool {
	if o != nil && o.ExternalId != nil {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *NetworkRouterNat) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetProviderId returns the ProviderId field value if set, zero value otherwise.
func (o *NetworkRouterNat) GetProviderId() string {
	if o == nil || o.ProviderId == nil {
		var ret string
		return ret
	}
	return *o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterNat) GetProviderIdOk() (*string, bool) {
	if o == nil || o.ProviderId == nil {
		return nil, false
	}
	return o.ProviderId, true
}

// HasProviderId returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasProviderId() bool {
	if o != nil && o.ProviderId != nil {
		return true
	}

	return false
}

// SetProviderId gets a reference to the given string and assigns it to the ProviderId field.
func (o *NetworkRouterNat) SetProviderId(v string) {
	o.ProviderId = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *NetworkRouterNat) GetDateCreated() time.Time {
	if o == nil || o.DateCreated == nil {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterNat) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *NetworkRouterNat) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *NetworkRouterNat) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterNat) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *NetworkRouterNat) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *NetworkRouterNat) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

func (o NetworkRouterNat) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.SourceNetwork != nil {
		toSerialize["sourceNetwork"] = o.SourceNetwork
	}
	if o.DestinationNetwork.IsSet() {
		toSerialize["destinationNetwork"] = o.DestinationNetwork.Get()
	}
	if o.TranslatedNetwork != nil {
		toSerialize["translatedNetwork"] = o.TranslatedNetwork
	}
	if o.SourcePorts.IsSet() {
		toSerialize["sourcePorts"] = o.SourcePorts.Get()
	}
	if o.DestinationPorts.IsSet() {
		toSerialize["destinationPorts"] = o.DestinationPorts.Get()
	}
	if o.TranslatedPorts.IsSet() {
		toSerialize["translatedPorts"] = o.TranslatedPorts.Get()
	}
	if o.Priority != nil {
		toSerialize["priority"] = o.Priority
	}
	if o.Protocol.IsSet() {
		toSerialize["protocol"] = o.Protocol.Get()
	}
	if o.MatchIpv6DestinationPrefix.IsSet() {
		toSerialize["matchIpv6DestinationPrefix"] = o.MatchIpv6DestinationPrefix.Get()
	}
	if o.TranslatedIpv4SourcePrefix.IsSet() {
		toSerialize["translatedIpv4SourcePrefix"] = o.TranslatedIpv4SourcePrefix.Get()
	}
	if o.RefType.IsSet() {
		toSerialize["refType"] = o.RefType.Get()
	}
	if o.RefId.IsSet() {
		toSerialize["refId"] = o.RefId.Get()
	}
	if o.SyncSource != nil {
		toSerialize["syncSource"] = o.SyncSource
	}
	if o.InternalId.IsSet() {
		toSerialize["internalId"] = o.InternalId.Get()
	}
	if o.ExternalId != nil {
		toSerialize["externalId"] = o.ExternalId
	}
	if o.ProviderId != nil {
		toSerialize["providerId"] = o.ProviderId
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkRouterNat struct {
	value *NetworkRouterNat
	isSet bool
}

func (v NullableNetworkRouterNat) Get() *NetworkRouterNat {
	return v.value
}

func (v *NullableNetworkRouterNat) Set(val *NetworkRouterNat) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkRouterNat) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkRouterNat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkRouterNat(val *NetworkRouterNat) *NullableNetworkRouterNat {
	return &NullableNetworkRouterNat{value: val, isSet: true}
}

func (v NullableNetworkRouterNat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkRouterNat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


