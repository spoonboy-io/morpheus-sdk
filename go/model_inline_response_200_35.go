/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20035 struct for InlineResponse20035
type InlineResponse20035 struct {
	ContainerIds *[]int64 `json:"containerIds,omitempty"`
	Actions *[]InlineResponse20035Actions `json:"actions,omitempty"`
}

// NewInlineResponse20035 instantiates a new InlineResponse20035 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20035() *InlineResponse20035 {
	this := InlineResponse20035{}
	return &this
}

// NewInlineResponse20035WithDefaults instantiates a new InlineResponse20035 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20035WithDefaults() *InlineResponse20035 {
	this := InlineResponse20035{}
	return &this
}

// GetContainerIds returns the ContainerIds field value if set, zero value otherwise.
func (o *InlineResponse20035) GetContainerIds() []int64 {
	if o == nil || o.ContainerIds == nil {
		var ret []int64
		return ret
	}
	return *o.ContainerIds
}

// GetContainerIdsOk returns a tuple with the ContainerIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20035) GetContainerIdsOk() (*[]int64, bool) {
	if o == nil || o.ContainerIds == nil {
		return nil, false
	}
	return o.ContainerIds, true
}

// HasContainerIds returns a boolean if a field has been set.
func (o *InlineResponse20035) HasContainerIds() bool {
	if o != nil && o.ContainerIds != nil {
		return true
	}

	return false
}

// SetContainerIds gets a reference to the given []int64 and assigns it to the ContainerIds field.
func (o *InlineResponse20035) SetContainerIds(v []int64) {
	o.ContainerIds = &v
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *InlineResponse20035) GetActions() []InlineResponse20035Actions {
	if o == nil || o.Actions == nil {
		var ret []InlineResponse20035Actions
		return ret
	}
	return *o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20035) GetActionsOk() (*[]InlineResponse20035Actions, bool) {
	if o == nil || o.Actions == nil {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *InlineResponse20035) HasActions() bool {
	if o != nil && o.Actions != nil {
		return true
	}

	return false
}

// SetActions gets a reference to the given []InlineResponse20035Actions and assigns it to the Actions field.
func (o *InlineResponse20035) SetActions(v []InlineResponse20035Actions) {
	o.Actions = &v
}

func (o InlineResponse20035) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContainerIds != nil {
		toSerialize["containerIds"] = o.ContainerIds
	}
	if o.Actions != nil {
		toSerialize["actions"] = o.Actions
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20035 struct {
	value *InlineResponse20035
	isSet bool
}

func (v NullableInlineResponse20035) Get() *InlineResponse20035 {
	return v.value
}

func (v *NullableInlineResponse20035) Set(val *InlineResponse20035) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20035) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20035) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20035(val *InlineResponse20035) *NullableInlineResponse20035 {
	return &NullableInlineResponse20035{value: val, isSet: true}
}

func (v NullableInlineResponse20035) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20035) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


