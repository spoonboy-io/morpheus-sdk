/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateExecuteSchedulesRequestSchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateExecuteSchedulesRequestSchedule{}

// UpdateExecuteSchedulesRequestSchedule struct for UpdateExecuteSchedulesRequestSchedule
type UpdateExecuteSchedulesRequestSchedule struct {
	// A name for the execute schedule
	Name *string `json:"name,omitempty"`
	// A description for the execute schedule
	Description *string `json:"description,omitempty"`
	// Type of schedule
	ScheduleType *string `json:"scheduleType,omitempty"`
	// Time Zone eg. America/New_York, Europe/Amsterdam, etc.
	ScheduleTimezone *string `json:"scheduleTimezone,omitempty"`
	// Cron Expression. The default is daily at midnight
	Cron *string `json:"cron,omitempty"`
	// Is enabled
	Enabled *bool `json:"enabled,omitempty"`
}

// NewUpdateExecuteSchedulesRequestSchedule instantiates a new UpdateExecuteSchedulesRequestSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateExecuteSchedulesRequestSchedule() *UpdateExecuteSchedulesRequestSchedule {
	this := UpdateExecuteSchedulesRequestSchedule{}
	var scheduleTimezone string = "UTC"
	this.ScheduleTimezone = &scheduleTimezone
	var cron string = "0 0 * * *"
	this.Cron = &cron
	var enabled bool = true
	this.Enabled = &enabled
	return &this
}

// NewUpdateExecuteSchedulesRequestScheduleWithDefaults instantiates a new UpdateExecuteSchedulesRequestSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateExecuteSchedulesRequestScheduleWithDefaults() *UpdateExecuteSchedulesRequestSchedule {
	this := UpdateExecuteSchedulesRequestSchedule{}
	var scheduleTimezone string = "UTC"
	this.ScheduleTimezone = &scheduleTimezone
	var cron string = "0 0 * * *"
	this.Cron = &cron
	var enabled bool = true
	this.Enabled = &enabled
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateExecuteSchedulesRequestSchedule) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateExecuteSchedulesRequestSchedule) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateExecuteSchedulesRequestSchedule) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateExecuteSchedulesRequestSchedule) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateExecuteSchedulesRequestSchedule) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateExecuteSchedulesRequestSchedule) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateExecuteSchedulesRequestSchedule) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateExecuteSchedulesRequestSchedule) SetDescription(v string) {
	o.Description = &v
}

// GetScheduleType returns the ScheduleType field value if set, zero value otherwise.
func (o *UpdateExecuteSchedulesRequestSchedule) GetScheduleType() string {
	if o == nil || IsNil(o.ScheduleType) {
		var ret string
		return ret
	}
	return *o.ScheduleType
}

// GetScheduleTypeOk returns a tuple with the ScheduleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateExecuteSchedulesRequestSchedule) GetScheduleTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ScheduleType) {
		return nil, false
	}
	return o.ScheduleType, true
}

// HasScheduleType returns a boolean if a field has been set.
func (o *UpdateExecuteSchedulesRequestSchedule) HasScheduleType() bool {
	if o != nil && !IsNil(o.ScheduleType) {
		return true
	}

	return false
}

// SetScheduleType gets a reference to the given string and assigns it to the ScheduleType field.
func (o *UpdateExecuteSchedulesRequestSchedule) SetScheduleType(v string) {
	o.ScheduleType = &v
}

// GetScheduleTimezone returns the ScheduleTimezone field value if set, zero value otherwise.
func (o *UpdateExecuteSchedulesRequestSchedule) GetScheduleTimezone() string {
	if o == nil || IsNil(o.ScheduleTimezone) {
		var ret string
		return ret
	}
	return *o.ScheduleTimezone
}

// GetScheduleTimezoneOk returns a tuple with the ScheduleTimezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateExecuteSchedulesRequestSchedule) GetScheduleTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.ScheduleTimezone) {
		return nil, false
	}
	return o.ScheduleTimezone, true
}

// HasScheduleTimezone returns a boolean if a field has been set.
func (o *UpdateExecuteSchedulesRequestSchedule) HasScheduleTimezone() bool {
	if o != nil && !IsNil(o.ScheduleTimezone) {
		return true
	}

	return false
}

// SetScheduleTimezone gets a reference to the given string and assigns it to the ScheduleTimezone field.
func (o *UpdateExecuteSchedulesRequestSchedule) SetScheduleTimezone(v string) {
	o.ScheduleTimezone = &v
}

// GetCron returns the Cron field value if set, zero value otherwise.
func (o *UpdateExecuteSchedulesRequestSchedule) GetCron() string {
	if o == nil || IsNil(o.Cron) {
		var ret string
		return ret
	}
	return *o.Cron
}

// GetCronOk returns a tuple with the Cron field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateExecuteSchedulesRequestSchedule) GetCronOk() (*string, bool) {
	if o == nil || IsNil(o.Cron) {
		return nil, false
	}
	return o.Cron, true
}

// HasCron returns a boolean if a field has been set.
func (o *UpdateExecuteSchedulesRequestSchedule) HasCron() bool {
	if o != nil && !IsNil(o.Cron) {
		return true
	}

	return false
}

// SetCron gets a reference to the given string and assigns it to the Cron field.
func (o *UpdateExecuteSchedulesRequestSchedule) SetCron(v string) {
	o.Cron = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *UpdateExecuteSchedulesRequestSchedule) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateExecuteSchedulesRequestSchedule) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *UpdateExecuteSchedulesRequestSchedule) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *UpdateExecuteSchedulesRequestSchedule) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o UpdateExecuteSchedulesRequestSchedule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateExecuteSchedulesRequestSchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ScheduleType) {
		toSerialize["scheduleType"] = o.ScheduleType
	}
	if !IsNil(o.ScheduleTimezone) {
		toSerialize["scheduleTimezone"] = o.ScheduleTimezone
	}
	if !IsNil(o.Cron) {
		toSerialize["cron"] = o.Cron
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	return toSerialize, nil
}

type NullableUpdateExecuteSchedulesRequestSchedule struct {
	value *UpdateExecuteSchedulesRequestSchedule
	isSet bool
}

func (v NullableUpdateExecuteSchedulesRequestSchedule) Get() *UpdateExecuteSchedulesRequestSchedule {
	return v.value
}

func (v *NullableUpdateExecuteSchedulesRequestSchedule) Set(val *UpdateExecuteSchedulesRequestSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateExecuteSchedulesRequestSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateExecuteSchedulesRequestSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateExecuteSchedulesRequestSchedule(val *UpdateExecuteSchedulesRequestSchedule) *NullableUpdateExecuteSchedulesRequestSchedule {
	return &NullableUpdateExecuteSchedulesRequestSchedule{value: val, isSet: true}
}

func (v NullableUpdateExecuteSchedulesRequestSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateExecuteSchedulesRequestSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


