/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject245 struct for InlineObject245
type InlineObject245 struct {
	Subnet *ApiSubnetsSubnet `json:"subnet,omitempty"`
	ResourcePermission *ApiSubnetsResourcePermission `json:"resourcePermission,omitempty"`
}

// NewInlineObject245 instantiates a new InlineObject245 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject245() *InlineObject245 {
	this := InlineObject245{}
	return &this
}

// NewInlineObject245WithDefaults instantiates a new InlineObject245 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject245WithDefaults() *InlineObject245 {
	this := InlineObject245{}
	return &this
}

// GetSubnet returns the Subnet field value if set, zero value otherwise.
func (o *InlineObject245) GetSubnet() ApiSubnetsSubnet {
	if o == nil || o.Subnet == nil {
		var ret ApiSubnetsSubnet
		return ret
	}
	return *o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject245) GetSubnetOk() (*ApiSubnetsSubnet, bool) {
	if o == nil || o.Subnet == nil {
		return nil, false
	}
	return o.Subnet, true
}

// HasSubnet returns a boolean if a field has been set.
func (o *InlineObject245) HasSubnet() bool {
	if o != nil && o.Subnet != nil {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given ApiSubnetsSubnet and assigns it to the Subnet field.
func (o *InlineObject245) SetSubnet(v ApiSubnetsSubnet) {
	o.Subnet = &v
}

// GetResourcePermission returns the ResourcePermission field value if set, zero value otherwise.
func (o *InlineObject245) GetResourcePermission() ApiSubnetsResourcePermission {
	if o == nil || o.ResourcePermission == nil {
		var ret ApiSubnetsResourcePermission
		return ret
	}
	return *o.ResourcePermission
}

// GetResourcePermissionOk returns a tuple with the ResourcePermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject245) GetResourcePermissionOk() (*ApiSubnetsResourcePermission, bool) {
	if o == nil || o.ResourcePermission == nil {
		return nil, false
	}
	return o.ResourcePermission, true
}

// HasResourcePermission returns a boolean if a field has been set.
func (o *InlineObject245) HasResourcePermission() bool {
	if o != nil && o.ResourcePermission != nil {
		return true
	}

	return false
}

// SetResourcePermission gets a reference to the given ApiSubnetsResourcePermission and assigns it to the ResourcePermission field.
func (o *InlineObject245) SetResourcePermission(v ApiSubnetsResourcePermission) {
	o.ResourcePermission = &v
}

func (o InlineObject245) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Subnet != nil {
		toSerialize["subnet"] = o.Subnet
	}
	if o.ResourcePermission != nil {
		toSerialize["resourcePermission"] = o.ResourcePermission
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject245 struct {
	value *InlineObject245
	isSet bool
}

func (v NullableInlineObject245) Get() *InlineObject245 {
	return v.value
}

func (v *NullableInlineObject245) Set(val *InlineObject245) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject245) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject245) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject245(val *InlineObject245) *NullableInlineObject245 {
	return &NullableInlineObject245{value: val, isSet: true}
}

func (v NullableInlineObject245) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject245) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


