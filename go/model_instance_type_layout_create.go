/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InstanceTypeLayoutCreate struct for InstanceTypeLayoutCreate
type InstanceTypeLayoutCreate struct {
	// Layout name
	Name string `json:"name"`
	Labels []string `json:"labels,omitempty"`
	// Version of the layout
	InstanceVersion string `json:"instanceVersion"`
	// Layout description
	Description *string `json:"description,omitempty"`
	// Can be used to enable / disable the creatability of the layout.
	Creatable *bool `json:"creatable,omitempty"`
	// Provision type code
	ProvisionTypeCode string `json:"provisionTypeCode"`
	// Memory requirement in megabytes
	MemoryRequirement *string `json:"memoryRequirement,omitempty"`
	// Can be used to enable / disable the horizontal scaling.
	HasAutoScale *bool `json:"hasAutoScale,omitempty"`
	// Can be used to enable / disable the supports convert to managed.
	SupportsConvertToManaged *bool `json:"supportsConvertToManaged,omitempty"`
	// Array of layout node type IDs
	ContainerTypes *[]int64 `json:"containerTypes,omitempty"`
	// Array of layout option type IDs
	OptionTypes *[]int64 `json:"optionTypes,omitempty"`
	// Array of layout spec template IDs
	SpecTemplates *[]int64 `json:"specTemplates,omitempty"`
	// The environmentVariables parameter is array of env objects
	EnvironmentVariables *[]ClusterLayoutCreateEnvironmentVariables `json:"environmentVariables,omitempty"`
	// Array of price set objects
	PriceSets *[]InstanceTypeCreatePriceSets `json:"priceSets,omitempty"`
	Permissions *ApiLibraryLayoutsIdPermissionsInstanceTypeLayoutPermissions `json:"permissions,omitempty"`
}

// NewInstanceTypeLayoutCreate instantiates a new InstanceTypeLayoutCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceTypeLayoutCreate(name string, instanceVersion string, provisionTypeCode string, ) *InstanceTypeLayoutCreate {
	this := InstanceTypeLayoutCreate{}
	this.Name = name
	this.InstanceVersion = instanceVersion
	var creatable bool = true
	this.Creatable = &creatable
	this.ProvisionTypeCode = provisionTypeCode
	var hasAutoScale bool = false
	this.HasAutoScale = &hasAutoScale
	var supportsConvertToManaged bool = false
	this.SupportsConvertToManaged = &supportsConvertToManaged
	return &this
}

// NewInstanceTypeLayoutCreateWithDefaults instantiates a new InstanceTypeLayoutCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceTypeLayoutCreateWithDefaults() *InstanceTypeLayoutCreate {
	this := InstanceTypeLayoutCreate{}
	var creatable bool = true
	this.Creatable = &creatable
	var hasAutoScale bool = false
	this.HasAutoScale = &hasAutoScale
	var supportsConvertToManaged bool = false
	this.SupportsConvertToManaged = &supportsConvertToManaged
	return &this
}

// GetName returns the Name field value
func (o *InstanceTypeLayoutCreate) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InstanceTypeLayoutCreate) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InstanceTypeLayoutCreate) SetName(v string) {
	o.Name = v
}

// GetLabels returns the Labels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstanceTypeLayoutCreate) GetLabels() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceTypeLayoutCreate) GetLabelsOk() (*[]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return &o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *InstanceTypeLayoutCreate) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *InstanceTypeLayoutCreate) SetLabels(v []string) {
	o.Labels = v
}

// GetInstanceVersion returns the InstanceVersion field value
func (o *InstanceTypeLayoutCreate) GetInstanceVersion() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.InstanceVersion
}

// GetInstanceVersionOk returns a tuple with the InstanceVersion field value
// and a boolean to check if the value has been set.
func (o *InstanceTypeLayoutCreate) GetInstanceVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InstanceVersion, true
}

// SetInstanceVersion sets field value
func (o *InstanceTypeLayoutCreate) SetInstanceVersion(v string) {
	o.InstanceVersion = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InstanceTypeLayoutCreate) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTypeLayoutCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InstanceTypeLayoutCreate) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InstanceTypeLayoutCreate) SetDescription(v string) {
	o.Description = &v
}

// GetCreatable returns the Creatable field value if set, zero value otherwise.
func (o *InstanceTypeLayoutCreate) GetCreatable() bool {
	if o == nil || o.Creatable == nil {
		var ret bool
		return ret
	}
	return *o.Creatable
}

// GetCreatableOk returns a tuple with the Creatable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTypeLayoutCreate) GetCreatableOk() (*bool, bool) {
	if o == nil || o.Creatable == nil {
		return nil, false
	}
	return o.Creatable, true
}

// HasCreatable returns a boolean if a field has been set.
func (o *InstanceTypeLayoutCreate) HasCreatable() bool {
	if o != nil && o.Creatable != nil {
		return true
	}

	return false
}

// SetCreatable gets a reference to the given bool and assigns it to the Creatable field.
func (o *InstanceTypeLayoutCreate) SetCreatable(v bool) {
	o.Creatable = &v
}

// GetProvisionTypeCode returns the ProvisionTypeCode field value
func (o *InstanceTypeLayoutCreate) GetProvisionTypeCode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ProvisionTypeCode
}

// GetProvisionTypeCodeOk returns a tuple with the ProvisionTypeCode field value
// and a boolean to check if the value has been set.
func (o *InstanceTypeLayoutCreate) GetProvisionTypeCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProvisionTypeCode, true
}

// SetProvisionTypeCode sets field value
func (o *InstanceTypeLayoutCreate) SetProvisionTypeCode(v string) {
	o.ProvisionTypeCode = v
}

// GetMemoryRequirement returns the MemoryRequirement field value if set, zero value otherwise.
func (o *InstanceTypeLayoutCreate) GetMemoryRequirement() string {
	if o == nil || o.MemoryRequirement == nil {
		var ret string
		return ret
	}
	return *o.MemoryRequirement
}

// GetMemoryRequirementOk returns a tuple with the MemoryRequirement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTypeLayoutCreate) GetMemoryRequirementOk() (*string, bool) {
	if o == nil || o.MemoryRequirement == nil {
		return nil, false
	}
	return o.MemoryRequirement, true
}

// HasMemoryRequirement returns a boolean if a field has been set.
func (o *InstanceTypeLayoutCreate) HasMemoryRequirement() bool {
	if o != nil && o.MemoryRequirement != nil {
		return true
	}

	return false
}

// SetMemoryRequirement gets a reference to the given string and assigns it to the MemoryRequirement field.
func (o *InstanceTypeLayoutCreate) SetMemoryRequirement(v string) {
	o.MemoryRequirement = &v
}

// GetHasAutoScale returns the HasAutoScale field value if set, zero value otherwise.
func (o *InstanceTypeLayoutCreate) GetHasAutoScale() bool {
	if o == nil || o.HasAutoScale == nil {
		var ret bool
		return ret
	}
	return *o.HasAutoScale
}

// GetHasAutoScaleOk returns a tuple with the HasAutoScale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTypeLayoutCreate) GetHasAutoScaleOk() (*bool, bool) {
	if o == nil || o.HasAutoScale == nil {
		return nil, false
	}
	return o.HasAutoScale, true
}

// HasHasAutoScale returns a boolean if a field has been set.
func (o *InstanceTypeLayoutCreate) HasHasAutoScale() bool {
	if o != nil && o.HasAutoScale != nil {
		return true
	}

	return false
}

// SetHasAutoScale gets a reference to the given bool and assigns it to the HasAutoScale field.
func (o *InstanceTypeLayoutCreate) SetHasAutoScale(v bool) {
	o.HasAutoScale = &v
}

// GetSupportsConvertToManaged returns the SupportsConvertToManaged field value if set, zero value otherwise.
func (o *InstanceTypeLayoutCreate) GetSupportsConvertToManaged() bool {
	if o == nil || o.SupportsConvertToManaged == nil {
		var ret bool
		return ret
	}
	return *o.SupportsConvertToManaged
}

// GetSupportsConvertToManagedOk returns a tuple with the SupportsConvertToManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTypeLayoutCreate) GetSupportsConvertToManagedOk() (*bool, bool) {
	if o == nil || o.SupportsConvertToManaged == nil {
		return nil, false
	}
	return o.SupportsConvertToManaged, true
}

// HasSupportsConvertToManaged returns a boolean if a field has been set.
func (o *InstanceTypeLayoutCreate) HasSupportsConvertToManaged() bool {
	if o != nil && o.SupportsConvertToManaged != nil {
		return true
	}

	return false
}

// SetSupportsConvertToManaged gets a reference to the given bool and assigns it to the SupportsConvertToManaged field.
func (o *InstanceTypeLayoutCreate) SetSupportsConvertToManaged(v bool) {
	o.SupportsConvertToManaged = &v
}

// GetContainerTypes returns the ContainerTypes field value if set, zero value otherwise.
func (o *InstanceTypeLayoutCreate) GetContainerTypes() []int64 {
	if o == nil || o.ContainerTypes == nil {
		var ret []int64
		return ret
	}
	return *o.ContainerTypes
}

// GetContainerTypesOk returns a tuple with the ContainerTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTypeLayoutCreate) GetContainerTypesOk() (*[]int64, bool) {
	if o == nil || o.ContainerTypes == nil {
		return nil, false
	}
	return o.ContainerTypes, true
}

// HasContainerTypes returns a boolean if a field has been set.
func (o *InstanceTypeLayoutCreate) HasContainerTypes() bool {
	if o != nil && o.ContainerTypes != nil {
		return true
	}

	return false
}

// SetContainerTypes gets a reference to the given []int64 and assigns it to the ContainerTypes field.
func (o *InstanceTypeLayoutCreate) SetContainerTypes(v []int64) {
	o.ContainerTypes = &v
}

// GetOptionTypes returns the OptionTypes field value if set, zero value otherwise.
func (o *InstanceTypeLayoutCreate) GetOptionTypes() []int64 {
	if o == nil || o.OptionTypes == nil {
		var ret []int64
		return ret
	}
	return *o.OptionTypes
}

// GetOptionTypesOk returns a tuple with the OptionTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTypeLayoutCreate) GetOptionTypesOk() (*[]int64, bool) {
	if o == nil || o.OptionTypes == nil {
		return nil, false
	}
	return o.OptionTypes, true
}

// HasOptionTypes returns a boolean if a field has been set.
func (o *InstanceTypeLayoutCreate) HasOptionTypes() bool {
	if o != nil && o.OptionTypes != nil {
		return true
	}

	return false
}

// SetOptionTypes gets a reference to the given []int64 and assigns it to the OptionTypes field.
func (o *InstanceTypeLayoutCreate) SetOptionTypes(v []int64) {
	o.OptionTypes = &v
}

// GetSpecTemplates returns the SpecTemplates field value if set, zero value otherwise.
func (o *InstanceTypeLayoutCreate) GetSpecTemplates() []int64 {
	if o == nil || o.SpecTemplates == nil {
		var ret []int64
		return ret
	}
	return *o.SpecTemplates
}

// GetSpecTemplatesOk returns a tuple with the SpecTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTypeLayoutCreate) GetSpecTemplatesOk() (*[]int64, bool) {
	if o == nil || o.SpecTemplates == nil {
		return nil, false
	}
	return o.SpecTemplates, true
}

// HasSpecTemplates returns a boolean if a field has been set.
func (o *InstanceTypeLayoutCreate) HasSpecTemplates() bool {
	if o != nil && o.SpecTemplates != nil {
		return true
	}

	return false
}

// SetSpecTemplates gets a reference to the given []int64 and assigns it to the SpecTemplates field.
func (o *InstanceTypeLayoutCreate) SetSpecTemplates(v []int64) {
	o.SpecTemplates = &v
}

// GetEnvironmentVariables returns the EnvironmentVariables field value if set, zero value otherwise.
func (o *InstanceTypeLayoutCreate) GetEnvironmentVariables() []ClusterLayoutCreateEnvironmentVariables {
	if o == nil || o.EnvironmentVariables == nil {
		var ret []ClusterLayoutCreateEnvironmentVariables
		return ret
	}
	return *o.EnvironmentVariables
}

// GetEnvironmentVariablesOk returns a tuple with the EnvironmentVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTypeLayoutCreate) GetEnvironmentVariablesOk() (*[]ClusterLayoutCreateEnvironmentVariables, bool) {
	if o == nil || o.EnvironmentVariables == nil {
		return nil, false
	}
	return o.EnvironmentVariables, true
}

// HasEnvironmentVariables returns a boolean if a field has been set.
func (o *InstanceTypeLayoutCreate) HasEnvironmentVariables() bool {
	if o != nil && o.EnvironmentVariables != nil {
		return true
	}

	return false
}

// SetEnvironmentVariables gets a reference to the given []ClusterLayoutCreateEnvironmentVariables and assigns it to the EnvironmentVariables field.
func (o *InstanceTypeLayoutCreate) SetEnvironmentVariables(v []ClusterLayoutCreateEnvironmentVariables) {
	o.EnvironmentVariables = &v
}

// GetPriceSets returns the PriceSets field value if set, zero value otherwise.
func (o *InstanceTypeLayoutCreate) GetPriceSets() []InstanceTypeCreatePriceSets {
	if o == nil || o.PriceSets == nil {
		var ret []InstanceTypeCreatePriceSets
		return ret
	}
	return *o.PriceSets
}

// GetPriceSetsOk returns a tuple with the PriceSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTypeLayoutCreate) GetPriceSetsOk() (*[]InstanceTypeCreatePriceSets, bool) {
	if o == nil || o.PriceSets == nil {
		return nil, false
	}
	return o.PriceSets, true
}

// HasPriceSets returns a boolean if a field has been set.
func (o *InstanceTypeLayoutCreate) HasPriceSets() bool {
	if o != nil && o.PriceSets != nil {
		return true
	}

	return false
}

// SetPriceSets gets a reference to the given []InstanceTypeCreatePriceSets and assigns it to the PriceSets field.
func (o *InstanceTypeLayoutCreate) SetPriceSets(v []InstanceTypeCreatePriceSets) {
	o.PriceSets = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *InstanceTypeLayoutCreate) GetPermissions() ApiLibraryLayoutsIdPermissionsInstanceTypeLayoutPermissions {
	if o == nil || o.Permissions == nil {
		var ret ApiLibraryLayoutsIdPermissionsInstanceTypeLayoutPermissions
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceTypeLayoutCreate) GetPermissionsOk() (*ApiLibraryLayoutsIdPermissionsInstanceTypeLayoutPermissions, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *InstanceTypeLayoutCreate) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given ApiLibraryLayoutsIdPermissionsInstanceTypeLayoutPermissions and assigns it to the Permissions field.
func (o *InstanceTypeLayoutCreate) SetPermissions(v ApiLibraryLayoutsIdPermissionsInstanceTypeLayoutPermissions) {
	o.Permissions = &v
}

func (o InstanceTypeLayoutCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if true {
		toSerialize["instanceVersion"] = o.InstanceVersion
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Creatable != nil {
		toSerialize["creatable"] = o.Creatable
	}
	if true {
		toSerialize["provisionTypeCode"] = o.ProvisionTypeCode
	}
	if o.MemoryRequirement != nil {
		toSerialize["memoryRequirement"] = o.MemoryRequirement
	}
	if o.HasAutoScale != nil {
		toSerialize["hasAutoScale"] = o.HasAutoScale
	}
	if o.SupportsConvertToManaged != nil {
		toSerialize["supportsConvertToManaged"] = o.SupportsConvertToManaged
	}
	if o.ContainerTypes != nil {
		toSerialize["containerTypes"] = o.ContainerTypes
	}
	if o.OptionTypes != nil {
		toSerialize["optionTypes"] = o.OptionTypes
	}
	if o.SpecTemplates != nil {
		toSerialize["specTemplates"] = o.SpecTemplates
	}
	if o.EnvironmentVariables != nil {
		toSerialize["environmentVariables"] = o.EnvironmentVariables
	}
	if o.PriceSets != nil {
		toSerialize["priceSets"] = o.PriceSets
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	return json.Marshal(toSerialize)
}

type NullableInstanceTypeLayoutCreate struct {
	value *InstanceTypeLayoutCreate
	isSet bool
}

func (v NullableInstanceTypeLayoutCreate) Get() *InstanceTypeLayoutCreate {
	return v.value
}

func (v *NullableInstanceTypeLayoutCreate) Set(val *InstanceTypeLayoutCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceTypeLayoutCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceTypeLayoutCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceTypeLayoutCreate(val *InstanceTypeLayoutCreate) *NullableInstanceTypeLayoutCreate {
	return &NullableInstanceTypeLayoutCreate{value: val, isSet: true}
}

func (v NullableInstanceTypeLayoutCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceTypeLayoutCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


