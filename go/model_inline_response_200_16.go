/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20016 struct for InlineResponse20016
type InlineResponse20016 struct {
	MonitorApp *CheckApp `json:"monitorApp,omitempty"`
	CheckGroups *[]CheckGroup `json:"checkGroups,omitempty"`
	Checks *[]Check `json:"checks,omitempty"`
	OpenIncidents *[]Incident `json:"openIncidents,omitempty"`
}

// NewInlineResponse20016 instantiates a new InlineResponse20016 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20016() *InlineResponse20016 {
	this := InlineResponse20016{}
	return &this
}

// NewInlineResponse20016WithDefaults instantiates a new InlineResponse20016 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20016WithDefaults() *InlineResponse20016 {
	this := InlineResponse20016{}
	return &this
}

// GetMonitorApp returns the MonitorApp field value if set, zero value otherwise.
func (o *InlineResponse20016) GetMonitorApp() CheckApp {
	if o == nil || o.MonitorApp == nil {
		var ret CheckApp
		return ret
	}
	return *o.MonitorApp
}

// GetMonitorAppOk returns a tuple with the MonitorApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20016) GetMonitorAppOk() (*CheckApp, bool) {
	if o == nil || o.MonitorApp == nil {
		return nil, false
	}
	return o.MonitorApp, true
}

// HasMonitorApp returns a boolean if a field has been set.
func (o *InlineResponse20016) HasMonitorApp() bool {
	if o != nil && o.MonitorApp != nil {
		return true
	}

	return false
}

// SetMonitorApp gets a reference to the given CheckApp and assigns it to the MonitorApp field.
func (o *InlineResponse20016) SetMonitorApp(v CheckApp) {
	o.MonitorApp = &v
}

// GetCheckGroups returns the CheckGroups field value if set, zero value otherwise.
func (o *InlineResponse20016) GetCheckGroups() []CheckGroup {
	if o == nil || o.CheckGroups == nil {
		var ret []CheckGroup
		return ret
	}
	return *o.CheckGroups
}

// GetCheckGroupsOk returns a tuple with the CheckGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20016) GetCheckGroupsOk() (*[]CheckGroup, bool) {
	if o == nil || o.CheckGroups == nil {
		return nil, false
	}
	return o.CheckGroups, true
}

// HasCheckGroups returns a boolean if a field has been set.
func (o *InlineResponse20016) HasCheckGroups() bool {
	if o != nil && o.CheckGroups != nil {
		return true
	}

	return false
}

// SetCheckGroups gets a reference to the given []CheckGroup and assigns it to the CheckGroups field.
func (o *InlineResponse20016) SetCheckGroups(v []CheckGroup) {
	o.CheckGroups = &v
}

// GetChecks returns the Checks field value if set, zero value otherwise.
func (o *InlineResponse20016) GetChecks() []Check {
	if o == nil || o.Checks == nil {
		var ret []Check
		return ret
	}
	return *o.Checks
}

// GetChecksOk returns a tuple with the Checks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20016) GetChecksOk() (*[]Check, bool) {
	if o == nil || o.Checks == nil {
		return nil, false
	}
	return o.Checks, true
}

// HasChecks returns a boolean if a field has been set.
func (o *InlineResponse20016) HasChecks() bool {
	if o != nil && o.Checks != nil {
		return true
	}

	return false
}

// SetChecks gets a reference to the given []Check and assigns it to the Checks field.
func (o *InlineResponse20016) SetChecks(v []Check) {
	o.Checks = &v
}

// GetOpenIncidents returns the OpenIncidents field value if set, zero value otherwise.
func (o *InlineResponse20016) GetOpenIncidents() []Incident {
	if o == nil || o.OpenIncidents == nil {
		var ret []Incident
		return ret
	}
	return *o.OpenIncidents
}

// GetOpenIncidentsOk returns a tuple with the OpenIncidents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20016) GetOpenIncidentsOk() (*[]Incident, bool) {
	if o == nil || o.OpenIncidents == nil {
		return nil, false
	}
	return o.OpenIncidents, true
}

// HasOpenIncidents returns a boolean if a field has been set.
func (o *InlineResponse20016) HasOpenIncidents() bool {
	if o != nil && o.OpenIncidents != nil {
		return true
	}

	return false
}

// SetOpenIncidents gets a reference to the given []Incident and assigns it to the OpenIncidents field.
func (o *InlineResponse20016) SetOpenIncidents(v []Incident) {
	o.OpenIncidents = &v
}

func (o InlineResponse20016) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MonitorApp != nil {
		toSerialize["monitorApp"] = o.MonitorApp
	}
	if o.CheckGroups != nil {
		toSerialize["checkGroups"] = o.CheckGroups
	}
	if o.Checks != nil {
		toSerialize["checks"] = o.Checks
	}
	if o.OpenIncidents != nil {
		toSerialize["openIncidents"] = o.OpenIncidents
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20016 struct {
	value *InlineResponse20016
	isSet bool
}

func (v NullableInlineResponse20016) Get() *InlineResponse20016 {
	return v.value
}

func (v *NullableInlineResponse20016) Set(val *InlineResponse20016) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20016) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20016) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20016(val *InlineResponse20016) *NullableInlineResponse20016 {
	return &NullableInlineResponse20016{value: val, isSet: true}
}

func (v NullableInlineResponse20016) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20016) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


