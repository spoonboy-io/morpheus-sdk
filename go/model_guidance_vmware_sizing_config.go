/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GuidanceVmwareSizingConfig struct for GuidanceVmwareSizingConfig
type GuidanceVmwareSizingConfig struct {
	Exists *bool `json:"exists,omitempty"`
	ObjectId *int64 `json:"objectId,omitempty"`
	CpuTotalTimeCount NullableFloat32 `json:"cpuTotalTimeCount,omitempty"`
	CpuTotalTimeMin NullableFloat32 `json:"cpuTotalTimeMin,omitempty"`
	CpuTotalTimeMax NullableFloat32 `json:"cpuTotalTimeMax,omitempty"`
	CpuTotalTimeAvg NullableFloat32 `json:"cpuTotalTimeAvg,omitempty"`
	CpuTotalTimeSum NullableFloat32 `json:"cpuTotalTimeSum,omitempty"`
	CpuIdleTimeCount NullableFloat32 `json:"cpuIdleTimeCount,omitempty"`
	CpuIdleTimeMin NullableFloat32 `json:"cpuIdleTimeMin,omitempty"`
	CpuIdleTimeMax NullableFloat32 `json:"cpuIdleTimeMax,omitempty"`
	CpuIdleTimeAvg NullableFloat32 `json:"cpuIdleTimeAvg,omitempty"`
	CpuIdleTimeSum NullableFloat32 `json:"cpuIdleTimeSum,omitempty"`
	CpuUsageCount NullableFloat32 `json:"cpuUsageCount,omitempty"`
	CpuUsageMin NullableFloat32 `json:"cpuUsageMin,omitempty"`
	CpuUsageMax NullableFloat32 `json:"cpuUsageMax,omitempty"`
	CpuUsageAvg NullableFloat32 `json:"cpuUsageAvg,omitempty"`
	CpuUsageSum NullableFloat32 `json:"cpuUsageSum,omitempty"`
	MaxMemoryCount NullableFloat32 `json:"maxMemoryCount,omitempty"`
	MaxMemoryMin NullableFloat32 `json:"maxMemoryMin,omitempty"`
	MaxMemoryMax NullableFloat32 `json:"maxMemoryMax,omitempty"`
	MaxMemoryAvg NullableFloat32 `json:"maxMemoryAvg,omitempty"`
	MaxMemorySum NullableFloat32 `json:"maxMemorySum,omitempty"`
	CpuUserTimeCount NullableFloat32 `json:"cpuUserTimeCount,omitempty"`
	CpuUserTimeMin NullableFloat32 `json:"cpuUserTimeMin,omitempty"`
	CpuUserTimeMax NullableFloat32 `json:"cpuUserTimeMax,omitempty"`
	CpuUserTimeAvg NullableFloat32 `json:"cpuUserTimeAvg,omitempty"`
	CpuUserTimeSum NullableFloat32 `json:"cpuUserTimeSum,omitempty"`
	CpuSystemTimeCount NullableFloat32 `json:"cpuSystemTimeCount,omitempty"`
	CpuSystemTimeMin NullableFloat32 `json:"cpuSystemTimeMin,omitempty"`
	CpuSystemTimeMax NullableFloat32 `json:"cpuSystemTimeMax,omitempty"`
	CpuSystemTimeAvg *float32 `json:"cpuSystemTimeAvg,omitempty"`
	CpuSystemTimeSum NullableFloat32 `json:"cpuSystemTimeSum,omitempty"`
	UsedMemoryCount NullableFloat32 `json:"usedMemoryCount,omitempty"`
	UsedMemoryMin NullableFloat32 `json:"usedMemoryMin,omitempty"`
	UsedMemoryMax NullableFloat32 `json:"usedMemoryMax,omitempty"`
	UsedMemoryAvg NullableFloat32 `json:"usedMemoryAvg,omitempty"`
	UsedMemorySum NullableFloat32 `json:"usedMemorySum,omitempty"`
	FreeMemoryCount NullableFloat32 `json:"freeMemoryCount,omitempty"`
	FreeMemoryMin NullableFloat32 `json:"freeMemoryMin,omitempty"`
	FreeMemoryMax NullableFloat32 `json:"freeMemoryMax,omitempty"`
	FreeMemoryAvg NullableFloat32 `json:"freeMemoryAvg,omitempty"`
	FreeMemorySum NullableFloat32 `json:"freeMemorySum,omitempty"`
}

// NewGuidanceVmwareSizingConfig instantiates a new GuidanceVmwareSizingConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGuidanceVmwareSizingConfig() *GuidanceVmwareSizingConfig {
	this := GuidanceVmwareSizingConfig{}
	return &this
}

// NewGuidanceVmwareSizingConfigWithDefaults instantiates a new GuidanceVmwareSizingConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGuidanceVmwareSizingConfigWithDefaults() *GuidanceVmwareSizingConfig {
	this := GuidanceVmwareSizingConfig{}
	return &this
}

// GetExists returns the Exists field value if set, zero value otherwise.
func (o *GuidanceVmwareSizingConfig) GetExists() bool {
	if o == nil || o.Exists == nil {
		var ret bool
		return ret
	}
	return *o.Exists
}

// GetExistsOk returns a tuple with the Exists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceVmwareSizingConfig) GetExistsOk() (*bool, bool) {
	if o == nil || o.Exists == nil {
		return nil, false
	}
	return o.Exists, true
}

// HasExists returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasExists() bool {
	if o != nil && o.Exists != nil {
		return true
	}

	return false
}

// SetExists gets a reference to the given bool and assigns it to the Exists field.
func (o *GuidanceVmwareSizingConfig) SetExists(v bool) {
	o.Exists = &v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *GuidanceVmwareSizingConfig) GetObjectId() int64 {
	if o == nil || o.ObjectId == nil {
		var ret int64
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceVmwareSizingConfig) GetObjectIdOk() (*int64, bool) {
	if o == nil || o.ObjectId == nil {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasObjectId() bool {
	if o != nil && o.ObjectId != nil {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given int64 and assigns it to the ObjectId field.
func (o *GuidanceVmwareSizingConfig) SetObjectId(v int64) {
	o.ObjectId = &v
}

// GetCpuTotalTimeCount returns the CpuTotalTimeCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuTotalTimeCount() float32 {
	if o == nil || o.CpuTotalTimeCount.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuTotalTimeCount.Get()
}

// GetCpuTotalTimeCountOk returns a tuple with the CpuTotalTimeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuTotalTimeCountOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuTotalTimeCount.Get(), o.CpuTotalTimeCount.IsSet()
}

// HasCpuTotalTimeCount returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuTotalTimeCount() bool {
	if o != nil && o.CpuTotalTimeCount.IsSet() {
		return true
	}

	return false
}

// SetCpuTotalTimeCount gets a reference to the given NullableFloat32 and assigns it to the CpuTotalTimeCount field.
func (o *GuidanceVmwareSizingConfig) SetCpuTotalTimeCount(v float32) {
	o.CpuTotalTimeCount.Set(&v)
}
// SetCpuTotalTimeCountNil sets the value for CpuTotalTimeCount to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuTotalTimeCountNil() {
	o.CpuTotalTimeCount.Set(nil)
}

// UnsetCpuTotalTimeCount ensures that no value is present for CpuTotalTimeCount, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuTotalTimeCount() {
	o.CpuTotalTimeCount.Unset()
}

// GetCpuTotalTimeMin returns the CpuTotalTimeMin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuTotalTimeMin() float32 {
	if o == nil || o.CpuTotalTimeMin.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuTotalTimeMin.Get()
}

// GetCpuTotalTimeMinOk returns a tuple with the CpuTotalTimeMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuTotalTimeMinOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuTotalTimeMin.Get(), o.CpuTotalTimeMin.IsSet()
}

// HasCpuTotalTimeMin returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuTotalTimeMin() bool {
	if o != nil && o.CpuTotalTimeMin.IsSet() {
		return true
	}

	return false
}

// SetCpuTotalTimeMin gets a reference to the given NullableFloat32 and assigns it to the CpuTotalTimeMin field.
func (o *GuidanceVmwareSizingConfig) SetCpuTotalTimeMin(v float32) {
	o.CpuTotalTimeMin.Set(&v)
}
// SetCpuTotalTimeMinNil sets the value for CpuTotalTimeMin to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuTotalTimeMinNil() {
	o.CpuTotalTimeMin.Set(nil)
}

// UnsetCpuTotalTimeMin ensures that no value is present for CpuTotalTimeMin, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuTotalTimeMin() {
	o.CpuTotalTimeMin.Unset()
}

// GetCpuTotalTimeMax returns the CpuTotalTimeMax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuTotalTimeMax() float32 {
	if o == nil || o.CpuTotalTimeMax.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuTotalTimeMax.Get()
}

// GetCpuTotalTimeMaxOk returns a tuple with the CpuTotalTimeMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuTotalTimeMaxOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuTotalTimeMax.Get(), o.CpuTotalTimeMax.IsSet()
}

// HasCpuTotalTimeMax returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuTotalTimeMax() bool {
	if o != nil && o.CpuTotalTimeMax.IsSet() {
		return true
	}

	return false
}

// SetCpuTotalTimeMax gets a reference to the given NullableFloat32 and assigns it to the CpuTotalTimeMax field.
func (o *GuidanceVmwareSizingConfig) SetCpuTotalTimeMax(v float32) {
	o.CpuTotalTimeMax.Set(&v)
}
// SetCpuTotalTimeMaxNil sets the value for CpuTotalTimeMax to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuTotalTimeMaxNil() {
	o.CpuTotalTimeMax.Set(nil)
}

// UnsetCpuTotalTimeMax ensures that no value is present for CpuTotalTimeMax, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuTotalTimeMax() {
	o.CpuTotalTimeMax.Unset()
}

// GetCpuTotalTimeAvg returns the CpuTotalTimeAvg field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuTotalTimeAvg() float32 {
	if o == nil || o.CpuTotalTimeAvg.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuTotalTimeAvg.Get()
}

// GetCpuTotalTimeAvgOk returns a tuple with the CpuTotalTimeAvg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuTotalTimeAvgOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuTotalTimeAvg.Get(), o.CpuTotalTimeAvg.IsSet()
}

// HasCpuTotalTimeAvg returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuTotalTimeAvg() bool {
	if o != nil && o.CpuTotalTimeAvg.IsSet() {
		return true
	}

	return false
}

// SetCpuTotalTimeAvg gets a reference to the given NullableFloat32 and assigns it to the CpuTotalTimeAvg field.
func (o *GuidanceVmwareSizingConfig) SetCpuTotalTimeAvg(v float32) {
	o.CpuTotalTimeAvg.Set(&v)
}
// SetCpuTotalTimeAvgNil sets the value for CpuTotalTimeAvg to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuTotalTimeAvgNil() {
	o.CpuTotalTimeAvg.Set(nil)
}

// UnsetCpuTotalTimeAvg ensures that no value is present for CpuTotalTimeAvg, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuTotalTimeAvg() {
	o.CpuTotalTimeAvg.Unset()
}

// GetCpuTotalTimeSum returns the CpuTotalTimeSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuTotalTimeSum() float32 {
	if o == nil || o.CpuTotalTimeSum.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuTotalTimeSum.Get()
}

// GetCpuTotalTimeSumOk returns a tuple with the CpuTotalTimeSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuTotalTimeSumOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuTotalTimeSum.Get(), o.CpuTotalTimeSum.IsSet()
}

// HasCpuTotalTimeSum returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuTotalTimeSum() bool {
	if o != nil && o.CpuTotalTimeSum.IsSet() {
		return true
	}

	return false
}

// SetCpuTotalTimeSum gets a reference to the given NullableFloat32 and assigns it to the CpuTotalTimeSum field.
func (o *GuidanceVmwareSizingConfig) SetCpuTotalTimeSum(v float32) {
	o.CpuTotalTimeSum.Set(&v)
}
// SetCpuTotalTimeSumNil sets the value for CpuTotalTimeSum to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuTotalTimeSumNil() {
	o.CpuTotalTimeSum.Set(nil)
}

// UnsetCpuTotalTimeSum ensures that no value is present for CpuTotalTimeSum, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuTotalTimeSum() {
	o.CpuTotalTimeSum.Unset()
}

// GetCpuIdleTimeCount returns the CpuIdleTimeCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuIdleTimeCount() float32 {
	if o == nil || o.CpuIdleTimeCount.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuIdleTimeCount.Get()
}

// GetCpuIdleTimeCountOk returns a tuple with the CpuIdleTimeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuIdleTimeCountOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuIdleTimeCount.Get(), o.CpuIdleTimeCount.IsSet()
}

// HasCpuIdleTimeCount returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuIdleTimeCount() bool {
	if o != nil && o.CpuIdleTimeCount.IsSet() {
		return true
	}

	return false
}

// SetCpuIdleTimeCount gets a reference to the given NullableFloat32 and assigns it to the CpuIdleTimeCount field.
func (o *GuidanceVmwareSizingConfig) SetCpuIdleTimeCount(v float32) {
	o.CpuIdleTimeCount.Set(&v)
}
// SetCpuIdleTimeCountNil sets the value for CpuIdleTimeCount to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuIdleTimeCountNil() {
	o.CpuIdleTimeCount.Set(nil)
}

// UnsetCpuIdleTimeCount ensures that no value is present for CpuIdleTimeCount, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuIdleTimeCount() {
	o.CpuIdleTimeCount.Unset()
}

// GetCpuIdleTimeMin returns the CpuIdleTimeMin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuIdleTimeMin() float32 {
	if o == nil || o.CpuIdleTimeMin.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuIdleTimeMin.Get()
}

// GetCpuIdleTimeMinOk returns a tuple with the CpuIdleTimeMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuIdleTimeMinOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuIdleTimeMin.Get(), o.CpuIdleTimeMin.IsSet()
}

// HasCpuIdleTimeMin returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuIdleTimeMin() bool {
	if o != nil && o.CpuIdleTimeMin.IsSet() {
		return true
	}

	return false
}

// SetCpuIdleTimeMin gets a reference to the given NullableFloat32 and assigns it to the CpuIdleTimeMin field.
func (o *GuidanceVmwareSizingConfig) SetCpuIdleTimeMin(v float32) {
	o.CpuIdleTimeMin.Set(&v)
}
// SetCpuIdleTimeMinNil sets the value for CpuIdleTimeMin to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuIdleTimeMinNil() {
	o.CpuIdleTimeMin.Set(nil)
}

// UnsetCpuIdleTimeMin ensures that no value is present for CpuIdleTimeMin, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuIdleTimeMin() {
	o.CpuIdleTimeMin.Unset()
}

// GetCpuIdleTimeMax returns the CpuIdleTimeMax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuIdleTimeMax() float32 {
	if o == nil || o.CpuIdleTimeMax.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuIdleTimeMax.Get()
}

// GetCpuIdleTimeMaxOk returns a tuple with the CpuIdleTimeMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuIdleTimeMaxOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuIdleTimeMax.Get(), o.CpuIdleTimeMax.IsSet()
}

// HasCpuIdleTimeMax returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuIdleTimeMax() bool {
	if o != nil && o.CpuIdleTimeMax.IsSet() {
		return true
	}

	return false
}

// SetCpuIdleTimeMax gets a reference to the given NullableFloat32 and assigns it to the CpuIdleTimeMax field.
func (o *GuidanceVmwareSizingConfig) SetCpuIdleTimeMax(v float32) {
	o.CpuIdleTimeMax.Set(&v)
}
// SetCpuIdleTimeMaxNil sets the value for CpuIdleTimeMax to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuIdleTimeMaxNil() {
	o.CpuIdleTimeMax.Set(nil)
}

// UnsetCpuIdleTimeMax ensures that no value is present for CpuIdleTimeMax, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuIdleTimeMax() {
	o.CpuIdleTimeMax.Unset()
}

// GetCpuIdleTimeAvg returns the CpuIdleTimeAvg field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuIdleTimeAvg() float32 {
	if o == nil || o.CpuIdleTimeAvg.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuIdleTimeAvg.Get()
}

// GetCpuIdleTimeAvgOk returns a tuple with the CpuIdleTimeAvg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuIdleTimeAvgOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuIdleTimeAvg.Get(), o.CpuIdleTimeAvg.IsSet()
}

// HasCpuIdleTimeAvg returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuIdleTimeAvg() bool {
	if o != nil && o.CpuIdleTimeAvg.IsSet() {
		return true
	}

	return false
}

// SetCpuIdleTimeAvg gets a reference to the given NullableFloat32 and assigns it to the CpuIdleTimeAvg field.
func (o *GuidanceVmwareSizingConfig) SetCpuIdleTimeAvg(v float32) {
	o.CpuIdleTimeAvg.Set(&v)
}
// SetCpuIdleTimeAvgNil sets the value for CpuIdleTimeAvg to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuIdleTimeAvgNil() {
	o.CpuIdleTimeAvg.Set(nil)
}

// UnsetCpuIdleTimeAvg ensures that no value is present for CpuIdleTimeAvg, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuIdleTimeAvg() {
	o.CpuIdleTimeAvg.Unset()
}

// GetCpuIdleTimeSum returns the CpuIdleTimeSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuIdleTimeSum() float32 {
	if o == nil || o.CpuIdleTimeSum.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuIdleTimeSum.Get()
}

// GetCpuIdleTimeSumOk returns a tuple with the CpuIdleTimeSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuIdleTimeSumOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuIdleTimeSum.Get(), o.CpuIdleTimeSum.IsSet()
}

// HasCpuIdleTimeSum returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuIdleTimeSum() bool {
	if o != nil && o.CpuIdleTimeSum.IsSet() {
		return true
	}

	return false
}

// SetCpuIdleTimeSum gets a reference to the given NullableFloat32 and assigns it to the CpuIdleTimeSum field.
func (o *GuidanceVmwareSizingConfig) SetCpuIdleTimeSum(v float32) {
	o.CpuIdleTimeSum.Set(&v)
}
// SetCpuIdleTimeSumNil sets the value for CpuIdleTimeSum to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuIdleTimeSumNil() {
	o.CpuIdleTimeSum.Set(nil)
}

// UnsetCpuIdleTimeSum ensures that no value is present for CpuIdleTimeSum, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuIdleTimeSum() {
	o.CpuIdleTimeSum.Unset()
}

// GetCpuUsageCount returns the CpuUsageCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuUsageCount() float32 {
	if o == nil || o.CpuUsageCount.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuUsageCount.Get()
}

// GetCpuUsageCountOk returns a tuple with the CpuUsageCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuUsageCountOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuUsageCount.Get(), o.CpuUsageCount.IsSet()
}

// HasCpuUsageCount returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuUsageCount() bool {
	if o != nil && o.CpuUsageCount.IsSet() {
		return true
	}

	return false
}

// SetCpuUsageCount gets a reference to the given NullableFloat32 and assigns it to the CpuUsageCount field.
func (o *GuidanceVmwareSizingConfig) SetCpuUsageCount(v float32) {
	o.CpuUsageCount.Set(&v)
}
// SetCpuUsageCountNil sets the value for CpuUsageCount to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuUsageCountNil() {
	o.CpuUsageCount.Set(nil)
}

// UnsetCpuUsageCount ensures that no value is present for CpuUsageCount, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuUsageCount() {
	o.CpuUsageCount.Unset()
}

// GetCpuUsageMin returns the CpuUsageMin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuUsageMin() float32 {
	if o == nil || o.CpuUsageMin.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuUsageMin.Get()
}

// GetCpuUsageMinOk returns a tuple with the CpuUsageMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuUsageMinOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuUsageMin.Get(), o.CpuUsageMin.IsSet()
}

// HasCpuUsageMin returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuUsageMin() bool {
	if o != nil && o.CpuUsageMin.IsSet() {
		return true
	}

	return false
}

// SetCpuUsageMin gets a reference to the given NullableFloat32 and assigns it to the CpuUsageMin field.
func (o *GuidanceVmwareSizingConfig) SetCpuUsageMin(v float32) {
	o.CpuUsageMin.Set(&v)
}
// SetCpuUsageMinNil sets the value for CpuUsageMin to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuUsageMinNil() {
	o.CpuUsageMin.Set(nil)
}

// UnsetCpuUsageMin ensures that no value is present for CpuUsageMin, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuUsageMin() {
	o.CpuUsageMin.Unset()
}

// GetCpuUsageMax returns the CpuUsageMax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuUsageMax() float32 {
	if o == nil || o.CpuUsageMax.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuUsageMax.Get()
}

// GetCpuUsageMaxOk returns a tuple with the CpuUsageMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuUsageMaxOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuUsageMax.Get(), o.CpuUsageMax.IsSet()
}

// HasCpuUsageMax returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuUsageMax() bool {
	if o != nil && o.CpuUsageMax.IsSet() {
		return true
	}

	return false
}

// SetCpuUsageMax gets a reference to the given NullableFloat32 and assigns it to the CpuUsageMax field.
func (o *GuidanceVmwareSizingConfig) SetCpuUsageMax(v float32) {
	o.CpuUsageMax.Set(&v)
}
// SetCpuUsageMaxNil sets the value for CpuUsageMax to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuUsageMaxNil() {
	o.CpuUsageMax.Set(nil)
}

// UnsetCpuUsageMax ensures that no value is present for CpuUsageMax, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuUsageMax() {
	o.CpuUsageMax.Unset()
}

// GetCpuUsageAvg returns the CpuUsageAvg field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuUsageAvg() float32 {
	if o == nil || o.CpuUsageAvg.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuUsageAvg.Get()
}

// GetCpuUsageAvgOk returns a tuple with the CpuUsageAvg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuUsageAvgOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuUsageAvg.Get(), o.CpuUsageAvg.IsSet()
}

// HasCpuUsageAvg returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuUsageAvg() bool {
	if o != nil && o.CpuUsageAvg.IsSet() {
		return true
	}

	return false
}

// SetCpuUsageAvg gets a reference to the given NullableFloat32 and assigns it to the CpuUsageAvg field.
func (o *GuidanceVmwareSizingConfig) SetCpuUsageAvg(v float32) {
	o.CpuUsageAvg.Set(&v)
}
// SetCpuUsageAvgNil sets the value for CpuUsageAvg to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuUsageAvgNil() {
	o.CpuUsageAvg.Set(nil)
}

// UnsetCpuUsageAvg ensures that no value is present for CpuUsageAvg, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuUsageAvg() {
	o.CpuUsageAvg.Unset()
}

// GetCpuUsageSum returns the CpuUsageSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuUsageSum() float32 {
	if o == nil || o.CpuUsageSum.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuUsageSum.Get()
}

// GetCpuUsageSumOk returns a tuple with the CpuUsageSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuUsageSumOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuUsageSum.Get(), o.CpuUsageSum.IsSet()
}

// HasCpuUsageSum returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuUsageSum() bool {
	if o != nil && o.CpuUsageSum.IsSet() {
		return true
	}

	return false
}

// SetCpuUsageSum gets a reference to the given NullableFloat32 and assigns it to the CpuUsageSum field.
func (o *GuidanceVmwareSizingConfig) SetCpuUsageSum(v float32) {
	o.CpuUsageSum.Set(&v)
}
// SetCpuUsageSumNil sets the value for CpuUsageSum to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuUsageSumNil() {
	o.CpuUsageSum.Set(nil)
}

// UnsetCpuUsageSum ensures that no value is present for CpuUsageSum, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuUsageSum() {
	o.CpuUsageSum.Unset()
}

// GetMaxMemoryCount returns the MaxMemoryCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetMaxMemoryCount() float32 {
	if o == nil || o.MaxMemoryCount.Get() == nil {
		var ret float32
		return ret
	}
	return *o.MaxMemoryCount.Get()
}

// GetMaxMemoryCountOk returns a tuple with the MaxMemoryCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetMaxMemoryCountOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxMemoryCount.Get(), o.MaxMemoryCount.IsSet()
}

// HasMaxMemoryCount returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasMaxMemoryCount() bool {
	if o != nil && o.MaxMemoryCount.IsSet() {
		return true
	}

	return false
}

// SetMaxMemoryCount gets a reference to the given NullableFloat32 and assigns it to the MaxMemoryCount field.
func (o *GuidanceVmwareSizingConfig) SetMaxMemoryCount(v float32) {
	o.MaxMemoryCount.Set(&v)
}
// SetMaxMemoryCountNil sets the value for MaxMemoryCount to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetMaxMemoryCountNil() {
	o.MaxMemoryCount.Set(nil)
}

// UnsetMaxMemoryCount ensures that no value is present for MaxMemoryCount, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetMaxMemoryCount() {
	o.MaxMemoryCount.Unset()
}

// GetMaxMemoryMin returns the MaxMemoryMin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetMaxMemoryMin() float32 {
	if o == nil || o.MaxMemoryMin.Get() == nil {
		var ret float32
		return ret
	}
	return *o.MaxMemoryMin.Get()
}

// GetMaxMemoryMinOk returns a tuple with the MaxMemoryMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetMaxMemoryMinOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxMemoryMin.Get(), o.MaxMemoryMin.IsSet()
}

// HasMaxMemoryMin returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasMaxMemoryMin() bool {
	if o != nil && o.MaxMemoryMin.IsSet() {
		return true
	}

	return false
}

// SetMaxMemoryMin gets a reference to the given NullableFloat32 and assigns it to the MaxMemoryMin field.
func (o *GuidanceVmwareSizingConfig) SetMaxMemoryMin(v float32) {
	o.MaxMemoryMin.Set(&v)
}
// SetMaxMemoryMinNil sets the value for MaxMemoryMin to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetMaxMemoryMinNil() {
	o.MaxMemoryMin.Set(nil)
}

// UnsetMaxMemoryMin ensures that no value is present for MaxMemoryMin, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetMaxMemoryMin() {
	o.MaxMemoryMin.Unset()
}

// GetMaxMemoryMax returns the MaxMemoryMax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetMaxMemoryMax() float32 {
	if o == nil || o.MaxMemoryMax.Get() == nil {
		var ret float32
		return ret
	}
	return *o.MaxMemoryMax.Get()
}

// GetMaxMemoryMaxOk returns a tuple with the MaxMemoryMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetMaxMemoryMaxOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxMemoryMax.Get(), o.MaxMemoryMax.IsSet()
}

// HasMaxMemoryMax returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasMaxMemoryMax() bool {
	if o != nil && o.MaxMemoryMax.IsSet() {
		return true
	}

	return false
}

// SetMaxMemoryMax gets a reference to the given NullableFloat32 and assigns it to the MaxMemoryMax field.
func (o *GuidanceVmwareSizingConfig) SetMaxMemoryMax(v float32) {
	o.MaxMemoryMax.Set(&v)
}
// SetMaxMemoryMaxNil sets the value for MaxMemoryMax to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetMaxMemoryMaxNil() {
	o.MaxMemoryMax.Set(nil)
}

// UnsetMaxMemoryMax ensures that no value is present for MaxMemoryMax, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetMaxMemoryMax() {
	o.MaxMemoryMax.Unset()
}

// GetMaxMemoryAvg returns the MaxMemoryAvg field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetMaxMemoryAvg() float32 {
	if o == nil || o.MaxMemoryAvg.Get() == nil {
		var ret float32
		return ret
	}
	return *o.MaxMemoryAvg.Get()
}

// GetMaxMemoryAvgOk returns a tuple with the MaxMemoryAvg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetMaxMemoryAvgOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxMemoryAvg.Get(), o.MaxMemoryAvg.IsSet()
}

// HasMaxMemoryAvg returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasMaxMemoryAvg() bool {
	if o != nil && o.MaxMemoryAvg.IsSet() {
		return true
	}

	return false
}

// SetMaxMemoryAvg gets a reference to the given NullableFloat32 and assigns it to the MaxMemoryAvg field.
func (o *GuidanceVmwareSizingConfig) SetMaxMemoryAvg(v float32) {
	o.MaxMemoryAvg.Set(&v)
}
// SetMaxMemoryAvgNil sets the value for MaxMemoryAvg to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetMaxMemoryAvgNil() {
	o.MaxMemoryAvg.Set(nil)
}

// UnsetMaxMemoryAvg ensures that no value is present for MaxMemoryAvg, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetMaxMemoryAvg() {
	o.MaxMemoryAvg.Unset()
}

// GetMaxMemorySum returns the MaxMemorySum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetMaxMemorySum() float32 {
	if o == nil || o.MaxMemorySum.Get() == nil {
		var ret float32
		return ret
	}
	return *o.MaxMemorySum.Get()
}

// GetMaxMemorySumOk returns a tuple with the MaxMemorySum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetMaxMemorySumOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxMemorySum.Get(), o.MaxMemorySum.IsSet()
}

// HasMaxMemorySum returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasMaxMemorySum() bool {
	if o != nil && o.MaxMemorySum.IsSet() {
		return true
	}

	return false
}

// SetMaxMemorySum gets a reference to the given NullableFloat32 and assigns it to the MaxMemorySum field.
func (o *GuidanceVmwareSizingConfig) SetMaxMemorySum(v float32) {
	o.MaxMemorySum.Set(&v)
}
// SetMaxMemorySumNil sets the value for MaxMemorySum to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetMaxMemorySumNil() {
	o.MaxMemorySum.Set(nil)
}

// UnsetMaxMemorySum ensures that no value is present for MaxMemorySum, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetMaxMemorySum() {
	o.MaxMemorySum.Unset()
}

// GetCpuUserTimeCount returns the CpuUserTimeCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuUserTimeCount() float32 {
	if o == nil || o.CpuUserTimeCount.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuUserTimeCount.Get()
}

// GetCpuUserTimeCountOk returns a tuple with the CpuUserTimeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuUserTimeCountOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuUserTimeCount.Get(), o.CpuUserTimeCount.IsSet()
}

// HasCpuUserTimeCount returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuUserTimeCount() bool {
	if o != nil && o.CpuUserTimeCount.IsSet() {
		return true
	}

	return false
}

// SetCpuUserTimeCount gets a reference to the given NullableFloat32 and assigns it to the CpuUserTimeCount field.
func (o *GuidanceVmwareSizingConfig) SetCpuUserTimeCount(v float32) {
	o.CpuUserTimeCount.Set(&v)
}
// SetCpuUserTimeCountNil sets the value for CpuUserTimeCount to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuUserTimeCountNil() {
	o.CpuUserTimeCount.Set(nil)
}

// UnsetCpuUserTimeCount ensures that no value is present for CpuUserTimeCount, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuUserTimeCount() {
	o.CpuUserTimeCount.Unset()
}

// GetCpuUserTimeMin returns the CpuUserTimeMin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuUserTimeMin() float32 {
	if o == nil || o.CpuUserTimeMin.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuUserTimeMin.Get()
}

// GetCpuUserTimeMinOk returns a tuple with the CpuUserTimeMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuUserTimeMinOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuUserTimeMin.Get(), o.CpuUserTimeMin.IsSet()
}

// HasCpuUserTimeMin returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuUserTimeMin() bool {
	if o != nil && o.CpuUserTimeMin.IsSet() {
		return true
	}

	return false
}

// SetCpuUserTimeMin gets a reference to the given NullableFloat32 and assigns it to the CpuUserTimeMin field.
func (o *GuidanceVmwareSizingConfig) SetCpuUserTimeMin(v float32) {
	o.CpuUserTimeMin.Set(&v)
}
// SetCpuUserTimeMinNil sets the value for CpuUserTimeMin to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuUserTimeMinNil() {
	o.CpuUserTimeMin.Set(nil)
}

// UnsetCpuUserTimeMin ensures that no value is present for CpuUserTimeMin, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuUserTimeMin() {
	o.CpuUserTimeMin.Unset()
}

// GetCpuUserTimeMax returns the CpuUserTimeMax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuUserTimeMax() float32 {
	if o == nil || o.CpuUserTimeMax.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuUserTimeMax.Get()
}

// GetCpuUserTimeMaxOk returns a tuple with the CpuUserTimeMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuUserTimeMaxOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuUserTimeMax.Get(), o.CpuUserTimeMax.IsSet()
}

// HasCpuUserTimeMax returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuUserTimeMax() bool {
	if o != nil && o.CpuUserTimeMax.IsSet() {
		return true
	}

	return false
}

// SetCpuUserTimeMax gets a reference to the given NullableFloat32 and assigns it to the CpuUserTimeMax field.
func (o *GuidanceVmwareSizingConfig) SetCpuUserTimeMax(v float32) {
	o.CpuUserTimeMax.Set(&v)
}
// SetCpuUserTimeMaxNil sets the value for CpuUserTimeMax to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuUserTimeMaxNil() {
	o.CpuUserTimeMax.Set(nil)
}

// UnsetCpuUserTimeMax ensures that no value is present for CpuUserTimeMax, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuUserTimeMax() {
	o.CpuUserTimeMax.Unset()
}

// GetCpuUserTimeAvg returns the CpuUserTimeAvg field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuUserTimeAvg() float32 {
	if o == nil || o.CpuUserTimeAvg.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuUserTimeAvg.Get()
}

// GetCpuUserTimeAvgOk returns a tuple with the CpuUserTimeAvg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuUserTimeAvgOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuUserTimeAvg.Get(), o.CpuUserTimeAvg.IsSet()
}

// HasCpuUserTimeAvg returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuUserTimeAvg() bool {
	if o != nil && o.CpuUserTimeAvg.IsSet() {
		return true
	}

	return false
}

// SetCpuUserTimeAvg gets a reference to the given NullableFloat32 and assigns it to the CpuUserTimeAvg field.
func (o *GuidanceVmwareSizingConfig) SetCpuUserTimeAvg(v float32) {
	o.CpuUserTimeAvg.Set(&v)
}
// SetCpuUserTimeAvgNil sets the value for CpuUserTimeAvg to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuUserTimeAvgNil() {
	o.CpuUserTimeAvg.Set(nil)
}

// UnsetCpuUserTimeAvg ensures that no value is present for CpuUserTimeAvg, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuUserTimeAvg() {
	o.CpuUserTimeAvg.Unset()
}

// GetCpuUserTimeSum returns the CpuUserTimeSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuUserTimeSum() float32 {
	if o == nil || o.CpuUserTimeSum.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuUserTimeSum.Get()
}

// GetCpuUserTimeSumOk returns a tuple with the CpuUserTimeSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuUserTimeSumOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuUserTimeSum.Get(), o.CpuUserTimeSum.IsSet()
}

// HasCpuUserTimeSum returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuUserTimeSum() bool {
	if o != nil && o.CpuUserTimeSum.IsSet() {
		return true
	}

	return false
}

// SetCpuUserTimeSum gets a reference to the given NullableFloat32 and assigns it to the CpuUserTimeSum field.
func (o *GuidanceVmwareSizingConfig) SetCpuUserTimeSum(v float32) {
	o.CpuUserTimeSum.Set(&v)
}
// SetCpuUserTimeSumNil sets the value for CpuUserTimeSum to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuUserTimeSumNil() {
	o.CpuUserTimeSum.Set(nil)
}

// UnsetCpuUserTimeSum ensures that no value is present for CpuUserTimeSum, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuUserTimeSum() {
	o.CpuUserTimeSum.Unset()
}

// GetCpuSystemTimeCount returns the CpuSystemTimeCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuSystemTimeCount() float32 {
	if o == nil || o.CpuSystemTimeCount.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuSystemTimeCount.Get()
}

// GetCpuSystemTimeCountOk returns a tuple with the CpuSystemTimeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuSystemTimeCountOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuSystemTimeCount.Get(), o.CpuSystemTimeCount.IsSet()
}

// HasCpuSystemTimeCount returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuSystemTimeCount() bool {
	if o != nil && o.CpuSystemTimeCount.IsSet() {
		return true
	}

	return false
}

// SetCpuSystemTimeCount gets a reference to the given NullableFloat32 and assigns it to the CpuSystemTimeCount field.
func (o *GuidanceVmwareSizingConfig) SetCpuSystemTimeCount(v float32) {
	o.CpuSystemTimeCount.Set(&v)
}
// SetCpuSystemTimeCountNil sets the value for CpuSystemTimeCount to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuSystemTimeCountNil() {
	o.CpuSystemTimeCount.Set(nil)
}

// UnsetCpuSystemTimeCount ensures that no value is present for CpuSystemTimeCount, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuSystemTimeCount() {
	o.CpuSystemTimeCount.Unset()
}

// GetCpuSystemTimeMin returns the CpuSystemTimeMin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuSystemTimeMin() float32 {
	if o == nil || o.CpuSystemTimeMin.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuSystemTimeMin.Get()
}

// GetCpuSystemTimeMinOk returns a tuple with the CpuSystemTimeMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuSystemTimeMinOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuSystemTimeMin.Get(), o.CpuSystemTimeMin.IsSet()
}

// HasCpuSystemTimeMin returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuSystemTimeMin() bool {
	if o != nil && o.CpuSystemTimeMin.IsSet() {
		return true
	}

	return false
}

// SetCpuSystemTimeMin gets a reference to the given NullableFloat32 and assigns it to the CpuSystemTimeMin field.
func (o *GuidanceVmwareSizingConfig) SetCpuSystemTimeMin(v float32) {
	o.CpuSystemTimeMin.Set(&v)
}
// SetCpuSystemTimeMinNil sets the value for CpuSystemTimeMin to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuSystemTimeMinNil() {
	o.CpuSystemTimeMin.Set(nil)
}

// UnsetCpuSystemTimeMin ensures that no value is present for CpuSystemTimeMin, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuSystemTimeMin() {
	o.CpuSystemTimeMin.Unset()
}

// GetCpuSystemTimeMax returns the CpuSystemTimeMax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuSystemTimeMax() float32 {
	if o == nil || o.CpuSystemTimeMax.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuSystemTimeMax.Get()
}

// GetCpuSystemTimeMaxOk returns a tuple with the CpuSystemTimeMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuSystemTimeMaxOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuSystemTimeMax.Get(), o.CpuSystemTimeMax.IsSet()
}

// HasCpuSystemTimeMax returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuSystemTimeMax() bool {
	if o != nil && o.CpuSystemTimeMax.IsSet() {
		return true
	}

	return false
}

// SetCpuSystemTimeMax gets a reference to the given NullableFloat32 and assigns it to the CpuSystemTimeMax field.
func (o *GuidanceVmwareSizingConfig) SetCpuSystemTimeMax(v float32) {
	o.CpuSystemTimeMax.Set(&v)
}
// SetCpuSystemTimeMaxNil sets the value for CpuSystemTimeMax to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuSystemTimeMaxNil() {
	o.CpuSystemTimeMax.Set(nil)
}

// UnsetCpuSystemTimeMax ensures that no value is present for CpuSystemTimeMax, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuSystemTimeMax() {
	o.CpuSystemTimeMax.Unset()
}

// GetCpuSystemTimeAvg returns the CpuSystemTimeAvg field value if set, zero value otherwise.
func (o *GuidanceVmwareSizingConfig) GetCpuSystemTimeAvg() float32 {
	if o == nil || o.CpuSystemTimeAvg == nil {
		var ret float32
		return ret
	}
	return *o.CpuSystemTimeAvg
}

// GetCpuSystemTimeAvgOk returns a tuple with the CpuSystemTimeAvg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceVmwareSizingConfig) GetCpuSystemTimeAvgOk() (*float32, bool) {
	if o == nil || o.CpuSystemTimeAvg == nil {
		return nil, false
	}
	return o.CpuSystemTimeAvg, true
}

// HasCpuSystemTimeAvg returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuSystemTimeAvg() bool {
	if o != nil && o.CpuSystemTimeAvg != nil {
		return true
	}

	return false
}

// SetCpuSystemTimeAvg gets a reference to the given float32 and assigns it to the CpuSystemTimeAvg field.
func (o *GuidanceVmwareSizingConfig) SetCpuSystemTimeAvg(v float32) {
	o.CpuSystemTimeAvg = &v
}

// GetCpuSystemTimeSum returns the CpuSystemTimeSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetCpuSystemTimeSum() float32 {
	if o == nil || o.CpuSystemTimeSum.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuSystemTimeSum.Get()
}

// GetCpuSystemTimeSumOk returns a tuple with the CpuSystemTimeSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetCpuSystemTimeSumOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuSystemTimeSum.Get(), o.CpuSystemTimeSum.IsSet()
}

// HasCpuSystemTimeSum returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasCpuSystemTimeSum() bool {
	if o != nil && o.CpuSystemTimeSum.IsSet() {
		return true
	}

	return false
}

// SetCpuSystemTimeSum gets a reference to the given NullableFloat32 and assigns it to the CpuSystemTimeSum field.
func (o *GuidanceVmwareSizingConfig) SetCpuSystemTimeSum(v float32) {
	o.CpuSystemTimeSum.Set(&v)
}
// SetCpuSystemTimeSumNil sets the value for CpuSystemTimeSum to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetCpuSystemTimeSumNil() {
	o.CpuSystemTimeSum.Set(nil)
}

// UnsetCpuSystemTimeSum ensures that no value is present for CpuSystemTimeSum, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetCpuSystemTimeSum() {
	o.CpuSystemTimeSum.Unset()
}

// GetUsedMemoryCount returns the UsedMemoryCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetUsedMemoryCount() float32 {
	if o == nil || o.UsedMemoryCount.Get() == nil {
		var ret float32
		return ret
	}
	return *o.UsedMemoryCount.Get()
}

// GetUsedMemoryCountOk returns a tuple with the UsedMemoryCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetUsedMemoryCountOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UsedMemoryCount.Get(), o.UsedMemoryCount.IsSet()
}

// HasUsedMemoryCount returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasUsedMemoryCount() bool {
	if o != nil && o.UsedMemoryCount.IsSet() {
		return true
	}

	return false
}

// SetUsedMemoryCount gets a reference to the given NullableFloat32 and assigns it to the UsedMemoryCount field.
func (o *GuidanceVmwareSizingConfig) SetUsedMemoryCount(v float32) {
	o.UsedMemoryCount.Set(&v)
}
// SetUsedMemoryCountNil sets the value for UsedMemoryCount to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetUsedMemoryCountNil() {
	o.UsedMemoryCount.Set(nil)
}

// UnsetUsedMemoryCount ensures that no value is present for UsedMemoryCount, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetUsedMemoryCount() {
	o.UsedMemoryCount.Unset()
}

// GetUsedMemoryMin returns the UsedMemoryMin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetUsedMemoryMin() float32 {
	if o == nil || o.UsedMemoryMin.Get() == nil {
		var ret float32
		return ret
	}
	return *o.UsedMemoryMin.Get()
}

// GetUsedMemoryMinOk returns a tuple with the UsedMemoryMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetUsedMemoryMinOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UsedMemoryMin.Get(), o.UsedMemoryMin.IsSet()
}

// HasUsedMemoryMin returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasUsedMemoryMin() bool {
	if o != nil && o.UsedMemoryMin.IsSet() {
		return true
	}

	return false
}

// SetUsedMemoryMin gets a reference to the given NullableFloat32 and assigns it to the UsedMemoryMin field.
func (o *GuidanceVmwareSizingConfig) SetUsedMemoryMin(v float32) {
	o.UsedMemoryMin.Set(&v)
}
// SetUsedMemoryMinNil sets the value for UsedMemoryMin to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetUsedMemoryMinNil() {
	o.UsedMemoryMin.Set(nil)
}

// UnsetUsedMemoryMin ensures that no value is present for UsedMemoryMin, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetUsedMemoryMin() {
	o.UsedMemoryMin.Unset()
}

// GetUsedMemoryMax returns the UsedMemoryMax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetUsedMemoryMax() float32 {
	if o == nil || o.UsedMemoryMax.Get() == nil {
		var ret float32
		return ret
	}
	return *o.UsedMemoryMax.Get()
}

// GetUsedMemoryMaxOk returns a tuple with the UsedMemoryMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetUsedMemoryMaxOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UsedMemoryMax.Get(), o.UsedMemoryMax.IsSet()
}

// HasUsedMemoryMax returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasUsedMemoryMax() bool {
	if o != nil && o.UsedMemoryMax.IsSet() {
		return true
	}

	return false
}

// SetUsedMemoryMax gets a reference to the given NullableFloat32 and assigns it to the UsedMemoryMax field.
func (o *GuidanceVmwareSizingConfig) SetUsedMemoryMax(v float32) {
	o.UsedMemoryMax.Set(&v)
}
// SetUsedMemoryMaxNil sets the value for UsedMemoryMax to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetUsedMemoryMaxNil() {
	o.UsedMemoryMax.Set(nil)
}

// UnsetUsedMemoryMax ensures that no value is present for UsedMemoryMax, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetUsedMemoryMax() {
	o.UsedMemoryMax.Unset()
}

// GetUsedMemoryAvg returns the UsedMemoryAvg field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetUsedMemoryAvg() float32 {
	if o == nil || o.UsedMemoryAvg.Get() == nil {
		var ret float32
		return ret
	}
	return *o.UsedMemoryAvg.Get()
}

// GetUsedMemoryAvgOk returns a tuple with the UsedMemoryAvg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetUsedMemoryAvgOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UsedMemoryAvg.Get(), o.UsedMemoryAvg.IsSet()
}

// HasUsedMemoryAvg returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasUsedMemoryAvg() bool {
	if o != nil && o.UsedMemoryAvg.IsSet() {
		return true
	}

	return false
}

// SetUsedMemoryAvg gets a reference to the given NullableFloat32 and assigns it to the UsedMemoryAvg field.
func (o *GuidanceVmwareSizingConfig) SetUsedMemoryAvg(v float32) {
	o.UsedMemoryAvg.Set(&v)
}
// SetUsedMemoryAvgNil sets the value for UsedMemoryAvg to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetUsedMemoryAvgNil() {
	o.UsedMemoryAvg.Set(nil)
}

// UnsetUsedMemoryAvg ensures that no value is present for UsedMemoryAvg, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetUsedMemoryAvg() {
	o.UsedMemoryAvg.Unset()
}

// GetUsedMemorySum returns the UsedMemorySum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetUsedMemorySum() float32 {
	if o == nil || o.UsedMemorySum.Get() == nil {
		var ret float32
		return ret
	}
	return *o.UsedMemorySum.Get()
}

// GetUsedMemorySumOk returns a tuple with the UsedMemorySum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetUsedMemorySumOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UsedMemorySum.Get(), o.UsedMemorySum.IsSet()
}

// HasUsedMemorySum returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasUsedMemorySum() bool {
	if o != nil && o.UsedMemorySum.IsSet() {
		return true
	}

	return false
}

// SetUsedMemorySum gets a reference to the given NullableFloat32 and assigns it to the UsedMemorySum field.
func (o *GuidanceVmwareSizingConfig) SetUsedMemorySum(v float32) {
	o.UsedMemorySum.Set(&v)
}
// SetUsedMemorySumNil sets the value for UsedMemorySum to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetUsedMemorySumNil() {
	o.UsedMemorySum.Set(nil)
}

// UnsetUsedMemorySum ensures that no value is present for UsedMemorySum, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetUsedMemorySum() {
	o.UsedMemorySum.Unset()
}

// GetFreeMemoryCount returns the FreeMemoryCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetFreeMemoryCount() float32 {
	if o == nil || o.FreeMemoryCount.Get() == nil {
		var ret float32
		return ret
	}
	return *o.FreeMemoryCount.Get()
}

// GetFreeMemoryCountOk returns a tuple with the FreeMemoryCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetFreeMemoryCountOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FreeMemoryCount.Get(), o.FreeMemoryCount.IsSet()
}

// HasFreeMemoryCount returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasFreeMemoryCount() bool {
	if o != nil && o.FreeMemoryCount.IsSet() {
		return true
	}

	return false
}

// SetFreeMemoryCount gets a reference to the given NullableFloat32 and assigns it to the FreeMemoryCount field.
func (o *GuidanceVmwareSizingConfig) SetFreeMemoryCount(v float32) {
	o.FreeMemoryCount.Set(&v)
}
// SetFreeMemoryCountNil sets the value for FreeMemoryCount to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetFreeMemoryCountNil() {
	o.FreeMemoryCount.Set(nil)
}

// UnsetFreeMemoryCount ensures that no value is present for FreeMemoryCount, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetFreeMemoryCount() {
	o.FreeMemoryCount.Unset()
}

// GetFreeMemoryMin returns the FreeMemoryMin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetFreeMemoryMin() float32 {
	if o == nil || o.FreeMemoryMin.Get() == nil {
		var ret float32
		return ret
	}
	return *o.FreeMemoryMin.Get()
}

// GetFreeMemoryMinOk returns a tuple with the FreeMemoryMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetFreeMemoryMinOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FreeMemoryMin.Get(), o.FreeMemoryMin.IsSet()
}

// HasFreeMemoryMin returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasFreeMemoryMin() bool {
	if o != nil && o.FreeMemoryMin.IsSet() {
		return true
	}

	return false
}

// SetFreeMemoryMin gets a reference to the given NullableFloat32 and assigns it to the FreeMemoryMin field.
func (o *GuidanceVmwareSizingConfig) SetFreeMemoryMin(v float32) {
	o.FreeMemoryMin.Set(&v)
}
// SetFreeMemoryMinNil sets the value for FreeMemoryMin to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetFreeMemoryMinNil() {
	o.FreeMemoryMin.Set(nil)
}

// UnsetFreeMemoryMin ensures that no value is present for FreeMemoryMin, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetFreeMemoryMin() {
	o.FreeMemoryMin.Unset()
}

// GetFreeMemoryMax returns the FreeMemoryMax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetFreeMemoryMax() float32 {
	if o == nil || o.FreeMemoryMax.Get() == nil {
		var ret float32
		return ret
	}
	return *o.FreeMemoryMax.Get()
}

// GetFreeMemoryMaxOk returns a tuple with the FreeMemoryMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetFreeMemoryMaxOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FreeMemoryMax.Get(), o.FreeMemoryMax.IsSet()
}

// HasFreeMemoryMax returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasFreeMemoryMax() bool {
	if o != nil && o.FreeMemoryMax.IsSet() {
		return true
	}

	return false
}

// SetFreeMemoryMax gets a reference to the given NullableFloat32 and assigns it to the FreeMemoryMax field.
func (o *GuidanceVmwareSizingConfig) SetFreeMemoryMax(v float32) {
	o.FreeMemoryMax.Set(&v)
}
// SetFreeMemoryMaxNil sets the value for FreeMemoryMax to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetFreeMemoryMaxNil() {
	o.FreeMemoryMax.Set(nil)
}

// UnsetFreeMemoryMax ensures that no value is present for FreeMemoryMax, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetFreeMemoryMax() {
	o.FreeMemoryMax.Unset()
}

// GetFreeMemoryAvg returns the FreeMemoryAvg field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetFreeMemoryAvg() float32 {
	if o == nil || o.FreeMemoryAvg.Get() == nil {
		var ret float32
		return ret
	}
	return *o.FreeMemoryAvg.Get()
}

// GetFreeMemoryAvgOk returns a tuple with the FreeMemoryAvg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetFreeMemoryAvgOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FreeMemoryAvg.Get(), o.FreeMemoryAvg.IsSet()
}

// HasFreeMemoryAvg returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasFreeMemoryAvg() bool {
	if o != nil && o.FreeMemoryAvg.IsSet() {
		return true
	}

	return false
}

// SetFreeMemoryAvg gets a reference to the given NullableFloat32 and assigns it to the FreeMemoryAvg field.
func (o *GuidanceVmwareSizingConfig) SetFreeMemoryAvg(v float32) {
	o.FreeMemoryAvg.Set(&v)
}
// SetFreeMemoryAvgNil sets the value for FreeMemoryAvg to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetFreeMemoryAvgNil() {
	o.FreeMemoryAvg.Set(nil)
}

// UnsetFreeMemoryAvg ensures that no value is present for FreeMemoryAvg, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetFreeMemoryAvg() {
	o.FreeMemoryAvg.Unset()
}

// GetFreeMemorySum returns the FreeMemorySum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingConfig) GetFreeMemorySum() float32 {
	if o == nil || o.FreeMemorySum.Get() == nil {
		var ret float32
		return ret
	}
	return *o.FreeMemorySum.Get()
}

// GetFreeMemorySumOk returns a tuple with the FreeMemorySum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingConfig) GetFreeMemorySumOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FreeMemorySum.Get(), o.FreeMemorySum.IsSet()
}

// HasFreeMemorySum returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingConfig) HasFreeMemorySum() bool {
	if o != nil && o.FreeMemorySum.IsSet() {
		return true
	}

	return false
}

// SetFreeMemorySum gets a reference to the given NullableFloat32 and assigns it to the FreeMemorySum field.
func (o *GuidanceVmwareSizingConfig) SetFreeMemorySum(v float32) {
	o.FreeMemorySum.Set(&v)
}
// SetFreeMemorySumNil sets the value for FreeMemorySum to be an explicit nil
func (o *GuidanceVmwareSizingConfig) SetFreeMemorySumNil() {
	o.FreeMemorySum.Set(nil)
}

// UnsetFreeMemorySum ensures that no value is present for FreeMemorySum, not even an explicit nil
func (o *GuidanceVmwareSizingConfig) UnsetFreeMemorySum() {
	o.FreeMemorySum.Unset()
}

func (o GuidanceVmwareSizingConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Exists != nil {
		toSerialize["exists"] = o.Exists
	}
	if o.ObjectId != nil {
		toSerialize["objectId"] = o.ObjectId
	}
	if o.CpuTotalTimeCount.IsSet() {
		toSerialize["cpuTotalTimeCount"] = o.CpuTotalTimeCount.Get()
	}
	if o.CpuTotalTimeMin.IsSet() {
		toSerialize["cpuTotalTimeMin"] = o.CpuTotalTimeMin.Get()
	}
	if o.CpuTotalTimeMax.IsSet() {
		toSerialize["cpuTotalTimeMax"] = o.CpuTotalTimeMax.Get()
	}
	if o.CpuTotalTimeAvg.IsSet() {
		toSerialize["cpuTotalTimeAvg"] = o.CpuTotalTimeAvg.Get()
	}
	if o.CpuTotalTimeSum.IsSet() {
		toSerialize["cpuTotalTimeSum"] = o.CpuTotalTimeSum.Get()
	}
	if o.CpuIdleTimeCount.IsSet() {
		toSerialize["cpuIdleTimeCount"] = o.CpuIdleTimeCount.Get()
	}
	if o.CpuIdleTimeMin.IsSet() {
		toSerialize["cpuIdleTimeMin"] = o.CpuIdleTimeMin.Get()
	}
	if o.CpuIdleTimeMax.IsSet() {
		toSerialize["cpuIdleTimeMax"] = o.CpuIdleTimeMax.Get()
	}
	if o.CpuIdleTimeAvg.IsSet() {
		toSerialize["cpuIdleTimeAvg"] = o.CpuIdleTimeAvg.Get()
	}
	if o.CpuIdleTimeSum.IsSet() {
		toSerialize["cpuIdleTimeSum"] = o.CpuIdleTimeSum.Get()
	}
	if o.CpuUsageCount.IsSet() {
		toSerialize["cpuUsageCount"] = o.CpuUsageCount.Get()
	}
	if o.CpuUsageMin.IsSet() {
		toSerialize["cpuUsageMin"] = o.CpuUsageMin.Get()
	}
	if o.CpuUsageMax.IsSet() {
		toSerialize["cpuUsageMax"] = o.CpuUsageMax.Get()
	}
	if o.CpuUsageAvg.IsSet() {
		toSerialize["cpuUsageAvg"] = o.CpuUsageAvg.Get()
	}
	if o.CpuUsageSum.IsSet() {
		toSerialize["cpuUsageSum"] = o.CpuUsageSum.Get()
	}
	if o.MaxMemoryCount.IsSet() {
		toSerialize["maxMemoryCount"] = o.MaxMemoryCount.Get()
	}
	if o.MaxMemoryMin.IsSet() {
		toSerialize["maxMemoryMin"] = o.MaxMemoryMin.Get()
	}
	if o.MaxMemoryMax.IsSet() {
		toSerialize["maxMemoryMax"] = o.MaxMemoryMax.Get()
	}
	if o.MaxMemoryAvg.IsSet() {
		toSerialize["maxMemoryAvg"] = o.MaxMemoryAvg.Get()
	}
	if o.MaxMemorySum.IsSet() {
		toSerialize["maxMemorySum"] = o.MaxMemorySum.Get()
	}
	if o.CpuUserTimeCount.IsSet() {
		toSerialize["cpuUserTimeCount"] = o.CpuUserTimeCount.Get()
	}
	if o.CpuUserTimeMin.IsSet() {
		toSerialize["cpuUserTimeMin"] = o.CpuUserTimeMin.Get()
	}
	if o.CpuUserTimeMax.IsSet() {
		toSerialize["cpuUserTimeMax"] = o.CpuUserTimeMax.Get()
	}
	if o.CpuUserTimeAvg.IsSet() {
		toSerialize["cpuUserTimeAvg"] = o.CpuUserTimeAvg.Get()
	}
	if o.CpuUserTimeSum.IsSet() {
		toSerialize["cpuUserTimeSum"] = o.CpuUserTimeSum.Get()
	}
	if o.CpuSystemTimeCount.IsSet() {
		toSerialize["cpuSystemTimeCount"] = o.CpuSystemTimeCount.Get()
	}
	if o.CpuSystemTimeMin.IsSet() {
		toSerialize["cpuSystemTimeMin"] = o.CpuSystemTimeMin.Get()
	}
	if o.CpuSystemTimeMax.IsSet() {
		toSerialize["cpuSystemTimeMax"] = o.CpuSystemTimeMax.Get()
	}
	if o.CpuSystemTimeAvg != nil {
		toSerialize["cpuSystemTimeAvg"] = o.CpuSystemTimeAvg
	}
	if o.CpuSystemTimeSum.IsSet() {
		toSerialize["cpuSystemTimeSum"] = o.CpuSystemTimeSum.Get()
	}
	if o.UsedMemoryCount.IsSet() {
		toSerialize["usedMemoryCount"] = o.UsedMemoryCount.Get()
	}
	if o.UsedMemoryMin.IsSet() {
		toSerialize["usedMemoryMin"] = o.UsedMemoryMin.Get()
	}
	if o.UsedMemoryMax.IsSet() {
		toSerialize["usedMemoryMax"] = o.UsedMemoryMax.Get()
	}
	if o.UsedMemoryAvg.IsSet() {
		toSerialize["usedMemoryAvg"] = o.UsedMemoryAvg.Get()
	}
	if o.UsedMemorySum.IsSet() {
		toSerialize["usedMemorySum"] = o.UsedMemorySum.Get()
	}
	if o.FreeMemoryCount.IsSet() {
		toSerialize["freeMemoryCount"] = o.FreeMemoryCount.Get()
	}
	if o.FreeMemoryMin.IsSet() {
		toSerialize["freeMemoryMin"] = o.FreeMemoryMin.Get()
	}
	if o.FreeMemoryMax.IsSet() {
		toSerialize["freeMemoryMax"] = o.FreeMemoryMax.Get()
	}
	if o.FreeMemoryAvg.IsSet() {
		toSerialize["freeMemoryAvg"] = o.FreeMemoryAvg.Get()
	}
	if o.FreeMemorySum.IsSet() {
		toSerialize["freeMemorySum"] = o.FreeMemorySum.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableGuidanceVmwareSizingConfig struct {
	value *GuidanceVmwareSizingConfig
	isSet bool
}

func (v NullableGuidanceVmwareSizingConfig) Get() *GuidanceVmwareSizingConfig {
	return v.value
}

func (v *NullableGuidanceVmwareSizingConfig) Set(val *GuidanceVmwareSizingConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableGuidanceVmwareSizingConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableGuidanceVmwareSizingConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGuidanceVmwareSizingConfig(val *GuidanceVmwareSizingConfig) *NullableGuidanceVmwareSizingConfig {
	return &NullableGuidanceVmwareSizingConfig{value: val, isSet: true}
}

func (v NullableGuidanceVmwareSizingConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGuidanceVmwareSizingConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


