/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject77 struct for InlineObject77
type InlineObject77 struct {
	Group GroupUpdate `json:"group"`
}

// NewInlineObject77 instantiates a new InlineObject77 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject77(group GroupUpdate, ) *InlineObject77 {
	this := InlineObject77{}
	this.Group = group
	return &this
}

// NewInlineObject77WithDefaults instantiates a new InlineObject77 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject77WithDefaults() *InlineObject77 {
	this := InlineObject77{}
	return &this
}

// GetGroup returns the Group field value
func (o *InlineObject77) GetGroup() GroupUpdate {
	if o == nil  {
		var ret GroupUpdate
		return ret
	}

	return o.Group
}

// GetGroupOk returns a tuple with the Group field value
// and a boolean to check if the value has been set.
func (o *InlineObject77) GetGroupOk() (*GroupUpdate, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Group, true
}

// SetGroup sets field value
func (o *InlineObject77) SetGroup(v GroupUpdate) {
	o.Group = v
}

func (o InlineObject77) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["group"] = o.Group
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject77 struct {
	value *InlineObject77
	isSet bool
}

func (v NullableInlineObject77) Get() *InlineObject77 {
	return v.value
}

func (v *NullableInlineObject77) Set(val *InlineObject77) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject77) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject77) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject77(val *InlineObject77) *NullableInlineObject77 {
	return &NullableInlineObject77{value: val, isSet: true}
}

func (v NullableInlineObject77) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject77) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


