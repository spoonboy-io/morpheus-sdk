/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200149 struct for InlineResponse200149
type InlineResponse200149 struct {
	StorageVolume *StorageVolume `json:"storageVolume,omitempty"`
}

// NewInlineResponse200149 instantiates a new InlineResponse200149 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200149() *InlineResponse200149 {
	this := InlineResponse200149{}
	return &this
}

// NewInlineResponse200149WithDefaults instantiates a new InlineResponse200149 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200149WithDefaults() *InlineResponse200149 {
	this := InlineResponse200149{}
	return &this
}

// GetStorageVolume returns the StorageVolume field value if set, zero value otherwise.
func (o *InlineResponse200149) GetStorageVolume() StorageVolume {
	if o == nil || o.StorageVolume == nil {
		var ret StorageVolume
		return ret
	}
	return *o.StorageVolume
}

// GetStorageVolumeOk returns a tuple with the StorageVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200149) GetStorageVolumeOk() (*StorageVolume, bool) {
	if o == nil || o.StorageVolume == nil {
		return nil, false
	}
	return o.StorageVolume, true
}

// HasStorageVolume returns a boolean if a field has been set.
func (o *InlineResponse200149) HasStorageVolume() bool {
	if o != nil && o.StorageVolume != nil {
		return true
	}

	return false
}

// SetStorageVolume gets a reference to the given StorageVolume and assigns it to the StorageVolume field.
func (o *InlineResponse200149) SetStorageVolume(v StorageVolume) {
	o.StorageVolume = &v
}

func (o InlineResponse200149) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StorageVolume != nil {
		toSerialize["storageVolume"] = o.StorageVolume
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200149 struct {
	value *InlineResponse200149
	isSet bool
}

func (v NullableInlineResponse200149) Get() *InlineResponse200149 {
	return v.value
}

func (v *NullableInlineResponse200149) Set(val *InlineResponse200149) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200149) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200149) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200149(val *InlineResponse200149) *NullableInlineResponse200149 {
	return &NullableInlineResponse200149{value: val, isSet: true}
}

func (v NullableInlineResponse200149) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200149) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


