/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject130 struct for InlineObject130
type InlineObject130 struct {
	LoadBalancerMonitor *ApiLoadBalancersLoadBalancerIdMonitorsLoadBalancerMonitor `json:"loadBalancerMonitor,omitempty"`
}

// NewInlineObject130 instantiates a new InlineObject130 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject130() *InlineObject130 {
	this := InlineObject130{}
	return &this
}

// NewInlineObject130WithDefaults instantiates a new InlineObject130 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject130WithDefaults() *InlineObject130 {
	this := InlineObject130{}
	return &this
}

// GetLoadBalancerMonitor returns the LoadBalancerMonitor field value if set, zero value otherwise.
func (o *InlineObject130) GetLoadBalancerMonitor() ApiLoadBalancersLoadBalancerIdMonitorsLoadBalancerMonitor {
	if o == nil || o.LoadBalancerMonitor == nil {
		var ret ApiLoadBalancersLoadBalancerIdMonitorsLoadBalancerMonitor
		return ret
	}
	return *o.LoadBalancerMonitor
}

// GetLoadBalancerMonitorOk returns a tuple with the LoadBalancerMonitor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject130) GetLoadBalancerMonitorOk() (*ApiLoadBalancersLoadBalancerIdMonitorsLoadBalancerMonitor, bool) {
	if o == nil || o.LoadBalancerMonitor == nil {
		return nil, false
	}
	return o.LoadBalancerMonitor, true
}

// HasLoadBalancerMonitor returns a boolean if a field has been set.
func (o *InlineObject130) HasLoadBalancerMonitor() bool {
	if o != nil && o.LoadBalancerMonitor != nil {
		return true
	}

	return false
}

// SetLoadBalancerMonitor gets a reference to the given ApiLoadBalancersLoadBalancerIdMonitorsLoadBalancerMonitor and assigns it to the LoadBalancerMonitor field.
func (o *InlineObject130) SetLoadBalancerMonitor(v ApiLoadBalancersLoadBalancerIdMonitorsLoadBalancerMonitor) {
	o.LoadBalancerMonitor = &v
}

func (o InlineObject130) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LoadBalancerMonitor != nil {
		toSerialize["loadBalancerMonitor"] = o.LoadBalancerMonitor
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject130 struct {
	value *InlineObject130
	isSet bool
}

func (v NullableInlineObject130) Get() *InlineObject130 {
	return v.value
}

func (v *NullableInlineObject130) Set(val *InlineObject130) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject130) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject130) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject130(val *InlineObject130) *NullableInlineObject130 {
	return &NullableInlineObject130{value: val, isSet: true}
}

func (v NullableInlineObject130) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject130) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


