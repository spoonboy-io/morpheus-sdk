/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200100 struct for InlineResponse200100
type InlineResponse200100 struct {
	RuleGroups *[]InlineResponse20095NetworkRouterFirewallRuleGroups `json:"ruleGroups,omitempty"`
}

// NewInlineResponse200100 instantiates a new InlineResponse200100 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200100() *InlineResponse200100 {
	this := InlineResponse200100{}
	return &this
}

// NewInlineResponse200100WithDefaults instantiates a new InlineResponse200100 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200100WithDefaults() *InlineResponse200100 {
	this := InlineResponse200100{}
	return &this
}

// GetRuleGroups returns the RuleGroups field value if set, zero value otherwise.
func (o *InlineResponse200100) GetRuleGroups() []InlineResponse20095NetworkRouterFirewallRuleGroups {
	if o == nil || o.RuleGroups == nil {
		var ret []InlineResponse20095NetworkRouterFirewallRuleGroups
		return ret
	}
	return *o.RuleGroups
}

// GetRuleGroupsOk returns a tuple with the RuleGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200100) GetRuleGroupsOk() (*[]InlineResponse20095NetworkRouterFirewallRuleGroups, bool) {
	if o == nil || o.RuleGroups == nil {
		return nil, false
	}
	return o.RuleGroups, true
}

// HasRuleGroups returns a boolean if a field has been set.
func (o *InlineResponse200100) HasRuleGroups() bool {
	if o != nil && o.RuleGroups != nil {
		return true
	}

	return false
}

// SetRuleGroups gets a reference to the given []InlineResponse20095NetworkRouterFirewallRuleGroups and assigns it to the RuleGroups field.
func (o *InlineResponse200100) SetRuleGroups(v []InlineResponse20095NetworkRouterFirewallRuleGroups) {
	o.RuleGroups = &v
}

func (o InlineResponse200100) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RuleGroups != nil {
		toSerialize["ruleGroups"] = o.RuleGroups
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200100 struct {
	value *InlineResponse200100
	isSet bool
}

func (v NullableInlineResponse200100) Get() *InlineResponse200100 {
	return v.value
}

func (v *NullableInlineResponse200100) Set(val *InlineResponse200100) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200100) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200100) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200100(val *InlineResponse200100) *NullableInlineResponse200100 {
	return &NullableInlineResponse200100{value: val, isSet: true}
}

func (v NullableInlineResponse200100) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200100) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


