/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20091 struct for InlineResponse20091
type InlineResponse20091 struct {
	NetworkGroup *map[string]interface{} `json:"networkGroup,omitempty"`
}

// NewInlineResponse20091 instantiates a new InlineResponse20091 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20091() *InlineResponse20091 {
	this := InlineResponse20091{}
	return &this
}

// NewInlineResponse20091WithDefaults instantiates a new InlineResponse20091 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20091WithDefaults() *InlineResponse20091 {
	this := InlineResponse20091{}
	return &this
}

// GetNetworkGroup returns the NetworkGroup field value if set, zero value otherwise.
func (o *InlineResponse20091) GetNetworkGroup() map[string]interface{} {
	if o == nil || o.NetworkGroup == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.NetworkGroup
}

// GetNetworkGroupOk returns a tuple with the NetworkGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20091) GetNetworkGroupOk() (*map[string]interface{}, bool) {
	if o == nil || o.NetworkGroup == nil {
		return nil, false
	}
	return o.NetworkGroup, true
}

// HasNetworkGroup returns a boolean if a field has been set.
func (o *InlineResponse20091) HasNetworkGroup() bool {
	if o != nil && o.NetworkGroup != nil {
		return true
	}

	return false
}

// SetNetworkGroup gets a reference to the given map[string]interface{} and assigns it to the NetworkGroup field.
func (o *InlineResponse20091) SetNetworkGroup(v map[string]interface{}) {
	o.NetworkGroup = &v
}

func (o InlineResponse20091) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkGroup != nil {
		toSerialize["networkGroup"] = o.NetworkGroup
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20091 struct {
	value *InlineResponse20091
	isSet bool
}

func (v NullableInlineResponse20091) Get() *InlineResponse20091 {
	return v.value
}

func (v *NullableInlineResponse20091) Set(val *InlineResponse20091) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20091) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20091) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20091(val *InlineResponse20091) *NullableInlineResponse20091 {
	return &NullableInlineResponse20091{value: val, isSet: true}
}

func (v NullableInlineResponse20091) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20091) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


