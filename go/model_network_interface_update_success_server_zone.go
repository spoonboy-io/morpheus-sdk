/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetworkInterfaceUpdateSuccessServerZone struct for NetworkInterfaceUpdateSuccessServerZone
type NetworkInterfaceUpdateSuccessServerZone struct {
	Id *int64 `json:"id,omitempty"`
	AccountId *int64 `json:"accountId,omitempty"`
	Groups *[]int64 `json:"groups,omitempty"`
	Name *string `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Location *string `json:"location,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	ZoneTypeId *int64 `json:"zoneTypeId,omitempty"`
	NetworkServer *NetworkInterfaceUpdateSuccessServerZoneNetworkServer `json:"networkServer,omitempty"`
	SecurityServer NullableString `json:"securityServer,omitempty"`
}

// NewNetworkInterfaceUpdateSuccessServerZone instantiates a new NetworkInterfaceUpdateSuccessServerZone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkInterfaceUpdateSuccessServerZone() *NetworkInterfaceUpdateSuccessServerZone {
	this := NetworkInterfaceUpdateSuccessServerZone{}
	return &this
}

// NewNetworkInterfaceUpdateSuccessServerZoneWithDefaults instantiates a new NetworkInterfaceUpdateSuccessServerZone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkInterfaceUpdateSuccessServerZoneWithDefaults() *NetworkInterfaceUpdateSuccessServerZone {
	this := NetworkInterfaceUpdateSuccessServerZone{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessServerZone) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessServerZone) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessServerZone) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *NetworkInterfaceUpdateSuccessServerZone) SetId(v int64) {
	o.Id = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessServerZone) GetAccountId() int64 {
	if o == nil || o.AccountId == nil {
		var ret int64
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessServerZone) GetAccountIdOk() (*int64, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessServerZone) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int64 and assigns it to the AccountId field.
func (o *NetworkInterfaceUpdateSuccessServerZone) SetAccountId(v int64) {
	o.AccountId = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessServerZone) GetGroups() []int64 {
	if o == nil || o.Groups == nil {
		var ret []int64
		return ret
	}
	return *o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessServerZone) GetGroupsOk() (*[]int64, bool) {
	if o == nil || o.Groups == nil {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessServerZone) HasGroups() bool {
	if o != nil && o.Groups != nil {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []int64 and assigns it to the Groups field.
func (o *NetworkInterfaceUpdateSuccessServerZone) SetGroups(v []int64) {
	o.Groups = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessServerZone) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessServerZone) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessServerZone) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NetworkInterfaceUpdateSuccessServerZone) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessServerZone) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessServerZone) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessServerZone) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *NetworkInterfaceUpdateSuccessServerZone) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *NetworkInterfaceUpdateSuccessServerZone) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *NetworkInterfaceUpdateSuccessServerZone) UnsetDescription() {
	o.Description.Unset()
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessServerZone) GetLocation() string {
	if o == nil || o.Location == nil {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessServerZone) GetLocationOk() (*string, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessServerZone) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *NetworkInterfaceUpdateSuccessServerZone) SetLocation(v string) {
	o.Location = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessServerZone) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessServerZone) GetVisibilityOk() (*string, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessServerZone) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *NetworkInterfaceUpdateSuccessServerZone) SetVisibility(v string) {
	o.Visibility = &v
}

// GetZoneTypeId returns the ZoneTypeId field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessServerZone) GetZoneTypeId() int64 {
	if o == nil || o.ZoneTypeId == nil {
		var ret int64
		return ret
	}
	return *o.ZoneTypeId
}

// GetZoneTypeIdOk returns a tuple with the ZoneTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessServerZone) GetZoneTypeIdOk() (*int64, bool) {
	if o == nil || o.ZoneTypeId == nil {
		return nil, false
	}
	return o.ZoneTypeId, true
}

// HasZoneTypeId returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessServerZone) HasZoneTypeId() bool {
	if o != nil && o.ZoneTypeId != nil {
		return true
	}

	return false
}

// SetZoneTypeId gets a reference to the given int64 and assigns it to the ZoneTypeId field.
func (o *NetworkInterfaceUpdateSuccessServerZone) SetZoneTypeId(v int64) {
	o.ZoneTypeId = &v
}

// GetNetworkServer returns the NetworkServer field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessServerZone) GetNetworkServer() NetworkInterfaceUpdateSuccessServerZoneNetworkServer {
	if o == nil || o.NetworkServer == nil {
		var ret NetworkInterfaceUpdateSuccessServerZoneNetworkServer
		return ret
	}
	return *o.NetworkServer
}

// GetNetworkServerOk returns a tuple with the NetworkServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessServerZone) GetNetworkServerOk() (*NetworkInterfaceUpdateSuccessServerZoneNetworkServer, bool) {
	if o == nil || o.NetworkServer == nil {
		return nil, false
	}
	return o.NetworkServer, true
}

// HasNetworkServer returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessServerZone) HasNetworkServer() bool {
	if o != nil && o.NetworkServer != nil {
		return true
	}

	return false
}

// SetNetworkServer gets a reference to the given NetworkInterfaceUpdateSuccessServerZoneNetworkServer and assigns it to the NetworkServer field.
func (o *NetworkInterfaceUpdateSuccessServerZone) SetNetworkServer(v NetworkInterfaceUpdateSuccessServerZoneNetworkServer) {
	o.NetworkServer = &v
}

// GetSecurityServer returns the SecurityServer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessServerZone) GetSecurityServer() string {
	if o == nil || o.SecurityServer.Get() == nil {
		var ret string
		return ret
	}
	return *o.SecurityServer.Get()
}

// GetSecurityServerOk returns a tuple with the SecurityServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessServerZone) GetSecurityServerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SecurityServer.Get(), o.SecurityServer.IsSet()
}

// HasSecurityServer returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessServerZone) HasSecurityServer() bool {
	if o != nil && o.SecurityServer.IsSet() {
		return true
	}

	return false
}

// SetSecurityServer gets a reference to the given NullableString and assigns it to the SecurityServer field.
func (o *NetworkInterfaceUpdateSuccessServerZone) SetSecurityServer(v string) {
	o.SecurityServer.Set(&v)
}
// SetSecurityServerNil sets the value for SecurityServer to be an explicit nil
func (o *NetworkInterfaceUpdateSuccessServerZone) SetSecurityServerNil() {
	o.SecurityServer.Set(nil)
}

// UnsetSecurityServer ensures that no value is present for SecurityServer, not even an explicit nil
func (o *NetworkInterfaceUpdateSuccessServerZone) UnsetSecurityServer() {
	o.SecurityServer.Unset()
}

func (o NetworkInterfaceUpdateSuccessServerZone) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.AccountId != nil {
		toSerialize["accountId"] = o.AccountId
	}
	if o.Groups != nil {
		toSerialize["groups"] = o.Groups
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if o.ZoneTypeId != nil {
		toSerialize["zoneTypeId"] = o.ZoneTypeId
	}
	if o.NetworkServer != nil {
		toSerialize["networkServer"] = o.NetworkServer
	}
	if o.SecurityServer.IsSet() {
		toSerialize["securityServer"] = o.SecurityServer.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkInterfaceUpdateSuccessServerZone struct {
	value *NetworkInterfaceUpdateSuccessServerZone
	isSet bool
}

func (v NullableNetworkInterfaceUpdateSuccessServerZone) Get() *NetworkInterfaceUpdateSuccessServerZone {
	return v.value
}

func (v *NullableNetworkInterfaceUpdateSuccessServerZone) Set(val *NetworkInterfaceUpdateSuccessServerZone) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkInterfaceUpdateSuccessServerZone) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkInterfaceUpdateSuccessServerZone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkInterfaceUpdateSuccessServerZone(val *NetworkInterfaceUpdateSuccessServerZone) *NullableNetworkInterfaceUpdateSuccessServerZone {
	return &NullableNetworkInterfaceUpdateSuccessServerZone{value: val, isSet: true}
}

func (v NullableNetworkInterfaceUpdateSuccessServerZone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkInterfaceUpdateSuccessServerZone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


