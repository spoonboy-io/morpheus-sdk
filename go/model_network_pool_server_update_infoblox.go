/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetworkPoolServerUpdateInfoblox struct for NetworkPoolServerUpdateInfoblox
type NetworkPoolServerUpdateInfoblox struct {
	// Name
	Name *string `json:"name,omitempty"`
	// Can be used to enable / disable the network pool server.
	Enabled *bool `json:"enabled,omitempty"`
	// URL
	ServiceUrl NullableString `json:"serviceUrl,omitempty"`
	// Username
	ServiceUsername NullableString `json:"serviceUsername,omitempty"`
	// Password
	ServicePassword NullableString `json:"servicePassword,omitempty"`
	// Throttle Rate
	ServiceThrottleRate NullableInt64 `json:"serviceThrottleRate,omitempty"`
	// Disable SSL SNI Verification
	IgnoreSsl *bool `json:"ignoreSsl,omitempty"`
	// Network Filter
	NetworkFilter NullableString `json:"networkFilter,omitempty"`
	// Zone Filter
	ZoneFilter NullableString `json:"zoneFilter,omitempty"`
	// Tenant Match
	TenantMatch NullableString `json:"tenantMatch,omitempty"`
	// IP Mode
	ServiceMode NullableString `json:"serviceMode,omitempty"`
	Config *NetworkPoolServerCreateInfobloxConfig `json:"config,omitempty"`
	Credential *NetworkPoolServerCreateBluecatCredential `json:"credential,omitempty"`
}

// NewNetworkPoolServerUpdateInfoblox instantiates a new NetworkPoolServerUpdateInfoblox object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkPoolServerUpdateInfoblox() *NetworkPoolServerUpdateInfoblox {
	this := NetworkPoolServerUpdateInfoblox{}
	var enabled bool = true
	this.Enabled = &enabled
	var serviceThrottleRate int64 = 0
	this.ServiceThrottleRate = *NewNullableInt64(&serviceThrottleRate)
	var serviceMode SERVICE_MODE = "static"
	this.ServiceMode = *NewNullableString(&serviceMode)
	return &this
}

// NewNetworkPoolServerUpdateInfobloxWithDefaults instantiates a new NetworkPoolServerUpdateInfoblox object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkPoolServerUpdateInfobloxWithDefaults() *NetworkPoolServerUpdateInfoblox {
	this := NetworkPoolServerUpdateInfoblox{}
	var enabled bool = true
	this.Enabled = &enabled
	var serviceThrottleRate int64 = 0
	this.ServiceThrottleRate = *NewNullableInt64(&serviceThrottleRate)
	var serviceMode SERVICE_MODE = "static"
	this.ServiceMode = *NewNullableString(&serviceMode)
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NetworkPoolServerUpdateInfoblox) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPoolServerUpdateInfoblox) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdateInfoblox) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NetworkPoolServerUpdateInfoblox) SetName(v string) {
	o.Name = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *NetworkPoolServerUpdateInfoblox) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPoolServerUpdateInfoblox) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdateInfoblox) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *NetworkPoolServerUpdateInfoblox) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetServiceUrl returns the ServiceUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkPoolServerUpdateInfoblox) GetServiceUrl() string {
	if o == nil || o.ServiceUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServiceUrl.Get()
}

// GetServiceUrlOk returns a tuple with the ServiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkPoolServerUpdateInfoblox) GetServiceUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServiceUrl.Get(), o.ServiceUrl.IsSet()
}

// HasServiceUrl returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdateInfoblox) HasServiceUrl() bool {
	if o != nil && o.ServiceUrl.IsSet() {
		return true
	}

	return false
}

// SetServiceUrl gets a reference to the given NullableString and assigns it to the ServiceUrl field.
func (o *NetworkPoolServerUpdateInfoblox) SetServiceUrl(v string) {
	o.ServiceUrl.Set(&v)
}
// SetServiceUrlNil sets the value for ServiceUrl to be an explicit nil
func (o *NetworkPoolServerUpdateInfoblox) SetServiceUrlNil() {
	o.ServiceUrl.Set(nil)
}

// UnsetServiceUrl ensures that no value is present for ServiceUrl, not even an explicit nil
func (o *NetworkPoolServerUpdateInfoblox) UnsetServiceUrl() {
	o.ServiceUrl.Unset()
}

// GetServiceUsername returns the ServiceUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkPoolServerUpdateInfoblox) GetServiceUsername() string {
	if o == nil || o.ServiceUsername.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServiceUsername.Get()
}

// GetServiceUsernameOk returns a tuple with the ServiceUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkPoolServerUpdateInfoblox) GetServiceUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServiceUsername.Get(), o.ServiceUsername.IsSet()
}

// HasServiceUsername returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdateInfoblox) HasServiceUsername() bool {
	if o != nil && o.ServiceUsername.IsSet() {
		return true
	}

	return false
}

// SetServiceUsername gets a reference to the given NullableString and assigns it to the ServiceUsername field.
func (o *NetworkPoolServerUpdateInfoblox) SetServiceUsername(v string) {
	o.ServiceUsername.Set(&v)
}
// SetServiceUsernameNil sets the value for ServiceUsername to be an explicit nil
func (o *NetworkPoolServerUpdateInfoblox) SetServiceUsernameNil() {
	o.ServiceUsername.Set(nil)
}

// UnsetServiceUsername ensures that no value is present for ServiceUsername, not even an explicit nil
func (o *NetworkPoolServerUpdateInfoblox) UnsetServiceUsername() {
	o.ServiceUsername.Unset()
}

// GetServicePassword returns the ServicePassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkPoolServerUpdateInfoblox) GetServicePassword() string {
	if o == nil || o.ServicePassword.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServicePassword.Get()
}

// GetServicePasswordOk returns a tuple with the ServicePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkPoolServerUpdateInfoblox) GetServicePasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServicePassword.Get(), o.ServicePassword.IsSet()
}

// HasServicePassword returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdateInfoblox) HasServicePassword() bool {
	if o != nil && o.ServicePassword.IsSet() {
		return true
	}

	return false
}

// SetServicePassword gets a reference to the given NullableString and assigns it to the ServicePassword field.
func (o *NetworkPoolServerUpdateInfoblox) SetServicePassword(v string) {
	o.ServicePassword.Set(&v)
}
// SetServicePasswordNil sets the value for ServicePassword to be an explicit nil
func (o *NetworkPoolServerUpdateInfoblox) SetServicePasswordNil() {
	o.ServicePassword.Set(nil)
}

// UnsetServicePassword ensures that no value is present for ServicePassword, not even an explicit nil
func (o *NetworkPoolServerUpdateInfoblox) UnsetServicePassword() {
	o.ServicePassword.Unset()
}

// GetServiceThrottleRate returns the ServiceThrottleRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkPoolServerUpdateInfoblox) GetServiceThrottleRate() int64 {
	if o == nil || o.ServiceThrottleRate.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ServiceThrottleRate.Get()
}

// GetServiceThrottleRateOk returns a tuple with the ServiceThrottleRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkPoolServerUpdateInfoblox) GetServiceThrottleRateOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServiceThrottleRate.Get(), o.ServiceThrottleRate.IsSet()
}

// HasServiceThrottleRate returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdateInfoblox) HasServiceThrottleRate() bool {
	if o != nil && o.ServiceThrottleRate.IsSet() {
		return true
	}

	return false
}

// SetServiceThrottleRate gets a reference to the given NullableInt64 and assigns it to the ServiceThrottleRate field.
func (o *NetworkPoolServerUpdateInfoblox) SetServiceThrottleRate(v int64) {
	o.ServiceThrottleRate.Set(&v)
}
// SetServiceThrottleRateNil sets the value for ServiceThrottleRate to be an explicit nil
func (o *NetworkPoolServerUpdateInfoblox) SetServiceThrottleRateNil() {
	o.ServiceThrottleRate.Set(nil)
}

// UnsetServiceThrottleRate ensures that no value is present for ServiceThrottleRate, not even an explicit nil
func (o *NetworkPoolServerUpdateInfoblox) UnsetServiceThrottleRate() {
	o.ServiceThrottleRate.Unset()
}

// GetIgnoreSsl returns the IgnoreSsl field value if set, zero value otherwise.
func (o *NetworkPoolServerUpdateInfoblox) GetIgnoreSsl() bool {
	if o == nil || o.IgnoreSsl == nil {
		var ret bool
		return ret
	}
	return *o.IgnoreSsl
}

// GetIgnoreSslOk returns a tuple with the IgnoreSsl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPoolServerUpdateInfoblox) GetIgnoreSslOk() (*bool, bool) {
	if o == nil || o.IgnoreSsl == nil {
		return nil, false
	}
	return o.IgnoreSsl, true
}

// HasIgnoreSsl returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdateInfoblox) HasIgnoreSsl() bool {
	if o != nil && o.IgnoreSsl != nil {
		return true
	}

	return false
}

// SetIgnoreSsl gets a reference to the given bool and assigns it to the IgnoreSsl field.
func (o *NetworkPoolServerUpdateInfoblox) SetIgnoreSsl(v bool) {
	o.IgnoreSsl = &v
}

// GetNetworkFilter returns the NetworkFilter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkPoolServerUpdateInfoblox) GetNetworkFilter() string {
	if o == nil || o.NetworkFilter.Get() == nil {
		var ret string
		return ret
	}
	return *o.NetworkFilter.Get()
}

// GetNetworkFilterOk returns a tuple with the NetworkFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkPoolServerUpdateInfoblox) GetNetworkFilterOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetworkFilter.Get(), o.NetworkFilter.IsSet()
}

// HasNetworkFilter returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdateInfoblox) HasNetworkFilter() bool {
	if o != nil && o.NetworkFilter.IsSet() {
		return true
	}

	return false
}

// SetNetworkFilter gets a reference to the given NullableString and assigns it to the NetworkFilter field.
func (o *NetworkPoolServerUpdateInfoblox) SetNetworkFilter(v string) {
	o.NetworkFilter.Set(&v)
}
// SetNetworkFilterNil sets the value for NetworkFilter to be an explicit nil
func (o *NetworkPoolServerUpdateInfoblox) SetNetworkFilterNil() {
	o.NetworkFilter.Set(nil)
}

// UnsetNetworkFilter ensures that no value is present for NetworkFilter, not even an explicit nil
func (o *NetworkPoolServerUpdateInfoblox) UnsetNetworkFilter() {
	o.NetworkFilter.Unset()
}

// GetZoneFilter returns the ZoneFilter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkPoolServerUpdateInfoblox) GetZoneFilter() string {
	if o == nil || o.ZoneFilter.Get() == nil {
		var ret string
		return ret
	}
	return *o.ZoneFilter.Get()
}

// GetZoneFilterOk returns a tuple with the ZoneFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkPoolServerUpdateInfoblox) GetZoneFilterOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ZoneFilter.Get(), o.ZoneFilter.IsSet()
}

// HasZoneFilter returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdateInfoblox) HasZoneFilter() bool {
	if o != nil && o.ZoneFilter.IsSet() {
		return true
	}

	return false
}

// SetZoneFilter gets a reference to the given NullableString and assigns it to the ZoneFilter field.
func (o *NetworkPoolServerUpdateInfoblox) SetZoneFilter(v string) {
	o.ZoneFilter.Set(&v)
}
// SetZoneFilterNil sets the value for ZoneFilter to be an explicit nil
func (o *NetworkPoolServerUpdateInfoblox) SetZoneFilterNil() {
	o.ZoneFilter.Set(nil)
}

// UnsetZoneFilter ensures that no value is present for ZoneFilter, not even an explicit nil
func (o *NetworkPoolServerUpdateInfoblox) UnsetZoneFilter() {
	o.ZoneFilter.Unset()
}

// GetTenantMatch returns the TenantMatch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkPoolServerUpdateInfoblox) GetTenantMatch() string {
	if o == nil || o.TenantMatch.Get() == nil {
		var ret string
		return ret
	}
	return *o.TenantMatch.Get()
}

// GetTenantMatchOk returns a tuple with the TenantMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkPoolServerUpdateInfoblox) GetTenantMatchOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TenantMatch.Get(), o.TenantMatch.IsSet()
}

// HasTenantMatch returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdateInfoblox) HasTenantMatch() bool {
	if o != nil && o.TenantMatch.IsSet() {
		return true
	}

	return false
}

// SetTenantMatch gets a reference to the given NullableString and assigns it to the TenantMatch field.
func (o *NetworkPoolServerUpdateInfoblox) SetTenantMatch(v string) {
	o.TenantMatch.Set(&v)
}
// SetTenantMatchNil sets the value for TenantMatch to be an explicit nil
func (o *NetworkPoolServerUpdateInfoblox) SetTenantMatchNil() {
	o.TenantMatch.Set(nil)
}

// UnsetTenantMatch ensures that no value is present for TenantMatch, not even an explicit nil
func (o *NetworkPoolServerUpdateInfoblox) UnsetTenantMatch() {
	o.TenantMatch.Unset()
}

// GetServiceMode returns the ServiceMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkPoolServerUpdateInfoblox) GetServiceMode() string {
	if o == nil || o.ServiceMode.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServiceMode.Get()
}

// GetServiceModeOk returns a tuple with the ServiceMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkPoolServerUpdateInfoblox) GetServiceModeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServiceMode.Get(), o.ServiceMode.IsSet()
}

// HasServiceMode returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdateInfoblox) HasServiceMode() bool {
	if o != nil && o.ServiceMode.IsSet() {
		return true
	}

	return false
}

// SetServiceMode gets a reference to the given NullableString and assigns it to the ServiceMode field.
func (o *NetworkPoolServerUpdateInfoblox) SetServiceMode(v string) {
	o.ServiceMode.Set(&v)
}
// SetServiceModeNil sets the value for ServiceMode to be an explicit nil
func (o *NetworkPoolServerUpdateInfoblox) SetServiceModeNil() {
	o.ServiceMode.Set(nil)
}

// UnsetServiceMode ensures that no value is present for ServiceMode, not even an explicit nil
func (o *NetworkPoolServerUpdateInfoblox) UnsetServiceMode() {
	o.ServiceMode.Unset()
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *NetworkPoolServerUpdateInfoblox) GetConfig() NetworkPoolServerCreateInfobloxConfig {
	if o == nil || o.Config == nil {
		var ret NetworkPoolServerCreateInfobloxConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPoolServerUpdateInfoblox) GetConfigOk() (*NetworkPoolServerCreateInfobloxConfig, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdateInfoblox) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given NetworkPoolServerCreateInfobloxConfig and assigns it to the Config field.
func (o *NetworkPoolServerUpdateInfoblox) SetConfig(v NetworkPoolServerCreateInfobloxConfig) {
	o.Config = &v
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *NetworkPoolServerUpdateInfoblox) GetCredential() NetworkPoolServerCreateBluecatCredential {
	if o == nil || o.Credential == nil {
		var ret NetworkPoolServerCreateBluecatCredential
		return ret
	}
	return *o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPoolServerUpdateInfoblox) GetCredentialOk() (*NetworkPoolServerCreateBluecatCredential, bool) {
	if o == nil || o.Credential == nil {
		return nil, false
	}
	return o.Credential, true
}

// HasCredential returns a boolean if a field has been set.
func (o *NetworkPoolServerUpdateInfoblox) HasCredential() bool {
	if o != nil && o.Credential != nil {
		return true
	}

	return false
}

// SetCredential gets a reference to the given NetworkPoolServerCreateBluecatCredential and assigns it to the Credential field.
func (o *NetworkPoolServerUpdateInfoblox) SetCredential(v NetworkPoolServerCreateBluecatCredential) {
	o.Credential = &v
}

func (o NetworkPoolServerUpdateInfoblox) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.ServiceUrl.IsSet() {
		toSerialize["serviceUrl"] = o.ServiceUrl.Get()
	}
	if o.ServiceUsername.IsSet() {
		toSerialize["serviceUsername"] = o.ServiceUsername.Get()
	}
	if o.ServicePassword.IsSet() {
		toSerialize["servicePassword"] = o.ServicePassword.Get()
	}
	if o.ServiceThrottleRate.IsSet() {
		toSerialize["serviceThrottleRate"] = o.ServiceThrottleRate.Get()
	}
	if o.IgnoreSsl != nil {
		toSerialize["ignoreSsl"] = o.IgnoreSsl
	}
	if o.NetworkFilter.IsSet() {
		toSerialize["networkFilter"] = o.NetworkFilter.Get()
	}
	if o.ZoneFilter.IsSet() {
		toSerialize["zoneFilter"] = o.ZoneFilter.Get()
	}
	if o.TenantMatch.IsSet() {
		toSerialize["tenantMatch"] = o.TenantMatch.Get()
	}
	if o.ServiceMode.IsSet() {
		toSerialize["serviceMode"] = o.ServiceMode.Get()
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.Credential != nil {
		toSerialize["credential"] = o.Credential
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkPoolServerUpdateInfoblox struct {
	value *NetworkPoolServerUpdateInfoblox
	isSet bool
}

func (v NullableNetworkPoolServerUpdateInfoblox) Get() *NetworkPoolServerUpdateInfoblox {
	return v.value
}

func (v *NullableNetworkPoolServerUpdateInfoblox) Set(val *NetworkPoolServerUpdateInfoblox) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkPoolServerUpdateInfoblox) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkPoolServerUpdateInfoblox) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkPoolServerUpdateInfoblox(val *NetworkPoolServerUpdateInfoblox) *NullableNetworkPoolServerUpdateInfoblox {
	return &NullableNetworkPoolServerUpdateInfoblox{value: val, isSet: true}
}

func (v NullableNetworkPoolServerUpdateInfoblox) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkPoolServerUpdateInfoblox) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


