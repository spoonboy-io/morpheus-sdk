/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiBlueprintsIdUpdatePermissionsResourcePermission struct for ApiBlueprintsIdUpdatePermissionsResourcePermission
type ApiBlueprintsIdUpdatePermissionsResourcePermission struct {
	// Set to true to grant access to all groups
	All *bool `json:"all,omitempty"`
	// Array of objects identifying groups with access
	Sites *[]ApiBlueprintsIdUpdatePermissionsResourcePermissionSites `json:"sites,omitempty"`
	// User ID, can be used to change blueprint owner.
	OwnerId *int64 `json:"ownerId,omitempty"`
}

// NewApiBlueprintsIdUpdatePermissionsResourcePermission instantiates a new ApiBlueprintsIdUpdatePermissionsResourcePermission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiBlueprintsIdUpdatePermissionsResourcePermission() *ApiBlueprintsIdUpdatePermissionsResourcePermission {
	this := ApiBlueprintsIdUpdatePermissionsResourcePermission{}
	return &this
}

// NewApiBlueprintsIdUpdatePermissionsResourcePermissionWithDefaults instantiates a new ApiBlueprintsIdUpdatePermissionsResourcePermission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiBlueprintsIdUpdatePermissionsResourcePermissionWithDefaults() *ApiBlueprintsIdUpdatePermissionsResourcePermission {
	this := ApiBlueprintsIdUpdatePermissionsResourcePermission{}
	return &this
}

// GetAll returns the All field value if set, zero value otherwise.
func (o *ApiBlueprintsIdUpdatePermissionsResourcePermission) GetAll() bool {
	if o == nil || o.All == nil {
		var ret bool
		return ret
	}
	return *o.All
}

// GetAllOk returns a tuple with the All field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBlueprintsIdUpdatePermissionsResourcePermission) GetAllOk() (*bool, bool) {
	if o == nil || o.All == nil {
		return nil, false
	}
	return o.All, true
}

// HasAll returns a boolean if a field has been set.
func (o *ApiBlueprintsIdUpdatePermissionsResourcePermission) HasAll() bool {
	if o != nil && o.All != nil {
		return true
	}

	return false
}

// SetAll gets a reference to the given bool and assigns it to the All field.
func (o *ApiBlueprintsIdUpdatePermissionsResourcePermission) SetAll(v bool) {
	o.All = &v
}

// GetSites returns the Sites field value if set, zero value otherwise.
func (o *ApiBlueprintsIdUpdatePermissionsResourcePermission) GetSites() []ApiBlueprintsIdUpdatePermissionsResourcePermissionSites {
	if o == nil || o.Sites == nil {
		var ret []ApiBlueprintsIdUpdatePermissionsResourcePermissionSites
		return ret
	}
	return *o.Sites
}

// GetSitesOk returns a tuple with the Sites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBlueprintsIdUpdatePermissionsResourcePermission) GetSitesOk() (*[]ApiBlueprintsIdUpdatePermissionsResourcePermissionSites, bool) {
	if o == nil || o.Sites == nil {
		return nil, false
	}
	return o.Sites, true
}

// HasSites returns a boolean if a field has been set.
func (o *ApiBlueprintsIdUpdatePermissionsResourcePermission) HasSites() bool {
	if o != nil && o.Sites != nil {
		return true
	}

	return false
}

// SetSites gets a reference to the given []ApiBlueprintsIdUpdatePermissionsResourcePermissionSites and assigns it to the Sites field.
func (o *ApiBlueprintsIdUpdatePermissionsResourcePermission) SetSites(v []ApiBlueprintsIdUpdatePermissionsResourcePermissionSites) {
	o.Sites = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *ApiBlueprintsIdUpdatePermissionsResourcePermission) GetOwnerId() int64 {
	if o == nil || o.OwnerId == nil {
		var ret int64
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBlueprintsIdUpdatePermissionsResourcePermission) GetOwnerIdOk() (*int64, bool) {
	if o == nil || o.OwnerId == nil {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *ApiBlueprintsIdUpdatePermissionsResourcePermission) HasOwnerId() bool {
	if o != nil && o.OwnerId != nil {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given int64 and assigns it to the OwnerId field.
func (o *ApiBlueprintsIdUpdatePermissionsResourcePermission) SetOwnerId(v int64) {
	o.OwnerId = &v
}

func (o ApiBlueprintsIdUpdatePermissionsResourcePermission) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.All != nil {
		toSerialize["all"] = o.All
	}
	if o.Sites != nil {
		toSerialize["sites"] = o.Sites
	}
	if o.OwnerId != nil {
		toSerialize["ownerId"] = o.OwnerId
	}
	return json.Marshal(toSerialize)
}

type NullableApiBlueprintsIdUpdatePermissionsResourcePermission struct {
	value *ApiBlueprintsIdUpdatePermissionsResourcePermission
	isSet bool
}

func (v NullableApiBlueprintsIdUpdatePermissionsResourcePermission) Get() *ApiBlueprintsIdUpdatePermissionsResourcePermission {
	return v.value
}

func (v *NullableApiBlueprintsIdUpdatePermissionsResourcePermission) Set(val *ApiBlueprintsIdUpdatePermissionsResourcePermission) {
	v.value = val
	v.isSet = true
}

func (v NullableApiBlueprintsIdUpdatePermissionsResourcePermission) IsSet() bool {
	return v.isSet
}

func (v *NullableApiBlueprintsIdUpdatePermissionsResourcePermission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiBlueprintsIdUpdatePermissionsResourcePermission(val *ApiBlueprintsIdUpdatePermissionsResourcePermission) *NullableApiBlueprintsIdUpdatePermissionsResourcePermission {
	return &NullableApiBlueprintsIdUpdatePermissionsResourcePermission{value: val, isSet: true}
}

func (v NullableApiBlueprintsIdUpdatePermissionsResourcePermission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiBlueprintsIdUpdatePermissionsResourcePermission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


