/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetworkTypeAzureConfig struct for NetworkTypeAzureConfig
type NetworkTypeAzureConfig struct {
	// Resource Group Name
	ResourceGroupId string `json:"resourceGroupId"`
	// Subnet Name
	SubnetName string `json:"subnetName"`
	// The subnet's address range in CIDR notation (e.g. 192.168.1.0/24). It must be contained by the address space of the virtual network.
	SubnetCidr string `json:"subnetCidr"`
}

// NewNetworkTypeAzureConfig instantiates a new NetworkTypeAzureConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkTypeAzureConfig(resourceGroupId string, subnetName string, subnetCidr string, ) *NetworkTypeAzureConfig {
	this := NetworkTypeAzureConfig{}
	this.ResourceGroupId = resourceGroupId
	this.SubnetName = subnetName
	this.SubnetCidr = subnetCidr
	return &this
}

// NewNetworkTypeAzureConfigWithDefaults instantiates a new NetworkTypeAzureConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkTypeAzureConfigWithDefaults() *NetworkTypeAzureConfig {
	this := NetworkTypeAzureConfig{}
	return &this
}

// GetResourceGroupId returns the ResourceGroupId field value
func (o *NetworkTypeAzureConfig) GetResourceGroupId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ResourceGroupId
}

// GetResourceGroupIdOk returns a tuple with the ResourceGroupId field value
// and a boolean to check if the value has been set.
func (o *NetworkTypeAzureConfig) GetResourceGroupIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourceGroupId, true
}

// SetResourceGroupId sets field value
func (o *NetworkTypeAzureConfig) SetResourceGroupId(v string) {
	o.ResourceGroupId = v
}

// GetSubnetName returns the SubnetName field value
func (o *NetworkTypeAzureConfig) GetSubnetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SubnetName
}

// GetSubnetNameOk returns a tuple with the SubnetName field value
// and a boolean to check if the value has been set.
func (o *NetworkTypeAzureConfig) GetSubnetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SubnetName, true
}

// SetSubnetName sets field value
func (o *NetworkTypeAzureConfig) SetSubnetName(v string) {
	o.SubnetName = v
}

// GetSubnetCidr returns the SubnetCidr field value
func (o *NetworkTypeAzureConfig) GetSubnetCidr() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.SubnetCidr
}

// GetSubnetCidrOk returns a tuple with the SubnetCidr field value
// and a boolean to check if the value has been set.
func (o *NetworkTypeAzureConfig) GetSubnetCidrOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SubnetCidr, true
}

// SetSubnetCidr sets field value
func (o *NetworkTypeAzureConfig) SetSubnetCidr(v string) {
	o.SubnetCidr = v
}

func (o NetworkTypeAzureConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["resourceGroupId"] = o.ResourceGroupId
	}
	if true {
		toSerialize["subnetName"] = o.SubnetName
	}
	if true {
		toSerialize["subnetCidr"] = o.SubnetCidr
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkTypeAzureConfig struct {
	value *NetworkTypeAzureConfig
	isSet bool
}

func (v NullableNetworkTypeAzureConfig) Get() *NetworkTypeAzureConfig {
	return v.value
}

func (v *NullableNetworkTypeAzureConfig) Set(val *NetworkTypeAzureConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkTypeAzureConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkTypeAzureConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkTypeAzureConfig(val *NetworkTypeAzureConfig) *NullableNetworkTypeAzureConfig {
	return &NullableNetworkTypeAzureConfig{value: val, isSet: true}
}

func (v NullableNetworkTypeAzureConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkTypeAzureConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


