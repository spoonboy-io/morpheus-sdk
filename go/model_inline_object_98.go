/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject98 struct for InlineObject98
type InlineObject98 struct {
	// Template Parameter object. A map of key-value pairs that correspond to the template variables i.e. tfvars
	TemplateParameter *map[string]interface{} `json:"templateParameter,omitempty"`
}

// NewInlineObject98 instantiates a new InlineObject98 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject98() *InlineObject98 {
	this := InlineObject98{}
	return &this
}

// NewInlineObject98WithDefaults instantiates a new InlineObject98 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject98WithDefaults() *InlineObject98 {
	this := InlineObject98{}
	return &this
}

// GetTemplateParameter returns the TemplateParameter field value if set, zero value otherwise.
func (o *InlineObject98) GetTemplateParameter() map[string]interface{} {
	if o == nil || o.TemplateParameter == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.TemplateParameter
}

// GetTemplateParameterOk returns a tuple with the TemplateParameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject98) GetTemplateParameterOk() (*map[string]interface{}, bool) {
	if o == nil || o.TemplateParameter == nil {
		return nil, false
	}
	return o.TemplateParameter, true
}

// HasTemplateParameter returns a boolean if a field has been set.
func (o *InlineObject98) HasTemplateParameter() bool {
	if o != nil && o.TemplateParameter != nil {
		return true
	}

	return false
}

// SetTemplateParameter gets a reference to the given map[string]interface{} and assigns it to the TemplateParameter field.
func (o *InlineObject98) SetTemplateParameter(v map[string]interface{}) {
	o.TemplateParameter = &v
}

func (o InlineObject98) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TemplateParameter != nil {
		toSerialize["templateParameter"] = o.TemplateParameter
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject98 struct {
	value *InlineObject98
	isSet bool
}

func (v NullableInlineObject98) Get() *InlineObject98 {
	return v.value
}

func (v *NullableInlineObject98) Set(val *InlineObject98) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject98) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject98) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject98(val *InlineObject98) *NullableInlineObject98 {
	return &NullableInlineObject98{value: val, isSet: true}
}

func (v NullableInlineObject98) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject98) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


