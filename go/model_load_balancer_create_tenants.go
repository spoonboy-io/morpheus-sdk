/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LoadBalancerCreateTenants struct for LoadBalancerCreateTenants
type LoadBalancerCreateTenants struct {
	Id *int32 `json:"id,omitempty"`
}

// NewLoadBalancerCreateTenants instantiates a new LoadBalancerCreateTenants object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadBalancerCreateTenants() *LoadBalancerCreateTenants {
	this := LoadBalancerCreateTenants{}
	return &this
}

// NewLoadBalancerCreateTenantsWithDefaults instantiates a new LoadBalancerCreateTenants object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadBalancerCreateTenantsWithDefaults() *LoadBalancerCreateTenants {
	this := LoadBalancerCreateTenants{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LoadBalancerCreateTenants) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerCreateTenants) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LoadBalancerCreateTenants) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *LoadBalancerCreateTenants) SetId(v int32) {
	o.Id = &v
}

func (o LoadBalancerCreateTenants) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableLoadBalancerCreateTenants struct {
	value *LoadBalancerCreateTenants
	isSet bool
}

func (v NullableLoadBalancerCreateTenants) Get() *LoadBalancerCreateTenants {
	return v.value
}

func (v *NullableLoadBalancerCreateTenants) Set(val *LoadBalancerCreateTenants) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadBalancerCreateTenants) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadBalancerCreateTenants) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadBalancerCreateTenants(val *LoadBalancerCreateTenants) *NullableLoadBalancerCreateTenants {
	return &NullableLoadBalancerCreateTenants{value: val, isSet: true}
}

func (v NullableLoadBalancerCreateTenants) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadBalancerCreateTenants) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


