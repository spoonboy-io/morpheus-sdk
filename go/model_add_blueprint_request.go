/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AddBlueprintRequest - struct for AddBlueprintRequest
type AddBlueprintRequest struct {
	BlueprintARMCreate *BlueprintARMCreate
	BlueprintCFTCreate *BlueprintCFTCreate
	BlueprintHelmCreate *BlueprintHelmCreate
	BlueprintKubernetesCreate *BlueprintKubernetesCreate
	BlueprintMorpheusCreate *BlueprintMorpheusCreate
	BlueprintTerraformCreate *BlueprintTerraformCreate
}

// BlueprintARMCreateAsAddBlueprintRequest is a convenience function that returns BlueprintARMCreate wrapped in AddBlueprintRequest
func BlueprintARMCreateAsAddBlueprintRequest(v *BlueprintARMCreate) AddBlueprintRequest {
	return AddBlueprintRequest{
		BlueprintARMCreate: v,
	}
}

// BlueprintCFTCreateAsAddBlueprintRequest is a convenience function that returns BlueprintCFTCreate wrapped in AddBlueprintRequest
func BlueprintCFTCreateAsAddBlueprintRequest(v *BlueprintCFTCreate) AddBlueprintRequest {
	return AddBlueprintRequest{
		BlueprintCFTCreate: v,
	}
}

// BlueprintHelmCreateAsAddBlueprintRequest is a convenience function that returns BlueprintHelmCreate wrapped in AddBlueprintRequest
func BlueprintHelmCreateAsAddBlueprintRequest(v *BlueprintHelmCreate) AddBlueprintRequest {
	return AddBlueprintRequest{
		BlueprintHelmCreate: v,
	}
}

// BlueprintKubernetesCreateAsAddBlueprintRequest is a convenience function that returns BlueprintKubernetesCreate wrapped in AddBlueprintRequest
func BlueprintKubernetesCreateAsAddBlueprintRequest(v *BlueprintKubernetesCreate) AddBlueprintRequest {
	return AddBlueprintRequest{
		BlueprintKubernetesCreate: v,
	}
}

// BlueprintMorpheusCreateAsAddBlueprintRequest is a convenience function that returns BlueprintMorpheusCreate wrapped in AddBlueprintRequest
func BlueprintMorpheusCreateAsAddBlueprintRequest(v *BlueprintMorpheusCreate) AddBlueprintRequest {
	return AddBlueprintRequest{
		BlueprintMorpheusCreate: v,
	}
}

// BlueprintTerraformCreateAsAddBlueprintRequest is a convenience function that returns BlueprintTerraformCreate wrapped in AddBlueprintRequest
func BlueprintTerraformCreateAsAddBlueprintRequest(v *BlueprintTerraformCreate) AddBlueprintRequest {
	return AddBlueprintRequest{
		BlueprintTerraformCreate: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddBlueprintRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into BlueprintARMCreate
	err = newStrictDecoder(data).Decode(&dst.BlueprintARMCreate)
	if err == nil {
		jsonBlueprintARMCreate, _ := json.Marshal(dst.BlueprintARMCreate)
		if string(jsonBlueprintARMCreate) == "{}" { // empty struct
			dst.BlueprintARMCreate = nil
		} else {
			match++
		}
	} else {
		dst.BlueprintARMCreate = nil
	}

	// try to unmarshal data into BlueprintCFTCreate
	err = newStrictDecoder(data).Decode(&dst.BlueprintCFTCreate)
	if err == nil {
		jsonBlueprintCFTCreate, _ := json.Marshal(dst.BlueprintCFTCreate)
		if string(jsonBlueprintCFTCreate) == "{}" { // empty struct
			dst.BlueprintCFTCreate = nil
		} else {
			match++
		}
	} else {
		dst.BlueprintCFTCreate = nil
	}

	// try to unmarshal data into BlueprintHelmCreate
	err = newStrictDecoder(data).Decode(&dst.BlueprintHelmCreate)
	if err == nil {
		jsonBlueprintHelmCreate, _ := json.Marshal(dst.BlueprintHelmCreate)
		if string(jsonBlueprintHelmCreate) == "{}" { // empty struct
			dst.BlueprintHelmCreate = nil
		} else {
			match++
		}
	} else {
		dst.BlueprintHelmCreate = nil
	}

	// try to unmarshal data into BlueprintKubernetesCreate
	err = newStrictDecoder(data).Decode(&dst.BlueprintKubernetesCreate)
	if err == nil {
		jsonBlueprintKubernetesCreate, _ := json.Marshal(dst.BlueprintKubernetesCreate)
		if string(jsonBlueprintKubernetesCreate) == "{}" { // empty struct
			dst.BlueprintKubernetesCreate = nil
		} else {
			match++
		}
	} else {
		dst.BlueprintKubernetesCreate = nil
	}

	// try to unmarshal data into BlueprintMorpheusCreate
	err = newStrictDecoder(data).Decode(&dst.BlueprintMorpheusCreate)
	if err == nil {
		jsonBlueprintMorpheusCreate, _ := json.Marshal(dst.BlueprintMorpheusCreate)
		if string(jsonBlueprintMorpheusCreate) == "{}" { // empty struct
			dst.BlueprintMorpheusCreate = nil
		} else {
			match++
		}
	} else {
		dst.BlueprintMorpheusCreate = nil
	}

	// try to unmarshal data into BlueprintTerraformCreate
	err = newStrictDecoder(data).Decode(&dst.BlueprintTerraformCreate)
	if err == nil {
		jsonBlueprintTerraformCreate, _ := json.Marshal(dst.BlueprintTerraformCreate)
		if string(jsonBlueprintTerraformCreate) == "{}" { // empty struct
			dst.BlueprintTerraformCreate = nil
		} else {
			match++
		}
	} else {
		dst.BlueprintTerraformCreate = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.BlueprintARMCreate = nil
		dst.BlueprintCFTCreate = nil
		dst.BlueprintHelmCreate = nil
		dst.BlueprintKubernetesCreate = nil
		dst.BlueprintMorpheusCreate = nil
		dst.BlueprintTerraformCreate = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddBlueprintRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddBlueprintRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddBlueprintRequest) MarshalJSON() ([]byte, error) {
	if src.BlueprintARMCreate != nil {
		return json.Marshal(&src.BlueprintARMCreate)
	}

	if src.BlueprintCFTCreate != nil {
		return json.Marshal(&src.BlueprintCFTCreate)
	}

	if src.BlueprintHelmCreate != nil {
		return json.Marshal(&src.BlueprintHelmCreate)
	}

	if src.BlueprintKubernetesCreate != nil {
		return json.Marshal(&src.BlueprintKubernetesCreate)
	}

	if src.BlueprintMorpheusCreate != nil {
		return json.Marshal(&src.BlueprintMorpheusCreate)
	}

	if src.BlueprintTerraformCreate != nil {
		return json.Marshal(&src.BlueprintTerraformCreate)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddBlueprintRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.BlueprintARMCreate != nil {
		return obj.BlueprintARMCreate
	}

	if obj.BlueprintCFTCreate != nil {
		return obj.BlueprintCFTCreate
	}

	if obj.BlueprintHelmCreate != nil {
		return obj.BlueprintHelmCreate
	}

	if obj.BlueprintKubernetesCreate != nil {
		return obj.BlueprintKubernetesCreate
	}

	if obj.BlueprintMorpheusCreate != nil {
		return obj.BlueprintMorpheusCreate
	}

	if obj.BlueprintTerraformCreate != nil {
		return obj.BlueprintTerraformCreate
	}

	// all schemas are nil
	return nil
}

type NullableAddBlueprintRequest struct {
	value *AddBlueprintRequest
	isSet bool
}

func (v NullableAddBlueprintRequest) Get() *AddBlueprintRequest {
	return v.value
}

func (v *NullableAddBlueprintRequest) Set(val *AddBlueprintRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddBlueprintRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddBlueprintRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddBlueprintRequest(val *AddBlueprintRequest) *NullableAddBlueprintRequest {
	return &NullableAddBlueprintRequest{value: val, isSet: true}
}

func (v NullableAddBlueprintRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddBlueprintRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


