/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// LoadBalancer struct for LoadBalancer
type LoadBalancer struct {
	Id *int64 `json:"id,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	Name *string `json:"name,omitempty"`
	AccountId *int64 `json:"accountId,omitempty"`
	Cloud *InlineResponse20040AppDeployInstance `json:"cloud,omitempty"`
	Type *InlineResponse20094Network `json:"type,omitempty"`
	Owner NullableOwner `json:"owner,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	Description *string `json:"description,omitempty"`
	Host *string `json:"host,omitempty"`
	Port *int64 `json:"port,omitempty"`
	Username NullableString `json:"username,omitempty"`
	Ip *string `json:"ip,omitempty"`
	InternalIp NullableString `json:"internalIp,omitempty"`
	ExternalIp NullableString `json:"externalIp,omitempty"`
	ApiPort NullableString `json:"apiPort,omitempty"`
	AdminPort NullableString `json:"adminPort,omitempty"`
	SslEnabled NullableBool `json:"sslEnabled,omitempty"`
	SslCert NullableString `json:"sslCert,omitempty"`
	Config *map[string]interface{} `json:"config,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	Credential *Creds `json:"credential,omitempty"`
	Tenants *[]map[string]interface{} `json:"tenants,omitempty"`
	ResourcePermission *ResourcePermissions `json:"resourcePermission,omitempty"`
}

// NewLoadBalancer instantiates a new LoadBalancer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadBalancer() *LoadBalancer {
	this := LoadBalancer{}
	return &this
}

// NewLoadBalancerWithDefaults instantiates a new LoadBalancer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadBalancerWithDefaults() *LoadBalancer {
	this := LoadBalancer{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LoadBalancer) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LoadBalancer) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *LoadBalancer) SetId(v int64) {
	o.Id = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *LoadBalancer) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *LoadBalancer) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *LoadBalancer) SetUuid(v string) {
	o.Uuid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LoadBalancer) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LoadBalancer) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LoadBalancer) SetName(v string) {
	o.Name = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *LoadBalancer) GetAccountId() int64 {
	if o == nil || o.AccountId == nil {
		var ret int64
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetAccountIdOk() (*int64, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *LoadBalancer) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int64 and assigns it to the AccountId field.
func (o *LoadBalancer) SetAccountId(v int64) {
	o.AccountId = &v
}

// GetCloud returns the Cloud field value if set, zero value otherwise.
func (o *LoadBalancer) GetCloud() InlineResponse20040AppDeployInstance {
	if o == nil || o.Cloud == nil {
		var ret InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetCloudOk() (*InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Cloud == nil {
		return nil, false
	}
	return o.Cloud, true
}

// HasCloud returns a boolean if a field has been set.
func (o *LoadBalancer) HasCloud() bool {
	if o != nil && o.Cloud != nil {
		return true
	}

	return false
}

// SetCloud gets a reference to the given InlineResponse20040AppDeployInstance and assigns it to the Cloud field.
func (o *LoadBalancer) SetCloud(v InlineResponse20040AppDeployInstance) {
	o.Cloud = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *LoadBalancer) GetType() InlineResponse20094Network {
	if o == nil || o.Type == nil {
		var ret InlineResponse20094Network
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetTypeOk() (*InlineResponse20094Network, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *LoadBalancer) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given InlineResponse20094Network and assigns it to the Type field.
func (o *LoadBalancer) SetType(v InlineResponse20094Network) {
	o.Type = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LoadBalancer) GetOwner() Owner {
	if o == nil || o.Owner.Get() == nil {
		var ret Owner
		return ret
	}
	return *o.Owner.Get()
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LoadBalancer) GetOwnerOk() (*Owner, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Owner.Get(), o.Owner.IsSet()
}

// HasOwner returns a boolean if a field has been set.
func (o *LoadBalancer) HasOwner() bool {
	if o != nil && o.Owner.IsSet() {
		return true
	}

	return false
}

// SetOwner gets a reference to the given NullableOwner and assigns it to the Owner field.
func (o *LoadBalancer) SetOwner(v Owner) {
	o.Owner.Set(&v)
}
// SetOwnerNil sets the value for Owner to be an explicit nil
func (o *LoadBalancer) SetOwnerNil() {
	o.Owner.Set(nil)
}

// UnsetOwner ensures that no value is present for Owner, not even an explicit nil
func (o *LoadBalancer) UnsetOwner() {
	o.Owner.Unset()
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *LoadBalancer) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetVisibilityOk() (*string, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *LoadBalancer) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *LoadBalancer) SetVisibility(v string) {
	o.Visibility = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *LoadBalancer) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *LoadBalancer) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *LoadBalancer) SetDescription(v string) {
	o.Description = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *LoadBalancer) GetHost() string {
	if o == nil || o.Host == nil {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetHostOk() (*string, bool) {
	if o == nil || o.Host == nil {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *LoadBalancer) HasHost() bool {
	if o != nil && o.Host != nil {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *LoadBalancer) SetHost(v string) {
	o.Host = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *LoadBalancer) GetPort() int64 {
	if o == nil || o.Port == nil {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetPortOk() (*int64, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *LoadBalancer) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *LoadBalancer) SetPort(v int64) {
	o.Port = &v
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LoadBalancer) GetUsername() string {
	if o == nil || o.Username.Get() == nil {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LoadBalancer) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *LoadBalancer) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *LoadBalancer) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *LoadBalancer) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *LoadBalancer) UnsetUsername() {
	o.Username.Unset()
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *LoadBalancer) GetIp() string {
	if o == nil || o.Ip == nil {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetIpOk() (*string, bool) {
	if o == nil || o.Ip == nil {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *LoadBalancer) HasIp() bool {
	if o != nil && o.Ip != nil {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *LoadBalancer) SetIp(v string) {
	o.Ip = &v
}

// GetInternalIp returns the InternalIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LoadBalancer) GetInternalIp() string {
	if o == nil || o.InternalIp.Get() == nil {
		var ret string
		return ret
	}
	return *o.InternalIp.Get()
}

// GetInternalIpOk returns a tuple with the InternalIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LoadBalancer) GetInternalIpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InternalIp.Get(), o.InternalIp.IsSet()
}

// HasInternalIp returns a boolean if a field has been set.
func (o *LoadBalancer) HasInternalIp() bool {
	if o != nil && o.InternalIp.IsSet() {
		return true
	}

	return false
}

// SetInternalIp gets a reference to the given NullableString and assigns it to the InternalIp field.
func (o *LoadBalancer) SetInternalIp(v string) {
	o.InternalIp.Set(&v)
}
// SetInternalIpNil sets the value for InternalIp to be an explicit nil
func (o *LoadBalancer) SetInternalIpNil() {
	o.InternalIp.Set(nil)
}

// UnsetInternalIp ensures that no value is present for InternalIp, not even an explicit nil
func (o *LoadBalancer) UnsetInternalIp() {
	o.InternalIp.Unset()
}

// GetExternalIp returns the ExternalIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LoadBalancer) GetExternalIp() string {
	if o == nil || o.ExternalIp.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalIp.Get()
}

// GetExternalIpOk returns a tuple with the ExternalIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LoadBalancer) GetExternalIpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalIp.Get(), o.ExternalIp.IsSet()
}

// HasExternalIp returns a boolean if a field has been set.
func (o *LoadBalancer) HasExternalIp() bool {
	if o != nil && o.ExternalIp.IsSet() {
		return true
	}

	return false
}

// SetExternalIp gets a reference to the given NullableString and assigns it to the ExternalIp field.
func (o *LoadBalancer) SetExternalIp(v string) {
	o.ExternalIp.Set(&v)
}
// SetExternalIpNil sets the value for ExternalIp to be an explicit nil
func (o *LoadBalancer) SetExternalIpNil() {
	o.ExternalIp.Set(nil)
}

// UnsetExternalIp ensures that no value is present for ExternalIp, not even an explicit nil
func (o *LoadBalancer) UnsetExternalIp() {
	o.ExternalIp.Unset()
}

// GetApiPort returns the ApiPort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LoadBalancer) GetApiPort() string {
	if o == nil || o.ApiPort.Get() == nil {
		var ret string
		return ret
	}
	return *o.ApiPort.Get()
}

// GetApiPortOk returns a tuple with the ApiPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LoadBalancer) GetApiPortOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ApiPort.Get(), o.ApiPort.IsSet()
}

// HasApiPort returns a boolean if a field has been set.
func (o *LoadBalancer) HasApiPort() bool {
	if o != nil && o.ApiPort.IsSet() {
		return true
	}

	return false
}

// SetApiPort gets a reference to the given NullableString and assigns it to the ApiPort field.
func (o *LoadBalancer) SetApiPort(v string) {
	o.ApiPort.Set(&v)
}
// SetApiPortNil sets the value for ApiPort to be an explicit nil
func (o *LoadBalancer) SetApiPortNil() {
	o.ApiPort.Set(nil)
}

// UnsetApiPort ensures that no value is present for ApiPort, not even an explicit nil
func (o *LoadBalancer) UnsetApiPort() {
	o.ApiPort.Unset()
}

// GetAdminPort returns the AdminPort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LoadBalancer) GetAdminPort() string {
	if o == nil || o.AdminPort.Get() == nil {
		var ret string
		return ret
	}
	return *o.AdminPort.Get()
}

// GetAdminPortOk returns a tuple with the AdminPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LoadBalancer) GetAdminPortOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AdminPort.Get(), o.AdminPort.IsSet()
}

// HasAdminPort returns a boolean if a field has been set.
func (o *LoadBalancer) HasAdminPort() bool {
	if o != nil && o.AdminPort.IsSet() {
		return true
	}

	return false
}

// SetAdminPort gets a reference to the given NullableString and assigns it to the AdminPort field.
func (o *LoadBalancer) SetAdminPort(v string) {
	o.AdminPort.Set(&v)
}
// SetAdminPortNil sets the value for AdminPort to be an explicit nil
func (o *LoadBalancer) SetAdminPortNil() {
	o.AdminPort.Set(nil)
}

// UnsetAdminPort ensures that no value is present for AdminPort, not even an explicit nil
func (o *LoadBalancer) UnsetAdminPort() {
	o.AdminPort.Unset()
}

// GetSslEnabled returns the SslEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LoadBalancer) GetSslEnabled() bool {
	if o == nil || o.SslEnabled.Get() == nil {
		var ret bool
		return ret
	}
	return *o.SslEnabled.Get()
}

// GetSslEnabledOk returns a tuple with the SslEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LoadBalancer) GetSslEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SslEnabled.Get(), o.SslEnabled.IsSet()
}

// HasSslEnabled returns a boolean if a field has been set.
func (o *LoadBalancer) HasSslEnabled() bool {
	if o != nil && o.SslEnabled.IsSet() {
		return true
	}

	return false
}

// SetSslEnabled gets a reference to the given NullableBool and assigns it to the SslEnabled field.
func (o *LoadBalancer) SetSslEnabled(v bool) {
	o.SslEnabled.Set(&v)
}
// SetSslEnabledNil sets the value for SslEnabled to be an explicit nil
func (o *LoadBalancer) SetSslEnabledNil() {
	o.SslEnabled.Set(nil)
}

// UnsetSslEnabled ensures that no value is present for SslEnabled, not even an explicit nil
func (o *LoadBalancer) UnsetSslEnabled() {
	o.SslEnabled.Unset()
}

// GetSslCert returns the SslCert field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LoadBalancer) GetSslCert() string {
	if o == nil || o.SslCert.Get() == nil {
		var ret string
		return ret
	}
	return *o.SslCert.Get()
}

// GetSslCertOk returns a tuple with the SslCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LoadBalancer) GetSslCertOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SslCert.Get(), o.SslCert.IsSet()
}

// HasSslCert returns a boolean if a field has been set.
func (o *LoadBalancer) HasSslCert() bool {
	if o != nil && o.SslCert.IsSet() {
		return true
	}

	return false
}

// SetSslCert gets a reference to the given NullableString and assigns it to the SslCert field.
func (o *LoadBalancer) SetSslCert(v string) {
	o.SslCert.Set(&v)
}
// SetSslCertNil sets the value for SslCert to be an explicit nil
func (o *LoadBalancer) SetSslCertNil() {
	o.SslCert.Set(nil)
}

// UnsetSslCert ensures that no value is present for SslCert, not even an explicit nil
func (o *LoadBalancer) UnsetSslCert() {
	o.SslCert.Unset()
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *LoadBalancer) GetConfig() map[string]interface{} {
	if o == nil || o.Config == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetConfigOk() (*map[string]interface{}, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *LoadBalancer) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *LoadBalancer) SetConfig(v map[string]interface{}) {
	o.Config = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *LoadBalancer) GetDateCreated() time.Time {
	if o == nil || o.DateCreated == nil {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *LoadBalancer) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *LoadBalancer) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *LoadBalancer) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *LoadBalancer) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *LoadBalancer) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *LoadBalancer) GetCredential() Creds {
	if o == nil || o.Credential == nil {
		var ret Creds
		return ret
	}
	return *o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetCredentialOk() (*Creds, bool) {
	if o == nil || o.Credential == nil {
		return nil, false
	}
	return o.Credential, true
}

// HasCredential returns a boolean if a field has been set.
func (o *LoadBalancer) HasCredential() bool {
	if o != nil && o.Credential != nil {
		return true
	}

	return false
}

// SetCredential gets a reference to the given Creds and assigns it to the Credential field.
func (o *LoadBalancer) SetCredential(v Creds) {
	o.Credential = &v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *LoadBalancer) GetTenants() []map[string]interface{} {
	if o == nil || o.Tenants == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetTenantsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Tenants == nil {
		return nil, false
	}
	return o.Tenants, true
}

// HasTenants returns a boolean if a field has been set.
func (o *LoadBalancer) HasTenants() bool {
	if o != nil && o.Tenants != nil {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []map[string]interface{} and assigns it to the Tenants field.
func (o *LoadBalancer) SetTenants(v []map[string]interface{}) {
	o.Tenants = &v
}

// GetResourcePermission returns the ResourcePermission field value if set, zero value otherwise.
func (o *LoadBalancer) GetResourcePermission() ResourcePermissions {
	if o == nil || o.ResourcePermission == nil {
		var ret ResourcePermissions
		return ret
	}
	return *o.ResourcePermission
}

// GetResourcePermissionOk returns a tuple with the ResourcePermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancer) GetResourcePermissionOk() (*ResourcePermissions, bool) {
	if o == nil || o.ResourcePermission == nil {
		return nil, false
	}
	return o.ResourcePermission, true
}

// HasResourcePermission returns a boolean if a field has been set.
func (o *LoadBalancer) HasResourcePermission() bool {
	if o != nil && o.ResourcePermission != nil {
		return true
	}

	return false
}

// SetResourcePermission gets a reference to the given ResourcePermissions and assigns it to the ResourcePermission field.
func (o *LoadBalancer) SetResourcePermission(v ResourcePermissions) {
	o.ResourcePermission = &v
}

func (o LoadBalancer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.AccountId != nil {
		toSerialize["accountId"] = o.AccountId
	}
	if o.Cloud != nil {
		toSerialize["cloud"] = o.Cloud
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Owner.IsSet() {
		toSerialize["owner"] = o.Owner.Get()
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Host != nil {
		toSerialize["host"] = o.Host
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	if o.Ip != nil {
		toSerialize["ip"] = o.Ip
	}
	if o.InternalIp.IsSet() {
		toSerialize["internalIp"] = o.InternalIp.Get()
	}
	if o.ExternalIp.IsSet() {
		toSerialize["externalIp"] = o.ExternalIp.Get()
	}
	if o.ApiPort.IsSet() {
		toSerialize["apiPort"] = o.ApiPort.Get()
	}
	if o.AdminPort.IsSet() {
		toSerialize["adminPort"] = o.AdminPort.Get()
	}
	if o.SslEnabled.IsSet() {
		toSerialize["sslEnabled"] = o.SslEnabled.Get()
	}
	if o.SslCert.IsSet() {
		toSerialize["sslCert"] = o.SslCert.Get()
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if o.Credential != nil {
		toSerialize["credential"] = o.Credential
	}
	if o.Tenants != nil {
		toSerialize["tenants"] = o.Tenants
	}
	if o.ResourcePermission != nil {
		toSerialize["resourcePermission"] = o.ResourcePermission
	}
	return json.Marshal(toSerialize)
}

type NullableLoadBalancer struct {
	value *LoadBalancer
	isSet bool
}

func (v NullableLoadBalancer) Get() *LoadBalancer {
	return v.value
}

func (v *NullableLoadBalancer) Set(val *LoadBalancer) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadBalancer) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadBalancer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadBalancer(val *LoadBalancer) *NullableLoadBalancer {
	return &NullableLoadBalancer{value: val, isSet: true}
}

func (v NullableLoadBalancer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadBalancer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


