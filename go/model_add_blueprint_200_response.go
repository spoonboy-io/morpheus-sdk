/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddBlueprint200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddBlueprint200Response{}

// AddBlueprint200Response struct for AddBlueprint200Response
type AddBlueprint200Response struct {
	Success *bool `json:"success,omitempty"`
	Blueprint *BlueprintCreateSuccess `json:"blueprint,omitempty"`
	Msg NullableString `json:"msg,omitempty"`
	Errors NullableString `json:"errors,omitempty"`
	ErrorCode NullableString `json:"errorCode,omitempty"`
	InProgress *bool `json:"inProgress,omitempty"`
}

// NewAddBlueprint200Response instantiates a new AddBlueprint200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddBlueprint200Response() *AddBlueprint200Response {
	this := AddBlueprint200Response{}
	return &this
}

// NewAddBlueprint200ResponseWithDefaults instantiates a new AddBlueprint200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddBlueprint200ResponseWithDefaults() *AddBlueprint200Response {
	this := AddBlueprint200Response{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddBlueprint200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprint200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *AddBlueprint200Response) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddBlueprint200Response) SetSuccess(v bool) {
	o.Success = &v
}

// GetBlueprint returns the Blueprint field value if set, zero value otherwise.
func (o *AddBlueprint200Response) GetBlueprint() BlueprintCreateSuccess {
	if o == nil || IsNil(o.Blueprint) {
		var ret BlueprintCreateSuccess
		return ret
	}
	return *o.Blueprint
}

// GetBlueprintOk returns a tuple with the Blueprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprint200Response) GetBlueprintOk() (*BlueprintCreateSuccess, bool) {
	if o == nil || IsNil(o.Blueprint) {
		return nil, false
	}
	return o.Blueprint, true
}

// HasBlueprint returns a boolean if a field has been set.
func (o *AddBlueprint200Response) HasBlueprint() bool {
	if o != nil && !IsNil(o.Blueprint) {
		return true
	}

	return false
}

// SetBlueprint gets a reference to the given BlueprintCreateSuccess and assigns it to the Blueprint field.
func (o *AddBlueprint200Response) SetBlueprint(v BlueprintCreateSuccess) {
	o.Blueprint = &v
}

// GetMsg returns the Msg field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AddBlueprint200Response) GetMsg() string {
	if o == nil || IsNil(o.Msg.Get()) {
		var ret string
		return ret
	}
	return *o.Msg.Get()
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddBlueprint200Response) GetMsgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Msg.Get(), o.Msg.IsSet()
}

// HasMsg returns a boolean if a field has been set.
func (o *AddBlueprint200Response) HasMsg() bool {
	if o != nil && o.Msg.IsSet() {
		return true
	}

	return false
}

// SetMsg gets a reference to the given NullableString and assigns it to the Msg field.
func (o *AddBlueprint200Response) SetMsg(v string) {
	o.Msg.Set(&v)
}
// SetMsgNil sets the value for Msg to be an explicit nil
func (o *AddBlueprint200Response) SetMsgNil() {
	o.Msg.Set(nil)
}

// UnsetMsg ensures that no value is present for Msg, not even an explicit nil
func (o *AddBlueprint200Response) UnsetMsg() {
	o.Msg.Unset()
}

// GetErrors returns the Errors field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AddBlueprint200Response) GetErrors() string {
	if o == nil || IsNil(o.Errors.Get()) {
		var ret string
		return ret
	}
	return *o.Errors.Get()
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddBlueprint200Response) GetErrorsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Errors.Get(), o.Errors.IsSet()
}

// HasErrors returns a boolean if a field has been set.
func (o *AddBlueprint200Response) HasErrors() bool {
	if o != nil && o.Errors.IsSet() {
		return true
	}

	return false
}

// SetErrors gets a reference to the given NullableString and assigns it to the Errors field.
func (o *AddBlueprint200Response) SetErrors(v string) {
	o.Errors.Set(&v)
}
// SetErrorsNil sets the value for Errors to be an explicit nil
func (o *AddBlueprint200Response) SetErrorsNil() {
	o.Errors.Set(nil)
}

// UnsetErrors ensures that no value is present for Errors, not even an explicit nil
func (o *AddBlueprint200Response) UnsetErrors() {
	o.Errors.Unset()
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AddBlueprint200Response) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorCode.Get()
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AddBlueprint200Response) GetErrorCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorCode.Get(), o.ErrorCode.IsSet()
}

// HasErrorCode returns a boolean if a field has been set.
func (o *AddBlueprint200Response) HasErrorCode() bool {
	if o != nil && o.ErrorCode.IsSet() {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given NullableString and assigns it to the ErrorCode field.
func (o *AddBlueprint200Response) SetErrorCode(v string) {
	o.ErrorCode.Set(&v)
}
// SetErrorCodeNil sets the value for ErrorCode to be an explicit nil
func (o *AddBlueprint200Response) SetErrorCodeNil() {
	o.ErrorCode.Set(nil)
}

// UnsetErrorCode ensures that no value is present for ErrorCode, not even an explicit nil
func (o *AddBlueprint200Response) UnsetErrorCode() {
	o.ErrorCode.Unset()
}

// GetInProgress returns the InProgress field value if set, zero value otherwise.
func (o *AddBlueprint200Response) GetInProgress() bool {
	if o == nil || IsNil(o.InProgress) {
		var ret bool
		return ret
	}
	return *o.InProgress
}

// GetInProgressOk returns a tuple with the InProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBlueprint200Response) GetInProgressOk() (*bool, bool) {
	if o == nil || IsNil(o.InProgress) {
		return nil, false
	}
	return o.InProgress, true
}

// HasInProgress returns a boolean if a field has been set.
func (o *AddBlueprint200Response) HasInProgress() bool {
	if o != nil && !IsNil(o.InProgress) {
		return true
	}

	return false
}

// SetInProgress gets a reference to the given bool and assigns it to the InProgress field.
func (o *AddBlueprint200Response) SetInProgress(v bool) {
	o.InProgress = &v
}

func (o AddBlueprint200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddBlueprint200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Blueprint) {
		toSerialize["blueprint"] = o.Blueprint
	}
	if o.Msg.IsSet() {
		toSerialize["msg"] = o.Msg.Get()
	}
	if o.Errors.IsSet() {
		toSerialize["errors"] = o.Errors.Get()
	}
	if o.ErrorCode.IsSet() {
		toSerialize["errorCode"] = o.ErrorCode.Get()
	}
	if !IsNil(o.InProgress) {
		toSerialize["inProgress"] = o.InProgress
	}
	return toSerialize, nil
}

type NullableAddBlueprint200Response struct {
	value *AddBlueprint200Response
	isSet bool
}

func (v NullableAddBlueprint200Response) Get() *AddBlueprint200Response {
	return v.value
}

func (v *NullableAddBlueprint200Response) Set(val *AddBlueprint200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddBlueprint200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddBlueprint200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddBlueprint200Response(val *AddBlueprint200Response) *NullableAddBlueprint200Response {
	return &NullableAddBlueprint200Response{value: val, isSet: true}
}

func (v NullableAddBlueprint200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddBlueprint200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


