/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CatalogOrderCreateSuccess struct for CatalogOrderCreateSuccess
type CatalogOrderCreateSuccess struct {
	Id *int64 `json:"id,omitempty"`
	Name NullableString `json:"name,omitempty"`
	Items *[]CatalogOrderCreateSuccessItems `json:"items,omitempty"`
	Stats *CatalogCartStats `json:"stats,omitempty"`
}

// NewCatalogOrderCreateSuccess instantiates a new CatalogOrderCreateSuccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogOrderCreateSuccess() *CatalogOrderCreateSuccess {
	this := CatalogOrderCreateSuccess{}
	return &this
}

// NewCatalogOrderCreateSuccessWithDefaults instantiates a new CatalogOrderCreateSuccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogOrderCreateSuccessWithDefaults() *CatalogOrderCreateSuccess {
	this := CatalogOrderCreateSuccess{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CatalogOrderCreateSuccess) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogOrderCreateSuccess) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CatalogOrderCreateSuccess) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *CatalogOrderCreateSuccess) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogOrderCreateSuccess) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogOrderCreateSuccess) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CatalogOrderCreateSuccess) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CatalogOrderCreateSuccess) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *CatalogOrderCreateSuccess) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CatalogOrderCreateSuccess) UnsetName() {
	o.Name.Unset()
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *CatalogOrderCreateSuccess) GetItems() []CatalogOrderCreateSuccessItems {
	if o == nil || o.Items == nil {
		var ret []CatalogOrderCreateSuccessItems
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogOrderCreateSuccess) GetItemsOk() (*[]CatalogOrderCreateSuccessItems, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *CatalogOrderCreateSuccess) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []CatalogOrderCreateSuccessItems and assigns it to the Items field.
func (o *CatalogOrderCreateSuccess) SetItems(v []CatalogOrderCreateSuccessItems) {
	o.Items = &v
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *CatalogOrderCreateSuccess) GetStats() CatalogCartStats {
	if o == nil || o.Stats == nil {
		var ret CatalogCartStats
		return ret
	}
	return *o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogOrderCreateSuccess) GetStatsOk() (*CatalogCartStats, bool) {
	if o == nil || o.Stats == nil {
		return nil, false
	}
	return o.Stats, true
}

// HasStats returns a boolean if a field has been set.
func (o *CatalogOrderCreateSuccess) HasStats() bool {
	if o != nil && o.Stats != nil {
		return true
	}

	return false
}

// SetStats gets a reference to the given CatalogCartStats and assigns it to the Stats field.
func (o *CatalogOrderCreateSuccess) SetStats(v CatalogCartStats) {
	o.Stats = &v
}

func (o CatalogOrderCreateSuccess) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.Stats != nil {
		toSerialize["stats"] = o.Stats
	}
	return json.Marshal(toSerialize)
}

type NullableCatalogOrderCreateSuccess struct {
	value *CatalogOrderCreateSuccess
	isSet bool
}

func (v NullableCatalogOrderCreateSuccess) Get() *CatalogOrderCreateSuccess {
	return v.value
}

func (v *NullableCatalogOrderCreateSuccess) Set(val *CatalogOrderCreateSuccess) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogOrderCreateSuccess) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogOrderCreateSuccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogOrderCreateSuccess(val *CatalogOrderCreateSuccess) *NullableCatalogOrderCreateSuccess {
	return &NullableCatalogOrderCreateSuccess{value: val, isSet: true}
}

func (v NullableCatalogOrderCreateSuccess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogOrderCreateSuccess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


