/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20096Config struct for InlineResponse20096Config
type InlineResponse20096Config struct {
	SourceAddresses *[]string `json:"sourceAddresses,omitempty"`
}

// NewInlineResponse20096Config instantiates a new InlineResponse20096Config object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20096Config() *InlineResponse20096Config {
	this := InlineResponse20096Config{}
	return &this
}

// NewInlineResponse20096ConfigWithDefaults instantiates a new InlineResponse20096Config object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20096ConfigWithDefaults() *InlineResponse20096Config {
	this := InlineResponse20096Config{}
	return &this
}

// GetSourceAddresses returns the SourceAddresses field value if set, zero value otherwise.
func (o *InlineResponse20096Config) GetSourceAddresses() []string {
	if o == nil || o.SourceAddresses == nil {
		var ret []string
		return ret
	}
	return *o.SourceAddresses
}

// GetSourceAddressesOk returns a tuple with the SourceAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20096Config) GetSourceAddressesOk() (*[]string, bool) {
	if o == nil || o.SourceAddresses == nil {
		return nil, false
	}
	return o.SourceAddresses, true
}

// HasSourceAddresses returns a boolean if a field has been set.
func (o *InlineResponse20096Config) HasSourceAddresses() bool {
	if o != nil && o.SourceAddresses != nil {
		return true
	}

	return false
}

// SetSourceAddresses gets a reference to the given []string and assigns it to the SourceAddresses field.
func (o *InlineResponse20096Config) SetSourceAddresses(v []string) {
	o.SourceAddresses = &v
}

func (o InlineResponse20096Config) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SourceAddresses != nil {
		toSerialize["sourceAddresses"] = o.SourceAddresses
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20096Config struct {
	value *InlineResponse20096Config
	isSet bool
}

func (v NullableInlineResponse20096Config) Get() *InlineResponse20096Config {
	return v.value
}

func (v *NullableInlineResponse20096Config) Set(val *InlineResponse20096Config) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20096Config) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20096Config) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20096Config(val *InlineResponse20096Config) *NullableInlineResponse20096Config {
	return &NullableInlineResponse20096Config{value: val, isSet: true}
}

func (v NullableInlineResponse20096Config) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20096Config) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


