/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20033 struct for InlineResponse20033
type InlineResponse20033 struct {
	Contact *Contact `json:"contact,omitempty"`
}

// NewInlineResponse20033 instantiates a new InlineResponse20033 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20033() *InlineResponse20033 {
	this := InlineResponse20033{}
	return &this
}

// NewInlineResponse20033WithDefaults instantiates a new InlineResponse20033 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20033WithDefaults() *InlineResponse20033 {
	this := InlineResponse20033{}
	return &this
}

// GetContact returns the Contact field value if set, zero value otherwise.
func (o *InlineResponse20033) GetContact() Contact {
	if o == nil || o.Contact == nil {
		var ret Contact
		return ret
	}
	return *o.Contact
}

// GetContactOk returns a tuple with the Contact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20033) GetContactOk() (*Contact, bool) {
	if o == nil || o.Contact == nil {
		return nil, false
	}
	return o.Contact, true
}

// HasContact returns a boolean if a field has been set.
func (o *InlineResponse20033) HasContact() bool {
	if o != nil && o.Contact != nil {
		return true
	}

	return false
}

// SetContact gets a reference to the given Contact and assigns it to the Contact field.
func (o *InlineResponse20033) SetContact(v Contact) {
	o.Contact = &v
}

func (o InlineResponse20033) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Contact != nil {
		toSerialize["contact"] = o.Contact
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20033 struct {
	value *InlineResponse20033
	isSet bool
}

func (v NullableInlineResponse20033) Get() *InlineResponse20033 {
	return v.value
}

func (v *NullableInlineResponse20033) Set(val *InlineResponse20033) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20033) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20033) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20033(val *InlineResponse20033) *NullableInlineResponse20033 {
	return &NullableInlineResponse20033{value: val, isSet: true}
}

func (v NullableInlineResponse20033) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20033) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


