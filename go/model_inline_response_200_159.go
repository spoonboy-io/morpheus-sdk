/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200159 struct for InlineResponse200159
type InlineResponse200159 struct {
	Access NullableUserPermissions `json:"access,omitempty"`
}

// NewInlineResponse200159 instantiates a new InlineResponse200159 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200159() *InlineResponse200159 {
	this := InlineResponse200159{}
	return &this
}

// NewInlineResponse200159WithDefaults instantiates a new InlineResponse200159 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200159WithDefaults() *InlineResponse200159 {
	this := InlineResponse200159{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200159) GetAccess() UserPermissions {
	if o == nil || o.Access.Get() == nil {
		var ret UserPermissions
		return ret
	}
	return *o.Access.Get()
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200159) GetAccessOk() (*UserPermissions, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Access.Get(), o.Access.IsSet()
}

// HasAccess returns a boolean if a field has been set.
func (o *InlineResponse200159) HasAccess() bool {
	if o != nil && o.Access.IsSet() {
		return true
	}

	return false
}

// SetAccess gets a reference to the given NullableUserPermissions and assigns it to the Access field.
func (o *InlineResponse200159) SetAccess(v UserPermissions) {
	o.Access.Set(&v)
}
// SetAccessNil sets the value for Access to be an explicit nil
func (o *InlineResponse200159) SetAccessNil() {
	o.Access.Set(nil)
}

// UnsetAccess ensures that no value is present for Access, not even an explicit nil
func (o *InlineResponse200159) UnsetAccess() {
	o.Access.Unset()
}

func (o InlineResponse200159) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Access.IsSet() {
		toSerialize["access"] = o.Access.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200159 struct {
	value *InlineResponse200159
	isSet bool
}

func (v NullableInlineResponse200159) Get() *InlineResponse200159 {
	return v.value
}

func (v *NullableInlineResponse200159) Set(val *InlineResponse200159) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200159) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200159) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200159(val *InlineResponse200159) *NullableInlineResponse200159 {
	return &NullableInlineResponse200159{value: val, isSet: true}
}

func (v NullableInlineResponse200159) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200159) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


