/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProvisionType struct for ProvisionType
type ProvisionType struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Code *string `json:"code,omitempty"`
	AclEnabled *bool `json:"aclEnabled,omitempty"`
	MultiTenant *bool `json:"multiTenant,omitempty"`
	Managed *bool `json:"managed,omitempty"`
	HostNetwork *bool `json:"hostNetwork,omitempty"`
	CustomSupported *bool `json:"customSupported,omitempty"`
	MapPorts *bool `json:"mapPorts,omitempty"`
	ExportServer *bool `json:"exportServer,omitempty"`
	ViewSet NullableString `json:"viewSet,omitempty"`
	ServerType *string `json:"serverType,omitempty"`
	HostType *string `json:"hostType,omitempty"`
	AddVolumes *bool `json:"addVolumes,omitempty"`
	HasVolumes *bool `json:"hasVolumes,omitempty"`
	HasDatastore *bool `json:"hasDatastore,omitempty"`
	HasNetworks *bool `json:"hasNetworks,omitempty"`
	MaxNetworks *int64 `json:"maxNetworks,omitempty"`
	CustomizeVolume *bool `json:"customizeVolume,omitempty"`
	RootDiskCustomizable *bool `json:"rootDiskCustomizable,omitempty"`
	RootDiskSizeKnown *bool `json:"rootDiskSizeKnown,omitempty"`
	RootDiskResizable *bool `json:"rootDiskResizable,omitempty"`
	LvmSupported *bool `json:"lvmSupported,omitempty"`
	HostDiskMode *string `json:"hostDiskMode,omitempty"`
	MinDisk *int64 `json:"minDisk,omitempty"`
	MaxDisk NullableString `json:"maxDisk,omitempty"`
	ResizeCopiesVolumes *bool `json:"resizeCopiesVolumes,omitempty"`
	SupportsAutoDatastore *bool `json:"supportsAutoDatastore,omitempty"`
	HasZonePools *bool `json:"hasZonePools,omitempty"`
	HasSecurityGroups *bool `json:"hasSecurityGroups,omitempty"`
	HasParameters *bool `json:"hasParameters,omitempty"`
	CanEnforceTags NullableBool `json:"canEnforceTags,omitempty"`
	DisableRootDatastore *bool `json:"disableRootDatastore,omitempty"`
	HasSnapshots *bool `json:"hasSnapshots,omitempty"`
	HasSpecTemplates *bool `json:"hasSpecTemplates,omitempty"`
	HasPreview *bool `json:"hasPreview,omitempty"`
	ZonePoolRequired *bool `json:"zonePoolRequired,omitempty"`
	PlanRequiresPool *bool `json:"planRequiresPool,omitempty"`
	HasFolders NullableBool `json:"hasFolders,omitempty"`
	OptionTypes []OptionType `json:"optionTypes,omitempty"`
	CustomOptionTypes []OptionType `json:"customOptionTypes,omitempty"`
	NetworkTypes []NetworkType `json:"networkTypes,omitempty"`
	StorageTypes []StorageType `json:"storageTypes,omitempty"`
	RootStorageTypes []StorageType `json:"rootStorageTypes,omitempty"`
	ControllerTypes []ControllerType `json:"controllerTypes,omitempty"`
}

// NewProvisionType instantiates a new ProvisionType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisionType() *ProvisionType {
	this := ProvisionType{}
	return &this
}

// NewProvisionTypeWithDefaults instantiates a new ProvisionType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisionTypeWithDefaults() *ProvisionType {
	this := ProvisionType{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProvisionType) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProvisionType) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ProvisionType) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProvisionType) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProvisionType) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProvisionType) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisionType) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisionType) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ProvisionType) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ProvisionType) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ProvisionType) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ProvisionType) UnsetDescription() {
	o.Description.Unset()
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ProvisionType) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ProvisionType) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ProvisionType) SetCode(v string) {
	o.Code = &v
}

// GetAclEnabled returns the AclEnabled field value if set, zero value otherwise.
func (o *ProvisionType) GetAclEnabled() bool {
	if o == nil || o.AclEnabled == nil {
		var ret bool
		return ret
	}
	return *o.AclEnabled
}

// GetAclEnabledOk returns a tuple with the AclEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetAclEnabledOk() (*bool, bool) {
	if o == nil || o.AclEnabled == nil {
		return nil, false
	}
	return o.AclEnabled, true
}

// HasAclEnabled returns a boolean if a field has been set.
func (o *ProvisionType) HasAclEnabled() bool {
	if o != nil && o.AclEnabled != nil {
		return true
	}

	return false
}

// SetAclEnabled gets a reference to the given bool and assigns it to the AclEnabled field.
func (o *ProvisionType) SetAclEnabled(v bool) {
	o.AclEnabled = &v
}

// GetMultiTenant returns the MultiTenant field value if set, zero value otherwise.
func (o *ProvisionType) GetMultiTenant() bool {
	if o == nil || o.MultiTenant == nil {
		var ret bool
		return ret
	}
	return *o.MultiTenant
}

// GetMultiTenantOk returns a tuple with the MultiTenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetMultiTenantOk() (*bool, bool) {
	if o == nil || o.MultiTenant == nil {
		return nil, false
	}
	return o.MultiTenant, true
}

// HasMultiTenant returns a boolean if a field has been set.
func (o *ProvisionType) HasMultiTenant() bool {
	if o != nil && o.MultiTenant != nil {
		return true
	}

	return false
}

// SetMultiTenant gets a reference to the given bool and assigns it to the MultiTenant field.
func (o *ProvisionType) SetMultiTenant(v bool) {
	o.MultiTenant = &v
}

// GetManaged returns the Managed field value if set, zero value otherwise.
func (o *ProvisionType) GetManaged() bool {
	if o == nil || o.Managed == nil {
		var ret bool
		return ret
	}
	return *o.Managed
}

// GetManagedOk returns a tuple with the Managed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetManagedOk() (*bool, bool) {
	if o == nil || o.Managed == nil {
		return nil, false
	}
	return o.Managed, true
}

// HasManaged returns a boolean if a field has been set.
func (o *ProvisionType) HasManaged() bool {
	if o != nil && o.Managed != nil {
		return true
	}

	return false
}

// SetManaged gets a reference to the given bool and assigns it to the Managed field.
func (o *ProvisionType) SetManaged(v bool) {
	o.Managed = &v
}

// GetHostNetwork returns the HostNetwork field value if set, zero value otherwise.
func (o *ProvisionType) GetHostNetwork() bool {
	if o == nil || o.HostNetwork == nil {
		var ret bool
		return ret
	}
	return *o.HostNetwork
}

// GetHostNetworkOk returns a tuple with the HostNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetHostNetworkOk() (*bool, bool) {
	if o == nil || o.HostNetwork == nil {
		return nil, false
	}
	return o.HostNetwork, true
}

// HasHostNetwork returns a boolean if a field has been set.
func (o *ProvisionType) HasHostNetwork() bool {
	if o != nil && o.HostNetwork != nil {
		return true
	}

	return false
}

// SetHostNetwork gets a reference to the given bool and assigns it to the HostNetwork field.
func (o *ProvisionType) SetHostNetwork(v bool) {
	o.HostNetwork = &v
}

// GetCustomSupported returns the CustomSupported field value if set, zero value otherwise.
func (o *ProvisionType) GetCustomSupported() bool {
	if o == nil || o.CustomSupported == nil {
		var ret bool
		return ret
	}
	return *o.CustomSupported
}

// GetCustomSupportedOk returns a tuple with the CustomSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetCustomSupportedOk() (*bool, bool) {
	if o == nil || o.CustomSupported == nil {
		return nil, false
	}
	return o.CustomSupported, true
}

// HasCustomSupported returns a boolean if a field has been set.
func (o *ProvisionType) HasCustomSupported() bool {
	if o != nil && o.CustomSupported != nil {
		return true
	}

	return false
}

// SetCustomSupported gets a reference to the given bool and assigns it to the CustomSupported field.
func (o *ProvisionType) SetCustomSupported(v bool) {
	o.CustomSupported = &v
}

// GetMapPorts returns the MapPorts field value if set, zero value otherwise.
func (o *ProvisionType) GetMapPorts() bool {
	if o == nil || o.MapPorts == nil {
		var ret bool
		return ret
	}
	return *o.MapPorts
}

// GetMapPortsOk returns a tuple with the MapPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetMapPortsOk() (*bool, bool) {
	if o == nil || o.MapPorts == nil {
		return nil, false
	}
	return o.MapPorts, true
}

// HasMapPorts returns a boolean if a field has been set.
func (o *ProvisionType) HasMapPorts() bool {
	if o != nil && o.MapPorts != nil {
		return true
	}

	return false
}

// SetMapPorts gets a reference to the given bool and assigns it to the MapPorts field.
func (o *ProvisionType) SetMapPorts(v bool) {
	o.MapPorts = &v
}

// GetExportServer returns the ExportServer field value if set, zero value otherwise.
func (o *ProvisionType) GetExportServer() bool {
	if o == nil || o.ExportServer == nil {
		var ret bool
		return ret
	}
	return *o.ExportServer
}

// GetExportServerOk returns a tuple with the ExportServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetExportServerOk() (*bool, bool) {
	if o == nil || o.ExportServer == nil {
		return nil, false
	}
	return o.ExportServer, true
}

// HasExportServer returns a boolean if a field has been set.
func (o *ProvisionType) HasExportServer() bool {
	if o != nil && o.ExportServer != nil {
		return true
	}

	return false
}

// SetExportServer gets a reference to the given bool and assigns it to the ExportServer field.
func (o *ProvisionType) SetExportServer(v bool) {
	o.ExportServer = &v
}

// GetViewSet returns the ViewSet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisionType) GetViewSet() string {
	if o == nil || o.ViewSet.Get() == nil {
		var ret string
		return ret
	}
	return *o.ViewSet.Get()
}

// GetViewSetOk returns a tuple with the ViewSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisionType) GetViewSetOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ViewSet.Get(), o.ViewSet.IsSet()
}

// HasViewSet returns a boolean if a field has been set.
func (o *ProvisionType) HasViewSet() bool {
	if o != nil && o.ViewSet.IsSet() {
		return true
	}

	return false
}

// SetViewSet gets a reference to the given NullableString and assigns it to the ViewSet field.
func (o *ProvisionType) SetViewSet(v string) {
	o.ViewSet.Set(&v)
}
// SetViewSetNil sets the value for ViewSet to be an explicit nil
func (o *ProvisionType) SetViewSetNil() {
	o.ViewSet.Set(nil)
}

// UnsetViewSet ensures that no value is present for ViewSet, not even an explicit nil
func (o *ProvisionType) UnsetViewSet() {
	o.ViewSet.Unset()
}

// GetServerType returns the ServerType field value if set, zero value otherwise.
func (o *ProvisionType) GetServerType() string {
	if o == nil || o.ServerType == nil {
		var ret string
		return ret
	}
	return *o.ServerType
}

// GetServerTypeOk returns a tuple with the ServerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetServerTypeOk() (*string, bool) {
	if o == nil || o.ServerType == nil {
		return nil, false
	}
	return o.ServerType, true
}

// HasServerType returns a boolean if a field has been set.
func (o *ProvisionType) HasServerType() bool {
	if o != nil && o.ServerType != nil {
		return true
	}

	return false
}

// SetServerType gets a reference to the given string and assigns it to the ServerType field.
func (o *ProvisionType) SetServerType(v string) {
	o.ServerType = &v
}

// GetHostType returns the HostType field value if set, zero value otherwise.
func (o *ProvisionType) GetHostType() string {
	if o == nil || o.HostType == nil {
		var ret string
		return ret
	}
	return *o.HostType
}

// GetHostTypeOk returns a tuple with the HostType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetHostTypeOk() (*string, bool) {
	if o == nil || o.HostType == nil {
		return nil, false
	}
	return o.HostType, true
}

// HasHostType returns a boolean if a field has been set.
func (o *ProvisionType) HasHostType() bool {
	if o != nil && o.HostType != nil {
		return true
	}

	return false
}

// SetHostType gets a reference to the given string and assigns it to the HostType field.
func (o *ProvisionType) SetHostType(v string) {
	o.HostType = &v
}

// GetAddVolumes returns the AddVolumes field value if set, zero value otherwise.
func (o *ProvisionType) GetAddVolumes() bool {
	if o == nil || o.AddVolumes == nil {
		var ret bool
		return ret
	}
	return *o.AddVolumes
}

// GetAddVolumesOk returns a tuple with the AddVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetAddVolumesOk() (*bool, bool) {
	if o == nil || o.AddVolumes == nil {
		return nil, false
	}
	return o.AddVolumes, true
}

// HasAddVolumes returns a boolean if a field has been set.
func (o *ProvisionType) HasAddVolumes() bool {
	if o != nil && o.AddVolumes != nil {
		return true
	}

	return false
}

// SetAddVolumes gets a reference to the given bool and assigns it to the AddVolumes field.
func (o *ProvisionType) SetAddVolumes(v bool) {
	o.AddVolumes = &v
}

// GetHasVolumes returns the HasVolumes field value if set, zero value otherwise.
func (o *ProvisionType) GetHasVolumes() bool {
	if o == nil || o.HasVolumes == nil {
		var ret bool
		return ret
	}
	return *o.HasVolumes
}

// GetHasVolumesOk returns a tuple with the HasVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetHasVolumesOk() (*bool, bool) {
	if o == nil || o.HasVolumes == nil {
		return nil, false
	}
	return o.HasVolumes, true
}

// HasHasVolumes returns a boolean if a field has been set.
func (o *ProvisionType) HasHasVolumes() bool {
	if o != nil && o.HasVolumes != nil {
		return true
	}

	return false
}

// SetHasVolumes gets a reference to the given bool and assigns it to the HasVolumes field.
func (o *ProvisionType) SetHasVolumes(v bool) {
	o.HasVolumes = &v
}

// GetHasDatastore returns the HasDatastore field value if set, zero value otherwise.
func (o *ProvisionType) GetHasDatastore() bool {
	if o == nil || o.HasDatastore == nil {
		var ret bool
		return ret
	}
	return *o.HasDatastore
}

// GetHasDatastoreOk returns a tuple with the HasDatastore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetHasDatastoreOk() (*bool, bool) {
	if o == nil || o.HasDatastore == nil {
		return nil, false
	}
	return o.HasDatastore, true
}

// HasHasDatastore returns a boolean if a field has been set.
func (o *ProvisionType) HasHasDatastore() bool {
	if o != nil && o.HasDatastore != nil {
		return true
	}

	return false
}

// SetHasDatastore gets a reference to the given bool and assigns it to the HasDatastore field.
func (o *ProvisionType) SetHasDatastore(v bool) {
	o.HasDatastore = &v
}

// GetHasNetworks returns the HasNetworks field value if set, zero value otherwise.
func (o *ProvisionType) GetHasNetworks() bool {
	if o == nil || o.HasNetworks == nil {
		var ret bool
		return ret
	}
	return *o.HasNetworks
}

// GetHasNetworksOk returns a tuple with the HasNetworks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetHasNetworksOk() (*bool, bool) {
	if o == nil || o.HasNetworks == nil {
		return nil, false
	}
	return o.HasNetworks, true
}

// HasHasNetworks returns a boolean if a field has been set.
func (o *ProvisionType) HasHasNetworks() bool {
	if o != nil && o.HasNetworks != nil {
		return true
	}

	return false
}

// SetHasNetworks gets a reference to the given bool and assigns it to the HasNetworks field.
func (o *ProvisionType) SetHasNetworks(v bool) {
	o.HasNetworks = &v
}

// GetMaxNetworks returns the MaxNetworks field value if set, zero value otherwise.
func (o *ProvisionType) GetMaxNetworks() int64 {
	if o == nil || o.MaxNetworks == nil {
		var ret int64
		return ret
	}
	return *o.MaxNetworks
}

// GetMaxNetworksOk returns a tuple with the MaxNetworks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetMaxNetworksOk() (*int64, bool) {
	if o == nil || o.MaxNetworks == nil {
		return nil, false
	}
	return o.MaxNetworks, true
}

// HasMaxNetworks returns a boolean if a field has been set.
func (o *ProvisionType) HasMaxNetworks() bool {
	if o != nil && o.MaxNetworks != nil {
		return true
	}

	return false
}

// SetMaxNetworks gets a reference to the given int64 and assigns it to the MaxNetworks field.
func (o *ProvisionType) SetMaxNetworks(v int64) {
	o.MaxNetworks = &v
}

// GetCustomizeVolume returns the CustomizeVolume field value if set, zero value otherwise.
func (o *ProvisionType) GetCustomizeVolume() bool {
	if o == nil || o.CustomizeVolume == nil {
		var ret bool
		return ret
	}
	return *o.CustomizeVolume
}

// GetCustomizeVolumeOk returns a tuple with the CustomizeVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetCustomizeVolumeOk() (*bool, bool) {
	if o == nil || o.CustomizeVolume == nil {
		return nil, false
	}
	return o.CustomizeVolume, true
}

// HasCustomizeVolume returns a boolean if a field has been set.
func (o *ProvisionType) HasCustomizeVolume() bool {
	if o != nil && o.CustomizeVolume != nil {
		return true
	}

	return false
}

// SetCustomizeVolume gets a reference to the given bool and assigns it to the CustomizeVolume field.
func (o *ProvisionType) SetCustomizeVolume(v bool) {
	o.CustomizeVolume = &v
}

// GetRootDiskCustomizable returns the RootDiskCustomizable field value if set, zero value otherwise.
func (o *ProvisionType) GetRootDiskCustomizable() bool {
	if o == nil || o.RootDiskCustomizable == nil {
		var ret bool
		return ret
	}
	return *o.RootDiskCustomizable
}

// GetRootDiskCustomizableOk returns a tuple with the RootDiskCustomizable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetRootDiskCustomizableOk() (*bool, bool) {
	if o == nil || o.RootDiskCustomizable == nil {
		return nil, false
	}
	return o.RootDiskCustomizable, true
}

// HasRootDiskCustomizable returns a boolean if a field has been set.
func (o *ProvisionType) HasRootDiskCustomizable() bool {
	if o != nil && o.RootDiskCustomizable != nil {
		return true
	}

	return false
}

// SetRootDiskCustomizable gets a reference to the given bool and assigns it to the RootDiskCustomizable field.
func (o *ProvisionType) SetRootDiskCustomizable(v bool) {
	o.RootDiskCustomizable = &v
}

// GetRootDiskSizeKnown returns the RootDiskSizeKnown field value if set, zero value otherwise.
func (o *ProvisionType) GetRootDiskSizeKnown() bool {
	if o == nil || o.RootDiskSizeKnown == nil {
		var ret bool
		return ret
	}
	return *o.RootDiskSizeKnown
}

// GetRootDiskSizeKnownOk returns a tuple with the RootDiskSizeKnown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetRootDiskSizeKnownOk() (*bool, bool) {
	if o == nil || o.RootDiskSizeKnown == nil {
		return nil, false
	}
	return o.RootDiskSizeKnown, true
}

// HasRootDiskSizeKnown returns a boolean if a field has been set.
func (o *ProvisionType) HasRootDiskSizeKnown() bool {
	if o != nil && o.RootDiskSizeKnown != nil {
		return true
	}

	return false
}

// SetRootDiskSizeKnown gets a reference to the given bool and assigns it to the RootDiskSizeKnown field.
func (o *ProvisionType) SetRootDiskSizeKnown(v bool) {
	o.RootDiskSizeKnown = &v
}

// GetRootDiskResizable returns the RootDiskResizable field value if set, zero value otherwise.
func (o *ProvisionType) GetRootDiskResizable() bool {
	if o == nil || o.RootDiskResizable == nil {
		var ret bool
		return ret
	}
	return *o.RootDiskResizable
}

// GetRootDiskResizableOk returns a tuple with the RootDiskResizable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetRootDiskResizableOk() (*bool, bool) {
	if o == nil || o.RootDiskResizable == nil {
		return nil, false
	}
	return o.RootDiskResizable, true
}

// HasRootDiskResizable returns a boolean if a field has been set.
func (o *ProvisionType) HasRootDiskResizable() bool {
	if o != nil && o.RootDiskResizable != nil {
		return true
	}

	return false
}

// SetRootDiskResizable gets a reference to the given bool and assigns it to the RootDiskResizable field.
func (o *ProvisionType) SetRootDiskResizable(v bool) {
	o.RootDiskResizable = &v
}

// GetLvmSupported returns the LvmSupported field value if set, zero value otherwise.
func (o *ProvisionType) GetLvmSupported() bool {
	if o == nil || o.LvmSupported == nil {
		var ret bool
		return ret
	}
	return *o.LvmSupported
}

// GetLvmSupportedOk returns a tuple with the LvmSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetLvmSupportedOk() (*bool, bool) {
	if o == nil || o.LvmSupported == nil {
		return nil, false
	}
	return o.LvmSupported, true
}

// HasLvmSupported returns a boolean if a field has been set.
func (o *ProvisionType) HasLvmSupported() bool {
	if o != nil && o.LvmSupported != nil {
		return true
	}

	return false
}

// SetLvmSupported gets a reference to the given bool and assigns it to the LvmSupported field.
func (o *ProvisionType) SetLvmSupported(v bool) {
	o.LvmSupported = &v
}

// GetHostDiskMode returns the HostDiskMode field value if set, zero value otherwise.
func (o *ProvisionType) GetHostDiskMode() string {
	if o == nil || o.HostDiskMode == nil {
		var ret string
		return ret
	}
	return *o.HostDiskMode
}

// GetHostDiskModeOk returns a tuple with the HostDiskMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetHostDiskModeOk() (*string, bool) {
	if o == nil || o.HostDiskMode == nil {
		return nil, false
	}
	return o.HostDiskMode, true
}

// HasHostDiskMode returns a boolean if a field has been set.
func (o *ProvisionType) HasHostDiskMode() bool {
	if o != nil && o.HostDiskMode != nil {
		return true
	}

	return false
}

// SetHostDiskMode gets a reference to the given string and assigns it to the HostDiskMode field.
func (o *ProvisionType) SetHostDiskMode(v string) {
	o.HostDiskMode = &v
}

// GetMinDisk returns the MinDisk field value if set, zero value otherwise.
func (o *ProvisionType) GetMinDisk() int64 {
	if o == nil || o.MinDisk == nil {
		var ret int64
		return ret
	}
	return *o.MinDisk
}

// GetMinDiskOk returns a tuple with the MinDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetMinDiskOk() (*int64, bool) {
	if o == nil || o.MinDisk == nil {
		return nil, false
	}
	return o.MinDisk, true
}

// HasMinDisk returns a boolean if a field has been set.
func (o *ProvisionType) HasMinDisk() bool {
	if o != nil && o.MinDisk != nil {
		return true
	}

	return false
}

// SetMinDisk gets a reference to the given int64 and assigns it to the MinDisk field.
func (o *ProvisionType) SetMinDisk(v int64) {
	o.MinDisk = &v
}

// GetMaxDisk returns the MaxDisk field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisionType) GetMaxDisk() string {
	if o == nil || o.MaxDisk.Get() == nil {
		var ret string
		return ret
	}
	return *o.MaxDisk.Get()
}

// GetMaxDiskOk returns a tuple with the MaxDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisionType) GetMaxDiskOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxDisk.Get(), o.MaxDisk.IsSet()
}

// HasMaxDisk returns a boolean if a field has been set.
func (o *ProvisionType) HasMaxDisk() bool {
	if o != nil && o.MaxDisk.IsSet() {
		return true
	}

	return false
}

// SetMaxDisk gets a reference to the given NullableString and assigns it to the MaxDisk field.
func (o *ProvisionType) SetMaxDisk(v string) {
	o.MaxDisk.Set(&v)
}
// SetMaxDiskNil sets the value for MaxDisk to be an explicit nil
func (o *ProvisionType) SetMaxDiskNil() {
	o.MaxDisk.Set(nil)
}

// UnsetMaxDisk ensures that no value is present for MaxDisk, not even an explicit nil
func (o *ProvisionType) UnsetMaxDisk() {
	o.MaxDisk.Unset()
}

// GetResizeCopiesVolumes returns the ResizeCopiesVolumes field value if set, zero value otherwise.
func (o *ProvisionType) GetResizeCopiesVolumes() bool {
	if o == nil || o.ResizeCopiesVolumes == nil {
		var ret bool
		return ret
	}
	return *o.ResizeCopiesVolumes
}

// GetResizeCopiesVolumesOk returns a tuple with the ResizeCopiesVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetResizeCopiesVolumesOk() (*bool, bool) {
	if o == nil || o.ResizeCopiesVolumes == nil {
		return nil, false
	}
	return o.ResizeCopiesVolumes, true
}

// HasResizeCopiesVolumes returns a boolean if a field has been set.
func (o *ProvisionType) HasResizeCopiesVolumes() bool {
	if o != nil && o.ResizeCopiesVolumes != nil {
		return true
	}

	return false
}

// SetResizeCopiesVolumes gets a reference to the given bool and assigns it to the ResizeCopiesVolumes field.
func (o *ProvisionType) SetResizeCopiesVolumes(v bool) {
	o.ResizeCopiesVolumes = &v
}

// GetSupportsAutoDatastore returns the SupportsAutoDatastore field value if set, zero value otherwise.
func (o *ProvisionType) GetSupportsAutoDatastore() bool {
	if o == nil || o.SupportsAutoDatastore == nil {
		var ret bool
		return ret
	}
	return *o.SupportsAutoDatastore
}

// GetSupportsAutoDatastoreOk returns a tuple with the SupportsAutoDatastore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetSupportsAutoDatastoreOk() (*bool, bool) {
	if o == nil || o.SupportsAutoDatastore == nil {
		return nil, false
	}
	return o.SupportsAutoDatastore, true
}

// HasSupportsAutoDatastore returns a boolean if a field has been set.
func (o *ProvisionType) HasSupportsAutoDatastore() bool {
	if o != nil && o.SupportsAutoDatastore != nil {
		return true
	}

	return false
}

// SetSupportsAutoDatastore gets a reference to the given bool and assigns it to the SupportsAutoDatastore field.
func (o *ProvisionType) SetSupportsAutoDatastore(v bool) {
	o.SupportsAutoDatastore = &v
}

// GetHasZonePools returns the HasZonePools field value if set, zero value otherwise.
func (o *ProvisionType) GetHasZonePools() bool {
	if o == nil || o.HasZonePools == nil {
		var ret bool
		return ret
	}
	return *o.HasZonePools
}

// GetHasZonePoolsOk returns a tuple with the HasZonePools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetHasZonePoolsOk() (*bool, bool) {
	if o == nil || o.HasZonePools == nil {
		return nil, false
	}
	return o.HasZonePools, true
}

// HasHasZonePools returns a boolean if a field has been set.
func (o *ProvisionType) HasHasZonePools() bool {
	if o != nil && o.HasZonePools != nil {
		return true
	}

	return false
}

// SetHasZonePools gets a reference to the given bool and assigns it to the HasZonePools field.
func (o *ProvisionType) SetHasZonePools(v bool) {
	o.HasZonePools = &v
}

// GetHasSecurityGroups returns the HasSecurityGroups field value if set, zero value otherwise.
func (o *ProvisionType) GetHasSecurityGroups() bool {
	if o == nil || o.HasSecurityGroups == nil {
		var ret bool
		return ret
	}
	return *o.HasSecurityGroups
}

// GetHasSecurityGroupsOk returns a tuple with the HasSecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetHasSecurityGroupsOk() (*bool, bool) {
	if o == nil || o.HasSecurityGroups == nil {
		return nil, false
	}
	return o.HasSecurityGroups, true
}

// HasHasSecurityGroups returns a boolean if a field has been set.
func (o *ProvisionType) HasHasSecurityGroups() bool {
	if o != nil && o.HasSecurityGroups != nil {
		return true
	}

	return false
}

// SetHasSecurityGroups gets a reference to the given bool and assigns it to the HasSecurityGroups field.
func (o *ProvisionType) SetHasSecurityGroups(v bool) {
	o.HasSecurityGroups = &v
}

// GetHasParameters returns the HasParameters field value if set, zero value otherwise.
func (o *ProvisionType) GetHasParameters() bool {
	if o == nil || o.HasParameters == nil {
		var ret bool
		return ret
	}
	return *o.HasParameters
}

// GetHasParametersOk returns a tuple with the HasParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetHasParametersOk() (*bool, bool) {
	if o == nil || o.HasParameters == nil {
		return nil, false
	}
	return o.HasParameters, true
}

// HasHasParameters returns a boolean if a field has been set.
func (o *ProvisionType) HasHasParameters() bool {
	if o != nil && o.HasParameters != nil {
		return true
	}

	return false
}

// SetHasParameters gets a reference to the given bool and assigns it to the HasParameters field.
func (o *ProvisionType) SetHasParameters(v bool) {
	o.HasParameters = &v
}

// GetCanEnforceTags returns the CanEnforceTags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisionType) GetCanEnforceTags() bool {
	if o == nil || o.CanEnforceTags.Get() == nil {
		var ret bool
		return ret
	}
	return *o.CanEnforceTags.Get()
}

// GetCanEnforceTagsOk returns a tuple with the CanEnforceTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisionType) GetCanEnforceTagsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CanEnforceTags.Get(), o.CanEnforceTags.IsSet()
}

// HasCanEnforceTags returns a boolean if a field has been set.
func (o *ProvisionType) HasCanEnforceTags() bool {
	if o != nil && o.CanEnforceTags.IsSet() {
		return true
	}

	return false
}

// SetCanEnforceTags gets a reference to the given NullableBool and assigns it to the CanEnforceTags field.
func (o *ProvisionType) SetCanEnforceTags(v bool) {
	o.CanEnforceTags.Set(&v)
}
// SetCanEnforceTagsNil sets the value for CanEnforceTags to be an explicit nil
func (o *ProvisionType) SetCanEnforceTagsNil() {
	o.CanEnforceTags.Set(nil)
}

// UnsetCanEnforceTags ensures that no value is present for CanEnforceTags, not even an explicit nil
func (o *ProvisionType) UnsetCanEnforceTags() {
	o.CanEnforceTags.Unset()
}

// GetDisableRootDatastore returns the DisableRootDatastore field value if set, zero value otherwise.
func (o *ProvisionType) GetDisableRootDatastore() bool {
	if o == nil || o.DisableRootDatastore == nil {
		var ret bool
		return ret
	}
	return *o.DisableRootDatastore
}

// GetDisableRootDatastoreOk returns a tuple with the DisableRootDatastore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetDisableRootDatastoreOk() (*bool, bool) {
	if o == nil || o.DisableRootDatastore == nil {
		return nil, false
	}
	return o.DisableRootDatastore, true
}

// HasDisableRootDatastore returns a boolean if a field has been set.
func (o *ProvisionType) HasDisableRootDatastore() bool {
	if o != nil && o.DisableRootDatastore != nil {
		return true
	}

	return false
}

// SetDisableRootDatastore gets a reference to the given bool and assigns it to the DisableRootDatastore field.
func (o *ProvisionType) SetDisableRootDatastore(v bool) {
	o.DisableRootDatastore = &v
}

// GetHasSnapshots returns the HasSnapshots field value if set, zero value otherwise.
func (o *ProvisionType) GetHasSnapshots() bool {
	if o == nil || o.HasSnapshots == nil {
		var ret bool
		return ret
	}
	return *o.HasSnapshots
}

// GetHasSnapshotsOk returns a tuple with the HasSnapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetHasSnapshotsOk() (*bool, bool) {
	if o == nil || o.HasSnapshots == nil {
		return nil, false
	}
	return o.HasSnapshots, true
}

// HasHasSnapshots returns a boolean if a field has been set.
func (o *ProvisionType) HasHasSnapshots() bool {
	if o != nil && o.HasSnapshots != nil {
		return true
	}

	return false
}

// SetHasSnapshots gets a reference to the given bool and assigns it to the HasSnapshots field.
func (o *ProvisionType) SetHasSnapshots(v bool) {
	o.HasSnapshots = &v
}

// GetHasSpecTemplates returns the HasSpecTemplates field value if set, zero value otherwise.
func (o *ProvisionType) GetHasSpecTemplates() bool {
	if o == nil || o.HasSpecTemplates == nil {
		var ret bool
		return ret
	}
	return *o.HasSpecTemplates
}

// GetHasSpecTemplatesOk returns a tuple with the HasSpecTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetHasSpecTemplatesOk() (*bool, bool) {
	if o == nil || o.HasSpecTemplates == nil {
		return nil, false
	}
	return o.HasSpecTemplates, true
}

// HasHasSpecTemplates returns a boolean if a field has been set.
func (o *ProvisionType) HasHasSpecTemplates() bool {
	if o != nil && o.HasSpecTemplates != nil {
		return true
	}

	return false
}

// SetHasSpecTemplates gets a reference to the given bool and assigns it to the HasSpecTemplates field.
func (o *ProvisionType) SetHasSpecTemplates(v bool) {
	o.HasSpecTemplates = &v
}

// GetHasPreview returns the HasPreview field value if set, zero value otherwise.
func (o *ProvisionType) GetHasPreview() bool {
	if o == nil || o.HasPreview == nil {
		var ret bool
		return ret
	}
	return *o.HasPreview
}

// GetHasPreviewOk returns a tuple with the HasPreview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetHasPreviewOk() (*bool, bool) {
	if o == nil || o.HasPreview == nil {
		return nil, false
	}
	return o.HasPreview, true
}

// HasHasPreview returns a boolean if a field has been set.
func (o *ProvisionType) HasHasPreview() bool {
	if o != nil && o.HasPreview != nil {
		return true
	}

	return false
}

// SetHasPreview gets a reference to the given bool and assigns it to the HasPreview field.
func (o *ProvisionType) SetHasPreview(v bool) {
	o.HasPreview = &v
}

// GetZonePoolRequired returns the ZonePoolRequired field value if set, zero value otherwise.
func (o *ProvisionType) GetZonePoolRequired() bool {
	if o == nil || o.ZonePoolRequired == nil {
		var ret bool
		return ret
	}
	return *o.ZonePoolRequired
}

// GetZonePoolRequiredOk returns a tuple with the ZonePoolRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetZonePoolRequiredOk() (*bool, bool) {
	if o == nil || o.ZonePoolRequired == nil {
		return nil, false
	}
	return o.ZonePoolRequired, true
}

// HasZonePoolRequired returns a boolean if a field has been set.
func (o *ProvisionType) HasZonePoolRequired() bool {
	if o != nil && o.ZonePoolRequired != nil {
		return true
	}

	return false
}

// SetZonePoolRequired gets a reference to the given bool and assigns it to the ZonePoolRequired field.
func (o *ProvisionType) SetZonePoolRequired(v bool) {
	o.ZonePoolRequired = &v
}

// GetPlanRequiresPool returns the PlanRequiresPool field value if set, zero value otherwise.
func (o *ProvisionType) GetPlanRequiresPool() bool {
	if o == nil || o.PlanRequiresPool == nil {
		var ret bool
		return ret
	}
	return *o.PlanRequiresPool
}

// GetPlanRequiresPoolOk returns a tuple with the PlanRequiresPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisionType) GetPlanRequiresPoolOk() (*bool, bool) {
	if o == nil || o.PlanRequiresPool == nil {
		return nil, false
	}
	return o.PlanRequiresPool, true
}

// HasPlanRequiresPool returns a boolean if a field has been set.
func (o *ProvisionType) HasPlanRequiresPool() bool {
	if o != nil && o.PlanRequiresPool != nil {
		return true
	}

	return false
}

// SetPlanRequiresPool gets a reference to the given bool and assigns it to the PlanRequiresPool field.
func (o *ProvisionType) SetPlanRequiresPool(v bool) {
	o.PlanRequiresPool = &v
}

// GetHasFolders returns the HasFolders field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisionType) GetHasFolders() bool {
	if o == nil || o.HasFolders.Get() == nil {
		var ret bool
		return ret
	}
	return *o.HasFolders.Get()
}

// GetHasFoldersOk returns a tuple with the HasFolders field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisionType) GetHasFoldersOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HasFolders.Get(), o.HasFolders.IsSet()
}

// HasHasFolders returns a boolean if a field has been set.
func (o *ProvisionType) HasHasFolders() bool {
	if o != nil && o.HasFolders.IsSet() {
		return true
	}

	return false
}

// SetHasFolders gets a reference to the given NullableBool and assigns it to the HasFolders field.
func (o *ProvisionType) SetHasFolders(v bool) {
	o.HasFolders.Set(&v)
}
// SetHasFoldersNil sets the value for HasFolders to be an explicit nil
func (o *ProvisionType) SetHasFoldersNil() {
	o.HasFolders.Set(nil)
}

// UnsetHasFolders ensures that no value is present for HasFolders, not even an explicit nil
func (o *ProvisionType) UnsetHasFolders() {
	o.HasFolders.Unset()
}

// GetOptionTypes returns the OptionTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisionType) GetOptionTypes() []OptionType {
	if o == nil  {
		var ret []OptionType
		return ret
	}
	return o.OptionTypes
}

// GetOptionTypesOk returns a tuple with the OptionTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisionType) GetOptionTypesOk() (*[]OptionType, bool) {
	if o == nil || o.OptionTypes == nil {
		return nil, false
	}
	return &o.OptionTypes, true
}

// HasOptionTypes returns a boolean if a field has been set.
func (o *ProvisionType) HasOptionTypes() bool {
	if o != nil && o.OptionTypes != nil {
		return true
	}

	return false
}

// SetOptionTypes gets a reference to the given []OptionType and assigns it to the OptionTypes field.
func (o *ProvisionType) SetOptionTypes(v []OptionType) {
	o.OptionTypes = v
}

// GetCustomOptionTypes returns the CustomOptionTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisionType) GetCustomOptionTypes() []OptionType {
	if o == nil  {
		var ret []OptionType
		return ret
	}
	return o.CustomOptionTypes
}

// GetCustomOptionTypesOk returns a tuple with the CustomOptionTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisionType) GetCustomOptionTypesOk() (*[]OptionType, bool) {
	if o == nil || o.CustomOptionTypes == nil {
		return nil, false
	}
	return &o.CustomOptionTypes, true
}

// HasCustomOptionTypes returns a boolean if a field has been set.
func (o *ProvisionType) HasCustomOptionTypes() bool {
	if o != nil && o.CustomOptionTypes != nil {
		return true
	}

	return false
}

// SetCustomOptionTypes gets a reference to the given []OptionType and assigns it to the CustomOptionTypes field.
func (o *ProvisionType) SetCustomOptionTypes(v []OptionType) {
	o.CustomOptionTypes = v
}

// GetNetworkTypes returns the NetworkTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisionType) GetNetworkTypes() []NetworkType {
	if o == nil  {
		var ret []NetworkType
		return ret
	}
	return o.NetworkTypes
}

// GetNetworkTypesOk returns a tuple with the NetworkTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisionType) GetNetworkTypesOk() (*[]NetworkType, bool) {
	if o == nil || o.NetworkTypes == nil {
		return nil, false
	}
	return &o.NetworkTypes, true
}

// HasNetworkTypes returns a boolean if a field has been set.
func (o *ProvisionType) HasNetworkTypes() bool {
	if o != nil && o.NetworkTypes != nil {
		return true
	}

	return false
}

// SetNetworkTypes gets a reference to the given []NetworkType and assigns it to the NetworkTypes field.
func (o *ProvisionType) SetNetworkTypes(v []NetworkType) {
	o.NetworkTypes = v
}

// GetStorageTypes returns the StorageTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisionType) GetStorageTypes() []StorageType {
	if o == nil  {
		var ret []StorageType
		return ret
	}
	return o.StorageTypes
}

// GetStorageTypesOk returns a tuple with the StorageTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisionType) GetStorageTypesOk() (*[]StorageType, bool) {
	if o == nil || o.StorageTypes == nil {
		return nil, false
	}
	return &o.StorageTypes, true
}

// HasStorageTypes returns a boolean if a field has been set.
func (o *ProvisionType) HasStorageTypes() bool {
	if o != nil && o.StorageTypes != nil {
		return true
	}

	return false
}

// SetStorageTypes gets a reference to the given []StorageType and assigns it to the StorageTypes field.
func (o *ProvisionType) SetStorageTypes(v []StorageType) {
	o.StorageTypes = v
}

// GetRootStorageTypes returns the RootStorageTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisionType) GetRootStorageTypes() []StorageType {
	if o == nil  {
		var ret []StorageType
		return ret
	}
	return o.RootStorageTypes
}

// GetRootStorageTypesOk returns a tuple with the RootStorageTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisionType) GetRootStorageTypesOk() (*[]StorageType, bool) {
	if o == nil || o.RootStorageTypes == nil {
		return nil, false
	}
	return &o.RootStorageTypes, true
}

// HasRootStorageTypes returns a boolean if a field has been set.
func (o *ProvisionType) HasRootStorageTypes() bool {
	if o != nil && o.RootStorageTypes != nil {
		return true
	}

	return false
}

// SetRootStorageTypes gets a reference to the given []StorageType and assigns it to the RootStorageTypes field.
func (o *ProvisionType) SetRootStorageTypes(v []StorageType) {
	o.RootStorageTypes = v
}

// GetControllerTypes returns the ControllerTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisionType) GetControllerTypes() []ControllerType {
	if o == nil  {
		var ret []ControllerType
		return ret
	}
	return o.ControllerTypes
}

// GetControllerTypesOk returns a tuple with the ControllerTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisionType) GetControllerTypesOk() (*[]ControllerType, bool) {
	if o == nil || o.ControllerTypes == nil {
		return nil, false
	}
	return &o.ControllerTypes, true
}

// HasControllerTypes returns a boolean if a field has been set.
func (o *ProvisionType) HasControllerTypes() bool {
	if o != nil && o.ControllerTypes != nil {
		return true
	}

	return false
}

// SetControllerTypes gets a reference to the given []ControllerType and assigns it to the ControllerTypes field.
func (o *ProvisionType) SetControllerTypes(v []ControllerType) {
	o.ControllerTypes = v
}

func (o ProvisionType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.AclEnabled != nil {
		toSerialize["aclEnabled"] = o.AclEnabled
	}
	if o.MultiTenant != nil {
		toSerialize["multiTenant"] = o.MultiTenant
	}
	if o.Managed != nil {
		toSerialize["managed"] = o.Managed
	}
	if o.HostNetwork != nil {
		toSerialize["hostNetwork"] = o.HostNetwork
	}
	if o.CustomSupported != nil {
		toSerialize["customSupported"] = o.CustomSupported
	}
	if o.MapPorts != nil {
		toSerialize["mapPorts"] = o.MapPorts
	}
	if o.ExportServer != nil {
		toSerialize["exportServer"] = o.ExportServer
	}
	if o.ViewSet.IsSet() {
		toSerialize["viewSet"] = o.ViewSet.Get()
	}
	if o.ServerType != nil {
		toSerialize["serverType"] = o.ServerType
	}
	if o.HostType != nil {
		toSerialize["hostType"] = o.HostType
	}
	if o.AddVolumes != nil {
		toSerialize["addVolumes"] = o.AddVolumes
	}
	if o.HasVolumes != nil {
		toSerialize["hasVolumes"] = o.HasVolumes
	}
	if o.HasDatastore != nil {
		toSerialize["hasDatastore"] = o.HasDatastore
	}
	if o.HasNetworks != nil {
		toSerialize["hasNetworks"] = o.HasNetworks
	}
	if o.MaxNetworks != nil {
		toSerialize["maxNetworks"] = o.MaxNetworks
	}
	if o.CustomizeVolume != nil {
		toSerialize["customizeVolume"] = o.CustomizeVolume
	}
	if o.RootDiskCustomizable != nil {
		toSerialize["rootDiskCustomizable"] = o.RootDiskCustomizable
	}
	if o.RootDiskSizeKnown != nil {
		toSerialize["rootDiskSizeKnown"] = o.RootDiskSizeKnown
	}
	if o.RootDiskResizable != nil {
		toSerialize["rootDiskResizable"] = o.RootDiskResizable
	}
	if o.LvmSupported != nil {
		toSerialize["lvmSupported"] = o.LvmSupported
	}
	if o.HostDiskMode != nil {
		toSerialize["hostDiskMode"] = o.HostDiskMode
	}
	if o.MinDisk != nil {
		toSerialize["minDisk"] = o.MinDisk
	}
	if o.MaxDisk.IsSet() {
		toSerialize["maxDisk"] = o.MaxDisk.Get()
	}
	if o.ResizeCopiesVolumes != nil {
		toSerialize["resizeCopiesVolumes"] = o.ResizeCopiesVolumes
	}
	if o.SupportsAutoDatastore != nil {
		toSerialize["supportsAutoDatastore"] = o.SupportsAutoDatastore
	}
	if o.HasZonePools != nil {
		toSerialize["hasZonePools"] = o.HasZonePools
	}
	if o.HasSecurityGroups != nil {
		toSerialize["hasSecurityGroups"] = o.HasSecurityGroups
	}
	if o.HasParameters != nil {
		toSerialize["hasParameters"] = o.HasParameters
	}
	if o.CanEnforceTags.IsSet() {
		toSerialize["canEnforceTags"] = o.CanEnforceTags.Get()
	}
	if o.DisableRootDatastore != nil {
		toSerialize["disableRootDatastore"] = o.DisableRootDatastore
	}
	if o.HasSnapshots != nil {
		toSerialize["hasSnapshots"] = o.HasSnapshots
	}
	if o.HasSpecTemplates != nil {
		toSerialize["hasSpecTemplates"] = o.HasSpecTemplates
	}
	if o.HasPreview != nil {
		toSerialize["hasPreview"] = o.HasPreview
	}
	if o.ZonePoolRequired != nil {
		toSerialize["zonePoolRequired"] = o.ZonePoolRequired
	}
	if o.PlanRequiresPool != nil {
		toSerialize["planRequiresPool"] = o.PlanRequiresPool
	}
	if o.HasFolders.IsSet() {
		toSerialize["hasFolders"] = o.HasFolders.Get()
	}
	if o.OptionTypes != nil {
		toSerialize["optionTypes"] = o.OptionTypes
	}
	if o.CustomOptionTypes != nil {
		toSerialize["customOptionTypes"] = o.CustomOptionTypes
	}
	if o.NetworkTypes != nil {
		toSerialize["networkTypes"] = o.NetworkTypes
	}
	if o.StorageTypes != nil {
		toSerialize["storageTypes"] = o.StorageTypes
	}
	if o.RootStorageTypes != nil {
		toSerialize["rootStorageTypes"] = o.RootStorageTypes
	}
	if o.ControllerTypes != nil {
		toSerialize["controllerTypes"] = o.ControllerTypes
	}
	return json.Marshal(toSerialize)
}

type NullableProvisionType struct {
	value *ProvisionType
	isSet bool
}

func (v NullableProvisionType) Get() *ProvisionType {
	return v.value
}

func (v *NullableProvisionType) Set(val *ProvisionType) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisionType) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisionType(val *ProvisionType) *NullableProvisionType {
	return &NullableProvisionType{value: val, isSet: true}
}

func (v NullableProvisionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


