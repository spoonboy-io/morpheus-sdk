/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetBillingInstancesIdentifier200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBillingInstancesIdentifier200Response{}

// GetBillingInstancesIdentifier200Response struct for GetBillingInstancesIdentifier200Response
type GetBillingInstancesIdentifier200Response struct {
	Success *bool `json:"success,omitempty"`
	BillingInfo *BillingInstance `json:"billingInfo,omitempty"`
}

// NewGetBillingInstancesIdentifier200Response instantiates a new GetBillingInstancesIdentifier200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBillingInstancesIdentifier200Response() *GetBillingInstancesIdentifier200Response {
	this := GetBillingInstancesIdentifier200Response{}
	return &this
}

// NewGetBillingInstancesIdentifier200ResponseWithDefaults instantiates a new GetBillingInstancesIdentifier200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBillingInstancesIdentifier200ResponseWithDefaults() *GetBillingInstancesIdentifier200Response {
	this := GetBillingInstancesIdentifier200Response{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *GetBillingInstancesIdentifier200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBillingInstancesIdentifier200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *GetBillingInstancesIdentifier200Response) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *GetBillingInstancesIdentifier200Response) SetSuccess(v bool) {
	o.Success = &v
}

// GetBillingInfo returns the BillingInfo field value if set, zero value otherwise.
func (o *GetBillingInstancesIdentifier200Response) GetBillingInfo() BillingInstance {
	if o == nil || IsNil(o.BillingInfo) {
		var ret BillingInstance
		return ret
	}
	return *o.BillingInfo
}

// GetBillingInfoOk returns a tuple with the BillingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBillingInstancesIdentifier200Response) GetBillingInfoOk() (*BillingInstance, bool) {
	if o == nil || IsNil(o.BillingInfo) {
		return nil, false
	}
	return o.BillingInfo, true
}

// HasBillingInfo returns a boolean if a field has been set.
func (o *GetBillingInstancesIdentifier200Response) HasBillingInfo() bool {
	if o != nil && !IsNil(o.BillingInfo) {
		return true
	}

	return false
}

// SetBillingInfo gets a reference to the given BillingInstance and assigns it to the BillingInfo field.
func (o *GetBillingInstancesIdentifier200Response) SetBillingInfo(v BillingInstance) {
	o.BillingInfo = &v
}

func (o GetBillingInstancesIdentifier200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBillingInstancesIdentifier200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.BillingInfo) {
		toSerialize["billingInfo"] = o.BillingInfo
	}
	return toSerialize, nil
}

type NullableGetBillingInstancesIdentifier200Response struct {
	value *GetBillingInstancesIdentifier200Response
	isSet bool
}

func (v NullableGetBillingInstancesIdentifier200Response) Get() *GetBillingInstancesIdentifier200Response {
	return v.value
}

func (v *NullableGetBillingInstancesIdentifier200Response) Set(val *GetBillingInstancesIdentifier200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBillingInstancesIdentifier200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBillingInstancesIdentifier200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBillingInstancesIdentifier200Response(val *GetBillingInstancesIdentifier200Response) *NullableGetBillingInstancesIdentifier200Response {
	return &NullableGetBillingInstancesIdentifier200Response{value: val, isSet: true}
}

func (v NullableGetBillingInstancesIdentifier200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBillingInstancesIdentifier200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


