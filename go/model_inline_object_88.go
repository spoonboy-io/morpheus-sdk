/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject88 struct for InlineObject88
type InlineObject88 struct {
	Incident ApiMonitoringIncidentsIdIncident `json:"incident"`
}

// NewInlineObject88 instantiates a new InlineObject88 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject88(incident ApiMonitoringIncidentsIdIncident, ) *InlineObject88 {
	this := InlineObject88{}
	this.Incident = incident
	return &this
}

// NewInlineObject88WithDefaults instantiates a new InlineObject88 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject88WithDefaults() *InlineObject88 {
	this := InlineObject88{}
	return &this
}

// GetIncident returns the Incident field value
func (o *InlineObject88) GetIncident() ApiMonitoringIncidentsIdIncident {
	if o == nil  {
		var ret ApiMonitoringIncidentsIdIncident
		return ret
	}

	return o.Incident
}

// GetIncidentOk returns a tuple with the Incident field value
// and a boolean to check if the value has been set.
func (o *InlineObject88) GetIncidentOk() (*ApiMonitoringIncidentsIdIncident, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Incident, true
}

// SetIncident sets field value
func (o *InlineObject88) SetIncident(v ApiMonitoringIncidentsIdIncident) {
	o.Incident = v
}

func (o InlineObject88) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["incident"] = o.Incident
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject88 struct {
	value *InlineObject88
	isSet bool
}

func (v NullableInlineObject88) Get() *InlineObject88 {
	return v.value
}

func (v *NullableInlineObject88) Set(val *InlineObject88) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject88) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject88) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject88(val *InlineObject88) *NullableInlineObject88 {
	return &NullableInlineObject88{value: val, isSet: true}
}

func (v NullableInlineObject88) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject88) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


