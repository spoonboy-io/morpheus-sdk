/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiStorageBucketsStorageBucket struct for ApiStorageBucketsStorageBucket
type ApiStorageBucketsStorageBucket struct {
	// A unique name scoped to your account for the storage bucket
	Name string `json:"name"`
	// The type of storage bucket
	ProviderType string `json:"providerType"`
	// Default Backup Target
	DefaultBackupTarget *bool `json:"defaultBackupTarget,omitempty"`
	// Archive Snapshots
	CopyToStore *bool `json:"copyToStore,omitempty"`
	// Default Deployment Target
	DefaultDeploymentTarget *bool `json:"defaultDeploymentTarget,omitempty"`
	// Default Virtual Image Store
	DefaultVirtualImageTarget *bool `json:"defaultVirtualImageTarget,omitempty"`
	// Cleanup mode. `backup` - Move old files to a backup provider. `delete` - Delete old files. `none` - Keep all files.
	RetentionPolicyType *string `json:"retentionPolicyType,omitempty"`
	// The number of days old a file must be before it is deleted.
	RetentionPolicyDays *int64 `json:"retentionPolicyDays,omitempty"`
	// The backup Storage Bucket where old files are moved to.
	RetentionProvider *string `json:"retentionProvider,omitempty"`
	// The name of the bucket. Only applies to `Amazon`, `Azure`, `CIFS`, `NFSv3`, `Openstack Swift`, and `Rackspace CDN`.
	BucketName *string `json:"bucketName,omitempty"`
	// Create the bucket if it does not exist. Only applies to `Amazon`, `Azure`, `Openstack Swift`, and `Rackspace CDN`.
	CreateBucket *bool `json:"createBucket,omitempty"`
	Config OneOfobjectobjectobjectobjectobjectobjectobject `json:"config"`
}

// NewApiStorageBucketsStorageBucket instantiates a new ApiStorageBucketsStorageBucket object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiStorageBucketsStorageBucket(name string, providerType string, config OneOfobjectobjectobjectobjectobjectobjectobject, ) *ApiStorageBucketsStorageBucket {
	this := ApiStorageBucketsStorageBucket{}
	this.Name = name
	this.ProviderType = providerType
	var defaultBackupTarget bool = false
	this.DefaultBackupTarget = &defaultBackupTarget
	var defaultDeploymentTarget bool = false
	this.DefaultDeploymentTarget = &defaultDeploymentTarget
	var defaultVirtualImageTarget bool = false
	this.DefaultVirtualImageTarget = &defaultVirtualImageTarget
	var retentionPolicyType string = "none"
	this.RetentionPolicyType = &retentionPolicyType
	var createBucket bool = false
	this.CreateBucket = &createBucket
	this.Config = config
	return &this
}

// NewApiStorageBucketsStorageBucketWithDefaults instantiates a new ApiStorageBucketsStorageBucket object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiStorageBucketsStorageBucketWithDefaults() *ApiStorageBucketsStorageBucket {
	this := ApiStorageBucketsStorageBucket{}
	var defaultBackupTarget bool = false
	this.DefaultBackupTarget = &defaultBackupTarget
	var defaultDeploymentTarget bool = false
	this.DefaultDeploymentTarget = &defaultDeploymentTarget
	var defaultVirtualImageTarget bool = false
	this.DefaultVirtualImageTarget = &defaultVirtualImageTarget
	var retentionPolicyType string = "none"
	this.RetentionPolicyType = &retentionPolicyType
	var createBucket bool = false
	this.CreateBucket = &createBucket
	return &this
}

// GetName returns the Name field value
func (o *ApiStorageBucketsStorageBucket) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApiStorageBucketsStorageBucket) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApiStorageBucketsStorageBucket) SetName(v string) {
	o.Name = v
}

// GetProviderType returns the ProviderType field value
func (o *ApiStorageBucketsStorageBucket) GetProviderType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ProviderType
}

// GetProviderTypeOk returns a tuple with the ProviderType field value
// and a boolean to check if the value has been set.
func (o *ApiStorageBucketsStorageBucket) GetProviderTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProviderType, true
}

// SetProviderType sets field value
func (o *ApiStorageBucketsStorageBucket) SetProviderType(v string) {
	o.ProviderType = v
}

// GetDefaultBackupTarget returns the DefaultBackupTarget field value if set, zero value otherwise.
func (o *ApiStorageBucketsStorageBucket) GetDefaultBackupTarget() bool {
	if o == nil || o.DefaultBackupTarget == nil {
		var ret bool
		return ret
	}
	return *o.DefaultBackupTarget
}

// GetDefaultBackupTargetOk returns a tuple with the DefaultBackupTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStorageBucketsStorageBucket) GetDefaultBackupTargetOk() (*bool, bool) {
	if o == nil || o.DefaultBackupTarget == nil {
		return nil, false
	}
	return o.DefaultBackupTarget, true
}

// HasDefaultBackupTarget returns a boolean if a field has been set.
func (o *ApiStorageBucketsStorageBucket) HasDefaultBackupTarget() bool {
	if o != nil && o.DefaultBackupTarget != nil {
		return true
	}

	return false
}

// SetDefaultBackupTarget gets a reference to the given bool and assigns it to the DefaultBackupTarget field.
func (o *ApiStorageBucketsStorageBucket) SetDefaultBackupTarget(v bool) {
	o.DefaultBackupTarget = &v
}

// GetCopyToStore returns the CopyToStore field value if set, zero value otherwise.
func (o *ApiStorageBucketsStorageBucket) GetCopyToStore() bool {
	if o == nil || o.CopyToStore == nil {
		var ret bool
		return ret
	}
	return *o.CopyToStore
}

// GetCopyToStoreOk returns a tuple with the CopyToStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStorageBucketsStorageBucket) GetCopyToStoreOk() (*bool, bool) {
	if o == nil || o.CopyToStore == nil {
		return nil, false
	}
	return o.CopyToStore, true
}

// HasCopyToStore returns a boolean if a field has been set.
func (o *ApiStorageBucketsStorageBucket) HasCopyToStore() bool {
	if o != nil && o.CopyToStore != nil {
		return true
	}

	return false
}

// SetCopyToStore gets a reference to the given bool and assigns it to the CopyToStore field.
func (o *ApiStorageBucketsStorageBucket) SetCopyToStore(v bool) {
	o.CopyToStore = &v
}

// GetDefaultDeploymentTarget returns the DefaultDeploymentTarget field value if set, zero value otherwise.
func (o *ApiStorageBucketsStorageBucket) GetDefaultDeploymentTarget() bool {
	if o == nil || o.DefaultDeploymentTarget == nil {
		var ret bool
		return ret
	}
	return *o.DefaultDeploymentTarget
}

// GetDefaultDeploymentTargetOk returns a tuple with the DefaultDeploymentTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStorageBucketsStorageBucket) GetDefaultDeploymentTargetOk() (*bool, bool) {
	if o == nil || o.DefaultDeploymentTarget == nil {
		return nil, false
	}
	return o.DefaultDeploymentTarget, true
}

// HasDefaultDeploymentTarget returns a boolean if a field has been set.
func (o *ApiStorageBucketsStorageBucket) HasDefaultDeploymentTarget() bool {
	if o != nil && o.DefaultDeploymentTarget != nil {
		return true
	}

	return false
}

// SetDefaultDeploymentTarget gets a reference to the given bool and assigns it to the DefaultDeploymentTarget field.
func (o *ApiStorageBucketsStorageBucket) SetDefaultDeploymentTarget(v bool) {
	o.DefaultDeploymentTarget = &v
}

// GetDefaultVirtualImageTarget returns the DefaultVirtualImageTarget field value if set, zero value otherwise.
func (o *ApiStorageBucketsStorageBucket) GetDefaultVirtualImageTarget() bool {
	if o == nil || o.DefaultVirtualImageTarget == nil {
		var ret bool
		return ret
	}
	return *o.DefaultVirtualImageTarget
}

// GetDefaultVirtualImageTargetOk returns a tuple with the DefaultVirtualImageTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStorageBucketsStorageBucket) GetDefaultVirtualImageTargetOk() (*bool, bool) {
	if o == nil || o.DefaultVirtualImageTarget == nil {
		return nil, false
	}
	return o.DefaultVirtualImageTarget, true
}

// HasDefaultVirtualImageTarget returns a boolean if a field has been set.
func (o *ApiStorageBucketsStorageBucket) HasDefaultVirtualImageTarget() bool {
	if o != nil && o.DefaultVirtualImageTarget != nil {
		return true
	}

	return false
}

// SetDefaultVirtualImageTarget gets a reference to the given bool and assigns it to the DefaultVirtualImageTarget field.
func (o *ApiStorageBucketsStorageBucket) SetDefaultVirtualImageTarget(v bool) {
	o.DefaultVirtualImageTarget = &v
}

// GetRetentionPolicyType returns the RetentionPolicyType field value if set, zero value otherwise.
func (o *ApiStorageBucketsStorageBucket) GetRetentionPolicyType() string {
	if o == nil || o.RetentionPolicyType == nil {
		var ret string
		return ret
	}
	return *o.RetentionPolicyType
}

// GetRetentionPolicyTypeOk returns a tuple with the RetentionPolicyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStorageBucketsStorageBucket) GetRetentionPolicyTypeOk() (*string, bool) {
	if o == nil || o.RetentionPolicyType == nil {
		return nil, false
	}
	return o.RetentionPolicyType, true
}

// HasRetentionPolicyType returns a boolean if a field has been set.
func (o *ApiStorageBucketsStorageBucket) HasRetentionPolicyType() bool {
	if o != nil && o.RetentionPolicyType != nil {
		return true
	}

	return false
}

// SetRetentionPolicyType gets a reference to the given string and assigns it to the RetentionPolicyType field.
func (o *ApiStorageBucketsStorageBucket) SetRetentionPolicyType(v string) {
	o.RetentionPolicyType = &v
}

// GetRetentionPolicyDays returns the RetentionPolicyDays field value if set, zero value otherwise.
func (o *ApiStorageBucketsStorageBucket) GetRetentionPolicyDays() int64 {
	if o == nil || o.RetentionPolicyDays == nil {
		var ret int64
		return ret
	}
	return *o.RetentionPolicyDays
}

// GetRetentionPolicyDaysOk returns a tuple with the RetentionPolicyDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStorageBucketsStorageBucket) GetRetentionPolicyDaysOk() (*int64, bool) {
	if o == nil || o.RetentionPolicyDays == nil {
		return nil, false
	}
	return o.RetentionPolicyDays, true
}

// HasRetentionPolicyDays returns a boolean if a field has been set.
func (o *ApiStorageBucketsStorageBucket) HasRetentionPolicyDays() bool {
	if o != nil && o.RetentionPolicyDays != nil {
		return true
	}

	return false
}

// SetRetentionPolicyDays gets a reference to the given int64 and assigns it to the RetentionPolicyDays field.
func (o *ApiStorageBucketsStorageBucket) SetRetentionPolicyDays(v int64) {
	o.RetentionPolicyDays = &v
}

// GetRetentionProvider returns the RetentionProvider field value if set, zero value otherwise.
func (o *ApiStorageBucketsStorageBucket) GetRetentionProvider() string {
	if o == nil || o.RetentionProvider == nil {
		var ret string
		return ret
	}
	return *o.RetentionProvider
}

// GetRetentionProviderOk returns a tuple with the RetentionProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStorageBucketsStorageBucket) GetRetentionProviderOk() (*string, bool) {
	if o == nil || o.RetentionProvider == nil {
		return nil, false
	}
	return o.RetentionProvider, true
}

// HasRetentionProvider returns a boolean if a field has been set.
func (o *ApiStorageBucketsStorageBucket) HasRetentionProvider() bool {
	if o != nil && o.RetentionProvider != nil {
		return true
	}

	return false
}

// SetRetentionProvider gets a reference to the given string and assigns it to the RetentionProvider field.
func (o *ApiStorageBucketsStorageBucket) SetRetentionProvider(v string) {
	o.RetentionProvider = &v
}

// GetBucketName returns the BucketName field value if set, zero value otherwise.
func (o *ApiStorageBucketsStorageBucket) GetBucketName() string {
	if o == nil || o.BucketName == nil {
		var ret string
		return ret
	}
	return *o.BucketName
}

// GetBucketNameOk returns a tuple with the BucketName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStorageBucketsStorageBucket) GetBucketNameOk() (*string, bool) {
	if o == nil || o.BucketName == nil {
		return nil, false
	}
	return o.BucketName, true
}

// HasBucketName returns a boolean if a field has been set.
func (o *ApiStorageBucketsStorageBucket) HasBucketName() bool {
	if o != nil && o.BucketName != nil {
		return true
	}

	return false
}

// SetBucketName gets a reference to the given string and assigns it to the BucketName field.
func (o *ApiStorageBucketsStorageBucket) SetBucketName(v string) {
	o.BucketName = &v
}

// GetCreateBucket returns the CreateBucket field value if set, zero value otherwise.
func (o *ApiStorageBucketsStorageBucket) GetCreateBucket() bool {
	if o == nil || o.CreateBucket == nil {
		var ret bool
		return ret
	}
	return *o.CreateBucket
}

// GetCreateBucketOk returns a tuple with the CreateBucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiStorageBucketsStorageBucket) GetCreateBucketOk() (*bool, bool) {
	if o == nil || o.CreateBucket == nil {
		return nil, false
	}
	return o.CreateBucket, true
}

// HasCreateBucket returns a boolean if a field has been set.
func (o *ApiStorageBucketsStorageBucket) HasCreateBucket() bool {
	if o != nil && o.CreateBucket != nil {
		return true
	}

	return false
}

// SetCreateBucket gets a reference to the given bool and assigns it to the CreateBucket field.
func (o *ApiStorageBucketsStorageBucket) SetCreateBucket(v bool) {
	o.CreateBucket = &v
}

// GetConfig returns the Config field value
func (o *ApiStorageBucketsStorageBucket) GetConfig() OneOfobjectobjectobjectobjectobjectobjectobject {
	if o == nil  {
		var ret OneOfobjectobjectobjectobjectobjectobjectobject
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *ApiStorageBucketsStorageBucket) GetConfigOk() (*OneOfobjectobjectobjectobjectobjectobjectobject, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *ApiStorageBucketsStorageBucket) SetConfig(v OneOfobjectobjectobjectobjectobjectobjectobject) {
	o.Config = v
}

func (o ApiStorageBucketsStorageBucket) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["providerType"] = o.ProviderType
	}
	if o.DefaultBackupTarget != nil {
		toSerialize["defaultBackupTarget"] = o.DefaultBackupTarget
	}
	if o.CopyToStore != nil {
		toSerialize["copyToStore"] = o.CopyToStore
	}
	if o.DefaultDeploymentTarget != nil {
		toSerialize["defaultDeploymentTarget"] = o.DefaultDeploymentTarget
	}
	if o.DefaultVirtualImageTarget != nil {
		toSerialize["defaultVirtualImageTarget"] = o.DefaultVirtualImageTarget
	}
	if o.RetentionPolicyType != nil {
		toSerialize["retentionPolicyType"] = o.RetentionPolicyType
	}
	if o.RetentionPolicyDays != nil {
		toSerialize["retentionPolicyDays"] = o.RetentionPolicyDays
	}
	if o.RetentionProvider != nil {
		toSerialize["retentionProvider"] = o.RetentionProvider
	}
	if o.BucketName != nil {
		toSerialize["bucketName"] = o.BucketName
	}
	if o.CreateBucket != nil {
		toSerialize["createBucket"] = o.CreateBucket
	}
	if true {
		toSerialize["config"] = o.Config
	}
	return json.Marshal(toSerialize)
}

type NullableApiStorageBucketsStorageBucket struct {
	value *ApiStorageBucketsStorageBucket
	isSet bool
}

func (v NullableApiStorageBucketsStorageBucket) Get() *ApiStorageBucketsStorageBucket {
	return v.value
}

func (v *NullableApiStorageBucketsStorageBucket) Set(val *ApiStorageBucketsStorageBucket) {
	v.value = val
	v.isSet = true
}

func (v NullableApiStorageBucketsStorageBucket) IsSet() bool {
	return v.isSet
}

func (v *NullableApiStorageBucketsStorageBucket) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiStorageBucketsStorageBucket(val *ApiStorageBucketsStorageBucket) *NullableApiStorageBucketsStorageBucket {
	return &NullableApiStorageBucketsStorageBucket{value: val, isSet: true}
}

func (v NullableApiStorageBucketsStorageBucket) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiStorageBucketsStorageBucket) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


