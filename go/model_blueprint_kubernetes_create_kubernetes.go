/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BlueprintKubernetesCreateKubernetes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlueprintKubernetesCreateKubernetes{}

// BlueprintKubernetesCreateKubernetes struct for BlueprintKubernetesCreateKubernetes
type BlueprintKubernetesCreateKubernetes struct {
	// Configuration Type
	ConfigType string `json:"configType"`
	// Kubernetes Spec in YAML
	Yaml *string `json:"yaml,omitempty"`
	Git *BlueprintKubernetesCreateKubernetesGit `json:"git,omitempty"`
}

// NewBlueprintKubernetesCreateKubernetes instantiates a new BlueprintKubernetesCreateKubernetes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlueprintKubernetesCreateKubernetes(configType string) *BlueprintKubernetesCreateKubernetes {
	this := BlueprintKubernetesCreateKubernetes{}
	this.ConfigType = configType
	return &this
}

// NewBlueprintKubernetesCreateKubernetesWithDefaults instantiates a new BlueprintKubernetesCreateKubernetes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlueprintKubernetesCreateKubernetesWithDefaults() *BlueprintKubernetesCreateKubernetes {
	this := BlueprintKubernetesCreateKubernetes{}
	return &this
}

// GetConfigType returns the ConfigType field value
func (o *BlueprintKubernetesCreateKubernetes) GetConfigType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConfigType
}

// GetConfigTypeOk returns a tuple with the ConfigType field value
// and a boolean to check if the value has been set.
func (o *BlueprintKubernetesCreateKubernetes) GetConfigTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConfigType, true
}

// SetConfigType sets field value
func (o *BlueprintKubernetesCreateKubernetes) SetConfigType(v string) {
	o.ConfigType = v
}

// GetYaml returns the Yaml field value if set, zero value otherwise.
func (o *BlueprintKubernetesCreateKubernetes) GetYaml() string {
	if o == nil || IsNil(o.Yaml) {
		var ret string
		return ret
	}
	return *o.Yaml
}

// GetYamlOk returns a tuple with the Yaml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintKubernetesCreateKubernetes) GetYamlOk() (*string, bool) {
	if o == nil || IsNil(o.Yaml) {
		return nil, false
	}
	return o.Yaml, true
}

// HasYaml returns a boolean if a field has been set.
func (o *BlueprintKubernetesCreateKubernetes) HasYaml() bool {
	if o != nil && !IsNil(o.Yaml) {
		return true
	}

	return false
}

// SetYaml gets a reference to the given string and assigns it to the Yaml field.
func (o *BlueprintKubernetesCreateKubernetes) SetYaml(v string) {
	o.Yaml = &v
}

// GetGit returns the Git field value if set, zero value otherwise.
func (o *BlueprintKubernetesCreateKubernetes) GetGit() BlueprintKubernetesCreateKubernetesGit {
	if o == nil || IsNil(o.Git) {
		var ret BlueprintKubernetesCreateKubernetesGit
		return ret
	}
	return *o.Git
}

// GetGitOk returns a tuple with the Git field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintKubernetesCreateKubernetes) GetGitOk() (*BlueprintKubernetesCreateKubernetesGit, bool) {
	if o == nil || IsNil(o.Git) {
		return nil, false
	}
	return o.Git, true
}

// HasGit returns a boolean if a field has been set.
func (o *BlueprintKubernetesCreateKubernetes) HasGit() bool {
	if o != nil && !IsNil(o.Git) {
		return true
	}

	return false
}

// SetGit gets a reference to the given BlueprintKubernetesCreateKubernetesGit and assigns it to the Git field.
func (o *BlueprintKubernetesCreateKubernetes) SetGit(v BlueprintKubernetesCreateKubernetesGit) {
	o.Git = &v
}

func (o BlueprintKubernetesCreateKubernetes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlueprintKubernetesCreateKubernetes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["configType"] = o.ConfigType
	if !IsNil(o.Yaml) {
		toSerialize["yaml"] = o.Yaml
	}
	if !IsNil(o.Git) {
		toSerialize["git"] = o.Git
	}
	return toSerialize, nil
}

type NullableBlueprintKubernetesCreateKubernetes struct {
	value *BlueprintKubernetesCreateKubernetes
	isSet bool
}

func (v NullableBlueprintKubernetesCreateKubernetes) Get() *BlueprintKubernetesCreateKubernetes {
	return v.value
}

func (v *NullableBlueprintKubernetesCreateKubernetes) Set(val *BlueprintKubernetesCreateKubernetes) {
	v.value = val
	v.isSet = true
}

func (v NullableBlueprintKubernetesCreateKubernetes) IsSet() bool {
	return v.isSet
}

func (v *NullableBlueprintKubernetesCreateKubernetes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlueprintKubernetesCreateKubernetes(val *BlueprintKubernetesCreateKubernetes) *NullableBlueprintKubernetesCreateKubernetes {
	return &NullableBlueprintKubernetesCreateKubernetes{value: val, isSet: true}
}

func (v NullableBlueprintKubernetesCreateKubernetes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlueprintKubernetesCreateKubernetes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


