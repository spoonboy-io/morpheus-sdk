/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OptionTypeListCreateCredential Map containing Credential ID or the default `{\"type\": \"local\"}` which means use the values set in the local option list serviceUsername and servicePassword instead of associating a credential.
type OptionTypeListCreateCredential struct {
	Type *string `json:"type,omitempty"`
	Id *int64 `json:"id,omitempty"`
}

// NewOptionTypeListCreateCredential instantiates a new OptionTypeListCreateCredential object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptionTypeListCreateCredential() *OptionTypeListCreateCredential {
	this := OptionTypeListCreateCredential{}
	return &this
}

// NewOptionTypeListCreateCredentialWithDefaults instantiates a new OptionTypeListCreateCredential object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptionTypeListCreateCredentialWithDefaults() *OptionTypeListCreateCredential {
	this := OptionTypeListCreateCredential{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OptionTypeListCreateCredential) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeListCreateCredential) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OptionTypeListCreateCredential) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *OptionTypeListCreateCredential) SetType(v string) {
	o.Type = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OptionTypeListCreateCredential) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionTypeListCreateCredential) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OptionTypeListCreateCredential) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *OptionTypeListCreateCredential) SetId(v int64) {
	o.Id = &v
}

func (o OptionTypeListCreateCredential) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableOptionTypeListCreateCredential struct {
	value *OptionTypeListCreateCredential
	isSet bool
}

func (v NullableOptionTypeListCreateCredential) Get() *OptionTypeListCreateCredential {
	return v.value
}

func (v *NullableOptionTypeListCreateCredential) Set(val *OptionTypeListCreateCredential) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionTypeListCreateCredential) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionTypeListCreateCredential) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionTypeListCreateCredential(val *OptionTypeListCreateCredential) *NullableOptionTypeListCreateCredential {
	return &NullableOptionTypeListCreateCredential{value: val, isSet: true}
}

func (v NullableOptionTypeListCreateCredential) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionTypeListCreateCredential) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


