/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RolePermissionTaskAll struct for RolePermissionTaskAll
type RolePermissionTaskAll struct {
	// Apply to all tasks
	AllTasks bool `json:"allTasks"`
	// The new access level.
	Access string `json:"access"`
}

// NewRolePermissionTaskAll instantiates a new RolePermissionTaskAll object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRolePermissionTaskAll(allTasks bool, access string, ) *RolePermissionTaskAll {
	this := RolePermissionTaskAll{}
	this.AllTasks = allTasks
	this.Access = access
	return &this
}

// NewRolePermissionTaskAllWithDefaults instantiates a new RolePermissionTaskAll object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolePermissionTaskAllWithDefaults() *RolePermissionTaskAll {
	this := RolePermissionTaskAll{}
	return &this
}

// GetAllTasks returns the AllTasks field value
func (o *RolePermissionTaskAll) GetAllTasks() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.AllTasks
}

// GetAllTasksOk returns a tuple with the AllTasks field value
// and a boolean to check if the value has been set.
func (o *RolePermissionTaskAll) GetAllTasksOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AllTasks, true
}

// SetAllTasks sets field value
func (o *RolePermissionTaskAll) SetAllTasks(v bool) {
	o.AllTasks = v
}

// GetAccess returns the Access field value
func (o *RolePermissionTaskAll) GetAccess() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Access
}

// GetAccessOk returns a tuple with the Access field value
// and a boolean to check if the value has been set.
func (o *RolePermissionTaskAll) GetAccessOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Access, true
}

// SetAccess sets field value
func (o *RolePermissionTaskAll) SetAccess(v string) {
	o.Access = v
}

func (o RolePermissionTaskAll) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["allTasks"] = o.AllTasks
	}
	if true {
		toSerialize["access"] = o.Access
	}
	return json.Marshal(toSerialize)
}

type NullableRolePermissionTaskAll struct {
	value *RolePermissionTaskAll
	isSet bool
}

func (v NullableRolePermissionTaskAll) Get() *RolePermissionTaskAll {
	return v.value
}

func (v *NullableRolePermissionTaskAll) Set(val *RolePermissionTaskAll) {
	v.value = val
	v.isSet = true
}

func (v NullableRolePermissionTaskAll) IsSet() bool {
	return v.isSet
}

func (v *NullableRolePermissionTaskAll) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRolePermissionTaskAll(val *RolePermissionTaskAll) *NullableRolePermissionTaskAll {
	return &NullableRolePermissionTaskAll{value: val, isSet: true}
}

func (v NullableRolePermissionTaskAll) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRolePermissionTaskAll) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


