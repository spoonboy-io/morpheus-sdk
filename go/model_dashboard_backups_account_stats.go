/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DashboardBackupsAccountStats struct for DashboardBackupsAccountStats
type DashboardBackupsAccountStats struct {
	TotalSizeByDay *[]float32 `json:"totalSizeByDay,omitempty"`
	TotalSizeByDay7Days *[]float32 `json:"totalSizeByDay7Days,omitempty"`
	FormattedTotalSize *DashboardBackupsAccountStatsFormattedTotalSize `json:"formattedTotalSize,omitempty"`
	BackupCount *float32 `json:"backupCount,omitempty"`
	TotalSize *float32 `json:"totalSize,omitempty"`
	Success *float32 `json:"success,omitempty"`
	Failed *float32 `json:"failed,omitempty"`
	TotalCompleted *float32 `json:"totalCompleted,omitempty"`
	LastSevenDays *DashboardBackupsAccountStatsLastSevenDays `json:"lastSevenDays,omitempty"`
	AvgSize *float32 `json:"avgSize,omitempty"`
	FailedRate *float32 `json:"failedRate,omitempty"`
	SuccessRate *float32 `json:"successRate,omitempty"`
	NextFireTotal *float32 `json:"nextFireTotal,omitempty"`
	BackupDayCount *[]float32 `json:"backupDayCount,omitempty"`
	BackupDayCountTotal *float32 `json:"backupDayCountTotal,omitempty"`
}

// NewDashboardBackupsAccountStats instantiates a new DashboardBackupsAccountStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardBackupsAccountStats() *DashboardBackupsAccountStats {
	this := DashboardBackupsAccountStats{}
	return &this
}

// NewDashboardBackupsAccountStatsWithDefaults instantiates a new DashboardBackupsAccountStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardBackupsAccountStatsWithDefaults() *DashboardBackupsAccountStats {
	this := DashboardBackupsAccountStats{}
	return &this
}

// GetTotalSizeByDay returns the TotalSizeByDay field value if set, zero value otherwise.
func (o *DashboardBackupsAccountStats) GetTotalSizeByDay() []float32 {
	if o == nil || o.TotalSizeByDay == nil {
		var ret []float32
		return ret
	}
	return *o.TotalSizeByDay
}

// GetTotalSizeByDayOk returns a tuple with the TotalSizeByDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardBackupsAccountStats) GetTotalSizeByDayOk() (*[]float32, bool) {
	if o == nil || o.TotalSizeByDay == nil {
		return nil, false
	}
	return o.TotalSizeByDay, true
}

// HasTotalSizeByDay returns a boolean if a field has been set.
func (o *DashboardBackupsAccountStats) HasTotalSizeByDay() bool {
	if o != nil && o.TotalSizeByDay != nil {
		return true
	}

	return false
}

// SetTotalSizeByDay gets a reference to the given []float32 and assigns it to the TotalSizeByDay field.
func (o *DashboardBackupsAccountStats) SetTotalSizeByDay(v []float32) {
	o.TotalSizeByDay = &v
}

// GetTotalSizeByDay7Days returns the TotalSizeByDay7Days field value if set, zero value otherwise.
func (o *DashboardBackupsAccountStats) GetTotalSizeByDay7Days() []float32 {
	if o == nil || o.TotalSizeByDay7Days == nil {
		var ret []float32
		return ret
	}
	return *o.TotalSizeByDay7Days
}

// GetTotalSizeByDay7DaysOk returns a tuple with the TotalSizeByDay7Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardBackupsAccountStats) GetTotalSizeByDay7DaysOk() (*[]float32, bool) {
	if o == nil || o.TotalSizeByDay7Days == nil {
		return nil, false
	}
	return o.TotalSizeByDay7Days, true
}

// HasTotalSizeByDay7Days returns a boolean if a field has been set.
func (o *DashboardBackupsAccountStats) HasTotalSizeByDay7Days() bool {
	if o != nil && o.TotalSizeByDay7Days != nil {
		return true
	}

	return false
}

// SetTotalSizeByDay7Days gets a reference to the given []float32 and assigns it to the TotalSizeByDay7Days field.
func (o *DashboardBackupsAccountStats) SetTotalSizeByDay7Days(v []float32) {
	o.TotalSizeByDay7Days = &v
}

// GetFormattedTotalSize returns the FormattedTotalSize field value if set, zero value otherwise.
func (o *DashboardBackupsAccountStats) GetFormattedTotalSize() DashboardBackupsAccountStatsFormattedTotalSize {
	if o == nil || o.FormattedTotalSize == nil {
		var ret DashboardBackupsAccountStatsFormattedTotalSize
		return ret
	}
	return *o.FormattedTotalSize
}

// GetFormattedTotalSizeOk returns a tuple with the FormattedTotalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardBackupsAccountStats) GetFormattedTotalSizeOk() (*DashboardBackupsAccountStatsFormattedTotalSize, bool) {
	if o == nil || o.FormattedTotalSize == nil {
		return nil, false
	}
	return o.FormattedTotalSize, true
}

// HasFormattedTotalSize returns a boolean if a field has been set.
func (o *DashboardBackupsAccountStats) HasFormattedTotalSize() bool {
	if o != nil && o.FormattedTotalSize != nil {
		return true
	}

	return false
}

// SetFormattedTotalSize gets a reference to the given DashboardBackupsAccountStatsFormattedTotalSize and assigns it to the FormattedTotalSize field.
func (o *DashboardBackupsAccountStats) SetFormattedTotalSize(v DashboardBackupsAccountStatsFormattedTotalSize) {
	o.FormattedTotalSize = &v
}

// GetBackupCount returns the BackupCount field value if set, zero value otherwise.
func (o *DashboardBackupsAccountStats) GetBackupCount() float32 {
	if o == nil || o.BackupCount == nil {
		var ret float32
		return ret
	}
	return *o.BackupCount
}

// GetBackupCountOk returns a tuple with the BackupCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardBackupsAccountStats) GetBackupCountOk() (*float32, bool) {
	if o == nil || o.BackupCount == nil {
		return nil, false
	}
	return o.BackupCount, true
}

// HasBackupCount returns a boolean if a field has been set.
func (o *DashboardBackupsAccountStats) HasBackupCount() bool {
	if o != nil && o.BackupCount != nil {
		return true
	}

	return false
}

// SetBackupCount gets a reference to the given float32 and assigns it to the BackupCount field.
func (o *DashboardBackupsAccountStats) SetBackupCount(v float32) {
	o.BackupCount = &v
}

// GetTotalSize returns the TotalSize field value if set, zero value otherwise.
func (o *DashboardBackupsAccountStats) GetTotalSize() float32 {
	if o == nil || o.TotalSize == nil {
		var ret float32
		return ret
	}
	return *o.TotalSize
}

// GetTotalSizeOk returns a tuple with the TotalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardBackupsAccountStats) GetTotalSizeOk() (*float32, bool) {
	if o == nil || o.TotalSize == nil {
		return nil, false
	}
	return o.TotalSize, true
}

// HasTotalSize returns a boolean if a field has been set.
func (o *DashboardBackupsAccountStats) HasTotalSize() bool {
	if o != nil && o.TotalSize != nil {
		return true
	}

	return false
}

// SetTotalSize gets a reference to the given float32 and assigns it to the TotalSize field.
func (o *DashboardBackupsAccountStats) SetTotalSize(v float32) {
	o.TotalSize = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *DashboardBackupsAccountStats) GetSuccess() float32 {
	if o == nil || o.Success == nil {
		var ret float32
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardBackupsAccountStats) GetSuccessOk() (*float32, bool) {
	if o == nil || o.Success == nil {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *DashboardBackupsAccountStats) HasSuccess() bool {
	if o != nil && o.Success != nil {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given float32 and assigns it to the Success field.
func (o *DashboardBackupsAccountStats) SetSuccess(v float32) {
	o.Success = &v
}

// GetFailed returns the Failed field value if set, zero value otherwise.
func (o *DashboardBackupsAccountStats) GetFailed() float32 {
	if o == nil || o.Failed == nil {
		var ret float32
		return ret
	}
	return *o.Failed
}

// GetFailedOk returns a tuple with the Failed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardBackupsAccountStats) GetFailedOk() (*float32, bool) {
	if o == nil || o.Failed == nil {
		return nil, false
	}
	return o.Failed, true
}

// HasFailed returns a boolean if a field has been set.
func (o *DashboardBackupsAccountStats) HasFailed() bool {
	if o != nil && o.Failed != nil {
		return true
	}

	return false
}

// SetFailed gets a reference to the given float32 and assigns it to the Failed field.
func (o *DashboardBackupsAccountStats) SetFailed(v float32) {
	o.Failed = &v
}

// GetTotalCompleted returns the TotalCompleted field value if set, zero value otherwise.
func (o *DashboardBackupsAccountStats) GetTotalCompleted() float32 {
	if o == nil || o.TotalCompleted == nil {
		var ret float32
		return ret
	}
	return *o.TotalCompleted
}

// GetTotalCompletedOk returns a tuple with the TotalCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardBackupsAccountStats) GetTotalCompletedOk() (*float32, bool) {
	if o == nil || o.TotalCompleted == nil {
		return nil, false
	}
	return o.TotalCompleted, true
}

// HasTotalCompleted returns a boolean if a field has been set.
func (o *DashboardBackupsAccountStats) HasTotalCompleted() bool {
	if o != nil && o.TotalCompleted != nil {
		return true
	}

	return false
}

// SetTotalCompleted gets a reference to the given float32 and assigns it to the TotalCompleted field.
func (o *DashboardBackupsAccountStats) SetTotalCompleted(v float32) {
	o.TotalCompleted = &v
}

// GetLastSevenDays returns the LastSevenDays field value if set, zero value otherwise.
func (o *DashboardBackupsAccountStats) GetLastSevenDays() DashboardBackupsAccountStatsLastSevenDays {
	if o == nil || o.LastSevenDays == nil {
		var ret DashboardBackupsAccountStatsLastSevenDays
		return ret
	}
	return *o.LastSevenDays
}

// GetLastSevenDaysOk returns a tuple with the LastSevenDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardBackupsAccountStats) GetLastSevenDaysOk() (*DashboardBackupsAccountStatsLastSevenDays, bool) {
	if o == nil || o.LastSevenDays == nil {
		return nil, false
	}
	return o.LastSevenDays, true
}

// HasLastSevenDays returns a boolean if a field has been set.
func (o *DashboardBackupsAccountStats) HasLastSevenDays() bool {
	if o != nil && o.LastSevenDays != nil {
		return true
	}

	return false
}

// SetLastSevenDays gets a reference to the given DashboardBackupsAccountStatsLastSevenDays and assigns it to the LastSevenDays field.
func (o *DashboardBackupsAccountStats) SetLastSevenDays(v DashboardBackupsAccountStatsLastSevenDays) {
	o.LastSevenDays = &v
}

// GetAvgSize returns the AvgSize field value if set, zero value otherwise.
func (o *DashboardBackupsAccountStats) GetAvgSize() float32 {
	if o == nil || o.AvgSize == nil {
		var ret float32
		return ret
	}
	return *o.AvgSize
}

// GetAvgSizeOk returns a tuple with the AvgSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardBackupsAccountStats) GetAvgSizeOk() (*float32, bool) {
	if o == nil || o.AvgSize == nil {
		return nil, false
	}
	return o.AvgSize, true
}

// HasAvgSize returns a boolean if a field has been set.
func (o *DashboardBackupsAccountStats) HasAvgSize() bool {
	if o != nil && o.AvgSize != nil {
		return true
	}

	return false
}

// SetAvgSize gets a reference to the given float32 and assigns it to the AvgSize field.
func (o *DashboardBackupsAccountStats) SetAvgSize(v float32) {
	o.AvgSize = &v
}

// GetFailedRate returns the FailedRate field value if set, zero value otherwise.
func (o *DashboardBackupsAccountStats) GetFailedRate() float32 {
	if o == nil || o.FailedRate == nil {
		var ret float32
		return ret
	}
	return *o.FailedRate
}

// GetFailedRateOk returns a tuple with the FailedRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardBackupsAccountStats) GetFailedRateOk() (*float32, bool) {
	if o == nil || o.FailedRate == nil {
		return nil, false
	}
	return o.FailedRate, true
}

// HasFailedRate returns a boolean if a field has been set.
func (o *DashboardBackupsAccountStats) HasFailedRate() bool {
	if o != nil && o.FailedRate != nil {
		return true
	}

	return false
}

// SetFailedRate gets a reference to the given float32 and assigns it to the FailedRate field.
func (o *DashboardBackupsAccountStats) SetFailedRate(v float32) {
	o.FailedRate = &v
}

// GetSuccessRate returns the SuccessRate field value if set, zero value otherwise.
func (o *DashboardBackupsAccountStats) GetSuccessRate() float32 {
	if o == nil || o.SuccessRate == nil {
		var ret float32
		return ret
	}
	return *o.SuccessRate
}

// GetSuccessRateOk returns a tuple with the SuccessRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardBackupsAccountStats) GetSuccessRateOk() (*float32, bool) {
	if o == nil || o.SuccessRate == nil {
		return nil, false
	}
	return o.SuccessRate, true
}

// HasSuccessRate returns a boolean if a field has been set.
func (o *DashboardBackupsAccountStats) HasSuccessRate() bool {
	if o != nil && o.SuccessRate != nil {
		return true
	}

	return false
}

// SetSuccessRate gets a reference to the given float32 and assigns it to the SuccessRate field.
func (o *DashboardBackupsAccountStats) SetSuccessRate(v float32) {
	o.SuccessRate = &v
}

// GetNextFireTotal returns the NextFireTotal field value if set, zero value otherwise.
func (o *DashboardBackupsAccountStats) GetNextFireTotal() float32 {
	if o == nil || o.NextFireTotal == nil {
		var ret float32
		return ret
	}
	return *o.NextFireTotal
}

// GetNextFireTotalOk returns a tuple with the NextFireTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardBackupsAccountStats) GetNextFireTotalOk() (*float32, bool) {
	if o == nil || o.NextFireTotal == nil {
		return nil, false
	}
	return o.NextFireTotal, true
}

// HasNextFireTotal returns a boolean if a field has been set.
func (o *DashboardBackupsAccountStats) HasNextFireTotal() bool {
	if o != nil && o.NextFireTotal != nil {
		return true
	}

	return false
}

// SetNextFireTotal gets a reference to the given float32 and assigns it to the NextFireTotal field.
func (o *DashboardBackupsAccountStats) SetNextFireTotal(v float32) {
	o.NextFireTotal = &v
}

// GetBackupDayCount returns the BackupDayCount field value if set, zero value otherwise.
func (o *DashboardBackupsAccountStats) GetBackupDayCount() []float32 {
	if o == nil || o.BackupDayCount == nil {
		var ret []float32
		return ret
	}
	return *o.BackupDayCount
}

// GetBackupDayCountOk returns a tuple with the BackupDayCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardBackupsAccountStats) GetBackupDayCountOk() (*[]float32, bool) {
	if o == nil || o.BackupDayCount == nil {
		return nil, false
	}
	return o.BackupDayCount, true
}

// HasBackupDayCount returns a boolean if a field has been set.
func (o *DashboardBackupsAccountStats) HasBackupDayCount() bool {
	if o != nil && o.BackupDayCount != nil {
		return true
	}

	return false
}

// SetBackupDayCount gets a reference to the given []float32 and assigns it to the BackupDayCount field.
func (o *DashboardBackupsAccountStats) SetBackupDayCount(v []float32) {
	o.BackupDayCount = &v
}

// GetBackupDayCountTotal returns the BackupDayCountTotal field value if set, zero value otherwise.
func (o *DashboardBackupsAccountStats) GetBackupDayCountTotal() float32 {
	if o == nil || o.BackupDayCountTotal == nil {
		var ret float32
		return ret
	}
	return *o.BackupDayCountTotal
}

// GetBackupDayCountTotalOk returns a tuple with the BackupDayCountTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardBackupsAccountStats) GetBackupDayCountTotalOk() (*float32, bool) {
	if o == nil || o.BackupDayCountTotal == nil {
		return nil, false
	}
	return o.BackupDayCountTotal, true
}

// HasBackupDayCountTotal returns a boolean if a field has been set.
func (o *DashboardBackupsAccountStats) HasBackupDayCountTotal() bool {
	if o != nil && o.BackupDayCountTotal != nil {
		return true
	}

	return false
}

// SetBackupDayCountTotal gets a reference to the given float32 and assigns it to the BackupDayCountTotal field.
func (o *DashboardBackupsAccountStats) SetBackupDayCountTotal(v float32) {
	o.BackupDayCountTotal = &v
}

func (o DashboardBackupsAccountStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TotalSizeByDay != nil {
		toSerialize["totalSizeByDay"] = o.TotalSizeByDay
	}
	if o.TotalSizeByDay7Days != nil {
		toSerialize["totalSizeByDay7Days"] = o.TotalSizeByDay7Days
	}
	if o.FormattedTotalSize != nil {
		toSerialize["formattedTotalSize"] = o.FormattedTotalSize
	}
	if o.BackupCount != nil {
		toSerialize["backupCount"] = o.BackupCount
	}
	if o.TotalSize != nil {
		toSerialize["totalSize"] = o.TotalSize
	}
	if o.Success != nil {
		toSerialize["success"] = o.Success
	}
	if o.Failed != nil {
		toSerialize["failed"] = o.Failed
	}
	if o.TotalCompleted != nil {
		toSerialize["totalCompleted"] = o.TotalCompleted
	}
	if o.LastSevenDays != nil {
		toSerialize["lastSevenDays"] = o.LastSevenDays
	}
	if o.AvgSize != nil {
		toSerialize["avgSize"] = o.AvgSize
	}
	if o.FailedRate != nil {
		toSerialize["failedRate"] = o.FailedRate
	}
	if o.SuccessRate != nil {
		toSerialize["successRate"] = o.SuccessRate
	}
	if o.NextFireTotal != nil {
		toSerialize["nextFireTotal"] = o.NextFireTotal
	}
	if o.BackupDayCount != nil {
		toSerialize["backupDayCount"] = o.BackupDayCount
	}
	if o.BackupDayCountTotal != nil {
		toSerialize["backupDayCountTotal"] = o.BackupDayCountTotal
	}
	return json.Marshal(toSerialize)
}

type NullableDashboardBackupsAccountStats struct {
	value *DashboardBackupsAccountStats
	isSet bool
}

func (v NullableDashboardBackupsAccountStats) Get() *DashboardBackupsAccountStats {
	return v.value
}

func (v *NullableDashboardBackupsAccountStats) Set(val *DashboardBackupsAccountStats) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardBackupsAccountStats) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardBackupsAccountStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardBackupsAccountStats(val *DashboardBackupsAccountStats) *NullableDashboardBackupsAccountStats {
	return &NullableDashboardBackupsAccountStats{value: val, isSet: true}
}

func (v NullableDashboardBackupsAccountStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardBackupsAccountStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


