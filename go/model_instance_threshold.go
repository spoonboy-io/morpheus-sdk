/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// InstanceThreshold struct for InstanceThreshold
type InstanceThreshold struct {
	Id *int64 `json:"id,omitempty"`
	AutoUp *bool `json:"autoUp,omitempty"`
	AutoDown *bool `json:"autoDown,omitempty"`
	MinCount *int64 `json:"minCount,omitempty"`
	MaxCount *int64 `json:"maxCount,omitempty"`
	ScaleIncrement *int64 `json:"scaleIncrement,omitempty"`
	CpuEnabled *bool `json:"cpuEnabled,omitempty"`
	MinCpu *int64 `json:"minCpu,omitempty"`
	MaxCpu *int64 `json:"maxCpu,omitempty"`
	MemoryEnabled *bool `json:"memoryEnabled,omitempty"`
	MinMemory *int64 `json:"minMemory,omitempty"`
	MaxMemory *int64 `json:"maxMemory,omitempty"`
	DiskEnabled *bool `json:"diskEnabled,omitempty"`
	MinDisk *int64 `json:"minDisk,omitempty"`
	MaxDisk *int64 `json:"maxDisk,omitempty"`
	MinNetwork NullableString `json:"minNetwork,omitempty"`
	NetworkEnabled *bool `json:"networkEnabled,omitempty"`
	IopsEnabled *bool `json:"iopsEnabled,omitempty"`
	MinIops NullableString `json:"minIops,omitempty"`
	MaxIops NullableString `json:"maxIops,omitempty"`
	Comment NullableString `json:"comment,omitempty"`
	ZoneId NullableInt64 `json:"zoneId,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
}

// NewInstanceThreshold instantiates a new InstanceThreshold object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceThreshold() *InstanceThreshold {
	this := InstanceThreshold{}
	return &this
}

// NewInstanceThresholdWithDefaults instantiates a new InstanceThreshold object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceThresholdWithDefaults() *InstanceThreshold {
	this := InstanceThreshold{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InstanceThreshold) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceThreshold) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InstanceThreshold) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *InstanceThreshold) SetId(v int64) {
	o.Id = &v
}

// GetAutoUp returns the AutoUp field value if set, zero value otherwise.
func (o *InstanceThreshold) GetAutoUp() bool {
	if o == nil || o.AutoUp == nil {
		var ret bool
		return ret
	}
	return *o.AutoUp
}

// GetAutoUpOk returns a tuple with the AutoUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceThreshold) GetAutoUpOk() (*bool, bool) {
	if o == nil || o.AutoUp == nil {
		return nil, false
	}
	return o.AutoUp, true
}

// HasAutoUp returns a boolean if a field has been set.
func (o *InstanceThreshold) HasAutoUp() bool {
	if o != nil && o.AutoUp != nil {
		return true
	}

	return false
}

// SetAutoUp gets a reference to the given bool and assigns it to the AutoUp field.
func (o *InstanceThreshold) SetAutoUp(v bool) {
	o.AutoUp = &v
}

// GetAutoDown returns the AutoDown field value if set, zero value otherwise.
func (o *InstanceThreshold) GetAutoDown() bool {
	if o == nil || o.AutoDown == nil {
		var ret bool
		return ret
	}
	return *o.AutoDown
}

// GetAutoDownOk returns a tuple with the AutoDown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceThreshold) GetAutoDownOk() (*bool, bool) {
	if o == nil || o.AutoDown == nil {
		return nil, false
	}
	return o.AutoDown, true
}

// HasAutoDown returns a boolean if a field has been set.
func (o *InstanceThreshold) HasAutoDown() bool {
	if o != nil && o.AutoDown != nil {
		return true
	}

	return false
}

// SetAutoDown gets a reference to the given bool and assigns it to the AutoDown field.
func (o *InstanceThreshold) SetAutoDown(v bool) {
	o.AutoDown = &v
}

// GetMinCount returns the MinCount field value if set, zero value otherwise.
func (o *InstanceThreshold) GetMinCount() int64 {
	if o == nil || o.MinCount == nil {
		var ret int64
		return ret
	}
	return *o.MinCount
}

// GetMinCountOk returns a tuple with the MinCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceThreshold) GetMinCountOk() (*int64, bool) {
	if o == nil || o.MinCount == nil {
		return nil, false
	}
	return o.MinCount, true
}

// HasMinCount returns a boolean if a field has been set.
func (o *InstanceThreshold) HasMinCount() bool {
	if o != nil && o.MinCount != nil {
		return true
	}

	return false
}

// SetMinCount gets a reference to the given int64 and assigns it to the MinCount field.
func (o *InstanceThreshold) SetMinCount(v int64) {
	o.MinCount = &v
}

// GetMaxCount returns the MaxCount field value if set, zero value otherwise.
func (o *InstanceThreshold) GetMaxCount() int64 {
	if o == nil || o.MaxCount == nil {
		var ret int64
		return ret
	}
	return *o.MaxCount
}

// GetMaxCountOk returns a tuple with the MaxCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceThreshold) GetMaxCountOk() (*int64, bool) {
	if o == nil || o.MaxCount == nil {
		return nil, false
	}
	return o.MaxCount, true
}

// HasMaxCount returns a boolean if a field has been set.
func (o *InstanceThreshold) HasMaxCount() bool {
	if o != nil && o.MaxCount != nil {
		return true
	}

	return false
}

// SetMaxCount gets a reference to the given int64 and assigns it to the MaxCount field.
func (o *InstanceThreshold) SetMaxCount(v int64) {
	o.MaxCount = &v
}

// GetScaleIncrement returns the ScaleIncrement field value if set, zero value otherwise.
func (o *InstanceThreshold) GetScaleIncrement() int64 {
	if o == nil || o.ScaleIncrement == nil {
		var ret int64
		return ret
	}
	return *o.ScaleIncrement
}

// GetScaleIncrementOk returns a tuple with the ScaleIncrement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceThreshold) GetScaleIncrementOk() (*int64, bool) {
	if o == nil || o.ScaleIncrement == nil {
		return nil, false
	}
	return o.ScaleIncrement, true
}

// HasScaleIncrement returns a boolean if a field has been set.
func (o *InstanceThreshold) HasScaleIncrement() bool {
	if o != nil && o.ScaleIncrement != nil {
		return true
	}

	return false
}

// SetScaleIncrement gets a reference to the given int64 and assigns it to the ScaleIncrement field.
func (o *InstanceThreshold) SetScaleIncrement(v int64) {
	o.ScaleIncrement = &v
}

// GetCpuEnabled returns the CpuEnabled field value if set, zero value otherwise.
func (o *InstanceThreshold) GetCpuEnabled() bool {
	if o == nil || o.CpuEnabled == nil {
		var ret bool
		return ret
	}
	return *o.CpuEnabled
}

// GetCpuEnabledOk returns a tuple with the CpuEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceThreshold) GetCpuEnabledOk() (*bool, bool) {
	if o == nil || o.CpuEnabled == nil {
		return nil, false
	}
	return o.CpuEnabled, true
}

// HasCpuEnabled returns a boolean if a field has been set.
func (o *InstanceThreshold) HasCpuEnabled() bool {
	if o != nil && o.CpuEnabled != nil {
		return true
	}

	return false
}

// SetCpuEnabled gets a reference to the given bool and assigns it to the CpuEnabled field.
func (o *InstanceThreshold) SetCpuEnabled(v bool) {
	o.CpuEnabled = &v
}

// GetMinCpu returns the MinCpu field value if set, zero value otherwise.
func (o *InstanceThreshold) GetMinCpu() int64 {
	if o == nil || o.MinCpu == nil {
		var ret int64
		return ret
	}
	return *o.MinCpu
}

// GetMinCpuOk returns a tuple with the MinCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceThreshold) GetMinCpuOk() (*int64, bool) {
	if o == nil || o.MinCpu == nil {
		return nil, false
	}
	return o.MinCpu, true
}

// HasMinCpu returns a boolean if a field has been set.
func (o *InstanceThreshold) HasMinCpu() bool {
	if o != nil && o.MinCpu != nil {
		return true
	}

	return false
}

// SetMinCpu gets a reference to the given int64 and assigns it to the MinCpu field.
func (o *InstanceThreshold) SetMinCpu(v int64) {
	o.MinCpu = &v
}

// GetMaxCpu returns the MaxCpu field value if set, zero value otherwise.
func (o *InstanceThreshold) GetMaxCpu() int64 {
	if o == nil || o.MaxCpu == nil {
		var ret int64
		return ret
	}
	return *o.MaxCpu
}

// GetMaxCpuOk returns a tuple with the MaxCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceThreshold) GetMaxCpuOk() (*int64, bool) {
	if o == nil || o.MaxCpu == nil {
		return nil, false
	}
	return o.MaxCpu, true
}

// HasMaxCpu returns a boolean if a field has been set.
func (o *InstanceThreshold) HasMaxCpu() bool {
	if o != nil && o.MaxCpu != nil {
		return true
	}

	return false
}

// SetMaxCpu gets a reference to the given int64 and assigns it to the MaxCpu field.
func (o *InstanceThreshold) SetMaxCpu(v int64) {
	o.MaxCpu = &v
}

// GetMemoryEnabled returns the MemoryEnabled field value if set, zero value otherwise.
func (o *InstanceThreshold) GetMemoryEnabled() bool {
	if o == nil || o.MemoryEnabled == nil {
		var ret bool
		return ret
	}
	return *o.MemoryEnabled
}

// GetMemoryEnabledOk returns a tuple with the MemoryEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceThreshold) GetMemoryEnabledOk() (*bool, bool) {
	if o == nil || o.MemoryEnabled == nil {
		return nil, false
	}
	return o.MemoryEnabled, true
}

// HasMemoryEnabled returns a boolean if a field has been set.
func (o *InstanceThreshold) HasMemoryEnabled() bool {
	if o != nil && o.MemoryEnabled != nil {
		return true
	}

	return false
}

// SetMemoryEnabled gets a reference to the given bool and assigns it to the MemoryEnabled field.
func (o *InstanceThreshold) SetMemoryEnabled(v bool) {
	o.MemoryEnabled = &v
}

// GetMinMemory returns the MinMemory field value if set, zero value otherwise.
func (o *InstanceThreshold) GetMinMemory() int64 {
	if o == nil || o.MinMemory == nil {
		var ret int64
		return ret
	}
	return *o.MinMemory
}

// GetMinMemoryOk returns a tuple with the MinMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceThreshold) GetMinMemoryOk() (*int64, bool) {
	if o == nil || o.MinMemory == nil {
		return nil, false
	}
	return o.MinMemory, true
}

// HasMinMemory returns a boolean if a field has been set.
func (o *InstanceThreshold) HasMinMemory() bool {
	if o != nil && o.MinMemory != nil {
		return true
	}

	return false
}

// SetMinMemory gets a reference to the given int64 and assigns it to the MinMemory field.
func (o *InstanceThreshold) SetMinMemory(v int64) {
	o.MinMemory = &v
}

// GetMaxMemory returns the MaxMemory field value if set, zero value otherwise.
func (o *InstanceThreshold) GetMaxMemory() int64 {
	if o == nil || o.MaxMemory == nil {
		var ret int64
		return ret
	}
	return *o.MaxMemory
}

// GetMaxMemoryOk returns a tuple with the MaxMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceThreshold) GetMaxMemoryOk() (*int64, bool) {
	if o == nil || o.MaxMemory == nil {
		return nil, false
	}
	return o.MaxMemory, true
}

// HasMaxMemory returns a boolean if a field has been set.
func (o *InstanceThreshold) HasMaxMemory() bool {
	if o != nil && o.MaxMemory != nil {
		return true
	}

	return false
}

// SetMaxMemory gets a reference to the given int64 and assigns it to the MaxMemory field.
func (o *InstanceThreshold) SetMaxMemory(v int64) {
	o.MaxMemory = &v
}

// GetDiskEnabled returns the DiskEnabled field value if set, zero value otherwise.
func (o *InstanceThreshold) GetDiskEnabled() bool {
	if o == nil || o.DiskEnabled == nil {
		var ret bool
		return ret
	}
	return *o.DiskEnabled
}

// GetDiskEnabledOk returns a tuple with the DiskEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceThreshold) GetDiskEnabledOk() (*bool, bool) {
	if o == nil || o.DiskEnabled == nil {
		return nil, false
	}
	return o.DiskEnabled, true
}

// HasDiskEnabled returns a boolean if a field has been set.
func (o *InstanceThreshold) HasDiskEnabled() bool {
	if o != nil && o.DiskEnabled != nil {
		return true
	}

	return false
}

// SetDiskEnabled gets a reference to the given bool and assigns it to the DiskEnabled field.
func (o *InstanceThreshold) SetDiskEnabled(v bool) {
	o.DiskEnabled = &v
}

// GetMinDisk returns the MinDisk field value if set, zero value otherwise.
func (o *InstanceThreshold) GetMinDisk() int64 {
	if o == nil || o.MinDisk == nil {
		var ret int64
		return ret
	}
	return *o.MinDisk
}

// GetMinDiskOk returns a tuple with the MinDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceThreshold) GetMinDiskOk() (*int64, bool) {
	if o == nil || o.MinDisk == nil {
		return nil, false
	}
	return o.MinDisk, true
}

// HasMinDisk returns a boolean if a field has been set.
func (o *InstanceThreshold) HasMinDisk() bool {
	if o != nil && o.MinDisk != nil {
		return true
	}

	return false
}

// SetMinDisk gets a reference to the given int64 and assigns it to the MinDisk field.
func (o *InstanceThreshold) SetMinDisk(v int64) {
	o.MinDisk = &v
}

// GetMaxDisk returns the MaxDisk field value if set, zero value otherwise.
func (o *InstanceThreshold) GetMaxDisk() int64 {
	if o == nil || o.MaxDisk == nil {
		var ret int64
		return ret
	}
	return *o.MaxDisk
}

// GetMaxDiskOk returns a tuple with the MaxDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceThreshold) GetMaxDiskOk() (*int64, bool) {
	if o == nil || o.MaxDisk == nil {
		return nil, false
	}
	return o.MaxDisk, true
}

// HasMaxDisk returns a boolean if a field has been set.
func (o *InstanceThreshold) HasMaxDisk() bool {
	if o != nil && o.MaxDisk != nil {
		return true
	}

	return false
}

// SetMaxDisk gets a reference to the given int64 and assigns it to the MaxDisk field.
func (o *InstanceThreshold) SetMaxDisk(v int64) {
	o.MaxDisk = &v
}

// GetMinNetwork returns the MinNetwork field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstanceThreshold) GetMinNetwork() string {
	if o == nil || o.MinNetwork.Get() == nil {
		var ret string
		return ret
	}
	return *o.MinNetwork.Get()
}

// GetMinNetworkOk returns a tuple with the MinNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceThreshold) GetMinNetworkOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinNetwork.Get(), o.MinNetwork.IsSet()
}

// HasMinNetwork returns a boolean if a field has been set.
func (o *InstanceThreshold) HasMinNetwork() bool {
	if o != nil && o.MinNetwork.IsSet() {
		return true
	}

	return false
}

// SetMinNetwork gets a reference to the given NullableString and assigns it to the MinNetwork field.
func (o *InstanceThreshold) SetMinNetwork(v string) {
	o.MinNetwork.Set(&v)
}
// SetMinNetworkNil sets the value for MinNetwork to be an explicit nil
func (o *InstanceThreshold) SetMinNetworkNil() {
	o.MinNetwork.Set(nil)
}

// UnsetMinNetwork ensures that no value is present for MinNetwork, not even an explicit nil
func (o *InstanceThreshold) UnsetMinNetwork() {
	o.MinNetwork.Unset()
}

// GetNetworkEnabled returns the NetworkEnabled field value if set, zero value otherwise.
func (o *InstanceThreshold) GetNetworkEnabled() bool {
	if o == nil || o.NetworkEnabled == nil {
		var ret bool
		return ret
	}
	return *o.NetworkEnabled
}

// GetNetworkEnabledOk returns a tuple with the NetworkEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceThreshold) GetNetworkEnabledOk() (*bool, bool) {
	if o == nil || o.NetworkEnabled == nil {
		return nil, false
	}
	return o.NetworkEnabled, true
}

// HasNetworkEnabled returns a boolean if a field has been set.
func (o *InstanceThreshold) HasNetworkEnabled() bool {
	if o != nil && o.NetworkEnabled != nil {
		return true
	}

	return false
}

// SetNetworkEnabled gets a reference to the given bool and assigns it to the NetworkEnabled field.
func (o *InstanceThreshold) SetNetworkEnabled(v bool) {
	o.NetworkEnabled = &v
}

// GetIopsEnabled returns the IopsEnabled field value if set, zero value otherwise.
func (o *InstanceThreshold) GetIopsEnabled() bool {
	if o == nil || o.IopsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IopsEnabled
}

// GetIopsEnabledOk returns a tuple with the IopsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceThreshold) GetIopsEnabledOk() (*bool, bool) {
	if o == nil || o.IopsEnabled == nil {
		return nil, false
	}
	return o.IopsEnabled, true
}

// HasIopsEnabled returns a boolean if a field has been set.
func (o *InstanceThreshold) HasIopsEnabled() bool {
	if o != nil && o.IopsEnabled != nil {
		return true
	}

	return false
}

// SetIopsEnabled gets a reference to the given bool and assigns it to the IopsEnabled field.
func (o *InstanceThreshold) SetIopsEnabled(v bool) {
	o.IopsEnabled = &v
}

// GetMinIops returns the MinIops field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstanceThreshold) GetMinIops() string {
	if o == nil || o.MinIops.Get() == nil {
		var ret string
		return ret
	}
	return *o.MinIops.Get()
}

// GetMinIopsOk returns a tuple with the MinIops field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceThreshold) GetMinIopsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinIops.Get(), o.MinIops.IsSet()
}

// HasMinIops returns a boolean if a field has been set.
func (o *InstanceThreshold) HasMinIops() bool {
	if o != nil && o.MinIops.IsSet() {
		return true
	}

	return false
}

// SetMinIops gets a reference to the given NullableString and assigns it to the MinIops field.
func (o *InstanceThreshold) SetMinIops(v string) {
	o.MinIops.Set(&v)
}
// SetMinIopsNil sets the value for MinIops to be an explicit nil
func (o *InstanceThreshold) SetMinIopsNil() {
	o.MinIops.Set(nil)
}

// UnsetMinIops ensures that no value is present for MinIops, not even an explicit nil
func (o *InstanceThreshold) UnsetMinIops() {
	o.MinIops.Unset()
}

// GetMaxIops returns the MaxIops field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstanceThreshold) GetMaxIops() string {
	if o == nil || o.MaxIops.Get() == nil {
		var ret string
		return ret
	}
	return *o.MaxIops.Get()
}

// GetMaxIopsOk returns a tuple with the MaxIops field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceThreshold) GetMaxIopsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxIops.Get(), o.MaxIops.IsSet()
}

// HasMaxIops returns a boolean if a field has been set.
func (o *InstanceThreshold) HasMaxIops() bool {
	if o != nil && o.MaxIops.IsSet() {
		return true
	}

	return false
}

// SetMaxIops gets a reference to the given NullableString and assigns it to the MaxIops field.
func (o *InstanceThreshold) SetMaxIops(v string) {
	o.MaxIops.Set(&v)
}
// SetMaxIopsNil sets the value for MaxIops to be an explicit nil
func (o *InstanceThreshold) SetMaxIopsNil() {
	o.MaxIops.Set(nil)
}

// UnsetMaxIops ensures that no value is present for MaxIops, not even an explicit nil
func (o *InstanceThreshold) UnsetMaxIops() {
	o.MaxIops.Unset()
}

// GetComment returns the Comment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstanceThreshold) GetComment() string {
	if o == nil || o.Comment.Get() == nil {
		var ret string
		return ret
	}
	return *o.Comment.Get()
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceThreshold) GetCommentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Comment.Get(), o.Comment.IsSet()
}

// HasComment returns a boolean if a field has been set.
func (o *InstanceThreshold) HasComment() bool {
	if o != nil && o.Comment.IsSet() {
		return true
	}

	return false
}

// SetComment gets a reference to the given NullableString and assigns it to the Comment field.
func (o *InstanceThreshold) SetComment(v string) {
	o.Comment.Set(&v)
}
// SetCommentNil sets the value for Comment to be an explicit nil
func (o *InstanceThreshold) SetCommentNil() {
	o.Comment.Set(nil)
}

// UnsetComment ensures that no value is present for Comment, not even an explicit nil
func (o *InstanceThreshold) UnsetComment() {
	o.Comment.Unset()
}

// GetZoneId returns the ZoneId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstanceThreshold) GetZoneId() int64 {
	if o == nil || o.ZoneId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ZoneId.Get()
}

// GetZoneIdOk returns a tuple with the ZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceThreshold) GetZoneIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ZoneId.Get(), o.ZoneId.IsSet()
}

// HasZoneId returns a boolean if a field has been set.
func (o *InstanceThreshold) HasZoneId() bool {
	if o != nil && o.ZoneId.IsSet() {
		return true
	}

	return false
}

// SetZoneId gets a reference to the given NullableInt64 and assigns it to the ZoneId field.
func (o *InstanceThreshold) SetZoneId(v int64) {
	o.ZoneId.Set(&v)
}
// SetZoneIdNil sets the value for ZoneId to be an explicit nil
func (o *InstanceThreshold) SetZoneIdNil() {
	o.ZoneId.Set(nil)
}

// UnsetZoneId ensures that no value is present for ZoneId, not even an explicit nil
func (o *InstanceThreshold) UnsetZoneId() {
	o.ZoneId.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *InstanceThreshold) GetDateCreated() time.Time {
	if o == nil || o.DateCreated == nil {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceThreshold) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *InstanceThreshold) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *InstanceThreshold) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *InstanceThreshold) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceThreshold) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *InstanceThreshold) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *InstanceThreshold) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

func (o InstanceThreshold) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.AutoUp != nil {
		toSerialize["autoUp"] = o.AutoUp
	}
	if o.AutoDown != nil {
		toSerialize["autoDown"] = o.AutoDown
	}
	if o.MinCount != nil {
		toSerialize["minCount"] = o.MinCount
	}
	if o.MaxCount != nil {
		toSerialize["maxCount"] = o.MaxCount
	}
	if o.ScaleIncrement != nil {
		toSerialize["scaleIncrement"] = o.ScaleIncrement
	}
	if o.CpuEnabled != nil {
		toSerialize["cpuEnabled"] = o.CpuEnabled
	}
	if o.MinCpu != nil {
		toSerialize["minCpu"] = o.MinCpu
	}
	if o.MaxCpu != nil {
		toSerialize["maxCpu"] = o.MaxCpu
	}
	if o.MemoryEnabled != nil {
		toSerialize["memoryEnabled"] = o.MemoryEnabled
	}
	if o.MinMemory != nil {
		toSerialize["minMemory"] = o.MinMemory
	}
	if o.MaxMemory != nil {
		toSerialize["maxMemory"] = o.MaxMemory
	}
	if o.DiskEnabled != nil {
		toSerialize["diskEnabled"] = o.DiskEnabled
	}
	if o.MinDisk != nil {
		toSerialize["minDisk"] = o.MinDisk
	}
	if o.MaxDisk != nil {
		toSerialize["maxDisk"] = o.MaxDisk
	}
	if o.MinNetwork.IsSet() {
		toSerialize["minNetwork"] = o.MinNetwork.Get()
	}
	if o.NetworkEnabled != nil {
		toSerialize["networkEnabled"] = o.NetworkEnabled
	}
	if o.IopsEnabled != nil {
		toSerialize["iopsEnabled"] = o.IopsEnabled
	}
	if o.MinIops.IsSet() {
		toSerialize["minIops"] = o.MinIops.Get()
	}
	if o.MaxIops.IsSet() {
		toSerialize["maxIops"] = o.MaxIops.Get()
	}
	if o.Comment.IsSet() {
		toSerialize["comment"] = o.Comment.Get()
	}
	if o.ZoneId.IsSet() {
		toSerialize["zoneId"] = o.ZoneId.Get()
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	return json.Marshal(toSerialize)
}

type NullableInstanceThreshold struct {
	value *InstanceThreshold
	isSet bool
}

func (v NullableInstanceThreshold) Get() *InstanceThreshold {
	return v.value
}

func (v *NullableInstanceThreshold) Set(val *InstanceThreshold) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceThreshold) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceThreshold) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceThreshold(val *InstanceThreshold) *NullableInstanceThreshold {
	return &NullableInstanceThreshold{value: val, isSet: true}
}

func (v NullableInstanceThreshold) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceThreshold) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


