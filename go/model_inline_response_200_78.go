/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20078 struct for InlineResponse20078
type InlineResponse20078 struct {
	LoadBalancer *LoadBalancer `json:"loadBalancer,omitempty"`
}

// NewInlineResponse20078 instantiates a new InlineResponse20078 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20078() *InlineResponse20078 {
	this := InlineResponse20078{}
	return &this
}

// NewInlineResponse20078WithDefaults instantiates a new InlineResponse20078 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20078WithDefaults() *InlineResponse20078 {
	this := InlineResponse20078{}
	return &this
}

// GetLoadBalancer returns the LoadBalancer field value if set, zero value otherwise.
func (o *InlineResponse20078) GetLoadBalancer() LoadBalancer {
	if o == nil || o.LoadBalancer == nil {
		var ret LoadBalancer
		return ret
	}
	return *o.LoadBalancer
}

// GetLoadBalancerOk returns a tuple with the LoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20078) GetLoadBalancerOk() (*LoadBalancer, bool) {
	if o == nil || o.LoadBalancer == nil {
		return nil, false
	}
	return o.LoadBalancer, true
}

// HasLoadBalancer returns a boolean if a field has been set.
func (o *InlineResponse20078) HasLoadBalancer() bool {
	if o != nil && o.LoadBalancer != nil {
		return true
	}

	return false
}

// SetLoadBalancer gets a reference to the given LoadBalancer and assigns it to the LoadBalancer field.
func (o *InlineResponse20078) SetLoadBalancer(v LoadBalancer) {
	o.LoadBalancer = &v
}

func (o InlineResponse20078) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LoadBalancer != nil {
		toSerialize["loadBalancer"] = o.LoadBalancer
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20078 struct {
	value *InlineResponse20078
	isSet bool
}

func (v NullableInlineResponse20078) Get() *InlineResponse20078 {
	return v.value
}

func (v *NullableInlineResponse20078) Set(val *InlineResponse20078) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20078) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20078) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20078(val *InlineResponse20078) *NullableInlineResponse20078 {
	return &NullableInlineResponse20078{value: val, isSet: true}
}

func (v NullableInlineResponse20078) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20078) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


