/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200105 struct for InlineResponse200105
type InlineResponse200105 struct {
	NetworkRoute *NetworkRouterRoute `json:"networkRoute,omitempty"`
}

// NewInlineResponse200105 instantiates a new InlineResponse200105 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200105() *InlineResponse200105 {
	this := InlineResponse200105{}
	return &this
}

// NewInlineResponse200105WithDefaults instantiates a new InlineResponse200105 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200105WithDefaults() *InlineResponse200105 {
	this := InlineResponse200105{}
	return &this
}

// GetNetworkRoute returns the NetworkRoute field value if set, zero value otherwise.
func (o *InlineResponse200105) GetNetworkRoute() NetworkRouterRoute {
	if o == nil || o.NetworkRoute == nil {
		var ret NetworkRouterRoute
		return ret
	}
	return *o.NetworkRoute
}

// GetNetworkRouteOk returns a tuple with the NetworkRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200105) GetNetworkRouteOk() (*NetworkRouterRoute, bool) {
	if o == nil || o.NetworkRoute == nil {
		return nil, false
	}
	return o.NetworkRoute, true
}

// HasNetworkRoute returns a boolean if a field has been set.
func (o *InlineResponse200105) HasNetworkRoute() bool {
	if o != nil && o.NetworkRoute != nil {
		return true
	}

	return false
}

// SetNetworkRoute gets a reference to the given NetworkRouterRoute and assigns it to the NetworkRoute field.
func (o *InlineResponse200105) SetNetworkRoute(v NetworkRouterRoute) {
	o.NetworkRoute = &v
}

func (o InlineResponse200105) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkRoute != nil {
		toSerialize["networkRoute"] = o.NetworkRoute
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200105 struct {
	value *InlineResponse200105
	isSet bool
}

func (v NullableInlineResponse200105) Get() *InlineResponse200105 {
	return v.value
}

func (v *NullableInlineResponse200105) Set(val *InlineResponse200105) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200105) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200105) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200105(val *InlineResponse200105) *NullableInlineResponse200105 {
	return &NullableInlineResponse200105{value: val, isSet: true}
}

func (v NullableInlineResponse200105) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200105) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


