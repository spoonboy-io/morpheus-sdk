/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject150 struct for InlineObject150
type InlineObject150 struct {
	// For a full list of available options, see bgpOptionTypes in the specific Network Router Type
	NetworkRouterBgpNeighbor *map[string]interface{} `json:"networkRouterBgpNeighbor,omitempty"`
}

// NewInlineObject150 instantiates a new InlineObject150 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject150() *InlineObject150 {
	this := InlineObject150{}
	return &this
}

// NewInlineObject150WithDefaults instantiates a new InlineObject150 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject150WithDefaults() *InlineObject150 {
	this := InlineObject150{}
	return &this
}

// GetNetworkRouterBgpNeighbor returns the NetworkRouterBgpNeighbor field value if set, zero value otherwise.
func (o *InlineObject150) GetNetworkRouterBgpNeighbor() map[string]interface{} {
	if o == nil || o.NetworkRouterBgpNeighbor == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.NetworkRouterBgpNeighbor
}

// GetNetworkRouterBgpNeighborOk returns a tuple with the NetworkRouterBgpNeighbor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject150) GetNetworkRouterBgpNeighborOk() (*map[string]interface{}, bool) {
	if o == nil || o.NetworkRouterBgpNeighbor == nil {
		return nil, false
	}
	return o.NetworkRouterBgpNeighbor, true
}

// HasNetworkRouterBgpNeighbor returns a boolean if a field has been set.
func (o *InlineObject150) HasNetworkRouterBgpNeighbor() bool {
	if o != nil && o.NetworkRouterBgpNeighbor != nil {
		return true
	}

	return false
}

// SetNetworkRouterBgpNeighbor gets a reference to the given map[string]interface{} and assigns it to the NetworkRouterBgpNeighbor field.
func (o *InlineObject150) SetNetworkRouterBgpNeighbor(v map[string]interface{}) {
	o.NetworkRouterBgpNeighbor = &v
}

func (o InlineObject150) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkRouterBgpNeighbor != nil {
		toSerialize["networkRouterBgpNeighbor"] = o.NetworkRouterBgpNeighbor
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject150 struct {
	value *InlineObject150
	isSet bool
}

func (v NullableInlineObject150) Get() *InlineObject150 {
	return v.value
}

func (v *NullableInlineObject150) Set(val *InlineObject150) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject150) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject150) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject150(val *InlineObject150) *NullableInlineObject150 {
	return &NullableInlineObject150{value: val, isSet: true}
}

func (v NullableInlineObject150) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject150) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


