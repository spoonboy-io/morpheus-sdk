/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SecurityGroupRule struct for SecurityGroupRule
type SecurityGroupRule struct {
	Id *int64 `json:"id,omitempty"`
	Name NullableString `json:"name,omitempty"`
	RuleType *string `json:"ruleType,omitempty"`
	CustomRule *bool `json:"customRule,omitempty"`
	InstanceTypeId NullableString `json:"instanceTypeId,omitempty"`
	Direction *string `json:"direction,omitempty"`
	Policy *string `json:"policy,omitempty"`
	SourceType *string `json:"sourceType,omitempty"`
	Source NullableString `json:"source,omitempty"`
	SourceGroup NullableInlineResponse20082LoadBalancerInstanceSslCert `json:"sourceGroup,omitempty"`
	SourceTier NullableInlineResponse20082LoadBalancerInstanceSslCert `json:"sourceTier,omitempty"`
	PortRange NullableString `json:"portRange,omitempty"`
	Protocol *string `json:"protocol,omitempty"`
	DestinationType *string `json:"destinationType,omitempty"`
	Destination NullableString `json:"destination,omitempty"`
	DestinationGroup NullableInlineResponse20082LoadBalancerInstanceSslCert `json:"destinationGroup,omitempty"`
	DestinationTier NullableInlineResponse20082LoadBalancerInstanceSslCert `json:"destinationTier,omitempty"`
	ExternalId NullableString `json:"externalId,omitempty"`
	Enabled NullableString `json:"enabled,omitempty"`
}

// NewSecurityGroupRule instantiates a new SecurityGroupRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupRule() *SecurityGroupRule {
	this := SecurityGroupRule{}
	return &this
}

// NewSecurityGroupRuleWithDefaults instantiates a new SecurityGroupRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupRuleWithDefaults() *SecurityGroupRule {
	this := SecurityGroupRule{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SecurityGroupRule) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *SecurityGroupRule) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupRule) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRule) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *SecurityGroupRule) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *SecurityGroupRule) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *SecurityGroupRule) UnsetName() {
	o.Name.Unset()
}

// GetRuleType returns the RuleType field value if set, zero value otherwise.
func (o *SecurityGroupRule) GetRuleType() string {
	if o == nil || o.RuleType == nil {
		var ret string
		return ret
	}
	return *o.RuleType
}

// GetRuleTypeOk returns a tuple with the RuleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetRuleTypeOk() (*string, bool) {
	if o == nil || o.RuleType == nil {
		return nil, false
	}
	return o.RuleType, true
}

// HasRuleType returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasRuleType() bool {
	if o != nil && o.RuleType != nil {
		return true
	}

	return false
}

// SetRuleType gets a reference to the given string and assigns it to the RuleType field.
func (o *SecurityGroupRule) SetRuleType(v string) {
	o.RuleType = &v
}

// GetCustomRule returns the CustomRule field value if set, zero value otherwise.
func (o *SecurityGroupRule) GetCustomRule() bool {
	if o == nil || o.CustomRule == nil {
		var ret bool
		return ret
	}
	return *o.CustomRule
}

// GetCustomRuleOk returns a tuple with the CustomRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetCustomRuleOk() (*bool, bool) {
	if o == nil || o.CustomRule == nil {
		return nil, false
	}
	return o.CustomRule, true
}

// HasCustomRule returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasCustomRule() bool {
	if o != nil && o.CustomRule != nil {
		return true
	}

	return false
}

// SetCustomRule gets a reference to the given bool and assigns it to the CustomRule field.
func (o *SecurityGroupRule) SetCustomRule(v bool) {
	o.CustomRule = &v
}

// GetInstanceTypeId returns the InstanceTypeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupRule) GetInstanceTypeId() string {
	if o == nil || o.InstanceTypeId.Get() == nil {
		var ret string
		return ret
	}
	return *o.InstanceTypeId.Get()
}

// GetInstanceTypeIdOk returns a tuple with the InstanceTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRule) GetInstanceTypeIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InstanceTypeId.Get(), o.InstanceTypeId.IsSet()
}

// HasInstanceTypeId returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasInstanceTypeId() bool {
	if o != nil && o.InstanceTypeId.IsSet() {
		return true
	}

	return false
}

// SetInstanceTypeId gets a reference to the given NullableString and assigns it to the InstanceTypeId field.
func (o *SecurityGroupRule) SetInstanceTypeId(v string) {
	o.InstanceTypeId.Set(&v)
}
// SetInstanceTypeIdNil sets the value for InstanceTypeId to be an explicit nil
func (o *SecurityGroupRule) SetInstanceTypeIdNil() {
	o.InstanceTypeId.Set(nil)
}

// UnsetInstanceTypeId ensures that no value is present for InstanceTypeId, not even an explicit nil
func (o *SecurityGroupRule) UnsetInstanceTypeId() {
	o.InstanceTypeId.Unset()
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *SecurityGroupRule) GetDirection() string {
	if o == nil || o.Direction == nil {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetDirectionOk() (*string, bool) {
	if o == nil || o.Direction == nil {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasDirection() bool {
	if o != nil && o.Direction != nil {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *SecurityGroupRule) SetDirection(v string) {
	o.Direction = &v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *SecurityGroupRule) GetPolicy() string {
	if o == nil || o.Policy == nil {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetPolicyOk() (*string, bool) {
	if o == nil || o.Policy == nil {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasPolicy() bool {
	if o != nil && o.Policy != nil {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
func (o *SecurityGroupRule) SetPolicy(v string) {
	o.Policy = &v
}

// GetSourceType returns the SourceType field value if set, zero value otherwise.
func (o *SecurityGroupRule) GetSourceType() string {
	if o == nil || o.SourceType == nil {
		var ret string
		return ret
	}
	return *o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetSourceTypeOk() (*string, bool) {
	if o == nil || o.SourceType == nil {
		return nil, false
	}
	return o.SourceType, true
}

// HasSourceType returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasSourceType() bool {
	if o != nil && o.SourceType != nil {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given string and assigns it to the SourceType field.
func (o *SecurityGroupRule) SetSourceType(v string) {
	o.SourceType = &v
}

// GetSource returns the Source field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupRule) GetSource() string {
	if o == nil || o.Source.Get() == nil {
		var ret string
		return ret
	}
	return *o.Source.Get()
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRule) GetSourceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Source.Get(), o.Source.IsSet()
}

// HasSource returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasSource() bool {
	if o != nil && o.Source.IsSet() {
		return true
	}

	return false
}

// SetSource gets a reference to the given NullableString and assigns it to the Source field.
func (o *SecurityGroupRule) SetSource(v string) {
	o.Source.Set(&v)
}
// SetSourceNil sets the value for Source to be an explicit nil
func (o *SecurityGroupRule) SetSourceNil() {
	o.Source.Set(nil)
}

// UnsetSource ensures that no value is present for Source, not even an explicit nil
func (o *SecurityGroupRule) UnsetSource() {
	o.Source.Unset()
}

// GetSourceGroup returns the SourceGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupRule) GetSourceGroup() InlineResponse20082LoadBalancerInstanceSslCert {
	if o == nil || o.SourceGroup.Get() == nil {
		var ret InlineResponse20082LoadBalancerInstanceSslCert
		return ret
	}
	return *o.SourceGroup.Get()
}

// GetSourceGroupOk returns a tuple with the SourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRule) GetSourceGroupOk() (*InlineResponse20082LoadBalancerInstanceSslCert, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceGroup.Get(), o.SourceGroup.IsSet()
}

// HasSourceGroup returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasSourceGroup() bool {
	if o != nil && o.SourceGroup.IsSet() {
		return true
	}

	return false
}

// SetSourceGroup gets a reference to the given NullableInlineResponse20082LoadBalancerInstanceSslCert and assigns it to the SourceGroup field.
func (o *SecurityGroupRule) SetSourceGroup(v InlineResponse20082LoadBalancerInstanceSslCert) {
	o.SourceGroup.Set(&v)
}
// SetSourceGroupNil sets the value for SourceGroup to be an explicit nil
func (o *SecurityGroupRule) SetSourceGroupNil() {
	o.SourceGroup.Set(nil)
}

// UnsetSourceGroup ensures that no value is present for SourceGroup, not even an explicit nil
func (o *SecurityGroupRule) UnsetSourceGroup() {
	o.SourceGroup.Unset()
}

// GetSourceTier returns the SourceTier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupRule) GetSourceTier() InlineResponse20082LoadBalancerInstanceSslCert {
	if o == nil || o.SourceTier.Get() == nil {
		var ret InlineResponse20082LoadBalancerInstanceSslCert
		return ret
	}
	return *o.SourceTier.Get()
}

// GetSourceTierOk returns a tuple with the SourceTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRule) GetSourceTierOk() (*InlineResponse20082LoadBalancerInstanceSslCert, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceTier.Get(), o.SourceTier.IsSet()
}

// HasSourceTier returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasSourceTier() bool {
	if o != nil && o.SourceTier.IsSet() {
		return true
	}

	return false
}

// SetSourceTier gets a reference to the given NullableInlineResponse20082LoadBalancerInstanceSslCert and assigns it to the SourceTier field.
func (o *SecurityGroupRule) SetSourceTier(v InlineResponse20082LoadBalancerInstanceSslCert) {
	o.SourceTier.Set(&v)
}
// SetSourceTierNil sets the value for SourceTier to be an explicit nil
func (o *SecurityGroupRule) SetSourceTierNil() {
	o.SourceTier.Set(nil)
}

// UnsetSourceTier ensures that no value is present for SourceTier, not even an explicit nil
func (o *SecurityGroupRule) UnsetSourceTier() {
	o.SourceTier.Unset()
}

// GetPortRange returns the PortRange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupRule) GetPortRange() string {
	if o == nil || o.PortRange.Get() == nil {
		var ret string
		return ret
	}
	return *o.PortRange.Get()
}

// GetPortRangeOk returns a tuple with the PortRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRule) GetPortRangeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PortRange.Get(), o.PortRange.IsSet()
}

// HasPortRange returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasPortRange() bool {
	if o != nil && o.PortRange.IsSet() {
		return true
	}

	return false
}

// SetPortRange gets a reference to the given NullableString and assigns it to the PortRange field.
func (o *SecurityGroupRule) SetPortRange(v string) {
	o.PortRange.Set(&v)
}
// SetPortRangeNil sets the value for PortRange to be an explicit nil
func (o *SecurityGroupRule) SetPortRangeNil() {
	o.PortRange.Set(nil)
}

// UnsetPortRange ensures that no value is present for PortRange, not even an explicit nil
func (o *SecurityGroupRule) UnsetPortRange() {
	o.PortRange.Unset()
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *SecurityGroupRule) GetProtocol() string {
	if o == nil || o.Protocol == nil {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetProtocolOk() (*string, bool) {
	if o == nil || o.Protocol == nil {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasProtocol() bool {
	if o != nil && o.Protocol != nil {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *SecurityGroupRule) SetProtocol(v string) {
	o.Protocol = &v
}

// GetDestinationType returns the DestinationType field value if set, zero value otherwise.
func (o *SecurityGroupRule) GetDestinationType() string {
	if o == nil || o.DestinationType == nil {
		var ret string
		return ret
	}
	return *o.DestinationType
}

// GetDestinationTypeOk returns a tuple with the DestinationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupRule) GetDestinationTypeOk() (*string, bool) {
	if o == nil || o.DestinationType == nil {
		return nil, false
	}
	return o.DestinationType, true
}

// HasDestinationType returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasDestinationType() bool {
	if o != nil && o.DestinationType != nil {
		return true
	}

	return false
}

// SetDestinationType gets a reference to the given string and assigns it to the DestinationType field.
func (o *SecurityGroupRule) SetDestinationType(v string) {
	o.DestinationType = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupRule) GetDestination() string {
	if o == nil || o.Destination.Get() == nil {
		var ret string
		return ret
	}
	return *o.Destination.Get()
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRule) GetDestinationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Destination.Get(), o.Destination.IsSet()
}

// HasDestination returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasDestination() bool {
	if o != nil && o.Destination.IsSet() {
		return true
	}

	return false
}

// SetDestination gets a reference to the given NullableString and assigns it to the Destination field.
func (o *SecurityGroupRule) SetDestination(v string) {
	o.Destination.Set(&v)
}
// SetDestinationNil sets the value for Destination to be an explicit nil
func (o *SecurityGroupRule) SetDestinationNil() {
	o.Destination.Set(nil)
}

// UnsetDestination ensures that no value is present for Destination, not even an explicit nil
func (o *SecurityGroupRule) UnsetDestination() {
	o.Destination.Unset()
}

// GetDestinationGroup returns the DestinationGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupRule) GetDestinationGroup() InlineResponse20082LoadBalancerInstanceSslCert {
	if o == nil || o.DestinationGroup.Get() == nil {
		var ret InlineResponse20082LoadBalancerInstanceSslCert
		return ret
	}
	return *o.DestinationGroup.Get()
}

// GetDestinationGroupOk returns a tuple with the DestinationGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRule) GetDestinationGroupOk() (*InlineResponse20082LoadBalancerInstanceSslCert, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DestinationGroup.Get(), o.DestinationGroup.IsSet()
}

// HasDestinationGroup returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasDestinationGroup() bool {
	if o != nil && o.DestinationGroup.IsSet() {
		return true
	}

	return false
}

// SetDestinationGroup gets a reference to the given NullableInlineResponse20082LoadBalancerInstanceSslCert and assigns it to the DestinationGroup field.
func (o *SecurityGroupRule) SetDestinationGroup(v InlineResponse20082LoadBalancerInstanceSslCert) {
	o.DestinationGroup.Set(&v)
}
// SetDestinationGroupNil sets the value for DestinationGroup to be an explicit nil
func (o *SecurityGroupRule) SetDestinationGroupNil() {
	o.DestinationGroup.Set(nil)
}

// UnsetDestinationGroup ensures that no value is present for DestinationGroup, not even an explicit nil
func (o *SecurityGroupRule) UnsetDestinationGroup() {
	o.DestinationGroup.Unset()
}

// GetDestinationTier returns the DestinationTier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupRule) GetDestinationTier() InlineResponse20082LoadBalancerInstanceSslCert {
	if o == nil || o.DestinationTier.Get() == nil {
		var ret InlineResponse20082LoadBalancerInstanceSslCert
		return ret
	}
	return *o.DestinationTier.Get()
}

// GetDestinationTierOk returns a tuple with the DestinationTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRule) GetDestinationTierOk() (*InlineResponse20082LoadBalancerInstanceSslCert, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DestinationTier.Get(), o.DestinationTier.IsSet()
}

// HasDestinationTier returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasDestinationTier() bool {
	if o != nil && o.DestinationTier.IsSet() {
		return true
	}

	return false
}

// SetDestinationTier gets a reference to the given NullableInlineResponse20082LoadBalancerInstanceSslCert and assigns it to the DestinationTier field.
func (o *SecurityGroupRule) SetDestinationTier(v InlineResponse20082LoadBalancerInstanceSslCert) {
	o.DestinationTier.Set(&v)
}
// SetDestinationTierNil sets the value for DestinationTier to be an explicit nil
func (o *SecurityGroupRule) SetDestinationTierNil() {
	o.DestinationTier.Set(nil)
}

// UnsetDestinationTier ensures that no value is present for DestinationTier, not even an explicit nil
func (o *SecurityGroupRule) UnsetDestinationTier() {
	o.DestinationTier.Unset()
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupRule) GetExternalId() string {
	if o == nil || o.ExternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRule) GetExternalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *SecurityGroupRule) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}
// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *SecurityGroupRule) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *SecurityGroupRule) UnsetExternalId() {
	o.ExternalId.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupRule) GetEnabled() string {
	if o == nil || o.Enabled.Get() == nil {
		var ret string
		return ret
	}
	return *o.Enabled.Get()
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupRule) GetEnabledOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Enabled.Get(), o.Enabled.IsSet()
}

// HasEnabled returns a boolean if a field has been set.
func (o *SecurityGroupRule) HasEnabled() bool {
	if o != nil && o.Enabled.IsSet() {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given NullableString and assigns it to the Enabled field.
func (o *SecurityGroupRule) SetEnabled(v string) {
	o.Enabled.Set(&v)
}
// SetEnabledNil sets the value for Enabled to be an explicit nil
func (o *SecurityGroupRule) SetEnabledNil() {
	o.Enabled.Set(nil)
}

// UnsetEnabled ensures that no value is present for Enabled, not even an explicit nil
func (o *SecurityGroupRule) UnsetEnabled() {
	o.Enabled.Unset()
}

func (o SecurityGroupRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.RuleType != nil {
		toSerialize["ruleType"] = o.RuleType
	}
	if o.CustomRule != nil {
		toSerialize["customRule"] = o.CustomRule
	}
	if o.InstanceTypeId.IsSet() {
		toSerialize["instanceTypeId"] = o.InstanceTypeId.Get()
	}
	if o.Direction != nil {
		toSerialize["direction"] = o.Direction
	}
	if o.Policy != nil {
		toSerialize["policy"] = o.Policy
	}
	if o.SourceType != nil {
		toSerialize["sourceType"] = o.SourceType
	}
	if o.Source.IsSet() {
		toSerialize["source"] = o.Source.Get()
	}
	if o.SourceGroup.IsSet() {
		toSerialize["sourceGroup"] = o.SourceGroup.Get()
	}
	if o.SourceTier.IsSet() {
		toSerialize["sourceTier"] = o.SourceTier.Get()
	}
	if o.PortRange.IsSet() {
		toSerialize["portRange"] = o.PortRange.Get()
	}
	if o.Protocol != nil {
		toSerialize["protocol"] = o.Protocol
	}
	if o.DestinationType != nil {
		toSerialize["destinationType"] = o.DestinationType
	}
	if o.Destination.IsSet() {
		toSerialize["destination"] = o.Destination.Get()
	}
	if o.DestinationGroup.IsSet() {
		toSerialize["destinationGroup"] = o.DestinationGroup.Get()
	}
	if o.DestinationTier.IsSet() {
		toSerialize["destinationTier"] = o.DestinationTier.Get()
	}
	if o.ExternalId.IsSet() {
		toSerialize["externalId"] = o.ExternalId.Get()
	}
	if o.Enabled.IsSet() {
		toSerialize["enabled"] = o.Enabled.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableSecurityGroupRule struct {
	value *SecurityGroupRule
	isSet bool
}

func (v NullableSecurityGroupRule) Get() *SecurityGroupRule {
	return v.value
}

func (v *NullableSecurityGroupRule) Set(val *SecurityGroupRule) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupRule) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupRule(val *SecurityGroupRule) *NullableSecurityGroupRule {
	return &NullableSecurityGroupRule{value: val, isSet: true}
}

func (v NullableSecurityGroupRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


