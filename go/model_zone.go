/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Zone struct for Zone
type Zone struct {
	Id *int64 `json:"id,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	ExternalId NullableString `json:"externalId,omitempty"`
	Name *string `json:"name,omitempty"`
	Code *string `json:"code,omitempty"`
	Location NullableString `json:"location,omitempty"`
	Owner *InlineResponse20040AppDeployInstance `json:"owner,omitempty"`
	AccountId *int64 `json:"accountId,omitempty"`
	Account *InlineResponse20040AppDeployInstance `json:"account,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Status *string `json:"status,omitempty"`
	StatusMessage NullableString `json:"statusMessage,omitempty"`
	StatusDate NullableTime `json:"statusDate,omitempty"`
	CostStatus NullableString `json:"costStatus,omitempty"`
	CostStatusMessage NullableString `json:"costStatusMessage,omitempty"`
	CostStatusDate NullableTime `json:"costStatusDate,omitempty"`
	CostLastSyncDuration NullableInt64 `json:"costLastSyncDuration,omitempty"`
	CostLastSync NullableTime `json:"costLastSync,omitempty"`
	ZoneType *InlineResponse20079LoadBalancerMonitorLoadBalancerType `json:"zoneType,omitempty"`
	ZoneTypeId *int64 `json:"zoneTypeId,omitempty"`
	GuidanceMode NullableString `json:"guidanceMode,omitempty"`
	StorageMode *string `json:"storageMode,omitempty"`
	AgentMode *string `json:"agentMode,omitempty"`
	UserDataLinux NullableString `json:"userDataLinux,omitempty"`
	UserDataWindows NullableString `json:"userDataWindows,omitempty"`
	ConsoleKeymap NullableString `json:"consoleKeymap,omitempty"`
	ContainerMode *string `json:"containerMode,omitempty"`
	CostingMode NullableString `json:"costingMode,omitempty"`
	ServiceVersion NullableString `json:"serviceVersion,omitempty"`
	SecurityMode *string `json:"securityMode,omitempty"`
	InventoryLevel *string `json:"inventoryLevel,omitempty"`
	Timezone NullableString `json:"timezone,omitempty"`
	ApiProxy NullableString `json:"apiProxy,omitempty"`
	ProvisioningProxy NullableString `json:"provisioningProxy,omitempty"`
	NetworkDomain NullableInlineResponse20082LoadBalancerInstanceSslCert `json:"networkDomain,omitempty"`
	DomainName *string `json:"domainName,omitempty"`
	RegionCode NullableString `json:"regionCode,omitempty"`
	AutoRecoverPowerState *bool `json:"autoRecoverPowerState,omitempty"`
	ScalePriority *int64 `json:"scalePriority,omitempty"`
	Config *AnyOfzoneVcenterConfigzoneAwsConfigzoneAzureConfigzoneGcpConfig `json:"config,omitempty"`
	Credential *AnyOfobjectobject `json:"credential,omitempty"`
	// Logo image URL
	ImagePath NullableString `json:"imagePath,omitempty"`
	// Dark logo image URL
	DarkImagePath NullableString `json:"darkImagePath,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	LastSync NullableTime `json:"lastSync,omitempty"`
	LastSyncDuration NullableInt64 `json:"lastSyncDuration,omitempty"`
	NextRunDate NullableTime `json:"nextRunDate,omitempty"`
	Groups *[]ZoneGroups `json:"groups,omitempty"`
	SecurityServer NullableInlineResponse20082LoadBalancerInstanceSslCert `json:"securityServer,omitempty"`
	NetworkServer NullableInlineResponse20082LoadBalancerInstanceSslCert `json:"networkServer,omitempty"`
	Stats *ZoneStats `json:"stats,omitempty"`
	ServerCount *int64 `json:"serverCount,omitempty"`
}

// NewZone instantiates a new Zone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZone() *Zone {
	this := Zone{}
	return &this
}

// NewZoneWithDefaults instantiates a new Zone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneWithDefaults() *Zone {
	this := Zone{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Zone) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Zone) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *Zone) SetId(v int64) {
	o.Id = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *Zone) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *Zone) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *Zone) SetUuid(v string) {
	o.Uuid = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetExternalId() string {
	if o == nil || o.ExternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetExternalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *Zone) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *Zone) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}
// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *Zone) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *Zone) UnsetExternalId() {
	o.ExternalId.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Zone) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Zone) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Zone) SetName(v string) {
	o.Name = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *Zone) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *Zone) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *Zone) SetCode(v string) {
	o.Code = &v
}

// GetLocation returns the Location field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetLocation() string {
	if o == nil || o.Location.Get() == nil {
		var ret string
		return ret
	}
	return *o.Location.Get()
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetLocationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Location.Get(), o.Location.IsSet()
}

// HasLocation returns a boolean if a field has been set.
func (o *Zone) HasLocation() bool {
	if o != nil && o.Location.IsSet() {
		return true
	}

	return false
}

// SetLocation gets a reference to the given NullableString and assigns it to the Location field.
func (o *Zone) SetLocation(v string) {
	o.Location.Set(&v)
}
// SetLocationNil sets the value for Location to be an explicit nil
func (o *Zone) SetLocationNil() {
	o.Location.Set(nil)
}

// UnsetLocation ensures that no value is present for Location, not even an explicit nil
func (o *Zone) UnsetLocation() {
	o.Location.Unset()
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *Zone) GetOwner() InlineResponse20040AppDeployInstance {
	if o == nil || o.Owner == nil {
		var ret InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetOwnerOk() (*InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *Zone) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given InlineResponse20040AppDeployInstance and assigns it to the Owner field.
func (o *Zone) SetOwner(v InlineResponse20040AppDeployInstance) {
	o.Owner = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *Zone) GetAccountId() int64 {
	if o == nil || o.AccountId == nil {
		var ret int64
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetAccountIdOk() (*int64, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *Zone) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int64 and assigns it to the AccountId field.
func (o *Zone) SetAccountId(v int64) {
	o.AccountId = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *Zone) GetAccount() InlineResponse20040AppDeployInstance {
	if o == nil || o.Account == nil {
		var ret InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetAccountOk() (*InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Account == nil {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *Zone) HasAccount() bool {
	if o != nil && o.Account != nil {
		return true
	}

	return false
}

// SetAccount gets a reference to the given InlineResponse20040AppDeployInstance and assigns it to the Account field.
func (o *Zone) SetAccount(v InlineResponse20040AppDeployInstance) {
	o.Account = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *Zone) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetVisibilityOk() (*string, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *Zone) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *Zone) SetVisibility(v string) {
	o.Visibility = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *Zone) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *Zone) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *Zone) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Zone) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Zone) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Zone) SetStatus(v string) {
	o.Status = &v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetStatusMessage() string {
	if o == nil || o.StatusMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.StatusMessage.Get()
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetStatusMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StatusMessage.Get(), o.StatusMessage.IsSet()
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *Zone) HasStatusMessage() bool {
	if o != nil && o.StatusMessage.IsSet() {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given NullableString and assigns it to the StatusMessage field.
func (o *Zone) SetStatusMessage(v string) {
	o.StatusMessage.Set(&v)
}
// SetStatusMessageNil sets the value for StatusMessage to be an explicit nil
func (o *Zone) SetStatusMessageNil() {
	o.StatusMessage.Set(nil)
}

// UnsetStatusMessage ensures that no value is present for StatusMessage, not even an explicit nil
func (o *Zone) UnsetStatusMessage() {
	o.StatusMessage.Unset()
}

// GetStatusDate returns the StatusDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetStatusDate() time.Time {
	if o == nil || o.StatusDate.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.StatusDate.Get()
}

// GetStatusDateOk returns a tuple with the StatusDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetStatusDateOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StatusDate.Get(), o.StatusDate.IsSet()
}

// HasStatusDate returns a boolean if a field has been set.
func (o *Zone) HasStatusDate() bool {
	if o != nil && o.StatusDate.IsSet() {
		return true
	}

	return false
}

// SetStatusDate gets a reference to the given NullableTime and assigns it to the StatusDate field.
func (o *Zone) SetStatusDate(v time.Time) {
	o.StatusDate.Set(&v)
}
// SetStatusDateNil sets the value for StatusDate to be an explicit nil
func (o *Zone) SetStatusDateNil() {
	o.StatusDate.Set(nil)
}

// UnsetStatusDate ensures that no value is present for StatusDate, not even an explicit nil
func (o *Zone) UnsetStatusDate() {
	o.StatusDate.Unset()
}

// GetCostStatus returns the CostStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetCostStatus() string {
	if o == nil || o.CostStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.CostStatus.Get()
}

// GetCostStatusOk returns a tuple with the CostStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetCostStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CostStatus.Get(), o.CostStatus.IsSet()
}

// HasCostStatus returns a boolean if a field has been set.
func (o *Zone) HasCostStatus() bool {
	if o != nil && o.CostStatus.IsSet() {
		return true
	}

	return false
}

// SetCostStatus gets a reference to the given NullableString and assigns it to the CostStatus field.
func (o *Zone) SetCostStatus(v string) {
	o.CostStatus.Set(&v)
}
// SetCostStatusNil sets the value for CostStatus to be an explicit nil
func (o *Zone) SetCostStatusNil() {
	o.CostStatus.Set(nil)
}

// UnsetCostStatus ensures that no value is present for CostStatus, not even an explicit nil
func (o *Zone) UnsetCostStatus() {
	o.CostStatus.Unset()
}

// GetCostStatusMessage returns the CostStatusMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetCostStatusMessage() string {
	if o == nil || o.CostStatusMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.CostStatusMessage.Get()
}

// GetCostStatusMessageOk returns a tuple with the CostStatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetCostStatusMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CostStatusMessage.Get(), o.CostStatusMessage.IsSet()
}

// HasCostStatusMessage returns a boolean if a field has been set.
func (o *Zone) HasCostStatusMessage() bool {
	if o != nil && o.CostStatusMessage.IsSet() {
		return true
	}

	return false
}

// SetCostStatusMessage gets a reference to the given NullableString and assigns it to the CostStatusMessage field.
func (o *Zone) SetCostStatusMessage(v string) {
	o.CostStatusMessage.Set(&v)
}
// SetCostStatusMessageNil sets the value for CostStatusMessage to be an explicit nil
func (o *Zone) SetCostStatusMessageNil() {
	o.CostStatusMessage.Set(nil)
}

// UnsetCostStatusMessage ensures that no value is present for CostStatusMessage, not even an explicit nil
func (o *Zone) UnsetCostStatusMessage() {
	o.CostStatusMessage.Unset()
}

// GetCostStatusDate returns the CostStatusDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetCostStatusDate() time.Time {
	if o == nil || o.CostStatusDate.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CostStatusDate.Get()
}

// GetCostStatusDateOk returns a tuple with the CostStatusDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetCostStatusDateOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CostStatusDate.Get(), o.CostStatusDate.IsSet()
}

// HasCostStatusDate returns a boolean if a field has been set.
func (o *Zone) HasCostStatusDate() bool {
	if o != nil && o.CostStatusDate.IsSet() {
		return true
	}

	return false
}

// SetCostStatusDate gets a reference to the given NullableTime and assigns it to the CostStatusDate field.
func (o *Zone) SetCostStatusDate(v time.Time) {
	o.CostStatusDate.Set(&v)
}
// SetCostStatusDateNil sets the value for CostStatusDate to be an explicit nil
func (o *Zone) SetCostStatusDateNil() {
	o.CostStatusDate.Set(nil)
}

// UnsetCostStatusDate ensures that no value is present for CostStatusDate, not even an explicit nil
func (o *Zone) UnsetCostStatusDate() {
	o.CostStatusDate.Unset()
}

// GetCostLastSyncDuration returns the CostLastSyncDuration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetCostLastSyncDuration() int64 {
	if o == nil || o.CostLastSyncDuration.Get() == nil {
		var ret int64
		return ret
	}
	return *o.CostLastSyncDuration.Get()
}

// GetCostLastSyncDurationOk returns a tuple with the CostLastSyncDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetCostLastSyncDurationOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CostLastSyncDuration.Get(), o.CostLastSyncDuration.IsSet()
}

// HasCostLastSyncDuration returns a boolean if a field has been set.
func (o *Zone) HasCostLastSyncDuration() bool {
	if o != nil && o.CostLastSyncDuration.IsSet() {
		return true
	}

	return false
}

// SetCostLastSyncDuration gets a reference to the given NullableInt64 and assigns it to the CostLastSyncDuration field.
func (o *Zone) SetCostLastSyncDuration(v int64) {
	o.CostLastSyncDuration.Set(&v)
}
// SetCostLastSyncDurationNil sets the value for CostLastSyncDuration to be an explicit nil
func (o *Zone) SetCostLastSyncDurationNil() {
	o.CostLastSyncDuration.Set(nil)
}

// UnsetCostLastSyncDuration ensures that no value is present for CostLastSyncDuration, not even an explicit nil
func (o *Zone) UnsetCostLastSyncDuration() {
	o.CostLastSyncDuration.Unset()
}

// GetCostLastSync returns the CostLastSync field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetCostLastSync() time.Time {
	if o == nil || o.CostLastSync.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CostLastSync.Get()
}

// GetCostLastSyncOk returns a tuple with the CostLastSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetCostLastSyncOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CostLastSync.Get(), o.CostLastSync.IsSet()
}

// HasCostLastSync returns a boolean if a field has been set.
func (o *Zone) HasCostLastSync() bool {
	if o != nil && o.CostLastSync.IsSet() {
		return true
	}

	return false
}

// SetCostLastSync gets a reference to the given NullableTime and assigns it to the CostLastSync field.
func (o *Zone) SetCostLastSync(v time.Time) {
	o.CostLastSync.Set(&v)
}
// SetCostLastSyncNil sets the value for CostLastSync to be an explicit nil
func (o *Zone) SetCostLastSyncNil() {
	o.CostLastSync.Set(nil)
}

// UnsetCostLastSync ensures that no value is present for CostLastSync, not even an explicit nil
func (o *Zone) UnsetCostLastSync() {
	o.CostLastSync.Unset()
}

// GetZoneType returns the ZoneType field value if set, zero value otherwise.
func (o *Zone) GetZoneType() InlineResponse20079LoadBalancerMonitorLoadBalancerType {
	if o == nil || o.ZoneType == nil {
		var ret InlineResponse20079LoadBalancerMonitorLoadBalancerType
		return ret
	}
	return *o.ZoneType
}

// GetZoneTypeOk returns a tuple with the ZoneType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetZoneTypeOk() (*InlineResponse20079LoadBalancerMonitorLoadBalancerType, bool) {
	if o == nil || o.ZoneType == nil {
		return nil, false
	}
	return o.ZoneType, true
}

// HasZoneType returns a boolean if a field has been set.
func (o *Zone) HasZoneType() bool {
	if o != nil && o.ZoneType != nil {
		return true
	}

	return false
}

// SetZoneType gets a reference to the given InlineResponse20079LoadBalancerMonitorLoadBalancerType and assigns it to the ZoneType field.
func (o *Zone) SetZoneType(v InlineResponse20079LoadBalancerMonitorLoadBalancerType) {
	o.ZoneType = &v
}

// GetZoneTypeId returns the ZoneTypeId field value if set, zero value otherwise.
func (o *Zone) GetZoneTypeId() int64 {
	if o == nil || o.ZoneTypeId == nil {
		var ret int64
		return ret
	}
	return *o.ZoneTypeId
}

// GetZoneTypeIdOk returns a tuple with the ZoneTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetZoneTypeIdOk() (*int64, bool) {
	if o == nil || o.ZoneTypeId == nil {
		return nil, false
	}
	return o.ZoneTypeId, true
}

// HasZoneTypeId returns a boolean if a field has been set.
func (o *Zone) HasZoneTypeId() bool {
	if o != nil && o.ZoneTypeId != nil {
		return true
	}

	return false
}

// SetZoneTypeId gets a reference to the given int64 and assigns it to the ZoneTypeId field.
func (o *Zone) SetZoneTypeId(v int64) {
	o.ZoneTypeId = &v
}

// GetGuidanceMode returns the GuidanceMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetGuidanceMode() string {
	if o == nil || o.GuidanceMode.Get() == nil {
		var ret string
		return ret
	}
	return *o.GuidanceMode.Get()
}

// GetGuidanceModeOk returns a tuple with the GuidanceMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetGuidanceModeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GuidanceMode.Get(), o.GuidanceMode.IsSet()
}

// HasGuidanceMode returns a boolean if a field has been set.
func (o *Zone) HasGuidanceMode() bool {
	if o != nil && o.GuidanceMode.IsSet() {
		return true
	}

	return false
}

// SetGuidanceMode gets a reference to the given NullableString and assigns it to the GuidanceMode field.
func (o *Zone) SetGuidanceMode(v string) {
	o.GuidanceMode.Set(&v)
}
// SetGuidanceModeNil sets the value for GuidanceMode to be an explicit nil
func (o *Zone) SetGuidanceModeNil() {
	o.GuidanceMode.Set(nil)
}

// UnsetGuidanceMode ensures that no value is present for GuidanceMode, not even an explicit nil
func (o *Zone) UnsetGuidanceMode() {
	o.GuidanceMode.Unset()
}

// GetStorageMode returns the StorageMode field value if set, zero value otherwise.
func (o *Zone) GetStorageMode() string {
	if o == nil || o.StorageMode == nil {
		var ret string
		return ret
	}
	return *o.StorageMode
}

// GetStorageModeOk returns a tuple with the StorageMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetStorageModeOk() (*string, bool) {
	if o == nil || o.StorageMode == nil {
		return nil, false
	}
	return o.StorageMode, true
}

// HasStorageMode returns a boolean if a field has been set.
func (o *Zone) HasStorageMode() bool {
	if o != nil && o.StorageMode != nil {
		return true
	}

	return false
}

// SetStorageMode gets a reference to the given string and assigns it to the StorageMode field.
func (o *Zone) SetStorageMode(v string) {
	o.StorageMode = &v
}

// GetAgentMode returns the AgentMode field value if set, zero value otherwise.
func (o *Zone) GetAgentMode() string {
	if o == nil || o.AgentMode == nil {
		var ret string
		return ret
	}
	return *o.AgentMode
}

// GetAgentModeOk returns a tuple with the AgentMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetAgentModeOk() (*string, bool) {
	if o == nil || o.AgentMode == nil {
		return nil, false
	}
	return o.AgentMode, true
}

// HasAgentMode returns a boolean if a field has been set.
func (o *Zone) HasAgentMode() bool {
	if o != nil && o.AgentMode != nil {
		return true
	}

	return false
}

// SetAgentMode gets a reference to the given string and assigns it to the AgentMode field.
func (o *Zone) SetAgentMode(v string) {
	o.AgentMode = &v
}

// GetUserDataLinux returns the UserDataLinux field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetUserDataLinux() string {
	if o == nil || o.UserDataLinux.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserDataLinux.Get()
}

// GetUserDataLinuxOk returns a tuple with the UserDataLinux field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetUserDataLinuxOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserDataLinux.Get(), o.UserDataLinux.IsSet()
}

// HasUserDataLinux returns a boolean if a field has been set.
func (o *Zone) HasUserDataLinux() bool {
	if o != nil && o.UserDataLinux.IsSet() {
		return true
	}

	return false
}

// SetUserDataLinux gets a reference to the given NullableString and assigns it to the UserDataLinux field.
func (o *Zone) SetUserDataLinux(v string) {
	o.UserDataLinux.Set(&v)
}
// SetUserDataLinuxNil sets the value for UserDataLinux to be an explicit nil
func (o *Zone) SetUserDataLinuxNil() {
	o.UserDataLinux.Set(nil)
}

// UnsetUserDataLinux ensures that no value is present for UserDataLinux, not even an explicit nil
func (o *Zone) UnsetUserDataLinux() {
	o.UserDataLinux.Unset()
}

// GetUserDataWindows returns the UserDataWindows field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetUserDataWindows() string {
	if o == nil || o.UserDataWindows.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserDataWindows.Get()
}

// GetUserDataWindowsOk returns a tuple with the UserDataWindows field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetUserDataWindowsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserDataWindows.Get(), o.UserDataWindows.IsSet()
}

// HasUserDataWindows returns a boolean if a field has been set.
func (o *Zone) HasUserDataWindows() bool {
	if o != nil && o.UserDataWindows.IsSet() {
		return true
	}

	return false
}

// SetUserDataWindows gets a reference to the given NullableString and assigns it to the UserDataWindows field.
func (o *Zone) SetUserDataWindows(v string) {
	o.UserDataWindows.Set(&v)
}
// SetUserDataWindowsNil sets the value for UserDataWindows to be an explicit nil
func (o *Zone) SetUserDataWindowsNil() {
	o.UserDataWindows.Set(nil)
}

// UnsetUserDataWindows ensures that no value is present for UserDataWindows, not even an explicit nil
func (o *Zone) UnsetUserDataWindows() {
	o.UserDataWindows.Unset()
}

// GetConsoleKeymap returns the ConsoleKeymap field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetConsoleKeymap() string {
	if o == nil || o.ConsoleKeymap.Get() == nil {
		var ret string
		return ret
	}
	return *o.ConsoleKeymap.Get()
}

// GetConsoleKeymapOk returns a tuple with the ConsoleKeymap field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetConsoleKeymapOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ConsoleKeymap.Get(), o.ConsoleKeymap.IsSet()
}

// HasConsoleKeymap returns a boolean if a field has been set.
func (o *Zone) HasConsoleKeymap() bool {
	if o != nil && o.ConsoleKeymap.IsSet() {
		return true
	}

	return false
}

// SetConsoleKeymap gets a reference to the given NullableString and assigns it to the ConsoleKeymap field.
func (o *Zone) SetConsoleKeymap(v string) {
	o.ConsoleKeymap.Set(&v)
}
// SetConsoleKeymapNil sets the value for ConsoleKeymap to be an explicit nil
func (o *Zone) SetConsoleKeymapNil() {
	o.ConsoleKeymap.Set(nil)
}

// UnsetConsoleKeymap ensures that no value is present for ConsoleKeymap, not even an explicit nil
func (o *Zone) UnsetConsoleKeymap() {
	o.ConsoleKeymap.Unset()
}

// GetContainerMode returns the ContainerMode field value if set, zero value otherwise.
func (o *Zone) GetContainerMode() string {
	if o == nil || o.ContainerMode == nil {
		var ret string
		return ret
	}
	return *o.ContainerMode
}

// GetContainerModeOk returns a tuple with the ContainerMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetContainerModeOk() (*string, bool) {
	if o == nil || o.ContainerMode == nil {
		return nil, false
	}
	return o.ContainerMode, true
}

// HasContainerMode returns a boolean if a field has been set.
func (o *Zone) HasContainerMode() bool {
	if o != nil && o.ContainerMode != nil {
		return true
	}

	return false
}

// SetContainerMode gets a reference to the given string and assigns it to the ContainerMode field.
func (o *Zone) SetContainerMode(v string) {
	o.ContainerMode = &v
}

// GetCostingMode returns the CostingMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetCostingMode() string {
	if o == nil || o.CostingMode.Get() == nil {
		var ret string
		return ret
	}
	return *o.CostingMode.Get()
}

// GetCostingModeOk returns a tuple with the CostingMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetCostingModeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CostingMode.Get(), o.CostingMode.IsSet()
}

// HasCostingMode returns a boolean if a field has been set.
func (o *Zone) HasCostingMode() bool {
	if o != nil && o.CostingMode.IsSet() {
		return true
	}

	return false
}

// SetCostingMode gets a reference to the given NullableString and assigns it to the CostingMode field.
func (o *Zone) SetCostingMode(v string) {
	o.CostingMode.Set(&v)
}
// SetCostingModeNil sets the value for CostingMode to be an explicit nil
func (o *Zone) SetCostingModeNil() {
	o.CostingMode.Set(nil)
}

// UnsetCostingMode ensures that no value is present for CostingMode, not even an explicit nil
func (o *Zone) UnsetCostingMode() {
	o.CostingMode.Unset()
}

// GetServiceVersion returns the ServiceVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetServiceVersion() string {
	if o == nil || o.ServiceVersion.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServiceVersion.Get()
}

// GetServiceVersionOk returns a tuple with the ServiceVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetServiceVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServiceVersion.Get(), o.ServiceVersion.IsSet()
}

// HasServiceVersion returns a boolean if a field has been set.
func (o *Zone) HasServiceVersion() bool {
	if o != nil && o.ServiceVersion.IsSet() {
		return true
	}

	return false
}

// SetServiceVersion gets a reference to the given NullableString and assigns it to the ServiceVersion field.
func (o *Zone) SetServiceVersion(v string) {
	o.ServiceVersion.Set(&v)
}
// SetServiceVersionNil sets the value for ServiceVersion to be an explicit nil
func (o *Zone) SetServiceVersionNil() {
	o.ServiceVersion.Set(nil)
}

// UnsetServiceVersion ensures that no value is present for ServiceVersion, not even an explicit nil
func (o *Zone) UnsetServiceVersion() {
	o.ServiceVersion.Unset()
}

// GetSecurityMode returns the SecurityMode field value if set, zero value otherwise.
func (o *Zone) GetSecurityMode() string {
	if o == nil || o.SecurityMode == nil {
		var ret string
		return ret
	}
	return *o.SecurityMode
}

// GetSecurityModeOk returns a tuple with the SecurityMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetSecurityModeOk() (*string, bool) {
	if o == nil || o.SecurityMode == nil {
		return nil, false
	}
	return o.SecurityMode, true
}

// HasSecurityMode returns a boolean if a field has been set.
func (o *Zone) HasSecurityMode() bool {
	if o != nil && o.SecurityMode != nil {
		return true
	}

	return false
}

// SetSecurityMode gets a reference to the given string and assigns it to the SecurityMode field.
func (o *Zone) SetSecurityMode(v string) {
	o.SecurityMode = &v
}

// GetInventoryLevel returns the InventoryLevel field value if set, zero value otherwise.
func (o *Zone) GetInventoryLevel() string {
	if o == nil || o.InventoryLevel == nil {
		var ret string
		return ret
	}
	return *o.InventoryLevel
}

// GetInventoryLevelOk returns a tuple with the InventoryLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetInventoryLevelOk() (*string, bool) {
	if o == nil || o.InventoryLevel == nil {
		return nil, false
	}
	return o.InventoryLevel, true
}

// HasInventoryLevel returns a boolean if a field has been set.
func (o *Zone) HasInventoryLevel() bool {
	if o != nil && o.InventoryLevel != nil {
		return true
	}

	return false
}

// SetInventoryLevel gets a reference to the given string and assigns it to the InventoryLevel field.
func (o *Zone) SetInventoryLevel(v string) {
	o.InventoryLevel = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetTimezone() string {
	if o == nil || o.Timezone.Get() == nil {
		var ret string
		return ret
	}
	return *o.Timezone.Get()
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetTimezoneOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Timezone.Get(), o.Timezone.IsSet()
}

// HasTimezone returns a boolean if a field has been set.
func (o *Zone) HasTimezone() bool {
	if o != nil && o.Timezone.IsSet() {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given NullableString and assigns it to the Timezone field.
func (o *Zone) SetTimezone(v string) {
	o.Timezone.Set(&v)
}
// SetTimezoneNil sets the value for Timezone to be an explicit nil
func (o *Zone) SetTimezoneNil() {
	o.Timezone.Set(nil)
}

// UnsetTimezone ensures that no value is present for Timezone, not even an explicit nil
func (o *Zone) UnsetTimezone() {
	o.Timezone.Unset()
}

// GetApiProxy returns the ApiProxy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetApiProxy() string {
	if o == nil || o.ApiProxy.Get() == nil {
		var ret string
		return ret
	}
	return *o.ApiProxy.Get()
}

// GetApiProxyOk returns a tuple with the ApiProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetApiProxyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ApiProxy.Get(), o.ApiProxy.IsSet()
}

// HasApiProxy returns a boolean if a field has been set.
func (o *Zone) HasApiProxy() bool {
	if o != nil && o.ApiProxy.IsSet() {
		return true
	}

	return false
}

// SetApiProxy gets a reference to the given NullableString and assigns it to the ApiProxy field.
func (o *Zone) SetApiProxy(v string) {
	o.ApiProxy.Set(&v)
}
// SetApiProxyNil sets the value for ApiProxy to be an explicit nil
func (o *Zone) SetApiProxyNil() {
	o.ApiProxy.Set(nil)
}

// UnsetApiProxy ensures that no value is present for ApiProxy, not even an explicit nil
func (o *Zone) UnsetApiProxy() {
	o.ApiProxy.Unset()
}

// GetProvisioningProxy returns the ProvisioningProxy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetProvisioningProxy() string {
	if o == nil || o.ProvisioningProxy.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProvisioningProxy.Get()
}

// GetProvisioningProxyOk returns a tuple with the ProvisioningProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetProvisioningProxyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProvisioningProxy.Get(), o.ProvisioningProxy.IsSet()
}

// HasProvisioningProxy returns a boolean if a field has been set.
func (o *Zone) HasProvisioningProxy() bool {
	if o != nil && o.ProvisioningProxy.IsSet() {
		return true
	}

	return false
}

// SetProvisioningProxy gets a reference to the given NullableString and assigns it to the ProvisioningProxy field.
func (o *Zone) SetProvisioningProxy(v string) {
	o.ProvisioningProxy.Set(&v)
}
// SetProvisioningProxyNil sets the value for ProvisioningProxy to be an explicit nil
func (o *Zone) SetProvisioningProxyNil() {
	o.ProvisioningProxy.Set(nil)
}

// UnsetProvisioningProxy ensures that no value is present for ProvisioningProxy, not even an explicit nil
func (o *Zone) UnsetProvisioningProxy() {
	o.ProvisioningProxy.Unset()
}

// GetNetworkDomain returns the NetworkDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetNetworkDomain() InlineResponse20082LoadBalancerInstanceSslCert {
	if o == nil || o.NetworkDomain.Get() == nil {
		var ret InlineResponse20082LoadBalancerInstanceSslCert
		return ret
	}
	return *o.NetworkDomain.Get()
}

// GetNetworkDomainOk returns a tuple with the NetworkDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetNetworkDomainOk() (*InlineResponse20082LoadBalancerInstanceSslCert, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetworkDomain.Get(), o.NetworkDomain.IsSet()
}

// HasNetworkDomain returns a boolean if a field has been set.
func (o *Zone) HasNetworkDomain() bool {
	if o != nil && o.NetworkDomain.IsSet() {
		return true
	}

	return false
}

// SetNetworkDomain gets a reference to the given NullableInlineResponse20082LoadBalancerInstanceSslCert and assigns it to the NetworkDomain field.
func (o *Zone) SetNetworkDomain(v InlineResponse20082LoadBalancerInstanceSslCert) {
	o.NetworkDomain.Set(&v)
}
// SetNetworkDomainNil sets the value for NetworkDomain to be an explicit nil
func (o *Zone) SetNetworkDomainNil() {
	o.NetworkDomain.Set(nil)
}

// UnsetNetworkDomain ensures that no value is present for NetworkDomain, not even an explicit nil
func (o *Zone) UnsetNetworkDomain() {
	o.NetworkDomain.Unset()
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *Zone) GetDomainName() string {
	if o == nil || o.DomainName == nil {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetDomainNameOk() (*string, bool) {
	if o == nil || o.DomainName == nil {
		return nil, false
	}
	return o.DomainName, true
}

// HasDomainName returns a boolean if a field has been set.
func (o *Zone) HasDomainName() bool {
	if o != nil && o.DomainName != nil {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *Zone) SetDomainName(v string) {
	o.DomainName = &v
}

// GetRegionCode returns the RegionCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetRegionCode() string {
	if o == nil || o.RegionCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.RegionCode.Get()
}

// GetRegionCodeOk returns a tuple with the RegionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetRegionCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RegionCode.Get(), o.RegionCode.IsSet()
}

// HasRegionCode returns a boolean if a field has been set.
func (o *Zone) HasRegionCode() bool {
	if o != nil && o.RegionCode.IsSet() {
		return true
	}

	return false
}

// SetRegionCode gets a reference to the given NullableString and assigns it to the RegionCode field.
func (o *Zone) SetRegionCode(v string) {
	o.RegionCode.Set(&v)
}
// SetRegionCodeNil sets the value for RegionCode to be an explicit nil
func (o *Zone) SetRegionCodeNil() {
	o.RegionCode.Set(nil)
}

// UnsetRegionCode ensures that no value is present for RegionCode, not even an explicit nil
func (o *Zone) UnsetRegionCode() {
	o.RegionCode.Unset()
}

// GetAutoRecoverPowerState returns the AutoRecoverPowerState field value if set, zero value otherwise.
func (o *Zone) GetAutoRecoverPowerState() bool {
	if o == nil || o.AutoRecoverPowerState == nil {
		var ret bool
		return ret
	}
	return *o.AutoRecoverPowerState
}

// GetAutoRecoverPowerStateOk returns a tuple with the AutoRecoverPowerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetAutoRecoverPowerStateOk() (*bool, bool) {
	if o == nil || o.AutoRecoverPowerState == nil {
		return nil, false
	}
	return o.AutoRecoverPowerState, true
}

// HasAutoRecoverPowerState returns a boolean if a field has been set.
func (o *Zone) HasAutoRecoverPowerState() bool {
	if o != nil && o.AutoRecoverPowerState != nil {
		return true
	}

	return false
}

// SetAutoRecoverPowerState gets a reference to the given bool and assigns it to the AutoRecoverPowerState field.
func (o *Zone) SetAutoRecoverPowerState(v bool) {
	o.AutoRecoverPowerState = &v
}

// GetScalePriority returns the ScalePriority field value if set, zero value otherwise.
func (o *Zone) GetScalePriority() int64 {
	if o == nil || o.ScalePriority == nil {
		var ret int64
		return ret
	}
	return *o.ScalePriority
}

// GetScalePriorityOk returns a tuple with the ScalePriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetScalePriorityOk() (*int64, bool) {
	if o == nil || o.ScalePriority == nil {
		return nil, false
	}
	return o.ScalePriority, true
}

// HasScalePriority returns a boolean if a field has been set.
func (o *Zone) HasScalePriority() bool {
	if o != nil && o.ScalePriority != nil {
		return true
	}

	return false
}

// SetScalePriority gets a reference to the given int64 and assigns it to the ScalePriority field.
func (o *Zone) SetScalePriority(v int64) {
	o.ScalePriority = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *Zone) GetConfig() AnyOfzoneVcenterConfigzoneAwsConfigzoneAzureConfigzoneGcpConfig {
	if o == nil || o.Config == nil {
		var ret AnyOfzoneVcenterConfigzoneAwsConfigzoneAzureConfigzoneGcpConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetConfigOk() (*AnyOfzoneVcenterConfigzoneAwsConfigzoneAzureConfigzoneGcpConfig, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *Zone) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given AnyOfzoneVcenterConfigzoneAwsConfigzoneAzureConfigzoneGcpConfig and assigns it to the Config field.
func (o *Zone) SetConfig(v AnyOfzoneVcenterConfigzoneAwsConfigzoneAzureConfigzoneGcpConfig) {
	o.Config = &v
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *Zone) GetCredential() AnyOfobjectobject {
	if o == nil || o.Credential == nil {
		var ret AnyOfobjectobject
		return ret
	}
	return *o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetCredentialOk() (*AnyOfobjectobject, bool) {
	if o == nil || o.Credential == nil {
		return nil, false
	}
	return o.Credential, true
}

// HasCredential returns a boolean if a field has been set.
func (o *Zone) HasCredential() bool {
	if o != nil && o.Credential != nil {
		return true
	}

	return false
}

// SetCredential gets a reference to the given AnyOfobjectobject and assigns it to the Credential field.
func (o *Zone) SetCredential(v AnyOfobjectobject) {
	o.Credential = &v
}

// GetImagePath returns the ImagePath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetImagePath() string {
	if o == nil || o.ImagePath.Get() == nil {
		var ret string
		return ret
	}
	return *o.ImagePath.Get()
}

// GetImagePathOk returns a tuple with the ImagePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetImagePathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ImagePath.Get(), o.ImagePath.IsSet()
}

// HasImagePath returns a boolean if a field has been set.
func (o *Zone) HasImagePath() bool {
	if o != nil && o.ImagePath.IsSet() {
		return true
	}

	return false
}

// SetImagePath gets a reference to the given NullableString and assigns it to the ImagePath field.
func (o *Zone) SetImagePath(v string) {
	o.ImagePath.Set(&v)
}
// SetImagePathNil sets the value for ImagePath to be an explicit nil
func (o *Zone) SetImagePathNil() {
	o.ImagePath.Set(nil)
}

// UnsetImagePath ensures that no value is present for ImagePath, not even an explicit nil
func (o *Zone) UnsetImagePath() {
	o.ImagePath.Unset()
}

// GetDarkImagePath returns the DarkImagePath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetDarkImagePath() string {
	if o == nil || o.DarkImagePath.Get() == nil {
		var ret string
		return ret
	}
	return *o.DarkImagePath.Get()
}

// GetDarkImagePathOk returns a tuple with the DarkImagePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetDarkImagePathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DarkImagePath.Get(), o.DarkImagePath.IsSet()
}

// HasDarkImagePath returns a boolean if a field has been set.
func (o *Zone) HasDarkImagePath() bool {
	if o != nil && o.DarkImagePath.IsSet() {
		return true
	}

	return false
}

// SetDarkImagePath gets a reference to the given NullableString and assigns it to the DarkImagePath field.
func (o *Zone) SetDarkImagePath(v string) {
	o.DarkImagePath.Set(&v)
}
// SetDarkImagePathNil sets the value for DarkImagePath to be an explicit nil
func (o *Zone) SetDarkImagePathNil() {
	o.DarkImagePath.Set(nil)
}

// UnsetDarkImagePath ensures that no value is present for DarkImagePath, not even an explicit nil
func (o *Zone) UnsetDarkImagePath() {
	o.DarkImagePath.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *Zone) GetDateCreated() time.Time {
	if o == nil || o.DateCreated == nil {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *Zone) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *Zone) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *Zone) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *Zone) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *Zone) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastSync returns the LastSync field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetLastSync() time.Time {
	if o == nil || o.LastSync.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastSync.Get()
}

// GetLastSyncOk returns a tuple with the LastSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetLastSyncOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastSync.Get(), o.LastSync.IsSet()
}

// HasLastSync returns a boolean if a field has been set.
func (o *Zone) HasLastSync() bool {
	if o != nil && o.LastSync.IsSet() {
		return true
	}

	return false
}

// SetLastSync gets a reference to the given NullableTime and assigns it to the LastSync field.
func (o *Zone) SetLastSync(v time.Time) {
	o.LastSync.Set(&v)
}
// SetLastSyncNil sets the value for LastSync to be an explicit nil
func (o *Zone) SetLastSyncNil() {
	o.LastSync.Set(nil)
}

// UnsetLastSync ensures that no value is present for LastSync, not even an explicit nil
func (o *Zone) UnsetLastSync() {
	o.LastSync.Unset()
}

// GetLastSyncDuration returns the LastSyncDuration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetLastSyncDuration() int64 {
	if o == nil || o.LastSyncDuration.Get() == nil {
		var ret int64
		return ret
	}
	return *o.LastSyncDuration.Get()
}

// GetLastSyncDurationOk returns a tuple with the LastSyncDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetLastSyncDurationOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastSyncDuration.Get(), o.LastSyncDuration.IsSet()
}

// HasLastSyncDuration returns a boolean if a field has been set.
func (o *Zone) HasLastSyncDuration() bool {
	if o != nil && o.LastSyncDuration.IsSet() {
		return true
	}

	return false
}

// SetLastSyncDuration gets a reference to the given NullableInt64 and assigns it to the LastSyncDuration field.
func (o *Zone) SetLastSyncDuration(v int64) {
	o.LastSyncDuration.Set(&v)
}
// SetLastSyncDurationNil sets the value for LastSyncDuration to be an explicit nil
func (o *Zone) SetLastSyncDurationNil() {
	o.LastSyncDuration.Set(nil)
}

// UnsetLastSyncDuration ensures that no value is present for LastSyncDuration, not even an explicit nil
func (o *Zone) UnsetLastSyncDuration() {
	o.LastSyncDuration.Unset()
}

// GetNextRunDate returns the NextRunDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetNextRunDate() time.Time {
	if o == nil || o.NextRunDate.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.NextRunDate.Get()
}

// GetNextRunDateOk returns a tuple with the NextRunDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetNextRunDateOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NextRunDate.Get(), o.NextRunDate.IsSet()
}

// HasNextRunDate returns a boolean if a field has been set.
func (o *Zone) HasNextRunDate() bool {
	if o != nil && o.NextRunDate.IsSet() {
		return true
	}

	return false
}

// SetNextRunDate gets a reference to the given NullableTime and assigns it to the NextRunDate field.
func (o *Zone) SetNextRunDate(v time.Time) {
	o.NextRunDate.Set(&v)
}
// SetNextRunDateNil sets the value for NextRunDate to be an explicit nil
func (o *Zone) SetNextRunDateNil() {
	o.NextRunDate.Set(nil)
}

// UnsetNextRunDate ensures that no value is present for NextRunDate, not even an explicit nil
func (o *Zone) UnsetNextRunDate() {
	o.NextRunDate.Unset()
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *Zone) GetGroups() []ZoneGroups {
	if o == nil || o.Groups == nil {
		var ret []ZoneGroups
		return ret
	}
	return *o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetGroupsOk() (*[]ZoneGroups, bool) {
	if o == nil || o.Groups == nil {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *Zone) HasGroups() bool {
	if o != nil && o.Groups != nil {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []ZoneGroups and assigns it to the Groups field.
func (o *Zone) SetGroups(v []ZoneGroups) {
	o.Groups = &v
}

// GetSecurityServer returns the SecurityServer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetSecurityServer() InlineResponse20082LoadBalancerInstanceSslCert {
	if o == nil || o.SecurityServer.Get() == nil {
		var ret InlineResponse20082LoadBalancerInstanceSslCert
		return ret
	}
	return *o.SecurityServer.Get()
}

// GetSecurityServerOk returns a tuple with the SecurityServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetSecurityServerOk() (*InlineResponse20082LoadBalancerInstanceSslCert, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SecurityServer.Get(), o.SecurityServer.IsSet()
}

// HasSecurityServer returns a boolean if a field has been set.
func (o *Zone) HasSecurityServer() bool {
	if o != nil && o.SecurityServer.IsSet() {
		return true
	}

	return false
}

// SetSecurityServer gets a reference to the given NullableInlineResponse20082LoadBalancerInstanceSslCert and assigns it to the SecurityServer field.
func (o *Zone) SetSecurityServer(v InlineResponse20082LoadBalancerInstanceSslCert) {
	o.SecurityServer.Set(&v)
}
// SetSecurityServerNil sets the value for SecurityServer to be an explicit nil
func (o *Zone) SetSecurityServerNil() {
	o.SecurityServer.Set(nil)
}

// UnsetSecurityServer ensures that no value is present for SecurityServer, not even an explicit nil
func (o *Zone) UnsetSecurityServer() {
	o.SecurityServer.Unset()
}

// GetNetworkServer returns the NetworkServer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Zone) GetNetworkServer() InlineResponse20082LoadBalancerInstanceSslCert {
	if o == nil || o.NetworkServer.Get() == nil {
		var ret InlineResponse20082LoadBalancerInstanceSslCert
		return ret
	}
	return *o.NetworkServer.Get()
}

// GetNetworkServerOk returns a tuple with the NetworkServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Zone) GetNetworkServerOk() (*InlineResponse20082LoadBalancerInstanceSslCert, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetworkServer.Get(), o.NetworkServer.IsSet()
}

// HasNetworkServer returns a boolean if a field has been set.
func (o *Zone) HasNetworkServer() bool {
	if o != nil && o.NetworkServer.IsSet() {
		return true
	}

	return false
}

// SetNetworkServer gets a reference to the given NullableInlineResponse20082LoadBalancerInstanceSslCert and assigns it to the NetworkServer field.
func (o *Zone) SetNetworkServer(v InlineResponse20082LoadBalancerInstanceSslCert) {
	o.NetworkServer.Set(&v)
}
// SetNetworkServerNil sets the value for NetworkServer to be an explicit nil
func (o *Zone) SetNetworkServerNil() {
	o.NetworkServer.Set(nil)
}

// UnsetNetworkServer ensures that no value is present for NetworkServer, not even an explicit nil
func (o *Zone) UnsetNetworkServer() {
	o.NetworkServer.Unset()
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *Zone) GetStats() ZoneStats {
	if o == nil || o.Stats == nil {
		var ret ZoneStats
		return ret
	}
	return *o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetStatsOk() (*ZoneStats, bool) {
	if o == nil || o.Stats == nil {
		return nil, false
	}
	return o.Stats, true
}

// HasStats returns a boolean if a field has been set.
func (o *Zone) HasStats() bool {
	if o != nil && o.Stats != nil {
		return true
	}

	return false
}

// SetStats gets a reference to the given ZoneStats and assigns it to the Stats field.
func (o *Zone) SetStats(v ZoneStats) {
	o.Stats = &v
}

// GetServerCount returns the ServerCount field value if set, zero value otherwise.
func (o *Zone) GetServerCount() int64 {
	if o == nil || o.ServerCount == nil {
		var ret int64
		return ret
	}
	return *o.ServerCount
}

// GetServerCountOk returns a tuple with the ServerCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Zone) GetServerCountOk() (*int64, bool) {
	if o == nil || o.ServerCount == nil {
		return nil, false
	}
	return o.ServerCount, true
}

// HasServerCount returns a boolean if a field has been set.
func (o *Zone) HasServerCount() bool {
	if o != nil && o.ServerCount != nil {
		return true
	}

	return false
}

// SetServerCount gets a reference to the given int64 and assigns it to the ServerCount field.
func (o *Zone) SetServerCount(v int64) {
	o.ServerCount = &v
}

func (o Zone) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.ExternalId.IsSet() {
		toSerialize["externalId"] = o.ExternalId.Get()
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Location.IsSet() {
		toSerialize["location"] = o.Location.Get()
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.AccountId != nil {
		toSerialize["accountId"] = o.AccountId
	}
	if o.Account != nil {
		toSerialize["account"] = o.Account
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StatusMessage.IsSet() {
		toSerialize["statusMessage"] = o.StatusMessage.Get()
	}
	if o.StatusDate.IsSet() {
		toSerialize["statusDate"] = o.StatusDate.Get()
	}
	if o.CostStatus.IsSet() {
		toSerialize["costStatus"] = o.CostStatus.Get()
	}
	if o.CostStatusMessage.IsSet() {
		toSerialize["costStatusMessage"] = o.CostStatusMessage.Get()
	}
	if o.CostStatusDate.IsSet() {
		toSerialize["costStatusDate"] = o.CostStatusDate.Get()
	}
	if o.CostLastSyncDuration.IsSet() {
		toSerialize["costLastSyncDuration"] = o.CostLastSyncDuration.Get()
	}
	if o.CostLastSync.IsSet() {
		toSerialize["costLastSync"] = o.CostLastSync.Get()
	}
	if o.ZoneType != nil {
		toSerialize["zoneType"] = o.ZoneType
	}
	if o.ZoneTypeId != nil {
		toSerialize["zoneTypeId"] = o.ZoneTypeId
	}
	if o.GuidanceMode.IsSet() {
		toSerialize["guidanceMode"] = o.GuidanceMode.Get()
	}
	if o.StorageMode != nil {
		toSerialize["storageMode"] = o.StorageMode
	}
	if o.AgentMode != nil {
		toSerialize["agentMode"] = o.AgentMode
	}
	if o.UserDataLinux.IsSet() {
		toSerialize["userDataLinux"] = o.UserDataLinux.Get()
	}
	if o.UserDataWindows.IsSet() {
		toSerialize["userDataWindows"] = o.UserDataWindows.Get()
	}
	if o.ConsoleKeymap.IsSet() {
		toSerialize["consoleKeymap"] = o.ConsoleKeymap.Get()
	}
	if o.ContainerMode != nil {
		toSerialize["containerMode"] = o.ContainerMode
	}
	if o.CostingMode.IsSet() {
		toSerialize["costingMode"] = o.CostingMode.Get()
	}
	if o.ServiceVersion.IsSet() {
		toSerialize["serviceVersion"] = o.ServiceVersion.Get()
	}
	if o.SecurityMode != nil {
		toSerialize["securityMode"] = o.SecurityMode
	}
	if o.InventoryLevel != nil {
		toSerialize["inventoryLevel"] = o.InventoryLevel
	}
	if o.Timezone.IsSet() {
		toSerialize["timezone"] = o.Timezone.Get()
	}
	if o.ApiProxy.IsSet() {
		toSerialize["apiProxy"] = o.ApiProxy.Get()
	}
	if o.ProvisioningProxy.IsSet() {
		toSerialize["provisioningProxy"] = o.ProvisioningProxy.Get()
	}
	if o.NetworkDomain.IsSet() {
		toSerialize["networkDomain"] = o.NetworkDomain.Get()
	}
	if o.DomainName != nil {
		toSerialize["domainName"] = o.DomainName
	}
	if o.RegionCode.IsSet() {
		toSerialize["regionCode"] = o.RegionCode.Get()
	}
	if o.AutoRecoverPowerState != nil {
		toSerialize["autoRecoverPowerState"] = o.AutoRecoverPowerState
	}
	if o.ScalePriority != nil {
		toSerialize["scalePriority"] = o.ScalePriority
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.Credential != nil {
		toSerialize["credential"] = o.Credential
	}
	if o.ImagePath.IsSet() {
		toSerialize["imagePath"] = o.ImagePath.Get()
	}
	if o.DarkImagePath.IsSet() {
		toSerialize["darkImagePath"] = o.DarkImagePath.Get()
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if o.LastSync.IsSet() {
		toSerialize["lastSync"] = o.LastSync.Get()
	}
	if o.LastSyncDuration.IsSet() {
		toSerialize["lastSyncDuration"] = o.LastSyncDuration.Get()
	}
	if o.NextRunDate.IsSet() {
		toSerialize["nextRunDate"] = o.NextRunDate.Get()
	}
	if o.Groups != nil {
		toSerialize["groups"] = o.Groups
	}
	if o.SecurityServer.IsSet() {
		toSerialize["securityServer"] = o.SecurityServer.Get()
	}
	if o.NetworkServer.IsSet() {
		toSerialize["networkServer"] = o.NetworkServer.Get()
	}
	if o.Stats != nil {
		toSerialize["stats"] = o.Stats
	}
	if o.ServerCount != nil {
		toSerialize["serverCount"] = o.ServerCount
	}
	return json.Marshal(toSerialize)
}

type NullableZone struct {
	value *Zone
	isSet bool
}

func (v NullableZone) Get() *Zone {
	return v.value
}

func (v *NullableZone) Set(val *Zone) {
	v.value = val
	v.isSet = true
}

func (v NullableZone) IsSet() bool {
	return v.isSet
}

func (v *NullableZone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZone(val *Zone) *NullableZone {
	return &NullableZone{value: val, isSet: true}
}

func (v NullableZone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


