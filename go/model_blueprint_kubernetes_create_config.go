/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BlueprintKubernetesCreateConfig struct for BlueprintKubernetesCreateConfig
type BlueprintKubernetesCreateConfig struct {
	// Array of Kubernetes specs in Morpheus
	Specs *[]BlueprintKubernetesCreateConfigSpecs `json:"specs,omitempty"`
}

// NewBlueprintKubernetesCreateConfig instantiates a new BlueprintKubernetesCreateConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlueprintKubernetesCreateConfig() *BlueprintKubernetesCreateConfig {
	this := BlueprintKubernetesCreateConfig{}
	return &this
}

// NewBlueprintKubernetesCreateConfigWithDefaults instantiates a new BlueprintKubernetesCreateConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlueprintKubernetesCreateConfigWithDefaults() *BlueprintKubernetesCreateConfig {
	this := BlueprintKubernetesCreateConfig{}
	return &this
}

// GetSpecs returns the Specs field value if set, zero value otherwise.
func (o *BlueprintKubernetesCreateConfig) GetSpecs() []BlueprintKubernetesCreateConfigSpecs {
	if o == nil || o.Specs == nil {
		var ret []BlueprintKubernetesCreateConfigSpecs
		return ret
	}
	return *o.Specs
}

// GetSpecsOk returns a tuple with the Specs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintKubernetesCreateConfig) GetSpecsOk() (*[]BlueprintKubernetesCreateConfigSpecs, bool) {
	if o == nil || o.Specs == nil {
		return nil, false
	}
	return o.Specs, true
}

// HasSpecs returns a boolean if a field has been set.
func (o *BlueprintKubernetesCreateConfig) HasSpecs() bool {
	if o != nil && o.Specs != nil {
		return true
	}

	return false
}

// SetSpecs gets a reference to the given []BlueprintKubernetesCreateConfigSpecs and assigns it to the Specs field.
func (o *BlueprintKubernetesCreateConfig) SetSpecs(v []BlueprintKubernetesCreateConfigSpecs) {
	o.Specs = &v
}

func (o BlueprintKubernetesCreateConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Specs != nil {
		toSerialize["specs"] = o.Specs
	}
	return json.Marshal(toSerialize)
}

type NullableBlueprintKubernetesCreateConfig struct {
	value *BlueprintKubernetesCreateConfig
	isSet bool
}

func (v NullableBlueprintKubernetesCreateConfig) Get() *BlueprintKubernetesCreateConfig {
	return v.value
}

func (v *NullableBlueprintKubernetesCreateConfig) Set(val *BlueprintKubernetesCreateConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableBlueprintKubernetesCreateConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableBlueprintKubernetesCreateConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlueprintKubernetesCreateConfig(val *BlueprintKubernetesCreateConfig) *NullableBlueprintKubernetesCreateConfig {
	return &NullableBlueprintKubernetesCreateConfig{value: val, isSet: true}
}

func (v NullableBlueprintKubernetesCreateConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlueprintKubernetesCreateConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


