/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject83 struct for InlineObject83
type InlineObject83 struct {
	BootScript *BootScriptsCreate `json:"bootScript,omitempty"`
}

// NewInlineObject83 instantiates a new InlineObject83 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject83() *InlineObject83 {
	this := InlineObject83{}
	return &this
}

// NewInlineObject83WithDefaults instantiates a new InlineObject83 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject83WithDefaults() *InlineObject83 {
	this := InlineObject83{}
	return &this
}

// GetBootScript returns the BootScript field value if set, zero value otherwise.
func (o *InlineObject83) GetBootScript() BootScriptsCreate {
	if o == nil || o.BootScript == nil {
		var ret BootScriptsCreate
		return ret
	}
	return *o.BootScript
}

// GetBootScriptOk returns a tuple with the BootScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject83) GetBootScriptOk() (*BootScriptsCreate, bool) {
	if o == nil || o.BootScript == nil {
		return nil, false
	}
	return o.BootScript, true
}

// HasBootScript returns a boolean if a field has been set.
func (o *InlineObject83) HasBootScript() bool {
	if o != nil && o.BootScript != nil {
		return true
	}

	return false
}

// SetBootScript gets a reference to the given BootScriptsCreate and assigns it to the BootScript field.
func (o *InlineObject83) SetBootScript(v BootScriptsCreate) {
	o.BootScript = &v
}

func (o InlineObject83) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BootScript != nil {
		toSerialize["bootScript"] = o.BootScript
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject83 struct {
	value *InlineObject83
	isSet bool
}

func (v NullableInlineObject83) Get() *InlineObject83 {
	return v.value
}

func (v *NullableInlineObject83) Set(val *InlineObject83) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject83) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject83) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject83(val *InlineObject83) *NullableInlineObject83 {
	return &NullableInlineObject83{value: val, isSet: true}
}

func (v NullableInlineObject83) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject83) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


