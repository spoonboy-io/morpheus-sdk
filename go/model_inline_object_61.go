/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject61 struct for InlineObject61
type InlineObject61 struct {
	Contact ApiMonitoringContactsIdContact `json:"contact"`
}

// NewInlineObject61 instantiates a new InlineObject61 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject61(contact ApiMonitoringContactsIdContact, ) *InlineObject61 {
	this := InlineObject61{}
	this.Contact = contact
	return &this
}

// NewInlineObject61WithDefaults instantiates a new InlineObject61 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject61WithDefaults() *InlineObject61 {
	this := InlineObject61{}
	return &this
}

// GetContact returns the Contact field value
func (o *InlineObject61) GetContact() ApiMonitoringContactsIdContact {
	if o == nil  {
		var ret ApiMonitoringContactsIdContact
		return ret
	}

	return o.Contact
}

// GetContactOk returns a tuple with the Contact field value
// and a boolean to check if the value has been set.
func (o *InlineObject61) GetContactOk() (*ApiMonitoringContactsIdContact, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Contact, true
}

// SetContact sets field value
func (o *InlineObject61) SetContact(v ApiMonitoringContactsIdContact) {
	o.Contact = v
}

func (o InlineObject61) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["contact"] = o.Contact
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject61 struct {
	value *InlineObject61
	isSet bool
}

func (v NullableInlineObject61) Get() *InlineObject61 {
	return v.value
}

func (v *NullableInlineObject61) Set(val *InlineObject61) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject61) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject61) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject61(val *InlineObject61) *NullableInlineObject61 {
	return &NullableInlineObject61{value: val, isSet: true}
}

func (v NullableInlineObject61) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject61) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


