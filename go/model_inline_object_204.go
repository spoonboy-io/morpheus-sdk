/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject204 struct for InlineObject204
type InlineObject204 struct {
	ProvisioningSettings *ProvisioningSettingsUpdate `json:"provisioningSettings,omitempty"`
}

// NewInlineObject204 instantiates a new InlineObject204 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject204() *InlineObject204 {
	this := InlineObject204{}
	return &this
}

// NewInlineObject204WithDefaults instantiates a new InlineObject204 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject204WithDefaults() *InlineObject204 {
	this := InlineObject204{}
	return &this
}

// GetProvisioningSettings returns the ProvisioningSettings field value if set, zero value otherwise.
func (o *InlineObject204) GetProvisioningSettings() ProvisioningSettingsUpdate {
	if o == nil || o.ProvisioningSettings == nil {
		var ret ProvisioningSettingsUpdate
		return ret
	}
	return *o.ProvisioningSettings
}

// GetProvisioningSettingsOk returns a tuple with the ProvisioningSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject204) GetProvisioningSettingsOk() (*ProvisioningSettingsUpdate, bool) {
	if o == nil || o.ProvisioningSettings == nil {
		return nil, false
	}
	return o.ProvisioningSettings, true
}

// HasProvisioningSettings returns a boolean if a field has been set.
func (o *InlineObject204) HasProvisioningSettings() bool {
	if o != nil && o.ProvisioningSettings != nil {
		return true
	}

	return false
}

// SetProvisioningSettings gets a reference to the given ProvisioningSettingsUpdate and assigns it to the ProvisioningSettings field.
func (o *InlineObject204) SetProvisioningSettings(v ProvisioningSettingsUpdate) {
	o.ProvisioningSettings = &v
}

func (o InlineObject204) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProvisioningSettings != nil {
		toSerialize["provisioningSettings"] = o.ProvisioningSettings
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject204 struct {
	value *InlineObject204
	isSet bool
}

func (v NullableInlineObject204) Get() *InlineObject204 {
	return v.value
}

func (v *NullableInlineObject204) Set(val *InlineObject204) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject204) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject204) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject204(val *InlineObject204) *NullableInlineObject204 {
	return &NullableInlineObject204{value: val, isSet: true}
}

func (v NullableInlineObject204) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject204) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


