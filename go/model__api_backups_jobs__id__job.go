/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiBackupsJobsIdJob struct for ApiBackupsJobsIdJob
type ApiBackupsJobsIdJob struct {
	// A name for the backup job
	Name *string `json:"name,omitempty"`
	// A code for the backup job
	Code *string `json:"code,omitempty"`
	// Execute Schedule ID to use for the backup job
	ScheduleId NullableInt64 `json:"scheduleId,omitempty"`
	// Retention Count
	RetentionCount *int64 `json:"retentionCount,omitempty"`
}

// NewApiBackupsJobsIdJob instantiates a new ApiBackupsJobsIdJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiBackupsJobsIdJob() *ApiBackupsJobsIdJob {
	this := ApiBackupsJobsIdJob{}
	return &this
}

// NewApiBackupsJobsIdJobWithDefaults instantiates a new ApiBackupsJobsIdJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiBackupsJobsIdJobWithDefaults() *ApiBackupsJobsIdJob {
	this := ApiBackupsJobsIdJob{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiBackupsJobsIdJob) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBackupsJobsIdJob) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiBackupsJobsIdJob) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiBackupsJobsIdJob) SetName(v string) {
	o.Name = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ApiBackupsJobsIdJob) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBackupsJobsIdJob) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ApiBackupsJobsIdJob) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ApiBackupsJobsIdJob) SetCode(v string) {
	o.Code = &v
}

// GetScheduleId returns the ScheduleId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiBackupsJobsIdJob) GetScheduleId() int64 {
	if o == nil || o.ScheduleId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ScheduleId.Get()
}

// GetScheduleIdOk returns a tuple with the ScheduleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiBackupsJobsIdJob) GetScheduleIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ScheduleId.Get(), o.ScheduleId.IsSet()
}

// HasScheduleId returns a boolean if a field has been set.
func (o *ApiBackupsJobsIdJob) HasScheduleId() bool {
	if o != nil && o.ScheduleId.IsSet() {
		return true
	}

	return false
}

// SetScheduleId gets a reference to the given NullableInt64 and assigns it to the ScheduleId field.
func (o *ApiBackupsJobsIdJob) SetScheduleId(v int64) {
	o.ScheduleId.Set(&v)
}
// SetScheduleIdNil sets the value for ScheduleId to be an explicit nil
func (o *ApiBackupsJobsIdJob) SetScheduleIdNil() {
	o.ScheduleId.Set(nil)
}

// UnsetScheduleId ensures that no value is present for ScheduleId, not even an explicit nil
func (o *ApiBackupsJobsIdJob) UnsetScheduleId() {
	o.ScheduleId.Unset()
}

// GetRetentionCount returns the RetentionCount field value if set, zero value otherwise.
func (o *ApiBackupsJobsIdJob) GetRetentionCount() int64 {
	if o == nil || o.RetentionCount == nil {
		var ret int64
		return ret
	}
	return *o.RetentionCount
}

// GetRetentionCountOk returns a tuple with the RetentionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBackupsJobsIdJob) GetRetentionCountOk() (*int64, bool) {
	if o == nil || o.RetentionCount == nil {
		return nil, false
	}
	return o.RetentionCount, true
}

// HasRetentionCount returns a boolean if a field has been set.
func (o *ApiBackupsJobsIdJob) HasRetentionCount() bool {
	if o != nil && o.RetentionCount != nil {
		return true
	}

	return false
}

// SetRetentionCount gets a reference to the given int64 and assigns it to the RetentionCount field.
func (o *ApiBackupsJobsIdJob) SetRetentionCount(v int64) {
	o.RetentionCount = &v
}

func (o ApiBackupsJobsIdJob) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.ScheduleId.IsSet() {
		toSerialize["scheduleId"] = o.ScheduleId.Get()
	}
	if o.RetentionCount != nil {
		toSerialize["retentionCount"] = o.RetentionCount
	}
	return json.Marshal(toSerialize)
}

type NullableApiBackupsJobsIdJob struct {
	value *ApiBackupsJobsIdJob
	isSet bool
}

func (v NullableApiBackupsJobsIdJob) Get() *ApiBackupsJobsIdJob {
	return v.value
}

func (v *NullableApiBackupsJobsIdJob) Set(val *ApiBackupsJobsIdJob) {
	v.value = val
	v.isSet = true
}

func (v NullableApiBackupsJobsIdJob) IsSet() bool {
	return v.isSet
}

func (v *NullableApiBackupsJobsIdJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiBackupsJobsIdJob(val *ApiBackupsJobsIdJob) *NullableApiBackupsJobsIdJob {
	return &NullableApiBackupsJobsIdJob{value: val, isSet: true}
}

func (v NullableApiBackupsJobsIdJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiBackupsJobsIdJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


