/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject226 struct for InlineObject226
type InlineObject226 struct {
	// The cloud/zone ID we are moving the set of servers to
	CloudId *int64 `json:"cloudId,omitempty"`
	// A JSON array of source: and target: server ids to be moved. If the target is blank Morpheus will automatically try to match by the servers unique or externalId
	Servers *[]ApiServersChangeCloudServers `json:"servers,omitempty"`
}

// NewInlineObject226 instantiates a new InlineObject226 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject226() *InlineObject226 {
	this := InlineObject226{}
	return &this
}

// NewInlineObject226WithDefaults instantiates a new InlineObject226 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject226WithDefaults() *InlineObject226 {
	this := InlineObject226{}
	return &this
}

// GetCloudId returns the CloudId field value if set, zero value otherwise.
func (o *InlineObject226) GetCloudId() int64 {
	if o == nil || o.CloudId == nil {
		var ret int64
		return ret
	}
	return *o.CloudId
}

// GetCloudIdOk returns a tuple with the CloudId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject226) GetCloudIdOk() (*int64, bool) {
	if o == nil || o.CloudId == nil {
		return nil, false
	}
	return o.CloudId, true
}

// HasCloudId returns a boolean if a field has been set.
func (o *InlineObject226) HasCloudId() bool {
	if o != nil && o.CloudId != nil {
		return true
	}

	return false
}

// SetCloudId gets a reference to the given int64 and assigns it to the CloudId field.
func (o *InlineObject226) SetCloudId(v int64) {
	o.CloudId = &v
}

// GetServers returns the Servers field value if set, zero value otherwise.
func (o *InlineObject226) GetServers() []ApiServersChangeCloudServers {
	if o == nil || o.Servers == nil {
		var ret []ApiServersChangeCloudServers
		return ret
	}
	return *o.Servers
}

// GetServersOk returns a tuple with the Servers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject226) GetServersOk() (*[]ApiServersChangeCloudServers, bool) {
	if o == nil || o.Servers == nil {
		return nil, false
	}
	return o.Servers, true
}

// HasServers returns a boolean if a field has been set.
func (o *InlineObject226) HasServers() bool {
	if o != nil && o.Servers != nil {
		return true
	}

	return false
}

// SetServers gets a reference to the given []ApiServersChangeCloudServers and assigns it to the Servers field.
func (o *InlineObject226) SetServers(v []ApiServersChangeCloudServers) {
	o.Servers = &v
}

func (o InlineObject226) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CloudId != nil {
		toSerialize["cloudId"] = o.CloudId
	}
	if o.Servers != nil {
		toSerialize["servers"] = o.Servers
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject226 struct {
	value *InlineObject226
	isSet bool
}

func (v NullableInlineObject226) Get() *InlineObject226 {
	return v.value
}

func (v *NullableInlineObject226) Set(val *InlineObject226) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject226) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject226) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject226(val *InlineObject226) *NullableInlineObject226 {
	return &NullableInlineObject226{value: val, isSet: true}
}

func (v NullableInlineObject226) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject226) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


