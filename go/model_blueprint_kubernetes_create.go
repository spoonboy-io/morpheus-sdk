/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BlueprintKubernetesCreate struct for BlueprintKubernetesCreate
type BlueprintKubernetesCreate struct {
	// A name for the blueprint
	Name string `json:"name"`
	// Path to display image. Defaults to an internal Morpheus image.
	Image *string `json:"image,omitempty"`
	// Blueprint Type
	Type string `json:"type"`
	// Array of label strings, can be used for filtering.
	Labels []string `json:"labels,omitempty"`
	Kubernetes BlueprintKubernetesCreateKubernetes `json:"kubernetes"`
	Config *BlueprintKubernetesCreateConfig `json:"config,omitempty"`
}

// NewBlueprintKubernetesCreate instantiates a new BlueprintKubernetesCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlueprintKubernetesCreate(name string, type_ string, kubernetes BlueprintKubernetesCreateKubernetes, ) *BlueprintKubernetesCreate {
	this := BlueprintKubernetesCreate{}
	this.Name = name
	this.Type = type_
	this.Kubernetes = kubernetes
	return &this
}

// NewBlueprintKubernetesCreateWithDefaults instantiates a new BlueprintKubernetesCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlueprintKubernetesCreateWithDefaults() *BlueprintKubernetesCreate {
	this := BlueprintKubernetesCreate{}
	return &this
}

// GetName returns the Name field value
func (o *BlueprintKubernetesCreate) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BlueprintKubernetesCreate) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BlueprintKubernetesCreate) SetName(v string) {
	o.Name = v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *BlueprintKubernetesCreate) GetImage() string {
	if o == nil || o.Image == nil {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintKubernetesCreate) GetImageOk() (*string, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *BlueprintKubernetesCreate) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *BlueprintKubernetesCreate) SetImage(v string) {
	o.Image = &v
}

// GetType returns the Type field value
func (o *BlueprintKubernetesCreate) GetType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *BlueprintKubernetesCreate) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *BlueprintKubernetesCreate) SetType(v string) {
	o.Type = v
}

// GetLabels returns the Labels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BlueprintKubernetesCreate) GetLabels() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BlueprintKubernetesCreate) GetLabelsOk() (*[]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return &o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *BlueprintKubernetesCreate) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *BlueprintKubernetesCreate) SetLabels(v []string) {
	o.Labels = v
}

// GetKubernetes returns the Kubernetes field value
func (o *BlueprintKubernetesCreate) GetKubernetes() BlueprintKubernetesCreateKubernetes {
	if o == nil  {
		var ret BlueprintKubernetesCreateKubernetes
		return ret
	}

	return o.Kubernetes
}

// GetKubernetesOk returns a tuple with the Kubernetes field value
// and a boolean to check if the value has been set.
func (o *BlueprintKubernetesCreate) GetKubernetesOk() (*BlueprintKubernetesCreateKubernetes, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Kubernetes, true
}

// SetKubernetes sets field value
func (o *BlueprintKubernetesCreate) SetKubernetes(v BlueprintKubernetesCreateKubernetes) {
	o.Kubernetes = v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *BlueprintKubernetesCreate) GetConfig() BlueprintKubernetesCreateConfig {
	if o == nil || o.Config == nil {
		var ret BlueprintKubernetesCreateConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintKubernetesCreate) GetConfigOk() (*BlueprintKubernetesCreateConfig, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *BlueprintKubernetesCreate) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given BlueprintKubernetesCreateConfig and assigns it to the Config field.
func (o *BlueprintKubernetesCreate) SetConfig(v BlueprintKubernetesCreateConfig) {
	o.Config = &v
}

func (o BlueprintKubernetesCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if true {
		toSerialize["kubernetes"] = o.Kubernetes
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	return json.Marshal(toSerialize)
}

type NullableBlueprintKubernetesCreate struct {
	value *BlueprintKubernetesCreate
	isSet bool
}

func (v NullableBlueprintKubernetesCreate) Get() *BlueprintKubernetesCreate {
	return v.value
}

func (v *NullableBlueprintKubernetesCreate) Set(val *BlueprintKubernetesCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableBlueprintKubernetesCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableBlueprintKubernetesCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlueprintKubernetesCreate(val *BlueprintKubernetesCreate) *NullableBlueprintKubernetesCreate {
	return &NullableBlueprintKubernetesCreate{value: val, isSet: true}
}

func (v NullableBlueprintKubernetesCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlueprintKubernetesCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


