/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ZoneStatsServerCounts struct for ZoneStatsServerCounts
type ZoneStatsServerCounts struct {
	All *int64 `json:"all,omitempty"`
	Host *int64 `json:"host,omitempty"`
	Hypervisor *int64 `json:"hypervisor,omitempty"`
	ContainerHost *int64 `json:"containerHost,omitempty"`
	Vm *int64 `json:"vm,omitempty"`
	Baremetal *int64 `json:"baremetal,omitempty"`
	Unmanaged *int64 `json:"unmanaged,omitempty"`
}

// NewZoneStatsServerCounts instantiates a new ZoneStatsServerCounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZoneStatsServerCounts() *ZoneStatsServerCounts {
	this := ZoneStatsServerCounts{}
	return &this
}

// NewZoneStatsServerCountsWithDefaults instantiates a new ZoneStatsServerCounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneStatsServerCountsWithDefaults() *ZoneStatsServerCounts {
	this := ZoneStatsServerCounts{}
	return &this
}

// GetAll returns the All field value if set, zero value otherwise.
func (o *ZoneStatsServerCounts) GetAll() int64 {
	if o == nil || o.All == nil {
		var ret int64
		return ret
	}
	return *o.All
}

// GetAllOk returns a tuple with the All field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneStatsServerCounts) GetAllOk() (*int64, bool) {
	if o == nil || o.All == nil {
		return nil, false
	}
	return o.All, true
}

// HasAll returns a boolean if a field has been set.
func (o *ZoneStatsServerCounts) HasAll() bool {
	if o != nil && o.All != nil {
		return true
	}

	return false
}

// SetAll gets a reference to the given int64 and assigns it to the All field.
func (o *ZoneStatsServerCounts) SetAll(v int64) {
	o.All = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *ZoneStatsServerCounts) GetHost() int64 {
	if o == nil || o.Host == nil {
		var ret int64
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneStatsServerCounts) GetHostOk() (*int64, bool) {
	if o == nil || o.Host == nil {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *ZoneStatsServerCounts) HasHost() bool {
	if o != nil && o.Host != nil {
		return true
	}

	return false
}

// SetHost gets a reference to the given int64 and assigns it to the Host field.
func (o *ZoneStatsServerCounts) SetHost(v int64) {
	o.Host = &v
}

// GetHypervisor returns the Hypervisor field value if set, zero value otherwise.
func (o *ZoneStatsServerCounts) GetHypervisor() int64 {
	if o == nil || o.Hypervisor == nil {
		var ret int64
		return ret
	}
	return *o.Hypervisor
}

// GetHypervisorOk returns a tuple with the Hypervisor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneStatsServerCounts) GetHypervisorOk() (*int64, bool) {
	if o == nil || o.Hypervisor == nil {
		return nil, false
	}
	return o.Hypervisor, true
}

// HasHypervisor returns a boolean if a field has been set.
func (o *ZoneStatsServerCounts) HasHypervisor() bool {
	if o != nil && o.Hypervisor != nil {
		return true
	}

	return false
}

// SetHypervisor gets a reference to the given int64 and assigns it to the Hypervisor field.
func (o *ZoneStatsServerCounts) SetHypervisor(v int64) {
	o.Hypervisor = &v
}

// GetContainerHost returns the ContainerHost field value if set, zero value otherwise.
func (o *ZoneStatsServerCounts) GetContainerHost() int64 {
	if o == nil || o.ContainerHost == nil {
		var ret int64
		return ret
	}
	return *o.ContainerHost
}

// GetContainerHostOk returns a tuple with the ContainerHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneStatsServerCounts) GetContainerHostOk() (*int64, bool) {
	if o == nil || o.ContainerHost == nil {
		return nil, false
	}
	return o.ContainerHost, true
}

// HasContainerHost returns a boolean if a field has been set.
func (o *ZoneStatsServerCounts) HasContainerHost() bool {
	if o != nil && o.ContainerHost != nil {
		return true
	}

	return false
}

// SetContainerHost gets a reference to the given int64 and assigns it to the ContainerHost field.
func (o *ZoneStatsServerCounts) SetContainerHost(v int64) {
	o.ContainerHost = &v
}

// GetVm returns the Vm field value if set, zero value otherwise.
func (o *ZoneStatsServerCounts) GetVm() int64 {
	if o == nil || o.Vm == nil {
		var ret int64
		return ret
	}
	return *o.Vm
}

// GetVmOk returns a tuple with the Vm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneStatsServerCounts) GetVmOk() (*int64, bool) {
	if o == nil || o.Vm == nil {
		return nil, false
	}
	return o.Vm, true
}

// HasVm returns a boolean if a field has been set.
func (o *ZoneStatsServerCounts) HasVm() bool {
	if o != nil && o.Vm != nil {
		return true
	}

	return false
}

// SetVm gets a reference to the given int64 and assigns it to the Vm field.
func (o *ZoneStatsServerCounts) SetVm(v int64) {
	o.Vm = &v
}

// GetBaremetal returns the Baremetal field value if set, zero value otherwise.
func (o *ZoneStatsServerCounts) GetBaremetal() int64 {
	if o == nil || o.Baremetal == nil {
		var ret int64
		return ret
	}
	return *o.Baremetal
}

// GetBaremetalOk returns a tuple with the Baremetal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneStatsServerCounts) GetBaremetalOk() (*int64, bool) {
	if o == nil || o.Baremetal == nil {
		return nil, false
	}
	return o.Baremetal, true
}

// HasBaremetal returns a boolean if a field has been set.
func (o *ZoneStatsServerCounts) HasBaremetal() bool {
	if o != nil && o.Baremetal != nil {
		return true
	}

	return false
}

// SetBaremetal gets a reference to the given int64 and assigns it to the Baremetal field.
func (o *ZoneStatsServerCounts) SetBaremetal(v int64) {
	o.Baremetal = &v
}

// GetUnmanaged returns the Unmanaged field value if set, zero value otherwise.
func (o *ZoneStatsServerCounts) GetUnmanaged() int64 {
	if o == nil || o.Unmanaged == nil {
		var ret int64
		return ret
	}
	return *o.Unmanaged
}

// GetUnmanagedOk returns a tuple with the Unmanaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneStatsServerCounts) GetUnmanagedOk() (*int64, bool) {
	if o == nil || o.Unmanaged == nil {
		return nil, false
	}
	return o.Unmanaged, true
}

// HasUnmanaged returns a boolean if a field has been set.
func (o *ZoneStatsServerCounts) HasUnmanaged() bool {
	if o != nil && o.Unmanaged != nil {
		return true
	}

	return false
}

// SetUnmanaged gets a reference to the given int64 and assigns it to the Unmanaged field.
func (o *ZoneStatsServerCounts) SetUnmanaged(v int64) {
	o.Unmanaged = &v
}

func (o ZoneStatsServerCounts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.All != nil {
		toSerialize["all"] = o.All
	}
	if o.Host != nil {
		toSerialize["host"] = o.Host
	}
	if o.Hypervisor != nil {
		toSerialize["hypervisor"] = o.Hypervisor
	}
	if o.ContainerHost != nil {
		toSerialize["containerHost"] = o.ContainerHost
	}
	if o.Vm != nil {
		toSerialize["vm"] = o.Vm
	}
	if o.Baremetal != nil {
		toSerialize["baremetal"] = o.Baremetal
	}
	if o.Unmanaged != nil {
		toSerialize["unmanaged"] = o.Unmanaged
	}
	return json.Marshal(toSerialize)
}

type NullableZoneStatsServerCounts struct {
	value *ZoneStatsServerCounts
	isSet bool
}

func (v NullableZoneStatsServerCounts) Get() *ZoneStatsServerCounts {
	return v.value
}

func (v *NullableZoneStatsServerCounts) Set(val *ZoneStatsServerCounts) {
	v.value = val
	v.isSet = true
}

func (v NullableZoneStatsServerCounts) IsSet() bool {
	return v.isSet
}

func (v *NullableZoneStatsServerCounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZoneStatsServerCounts(val *ZoneStatsServerCounts) *NullableZoneStatsServerCounts {
	return &NullableZoneStatsServerCounts{value: val, isSet: true}
}

func (v NullableZoneStatsServerCounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZoneStatsServerCounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


