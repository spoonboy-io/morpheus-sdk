/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiEnvironmentsEnvironment Payload for creating a new environment
type ApiEnvironmentsEnvironment struct {
	// A unique name for the environment
	Name string `json:"name"`
	// A unique code for the environment
	Code string `json:"code"`
	// A description of the environment
	Description *string `json:"description,omitempty"`
	// private or public
	Visibility *string `json:"visibility,omitempty"`
	// Sort order
	SortOrder *int64 `json:"sortOrder,omitempty"`
}

// NewApiEnvironmentsEnvironment instantiates a new ApiEnvironmentsEnvironment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiEnvironmentsEnvironment(name string, code string, ) *ApiEnvironmentsEnvironment {
	this := ApiEnvironmentsEnvironment{}
	this.Name = name
	this.Code = code
	var visibility string = "private"
	this.Visibility = &visibility
	var sortOrder int64 = 0
	this.SortOrder = &sortOrder
	return &this
}

// NewApiEnvironmentsEnvironmentWithDefaults instantiates a new ApiEnvironmentsEnvironment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiEnvironmentsEnvironmentWithDefaults() *ApiEnvironmentsEnvironment {
	this := ApiEnvironmentsEnvironment{}
	var visibility string = "private"
	this.Visibility = &visibility
	var sortOrder int64 = 0
	this.SortOrder = &sortOrder
	return &this
}

// GetName returns the Name field value
func (o *ApiEnvironmentsEnvironment) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApiEnvironmentsEnvironment) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApiEnvironmentsEnvironment) SetName(v string) {
	o.Name = v
}

// GetCode returns the Code field value
func (o *ApiEnvironmentsEnvironment) GetCode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *ApiEnvironmentsEnvironment) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *ApiEnvironmentsEnvironment) SetCode(v string) {
	o.Code = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiEnvironmentsEnvironment) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEnvironmentsEnvironment) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiEnvironmentsEnvironment) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiEnvironmentsEnvironment) SetDescription(v string) {
	o.Description = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *ApiEnvironmentsEnvironment) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEnvironmentsEnvironment) GetVisibilityOk() (*string, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *ApiEnvironmentsEnvironment) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *ApiEnvironmentsEnvironment) SetVisibility(v string) {
	o.Visibility = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *ApiEnvironmentsEnvironment) GetSortOrder() int64 {
	if o == nil || o.SortOrder == nil {
		var ret int64
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEnvironmentsEnvironment) GetSortOrderOk() (*int64, bool) {
	if o == nil || o.SortOrder == nil {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *ApiEnvironmentsEnvironment) HasSortOrder() bool {
	if o != nil && o.SortOrder != nil {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given int64 and assigns it to the SortOrder field.
func (o *ApiEnvironmentsEnvironment) SetSortOrder(v int64) {
	o.SortOrder = &v
}

func (o ApiEnvironmentsEnvironment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["code"] = o.Code
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if o.SortOrder != nil {
		toSerialize["sortOrder"] = o.SortOrder
	}
	return json.Marshal(toSerialize)
}

type NullableApiEnvironmentsEnvironment struct {
	value *ApiEnvironmentsEnvironment
	isSet bool
}

func (v NullableApiEnvironmentsEnvironment) Get() *ApiEnvironmentsEnvironment {
	return v.value
}

func (v *NullableApiEnvironmentsEnvironment) Set(val *ApiEnvironmentsEnvironment) {
	v.value = val
	v.isSet = true
}

func (v NullableApiEnvironmentsEnvironment) IsSet() bool {
	return v.isSet
}

func (v *NullableApiEnvironmentsEnvironment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiEnvironmentsEnvironment(val *ApiEnvironmentsEnvironment) *NullableApiEnvironmentsEnvironment {
	return &NullableApiEnvironmentsEnvironment{value: val, isSet: true}
}

func (v NullableApiEnvironmentsEnvironment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiEnvironmentsEnvironment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


