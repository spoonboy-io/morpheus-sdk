/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiServicePlansIdServicePlan struct for ApiServicePlansIdServicePlan
type ApiServicePlansIdServicePlan struct {
	// Service plan name
	Name *string `json:"name,omitempty"`
	// Service plan code, must be unique
	Code *string `json:"code,omitempty"`
	// Service plan description
	Description *string `json:"description,omitempty"`
	// Can be used to enable / disable the editability of the service plan.
	Editable *bool `json:"editable,omitempty"`
	// Max storage size in bytes
	MaxStorage *float32 `json:"maxStorage,omitempty"`
	// Max memory size in bytes
	MaxMemory *float32 `json:"maxMemory,omitempty"`
	// Max cores
	MaxCores *float32 `json:"maxCores,omitempty"`
	// Max disks allowed
	MaxDisks *float32 `json:"maxDisks,omitempty"`
	ProvisionType *[]ApiServicePlansIdServicePlanProvisionType `json:"provisionType,omitempty"`
	// Can be used to enable / disable customizable cores
	CustomCores *bool `json:"customCores,omitempty"`
	// Can be used to enable / disable customizable storage
	CustomMaxStorage *bool `json:"customMaxStorage,omitempty"`
	// Can be used to enable / disable customizable extra volumes.
	CustomMaxDataStorage *bool `json:"customMaxDataStorage,omitempty"`
	// Can be used to enable / disable customizable memory.
	CustomMaxMemory *bool `json:"customMaxMemory,omitempty"`
	// Can be used to enable / disable ability to add volumes
	AddVolumes *bool `json:"addVolumes,omitempty"`
	// Sort order
	SortOrder *float32 `json:"sortOrder,omitempty"`
	// List of price sets to include in service plan
	PriceSets *[]int64 `json:"priceSets,omitempty"`
	Config *ApiServicePlansIdServicePlanConfig `json:"config,omitempty"`
}

// NewApiServicePlansIdServicePlan instantiates a new ApiServicePlansIdServicePlan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiServicePlansIdServicePlan() *ApiServicePlansIdServicePlan {
	this := ApiServicePlansIdServicePlan{}
	var editable bool = true
	this.Editable = &editable
	var customCores bool = false
	this.CustomCores = &customCores
	var customMaxStorage bool = false
	this.CustomMaxStorage = &customMaxStorage
	var customMaxDataStorage bool = false
	this.CustomMaxDataStorage = &customMaxDataStorage
	var customMaxMemory bool = false
	this.CustomMaxMemory = &customMaxMemory
	var addVolumes bool = false
	this.AddVolumes = &addVolumes
	return &this
}

// NewApiServicePlansIdServicePlanWithDefaults instantiates a new ApiServicePlansIdServicePlan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiServicePlansIdServicePlanWithDefaults() *ApiServicePlansIdServicePlan {
	this := ApiServicePlansIdServicePlan{}
	var editable bool = true
	this.Editable = &editable
	var customCores bool = false
	this.CustomCores = &customCores
	var customMaxStorage bool = false
	this.CustomMaxStorage = &customMaxStorage
	var customMaxDataStorage bool = false
	this.CustomMaxDataStorage = &customMaxDataStorage
	var customMaxMemory bool = false
	this.CustomMaxMemory = &customMaxMemory
	var addVolumes bool = false
	this.AddVolumes = &addVolumes
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiServicePlansIdServicePlan) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServicePlansIdServicePlan) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiServicePlansIdServicePlan) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiServicePlansIdServicePlan) SetName(v string) {
	o.Name = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ApiServicePlansIdServicePlan) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServicePlansIdServicePlan) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ApiServicePlansIdServicePlan) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ApiServicePlansIdServicePlan) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiServicePlansIdServicePlan) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServicePlansIdServicePlan) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiServicePlansIdServicePlan) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiServicePlansIdServicePlan) SetDescription(v string) {
	o.Description = &v
}

// GetEditable returns the Editable field value if set, zero value otherwise.
func (o *ApiServicePlansIdServicePlan) GetEditable() bool {
	if o == nil || o.Editable == nil {
		var ret bool
		return ret
	}
	return *o.Editable
}

// GetEditableOk returns a tuple with the Editable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServicePlansIdServicePlan) GetEditableOk() (*bool, bool) {
	if o == nil || o.Editable == nil {
		return nil, false
	}
	return o.Editable, true
}

// HasEditable returns a boolean if a field has been set.
func (o *ApiServicePlansIdServicePlan) HasEditable() bool {
	if o != nil && o.Editable != nil {
		return true
	}

	return false
}

// SetEditable gets a reference to the given bool and assigns it to the Editable field.
func (o *ApiServicePlansIdServicePlan) SetEditable(v bool) {
	o.Editable = &v
}

// GetMaxStorage returns the MaxStorage field value if set, zero value otherwise.
func (o *ApiServicePlansIdServicePlan) GetMaxStorage() float32 {
	if o == nil || o.MaxStorage == nil {
		var ret float32
		return ret
	}
	return *o.MaxStorage
}

// GetMaxStorageOk returns a tuple with the MaxStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServicePlansIdServicePlan) GetMaxStorageOk() (*float32, bool) {
	if o == nil || o.MaxStorage == nil {
		return nil, false
	}
	return o.MaxStorage, true
}

// HasMaxStorage returns a boolean if a field has been set.
func (o *ApiServicePlansIdServicePlan) HasMaxStorage() bool {
	if o != nil && o.MaxStorage != nil {
		return true
	}

	return false
}

// SetMaxStorage gets a reference to the given float32 and assigns it to the MaxStorage field.
func (o *ApiServicePlansIdServicePlan) SetMaxStorage(v float32) {
	o.MaxStorage = &v
}

// GetMaxMemory returns the MaxMemory field value if set, zero value otherwise.
func (o *ApiServicePlansIdServicePlan) GetMaxMemory() float32 {
	if o == nil || o.MaxMemory == nil {
		var ret float32
		return ret
	}
	return *o.MaxMemory
}

// GetMaxMemoryOk returns a tuple with the MaxMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServicePlansIdServicePlan) GetMaxMemoryOk() (*float32, bool) {
	if o == nil || o.MaxMemory == nil {
		return nil, false
	}
	return o.MaxMemory, true
}

// HasMaxMemory returns a boolean if a field has been set.
func (o *ApiServicePlansIdServicePlan) HasMaxMemory() bool {
	if o != nil && o.MaxMemory != nil {
		return true
	}

	return false
}

// SetMaxMemory gets a reference to the given float32 and assigns it to the MaxMemory field.
func (o *ApiServicePlansIdServicePlan) SetMaxMemory(v float32) {
	o.MaxMemory = &v
}

// GetMaxCores returns the MaxCores field value if set, zero value otherwise.
func (o *ApiServicePlansIdServicePlan) GetMaxCores() float32 {
	if o == nil || o.MaxCores == nil {
		var ret float32
		return ret
	}
	return *o.MaxCores
}

// GetMaxCoresOk returns a tuple with the MaxCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServicePlansIdServicePlan) GetMaxCoresOk() (*float32, bool) {
	if o == nil || o.MaxCores == nil {
		return nil, false
	}
	return o.MaxCores, true
}

// HasMaxCores returns a boolean if a field has been set.
func (o *ApiServicePlansIdServicePlan) HasMaxCores() bool {
	if o != nil && o.MaxCores != nil {
		return true
	}

	return false
}

// SetMaxCores gets a reference to the given float32 and assigns it to the MaxCores field.
func (o *ApiServicePlansIdServicePlan) SetMaxCores(v float32) {
	o.MaxCores = &v
}

// GetMaxDisks returns the MaxDisks field value if set, zero value otherwise.
func (o *ApiServicePlansIdServicePlan) GetMaxDisks() float32 {
	if o == nil || o.MaxDisks == nil {
		var ret float32
		return ret
	}
	return *o.MaxDisks
}

// GetMaxDisksOk returns a tuple with the MaxDisks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServicePlansIdServicePlan) GetMaxDisksOk() (*float32, bool) {
	if o == nil || o.MaxDisks == nil {
		return nil, false
	}
	return o.MaxDisks, true
}

// HasMaxDisks returns a boolean if a field has been set.
func (o *ApiServicePlansIdServicePlan) HasMaxDisks() bool {
	if o != nil && o.MaxDisks != nil {
		return true
	}

	return false
}

// SetMaxDisks gets a reference to the given float32 and assigns it to the MaxDisks field.
func (o *ApiServicePlansIdServicePlan) SetMaxDisks(v float32) {
	o.MaxDisks = &v
}

// GetProvisionType returns the ProvisionType field value if set, zero value otherwise.
func (o *ApiServicePlansIdServicePlan) GetProvisionType() []ApiServicePlansIdServicePlanProvisionType {
	if o == nil || o.ProvisionType == nil {
		var ret []ApiServicePlansIdServicePlanProvisionType
		return ret
	}
	return *o.ProvisionType
}

// GetProvisionTypeOk returns a tuple with the ProvisionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServicePlansIdServicePlan) GetProvisionTypeOk() (*[]ApiServicePlansIdServicePlanProvisionType, bool) {
	if o == nil || o.ProvisionType == nil {
		return nil, false
	}
	return o.ProvisionType, true
}

// HasProvisionType returns a boolean if a field has been set.
func (o *ApiServicePlansIdServicePlan) HasProvisionType() bool {
	if o != nil && o.ProvisionType != nil {
		return true
	}

	return false
}

// SetProvisionType gets a reference to the given []ApiServicePlansIdServicePlanProvisionType and assigns it to the ProvisionType field.
func (o *ApiServicePlansIdServicePlan) SetProvisionType(v []ApiServicePlansIdServicePlanProvisionType) {
	o.ProvisionType = &v
}

// GetCustomCores returns the CustomCores field value if set, zero value otherwise.
func (o *ApiServicePlansIdServicePlan) GetCustomCores() bool {
	if o == nil || o.CustomCores == nil {
		var ret bool
		return ret
	}
	return *o.CustomCores
}

// GetCustomCoresOk returns a tuple with the CustomCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServicePlansIdServicePlan) GetCustomCoresOk() (*bool, bool) {
	if o == nil || o.CustomCores == nil {
		return nil, false
	}
	return o.CustomCores, true
}

// HasCustomCores returns a boolean if a field has been set.
func (o *ApiServicePlansIdServicePlan) HasCustomCores() bool {
	if o != nil && o.CustomCores != nil {
		return true
	}

	return false
}

// SetCustomCores gets a reference to the given bool and assigns it to the CustomCores field.
func (o *ApiServicePlansIdServicePlan) SetCustomCores(v bool) {
	o.CustomCores = &v
}

// GetCustomMaxStorage returns the CustomMaxStorage field value if set, zero value otherwise.
func (o *ApiServicePlansIdServicePlan) GetCustomMaxStorage() bool {
	if o == nil || o.CustomMaxStorage == nil {
		var ret bool
		return ret
	}
	return *o.CustomMaxStorage
}

// GetCustomMaxStorageOk returns a tuple with the CustomMaxStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServicePlansIdServicePlan) GetCustomMaxStorageOk() (*bool, bool) {
	if o == nil || o.CustomMaxStorage == nil {
		return nil, false
	}
	return o.CustomMaxStorage, true
}

// HasCustomMaxStorage returns a boolean if a field has been set.
func (o *ApiServicePlansIdServicePlan) HasCustomMaxStorage() bool {
	if o != nil && o.CustomMaxStorage != nil {
		return true
	}

	return false
}

// SetCustomMaxStorage gets a reference to the given bool and assigns it to the CustomMaxStorage field.
func (o *ApiServicePlansIdServicePlan) SetCustomMaxStorage(v bool) {
	o.CustomMaxStorage = &v
}

// GetCustomMaxDataStorage returns the CustomMaxDataStorage field value if set, zero value otherwise.
func (o *ApiServicePlansIdServicePlan) GetCustomMaxDataStorage() bool {
	if o == nil || o.CustomMaxDataStorage == nil {
		var ret bool
		return ret
	}
	return *o.CustomMaxDataStorage
}

// GetCustomMaxDataStorageOk returns a tuple with the CustomMaxDataStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServicePlansIdServicePlan) GetCustomMaxDataStorageOk() (*bool, bool) {
	if o == nil || o.CustomMaxDataStorage == nil {
		return nil, false
	}
	return o.CustomMaxDataStorage, true
}

// HasCustomMaxDataStorage returns a boolean if a field has been set.
func (o *ApiServicePlansIdServicePlan) HasCustomMaxDataStorage() bool {
	if o != nil && o.CustomMaxDataStorage != nil {
		return true
	}

	return false
}

// SetCustomMaxDataStorage gets a reference to the given bool and assigns it to the CustomMaxDataStorage field.
func (o *ApiServicePlansIdServicePlan) SetCustomMaxDataStorage(v bool) {
	o.CustomMaxDataStorage = &v
}

// GetCustomMaxMemory returns the CustomMaxMemory field value if set, zero value otherwise.
func (o *ApiServicePlansIdServicePlan) GetCustomMaxMemory() bool {
	if o == nil || o.CustomMaxMemory == nil {
		var ret bool
		return ret
	}
	return *o.CustomMaxMemory
}

// GetCustomMaxMemoryOk returns a tuple with the CustomMaxMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServicePlansIdServicePlan) GetCustomMaxMemoryOk() (*bool, bool) {
	if o == nil || o.CustomMaxMemory == nil {
		return nil, false
	}
	return o.CustomMaxMemory, true
}

// HasCustomMaxMemory returns a boolean if a field has been set.
func (o *ApiServicePlansIdServicePlan) HasCustomMaxMemory() bool {
	if o != nil && o.CustomMaxMemory != nil {
		return true
	}

	return false
}

// SetCustomMaxMemory gets a reference to the given bool and assigns it to the CustomMaxMemory field.
func (o *ApiServicePlansIdServicePlan) SetCustomMaxMemory(v bool) {
	o.CustomMaxMemory = &v
}

// GetAddVolumes returns the AddVolumes field value if set, zero value otherwise.
func (o *ApiServicePlansIdServicePlan) GetAddVolumes() bool {
	if o == nil || o.AddVolumes == nil {
		var ret bool
		return ret
	}
	return *o.AddVolumes
}

// GetAddVolumesOk returns a tuple with the AddVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServicePlansIdServicePlan) GetAddVolumesOk() (*bool, bool) {
	if o == nil || o.AddVolumes == nil {
		return nil, false
	}
	return o.AddVolumes, true
}

// HasAddVolumes returns a boolean if a field has been set.
func (o *ApiServicePlansIdServicePlan) HasAddVolumes() bool {
	if o != nil && o.AddVolumes != nil {
		return true
	}

	return false
}

// SetAddVolumes gets a reference to the given bool and assigns it to the AddVolumes field.
func (o *ApiServicePlansIdServicePlan) SetAddVolumes(v bool) {
	o.AddVolumes = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *ApiServicePlansIdServicePlan) GetSortOrder() float32 {
	if o == nil || o.SortOrder == nil {
		var ret float32
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServicePlansIdServicePlan) GetSortOrderOk() (*float32, bool) {
	if o == nil || o.SortOrder == nil {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *ApiServicePlansIdServicePlan) HasSortOrder() bool {
	if o != nil && o.SortOrder != nil {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given float32 and assigns it to the SortOrder field.
func (o *ApiServicePlansIdServicePlan) SetSortOrder(v float32) {
	o.SortOrder = &v
}

// GetPriceSets returns the PriceSets field value if set, zero value otherwise.
func (o *ApiServicePlansIdServicePlan) GetPriceSets() []int64 {
	if o == nil || o.PriceSets == nil {
		var ret []int64
		return ret
	}
	return *o.PriceSets
}

// GetPriceSetsOk returns a tuple with the PriceSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServicePlansIdServicePlan) GetPriceSetsOk() (*[]int64, bool) {
	if o == nil || o.PriceSets == nil {
		return nil, false
	}
	return o.PriceSets, true
}

// HasPriceSets returns a boolean if a field has been set.
func (o *ApiServicePlansIdServicePlan) HasPriceSets() bool {
	if o != nil && o.PriceSets != nil {
		return true
	}

	return false
}

// SetPriceSets gets a reference to the given []int64 and assigns it to the PriceSets field.
func (o *ApiServicePlansIdServicePlan) SetPriceSets(v []int64) {
	o.PriceSets = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *ApiServicePlansIdServicePlan) GetConfig() ApiServicePlansIdServicePlanConfig {
	if o == nil || o.Config == nil {
		var ret ApiServicePlansIdServicePlanConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServicePlansIdServicePlan) GetConfigOk() (*ApiServicePlansIdServicePlanConfig, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *ApiServicePlansIdServicePlan) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given ApiServicePlansIdServicePlanConfig and assigns it to the Config field.
func (o *ApiServicePlansIdServicePlan) SetConfig(v ApiServicePlansIdServicePlanConfig) {
	o.Config = &v
}

func (o ApiServicePlansIdServicePlan) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Editable != nil {
		toSerialize["editable"] = o.Editable
	}
	if o.MaxStorage != nil {
		toSerialize["maxStorage"] = o.MaxStorage
	}
	if o.MaxMemory != nil {
		toSerialize["maxMemory"] = o.MaxMemory
	}
	if o.MaxCores != nil {
		toSerialize["maxCores"] = o.MaxCores
	}
	if o.MaxDisks != nil {
		toSerialize["maxDisks"] = o.MaxDisks
	}
	if o.ProvisionType != nil {
		toSerialize["provisionType"] = o.ProvisionType
	}
	if o.CustomCores != nil {
		toSerialize["customCores"] = o.CustomCores
	}
	if o.CustomMaxStorage != nil {
		toSerialize["customMaxStorage"] = o.CustomMaxStorage
	}
	if o.CustomMaxDataStorage != nil {
		toSerialize["customMaxDataStorage"] = o.CustomMaxDataStorage
	}
	if o.CustomMaxMemory != nil {
		toSerialize["customMaxMemory"] = o.CustomMaxMemory
	}
	if o.AddVolumes != nil {
		toSerialize["addVolumes"] = o.AddVolumes
	}
	if o.SortOrder != nil {
		toSerialize["sortOrder"] = o.SortOrder
	}
	if o.PriceSets != nil {
		toSerialize["priceSets"] = o.PriceSets
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	return json.Marshal(toSerialize)
}

type NullableApiServicePlansIdServicePlan struct {
	value *ApiServicePlansIdServicePlan
	isSet bool
}

func (v NullableApiServicePlansIdServicePlan) Get() *ApiServicePlansIdServicePlan {
	return v.value
}

func (v *NullableApiServicePlansIdServicePlan) Set(val *ApiServicePlansIdServicePlan) {
	v.value = val
	v.isSet = true
}

func (v NullableApiServicePlansIdServicePlan) IsSet() bool {
	return v.isSet
}

func (v *NullableApiServicePlansIdServicePlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiServicePlansIdServicePlan(val *ApiServicePlansIdServicePlan) *NullableApiServicePlansIdServicePlan {
	return &NullableApiServicePlansIdServicePlan{value: val, isSet: true}
}

func (v NullableApiServicePlansIdServicePlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiServicePlansIdServicePlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


