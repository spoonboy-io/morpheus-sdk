/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ServicePlanConfigRanges struct for ServicePlanConfigRanges
type ServicePlanConfigRanges struct {
	MinStorage NullableString `json:"minStorage,omitempty"`
	MaxStorage NullableString `json:"maxStorage,omitempty"`
	MinPerDiskSize NullableString `json:"minPerDiskSize,omitempty"`
	MaxPerDiskSize NullableString `json:"maxPerDiskSize,omitempty"`
	MinMemory NullableFloat32 `json:"minMemory,omitempty"`
	MaxMemory NullableFloat32 `json:"maxMemory,omitempty"`
	MinCores NullableString `json:"minCores,omitempty"`
	MaxCores NullableString `json:"maxCores,omitempty"`
	MinSockets NullableString `json:"minSockets,omitempty"`
	MaxSockets NullableString `json:"maxSockets,omitempty"`
	MinCoresPerSocket NullableString `json:"minCoresPerSocket,omitempty"`
	MaxCoresPerSocket NullableString `json:"maxCoresPerSocket,omitempty"`
}

// NewServicePlanConfigRanges instantiates a new ServicePlanConfigRanges object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicePlanConfigRanges() *ServicePlanConfigRanges {
	this := ServicePlanConfigRanges{}
	return &this
}

// NewServicePlanConfigRangesWithDefaults instantiates a new ServicePlanConfigRanges object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicePlanConfigRangesWithDefaults() *ServicePlanConfigRanges {
	this := ServicePlanConfigRanges{}
	return &this
}

// GetMinStorage returns the MinStorage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServicePlanConfigRanges) GetMinStorage() string {
	if o == nil || o.MinStorage.Get() == nil {
		var ret string
		return ret
	}
	return *o.MinStorage.Get()
}

// GetMinStorageOk returns a tuple with the MinStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServicePlanConfigRanges) GetMinStorageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinStorage.Get(), o.MinStorage.IsSet()
}

// HasMinStorage returns a boolean if a field has been set.
func (o *ServicePlanConfigRanges) HasMinStorage() bool {
	if o != nil && o.MinStorage.IsSet() {
		return true
	}

	return false
}

// SetMinStorage gets a reference to the given NullableString and assigns it to the MinStorage field.
func (o *ServicePlanConfigRanges) SetMinStorage(v string) {
	o.MinStorage.Set(&v)
}
// SetMinStorageNil sets the value for MinStorage to be an explicit nil
func (o *ServicePlanConfigRanges) SetMinStorageNil() {
	o.MinStorage.Set(nil)
}

// UnsetMinStorage ensures that no value is present for MinStorage, not even an explicit nil
func (o *ServicePlanConfigRanges) UnsetMinStorage() {
	o.MinStorage.Unset()
}

// GetMaxStorage returns the MaxStorage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServicePlanConfigRanges) GetMaxStorage() string {
	if o == nil || o.MaxStorage.Get() == nil {
		var ret string
		return ret
	}
	return *o.MaxStorage.Get()
}

// GetMaxStorageOk returns a tuple with the MaxStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServicePlanConfigRanges) GetMaxStorageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxStorage.Get(), o.MaxStorage.IsSet()
}

// HasMaxStorage returns a boolean if a field has been set.
func (o *ServicePlanConfigRanges) HasMaxStorage() bool {
	if o != nil && o.MaxStorage.IsSet() {
		return true
	}

	return false
}

// SetMaxStorage gets a reference to the given NullableString and assigns it to the MaxStorage field.
func (o *ServicePlanConfigRanges) SetMaxStorage(v string) {
	o.MaxStorage.Set(&v)
}
// SetMaxStorageNil sets the value for MaxStorage to be an explicit nil
func (o *ServicePlanConfigRanges) SetMaxStorageNil() {
	o.MaxStorage.Set(nil)
}

// UnsetMaxStorage ensures that no value is present for MaxStorage, not even an explicit nil
func (o *ServicePlanConfigRanges) UnsetMaxStorage() {
	o.MaxStorage.Unset()
}

// GetMinPerDiskSize returns the MinPerDiskSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServicePlanConfigRanges) GetMinPerDiskSize() string {
	if o == nil || o.MinPerDiskSize.Get() == nil {
		var ret string
		return ret
	}
	return *o.MinPerDiskSize.Get()
}

// GetMinPerDiskSizeOk returns a tuple with the MinPerDiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServicePlanConfigRanges) GetMinPerDiskSizeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinPerDiskSize.Get(), o.MinPerDiskSize.IsSet()
}

// HasMinPerDiskSize returns a boolean if a field has been set.
func (o *ServicePlanConfigRanges) HasMinPerDiskSize() bool {
	if o != nil && o.MinPerDiskSize.IsSet() {
		return true
	}

	return false
}

// SetMinPerDiskSize gets a reference to the given NullableString and assigns it to the MinPerDiskSize field.
func (o *ServicePlanConfigRanges) SetMinPerDiskSize(v string) {
	o.MinPerDiskSize.Set(&v)
}
// SetMinPerDiskSizeNil sets the value for MinPerDiskSize to be an explicit nil
func (o *ServicePlanConfigRanges) SetMinPerDiskSizeNil() {
	o.MinPerDiskSize.Set(nil)
}

// UnsetMinPerDiskSize ensures that no value is present for MinPerDiskSize, not even an explicit nil
func (o *ServicePlanConfigRanges) UnsetMinPerDiskSize() {
	o.MinPerDiskSize.Unset()
}

// GetMaxPerDiskSize returns the MaxPerDiskSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServicePlanConfigRanges) GetMaxPerDiskSize() string {
	if o == nil || o.MaxPerDiskSize.Get() == nil {
		var ret string
		return ret
	}
	return *o.MaxPerDiskSize.Get()
}

// GetMaxPerDiskSizeOk returns a tuple with the MaxPerDiskSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServicePlanConfigRanges) GetMaxPerDiskSizeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxPerDiskSize.Get(), o.MaxPerDiskSize.IsSet()
}

// HasMaxPerDiskSize returns a boolean if a field has been set.
func (o *ServicePlanConfigRanges) HasMaxPerDiskSize() bool {
	if o != nil && o.MaxPerDiskSize.IsSet() {
		return true
	}

	return false
}

// SetMaxPerDiskSize gets a reference to the given NullableString and assigns it to the MaxPerDiskSize field.
func (o *ServicePlanConfigRanges) SetMaxPerDiskSize(v string) {
	o.MaxPerDiskSize.Set(&v)
}
// SetMaxPerDiskSizeNil sets the value for MaxPerDiskSize to be an explicit nil
func (o *ServicePlanConfigRanges) SetMaxPerDiskSizeNil() {
	o.MaxPerDiskSize.Set(nil)
}

// UnsetMaxPerDiskSize ensures that no value is present for MaxPerDiskSize, not even an explicit nil
func (o *ServicePlanConfigRanges) UnsetMaxPerDiskSize() {
	o.MaxPerDiskSize.Unset()
}

// GetMinMemory returns the MinMemory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServicePlanConfigRanges) GetMinMemory() float32 {
	if o == nil || o.MinMemory.Get() == nil {
		var ret float32
		return ret
	}
	return *o.MinMemory.Get()
}

// GetMinMemoryOk returns a tuple with the MinMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServicePlanConfigRanges) GetMinMemoryOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinMemory.Get(), o.MinMemory.IsSet()
}

// HasMinMemory returns a boolean if a field has been set.
func (o *ServicePlanConfigRanges) HasMinMemory() bool {
	if o != nil && o.MinMemory.IsSet() {
		return true
	}

	return false
}

// SetMinMemory gets a reference to the given NullableFloat32 and assigns it to the MinMemory field.
func (o *ServicePlanConfigRanges) SetMinMemory(v float32) {
	o.MinMemory.Set(&v)
}
// SetMinMemoryNil sets the value for MinMemory to be an explicit nil
func (o *ServicePlanConfigRanges) SetMinMemoryNil() {
	o.MinMemory.Set(nil)
}

// UnsetMinMemory ensures that no value is present for MinMemory, not even an explicit nil
func (o *ServicePlanConfigRanges) UnsetMinMemory() {
	o.MinMemory.Unset()
}

// GetMaxMemory returns the MaxMemory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServicePlanConfigRanges) GetMaxMemory() float32 {
	if o == nil || o.MaxMemory.Get() == nil {
		var ret float32
		return ret
	}
	return *o.MaxMemory.Get()
}

// GetMaxMemoryOk returns a tuple with the MaxMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServicePlanConfigRanges) GetMaxMemoryOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxMemory.Get(), o.MaxMemory.IsSet()
}

// HasMaxMemory returns a boolean if a field has been set.
func (o *ServicePlanConfigRanges) HasMaxMemory() bool {
	if o != nil && o.MaxMemory.IsSet() {
		return true
	}

	return false
}

// SetMaxMemory gets a reference to the given NullableFloat32 and assigns it to the MaxMemory field.
func (o *ServicePlanConfigRanges) SetMaxMemory(v float32) {
	o.MaxMemory.Set(&v)
}
// SetMaxMemoryNil sets the value for MaxMemory to be an explicit nil
func (o *ServicePlanConfigRanges) SetMaxMemoryNil() {
	o.MaxMemory.Set(nil)
}

// UnsetMaxMemory ensures that no value is present for MaxMemory, not even an explicit nil
func (o *ServicePlanConfigRanges) UnsetMaxMemory() {
	o.MaxMemory.Unset()
}

// GetMinCores returns the MinCores field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServicePlanConfigRanges) GetMinCores() string {
	if o == nil || o.MinCores.Get() == nil {
		var ret string
		return ret
	}
	return *o.MinCores.Get()
}

// GetMinCoresOk returns a tuple with the MinCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServicePlanConfigRanges) GetMinCoresOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinCores.Get(), o.MinCores.IsSet()
}

// HasMinCores returns a boolean if a field has been set.
func (o *ServicePlanConfigRanges) HasMinCores() bool {
	if o != nil && o.MinCores.IsSet() {
		return true
	}

	return false
}

// SetMinCores gets a reference to the given NullableString and assigns it to the MinCores field.
func (o *ServicePlanConfigRanges) SetMinCores(v string) {
	o.MinCores.Set(&v)
}
// SetMinCoresNil sets the value for MinCores to be an explicit nil
func (o *ServicePlanConfigRanges) SetMinCoresNil() {
	o.MinCores.Set(nil)
}

// UnsetMinCores ensures that no value is present for MinCores, not even an explicit nil
func (o *ServicePlanConfigRanges) UnsetMinCores() {
	o.MinCores.Unset()
}

// GetMaxCores returns the MaxCores field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServicePlanConfigRanges) GetMaxCores() string {
	if o == nil || o.MaxCores.Get() == nil {
		var ret string
		return ret
	}
	return *o.MaxCores.Get()
}

// GetMaxCoresOk returns a tuple with the MaxCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServicePlanConfigRanges) GetMaxCoresOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxCores.Get(), o.MaxCores.IsSet()
}

// HasMaxCores returns a boolean if a field has been set.
func (o *ServicePlanConfigRanges) HasMaxCores() bool {
	if o != nil && o.MaxCores.IsSet() {
		return true
	}

	return false
}

// SetMaxCores gets a reference to the given NullableString and assigns it to the MaxCores field.
func (o *ServicePlanConfigRanges) SetMaxCores(v string) {
	o.MaxCores.Set(&v)
}
// SetMaxCoresNil sets the value for MaxCores to be an explicit nil
func (o *ServicePlanConfigRanges) SetMaxCoresNil() {
	o.MaxCores.Set(nil)
}

// UnsetMaxCores ensures that no value is present for MaxCores, not even an explicit nil
func (o *ServicePlanConfigRanges) UnsetMaxCores() {
	o.MaxCores.Unset()
}

// GetMinSockets returns the MinSockets field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServicePlanConfigRanges) GetMinSockets() string {
	if o == nil || o.MinSockets.Get() == nil {
		var ret string
		return ret
	}
	return *o.MinSockets.Get()
}

// GetMinSocketsOk returns a tuple with the MinSockets field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServicePlanConfigRanges) GetMinSocketsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinSockets.Get(), o.MinSockets.IsSet()
}

// HasMinSockets returns a boolean if a field has been set.
func (o *ServicePlanConfigRanges) HasMinSockets() bool {
	if o != nil && o.MinSockets.IsSet() {
		return true
	}

	return false
}

// SetMinSockets gets a reference to the given NullableString and assigns it to the MinSockets field.
func (o *ServicePlanConfigRanges) SetMinSockets(v string) {
	o.MinSockets.Set(&v)
}
// SetMinSocketsNil sets the value for MinSockets to be an explicit nil
func (o *ServicePlanConfigRanges) SetMinSocketsNil() {
	o.MinSockets.Set(nil)
}

// UnsetMinSockets ensures that no value is present for MinSockets, not even an explicit nil
func (o *ServicePlanConfigRanges) UnsetMinSockets() {
	o.MinSockets.Unset()
}

// GetMaxSockets returns the MaxSockets field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServicePlanConfigRanges) GetMaxSockets() string {
	if o == nil || o.MaxSockets.Get() == nil {
		var ret string
		return ret
	}
	return *o.MaxSockets.Get()
}

// GetMaxSocketsOk returns a tuple with the MaxSockets field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServicePlanConfigRanges) GetMaxSocketsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxSockets.Get(), o.MaxSockets.IsSet()
}

// HasMaxSockets returns a boolean if a field has been set.
func (o *ServicePlanConfigRanges) HasMaxSockets() bool {
	if o != nil && o.MaxSockets.IsSet() {
		return true
	}

	return false
}

// SetMaxSockets gets a reference to the given NullableString and assigns it to the MaxSockets field.
func (o *ServicePlanConfigRanges) SetMaxSockets(v string) {
	o.MaxSockets.Set(&v)
}
// SetMaxSocketsNil sets the value for MaxSockets to be an explicit nil
func (o *ServicePlanConfigRanges) SetMaxSocketsNil() {
	o.MaxSockets.Set(nil)
}

// UnsetMaxSockets ensures that no value is present for MaxSockets, not even an explicit nil
func (o *ServicePlanConfigRanges) UnsetMaxSockets() {
	o.MaxSockets.Unset()
}

// GetMinCoresPerSocket returns the MinCoresPerSocket field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServicePlanConfigRanges) GetMinCoresPerSocket() string {
	if o == nil || o.MinCoresPerSocket.Get() == nil {
		var ret string
		return ret
	}
	return *o.MinCoresPerSocket.Get()
}

// GetMinCoresPerSocketOk returns a tuple with the MinCoresPerSocket field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServicePlanConfigRanges) GetMinCoresPerSocketOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinCoresPerSocket.Get(), o.MinCoresPerSocket.IsSet()
}

// HasMinCoresPerSocket returns a boolean if a field has been set.
func (o *ServicePlanConfigRanges) HasMinCoresPerSocket() bool {
	if o != nil && o.MinCoresPerSocket.IsSet() {
		return true
	}

	return false
}

// SetMinCoresPerSocket gets a reference to the given NullableString and assigns it to the MinCoresPerSocket field.
func (o *ServicePlanConfigRanges) SetMinCoresPerSocket(v string) {
	o.MinCoresPerSocket.Set(&v)
}
// SetMinCoresPerSocketNil sets the value for MinCoresPerSocket to be an explicit nil
func (o *ServicePlanConfigRanges) SetMinCoresPerSocketNil() {
	o.MinCoresPerSocket.Set(nil)
}

// UnsetMinCoresPerSocket ensures that no value is present for MinCoresPerSocket, not even an explicit nil
func (o *ServicePlanConfigRanges) UnsetMinCoresPerSocket() {
	o.MinCoresPerSocket.Unset()
}

// GetMaxCoresPerSocket returns the MaxCoresPerSocket field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServicePlanConfigRanges) GetMaxCoresPerSocket() string {
	if o == nil || o.MaxCoresPerSocket.Get() == nil {
		var ret string
		return ret
	}
	return *o.MaxCoresPerSocket.Get()
}

// GetMaxCoresPerSocketOk returns a tuple with the MaxCoresPerSocket field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServicePlanConfigRanges) GetMaxCoresPerSocketOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxCoresPerSocket.Get(), o.MaxCoresPerSocket.IsSet()
}

// HasMaxCoresPerSocket returns a boolean if a field has been set.
func (o *ServicePlanConfigRanges) HasMaxCoresPerSocket() bool {
	if o != nil && o.MaxCoresPerSocket.IsSet() {
		return true
	}

	return false
}

// SetMaxCoresPerSocket gets a reference to the given NullableString and assigns it to the MaxCoresPerSocket field.
func (o *ServicePlanConfigRanges) SetMaxCoresPerSocket(v string) {
	o.MaxCoresPerSocket.Set(&v)
}
// SetMaxCoresPerSocketNil sets the value for MaxCoresPerSocket to be an explicit nil
func (o *ServicePlanConfigRanges) SetMaxCoresPerSocketNil() {
	o.MaxCoresPerSocket.Set(nil)
}

// UnsetMaxCoresPerSocket ensures that no value is present for MaxCoresPerSocket, not even an explicit nil
func (o *ServicePlanConfigRanges) UnsetMaxCoresPerSocket() {
	o.MaxCoresPerSocket.Unset()
}

func (o ServicePlanConfigRanges) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MinStorage.IsSet() {
		toSerialize["minStorage"] = o.MinStorage.Get()
	}
	if o.MaxStorage.IsSet() {
		toSerialize["maxStorage"] = o.MaxStorage.Get()
	}
	if o.MinPerDiskSize.IsSet() {
		toSerialize["minPerDiskSize"] = o.MinPerDiskSize.Get()
	}
	if o.MaxPerDiskSize.IsSet() {
		toSerialize["maxPerDiskSize"] = o.MaxPerDiskSize.Get()
	}
	if o.MinMemory.IsSet() {
		toSerialize["minMemory"] = o.MinMemory.Get()
	}
	if o.MaxMemory.IsSet() {
		toSerialize["maxMemory"] = o.MaxMemory.Get()
	}
	if o.MinCores.IsSet() {
		toSerialize["minCores"] = o.MinCores.Get()
	}
	if o.MaxCores.IsSet() {
		toSerialize["maxCores"] = o.MaxCores.Get()
	}
	if o.MinSockets.IsSet() {
		toSerialize["minSockets"] = o.MinSockets.Get()
	}
	if o.MaxSockets.IsSet() {
		toSerialize["maxSockets"] = o.MaxSockets.Get()
	}
	if o.MinCoresPerSocket.IsSet() {
		toSerialize["minCoresPerSocket"] = o.MinCoresPerSocket.Get()
	}
	if o.MaxCoresPerSocket.IsSet() {
		toSerialize["maxCoresPerSocket"] = o.MaxCoresPerSocket.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableServicePlanConfigRanges struct {
	value *ServicePlanConfigRanges
	isSet bool
}

func (v NullableServicePlanConfigRanges) Get() *ServicePlanConfigRanges {
	return v.value
}

func (v *NullableServicePlanConfigRanges) Set(val *ServicePlanConfigRanges) {
	v.value = val
	v.isSet = true
}

func (v NullableServicePlanConfigRanges) IsSet() bool {
	return v.isSet
}

func (v *NullableServicePlanConfigRanges) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicePlanConfigRanges(val *ServicePlanConfigRanges) *NullableServicePlanConfigRanges {
	return &NullableServicePlanConfigRanges{value: val, isSet: true}
}

func (v NullableServicePlanConfigRanges) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicePlanConfigRanges) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


