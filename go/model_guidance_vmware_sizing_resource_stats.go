/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GuidanceVmwareSizingResourceStats struct for GuidanceVmwareSizingResourceStats
type GuidanceVmwareSizingResourceStats struct {
	Ts *string `json:"ts,omitempty"`
	FreeMemory NullableInt64 `json:"freeMemory,omitempty"`
	UsedMemory NullableInt64 `json:"usedMemory,omitempty"`
	FreeSwap NullableInt64 `json:"freeSwap,omitempty"`
	UsedSwap NullableInt64 `json:"usedSwap,omitempty"`
	CpuIdleTime NullableInt64 `json:"cpuIdleTime,omitempty"`
	CpuSystemTime NullableInt64 `json:"cpuSystemTime,omitempty"`
	CpuUserTime NullableInt64 `json:"cpuUserTime,omitempty"`
	CpuTotalTime NullableInt64 `json:"cpuTotalTime,omitempty"`
	CpuUsage NullableFloat32 `json:"cpuUsage,omitempty"`
	UsedStorage NullableInt64 `json:"usedStorage,omitempty"`
	ReservedStorage NullableInt64 `json:"reservedStorage,omitempty"`
	MaxStorage NullableInt64 `json:"maxStorage,omitempty"`
	NetTxUsage *int64 `json:"netTxUsage,omitempty"`
	NetRxUsage *int64 `json:"netRxUsage,omitempty"`
	NetworkBandwidth *int64 `json:"networkBandwidth,omitempty"`
}

// NewGuidanceVmwareSizingResourceStats instantiates a new GuidanceVmwareSizingResourceStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGuidanceVmwareSizingResourceStats() *GuidanceVmwareSizingResourceStats {
	this := GuidanceVmwareSizingResourceStats{}
	return &this
}

// NewGuidanceVmwareSizingResourceStatsWithDefaults instantiates a new GuidanceVmwareSizingResourceStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGuidanceVmwareSizingResourceStatsWithDefaults() *GuidanceVmwareSizingResourceStats {
	this := GuidanceVmwareSizingResourceStats{}
	return &this
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *GuidanceVmwareSizingResourceStats) GetTs() string {
	if o == nil || o.Ts == nil {
		var ret string
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceVmwareSizingResourceStats) GetTsOk() (*string, bool) {
	if o == nil || o.Ts == nil {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingResourceStats) HasTs() bool {
	if o != nil && o.Ts != nil {
		return true
	}

	return false
}

// SetTs gets a reference to the given string and assigns it to the Ts field.
func (o *GuidanceVmwareSizingResourceStats) SetTs(v string) {
	o.Ts = &v
}

// GetFreeMemory returns the FreeMemory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingResourceStats) GetFreeMemory() int64 {
	if o == nil || o.FreeMemory.Get() == nil {
		var ret int64
		return ret
	}
	return *o.FreeMemory.Get()
}

// GetFreeMemoryOk returns a tuple with the FreeMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingResourceStats) GetFreeMemoryOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FreeMemory.Get(), o.FreeMemory.IsSet()
}

// HasFreeMemory returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingResourceStats) HasFreeMemory() bool {
	if o != nil && o.FreeMemory.IsSet() {
		return true
	}

	return false
}

// SetFreeMemory gets a reference to the given NullableInt64 and assigns it to the FreeMemory field.
func (o *GuidanceVmwareSizingResourceStats) SetFreeMemory(v int64) {
	o.FreeMemory.Set(&v)
}
// SetFreeMemoryNil sets the value for FreeMemory to be an explicit nil
func (o *GuidanceVmwareSizingResourceStats) SetFreeMemoryNil() {
	o.FreeMemory.Set(nil)
}

// UnsetFreeMemory ensures that no value is present for FreeMemory, not even an explicit nil
func (o *GuidanceVmwareSizingResourceStats) UnsetFreeMemory() {
	o.FreeMemory.Unset()
}

// GetUsedMemory returns the UsedMemory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingResourceStats) GetUsedMemory() int64 {
	if o == nil || o.UsedMemory.Get() == nil {
		var ret int64
		return ret
	}
	return *o.UsedMemory.Get()
}

// GetUsedMemoryOk returns a tuple with the UsedMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingResourceStats) GetUsedMemoryOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UsedMemory.Get(), o.UsedMemory.IsSet()
}

// HasUsedMemory returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingResourceStats) HasUsedMemory() bool {
	if o != nil && o.UsedMemory.IsSet() {
		return true
	}

	return false
}

// SetUsedMemory gets a reference to the given NullableInt64 and assigns it to the UsedMemory field.
func (o *GuidanceVmwareSizingResourceStats) SetUsedMemory(v int64) {
	o.UsedMemory.Set(&v)
}
// SetUsedMemoryNil sets the value for UsedMemory to be an explicit nil
func (o *GuidanceVmwareSizingResourceStats) SetUsedMemoryNil() {
	o.UsedMemory.Set(nil)
}

// UnsetUsedMemory ensures that no value is present for UsedMemory, not even an explicit nil
func (o *GuidanceVmwareSizingResourceStats) UnsetUsedMemory() {
	o.UsedMemory.Unset()
}

// GetFreeSwap returns the FreeSwap field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingResourceStats) GetFreeSwap() int64 {
	if o == nil || o.FreeSwap.Get() == nil {
		var ret int64
		return ret
	}
	return *o.FreeSwap.Get()
}

// GetFreeSwapOk returns a tuple with the FreeSwap field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingResourceStats) GetFreeSwapOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FreeSwap.Get(), o.FreeSwap.IsSet()
}

// HasFreeSwap returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingResourceStats) HasFreeSwap() bool {
	if o != nil && o.FreeSwap.IsSet() {
		return true
	}

	return false
}

// SetFreeSwap gets a reference to the given NullableInt64 and assigns it to the FreeSwap field.
func (o *GuidanceVmwareSizingResourceStats) SetFreeSwap(v int64) {
	o.FreeSwap.Set(&v)
}
// SetFreeSwapNil sets the value for FreeSwap to be an explicit nil
func (o *GuidanceVmwareSizingResourceStats) SetFreeSwapNil() {
	o.FreeSwap.Set(nil)
}

// UnsetFreeSwap ensures that no value is present for FreeSwap, not even an explicit nil
func (o *GuidanceVmwareSizingResourceStats) UnsetFreeSwap() {
	o.FreeSwap.Unset()
}

// GetUsedSwap returns the UsedSwap field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingResourceStats) GetUsedSwap() int64 {
	if o == nil || o.UsedSwap.Get() == nil {
		var ret int64
		return ret
	}
	return *o.UsedSwap.Get()
}

// GetUsedSwapOk returns a tuple with the UsedSwap field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingResourceStats) GetUsedSwapOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UsedSwap.Get(), o.UsedSwap.IsSet()
}

// HasUsedSwap returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingResourceStats) HasUsedSwap() bool {
	if o != nil && o.UsedSwap.IsSet() {
		return true
	}

	return false
}

// SetUsedSwap gets a reference to the given NullableInt64 and assigns it to the UsedSwap field.
func (o *GuidanceVmwareSizingResourceStats) SetUsedSwap(v int64) {
	o.UsedSwap.Set(&v)
}
// SetUsedSwapNil sets the value for UsedSwap to be an explicit nil
func (o *GuidanceVmwareSizingResourceStats) SetUsedSwapNil() {
	o.UsedSwap.Set(nil)
}

// UnsetUsedSwap ensures that no value is present for UsedSwap, not even an explicit nil
func (o *GuidanceVmwareSizingResourceStats) UnsetUsedSwap() {
	o.UsedSwap.Unset()
}

// GetCpuIdleTime returns the CpuIdleTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingResourceStats) GetCpuIdleTime() int64 {
	if o == nil || o.CpuIdleTime.Get() == nil {
		var ret int64
		return ret
	}
	return *o.CpuIdleTime.Get()
}

// GetCpuIdleTimeOk returns a tuple with the CpuIdleTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingResourceStats) GetCpuIdleTimeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuIdleTime.Get(), o.CpuIdleTime.IsSet()
}

// HasCpuIdleTime returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingResourceStats) HasCpuIdleTime() bool {
	if o != nil && o.CpuIdleTime.IsSet() {
		return true
	}

	return false
}

// SetCpuIdleTime gets a reference to the given NullableInt64 and assigns it to the CpuIdleTime field.
func (o *GuidanceVmwareSizingResourceStats) SetCpuIdleTime(v int64) {
	o.CpuIdleTime.Set(&v)
}
// SetCpuIdleTimeNil sets the value for CpuIdleTime to be an explicit nil
func (o *GuidanceVmwareSizingResourceStats) SetCpuIdleTimeNil() {
	o.CpuIdleTime.Set(nil)
}

// UnsetCpuIdleTime ensures that no value is present for CpuIdleTime, not even an explicit nil
func (o *GuidanceVmwareSizingResourceStats) UnsetCpuIdleTime() {
	o.CpuIdleTime.Unset()
}

// GetCpuSystemTime returns the CpuSystemTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingResourceStats) GetCpuSystemTime() int64 {
	if o == nil || o.CpuSystemTime.Get() == nil {
		var ret int64
		return ret
	}
	return *o.CpuSystemTime.Get()
}

// GetCpuSystemTimeOk returns a tuple with the CpuSystemTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingResourceStats) GetCpuSystemTimeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuSystemTime.Get(), o.CpuSystemTime.IsSet()
}

// HasCpuSystemTime returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingResourceStats) HasCpuSystemTime() bool {
	if o != nil && o.CpuSystemTime.IsSet() {
		return true
	}

	return false
}

// SetCpuSystemTime gets a reference to the given NullableInt64 and assigns it to the CpuSystemTime field.
func (o *GuidanceVmwareSizingResourceStats) SetCpuSystemTime(v int64) {
	o.CpuSystemTime.Set(&v)
}
// SetCpuSystemTimeNil sets the value for CpuSystemTime to be an explicit nil
func (o *GuidanceVmwareSizingResourceStats) SetCpuSystemTimeNil() {
	o.CpuSystemTime.Set(nil)
}

// UnsetCpuSystemTime ensures that no value is present for CpuSystemTime, not even an explicit nil
func (o *GuidanceVmwareSizingResourceStats) UnsetCpuSystemTime() {
	o.CpuSystemTime.Unset()
}

// GetCpuUserTime returns the CpuUserTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingResourceStats) GetCpuUserTime() int64 {
	if o == nil || o.CpuUserTime.Get() == nil {
		var ret int64
		return ret
	}
	return *o.CpuUserTime.Get()
}

// GetCpuUserTimeOk returns a tuple with the CpuUserTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingResourceStats) GetCpuUserTimeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuUserTime.Get(), o.CpuUserTime.IsSet()
}

// HasCpuUserTime returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingResourceStats) HasCpuUserTime() bool {
	if o != nil && o.CpuUserTime.IsSet() {
		return true
	}

	return false
}

// SetCpuUserTime gets a reference to the given NullableInt64 and assigns it to the CpuUserTime field.
func (o *GuidanceVmwareSizingResourceStats) SetCpuUserTime(v int64) {
	o.CpuUserTime.Set(&v)
}
// SetCpuUserTimeNil sets the value for CpuUserTime to be an explicit nil
func (o *GuidanceVmwareSizingResourceStats) SetCpuUserTimeNil() {
	o.CpuUserTime.Set(nil)
}

// UnsetCpuUserTime ensures that no value is present for CpuUserTime, not even an explicit nil
func (o *GuidanceVmwareSizingResourceStats) UnsetCpuUserTime() {
	o.CpuUserTime.Unset()
}

// GetCpuTotalTime returns the CpuTotalTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingResourceStats) GetCpuTotalTime() int64 {
	if o == nil || o.CpuTotalTime.Get() == nil {
		var ret int64
		return ret
	}
	return *o.CpuTotalTime.Get()
}

// GetCpuTotalTimeOk returns a tuple with the CpuTotalTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingResourceStats) GetCpuTotalTimeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuTotalTime.Get(), o.CpuTotalTime.IsSet()
}

// HasCpuTotalTime returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingResourceStats) HasCpuTotalTime() bool {
	if o != nil && o.CpuTotalTime.IsSet() {
		return true
	}

	return false
}

// SetCpuTotalTime gets a reference to the given NullableInt64 and assigns it to the CpuTotalTime field.
func (o *GuidanceVmwareSizingResourceStats) SetCpuTotalTime(v int64) {
	o.CpuTotalTime.Set(&v)
}
// SetCpuTotalTimeNil sets the value for CpuTotalTime to be an explicit nil
func (o *GuidanceVmwareSizingResourceStats) SetCpuTotalTimeNil() {
	o.CpuTotalTime.Set(nil)
}

// UnsetCpuTotalTime ensures that no value is present for CpuTotalTime, not even an explicit nil
func (o *GuidanceVmwareSizingResourceStats) UnsetCpuTotalTime() {
	o.CpuTotalTime.Unset()
}

// GetCpuUsage returns the CpuUsage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingResourceStats) GetCpuUsage() float32 {
	if o == nil || o.CpuUsage.Get() == nil {
		var ret float32
		return ret
	}
	return *o.CpuUsage.Get()
}

// GetCpuUsageOk returns a tuple with the CpuUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingResourceStats) GetCpuUsageOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CpuUsage.Get(), o.CpuUsage.IsSet()
}

// HasCpuUsage returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingResourceStats) HasCpuUsage() bool {
	if o != nil && o.CpuUsage.IsSet() {
		return true
	}

	return false
}

// SetCpuUsage gets a reference to the given NullableFloat32 and assigns it to the CpuUsage field.
func (o *GuidanceVmwareSizingResourceStats) SetCpuUsage(v float32) {
	o.CpuUsage.Set(&v)
}
// SetCpuUsageNil sets the value for CpuUsage to be an explicit nil
func (o *GuidanceVmwareSizingResourceStats) SetCpuUsageNil() {
	o.CpuUsage.Set(nil)
}

// UnsetCpuUsage ensures that no value is present for CpuUsage, not even an explicit nil
func (o *GuidanceVmwareSizingResourceStats) UnsetCpuUsage() {
	o.CpuUsage.Unset()
}

// GetUsedStorage returns the UsedStorage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingResourceStats) GetUsedStorage() int64 {
	if o == nil || o.UsedStorage.Get() == nil {
		var ret int64
		return ret
	}
	return *o.UsedStorage.Get()
}

// GetUsedStorageOk returns a tuple with the UsedStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingResourceStats) GetUsedStorageOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UsedStorage.Get(), o.UsedStorage.IsSet()
}

// HasUsedStorage returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingResourceStats) HasUsedStorage() bool {
	if o != nil && o.UsedStorage.IsSet() {
		return true
	}

	return false
}

// SetUsedStorage gets a reference to the given NullableInt64 and assigns it to the UsedStorage field.
func (o *GuidanceVmwareSizingResourceStats) SetUsedStorage(v int64) {
	o.UsedStorage.Set(&v)
}
// SetUsedStorageNil sets the value for UsedStorage to be an explicit nil
func (o *GuidanceVmwareSizingResourceStats) SetUsedStorageNil() {
	o.UsedStorage.Set(nil)
}

// UnsetUsedStorage ensures that no value is present for UsedStorage, not even an explicit nil
func (o *GuidanceVmwareSizingResourceStats) UnsetUsedStorage() {
	o.UsedStorage.Unset()
}

// GetReservedStorage returns the ReservedStorage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingResourceStats) GetReservedStorage() int64 {
	if o == nil || o.ReservedStorage.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ReservedStorage.Get()
}

// GetReservedStorageOk returns a tuple with the ReservedStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingResourceStats) GetReservedStorageOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReservedStorage.Get(), o.ReservedStorage.IsSet()
}

// HasReservedStorage returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingResourceStats) HasReservedStorage() bool {
	if o != nil && o.ReservedStorage.IsSet() {
		return true
	}

	return false
}

// SetReservedStorage gets a reference to the given NullableInt64 and assigns it to the ReservedStorage field.
func (o *GuidanceVmwareSizingResourceStats) SetReservedStorage(v int64) {
	o.ReservedStorage.Set(&v)
}
// SetReservedStorageNil sets the value for ReservedStorage to be an explicit nil
func (o *GuidanceVmwareSizingResourceStats) SetReservedStorageNil() {
	o.ReservedStorage.Set(nil)
}

// UnsetReservedStorage ensures that no value is present for ReservedStorage, not even an explicit nil
func (o *GuidanceVmwareSizingResourceStats) UnsetReservedStorage() {
	o.ReservedStorage.Unset()
}

// GetMaxStorage returns the MaxStorage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceVmwareSizingResourceStats) GetMaxStorage() int64 {
	if o == nil || o.MaxStorage.Get() == nil {
		var ret int64
		return ret
	}
	return *o.MaxStorage.Get()
}

// GetMaxStorageOk returns a tuple with the MaxStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceVmwareSizingResourceStats) GetMaxStorageOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxStorage.Get(), o.MaxStorage.IsSet()
}

// HasMaxStorage returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingResourceStats) HasMaxStorage() bool {
	if o != nil && o.MaxStorage.IsSet() {
		return true
	}

	return false
}

// SetMaxStorage gets a reference to the given NullableInt64 and assigns it to the MaxStorage field.
func (o *GuidanceVmwareSizingResourceStats) SetMaxStorage(v int64) {
	o.MaxStorage.Set(&v)
}
// SetMaxStorageNil sets the value for MaxStorage to be an explicit nil
func (o *GuidanceVmwareSizingResourceStats) SetMaxStorageNil() {
	o.MaxStorage.Set(nil)
}

// UnsetMaxStorage ensures that no value is present for MaxStorage, not even an explicit nil
func (o *GuidanceVmwareSizingResourceStats) UnsetMaxStorage() {
	o.MaxStorage.Unset()
}

// GetNetTxUsage returns the NetTxUsage field value if set, zero value otherwise.
func (o *GuidanceVmwareSizingResourceStats) GetNetTxUsage() int64 {
	if o == nil || o.NetTxUsage == nil {
		var ret int64
		return ret
	}
	return *o.NetTxUsage
}

// GetNetTxUsageOk returns a tuple with the NetTxUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceVmwareSizingResourceStats) GetNetTxUsageOk() (*int64, bool) {
	if o == nil || o.NetTxUsage == nil {
		return nil, false
	}
	return o.NetTxUsage, true
}

// HasNetTxUsage returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingResourceStats) HasNetTxUsage() bool {
	if o != nil && o.NetTxUsage != nil {
		return true
	}

	return false
}

// SetNetTxUsage gets a reference to the given int64 and assigns it to the NetTxUsage field.
func (o *GuidanceVmwareSizingResourceStats) SetNetTxUsage(v int64) {
	o.NetTxUsage = &v
}

// GetNetRxUsage returns the NetRxUsage field value if set, zero value otherwise.
func (o *GuidanceVmwareSizingResourceStats) GetNetRxUsage() int64 {
	if o == nil || o.NetRxUsage == nil {
		var ret int64
		return ret
	}
	return *o.NetRxUsage
}

// GetNetRxUsageOk returns a tuple with the NetRxUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceVmwareSizingResourceStats) GetNetRxUsageOk() (*int64, bool) {
	if o == nil || o.NetRxUsage == nil {
		return nil, false
	}
	return o.NetRxUsage, true
}

// HasNetRxUsage returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingResourceStats) HasNetRxUsage() bool {
	if o != nil && o.NetRxUsage != nil {
		return true
	}

	return false
}

// SetNetRxUsage gets a reference to the given int64 and assigns it to the NetRxUsage field.
func (o *GuidanceVmwareSizingResourceStats) SetNetRxUsage(v int64) {
	o.NetRxUsage = &v
}

// GetNetworkBandwidth returns the NetworkBandwidth field value if set, zero value otherwise.
func (o *GuidanceVmwareSizingResourceStats) GetNetworkBandwidth() int64 {
	if o == nil || o.NetworkBandwidth == nil {
		var ret int64
		return ret
	}
	return *o.NetworkBandwidth
}

// GetNetworkBandwidthOk returns a tuple with the NetworkBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceVmwareSizingResourceStats) GetNetworkBandwidthOk() (*int64, bool) {
	if o == nil || o.NetworkBandwidth == nil {
		return nil, false
	}
	return o.NetworkBandwidth, true
}

// HasNetworkBandwidth returns a boolean if a field has been set.
func (o *GuidanceVmwareSizingResourceStats) HasNetworkBandwidth() bool {
	if o != nil && o.NetworkBandwidth != nil {
		return true
	}

	return false
}

// SetNetworkBandwidth gets a reference to the given int64 and assigns it to the NetworkBandwidth field.
func (o *GuidanceVmwareSizingResourceStats) SetNetworkBandwidth(v int64) {
	o.NetworkBandwidth = &v
}

func (o GuidanceVmwareSizingResourceStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ts != nil {
		toSerialize["ts"] = o.Ts
	}
	if o.FreeMemory.IsSet() {
		toSerialize["freeMemory"] = o.FreeMemory.Get()
	}
	if o.UsedMemory.IsSet() {
		toSerialize["usedMemory"] = o.UsedMemory.Get()
	}
	if o.FreeSwap.IsSet() {
		toSerialize["freeSwap"] = o.FreeSwap.Get()
	}
	if o.UsedSwap.IsSet() {
		toSerialize["usedSwap"] = o.UsedSwap.Get()
	}
	if o.CpuIdleTime.IsSet() {
		toSerialize["cpuIdleTime"] = o.CpuIdleTime.Get()
	}
	if o.CpuSystemTime.IsSet() {
		toSerialize["cpuSystemTime"] = o.CpuSystemTime.Get()
	}
	if o.CpuUserTime.IsSet() {
		toSerialize["cpuUserTime"] = o.CpuUserTime.Get()
	}
	if o.CpuTotalTime.IsSet() {
		toSerialize["cpuTotalTime"] = o.CpuTotalTime.Get()
	}
	if o.CpuUsage.IsSet() {
		toSerialize["cpuUsage"] = o.CpuUsage.Get()
	}
	if o.UsedStorage.IsSet() {
		toSerialize["usedStorage"] = o.UsedStorage.Get()
	}
	if o.ReservedStorage.IsSet() {
		toSerialize["reservedStorage"] = o.ReservedStorage.Get()
	}
	if o.MaxStorage.IsSet() {
		toSerialize["maxStorage"] = o.MaxStorage.Get()
	}
	if o.NetTxUsage != nil {
		toSerialize["netTxUsage"] = o.NetTxUsage
	}
	if o.NetRxUsage != nil {
		toSerialize["netRxUsage"] = o.NetRxUsage
	}
	if o.NetworkBandwidth != nil {
		toSerialize["networkBandwidth"] = o.NetworkBandwidth
	}
	return json.Marshal(toSerialize)
}

type NullableGuidanceVmwareSizingResourceStats struct {
	value *GuidanceVmwareSizingResourceStats
	isSet bool
}

func (v NullableGuidanceVmwareSizingResourceStats) Get() *GuidanceVmwareSizingResourceStats {
	return v.value
}

func (v *NullableGuidanceVmwareSizingResourceStats) Set(val *GuidanceVmwareSizingResourceStats) {
	v.value = val
	v.isSet = true
}

func (v NullableGuidanceVmwareSizingResourceStats) IsSet() bool {
	return v.isSet
}

func (v *NullableGuidanceVmwareSizingResourceStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGuidanceVmwareSizingResourceStats(val *GuidanceVmwareSizingResourceStats) *NullableGuidanceVmwareSizingResourceStats {
	return &NullableGuidanceVmwareSizingResourceStats{value: val, isSet: true}
}

func (v NullableGuidanceVmwareSizingResourceStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGuidanceVmwareSizingResourceStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


