/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AppStateOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppStateOutput{}

// AppStateOutput struct for AppStateOutput
type AppStateOutput struct {
	Outputs []map[string]interface{} `json:"outputs,omitempty"`
}

// NewAppStateOutput instantiates a new AppStateOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppStateOutput() *AppStateOutput {
	this := AppStateOutput{}
	return &this
}

// NewAppStateOutputWithDefaults instantiates a new AppStateOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppStateOutputWithDefaults() *AppStateOutput {
	this := AppStateOutput{}
	return &this
}

// GetOutputs returns the Outputs field value if set, zero value otherwise.
func (o *AppStateOutput) GetOutputs() []map[string]interface{} {
	if o == nil || IsNil(o.Outputs) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Outputs
}

// GetOutputsOk returns a tuple with the Outputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStateOutput) GetOutputsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Outputs) {
		return nil, false
	}
	return o.Outputs, true
}

// HasOutputs returns a boolean if a field has been set.
func (o *AppStateOutput) HasOutputs() bool {
	if o != nil && !IsNil(o.Outputs) {
		return true
	}

	return false
}

// SetOutputs gets a reference to the given []map[string]interface{} and assigns it to the Outputs field.
func (o *AppStateOutput) SetOutputs(v []map[string]interface{}) {
	o.Outputs = v
}

func (o AppStateOutput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppStateOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Outputs) {
		toSerialize["outputs"] = o.Outputs
	}
	return toSerialize, nil
}

type NullableAppStateOutput struct {
	value *AppStateOutput
	isSet bool
}

func (v NullableAppStateOutput) Get() *AppStateOutput {
	return v.value
}

func (v *NullableAppStateOutput) Set(val *AppStateOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableAppStateOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableAppStateOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppStateOutput(val *AppStateOutput) *NullableAppStateOutput {
	return &NullableAppStateOutput{value: val, isSet: true}
}

func (v NullableAppStateOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppStateOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


