/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject106 struct for InlineObject106
type InlineObject106 struct {
	KeyPair ApiKeyPairsGenerateKeyPair `json:"keyPair"`
}

// NewInlineObject106 instantiates a new InlineObject106 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject106(keyPair ApiKeyPairsGenerateKeyPair, ) *InlineObject106 {
	this := InlineObject106{}
	this.KeyPair = keyPair
	return &this
}

// NewInlineObject106WithDefaults instantiates a new InlineObject106 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject106WithDefaults() *InlineObject106 {
	this := InlineObject106{}
	return &this
}

// GetKeyPair returns the KeyPair field value
func (o *InlineObject106) GetKeyPair() ApiKeyPairsGenerateKeyPair {
	if o == nil  {
		var ret ApiKeyPairsGenerateKeyPair
		return ret
	}

	return o.KeyPair
}

// GetKeyPairOk returns a tuple with the KeyPair field value
// and a boolean to check if the value has been set.
func (o *InlineObject106) GetKeyPairOk() (*ApiKeyPairsGenerateKeyPair, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.KeyPair, true
}

// SetKeyPair sets field value
func (o *InlineObject106) SetKeyPair(v ApiKeyPairsGenerateKeyPair) {
	o.KeyPair = v
}

func (o InlineObject106) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["keyPair"] = o.KeyPair
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject106 struct {
	value *InlineObject106
	isSet bool
}

func (v NullableInlineObject106) Get() *InlineObject106 {
	return v.value
}

func (v *NullableInlineObject106) Set(val *InlineObject106) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject106) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject106) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject106(val *InlineObject106) *NullableInlineObject106 {
	return &NullableInlineObject106{value: val, isSet: true}
}

func (v NullableInlineObject106) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject106) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


