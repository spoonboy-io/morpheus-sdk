/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiInstancesIdDeploysAppDeploy struct for ApiInstancesIdDeploysAppDeploy
type ApiInstancesIdDeploysAppDeploy struct {
	// Deployment ID.
	DeploymentId *int64 `json:"deploymentId,omitempty"`
	// Deployment Version number identifier (userVersion). Can be passed along with deploymentId to identify the version
	Version *string `json:"version,omitempty"`
	// Deployment Version ID. This can be passed instead of deploymentId and version.
	VersionId *int64 `json:"versionId,omitempty"`
	// Map of configuration properties that vary by instance type.
	Config *map[string]interface{} `json:"config,omitempty"`
	// Stage Only, do not run the deploy right away and instead set status to staged so it can be deployed later on.
	StageOnly *bool `json:"stageOnly,omitempty"`
}

// NewApiInstancesIdDeploysAppDeploy instantiates a new ApiInstancesIdDeploysAppDeploy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiInstancesIdDeploysAppDeploy() *ApiInstancesIdDeploysAppDeploy {
	this := ApiInstancesIdDeploysAppDeploy{}
	var stageOnly bool = false
	this.StageOnly = &stageOnly
	return &this
}

// NewApiInstancesIdDeploysAppDeployWithDefaults instantiates a new ApiInstancesIdDeploysAppDeploy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiInstancesIdDeploysAppDeployWithDefaults() *ApiInstancesIdDeploysAppDeploy {
	this := ApiInstancesIdDeploysAppDeploy{}
	var stageOnly bool = false
	this.StageOnly = &stageOnly
	return &this
}

// GetDeploymentId returns the DeploymentId field value if set, zero value otherwise.
func (o *ApiInstancesIdDeploysAppDeploy) GetDeploymentId() int64 {
	if o == nil || o.DeploymentId == nil {
		var ret int64
		return ret
	}
	return *o.DeploymentId
}

// GetDeploymentIdOk returns a tuple with the DeploymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInstancesIdDeploysAppDeploy) GetDeploymentIdOk() (*int64, bool) {
	if o == nil || o.DeploymentId == nil {
		return nil, false
	}
	return o.DeploymentId, true
}

// HasDeploymentId returns a boolean if a field has been set.
func (o *ApiInstancesIdDeploysAppDeploy) HasDeploymentId() bool {
	if o != nil && o.DeploymentId != nil {
		return true
	}

	return false
}

// SetDeploymentId gets a reference to the given int64 and assigns it to the DeploymentId field.
func (o *ApiInstancesIdDeploysAppDeploy) SetDeploymentId(v int64) {
	o.DeploymentId = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ApiInstancesIdDeploysAppDeploy) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInstancesIdDeploysAppDeploy) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ApiInstancesIdDeploysAppDeploy) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ApiInstancesIdDeploysAppDeploy) SetVersion(v string) {
	o.Version = &v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *ApiInstancesIdDeploysAppDeploy) GetVersionId() int64 {
	if o == nil || o.VersionId == nil {
		var ret int64
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInstancesIdDeploysAppDeploy) GetVersionIdOk() (*int64, bool) {
	if o == nil || o.VersionId == nil {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *ApiInstancesIdDeploysAppDeploy) HasVersionId() bool {
	if o != nil && o.VersionId != nil {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given int64 and assigns it to the VersionId field.
func (o *ApiInstancesIdDeploysAppDeploy) SetVersionId(v int64) {
	o.VersionId = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *ApiInstancesIdDeploysAppDeploy) GetConfig() map[string]interface{} {
	if o == nil || o.Config == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInstancesIdDeploysAppDeploy) GetConfigOk() (*map[string]interface{}, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *ApiInstancesIdDeploysAppDeploy) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *ApiInstancesIdDeploysAppDeploy) SetConfig(v map[string]interface{}) {
	o.Config = &v
}

// GetStageOnly returns the StageOnly field value if set, zero value otherwise.
func (o *ApiInstancesIdDeploysAppDeploy) GetStageOnly() bool {
	if o == nil || o.StageOnly == nil {
		var ret bool
		return ret
	}
	return *o.StageOnly
}

// GetStageOnlyOk returns a tuple with the StageOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiInstancesIdDeploysAppDeploy) GetStageOnlyOk() (*bool, bool) {
	if o == nil || o.StageOnly == nil {
		return nil, false
	}
	return o.StageOnly, true
}

// HasStageOnly returns a boolean if a field has been set.
func (o *ApiInstancesIdDeploysAppDeploy) HasStageOnly() bool {
	if o != nil && o.StageOnly != nil {
		return true
	}

	return false
}

// SetStageOnly gets a reference to the given bool and assigns it to the StageOnly field.
func (o *ApiInstancesIdDeploysAppDeploy) SetStageOnly(v bool) {
	o.StageOnly = &v
}

func (o ApiInstancesIdDeploysAppDeploy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeploymentId != nil {
		toSerialize["deploymentId"] = o.DeploymentId
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.VersionId != nil {
		toSerialize["versionId"] = o.VersionId
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.StageOnly != nil {
		toSerialize["stageOnly"] = o.StageOnly
	}
	return json.Marshal(toSerialize)
}

type NullableApiInstancesIdDeploysAppDeploy struct {
	value *ApiInstancesIdDeploysAppDeploy
	isSet bool
}

func (v NullableApiInstancesIdDeploysAppDeploy) Get() *ApiInstancesIdDeploysAppDeploy {
	return v.value
}

func (v *NullableApiInstancesIdDeploysAppDeploy) Set(val *ApiInstancesIdDeploysAppDeploy) {
	v.value = val
	v.isSet = true
}

func (v NullableApiInstancesIdDeploysAppDeploy) IsSet() bool {
	return v.isSet
}

func (v *NullableApiInstancesIdDeploysAppDeploy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiInstancesIdDeploysAppDeploy(val *ApiInstancesIdDeploysAppDeploy) *NullableApiInstancesIdDeploysAppDeploy {
	return &NullableApiInstancesIdDeploysAppDeploy{value: val, isSet: true}
}

func (v NullableApiInstancesIdDeploysAppDeploy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiInstancesIdDeploysAppDeploy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


