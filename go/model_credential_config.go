/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CredentialConfig struct for CredentialConfig
type CredentialConfig struct {
	ClientSecret NullableString `json:"clientSecret,omitempty"`
	ClientId NullableString `json:"clientId,omitempty"`
	ClientAuth *string `json:"clientAuth,omitempty"`
	Scope *string `json:"scope,omitempty"`
	GrantType *string `json:"grantType,omitempty"`
	AccessTokenUrl *string `json:"accessTokenUrl,omitempty"`
	ClientSecretHash NullableString `json:"clientSecretHash,omitempty"`
}

// NewCredentialConfig instantiates a new CredentialConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialConfig() *CredentialConfig {
	this := CredentialConfig{}
	return &this
}

// NewCredentialConfigWithDefaults instantiates a new CredentialConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialConfigWithDefaults() *CredentialConfig {
	this := CredentialConfig{}
	return &this
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CredentialConfig) GetClientSecret() string {
	if o == nil || o.ClientSecret.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClientSecret.Get()
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CredentialConfig) GetClientSecretOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClientSecret.Get(), o.ClientSecret.IsSet()
}

// HasClientSecret returns a boolean if a field has been set.
func (o *CredentialConfig) HasClientSecret() bool {
	if o != nil && o.ClientSecret.IsSet() {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given NullableString and assigns it to the ClientSecret field.
func (o *CredentialConfig) SetClientSecret(v string) {
	o.ClientSecret.Set(&v)
}
// SetClientSecretNil sets the value for ClientSecret to be an explicit nil
func (o *CredentialConfig) SetClientSecretNil() {
	o.ClientSecret.Set(nil)
}

// UnsetClientSecret ensures that no value is present for ClientSecret, not even an explicit nil
func (o *CredentialConfig) UnsetClientSecret() {
	o.ClientSecret.Unset()
}

// GetClientId returns the ClientId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CredentialConfig) GetClientId() string {
	if o == nil || o.ClientId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClientId.Get()
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CredentialConfig) GetClientIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClientId.Get(), o.ClientId.IsSet()
}

// HasClientId returns a boolean if a field has been set.
func (o *CredentialConfig) HasClientId() bool {
	if o != nil && o.ClientId.IsSet() {
		return true
	}

	return false
}

// SetClientId gets a reference to the given NullableString and assigns it to the ClientId field.
func (o *CredentialConfig) SetClientId(v string) {
	o.ClientId.Set(&v)
}
// SetClientIdNil sets the value for ClientId to be an explicit nil
func (o *CredentialConfig) SetClientIdNil() {
	o.ClientId.Set(nil)
}

// UnsetClientId ensures that no value is present for ClientId, not even an explicit nil
func (o *CredentialConfig) UnsetClientId() {
	o.ClientId.Unset()
}

// GetClientAuth returns the ClientAuth field value if set, zero value otherwise.
func (o *CredentialConfig) GetClientAuth() string {
	if o == nil || o.ClientAuth == nil {
		var ret string
		return ret
	}
	return *o.ClientAuth
}

// GetClientAuthOk returns a tuple with the ClientAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialConfig) GetClientAuthOk() (*string, bool) {
	if o == nil || o.ClientAuth == nil {
		return nil, false
	}
	return o.ClientAuth, true
}

// HasClientAuth returns a boolean if a field has been set.
func (o *CredentialConfig) HasClientAuth() bool {
	if o != nil && o.ClientAuth != nil {
		return true
	}

	return false
}

// SetClientAuth gets a reference to the given string and assigns it to the ClientAuth field.
func (o *CredentialConfig) SetClientAuth(v string) {
	o.ClientAuth = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *CredentialConfig) GetScope() string {
	if o == nil || o.Scope == nil {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialConfig) GetScopeOk() (*string, bool) {
	if o == nil || o.Scope == nil {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *CredentialConfig) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *CredentialConfig) SetScope(v string) {
	o.Scope = &v
}

// GetGrantType returns the GrantType field value if set, zero value otherwise.
func (o *CredentialConfig) GetGrantType() string {
	if o == nil || o.GrantType == nil {
		var ret string
		return ret
	}
	return *o.GrantType
}

// GetGrantTypeOk returns a tuple with the GrantType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialConfig) GetGrantTypeOk() (*string, bool) {
	if o == nil || o.GrantType == nil {
		return nil, false
	}
	return o.GrantType, true
}

// HasGrantType returns a boolean if a field has been set.
func (o *CredentialConfig) HasGrantType() bool {
	if o != nil && o.GrantType != nil {
		return true
	}

	return false
}

// SetGrantType gets a reference to the given string and assigns it to the GrantType field.
func (o *CredentialConfig) SetGrantType(v string) {
	o.GrantType = &v
}

// GetAccessTokenUrl returns the AccessTokenUrl field value if set, zero value otherwise.
func (o *CredentialConfig) GetAccessTokenUrl() string {
	if o == nil || o.AccessTokenUrl == nil {
		var ret string
		return ret
	}
	return *o.AccessTokenUrl
}

// GetAccessTokenUrlOk returns a tuple with the AccessTokenUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialConfig) GetAccessTokenUrlOk() (*string, bool) {
	if o == nil || o.AccessTokenUrl == nil {
		return nil, false
	}
	return o.AccessTokenUrl, true
}

// HasAccessTokenUrl returns a boolean if a field has been set.
func (o *CredentialConfig) HasAccessTokenUrl() bool {
	if o != nil && o.AccessTokenUrl != nil {
		return true
	}

	return false
}

// SetAccessTokenUrl gets a reference to the given string and assigns it to the AccessTokenUrl field.
func (o *CredentialConfig) SetAccessTokenUrl(v string) {
	o.AccessTokenUrl = &v
}

// GetClientSecretHash returns the ClientSecretHash field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CredentialConfig) GetClientSecretHash() string {
	if o == nil || o.ClientSecretHash.Get() == nil {
		var ret string
		return ret
	}
	return *o.ClientSecretHash.Get()
}

// GetClientSecretHashOk returns a tuple with the ClientSecretHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CredentialConfig) GetClientSecretHashOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ClientSecretHash.Get(), o.ClientSecretHash.IsSet()
}

// HasClientSecretHash returns a boolean if a field has been set.
func (o *CredentialConfig) HasClientSecretHash() bool {
	if o != nil && o.ClientSecretHash.IsSet() {
		return true
	}

	return false
}

// SetClientSecretHash gets a reference to the given NullableString and assigns it to the ClientSecretHash field.
func (o *CredentialConfig) SetClientSecretHash(v string) {
	o.ClientSecretHash.Set(&v)
}
// SetClientSecretHashNil sets the value for ClientSecretHash to be an explicit nil
func (o *CredentialConfig) SetClientSecretHashNil() {
	o.ClientSecretHash.Set(nil)
}

// UnsetClientSecretHash ensures that no value is present for ClientSecretHash, not even an explicit nil
func (o *CredentialConfig) UnsetClientSecretHash() {
	o.ClientSecretHash.Unset()
}

func (o CredentialConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientSecret.IsSet() {
		toSerialize["clientSecret"] = o.ClientSecret.Get()
	}
	if o.ClientId.IsSet() {
		toSerialize["clientId"] = o.ClientId.Get()
	}
	if o.ClientAuth != nil {
		toSerialize["clientAuth"] = o.ClientAuth
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	if o.GrantType != nil {
		toSerialize["grantType"] = o.GrantType
	}
	if o.AccessTokenUrl != nil {
		toSerialize["accessTokenUrl"] = o.AccessTokenUrl
	}
	if o.ClientSecretHash.IsSet() {
		toSerialize["clientSecretHash"] = o.ClientSecretHash.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCredentialConfig struct {
	value *CredentialConfig
	isSet bool
}

func (v NullableCredentialConfig) Get() *CredentialConfig {
	return v.value
}

func (v *NullableCredentialConfig) Set(val *CredentialConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialConfig(val *CredentialConfig) *NullableCredentialConfig {
	return &NullableCredentialConfig{value: val, isSet: true}
}

func (v NullableCredentialConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


