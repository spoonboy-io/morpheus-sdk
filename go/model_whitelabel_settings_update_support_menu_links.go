/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WhitelabelSettingsUpdateSupportMenuLinks struct for WhitelabelSettingsUpdateSupportMenuLinks
type WhitelabelSettingsUpdateSupportMenuLinks struct {
	Url string `json:"url"`
	Label string `json:"label"`
	LabelCode string `json:"labelCode"`
}

// NewWhitelabelSettingsUpdateSupportMenuLinks instantiates a new WhitelabelSettingsUpdateSupportMenuLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhitelabelSettingsUpdateSupportMenuLinks(url string, label string, labelCode string, ) *WhitelabelSettingsUpdateSupportMenuLinks {
	this := WhitelabelSettingsUpdateSupportMenuLinks{}
	this.Url = url
	this.Label = label
	this.LabelCode = labelCode
	return &this
}

// NewWhitelabelSettingsUpdateSupportMenuLinksWithDefaults instantiates a new WhitelabelSettingsUpdateSupportMenuLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhitelabelSettingsUpdateSupportMenuLinksWithDefaults() *WhitelabelSettingsUpdateSupportMenuLinks {
	this := WhitelabelSettingsUpdateSupportMenuLinks{}
	return &this
}

// GetUrl returns the Url field value
func (o *WhitelabelSettingsUpdateSupportMenuLinks) GetUrl() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *WhitelabelSettingsUpdateSupportMenuLinks) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *WhitelabelSettingsUpdateSupportMenuLinks) SetUrl(v string) {
	o.Url = v
}

// GetLabel returns the Label field value
func (o *WhitelabelSettingsUpdateSupportMenuLinks) GetLabel() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *WhitelabelSettingsUpdateSupportMenuLinks) GetLabelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *WhitelabelSettingsUpdateSupportMenuLinks) SetLabel(v string) {
	o.Label = v
}

// GetLabelCode returns the LabelCode field value
func (o *WhitelabelSettingsUpdateSupportMenuLinks) GetLabelCode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.LabelCode
}

// GetLabelCodeOk returns a tuple with the LabelCode field value
// and a boolean to check if the value has been set.
func (o *WhitelabelSettingsUpdateSupportMenuLinks) GetLabelCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LabelCode, true
}

// SetLabelCode sets field value
func (o *WhitelabelSettingsUpdateSupportMenuLinks) SetLabelCode(v string) {
	o.LabelCode = v
}

func (o WhitelabelSettingsUpdateSupportMenuLinks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["label"] = o.Label
	}
	if true {
		toSerialize["labelCode"] = o.LabelCode
	}
	return json.Marshal(toSerialize)
}

type NullableWhitelabelSettingsUpdateSupportMenuLinks struct {
	value *WhitelabelSettingsUpdateSupportMenuLinks
	isSet bool
}

func (v NullableWhitelabelSettingsUpdateSupportMenuLinks) Get() *WhitelabelSettingsUpdateSupportMenuLinks {
	return v.value
}

func (v *NullableWhitelabelSettingsUpdateSupportMenuLinks) Set(val *WhitelabelSettingsUpdateSupportMenuLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableWhitelabelSettingsUpdateSupportMenuLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableWhitelabelSettingsUpdateSupportMenuLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhitelabelSettingsUpdateSupportMenuLinks(val *WhitelabelSettingsUpdateSupportMenuLinks) *NullableWhitelabelSettingsUpdateSupportMenuLinks {
	return &NullableWhitelabelSettingsUpdateSupportMenuLinks{value: val, isSet: true}
}

func (v NullableWhitelabelSettingsUpdateSupportMenuLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhitelabelSettingsUpdateSupportMenuLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


