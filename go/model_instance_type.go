/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InstanceType struct for InstanceType
type InstanceType struct {
	Id *int64 `json:"id,omitempty"`
	Account *InlineResponse20040AppDeployInstance `json:"account,omitempty"`
	Name *string `json:"name,omitempty"`
	Labels []string `json:"labels,omitempty"`
	Code *string `json:"code,omitempty"`
	Description NullableString `json:"description,omitempty"`
	ProvisionTypeCode NullableString `json:"provisionTypeCode,omitempty"`
	Category *string `json:"category,omitempty"`
	Active *bool `json:"active,omitempty"`
	HasProvisioningStep *bool `json:"hasProvisioningStep,omitempty"`
	HasDeployment *bool `json:"hasDeployment,omitempty"`
	HasConfig *bool `json:"hasConfig,omitempty"`
	HasSettings *bool `json:"hasSettings,omitempty"`
	HasAutoScale *bool `json:"hasAutoScale,omitempty"`
	ProxyType NullableString `json:"proxyType,omitempty"`
	ProxyPort NullableString `json:"proxyPort,omitempty"`
	ProxyProtocol NullableString `json:"proxyProtocol,omitempty"`
	EnvironmentPrefix *string `json:"environmentPrefix,omitempty"`
	BackupType NullableString `json:"backupType,omitempty"`
	Config map[string]interface{} `json:"config,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	Featured *bool `json:"featured,omitempty"`
	Versions *[]string `json:"versions,omitempty"`
	InstanceTypeLayouts *[]InstanceTypeLayout `json:"instanceTypeLayouts,omitempty"`
	OptionTypes *[]OptionType `json:"optionTypes,omitempty"`
	EnvironmentVariables []map[string]interface{} `json:"environmentVariables,omitempty"`
	PriceSets []map[string]interface{} `json:"priceSets,omitempty"`
	// Logo image URL
	ImagePath NullableString `json:"imagePath,omitempty"`
	// Dark logo image URL
	DarkImagePath NullableString `json:"darkImagePath,omitempty"`
}

// NewInstanceType instantiates a new InstanceType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceType() *InstanceType {
	this := InstanceType{}
	return &this
}

// NewInstanceTypeWithDefaults instantiates a new InstanceType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceTypeWithDefaults() *InstanceType {
	this := InstanceType{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InstanceType) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InstanceType) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *InstanceType) SetId(v int64) {
	o.Id = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *InstanceType) GetAccount() InlineResponse20040AppDeployInstance {
	if o == nil || o.Account == nil {
		var ret InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetAccountOk() (*InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Account == nil {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *InstanceType) HasAccount() bool {
	if o != nil && o.Account != nil {
		return true
	}

	return false
}

// SetAccount gets a reference to the given InlineResponse20040AppDeployInstance and assigns it to the Account field.
func (o *InstanceType) SetAccount(v InlineResponse20040AppDeployInstance) {
	o.Account = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InstanceType) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InstanceType) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InstanceType) SetName(v string) {
	o.Name = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstanceType) GetLabels() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceType) GetLabelsOk() (*[]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return &o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *InstanceType) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *InstanceType) SetLabels(v []string) {
	o.Labels = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *InstanceType) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *InstanceType) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *InstanceType) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstanceType) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceType) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *InstanceType) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *InstanceType) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *InstanceType) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *InstanceType) UnsetDescription() {
	o.Description.Unset()
}

// GetProvisionTypeCode returns the ProvisionTypeCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstanceType) GetProvisionTypeCode() string {
	if o == nil || o.ProvisionTypeCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProvisionTypeCode.Get()
}

// GetProvisionTypeCodeOk returns a tuple with the ProvisionTypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceType) GetProvisionTypeCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProvisionTypeCode.Get(), o.ProvisionTypeCode.IsSet()
}

// HasProvisionTypeCode returns a boolean if a field has been set.
func (o *InstanceType) HasProvisionTypeCode() bool {
	if o != nil && o.ProvisionTypeCode.IsSet() {
		return true
	}

	return false
}

// SetProvisionTypeCode gets a reference to the given NullableString and assigns it to the ProvisionTypeCode field.
func (o *InstanceType) SetProvisionTypeCode(v string) {
	o.ProvisionTypeCode.Set(&v)
}
// SetProvisionTypeCodeNil sets the value for ProvisionTypeCode to be an explicit nil
func (o *InstanceType) SetProvisionTypeCodeNil() {
	o.ProvisionTypeCode.Set(nil)
}

// UnsetProvisionTypeCode ensures that no value is present for ProvisionTypeCode, not even an explicit nil
func (o *InstanceType) UnsetProvisionTypeCode() {
	o.ProvisionTypeCode.Unset()
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *InstanceType) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetCategoryOk() (*string, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *InstanceType) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *InstanceType) SetCategory(v string) {
	o.Category = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *InstanceType) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *InstanceType) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *InstanceType) SetActive(v bool) {
	o.Active = &v
}

// GetHasProvisioningStep returns the HasProvisioningStep field value if set, zero value otherwise.
func (o *InstanceType) GetHasProvisioningStep() bool {
	if o == nil || o.HasProvisioningStep == nil {
		var ret bool
		return ret
	}
	return *o.HasProvisioningStep
}

// GetHasProvisioningStepOk returns a tuple with the HasProvisioningStep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetHasProvisioningStepOk() (*bool, bool) {
	if o == nil || o.HasProvisioningStep == nil {
		return nil, false
	}
	return o.HasProvisioningStep, true
}

// HasHasProvisioningStep returns a boolean if a field has been set.
func (o *InstanceType) HasHasProvisioningStep() bool {
	if o != nil && o.HasProvisioningStep != nil {
		return true
	}

	return false
}

// SetHasProvisioningStep gets a reference to the given bool and assigns it to the HasProvisioningStep field.
func (o *InstanceType) SetHasProvisioningStep(v bool) {
	o.HasProvisioningStep = &v
}

// GetHasDeployment returns the HasDeployment field value if set, zero value otherwise.
func (o *InstanceType) GetHasDeployment() bool {
	if o == nil || o.HasDeployment == nil {
		var ret bool
		return ret
	}
	return *o.HasDeployment
}

// GetHasDeploymentOk returns a tuple with the HasDeployment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetHasDeploymentOk() (*bool, bool) {
	if o == nil || o.HasDeployment == nil {
		return nil, false
	}
	return o.HasDeployment, true
}

// HasHasDeployment returns a boolean if a field has been set.
func (o *InstanceType) HasHasDeployment() bool {
	if o != nil && o.HasDeployment != nil {
		return true
	}

	return false
}

// SetHasDeployment gets a reference to the given bool and assigns it to the HasDeployment field.
func (o *InstanceType) SetHasDeployment(v bool) {
	o.HasDeployment = &v
}

// GetHasConfig returns the HasConfig field value if set, zero value otherwise.
func (o *InstanceType) GetHasConfig() bool {
	if o == nil || o.HasConfig == nil {
		var ret bool
		return ret
	}
	return *o.HasConfig
}

// GetHasConfigOk returns a tuple with the HasConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetHasConfigOk() (*bool, bool) {
	if o == nil || o.HasConfig == nil {
		return nil, false
	}
	return o.HasConfig, true
}

// HasHasConfig returns a boolean if a field has been set.
func (o *InstanceType) HasHasConfig() bool {
	if o != nil && o.HasConfig != nil {
		return true
	}

	return false
}

// SetHasConfig gets a reference to the given bool and assigns it to the HasConfig field.
func (o *InstanceType) SetHasConfig(v bool) {
	o.HasConfig = &v
}

// GetHasSettings returns the HasSettings field value if set, zero value otherwise.
func (o *InstanceType) GetHasSettings() bool {
	if o == nil || o.HasSettings == nil {
		var ret bool
		return ret
	}
	return *o.HasSettings
}

// GetHasSettingsOk returns a tuple with the HasSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetHasSettingsOk() (*bool, bool) {
	if o == nil || o.HasSettings == nil {
		return nil, false
	}
	return o.HasSettings, true
}

// HasHasSettings returns a boolean if a field has been set.
func (o *InstanceType) HasHasSettings() bool {
	if o != nil && o.HasSettings != nil {
		return true
	}

	return false
}

// SetHasSettings gets a reference to the given bool and assigns it to the HasSettings field.
func (o *InstanceType) SetHasSettings(v bool) {
	o.HasSettings = &v
}

// GetHasAutoScale returns the HasAutoScale field value if set, zero value otherwise.
func (o *InstanceType) GetHasAutoScale() bool {
	if o == nil || o.HasAutoScale == nil {
		var ret bool
		return ret
	}
	return *o.HasAutoScale
}

// GetHasAutoScaleOk returns a tuple with the HasAutoScale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetHasAutoScaleOk() (*bool, bool) {
	if o == nil || o.HasAutoScale == nil {
		return nil, false
	}
	return o.HasAutoScale, true
}

// HasHasAutoScale returns a boolean if a field has been set.
func (o *InstanceType) HasHasAutoScale() bool {
	if o != nil && o.HasAutoScale != nil {
		return true
	}

	return false
}

// SetHasAutoScale gets a reference to the given bool and assigns it to the HasAutoScale field.
func (o *InstanceType) SetHasAutoScale(v bool) {
	o.HasAutoScale = &v
}

// GetProxyType returns the ProxyType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstanceType) GetProxyType() string {
	if o == nil || o.ProxyType.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProxyType.Get()
}

// GetProxyTypeOk returns a tuple with the ProxyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceType) GetProxyTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProxyType.Get(), o.ProxyType.IsSet()
}

// HasProxyType returns a boolean if a field has been set.
func (o *InstanceType) HasProxyType() bool {
	if o != nil && o.ProxyType.IsSet() {
		return true
	}

	return false
}

// SetProxyType gets a reference to the given NullableString and assigns it to the ProxyType field.
func (o *InstanceType) SetProxyType(v string) {
	o.ProxyType.Set(&v)
}
// SetProxyTypeNil sets the value for ProxyType to be an explicit nil
func (o *InstanceType) SetProxyTypeNil() {
	o.ProxyType.Set(nil)
}

// UnsetProxyType ensures that no value is present for ProxyType, not even an explicit nil
func (o *InstanceType) UnsetProxyType() {
	o.ProxyType.Unset()
}

// GetProxyPort returns the ProxyPort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstanceType) GetProxyPort() string {
	if o == nil || o.ProxyPort.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProxyPort.Get()
}

// GetProxyPortOk returns a tuple with the ProxyPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceType) GetProxyPortOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProxyPort.Get(), o.ProxyPort.IsSet()
}

// HasProxyPort returns a boolean if a field has been set.
func (o *InstanceType) HasProxyPort() bool {
	if o != nil && o.ProxyPort.IsSet() {
		return true
	}

	return false
}

// SetProxyPort gets a reference to the given NullableString and assigns it to the ProxyPort field.
func (o *InstanceType) SetProxyPort(v string) {
	o.ProxyPort.Set(&v)
}
// SetProxyPortNil sets the value for ProxyPort to be an explicit nil
func (o *InstanceType) SetProxyPortNil() {
	o.ProxyPort.Set(nil)
}

// UnsetProxyPort ensures that no value is present for ProxyPort, not even an explicit nil
func (o *InstanceType) UnsetProxyPort() {
	o.ProxyPort.Unset()
}

// GetProxyProtocol returns the ProxyProtocol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstanceType) GetProxyProtocol() string {
	if o == nil || o.ProxyProtocol.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProxyProtocol.Get()
}

// GetProxyProtocolOk returns a tuple with the ProxyProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceType) GetProxyProtocolOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProxyProtocol.Get(), o.ProxyProtocol.IsSet()
}

// HasProxyProtocol returns a boolean if a field has been set.
func (o *InstanceType) HasProxyProtocol() bool {
	if o != nil && o.ProxyProtocol.IsSet() {
		return true
	}

	return false
}

// SetProxyProtocol gets a reference to the given NullableString and assigns it to the ProxyProtocol field.
func (o *InstanceType) SetProxyProtocol(v string) {
	o.ProxyProtocol.Set(&v)
}
// SetProxyProtocolNil sets the value for ProxyProtocol to be an explicit nil
func (o *InstanceType) SetProxyProtocolNil() {
	o.ProxyProtocol.Set(nil)
}

// UnsetProxyProtocol ensures that no value is present for ProxyProtocol, not even an explicit nil
func (o *InstanceType) UnsetProxyProtocol() {
	o.ProxyProtocol.Unset()
}

// GetEnvironmentPrefix returns the EnvironmentPrefix field value if set, zero value otherwise.
func (o *InstanceType) GetEnvironmentPrefix() string {
	if o == nil || o.EnvironmentPrefix == nil {
		var ret string
		return ret
	}
	return *o.EnvironmentPrefix
}

// GetEnvironmentPrefixOk returns a tuple with the EnvironmentPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetEnvironmentPrefixOk() (*string, bool) {
	if o == nil || o.EnvironmentPrefix == nil {
		return nil, false
	}
	return o.EnvironmentPrefix, true
}

// HasEnvironmentPrefix returns a boolean if a field has been set.
func (o *InstanceType) HasEnvironmentPrefix() bool {
	if o != nil && o.EnvironmentPrefix != nil {
		return true
	}

	return false
}

// SetEnvironmentPrefix gets a reference to the given string and assigns it to the EnvironmentPrefix field.
func (o *InstanceType) SetEnvironmentPrefix(v string) {
	o.EnvironmentPrefix = &v
}

// GetBackupType returns the BackupType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstanceType) GetBackupType() string {
	if o == nil || o.BackupType.Get() == nil {
		var ret string
		return ret
	}
	return *o.BackupType.Get()
}

// GetBackupTypeOk returns a tuple with the BackupType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceType) GetBackupTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BackupType.Get(), o.BackupType.IsSet()
}

// HasBackupType returns a boolean if a field has been set.
func (o *InstanceType) HasBackupType() bool {
	if o != nil && o.BackupType.IsSet() {
		return true
	}

	return false
}

// SetBackupType gets a reference to the given NullableString and assigns it to the BackupType field.
func (o *InstanceType) SetBackupType(v string) {
	o.BackupType.Set(&v)
}
// SetBackupTypeNil sets the value for BackupType to be an explicit nil
func (o *InstanceType) SetBackupTypeNil() {
	o.BackupType.Set(nil)
}

// UnsetBackupType ensures that no value is present for BackupType, not even an explicit nil
func (o *InstanceType) UnsetBackupType() {
	o.BackupType.Unset()
}

// GetConfig returns the Config field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstanceType) GetConfig() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceType) GetConfigOk() (*map[string]interface{}, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return &o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *InstanceType) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *InstanceType) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *InstanceType) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetVisibilityOk() (*string, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *InstanceType) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *InstanceType) SetVisibility(v string) {
	o.Visibility = &v
}

// GetFeatured returns the Featured field value if set, zero value otherwise.
func (o *InstanceType) GetFeatured() bool {
	if o == nil || o.Featured == nil {
		var ret bool
		return ret
	}
	return *o.Featured
}

// GetFeaturedOk returns a tuple with the Featured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetFeaturedOk() (*bool, bool) {
	if o == nil || o.Featured == nil {
		return nil, false
	}
	return o.Featured, true
}

// HasFeatured returns a boolean if a field has been set.
func (o *InstanceType) HasFeatured() bool {
	if o != nil && o.Featured != nil {
		return true
	}

	return false
}

// SetFeatured gets a reference to the given bool and assigns it to the Featured field.
func (o *InstanceType) SetFeatured(v bool) {
	o.Featured = &v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *InstanceType) GetVersions() []string {
	if o == nil || o.Versions == nil {
		var ret []string
		return ret
	}
	return *o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetVersionsOk() (*[]string, bool) {
	if o == nil || o.Versions == nil {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *InstanceType) HasVersions() bool {
	if o != nil && o.Versions != nil {
		return true
	}

	return false
}

// SetVersions gets a reference to the given []string and assigns it to the Versions field.
func (o *InstanceType) SetVersions(v []string) {
	o.Versions = &v
}

// GetInstanceTypeLayouts returns the InstanceTypeLayouts field value if set, zero value otherwise.
func (o *InstanceType) GetInstanceTypeLayouts() []InstanceTypeLayout {
	if o == nil || o.InstanceTypeLayouts == nil {
		var ret []InstanceTypeLayout
		return ret
	}
	return *o.InstanceTypeLayouts
}

// GetInstanceTypeLayoutsOk returns a tuple with the InstanceTypeLayouts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetInstanceTypeLayoutsOk() (*[]InstanceTypeLayout, bool) {
	if o == nil || o.InstanceTypeLayouts == nil {
		return nil, false
	}
	return o.InstanceTypeLayouts, true
}

// HasInstanceTypeLayouts returns a boolean if a field has been set.
func (o *InstanceType) HasInstanceTypeLayouts() bool {
	if o != nil && o.InstanceTypeLayouts != nil {
		return true
	}

	return false
}

// SetInstanceTypeLayouts gets a reference to the given []InstanceTypeLayout and assigns it to the InstanceTypeLayouts field.
func (o *InstanceType) SetInstanceTypeLayouts(v []InstanceTypeLayout) {
	o.InstanceTypeLayouts = &v
}

// GetOptionTypes returns the OptionTypes field value if set, zero value otherwise.
func (o *InstanceType) GetOptionTypes() []OptionType {
	if o == nil || o.OptionTypes == nil {
		var ret []OptionType
		return ret
	}
	return *o.OptionTypes
}

// GetOptionTypesOk returns a tuple with the OptionTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceType) GetOptionTypesOk() (*[]OptionType, bool) {
	if o == nil || o.OptionTypes == nil {
		return nil, false
	}
	return o.OptionTypes, true
}

// HasOptionTypes returns a boolean if a field has been set.
func (o *InstanceType) HasOptionTypes() bool {
	if o != nil && o.OptionTypes != nil {
		return true
	}

	return false
}

// SetOptionTypes gets a reference to the given []OptionType and assigns it to the OptionTypes field.
func (o *InstanceType) SetOptionTypes(v []OptionType) {
	o.OptionTypes = &v
}

// GetEnvironmentVariables returns the EnvironmentVariables field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstanceType) GetEnvironmentVariables() []map[string]interface{} {
	if o == nil  {
		var ret []map[string]interface{}
		return ret
	}
	return o.EnvironmentVariables
}

// GetEnvironmentVariablesOk returns a tuple with the EnvironmentVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceType) GetEnvironmentVariablesOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.EnvironmentVariables == nil {
		return nil, false
	}
	return &o.EnvironmentVariables, true
}

// HasEnvironmentVariables returns a boolean if a field has been set.
func (o *InstanceType) HasEnvironmentVariables() bool {
	if o != nil && o.EnvironmentVariables != nil {
		return true
	}

	return false
}

// SetEnvironmentVariables gets a reference to the given []map[string]interface{} and assigns it to the EnvironmentVariables field.
func (o *InstanceType) SetEnvironmentVariables(v []map[string]interface{}) {
	o.EnvironmentVariables = v
}

// GetPriceSets returns the PriceSets field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstanceType) GetPriceSets() []map[string]interface{} {
	if o == nil  {
		var ret []map[string]interface{}
		return ret
	}
	return o.PriceSets
}

// GetPriceSetsOk returns a tuple with the PriceSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceType) GetPriceSetsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.PriceSets == nil {
		return nil, false
	}
	return &o.PriceSets, true
}

// HasPriceSets returns a boolean if a field has been set.
func (o *InstanceType) HasPriceSets() bool {
	if o != nil && o.PriceSets != nil {
		return true
	}

	return false
}

// SetPriceSets gets a reference to the given []map[string]interface{} and assigns it to the PriceSets field.
func (o *InstanceType) SetPriceSets(v []map[string]interface{}) {
	o.PriceSets = v
}

// GetImagePath returns the ImagePath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstanceType) GetImagePath() string {
	if o == nil || o.ImagePath.Get() == nil {
		var ret string
		return ret
	}
	return *o.ImagePath.Get()
}

// GetImagePathOk returns a tuple with the ImagePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceType) GetImagePathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ImagePath.Get(), o.ImagePath.IsSet()
}

// HasImagePath returns a boolean if a field has been set.
func (o *InstanceType) HasImagePath() bool {
	if o != nil && o.ImagePath.IsSet() {
		return true
	}

	return false
}

// SetImagePath gets a reference to the given NullableString and assigns it to the ImagePath field.
func (o *InstanceType) SetImagePath(v string) {
	o.ImagePath.Set(&v)
}
// SetImagePathNil sets the value for ImagePath to be an explicit nil
func (o *InstanceType) SetImagePathNil() {
	o.ImagePath.Set(nil)
}

// UnsetImagePath ensures that no value is present for ImagePath, not even an explicit nil
func (o *InstanceType) UnsetImagePath() {
	o.ImagePath.Unset()
}

// GetDarkImagePath returns the DarkImagePath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstanceType) GetDarkImagePath() string {
	if o == nil || o.DarkImagePath.Get() == nil {
		var ret string
		return ret
	}
	return *o.DarkImagePath.Get()
}

// GetDarkImagePathOk returns a tuple with the DarkImagePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceType) GetDarkImagePathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DarkImagePath.Get(), o.DarkImagePath.IsSet()
}

// HasDarkImagePath returns a boolean if a field has been set.
func (o *InstanceType) HasDarkImagePath() bool {
	if o != nil && o.DarkImagePath.IsSet() {
		return true
	}

	return false
}

// SetDarkImagePath gets a reference to the given NullableString and assigns it to the DarkImagePath field.
func (o *InstanceType) SetDarkImagePath(v string) {
	o.DarkImagePath.Set(&v)
}
// SetDarkImagePathNil sets the value for DarkImagePath to be an explicit nil
func (o *InstanceType) SetDarkImagePathNil() {
	o.DarkImagePath.Set(nil)
}

// UnsetDarkImagePath ensures that no value is present for DarkImagePath, not even an explicit nil
func (o *InstanceType) UnsetDarkImagePath() {
	o.DarkImagePath.Unset()
}

func (o InstanceType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Account != nil {
		toSerialize["account"] = o.Account
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.ProvisionTypeCode.IsSet() {
		toSerialize["provisionTypeCode"] = o.ProvisionTypeCode.Get()
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.HasProvisioningStep != nil {
		toSerialize["hasProvisioningStep"] = o.HasProvisioningStep
	}
	if o.HasDeployment != nil {
		toSerialize["hasDeployment"] = o.HasDeployment
	}
	if o.HasConfig != nil {
		toSerialize["hasConfig"] = o.HasConfig
	}
	if o.HasSettings != nil {
		toSerialize["hasSettings"] = o.HasSettings
	}
	if o.HasAutoScale != nil {
		toSerialize["hasAutoScale"] = o.HasAutoScale
	}
	if o.ProxyType.IsSet() {
		toSerialize["proxyType"] = o.ProxyType.Get()
	}
	if o.ProxyPort.IsSet() {
		toSerialize["proxyPort"] = o.ProxyPort.Get()
	}
	if o.ProxyProtocol.IsSet() {
		toSerialize["proxyProtocol"] = o.ProxyProtocol.Get()
	}
	if o.EnvironmentPrefix != nil {
		toSerialize["environmentPrefix"] = o.EnvironmentPrefix
	}
	if o.BackupType.IsSet() {
		toSerialize["backupType"] = o.BackupType.Get()
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if o.Featured != nil {
		toSerialize["featured"] = o.Featured
	}
	if o.Versions != nil {
		toSerialize["versions"] = o.Versions
	}
	if o.InstanceTypeLayouts != nil {
		toSerialize["instanceTypeLayouts"] = o.InstanceTypeLayouts
	}
	if o.OptionTypes != nil {
		toSerialize["optionTypes"] = o.OptionTypes
	}
	if o.EnvironmentVariables != nil {
		toSerialize["environmentVariables"] = o.EnvironmentVariables
	}
	if o.PriceSets != nil {
		toSerialize["priceSets"] = o.PriceSets
	}
	if o.ImagePath.IsSet() {
		toSerialize["imagePath"] = o.ImagePath.Get()
	}
	if o.DarkImagePath.IsSet() {
		toSerialize["darkImagePath"] = o.DarkImagePath.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableInstanceType struct {
	value *InstanceType
	isSet bool
}

func (v NullableInstanceType) Get() *InstanceType {
	return v.value
}

func (v *NullableInstanceType) Set(val *InstanceType) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceType) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceType(val *InstanceType) *NullableInstanceType {
	return &NullableInstanceType{value: val, isSet: true}
}

func (v NullableInstanceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


