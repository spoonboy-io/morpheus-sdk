/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddArchiveBucketRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddArchiveBucketRequest{}

// AddArchiveBucketRequest struct for AddArchiveBucketRequest
type AddArchiveBucketRequest struct {
	ArchiveBucket *ArchiveBucketCreate `json:"archiveBucket,omitempty"`
}

// NewAddArchiveBucketRequest instantiates a new AddArchiveBucketRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddArchiveBucketRequest() *AddArchiveBucketRequest {
	this := AddArchiveBucketRequest{}
	return &this
}

// NewAddArchiveBucketRequestWithDefaults instantiates a new AddArchiveBucketRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddArchiveBucketRequestWithDefaults() *AddArchiveBucketRequest {
	this := AddArchiveBucketRequest{}
	return &this
}

// GetArchiveBucket returns the ArchiveBucket field value if set, zero value otherwise.
func (o *AddArchiveBucketRequest) GetArchiveBucket() ArchiveBucketCreate {
	if o == nil || IsNil(o.ArchiveBucket) {
		var ret ArchiveBucketCreate
		return ret
	}
	return *o.ArchiveBucket
}

// GetArchiveBucketOk returns a tuple with the ArchiveBucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddArchiveBucketRequest) GetArchiveBucketOk() (*ArchiveBucketCreate, bool) {
	if o == nil || IsNil(o.ArchiveBucket) {
		return nil, false
	}
	return o.ArchiveBucket, true
}

// HasArchiveBucket returns a boolean if a field has been set.
func (o *AddArchiveBucketRequest) HasArchiveBucket() bool {
	if o != nil && !IsNil(o.ArchiveBucket) {
		return true
	}

	return false
}

// SetArchiveBucket gets a reference to the given ArchiveBucketCreate and assigns it to the ArchiveBucket field.
func (o *AddArchiveBucketRequest) SetArchiveBucket(v ArchiveBucketCreate) {
	o.ArchiveBucket = &v
}

func (o AddArchiveBucketRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddArchiveBucketRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ArchiveBucket) {
		toSerialize["archiveBucket"] = o.ArchiveBucket
	}
	return toSerialize, nil
}

type NullableAddArchiveBucketRequest struct {
	value *AddArchiveBucketRequest
	isSet bool
}

func (v NullableAddArchiveBucketRequest) Get() *AddArchiveBucketRequest {
	return v.value
}

func (v *NullableAddArchiveBucketRequest) Set(val *AddArchiveBucketRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddArchiveBucketRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddArchiveBucketRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddArchiveBucketRequest(val *AddArchiveBucketRequest) *NullableAddArchiveBucketRequest {
	return &NullableAddArchiveBucketRequest{value: val, isSet: true}
}

func (v NullableAddArchiveBucketRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddArchiveBucketRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


