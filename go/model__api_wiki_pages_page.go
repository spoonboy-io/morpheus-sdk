/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiWikiPagesPage struct for ApiWikiPagesPage
type ApiWikiPagesPage struct {
	Name string `json:"name"`
	Category string `json:"category"`
	Content string `json:"content"`
}

// NewApiWikiPagesPage instantiates a new ApiWikiPagesPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiWikiPagesPage(name string, category string, content string, ) *ApiWikiPagesPage {
	this := ApiWikiPagesPage{}
	this.Name = name
	this.Category = category
	this.Content = content
	return &this
}

// NewApiWikiPagesPageWithDefaults instantiates a new ApiWikiPagesPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiWikiPagesPageWithDefaults() *ApiWikiPagesPage {
	this := ApiWikiPagesPage{}
	return &this
}

// GetName returns the Name field value
func (o *ApiWikiPagesPage) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApiWikiPagesPage) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApiWikiPagesPage) SetName(v string) {
	o.Name = v
}

// GetCategory returns the Category field value
func (o *ApiWikiPagesPage) GetCategory() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *ApiWikiPagesPage) GetCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *ApiWikiPagesPage) SetCategory(v string) {
	o.Category = v
}

// GetContent returns the Content field value
func (o *ApiWikiPagesPage) GetContent() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *ApiWikiPagesPage) GetContentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *ApiWikiPagesPage) SetContent(v string) {
	o.Content = v
}

func (o ApiWikiPagesPage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["category"] = o.Category
	}
	if true {
		toSerialize["content"] = o.Content
	}
	return json.Marshal(toSerialize)
}

type NullableApiWikiPagesPage struct {
	value *ApiWikiPagesPage
	isSet bool
}

func (v NullableApiWikiPagesPage) Get() *ApiWikiPagesPage {
	return v.value
}

func (v *NullableApiWikiPagesPage) Set(val *ApiWikiPagesPage) {
	v.value = val
	v.isSet = true
}

func (v NullableApiWikiPagesPage) IsSet() bool {
	return v.isSet
}

func (v *NullableApiWikiPagesPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiWikiPagesPage(val *ApiWikiPagesPage) *NullableApiWikiPagesPage {
	return &NullableApiWikiPagesPage{value: val, isSet: true}
}

func (v NullableApiWikiPagesPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiWikiPagesPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


