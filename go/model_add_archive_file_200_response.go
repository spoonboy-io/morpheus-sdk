/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddArchiveFile200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddArchiveFile200Response{}

// AddArchiveFile200Response struct for AddArchiveFile200Response
type AddArchiveFile200Response struct {
	Success *bool `json:"success,omitempty"`
	ArchiveFile *ArchiveBucketFile `json:"archiveFile,omitempty"`
}

// NewAddArchiveFile200Response instantiates a new AddArchiveFile200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddArchiveFile200Response() *AddArchiveFile200Response {
	this := AddArchiveFile200Response{}
	return &this
}

// NewAddArchiveFile200ResponseWithDefaults instantiates a new AddArchiveFile200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddArchiveFile200ResponseWithDefaults() *AddArchiveFile200Response {
	this := AddArchiveFile200Response{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddArchiveFile200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddArchiveFile200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *AddArchiveFile200Response) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddArchiveFile200Response) SetSuccess(v bool) {
	o.Success = &v
}

// GetArchiveFile returns the ArchiveFile field value if set, zero value otherwise.
func (o *AddArchiveFile200Response) GetArchiveFile() ArchiveBucketFile {
	if o == nil || IsNil(o.ArchiveFile) {
		var ret ArchiveBucketFile
		return ret
	}
	return *o.ArchiveFile
}

// GetArchiveFileOk returns a tuple with the ArchiveFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddArchiveFile200Response) GetArchiveFileOk() (*ArchiveBucketFile, bool) {
	if o == nil || IsNil(o.ArchiveFile) {
		return nil, false
	}
	return o.ArchiveFile, true
}

// HasArchiveFile returns a boolean if a field has been set.
func (o *AddArchiveFile200Response) HasArchiveFile() bool {
	if o != nil && !IsNil(o.ArchiveFile) {
		return true
	}

	return false
}

// SetArchiveFile gets a reference to the given ArchiveBucketFile and assigns it to the ArchiveFile field.
func (o *AddArchiveFile200Response) SetArchiveFile(v ArchiveBucketFile) {
	o.ArchiveFile = &v
}

func (o AddArchiveFile200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddArchiveFile200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.ArchiveFile) {
		toSerialize["archiveFile"] = o.ArchiveFile
	}
	return toSerialize, nil
}

type NullableAddArchiveFile200Response struct {
	value *AddArchiveFile200Response
	isSet bool
}

func (v NullableAddArchiveFile200Response) Get() *AddArchiveFile200Response {
	return v.value
}

func (v *NullableAddArchiveFile200Response) Set(val *AddArchiveFile200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddArchiveFile200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddArchiveFile200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddArchiveFile200Response(val *AddArchiveFile200Response) *NullableAddArchiveFile200Response {
	return &NullableAddArchiveFile200Response{value: val, isSet: true}
}

func (v NullableAddArchiveFile200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddArchiveFile200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


