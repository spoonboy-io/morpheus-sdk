/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TaskPythonConfigTaskType struct for TaskPythonConfigTaskType
type TaskPythonConfigTaskType struct {
	Id *int64 `json:"id,omitempty"`
	Code *string `json:"code,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewTaskPythonConfigTaskType instantiates a new TaskPythonConfigTaskType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskPythonConfigTaskType() *TaskPythonConfigTaskType {
	this := TaskPythonConfigTaskType{}
	return &this
}

// NewTaskPythonConfigTaskTypeWithDefaults instantiates a new TaskPythonConfigTaskType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskPythonConfigTaskTypeWithDefaults() *TaskPythonConfigTaskType {
	this := TaskPythonConfigTaskType{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TaskPythonConfigTaskType) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskPythonConfigTaskType) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TaskPythonConfigTaskType) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *TaskPythonConfigTaskType) SetId(v int64) {
	o.Id = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *TaskPythonConfigTaskType) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskPythonConfigTaskType) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *TaskPythonConfigTaskType) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *TaskPythonConfigTaskType) SetCode(v string) {
	o.Code = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TaskPythonConfigTaskType) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskPythonConfigTaskType) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TaskPythonConfigTaskType) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TaskPythonConfigTaskType) SetName(v string) {
	o.Name = &v
}

func (o TaskPythonConfigTaskType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableTaskPythonConfigTaskType struct {
	value *TaskPythonConfigTaskType
	isSet bool
}

func (v NullableTaskPythonConfigTaskType) Get() *TaskPythonConfigTaskType {
	return v.value
}

func (v *NullableTaskPythonConfigTaskType) Set(val *TaskPythonConfigTaskType) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskPythonConfigTaskType) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskPythonConfigTaskType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskPythonConfigTaskType(val *TaskPythonConfigTaskType) *NullableTaskPythonConfigTaskType {
	return &NullableTaskPythonConfigTaskType{value: val, isSet: true}
}

func (v NullableTaskPythonConfigTaskType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskPythonConfigTaskType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


