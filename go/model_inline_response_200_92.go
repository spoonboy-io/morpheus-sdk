/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20092 struct for InlineResponse20092
type InlineResponse20092 struct {
	NetworkRouterTypes *[]NetworkRouterTypes `json:"networkRouterTypes,omitempty"`
}

// NewInlineResponse20092 instantiates a new InlineResponse20092 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20092() *InlineResponse20092 {
	this := InlineResponse20092{}
	return &this
}

// NewInlineResponse20092WithDefaults instantiates a new InlineResponse20092 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20092WithDefaults() *InlineResponse20092 {
	this := InlineResponse20092{}
	return &this
}

// GetNetworkRouterTypes returns the NetworkRouterTypes field value if set, zero value otherwise.
func (o *InlineResponse20092) GetNetworkRouterTypes() []NetworkRouterTypes {
	if o == nil || o.NetworkRouterTypes == nil {
		var ret []NetworkRouterTypes
		return ret
	}
	return *o.NetworkRouterTypes
}

// GetNetworkRouterTypesOk returns a tuple with the NetworkRouterTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20092) GetNetworkRouterTypesOk() (*[]NetworkRouterTypes, bool) {
	if o == nil || o.NetworkRouterTypes == nil {
		return nil, false
	}
	return o.NetworkRouterTypes, true
}

// HasNetworkRouterTypes returns a boolean if a field has been set.
func (o *InlineResponse20092) HasNetworkRouterTypes() bool {
	if o != nil && o.NetworkRouterTypes != nil {
		return true
	}

	return false
}

// SetNetworkRouterTypes gets a reference to the given []NetworkRouterTypes and assigns it to the NetworkRouterTypes field.
func (o *InlineResponse20092) SetNetworkRouterTypes(v []NetworkRouterTypes) {
	o.NetworkRouterTypes = &v
}

func (o InlineResponse20092) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkRouterTypes != nil {
		toSerialize["networkRouterTypes"] = o.NetworkRouterTypes
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20092 struct {
	value *InlineResponse20092
	isSet bool
}

func (v NullableInlineResponse20092) Get() *InlineResponse20092 {
	return v.value
}

func (v *NullableInlineResponse20092) Set(val *InlineResponse20092) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20092) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20092) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20092(val *InlineResponse20092) *NullableInlineResponse20092 {
	return &NullableInlineResponse20092{value: val, isSet: true}
}

func (v NullableInlineResponse20092) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20092) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


