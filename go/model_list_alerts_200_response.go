/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListAlerts200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListAlerts200Response{}

// ListAlerts200Response struct for ListAlerts200Response
type ListAlerts200Response struct {
	Meta *MetaMeta `json:"meta,omitempty"`
	Alerts []Alert `json:"alerts,omitempty"`
}

// NewListAlerts200Response instantiates a new ListAlerts200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAlerts200Response() *ListAlerts200Response {
	this := ListAlerts200Response{}
	return &this
}

// NewListAlerts200ResponseWithDefaults instantiates a new ListAlerts200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAlerts200ResponseWithDefaults() *ListAlerts200Response {
	this := ListAlerts200Response{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListAlerts200Response) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAlerts200Response) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ListAlerts200Response) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *ListAlerts200Response) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetAlerts returns the Alerts field value if set, zero value otherwise.
func (o *ListAlerts200Response) GetAlerts() []Alert {
	if o == nil || IsNil(o.Alerts) {
		var ret []Alert
		return ret
	}
	return o.Alerts
}

// GetAlertsOk returns a tuple with the Alerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAlerts200Response) GetAlertsOk() ([]Alert, bool) {
	if o == nil || IsNil(o.Alerts) {
		return nil, false
	}
	return o.Alerts, true
}

// HasAlerts returns a boolean if a field has been set.
func (o *ListAlerts200Response) HasAlerts() bool {
	if o != nil && !IsNil(o.Alerts) {
		return true
	}

	return false
}

// SetAlerts gets a reference to the given []Alert and assigns it to the Alerts field.
func (o *ListAlerts200Response) SetAlerts(v []Alert) {
	o.Alerts = v
}

func (o ListAlerts200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListAlerts200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Alerts) {
		toSerialize["alerts"] = o.Alerts
	}
	return toSerialize, nil
}

type NullableListAlerts200Response struct {
	value *ListAlerts200Response
	isSet bool
}

func (v NullableListAlerts200Response) Get() *ListAlerts200Response {
	return v.value
}

func (v *NullableListAlerts200Response) Set(val *ListAlerts200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListAlerts200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListAlerts200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAlerts200Response(val *ListAlerts200Response) *NullableListAlerts200Response {
	return &NullableListAlerts200Response{value: val, isSet: true}
}

func (v NullableListAlerts200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAlerts200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


