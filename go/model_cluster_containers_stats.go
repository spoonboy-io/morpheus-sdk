/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ClusterContainersStats struct for ClusterContainersStats
type ClusterContainersStats struct {
	Ts *time.Time `json:"ts,omitempty"`
	Running *bool `json:"running,omitempty"`
	UserCpuUsage *float32 `json:"userCpuUsage,omitempty"`
	SystemCpuUsage *float32 `json:"systemCpuUsage,omitempty"`
	UsedMemory *int64 `json:"usedMemory,omitempty"`
	MaxMemory *int64 `json:"maxMemory,omitempty"`
	CacheMemory *int64 `json:"cacheMemory,omitempty"`
	MaxStorage *int64 `json:"maxStorage,omitempty"`
	UsedStorage *int64 `json:"usedStorage,omitempty"`
	ReadIOPS *int64 `json:"readIOPS,omitempty"`
	WriteIOPS *int64 `json:"writeIOPS,omitempty"`
	TotalIOPS *int64 `json:"totalIOPS,omitempty"`
	NetTxUsage *int64 `json:"netTxUsage,omitempty"`
	NetRxUsage *int64 `json:"netRxUsage,omitempty"`
}

// NewClusterContainersStats instantiates a new ClusterContainersStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterContainersStats() *ClusterContainersStats {
	this := ClusterContainersStats{}
	return &this
}

// NewClusterContainersStatsWithDefaults instantiates a new ClusterContainersStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterContainersStatsWithDefaults() *ClusterContainersStats {
	this := ClusterContainersStats{}
	return &this
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *ClusterContainersStats) GetTs() time.Time {
	if o == nil || o.Ts == nil {
		var ret time.Time
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterContainersStats) GetTsOk() (*time.Time, bool) {
	if o == nil || o.Ts == nil {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *ClusterContainersStats) HasTs() bool {
	if o != nil && o.Ts != nil {
		return true
	}

	return false
}

// SetTs gets a reference to the given time.Time and assigns it to the Ts field.
func (o *ClusterContainersStats) SetTs(v time.Time) {
	o.Ts = &v
}

// GetRunning returns the Running field value if set, zero value otherwise.
func (o *ClusterContainersStats) GetRunning() bool {
	if o == nil || o.Running == nil {
		var ret bool
		return ret
	}
	return *o.Running
}

// GetRunningOk returns a tuple with the Running field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterContainersStats) GetRunningOk() (*bool, bool) {
	if o == nil || o.Running == nil {
		return nil, false
	}
	return o.Running, true
}

// HasRunning returns a boolean if a field has been set.
func (o *ClusterContainersStats) HasRunning() bool {
	if o != nil && o.Running != nil {
		return true
	}

	return false
}

// SetRunning gets a reference to the given bool and assigns it to the Running field.
func (o *ClusterContainersStats) SetRunning(v bool) {
	o.Running = &v
}

// GetUserCpuUsage returns the UserCpuUsage field value if set, zero value otherwise.
func (o *ClusterContainersStats) GetUserCpuUsage() float32 {
	if o == nil || o.UserCpuUsage == nil {
		var ret float32
		return ret
	}
	return *o.UserCpuUsage
}

// GetUserCpuUsageOk returns a tuple with the UserCpuUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterContainersStats) GetUserCpuUsageOk() (*float32, bool) {
	if o == nil || o.UserCpuUsage == nil {
		return nil, false
	}
	return o.UserCpuUsage, true
}

// HasUserCpuUsage returns a boolean if a field has been set.
func (o *ClusterContainersStats) HasUserCpuUsage() bool {
	if o != nil && o.UserCpuUsage != nil {
		return true
	}

	return false
}

// SetUserCpuUsage gets a reference to the given float32 and assigns it to the UserCpuUsage field.
func (o *ClusterContainersStats) SetUserCpuUsage(v float32) {
	o.UserCpuUsage = &v
}

// GetSystemCpuUsage returns the SystemCpuUsage field value if set, zero value otherwise.
func (o *ClusterContainersStats) GetSystemCpuUsage() float32 {
	if o == nil || o.SystemCpuUsage == nil {
		var ret float32
		return ret
	}
	return *o.SystemCpuUsage
}

// GetSystemCpuUsageOk returns a tuple with the SystemCpuUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterContainersStats) GetSystemCpuUsageOk() (*float32, bool) {
	if o == nil || o.SystemCpuUsage == nil {
		return nil, false
	}
	return o.SystemCpuUsage, true
}

// HasSystemCpuUsage returns a boolean if a field has been set.
func (o *ClusterContainersStats) HasSystemCpuUsage() bool {
	if o != nil && o.SystemCpuUsage != nil {
		return true
	}

	return false
}

// SetSystemCpuUsage gets a reference to the given float32 and assigns it to the SystemCpuUsage field.
func (o *ClusterContainersStats) SetSystemCpuUsage(v float32) {
	o.SystemCpuUsage = &v
}

// GetUsedMemory returns the UsedMemory field value if set, zero value otherwise.
func (o *ClusterContainersStats) GetUsedMemory() int64 {
	if o == nil || o.UsedMemory == nil {
		var ret int64
		return ret
	}
	return *o.UsedMemory
}

// GetUsedMemoryOk returns a tuple with the UsedMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterContainersStats) GetUsedMemoryOk() (*int64, bool) {
	if o == nil || o.UsedMemory == nil {
		return nil, false
	}
	return o.UsedMemory, true
}

// HasUsedMemory returns a boolean if a field has been set.
func (o *ClusterContainersStats) HasUsedMemory() bool {
	if o != nil && o.UsedMemory != nil {
		return true
	}

	return false
}

// SetUsedMemory gets a reference to the given int64 and assigns it to the UsedMemory field.
func (o *ClusterContainersStats) SetUsedMemory(v int64) {
	o.UsedMemory = &v
}

// GetMaxMemory returns the MaxMemory field value if set, zero value otherwise.
func (o *ClusterContainersStats) GetMaxMemory() int64 {
	if o == nil || o.MaxMemory == nil {
		var ret int64
		return ret
	}
	return *o.MaxMemory
}

// GetMaxMemoryOk returns a tuple with the MaxMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterContainersStats) GetMaxMemoryOk() (*int64, bool) {
	if o == nil || o.MaxMemory == nil {
		return nil, false
	}
	return o.MaxMemory, true
}

// HasMaxMemory returns a boolean if a field has been set.
func (o *ClusterContainersStats) HasMaxMemory() bool {
	if o != nil && o.MaxMemory != nil {
		return true
	}

	return false
}

// SetMaxMemory gets a reference to the given int64 and assigns it to the MaxMemory field.
func (o *ClusterContainersStats) SetMaxMemory(v int64) {
	o.MaxMemory = &v
}

// GetCacheMemory returns the CacheMemory field value if set, zero value otherwise.
func (o *ClusterContainersStats) GetCacheMemory() int64 {
	if o == nil || o.CacheMemory == nil {
		var ret int64
		return ret
	}
	return *o.CacheMemory
}

// GetCacheMemoryOk returns a tuple with the CacheMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterContainersStats) GetCacheMemoryOk() (*int64, bool) {
	if o == nil || o.CacheMemory == nil {
		return nil, false
	}
	return o.CacheMemory, true
}

// HasCacheMemory returns a boolean if a field has been set.
func (o *ClusterContainersStats) HasCacheMemory() bool {
	if o != nil && o.CacheMemory != nil {
		return true
	}

	return false
}

// SetCacheMemory gets a reference to the given int64 and assigns it to the CacheMemory field.
func (o *ClusterContainersStats) SetCacheMemory(v int64) {
	o.CacheMemory = &v
}

// GetMaxStorage returns the MaxStorage field value if set, zero value otherwise.
func (o *ClusterContainersStats) GetMaxStorage() int64 {
	if o == nil || o.MaxStorage == nil {
		var ret int64
		return ret
	}
	return *o.MaxStorage
}

// GetMaxStorageOk returns a tuple with the MaxStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterContainersStats) GetMaxStorageOk() (*int64, bool) {
	if o == nil || o.MaxStorage == nil {
		return nil, false
	}
	return o.MaxStorage, true
}

// HasMaxStorage returns a boolean if a field has been set.
func (o *ClusterContainersStats) HasMaxStorage() bool {
	if o != nil && o.MaxStorage != nil {
		return true
	}

	return false
}

// SetMaxStorage gets a reference to the given int64 and assigns it to the MaxStorage field.
func (o *ClusterContainersStats) SetMaxStorage(v int64) {
	o.MaxStorage = &v
}

// GetUsedStorage returns the UsedStorage field value if set, zero value otherwise.
func (o *ClusterContainersStats) GetUsedStorage() int64 {
	if o == nil || o.UsedStorage == nil {
		var ret int64
		return ret
	}
	return *o.UsedStorage
}

// GetUsedStorageOk returns a tuple with the UsedStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterContainersStats) GetUsedStorageOk() (*int64, bool) {
	if o == nil || o.UsedStorage == nil {
		return nil, false
	}
	return o.UsedStorage, true
}

// HasUsedStorage returns a boolean if a field has been set.
func (o *ClusterContainersStats) HasUsedStorage() bool {
	if o != nil && o.UsedStorage != nil {
		return true
	}

	return false
}

// SetUsedStorage gets a reference to the given int64 and assigns it to the UsedStorage field.
func (o *ClusterContainersStats) SetUsedStorage(v int64) {
	o.UsedStorage = &v
}

// GetReadIOPS returns the ReadIOPS field value if set, zero value otherwise.
func (o *ClusterContainersStats) GetReadIOPS() int64 {
	if o == nil || o.ReadIOPS == nil {
		var ret int64
		return ret
	}
	return *o.ReadIOPS
}

// GetReadIOPSOk returns a tuple with the ReadIOPS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterContainersStats) GetReadIOPSOk() (*int64, bool) {
	if o == nil || o.ReadIOPS == nil {
		return nil, false
	}
	return o.ReadIOPS, true
}

// HasReadIOPS returns a boolean if a field has been set.
func (o *ClusterContainersStats) HasReadIOPS() bool {
	if o != nil && o.ReadIOPS != nil {
		return true
	}

	return false
}

// SetReadIOPS gets a reference to the given int64 and assigns it to the ReadIOPS field.
func (o *ClusterContainersStats) SetReadIOPS(v int64) {
	o.ReadIOPS = &v
}

// GetWriteIOPS returns the WriteIOPS field value if set, zero value otherwise.
func (o *ClusterContainersStats) GetWriteIOPS() int64 {
	if o == nil || o.WriteIOPS == nil {
		var ret int64
		return ret
	}
	return *o.WriteIOPS
}

// GetWriteIOPSOk returns a tuple with the WriteIOPS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterContainersStats) GetWriteIOPSOk() (*int64, bool) {
	if o == nil || o.WriteIOPS == nil {
		return nil, false
	}
	return o.WriteIOPS, true
}

// HasWriteIOPS returns a boolean if a field has been set.
func (o *ClusterContainersStats) HasWriteIOPS() bool {
	if o != nil && o.WriteIOPS != nil {
		return true
	}

	return false
}

// SetWriteIOPS gets a reference to the given int64 and assigns it to the WriteIOPS field.
func (o *ClusterContainersStats) SetWriteIOPS(v int64) {
	o.WriteIOPS = &v
}

// GetTotalIOPS returns the TotalIOPS field value if set, zero value otherwise.
func (o *ClusterContainersStats) GetTotalIOPS() int64 {
	if o == nil || o.TotalIOPS == nil {
		var ret int64
		return ret
	}
	return *o.TotalIOPS
}

// GetTotalIOPSOk returns a tuple with the TotalIOPS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterContainersStats) GetTotalIOPSOk() (*int64, bool) {
	if o == nil || o.TotalIOPS == nil {
		return nil, false
	}
	return o.TotalIOPS, true
}

// HasTotalIOPS returns a boolean if a field has been set.
func (o *ClusterContainersStats) HasTotalIOPS() bool {
	if o != nil && o.TotalIOPS != nil {
		return true
	}

	return false
}

// SetTotalIOPS gets a reference to the given int64 and assigns it to the TotalIOPS field.
func (o *ClusterContainersStats) SetTotalIOPS(v int64) {
	o.TotalIOPS = &v
}

// GetNetTxUsage returns the NetTxUsage field value if set, zero value otherwise.
func (o *ClusterContainersStats) GetNetTxUsage() int64 {
	if o == nil || o.NetTxUsage == nil {
		var ret int64
		return ret
	}
	return *o.NetTxUsage
}

// GetNetTxUsageOk returns a tuple with the NetTxUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterContainersStats) GetNetTxUsageOk() (*int64, bool) {
	if o == nil || o.NetTxUsage == nil {
		return nil, false
	}
	return o.NetTxUsage, true
}

// HasNetTxUsage returns a boolean if a field has been set.
func (o *ClusterContainersStats) HasNetTxUsage() bool {
	if o != nil && o.NetTxUsage != nil {
		return true
	}

	return false
}

// SetNetTxUsage gets a reference to the given int64 and assigns it to the NetTxUsage field.
func (o *ClusterContainersStats) SetNetTxUsage(v int64) {
	o.NetTxUsage = &v
}

// GetNetRxUsage returns the NetRxUsage field value if set, zero value otherwise.
func (o *ClusterContainersStats) GetNetRxUsage() int64 {
	if o == nil || o.NetRxUsage == nil {
		var ret int64
		return ret
	}
	return *o.NetRxUsage
}

// GetNetRxUsageOk returns a tuple with the NetRxUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterContainersStats) GetNetRxUsageOk() (*int64, bool) {
	if o == nil || o.NetRxUsage == nil {
		return nil, false
	}
	return o.NetRxUsage, true
}

// HasNetRxUsage returns a boolean if a field has been set.
func (o *ClusterContainersStats) HasNetRxUsage() bool {
	if o != nil && o.NetRxUsage != nil {
		return true
	}

	return false
}

// SetNetRxUsage gets a reference to the given int64 and assigns it to the NetRxUsage field.
func (o *ClusterContainersStats) SetNetRxUsage(v int64) {
	o.NetRxUsage = &v
}

func (o ClusterContainersStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ts != nil {
		toSerialize["ts"] = o.Ts
	}
	if o.Running != nil {
		toSerialize["running"] = o.Running
	}
	if o.UserCpuUsage != nil {
		toSerialize["userCpuUsage"] = o.UserCpuUsage
	}
	if o.SystemCpuUsage != nil {
		toSerialize["systemCpuUsage"] = o.SystemCpuUsage
	}
	if o.UsedMemory != nil {
		toSerialize["usedMemory"] = o.UsedMemory
	}
	if o.MaxMemory != nil {
		toSerialize["maxMemory"] = o.MaxMemory
	}
	if o.CacheMemory != nil {
		toSerialize["cacheMemory"] = o.CacheMemory
	}
	if o.MaxStorage != nil {
		toSerialize["maxStorage"] = o.MaxStorage
	}
	if o.UsedStorage != nil {
		toSerialize["usedStorage"] = o.UsedStorage
	}
	if o.ReadIOPS != nil {
		toSerialize["readIOPS"] = o.ReadIOPS
	}
	if o.WriteIOPS != nil {
		toSerialize["writeIOPS"] = o.WriteIOPS
	}
	if o.TotalIOPS != nil {
		toSerialize["totalIOPS"] = o.TotalIOPS
	}
	if o.NetTxUsage != nil {
		toSerialize["netTxUsage"] = o.NetTxUsage
	}
	if o.NetRxUsage != nil {
		toSerialize["netRxUsage"] = o.NetRxUsage
	}
	return json.Marshal(toSerialize)
}

type NullableClusterContainersStats struct {
	value *ClusterContainersStats
	isSet bool
}

func (v NullableClusterContainersStats) Get() *ClusterContainersStats {
	return v.value
}

func (v *NullableClusterContainersStats) Set(val *ClusterContainersStats) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterContainersStats) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterContainersStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterContainersStats(val *ClusterContainersStats) *NullableClusterContainersStats {
	return &NullableClusterContainersStats{value: val, isSet: true}
}

func (v NullableClusterContainersStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterContainersStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


