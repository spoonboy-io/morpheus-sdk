/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiServersChangeCloudServers struct for ApiServersChangeCloudServers
type ApiServersChangeCloudServers struct {
	Source *int64 `json:"source,omitempty"`
	Target *int64 `json:"target,omitempty"`
}

// NewApiServersChangeCloudServers instantiates a new ApiServersChangeCloudServers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiServersChangeCloudServers() *ApiServersChangeCloudServers {
	this := ApiServersChangeCloudServers{}
	return &this
}

// NewApiServersChangeCloudServersWithDefaults instantiates a new ApiServersChangeCloudServers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiServersChangeCloudServersWithDefaults() *ApiServersChangeCloudServers {
	this := ApiServersChangeCloudServers{}
	return &this
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *ApiServersChangeCloudServers) GetSource() int64 {
	if o == nil || o.Source == nil {
		var ret int64
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServersChangeCloudServers) GetSourceOk() (*int64, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *ApiServersChangeCloudServers) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given int64 and assigns it to the Source field.
func (o *ApiServersChangeCloudServers) SetSource(v int64) {
	o.Source = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *ApiServersChangeCloudServers) GetTarget() int64 {
	if o == nil || o.Target == nil {
		var ret int64
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServersChangeCloudServers) GetTargetOk() (*int64, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *ApiServersChangeCloudServers) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given int64 and assigns it to the Target field.
func (o *ApiServersChangeCloudServers) SetTarget(v int64) {
	o.Target = &v
}

func (o ApiServersChangeCloudServers) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}
	return json.Marshal(toSerialize)
}

type NullableApiServersChangeCloudServers struct {
	value *ApiServersChangeCloudServers
	isSet bool
}

func (v NullableApiServersChangeCloudServers) Get() *ApiServersChangeCloudServers {
	return v.value
}

func (v *NullableApiServersChangeCloudServers) Set(val *ApiServersChangeCloudServers) {
	v.value = val
	v.isSet = true
}

func (v NullableApiServersChangeCloudServers) IsSet() bool {
	return v.isSet
}

func (v *NullableApiServersChangeCloudServers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiServersChangeCloudServers(val *ApiServersChangeCloudServers) *NullableApiServersChangeCloudServers {
	return &NullableApiServersChangeCloudServers{value: val, isSet: true}
}

func (v NullableApiServersChangeCloudServers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiServersChangeCloudServers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


