/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200128 struct for InlineResponse200128
type InlineResponse200128 struct {
	ProvisioningSettings *ProvisioningSettings `json:"provisioningSettings,omitempty"`
}

// NewInlineResponse200128 instantiates a new InlineResponse200128 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200128() *InlineResponse200128 {
	this := InlineResponse200128{}
	return &this
}

// NewInlineResponse200128WithDefaults instantiates a new InlineResponse200128 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200128WithDefaults() *InlineResponse200128 {
	this := InlineResponse200128{}
	return &this
}

// GetProvisioningSettings returns the ProvisioningSettings field value if set, zero value otherwise.
func (o *InlineResponse200128) GetProvisioningSettings() ProvisioningSettings {
	if o == nil || o.ProvisioningSettings == nil {
		var ret ProvisioningSettings
		return ret
	}
	return *o.ProvisioningSettings
}

// GetProvisioningSettingsOk returns a tuple with the ProvisioningSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200128) GetProvisioningSettingsOk() (*ProvisioningSettings, bool) {
	if o == nil || o.ProvisioningSettings == nil {
		return nil, false
	}
	return o.ProvisioningSettings, true
}

// HasProvisioningSettings returns a boolean if a field has been set.
func (o *InlineResponse200128) HasProvisioningSettings() bool {
	if o != nil && o.ProvisioningSettings != nil {
		return true
	}

	return false
}

// SetProvisioningSettings gets a reference to the given ProvisioningSettings and assigns it to the ProvisioningSettings field.
func (o *InlineResponse200128) SetProvisioningSettings(v ProvisioningSettings) {
	o.ProvisioningSettings = &v
}

func (o InlineResponse200128) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProvisioningSettings != nil {
		toSerialize["provisioningSettings"] = o.ProvisioningSettings
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200128 struct {
	value *InlineResponse200128
	isSet bool
}

func (v NullableInlineResponse200128) Get() *InlineResponse200128 {
	return v.value
}

func (v *NullableInlineResponse200128) Set(val *InlineResponse200128) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200128) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200128) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200128(val *InlineResponse200128) *NullableInlineResponse200128 {
	return &NullableInlineResponse200128{value: val, isSet: true}
}

func (v NullableInlineResponse200128) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200128) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


