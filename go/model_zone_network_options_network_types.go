/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ZoneNetworkOptionsNetworkTypes struct for ZoneNetworkOptionsNetworkTypes
type ZoneNetworkOptionsNetworkTypes struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	DisplayOrder *int64 `json:"displayOrder,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	DefaultType *bool `json:"defaultType,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	Code *string `json:"code,omitempty"`
}

// NewZoneNetworkOptionsNetworkTypes instantiates a new ZoneNetworkOptionsNetworkTypes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZoneNetworkOptionsNetworkTypes() *ZoneNetworkOptionsNetworkTypes {
	this := ZoneNetworkOptionsNetworkTypes{}
	return &this
}

// NewZoneNetworkOptionsNetworkTypesWithDefaults instantiates a new ZoneNetworkOptionsNetworkTypes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneNetworkOptionsNetworkTypesWithDefaults() *ZoneNetworkOptionsNetworkTypes {
	this := ZoneNetworkOptionsNetworkTypes{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ZoneNetworkOptionsNetworkTypes) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptionsNetworkTypes) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ZoneNetworkOptionsNetworkTypes) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ZoneNetworkOptionsNetworkTypes) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ZoneNetworkOptionsNetworkTypes) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptionsNetworkTypes) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ZoneNetworkOptionsNetworkTypes) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ZoneNetworkOptionsNetworkTypes) SetName(v string) {
	o.Name = &v
}

// GetDisplayOrder returns the DisplayOrder field value if set, zero value otherwise.
func (o *ZoneNetworkOptionsNetworkTypes) GetDisplayOrder() int64 {
	if o == nil || o.DisplayOrder == nil {
		var ret int64
		return ret
	}
	return *o.DisplayOrder
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptionsNetworkTypes) GetDisplayOrderOk() (*int64, bool) {
	if o == nil || o.DisplayOrder == nil {
		return nil, false
	}
	return o.DisplayOrder, true
}

// HasDisplayOrder returns a boolean if a field has been set.
func (o *ZoneNetworkOptionsNetworkTypes) HasDisplayOrder() bool {
	if o != nil && o.DisplayOrder != nil {
		return true
	}

	return false
}

// SetDisplayOrder gets a reference to the given int64 and assigns it to the DisplayOrder field.
func (o *ZoneNetworkOptionsNetworkTypes) SetDisplayOrder(v int64) {
	o.DisplayOrder = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ZoneNetworkOptionsNetworkTypes) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptionsNetworkTypes) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ZoneNetworkOptionsNetworkTypes) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ZoneNetworkOptionsNetworkTypes) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetDefaultType returns the DefaultType field value if set, zero value otherwise.
func (o *ZoneNetworkOptionsNetworkTypes) GetDefaultType() bool {
	if o == nil || o.DefaultType == nil {
		var ret bool
		return ret
	}
	return *o.DefaultType
}

// GetDefaultTypeOk returns a tuple with the DefaultType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptionsNetworkTypes) GetDefaultTypeOk() (*bool, bool) {
	if o == nil || o.DefaultType == nil {
		return nil, false
	}
	return o.DefaultType, true
}

// HasDefaultType returns a boolean if a field has been set.
func (o *ZoneNetworkOptionsNetworkTypes) HasDefaultType() bool {
	if o != nil && o.DefaultType != nil {
		return true
	}

	return false
}

// SetDefaultType gets a reference to the given bool and assigns it to the DefaultType field.
func (o *ZoneNetworkOptionsNetworkTypes) SetDefaultType(v bool) {
	o.DefaultType = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *ZoneNetworkOptionsNetworkTypes) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptionsNetworkTypes) GetExternalIdOk() (*string, bool) {
	if o == nil || o.ExternalId == nil {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *ZoneNetworkOptionsNetworkTypes) HasExternalId() bool {
	if o != nil && o.ExternalId != nil {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *ZoneNetworkOptionsNetworkTypes) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ZoneNetworkOptionsNetworkTypes) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneNetworkOptionsNetworkTypes) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ZoneNetworkOptionsNetworkTypes) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ZoneNetworkOptionsNetworkTypes) SetCode(v string) {
	o.Code = &v
}

func (o ZoneNetworkOptionsNetworkTypes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.DisplayOrder != nil {
		toSerialize["displayOrder"] = o.DisplayOrder
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.DefaultType != nil {
		toSerialize["defaultType"] = o.DefaultType
	}
	if o.ExternalId != nil {
		toSerialize["externalId"] = o.ExternalId
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	return json.Marshal(toSerialize)
}

type NullableZoneNetworkOptionsNetworkTypes struct {
	value *ZoneNetworkOptionsNetworkTypes
	isSet bool
}

func (v NullableZoneNetworkOptionsNetworkTypes) Get() *ZoneNetworkOptionsNetworkTypes {
	return v.value
}

func (v *NullableZoneNetworkOptionsNetworkTypes) Set(val *ZoneNetworkOptionsNetworkTypes) {
	v.value = val
	v.isSet = true
}

func (v NullableZoneNetworkOptionsNetworkTypes) IsSet() bool {
	return v.isSet
}

func (v *NullableZoneNetworkOptionsNetworkTypes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZoneNetworkOptionsNetworkTypes(val *ZoneNetworkOptionsNetworkTypes) *NullableZoneNetworkOptionsNetworkTypes {
	return &NullableZoneNetworkOptionsNetworkTypes{value: val, isSet: true}
}

func (v NullableZoneNetworkOptionsNetworkTypes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZoneNetworkOptionsNetworkTypes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


