/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject109 struct for InlineObject109
type InlineObject109 struct {
	ContainerType *ContainerTypeCreate `json:"containerType,omitempty"`
}

// NewInlineObject109 instantiates a new InlineObject109 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject109() *InlineObject109 {
	this := InlineObject109{}
	return &this
}

// NewInlineObject109WithDefaults instantiates a new InlineObject109 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject109WithDefaults() *InlineObject109 {
	this := InlineObject109{}
	return &this
}

// GetContainerType returns the ContainerType field value if set, zero value otherwise.
func (o *InlineObject109) GetContainerType() ContainerTypeCreate {
	if o == nil || o.ContainerType == nil {
		var ret ContainerTypeCreate
		return ret
	}
	return *o.ContainerType
}

// GetContainerTypeOk returns a tuple with the ContainerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject109) GetContainerTypeOk() (*ContainerTypeCreate, bool) {
	if o == nil || o.ContainerType == nil {
		return nil, false
	}
	return o.ContainerType, true
}

// HasContainerType returns a boolean if a field has been set.
func (o *InlineObject109) HasContainerType() bool {
	if o != nil && o.ContainerType != nil {
		return true
	}

	return false
}

// SetContainerType gets a reference to the given ContainerTypeCreate and assigns it to the ContainerType field.
func (o *InlineObject109) SetContainerType(v ContainerTypeCreate) {
	o.ContainerType = &v
}

func (o InlineObject109) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContainerType != nil {
		toSerialize["containerType"] = o.ContainerType
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject109 struct {
	value *InlineObject109
	isSet bool
}

func (v NullableInlineObject109) Get() *InlineObject109 {
	return v.value
}

func (v *NullableInlineObject109) Set(val *InlineObject109) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject109) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject109) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject109(val *InlineObject109) *NullableInlineObject109 {
	return &NullableInlineObject109{value: val, isSet: true}
}

func (v NullableInlineObject109) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject109) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


