/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject62 struct for InlineObject62
type InlineObject62 struct {
	// Optional storage provider to use.
	StorageProviderId *int64 `json:"storageProviderId,omitempty"`
}

// NewInlineObject62 instantiates a new InlineObject62 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject62() *InlineObject62 {
	this := InlineObject62{}
	return &this
}

// NewInlineObject62WithDefaults instantiates a new InlineObject62 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject62WithDefaults() *InlineObject62 {
	this := InlineObject62{}
	return &this
}

// GetStorageProviderId returns the StorageProviderId field value if set, zero value otherwise.
func (o *InlineObject62) GetStorageProviderId() int64 {
	if o == nil || o.StorageProviderId == nil {
		var ret int64
		return ret
	}
	return *o.StorageProviderId
}

// GetStorageProviderIdOk returns a tuple with the StorageProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject62) GetStorageProviderIdOk() (*int64, bool) {
	if o == nil || o.StorageProviderId == nil {
		return nil, false
	}
	return o.StorageProviderId, true
}

// HasStorageProviderId returns a boolean if a field has been set.
func (o *InlineObject62) HasStorageProviderId() bool {
	if o != nil && o.StorageProviderId != nil {
		return true
	}

	return false
}

// SetStorageProviderId gets a reference to the given int64 and assigns it to the StorageProviderId field.
func (o *InlineObject62) SetStorageProviderId(v int64) {
	o.StorageProviderId = &v
}

func (o InlineObject62) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StorageProviderId != nil {
		toSerialize["storageProviderId"] = o.StorageProviderId
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject62 struct {
	value *InlineObject62
	isSet bool
}

func (v NullableInlineObject62) Get() *InlineObject62 {
	return v.value
}

func (v *NullableInlineObject62) Set(val *InlineObject62) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject62) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject62) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject62(val *InlineObject62) *NullableInlineObject62 {
	return &NullableInlineObject62{value: val, isSet: true}
}

func (v NullableInlineObject62) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject62) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


