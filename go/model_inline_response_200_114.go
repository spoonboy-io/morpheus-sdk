/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200114 struct for InlineResponse200114
type InlineResponse200114 struct {
	NetworkEdgeCluster *map[string]interface{} `json:"networkEdgeCluster,omitempty"`
}

// NewInlineResponse200114 instantiates a new InlineResponse200114 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200114() *InlineResponse200114 {
	this := InlineResponse200114{}
	return &this
}

// NewInlineResponse200114WithDefaults instantiates a new InlineResponse200114 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200114WithDefaults() *InlineResponse200114 {
	this := InlineResponse200114{}
	return &this
}

// GetNetworkEdgeCluster returns the NetworkEdgeCluster field value if set, zero value otherwise.
func (o *InlineResponse200114) GetNetworkEdgeCluster() map[string]interface{} {
	if o == nil || o.NetworkEdgeCluster == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.NetworkEdgeCluster
}

// GetNetworkEdgeClusterOk returns a tuple with the NetworkEdgeCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200114) GetNetworkEdgeClusterOk() (*map[string]interface{}, bool) {
	if o == nil || o.NetworkEdgeCluster == nil {
		return nil, false
	}
	return o.NetworkEdgeCluster, true
}

// HasNetworkEdgeCluster returns a boolean if a field has been set.
func (o *InlineResponse200114) HasNetworkEdgeCluster() bool {
	if o != nil && o.NetworkEdgeCluster != nil {
		return true
	}

	return false
}

// SetNetworkEdgeCluster gets a reference to the given map[string]interface{} and assigns it to the NetworkEdgeCluster field.
func (o *InlineResponse200114) SetNetworkEdgeCluster(v map[string]interface{}) {
	o.NetworkEdgeCluster = &v
}

func (o InlineResponse200114) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkEdgeCluster != nil {
		toSerialize["networkEdgeCluster"] = o.NetworkEdgeCluster
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200114 struct {
	value *InlineResponse200114
	isSet bool
}

func (v NullableInlineResponse200114) Get() *InlineResponse200114 {
	return v.value
}

func (v *NullableInlineResponse200114) Set(val *InlineResponse200114) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200114) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200114) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200114(val *InlineResponse200114) *NullableInlineResponse200114 {
	return &NullableInlineResponse200114{value: val, isSet: true}
}

func (v NullableInlineResponse200114) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200114) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


