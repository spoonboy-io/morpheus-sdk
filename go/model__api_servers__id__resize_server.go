/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiServersIdResizeServer struct for ApiServersIdResizeServer
type ApiServersIdResizeServer struct {
	Plan *ApiServersIdResizeServerPlan `json:"plan,omitempty"`
}

// NewApiServersIdResizeServer instantiates a new ApiServersIdResizeServer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiServersIdResizeServer() *ApiServersIdResizeServer {
	this := ApiServersIdResizeServer{}
	return &this
}

// NewApiServersIdResizeServerWithDefaults instantiates a new ApiServersIdResizeServer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiServersIdResizeServerWithDefaults() *ApiServersIdResizeServer {
	this := ApiServersIdResizeServer{}
	return &this
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *ApiServersIdResizeServer) GetPlan() ApiServersIdResizeServerPlan {
	if o == nil || o.Plan == nil {
		var ret ApiServersIdResizeServerPlan
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServersIdResizeServer) GetPlanOk() (*ApiServersIdResizeServerPlan, bool) {
	if o == nil || o.Plan == nil {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *ApiServersIdResizeServer) HasPlan() bool {
	if o != nil && o.Plan != nil {
		return true
	}

	return false
}

// SetPlan gets a reference to the given ApiServersIdResizeServerPlan and assigns it to the Plan field.
func (o *ApiServersIdResizeServer) SetPlan(v ApiServersIdResizeServerPlan) {
	o.Plan = &v
}

func (o ApiServersIdResizeServer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Plan != nil {
		toSerialize["plan"] = o.Plan
	}
	return json.Marshal(toSerialize)
}

type NullableApiServersIdResizeServer struct {
	value *ApiServersIdResizeServer
	isSet bool
}

func (v NullableApiServersIdResizeServer) Get() *ApiServersIdResizeServer {
	return v.value
}

func (v *NullableApiServersIdResizeServer) Set(val *ApiServersIdResizeServer) {
	v.value = val
	v.isSet = true
}

func (v NullableApiServersIdResizeServer) IsSet() bool {
	return v.isSet
}

func (v *NullableApiServersIdResizeServer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiServersIdResizeServer(val *ApiServersIdResizeServer) *NullableApiServersIdResizeServer {
	return &NullableApiServersIdResizeServer{value: val, isSet: true}
}

func (v NullableApiServersIdResizeServer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiServersIdResizeServer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


