/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterLayoutCreateMasters struct for ClusterLayoutCreateMasters
type ClusterLayoutCreateMasters struct {
	// Number of nodes
	NodeCount *int64 `json:"nodeCount,omitempty"`
	ContainerType ApiStorageVolumesStorageVolumeStorageServer `json:"containerType"`
}

// NewClusterLayoutCreateMasters instantiates a new ClusterLayoutCreateMasters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterLayoutCreateMasters(containerType ApiStorageVolumesStorageVolumeStorageServer, ) *ClusterLayoutCreateMasters {
	this := ClusterLayoutCreateMasters{}
	var nodeCount int64 = 1
	this.NodeCount = &nodeCount
	this.ContainerType = containerType
	return &this
}

// NewClusterLayoutCreateMastersWithDefaults instantiates a new ClusterLayoutCreateMasters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterLayoutCreateMastersWithDefaults() *ClusterLayoutCreateMasters {
	this := ClusterLayoutCreateMasters{}
	var nodeCount int64 = 1
	this.NodeCount = &nodeCount
	return &this
}

// GetNodeCount returns the NodeCount field value if set, zero value otherwise.
func (o *ClusterLayoutCreateMasters) GetNodeCount() int64 {
	if o == nil || o.NodeCount == nil {
		var ret int64
		return ret
	}
	return *o.NodeCount
}

// GetNodeCountOk returns a tuple with the NodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutCreateMasters) GetNodeCountOk() (*int64, bool) {
	if o == nil || o.NodeCount == nil {
		return nil, false
	}
	return o.NodeCount, true
}

// HasNodeCount returns a boolean if a field has been set.
func (o *ClusterLayoutCreateMasters) HasNodeCount() bool {
	if o != nil && o.NodeCount != nil {
		return true
	}

	return false
}

// SetNodeCount gets a reference to the given int64 and assigns it to the NodeCount field.
func (o *ClusterLayoutCreateMasters) SetNodeCount(v int64) {
	o.NodeCount = &v
}

// GetContainerType returns the ContainerType field value
func (o *ClusterLayoutCreateMasters) GetContainerType() ApiStorageVolumesStorageVolumeStorageServer {
	if o == nil  {
		var ret ApiStorageVolumesStorageVolumeStorageServer
		return ret
	}

	return o.ContainerType
}

// GetContainerTypeOk returns a tuple with the ContainerType field value
// and a boolean to check if the value has been set.
func (o *ClusterLayoutCreateMasters) GetContainerTypeOk() (*ApiStorageVolumesStorageVolumeStorageServer, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ContainerType, true
}

// SetContainerType sets field value
func (o *ClusterLayoutCreateMasters) SetContainerType(v ApiStorageVolumesStorageVolumeStorageServer) {
	o.ContainerType = v
}

func (o ClusterLayoutCreateMasters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NodeCount != nil {
		toSerialize["nodeCount"] = o.NodeCount
	}
	if true {
		toSerialize["containerType"] = o.ContainerType
	}
	return json.Marshal(toSerialize)
}

type NullableClusterLayoutCreateMasters struct {
	value *ClusterLayoutCreateMasters
	isSet bool
}

func (v NullableClusterLayoutCreateMasters) Get() *ClusterLayoutCreateMasters {
	return v.value
}

func (v *NullableClusterLayoutCreateMasters) Set(val *ClusterLayoutCreateMasters) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterLayoutCreateMasters) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterLayoutCreateMasters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterLayoutCreateMasters(val *ClusterLayoutCreateMasters) *NullableClusterLayoutCreateMasters {
	return &NullableClusterLayoutCreateMasters{value: val, isSet: true}
}

func (v NullableClusterLayoutCreateMasters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterLayoutCreateMasters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


