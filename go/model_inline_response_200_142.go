/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200142 struct for InlineResponse200142
type InlineResponse200142 struct {
	ServicePlan *ServicePlan `json:"servicePlan,omitempty"`
}

// NewInlineResponse200142 instantiates a new InlineResponse200142 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200142() *InlineResponse200142 {
	this := InlineResponse200142{}
	return &this
}

// NewInlineResponse200142WithDefaults instantiates a new InlineResponse200142 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200142WithDefaults() *InlineResponse200142 {
	this := InlineResponse200142{}
	return &this
}

// GetServicePlan returns the ServicePlan field value if set, zero value otherwise.
func (o *InlineResponse200142) GetServicePlan() ServicePlan {
	if o == nil || o.ServicePlan == nil {
		var ret ServicePlan
		return ret
	}
	return *o.ServicePlan
}

// GetServicePlanOk returns a tuple with the ServicePlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200142) GetServicePlanOk() (*ServicePlan, bool) {
	if o == nil || o.ServicePlan == nil {
		return nil, false
	}
	return o.ServicePlan, true
}

// HasServicePlan returns a boolean if a field has been set.
func (o *InlineResponse200142) HasServicePlan() bool {
	if o != nil && o.ServicePlan != nil {
		return true
	}

	return false
}

// SetServicePlan gets a reference to the given ServicePlan and assigns it to the ServicePlan field.
func (o *InlineResponse200142) SetServicePlan(v ServicePlan) {
	o.ServicePlan = &v
}

func (o InlineResponse200142) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServicePlan != nil {
		toSerialize["servicePlan"] = o.ServicePlan
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200142 struct {
	value *InlineResponse200142
	isSet bool
}

func (v NullableInlineResponse200142) Get() *InlineResponse200142 {
	return v.value
}

func (v *NullableInlineResponse200142) Set(val *InlineResponse200142) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200142) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200142) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200142(val *InlineResponse200142) *NullableInlineResponse200142 {
	return &NullableInlineResponse200142{value: val, isSet: true}
}

func (v NullableInlineResponse200142) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200142) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


