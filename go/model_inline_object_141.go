/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject141 struct for InlineObject141
type InlineObject141 struct {
	MonitoringSettings *MonitoringSettings `json:"monitoringSettings,omitempty"`
}

// NewInlineObject141 instantiates a new InlineObject141 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject141() *InlineObject141 {
	this := InlineObject141{}
	return &this
}

// NewInlineObject141WithDefaults instantiates a new InlineObject141 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject141WithDefaults() *InlineObject141 {
	this := InlineObject141{}
	return &this
}

// GetMonitoringSettings returns the MonitoringSettings field value if set, zero value otherwise.
func (o *InlineObject141) GetMonitoringSettings() MonitoringSettings {
	if o == nil || o.MonitoringSettings == nil {
		var ret MonitoringSettings
		return ret
	}
	return *o.MonitoringSettings
}

// GetMonitoringSettingsOk returns a tuple with the MonitoringSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject141) GetMonitoringSettingsOk() (*MonitoringSettings, bool) {
	if o == nil || o.MonitoringSettings == nil {
		return nil, false
	}
	return o.MonitoringSettings, true
}

// HasMonitoringSettings returns a boolean if a field has been set.
func (o *InlineObject141) HasMonitoringSettings() bool {
	if o != nil && o.MonitoringSettings != nil {
		return true
	}

	return false
}

// SetMonitoringSettings gets a reference to the given MonitoringSettings and assigns it to the MonitoringSettings field.
func (o *InlineObject141) SetMonitoringSettings(v MonitoringSettings) {
	o.MonitoringSettings = &v
}

func (o InlineObject141) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MonitoringSettings != nil {
		toSerialize["monitoringSettings"] = o.MonitoringSettings
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject141 struct {
	value *InlineObject141
	isSet bool
}

func (v NullableInlineObject141) Get() *InlineObject141 {
	return v.value
}

func (v *NullableInlineObject141) Set(val *InlineObject141) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject141) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject141) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject141(val *InlineObject141) *NullableInlineObject141 {
	return &NullableInlineObject141{value: val, isSet: true}
}

func (v NullableInlineObject141) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject141) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


