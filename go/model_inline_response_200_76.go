/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20076 struct for InlineResponse20076
type InlineResponse20076 struct {
	SpecTemplate *SpecTemplate `json:"specTemplate,omitempty"`
}

// NewInlineResponse20076 instantiates a new InlineResponse20076 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20076() *InlineResponse20076 {
	this := InlineResponse20076{}
	return &this
}

// NewInlineResponse20076WithDefaults instantiates a new InlineResponse20076 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20076WithDefaults() *InlineResponse20076 {
	this := InlineResponse20076{}
	return &this
}

// GetSpecTemplate returns the SpecTemplate field value if set, zero value otherwise.
func (o *InlineResponse20076) GetSpecTemplate() SpecTemplate {
	if o == nil || o.SpecTemplate == nil {
		var ret SpecTemplate
		return ret
	}
	return *o.SpecTemplate
}

// GetSpecTemplateOk returns a tuple with the SpecTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20076) GetSpecTemplateOk() (*SpecTemplate, bool) {
	if o == nil || o.SpecTemplate == nil {
		return nil, false
	}
	return o.SpecTemplate, true
}

// HasSpecTemplate returns a boolean if a field has been set.
func (o *InlineResponse20076) HasSpecTemplate() bool {
	if o != nil && o.SpecTemplate != nil {
		return true
	}

	return false
}

// SetSpecTemplate gets a reference to the given SpecTemplate and assigns it to the SpecTemplate field.
func (o *InlineResponse20076) SetSpecTemplate(v SpecTemplate) {
	o.SpecTemplate = &v
}

func (o InlineResponse20076) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SpecTemplate != nil {
		toSerialize["specTemplate"] = o.SpecTemplate
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20076 struct {
	value *InlineResponse20076
	isSet bool
}

func (v NullableInlineResponse20076) Get() *InlineResponse20076 {
	return v.value
}

func (v *NullableInlineResponse20076) Set(val *InlineResponse20076) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20076) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20076) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20076(val *InlineResponse20076) *NullableInlineResponse20076 {
	return &NullableInlineResponse20076{value: val, isSet: true}
}

func (v NullableInlineResponse20076) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20076) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


