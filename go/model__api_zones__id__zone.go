/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiZonesIdZone struct for ApiZonesIdZone
type ApiZonesIdZone struct {
	// A unique name scoped to your account for the cloud
	Name string `json:"name"`
	// Optional description field if you want to put more info there
	Description *string `json:"description,omitempty"`
	// Optional code for use with policies
	Code *string `json:"code,omitempty"`
	// Optional location for your cloud
	Location *string `json:"location,omitempty"`
	// private or public
	Visibility *string `json:"visibility,omitempty"`
	// Map containing code or id of the cloud type
	ZoneType string `json:"zoneType"`
	// Specifies which Server group this cloud should be assigned to
	GroupId int64 `json:"groupId"`
	// Specifies which Tenant this cloud should be assigned to
	AccountId *int64 `json:"accountId,omitempty"`
	// Can be used to disable the cloud
	Enabled *bool `json:"enabled,omitempty"`
	// Automatically Power on VMs
	AutoRecoverPowerState *bool `json:"autoRecoverPowerState,omitempty"`
	// Scale Priority
	ScalePriority *int64 `json:"scalePriority,omitempty"`
	// Linked Account ID (enter commercial ID to get costing for AWS Govcloud)
	LinkedAccountId *int64 `json:"linkedAccountId,omitempty"`
	// Map containing zone configuration settings. See the section on specific zone types for details.
	Config *map[string]interface{} `json:"config,omitempty"`
	// host firewall. `off` or `internal`. a.k.a. \"local firewall\"
	SecurityMode *string `json:"securityMode,omitempty"`
	// Can be used to clear any custom logo and darkLogo, reverting to the defaults for the cloud type
	DefaultCloudLogos *bool `json:"defaultCloudLogos,omitempty"`
	// Map containing Credential ID. `local` means use the values set in the local cloud config instead of associating a credential.
	Credential map[string]interface{} `json:"credential"`
}

// NewApiZonesIdZone instantiates a new ApiZonesIdZone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiZonesIdZone(name string, zoneType string, groupId int64, credential map[string]interface{}, ) *ApiZonesIdZone {
	this := ApiZonesIdZone{}
	this.Name = name
	var visibility string = "private"
	this.Visibility = &visibility
	this.ZoneType = zoneType
	this.GroupId = groupId
	var enabled bool = true
	this.Enabled = &enabled
	var autoRecoverPowerState bool = false
	this.AutoRecoverPowerState = &autoRecoverPowerState
	var scalePriority int64 = 1
	this.ScalePriority = &scalePriority
	var securityMode string = "off"
	this.SecurityMode = &securityMode
	this.Credential = credential
	return &this
}

// NewApiZonesIdZoneWithDefaults instantiates a new ApiZonesIdZone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiZonesIdZoneWithDefaults() *ApiZonesIdZone {
	this := ApiZonesIdZone{}
	var visibility string = "private"
	this.Visibility = &visibility
	var zoneType string = "standard"
	this.ZoneType = zoneType
	var enabled bool = true
	this.Enabled = &enabled
	var autoRecoverPowerState bool = false
	this.AutoRecoverPowerState = &autoRecoverPowerState
	var scalePriority int64 = 1
	this.ScalePriority = &scalePriority
	var securityMode string = "off"
	this.SecurityMode = &securityMode
	return &this
}

// GetName returns the Name field value
func (o *ApiZonesIdZone) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApiZonesIdZone) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApiZonesIdZone) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiZonesIdZone) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZonesIdZone) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiZonesIdZone) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiZonesIdZone) SetDescription(v string) {
	o.Description = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ApiZonesIdZone) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZonesIdZone) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ApiZonesIdZone) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ApiZonesIdZone) SetCode(v string) {
	o.Code = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *ApiZonesIdZone) GetLocation() string {
	if o == nil || o.Location == nil {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZonesIdZone) GetLocationOk() (*string, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *ApiZonesIdZone) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *ApiZonesIdZone) SetLocation(v string) {
	o.Location = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *ApiZonesIdZone) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZonesIdZone) GetVisibilityOk() (*string, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *ApiZonesIdZone) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *ApiZonesIdZone) SetVisibility(v string) {
	o.Visibility = &v
}

// GetZoneType returns the ZoneType field value
func (o *ApiZonesIdZone) GetZoneType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ZoneType
}

// GetZoneTypeOk returns a tuple with the ZoneType field value
// and a boolean to check if the value has been set.
func (o *ApiZonesIdZone) GetZoneTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ZoneType, true
}

// SetZoneType sets field value
func (o *ApiZonesIdZone) SetZoneType(v string) {
	o.ZoneType = v
}

// GetGroupId returns the GroupId field value
func (o *ApiZonesIdZone) GetGroupId() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value
// and a boolean to check if the value has been set.
func (o *ApiZonesIdZone) GetGroupIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GroupId, true
}

// SetGroupId sets field value
func (o *ApiZonesIdZone) SetGroupId(v int64) {
	o.GroupId = v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *ApiZonesIdZone) GetAccountId() int64 {
	if o == nil || o.AccountId == nil {
		var ret int64
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZonesIdZone) GetAccountIdOk() (*int64, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *ApiZonesIdZone) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int64 and assigns it to the AccountId field.
func (o *ApiZonesIdZone) SetAccountId(v int64) {
	o.AccountId = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ApiZonesIdZone) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZonesIdZone) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ApiZonesIdZone) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ApiZonesIdZone) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetAutoRecoverPowerState returns the AutoRecoverPowerState field value if set, zero value otherwise.
func (o *ApiZonesIdZone) GetAutoRecoverPowerState() bool {
	if o == nil || o.AutoRecoverPowerState == nil {
		var ret bool
		return ret
	}
	return *o.AutoRecoverPowerState
}

// GetAutoRecoverPowerStateOk returns a tuple with the AutoRecoverPowerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZonesIdZone) GetAutoRecoverPowerStateOk() (*bool, bool) {
	if o == nil || o.AutoRecoverPowerState == nil {
		return nil, false
	}
	return o.AutoRecoverPowerState, true
}

// HasAutoRecoverPowerState returns a boolean if a field has been set.
func (o *ApiZonesIdZone) HasAutoRecoverPowerState() bool {
	if o != nil && o.AutoRecoverPowerState != nil {
		return true
	}

	return false
}

// SetAutoRecoverPowerState gets a reference to the given bool and assigns it to the AutoRecoverPowerState field.
func (o *ApiZonesIdZone) SetAutoRecoverPowerState(v bool) {
	o.AutoRecoverPowerState = &v
}

// GetScalePriority returns the ScalePriority field value if set, zero value otherwise.
func (o *ApiZonesIdZone) GetScalePriority() int64 {
	if o == nil || o.ScalePriority == nil {
		var ret int64
		return ret
	}
	return *o.ScalePriority
}

// GetScalePriorityOk returns a tuple with the ScalePriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZonesIdZone) GetScalePriorityOk() (*int64, bool) {
	if o == nil || o.ScalePriority == nil {
		return nil, false
	}
	return o.ScalePriority, true
}

// HasScalePriority returns a boolean if a field has been set.
func (o *ApiZonesIdZone) HasScalePriority() bool {
	if o != nil && o.ScalePriority != nil {
		return true
	}

	return false
}

// SetScalePriority gets a reference to the given int64 and assigns it to the ScalePriority field.
func (o *ApiZonesIdZone) SetScalePriority(v int64) {
	o.ScalePriority = &v
}

// GetLinkedAccountId returns the LinkedAccountId field value if set, zero value otherwise.
func (o *ApiZonesIdZone) GetLinkedAccountId() int64 {
	if o == nil || o.LinkedAccountId == nil {
		var ret int64
		return ret
	}
	return *o.LinkedAccountId
}

// GetLinkedAccountIdOk returns a tuple with the LinkedAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZonesIdZone) GetLinkedAccountIdOk() (*int64, bool) {
	if o == nil || o.LinkedAccountId == nil {
		return nil, false
	}
	return o.LinkedAccountId, true
}

// HasLinkedAccountId returns a boolean if a field has been set.
func (o *ApiZonesIdZone) HasLinkedAccountId() bool {
	if o != nil && o.LinkedAccountId != nil {
		return true
	}

	return false
}

// SetLinkedAccountId gets a reference to the given int64 and assigns it to the LinkedAccountId field.
func (o *ApiZonesIdZone) SetLinkedAccountId(v int64) {
	o.LinkedAccountId = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *ApiZonesIdZone) GetConfig() map[string]interface{} {
	if o == nil || o.Config == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZonesIdZone) GetConfigOk() (*map[string]interface{}, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *ApiZonesIdZone) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *ApiZonesIdZone) SetConfig(v map[string]interface{}) {
	o.Config = &v
}

// GetSecurityMode returns the SecurityMode field value if set, zero value otherwise.
func (o *ApiZonesIdZone) GetSecurityMode() string {
	if o == nil || o.SecurityMode == nil {
		var ret string
		return ret
	}
	return *o.SecurityMode
}

// GetSecurityModeOk returns a tuple with the SecurityMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZonesIdZone) GetSecurityModeOk() (*string, bool) {
	if o == nil || o.SecurityMode == nil {
		return nil, false
	}
	return o.SecurityMode, true
}

// HasSecurityMode returns a boolean if a field has been set.
func (o *ApiZonesIdZone) HasSecurityMode() bool {
	if o != nil && o.SecurityMode != nil {
		return true
	}

	return false
}

// SetSecurityMode gets a reference to the given string and assigns it to the SecurityMode field.
func (o *ApiZonesIdZone) SetSecurityMode(v string) {
	o.SecurityMode = &v
}

// GetDefaultCloudLogos returns the DefaultCloudLogos field value if set, zero value otherwise.
func (o *ApiZonesIdZone) GetDefaultCloudLogos() bool {
	if o == nil || o.DefaultCloudLogos == nil {
		var ret bool
		return ret
	}
	return *o.DefaultCloudLogos
}

// GetDefaultCloudLogosOk returns a tuple with the DefaultCloudLogos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZonesIdZone) GetDefaultCloudLogosOk() (*bool, bool) {
	if o == nil || o.DefaultCloudLogos == nil {
		return nil, false
	}
	return o.DefaultCloudLogos, true
}

// HasDefaultCloudLogos returns a boolean if a field has been set.
func (o *ApiZonesIdZone) HasDefaultCloudLogos() bool {
	if o != nil && o.DefaultCloudLogos != nil {
		return true
	}

	return false
}

// SetDefaultCloudLogos gets a reference to the given bool and assigns it to the DefaultCloudLogos field.
func (o *ApiZonesIdZone) SetDefaultCloudLogos(v bool) {
	o.DefaultCloudLogos = &v
}

// GetCredential returns the Credential field value
func (o *ApiZonesIdZone) GetCredential() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}

	return o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value
// and a boolean to check if the value has been set.
func (o *ApiZonesIdZone) GetCredentialOk() (*map[string]interface{}, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Credential, true
}

// SetCredential sets field value
func (o *ApiZonesIdZone) SetCredential(v map[string]interface{}) {
	o.Credential = v
}

func (o ApiZonesIdZone) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if true {
		toSerialize["zoneType"] = o.ZoneType
	}
	if true {
		toSerialize["groupId"] = o.GroupId
	}
	if o.AccountId != nil {
		toSerialize["accountId"] = o.AccountId
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.AutoRecoverPowerState != nil {
		toSerialize["autoRecoverPowerState"] = o.AutoRecoverPowerState
	}
	if o.ScalePriority != nil {
		toSerialize["scalePriority"] = o.ScalePriority
	}
	if o.LinkedAccountId != nil {
		toSerialize["linkedAccountId"] = o.LinkedAccountId
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.SecurityMode != nil {
		toSerialize["securityMode"] = o.SecurityMode
	}
	if o.DefaultCloudLogos != nil {
		toSerialize["defaultCloudLogos"] = o.DefaultCloudLogos
	}
	if true {
		toSerialize["credential"] = o.Credential
	}
	return json.Marshal(toSerialize)
}

type NullableApiZonesIdZone struct {
	value *ApiZonesIdZone
	isSet bool
}

func (v NullableApiZonesIdZone) Get() *ApiZonesIdZone {
	return v.value
}

func (v *NullableApiZonesIdZone) Set(val *ApiZonesIdZone) {
	v.value = val
	v.isSet = true
}

func (v NullableApiZonesIdZone) IsSet() bool {
	return v.isSet
}

func (v *NullableApiZonesIdZone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiZonesIdZone(val *ApiZonesIdZone) *NullableApiZonesIdZone {
	return &NullableApiZonesIdZone{value: val, isSet: true}
}

func (v NullableApiZonesIdZone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiZonesIdZone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


