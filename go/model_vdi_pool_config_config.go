/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VdiPoolConfigConfig struct for VdiPoolConfigConfig
type VdiPoolConfigConfig struct {
	CreateUser *bool `json:"createUser,omitempty"`
	IsEC2 *bool `json:"isEC2,omitempty"`
	IsVpcSelectable *bool `json:"isVpcSelectable,omitempty"`
	NoAgent *bool `json:"noAgent,omitempty"`
	SmbiosAssetTag NullableString `json:"smbiosAssetTag,omitempty"`
	NestedVirtualization NullableString `json:"nestedVirtualization,omitempty"`
	VmwareFolderId *string `json:"vmwareFolderId,omitempty"`
	ResourcePoolId *int64 `json:"resourcePoolId,omitempty"`
	PoolProviderType NullableString `json:"poolProviderType,omitempty"`
}

// NewVdiPoolConfigConfig instantiates a new VdiPoolConfigConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVdiPoolConfigConfig() *VdiPoolConfigConfig {
	this := VdiPoolConfigConfig{}
	return &this
}

// NewVdiPoolConfigConfigWithDefaults instantiates a new VdiPoolConfigConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVdiPoolConfigConfigWithDefaults() *VdiPoolConfigConfig {
	this := VdiPoolConfigConfig{}
	return &this
}

// GetCreateUser returns the CreateUser field value if set, zero value otherwise.
func (o *VdiPoolConfigConfig) GetCreateUser() bool {
	if o == nil || o.CreateUser == nil {
		var ret bool
		return ret
	}
	return *o.CreateUser
}

// GetCreateUserOk returns a tuple with the CreateUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfigConfig) GetCreateUserOk() (*bool, bool) {
	if o == nil || o.CreateUser == nil {
		return nil, false
	}
	return o.CreateUser, true
}

// HasCreateUser returns a boolean if a field has been set.
func (o *VdiPoolConfigConfig) HasCreateUser() bool {
	if o != nil && o.CreateUser != nil {
		return true
	}

	return false
}

// SetCreateUser gets a reference to the given bool and assigns it to the CreateUser field.
func (o *VdiPoolConfigConfig) SetCreateUser(v bool) {
	o.CreateUser = &v
}

// GetIsEC2 returns the IsEC2 field value if set, zero value otherwise.
func (o *VdiPoolConfigConfig) GetIsEC2() bool {
	if o == nil || o.IsEC2 == nil {
		var ret bool
		return ret
	}
	return *o.IsEC2
}

// GetIsEC2Ok returns a tuple with the IsEC2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfigConfig) GetIsEC2Ok() (*bool, bool) {
	if o == nil || o.IsEC2 == nil {
		return nil, false
	}
	return o.IsEC2, true
}

// HasIsEC2 returns a boolean if a field has been set.
func (o *VdiPoolConfigConfig) HasIsEC2() bool {
	if o != nil && o.IsEC2 != nil {
		return true
	}

	return false
}

// SetIsEC2 gets a reference to the given bool and assigns it to the IsEC2 field.
func (o *VdiPoolConfigConfig) SetIsEC2(v bool) {
	o.IsEC2 = &v
}

// GetIsVpcSelectable returns the IsVpcSelectable field value if set, zero value otherwise.
func (o *VdiPoolConfigConfig) GetIsVpcSelectable() bool {
	if o == nil || o.IsVpcSelectable == nil {
		var ret bool
		return ret
	}
	return *o.IsVpcSelectable
}

// GetIsVpcSelectableOk returns a tuple with the IsVpcSelectable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfigConfig) GetIsVpcSelectableOk() (*bool, bool) {
	if o == nil || o.IsVpcSelectable == nil {
		return nil, false
	}
	return o.IsVpcSelectable, true
}

// HasIsVpcSelectable returns a boolean if a field has been set.
func (o *VdiPoolConfigConfig) HasIsVpcSelectable() bool {
	if o != nil && o.IsVpcSelectable != nil {
		return true
	}

	return false
}

// SetIsVpcSelectable gets a reference to the given bool and assigns it to the IsVpcSelectable field.
func (o *VdiPoolConfigConfig) SetIsVpcSelectable(v bool) {
	o.IsVpcSelectable = &v
}

// GetNoAgent returns the NoAgent field value if set, zero value otherwise.
func (o *VdiPoolConfigConfig) GetNoAgent() bool {
	if o == nil || o.NoAgent == nil {
		var ret bool
		return ret
	}
	return *o.NoAgent
}

// GetNoAgentOk returns a tuple with the NoAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfigConfig) GetNoAgentOk() (*bool, bool) {
	if o == nil || o.NoAgent == nil {
		return nil, false
	}
	return o.NoAgent, true
}

// HasNoAgent returns a boolean if a field has been set.
func (o *VdiPoolConfigConfig) HasNoAgent() bool {
	if o != nil && o.NoAgent != nil {
		return true
	}

	return false
}

// SetNoAgent gets a reference to the given bool and assigns it to the NoAgent field.
func (o *VdiPoolConfigConfig) SetNoAgent(v bool) {
	o.NoAgent = &v
}

// GetSmbiosAssetTag returns the SmbiosAssetTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPoolConfigConfig) GetSmbiosAssetTag() string {
	if o == nil || o.SmbiosAssetTag.Get() == nil {
		var ret string
		return ret
	}
	return *o.SmbiosAssetTag.Get()
}

// GetSmbiosAssetTagOk returns a tuple with the SmbiosAssetTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPoolConfigConfig) GetSmbiosAssetTagOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SmbiosAssetTag.Get(), o.SmbiosAssetTag.IsSet()
}

// HasSmbiosAssetTag returns a boolean if a field has been set.
func (o *VdiPoolConfigConfig) HasSmbiosAssetTag() bool {
	if o != nil && o.SmbiosAssetTag.IsSet() {
		return true
	}

	return false
}

// SetSmbiosAssetTag gets a reference to the given NullableString and assigns it to the SmbiosAssetTag field.
func (o *VdiPoolConfigConfig) SetSmbiosAssetTag(v string) {
	o.SmbiosAssetTag.Set(&v)
}
// SetSmbiosAssetTagNil sets the value for SmbiosAssetTag to be an explicit nil
func (o *VdiPoolConfigConfig) SetSmbiosAssetTagNil() {
	o.SmbiosAssetTag.Set(nil)
}

// UnsetSmbiosAssetTag ensures that no value is present for SmbiosAssetTag, not even an explicit nil
func (o *VdiPoolConfigConfig) UnsetSmbiosAssetTag() {
	o.SmbiosAssetTag.Unset()
}

// GetNestedVirtualization returns the NestedVirtualization field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPoolConfigConfig) GetNestedVirtualization() string {
	if o == nil || o.NestedVirtualization.Get() == nil {
		var ret string
		return ret
	}
	return *o.NestedVirtualization.Get()
}

// GetNestedVirtualizationOk returns a tuple with the NestedVirtualization field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPoolConfigConfig) GetNestedVirtualizationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NestedVirtualization.Get(), o.NestedVirtualization.IsSet()
}

// HasNestedVirtualization returns a boolean if a field has been set.
func (o *VdiPoolConfigConfig) HasNestedVirtualization() bool {
	if o != nil && o.NestedVirtualization.IsSet() {
		return true
	}

	return false
}

// SetNestedVirtualization gets a reference to the given NullableString and assigns it to the NestedVirtualization field.
func (o *VdiPoolConfigConfig) SetNestedVirtualization(v string) {
	o.NestedVirtualization.Set(&v)
}
// SetNestedVirtualizationNil sets the value for NestedVirtualization to be an explicit nil
func (o *VdiPoolConfigConfig) SetNestedVirtualizationNil() {
	o.NestedVirtualization.Set(nil)
}

// UnsetNestedVirtualization ensures that no value is present for NestedVirtualization, not even an explicit nil
func (o *VdiPoolConfigConfig) UnsetNestedVirtualization() {
	o.NestedVirtualization.Unset()
}

// GetVmwareFolderId returns the VmwareFolderId field value if set, zero value otherwise.
func (o *VdiPoolConfigConfig) GetVmwareFolderId() string {
	if o == nil || o.VmwareFolderId == nil {
		var ret string
		return ret
	}
	return *o.VmwareFolderId
}

// GetVmwareFolderIdOk returns a tuple with the VmwareFolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfigConfig) GetVmwareFolderIdOk() (*string, bool) {
	if o == nil || o.VmwareFolderId == nil {
		return nil, false
	}
	return o.VmwareFolderId, true
}

// HasVmwareFolderId returns a boolean if a field has been set.
func (o *VdiPoolConfigConfig) HasVmwareFolderId() bool {
	if o != nil && o.VmwareFolderId != nil {
		return true
	}

	return false
}

// SetVmwareFolderId gets a reference to the given string and assigns it to the VmwareFolderId field.
func (o *VdiPoolConfigConfig) SetVmwareFolderId(v string) {
	o.VmwareFolderId = &v
}

// GetResourcePoolId returns the ResourcePoolId field value if set, zero value otherwise.
func (o *VdiPoolConfigConfig) GetResourcePoolId() int64 {
	if o == nil || o.ResourcePoolId == nil {
		var ret int64
		return ret
	}
	return *o.ResourcePoolId
}

// GetResourcePoolIdOk returns a tuple with the ResourcePoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfigConfig) GetResourcePoolIdOk() (*int64, bool) {
	if o == nil || o.ResourcePoolId == nil {
		return nil, false
	}
	return o.ResourcePoolId, true
}

// HasResourcePoolId returns a boolean if a field has been set.
func (o *VdiPoolConfigConfig) HasResourcePoolId() bool {
	if o != nil && o.ResourcePoolId != nil {
		return true
	}

	return false
}

// SetResourcePoolId gets a reference to the given int64 and assigns it to the ResourcePoolId field.
func (o *VdiPoolConfigConfig) SetResourcePoolId(v int64) {
	o.ResourcePoolId = &v
}

// GetPoolProviderType returns the PoolProviderType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPoolConfigConfig) GetPoolProviderType() string {
	if o == nil || o.PoolProviderType.Get() == nil {
		var ret string
		return ret
	}
	return *o.PoolProviderType.Get()
}

// GetPoolProviderTypeOk returns a tuple with the PoolProviderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPoolConfigConfig) GetPoolProviderTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PoolProviderType.Get(), o.PoolProviderType.IsSet()
}

// HasPoolProviderType returns a boolean if a field has been set.
func (o *VdiPoolConfigConfig) HasPoolProviderType() bool {
	if o != nil && o.PoolProviderType.IsSet() {
		return true
	}

	return false
}

// SetPoolProviderType gets a reference to the given NullableString and assigns it to the PoolProviderType field.
func (o *VdiPoolConfigConfig) SetPoolProviderType(v string) {
	o.PoolProviderType.Set(&v)
}
// SetPoolProviderTypeNil sets the value for PoolProviderType to be an explicit nil
func (o *VdiPoolConfigConfig) SetPoolProviderTypeNil() {
	o.PoolProviderType.Set(nil)
}

// UnsetPoolProviderType ensures that no value is present for PoolProviderType, not even an explicit nil
func (o *VdiPoolConfigConfig) UnsetPoolProviderType() {
	o.PoolProviderType.Unset()
}

func (o VdiPoolConfigConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreateUser != nil {
		toSerialize["createUser"] = o.CreateUser
	}
	if o.IsEC2 != nil {
		toSerialize["isEC2"] = o.IsEC2
	}
	if o.IsVpcSelectable != nil {
		toSerialize["isVpcSelectable"] = o.IsVpcSelectable
	}
	if o.NoAgent != nil {
		toSerialize["noAgent"] = o.NoAgent
	}
	if o.SmbiosAssetTag.IsSet() {
		toSerialize["smbiosAssetTag"] = o.SmbiosAssetTag.Get()
	}
	if o.NestedVirtualization.IsSet() {
		toSerialize["nestedVirtualization"] = o.NestedVirtualization.Get()
	}
	if o.VmwareFolderId != nil {
		toSerialize["vmwareFolderId"] = o.VmwareFolderId
	}
	if o.ResourcePoolId != nil {
		toSerialize["resourcePoolId"] = o.ResourcePoolId
	}
	if o.PoolProviderType.IsSet() {
		toSerialize["poolProviderType"] = o.PoolProviderType.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableVdiPoolConfigConfig struct {
	value *VdiPoolConfigConfig
	isSet bool
}

func (v NullableVdiPoolConfigConfig) Get() *VdiPoolConfigConfig {
	return v.value
}

func (v *NullableVdiPoolConfigConfig) Set(val *VdiPoolConfigConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableVdiPoolConfigConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableVdiPoolConfigConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVdiPoolConfigConfig(val *VdiPoolConfigConfig) *NullableVdiPoolConfigConfig {
	return &NullableVdiPoolConfigConfig{value: val, isSet: true}
}

func (v NullableVdiPoolConfigConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVdiPoolConfigConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


