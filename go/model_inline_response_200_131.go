/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200131 struct for InlineResponse200131
type InlineResponse200131 struct {
	ResourcePoolGroups *[]InlineResponse200131ResourcePoolGroups `json:"resourcePoolGroups,omitempty"`
}

// NewInlineResponse200131 instantiates a new InlineResponse200131 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200131() *InlineResponse200131 {
	this := InlineResponse200131{}
	return &this
}

// NewInlineResponse200131WithDefaults instantiates a new InlineResponse200131 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200131WithDefaults() *InlineResponse200131 {
	this := InlineResponse200131{}
	return &this
}

// GetResourcePoolGroups returns the ResourcePoolGroups field value if set, zero value otherwise.
func (o *InlineResponse200131) GetResourcePoolGroups() []InlineResponse200131ResourcePoolGroups {
	if o == nil || o.ResourcePoolGroups == nil {
		var ret []InlineResponse200131ResourcePoolGroups
		return ret
	}
	return *o.ResourcePoolGroups
}

// GetResourcePoolGroupsOk returns a tuple with the ResourcePoolGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200131) GetResourcePoolGroupsOk() (*[]InlineResponse200131ResourcePoolGroups, bool) {
	if o == nil || o.ResourcePoolGroups == nil {
		return nil, false
	}
	return o.ResourcePoolGroups, true
}

// HasResourcePoolGroups returns a boolean if a field has been set.
func (o *InlineResponse200131) HasResourcePoolGroups() bool {
	if o != nil && o.ResourcePoolGroups != nil {
		return true
	}

	return false
}

// SetResourcePoolGroups gets a reference to the given []InlineResponse200131ResourcePoolGroups and assigns it to the ResourcePoolGroups field.
func (o *InlineResponse200131) SetResourcePoolGroups(v []InlineResponse200131ResourcePoolGroups) {
	o.ResourcePoolGroups = &v
}

func (o InlineResponse200131) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResourcePoolGroups != nil {
		toSerialize["resourcePoolGroups"] = o.ResourcePoolGroups
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200131 struct {
	value *InlineResponse200131
	isSet bool
}

func (v NullableInlineResponse200131) Get() *InlineResponse200131 {
	return v.value
}

func (v *NullableInlineResponse200131) Set(val *InlineResponse200131) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200131) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200131) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200131(val *InlineResponse200131) *NullableInlineResponse200131 {
	return &NullableInlineResponse200131{value: val, isSet: true}
}

func (v NullableInlineResponse200131) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200131) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


