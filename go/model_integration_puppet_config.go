/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IntegrationPuppetConfig struct for IntegrationPuppetConfig
type IntegrationPuppetConfig struct {
	PuppetMaster *string `json:"puppetMaster,omitempty"`
	PuppetFireNow *string `json:"puppetFireNow,omitempty"`
	PuppetSshUser *string `json:"puppetSshUser,omitempty"`
	PuppetSshPassword *string `json:"puppetSshPassword,omitempty"`
	PuppetSshPasswordHash *string `json:"puppetSshPasswordHash,omitempty"`
}

// NewIntegrationPuppetConfig instantiates a new IntegrationPuppetConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationPuppetConfig() *IntegrationPuppetConfig {
	this := IntegrationPuppetConfig{}
	return &this
}

// NewIntegrationPuppetConfigWithDefaults instantiates a new IntegrationPuppetConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationPuppetConfigWithDefaults() *IntegrationPuppetConfig {
	this := IntegrationPuppetConfig{}
	return &this
}

// GetPuppetMaster returns the PuppetMaster field value if set, zero value otherwise.
func (o *IntegrationPuppetConfig) GetPuppetMaster() string {
	if o == nil || o.PuppetMaster == nil {
		var ret string
		return ret
	}
	return *o.PuppetMaster
}

// GetPuppetMasterOk returns a tuple with the PuppetMaster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationPuppetConfig) GetPuppetMasterOk() (*string, bool) {
	if o == nil || o.PuppetMaster == nil {
		return nil, false
	}
	return o.PuppetMaster, true
}

// HasPuppetMaster returns a boolean if a field has been set.
func (o *IntegrationPuppetConfig) HasPuppetMaster() bool {
	if o != nil && o.PuppetMaster != nil {
		return true
	}

	return false
}

// SetPuppetMaster gets a reference to the given string and assigns it to the PuppetMaster field.
func (o *IntegrationPuppetConfig) SetPuppetMaster(v string) {
	o.PuppetMaster = &v
}

// GetPuppetFireNow returns the PuppetFireNow field value if set, zero value otherwise.
func (o *IntegrationPuppetConfig) GetPuppetFireNow() string {
	if o == nil || o.PuppetFireNow == nil {
		var ret string
		return ret
	}
	return *o.PuppetFireNow
}

// GetPuppetFireNowOk returns a tuple with the PuppetFireNow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationPuppetConfig) GetPuppetFireNowOk() (*string, bool) {
	if o == nil || o.PuppetFireNow == nil {
		return nil, false
	}
	return o.PuppetFireNow, true
}

// HasPuppetFireNow returns a boolean if a field has been set.
func (o *IntegrationPuppetConfig) HasPuppetFireNow() bool {
	if o != nil && o.PuppetFireNow != nil {
		return true
	}

	return false
}

// SetPuppetFireNow gets a reference to the given string and assigns it to the PuppetFireNow field.
func (o *IntegrationPuppetConfig) SetPuppetFireNow(v string) {
	o.PuppetFireNow = &v
}

// GetPuppetSshUser returns the PuppetSshUser field value if set, zero value otherwise.
func (o *IntegrationPuppetConfig) GetPuppetSshUser() string {
	if o == nil || o.PuppetSshUser == nil {
		var ret string
		return ret
	}
	return *o.PuppetSshUser
}

// GetPuppetSshUserOk returns a tuple with the PuppetSshUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationPuppetConfig) GetPuppetSshUserOk() (*string, bool) {
	if o == nil || o.PuppetSshUser == nil {
		return nil, false
	}
	return o.PuppetSshUser, true
}

// HasPuppetSshUser returns a boolean if a field has been set.
func (o *IntegrationPuppetConfig) HasPuppetSshUser() bool {
	if o != nil && o.PuppetSshUser != nil {
		return true
	}

	return false
}

// SetPuppetSshUser gets a reference to the given string and assigns it to the PuppetSshUser field.
func (o *IntegrationPuppetConfig) SetPuppetSshUser(v string) {
	o.PuppetSshUser = &v
}

// GetPuppetSshPassword returns the PuppetSshPassword field value if set, zero value otherwise.
func (o *IntegrationPuppetConfig) GetPuppetSshPassword() string {
	if o == nil || o.PuppetSshPassword == nil {
		var ret string
		return ret
	}
	return *o.PuppetSshPassword
}

// GetPuppetSshPasswordOk returns a tuple with the PuppetSshPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationPuppetConfig) GetPuppetSshPasswordOk() (*string, bool) {
	if o == nil || o.PuppetSshPassword == nil {
		return nil, false
	}
	return o.PuppetSshPassword, true
}

// HasPuppetSshPassword returns a boolean if a field has been set.
func (o *IntegrationPuppetConfig) HasPuppetSshPassword() bool {
	if o != nil && o.PuppetSshPassword != nil {
		return true
	}

	return false
}

// SetPuppetSshPassword gets a reference to the given string and assigns it to the PuppetSshPassword field.
func (o *IntegrationPuppetConfig) SetPuppetSshPassword(v string) {
	o.PuppetSshPassword = &v
}

// GetPuppetSshPasswordHash returns the PuppetSshPasswordHash field value if set, zero value otherwise.
func (o *IntegrationPuppetConfig) GetPuppetSshPasswordHash() string {
	if o == nil || o.PuppetSshPasswordHash == nil {
		var ret string
		return ret
	}
	return *o.PuppetSshPasswordHash
}

// GetPuppetSshPasswordHashOk returns a tuple with the PuppetSshPasswordHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationPuppetConfig) GetPuppetSshPasswordHashOk() (*string, bool) {
	if o == nil || o.PuppetSshPasswordHash == nil {
		return nil, false
	}
	return o.PuppetSshPasswordHash, true
}

// HasPuppetSshPasswordHash returns a boolean if a field has been set.
func (o *IntegrationPuppetConfig) HasPuppetSshPasswordHash() bool {
	if o != nil && o.PuppetSshPasswordHash != nil {
		return true
	}

	return false
}

// SetPuppetSshPasswordHash gets a reference to the given string and assigns it to the PuppetSshPasswordHash field.
func (o *IntegrationPuppetConfig) SetPuppetSshPasswordHash(v string) {
	o.PuppetSshPasswordHash = &v
}

func (o IntegrationPuppetConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PuppetMaster != nil {
		toSerialize["puppetMaster"] = o.PuppetMaster
	}
	if o.PuppetFireNow != nil {
		toSerialize["puppetFireNow"] = o.PuppetFireNow
	}
	if o.PuppetSshUser != nil {
		toSerialize["puppetSshUser"] = o.PuppetSshUser
	}
	if o.PuppetSshPassword != nil {
		toSerialize["puppetSshPassword"] = o.PuppetSshPassword
	}
	if o.PuppetSshPasswordHash != nil {
		toSerialize["puppetSshPasswordHash"] = o.PuppetSshPasswordHash
	}
	return json.Marshal(toSerialize)
}

type NullableIntegrationPuppetConfig struct {
	value *IntegrationPuppetConfig
	isSet bool
}

func (v NullableIntegrationPuppetConfig) Get() *IntegrationPuppetConfig {
	return v.value
}

func (v *NullableIntegrationPuppetConfig) Set(val *IntegrationPuppetConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationPuppetConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationPuppetConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationPuppetConfig(val *IntegrationPuppetConfig) *NullableIntegrationPuppetConfig {
	return &NullableIntegrationPuppetConfig{value: val, isSet: true}
}

func (v NullableIntegrationPuppetConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationPuppetConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


