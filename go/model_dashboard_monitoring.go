/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DashboardMonitoring struct for DashboardMonitoring
type DashboardMonitoring struct {
	AvgHealth *float32 `json:"avgHealth,omitempty"`
	AvgResponseTime *float32 `json:"avgResponseTime,omitempty"`
	WarningApps *float32 `json:"warningApps,omitempty"`
	WarningChecks *float32 `json:"warningChecks,omitempty"`
	FailApps *float32 `json:"failApps,omitempty"`
	TotalApps *float32 `json:"totalApps,omitempty"`
	FailChecks *float32 `json:"failChecks,omitempty"`
	SuccessApps *float32 `json:"successApps,omitempty"`
	MutedApps *float32 `json:"mutedApps,omitempty"`
	SuccessChecks *float32 `json:"successChecks,omitempty"`
	TotalChecks *float32 `json:"totalChecks,omitempty"`
	MutedChecks *float32 `json:"mutedChecks,omitempty"`
	ResponseTimes *[]float32 `json:"responseTimes,omitempty"`
	AllSuccess *bool `json:"allSuccess,omitempty"`
	OpenIncidents *float32 `json:"openIncidents,omitempty"`
}

// NewDashboardMonitoring instantiates a new DashboardMonitoring object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardMonitoring() *DashboardMonitoring {
	this := DashboardMonitoring{}
	return &this
}

// NewDashboardMonitoringWithDefaults instantiates a new DashboardMonitoring object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardMonitoringWithDefaults() *DashboardMonitoring {
	this := DashboardMonitoring{}
	return &this
}

// GetAvgHealth returns the AvgHealth field value if set, zero value otherwise.
func (o *DashboardMonitoring) GetAvgHealth() float32 {
	if o == nil || o.AvgHealth == nil {
		var ret float32
		return ret
	}
	return *o.AvgHealth
}

// GetAvgHealthOk returns a tuple with the AvgHealth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardMonitoring) GetAvgHealthOk() (*float32, bool) {
	if o == nil || o.AvgHealth == nil {
		return nil, false
	}
	return o.AvgHealth, true
}

// HasAvgHealth returns a boolean if a field has been set.
func (o *DashboardMonitoring) HasAvgHealth() bool {
	if o != nil && o.AvgHealth != nil {
		return true
	}

	return false
}

// SetAvgHealth gets a reference to the given float32 and assigns it to the AvgHealth field.
func (o *DashboardMonitoring) SetAvgHealth(v float32) {
	o.AvgHealth = &v
}

// GetAvgResponseTime returns the AvgResponseTime field value if set, zero value otherwise.
func (o *DashboardMonitoring) GetAvgResponseTime() float32 {
	if o == nil || o.AvgResponseTime == nil {
		var ret float32
		return ret
	}
	return *o.AvgResponseTime
}

// GetAvgResponseTimeOk returns a tuple with the AvgResponseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardMonitoring) GetAvgResponseTimeOk() (*float32, bool) {
	if o == nil || o.AvgResponseTime == nil {
		return nil, false
	}
	return o.AvgResponseTime, true
}

// HasAvgResponseTime returns a boolean if a field has been set.
func (o *DashboardMonitoring) HasAvgResponseTime() bool {
	if o != nil && o.AvgResponseTime != nil {
		return true
	}

	return false
}

// SetAvgResponseTime gets a reference to the given float32 and assigns it to the AvgResponseTime field.
func (o *DashboardMonitoring) SetAvgResponseTime(v float32) {
	o.AvgResponseTime = &v
}

// GetWarningApps returns the WarningApps field value if set, zero value otherwise.
func (o *DashboardMonitoring) GetWarningApps() float32 {
	if o == nil || o.WarningApps == nil {
		var ret float32
		return ret
	}
	return *o.WarningApps
}

// GetWarningAppsOk returns a tuple with the WarningApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardMonitoring) GetWarningAppsOk() (*float32, bool) {
	if o == nil || o.WarningApps == nil {
		return nil, false
	}
	return o.WarningApps, true
}

// HasWarningApps returns a boolean if a field has been set.
func (o *DashboardMonitoring) HasWarningApps() bool {
	if o != nil && o.WarningApps != nil {
		return true
	}

	return false
}

// SetWarningApps gets a reference to the given float32 and assigns it to the WarningApps field.
func (o *DashboardMonitoring) SetWarningApps(v float32) {
	o.WarningApps = &v
}

// GetWarningChecks returns the WarningChecks field value if set, zero value otherwise.
func (o *DashboardMonitoring) GetWarningChecks() float32 {
	if o == nil || o.WarningChecks == nil {
		var ret float32
		return ret
	}
	return *o.WarningChecks
}

// GetWarningChecksOk returns a tuple with the WarningChecks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardMonitoring) GetWarningChecksOk() (*float32, bool) {
	if o == nil || o.WarningChecks == nil {
		return nil, false
	}
	return o.WarningChecks, true
}

// HasWarningChecks returns a boolean if a field has been set.
func (o *DashboardMonitoring) HasWarningChecks() bool {
	if o != nil && o.WarningChecks != nil {
		return true
	}

	return false
}

// SetWarningChecks gets a reference to the given float32 and assigns it to the WarningChecks field.
func (o *DashboardMonitoring) SetWarningChecks(v float32) {
	o.WarningChecks = &v
}

// GetFailApps returns the FailApps field value if set, zero value otherwise.
func (o *DashboardMonitoring) GetFailApps() float32 {
	if o == nil || o.FailApps == nil {
		var ret float32
		return ret
	}
	return *o.FailApps
}

// GetFailAppsOk returns a tuple with the FailApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardMonitoring) GetFailAppsOk() (*float32, bool) {
	if o == nil || o.FailApps == nil {
		return nil, false
	}
	return o.FailApps, true
}

// HasFailApps returns a boolean if a field has been set.
func (o *DashboardMonitoring) HasFailApps() bool {
	if o != nil && o.FailApps != nil {
		return true
	}

	return false
}

// SetFailApps gets a reference to the given float32 and assigns it to the FailApps field.
func (o *DashboardMonitoring) SetFailApps(v float32) {
	o.FailApps = &v
}

// GetTotalApps returns the TotalApps field value if set, zero value otherwise.
func (o *DashboardMonitoring) GetTotalApps() float32 {
	if o == nil || o.TotalApps == nil {
		var ret float32
		return ret
	}
	return *o.TotalApps
}

// GetTotalAppsOk returns a tuple with the TotalApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardMonitoring) GetTotalAppsOk() (*float32, bool) {
	if o == nil || o.TotalApps == nil {
		return nil, false
	}
	return o.TotalApps, true
}

// HasTotalApps returns a boolean if a field has been set.
func (o *DashboardMonitoring) HasTotalApps() bool {
	if o != nil && o.TotalApps != nil {
		return true
	}

	return false
}

// SetTotalApps gets a reference to the given float32 and assigns it to the TotalApps field.
func (o *DashboardMonitoring) SetTotalApps(v float32) {
	o.TotalApps = &v
}

// GetFailChecks returns the FailChecks field value if set, zero value otherwise.
func (o *DashboardMonitoring) GetFailChecks() float32 {
	if o == nil || o.FailChecks == nil {
		var ret float32
		return ret
	}
	return *o.FailChecks
}

// GetFailChecksOk returns a tuple with the FailChecks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardMonitoring) GetFailChecksOk() (*float32, bool) {
	if o == nil || o.FailChecks == nil {
		return nil, false
	}
	return o.FailChecks, true
}

// HasFailChecks returns a boolean if a field has been set.
func (o *DashboardMonitoring) HasFailChecks() bool {
	if o != nil && o.FailChecks != nil {
		return true
	}

	return false
}

// SetFailChecks gets a reference to the given float32 and assigns it to the FailChecks field.
func (o *DashboardMonitoring) SetFailChecks(v float32) {
	o.FailChecks = &v
}

// GetSuccessApps returns the SuccessApps field value if set, zero value otherwise.
func (o *DashboardMonitoring) GetSuccessApps() float32 {
	if o == nil || o.SuccessApps == nil {
		var ret float32
		return ret
	}
	return *o.SuccessApps
}

// GetSuccessAppsOk returns a tuple with the SuccessApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardMonitoring) GetSuccessAppsOk() (*float32, bool) {
	if o == nil || o.SuccessApps == nil {
		return nil, false
	}
	return o.SuccessApps, true
}

// HasSuccessApps returns a boolean if a field has been set.
func (o *DashboardMonitoring) HasSuccessApps() bool {
	if o != nil && o.SuccessApps != nil {
		return true
	}

	return false
}

// SetSuccessApps gets a reference to the given float32 and assigns it to the SuccessApps field.
func (o *DashboardMonitoring) SetSuccessApps(v float32) {
	o.SuccessApps = &v
}

// GetMutedApps returns the MutedApps field value if set, zero value otherwise.
func (o *DashboardMonitoring) GetMutedApps() float32 {
	if o == nil || o.MutedApps == nil {
		var ret float32
		return ret
	}
	return *o.MutedApps
}

// GetMutedAppsOk returns a tuple with the MutedApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardMonitoring) GetMutedAppsOk() (*float32, bool) {
	if o == nil || o.MutedApps == nil {
		return nil, false
	}
	return o.MutedApps, true
}

// HasMutedApps returns a boolean if a field has been set.
func (o *DashboardMonitoring) HasMutedApps() bool {
	if o != nil && o.MutedApps != nil {
		return true
	}

	return false
}

// SetMutedApps gets a reference to the given float32 and assigns it to the MutedApps field.
func (o *DashboardMonitoring) SetMutedApps(v float32) {
	o.MutedApps = &v
}

// GetSuccessChecks returns the SuccessChecks field value if set, zero value otherwise.
func (o *DashboardMonitoring) GetSuccessChecks() float32 {
	if o == nil || o.SuccessChecks == nil {
		var ret float32
		return ret
	}
	return *o.SuccessChecks
}

// GetSuccessChecksOk returns a tuple with the SuccessChecks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardMonitoring) GetSuccessChecksOk() (*float32, bool) {
	if o == nil || o.SuccessChecks == nil {
		return nil, false
	}
	return o.SuccessChecks, true
}

// HasSuccessChecks returns a boolean if a field has been set.
func (o *DashboardMonitoring) HasSuccessChecks() bool {
	if o != nil && o.SuccessChecks != nil {
		return true
	}

	return false
}

// SetSuccessChecks gets a reference to the given float32 and assigns it to the SuccessChecks field.
func (o *DashboardMonitoring) SetSuccessChecks(v float32) {
	o.SuccessChecks = &v
}

// GetTotalChecks returns the TotalChecks field value if set, zero value otherwise.
func (o *DashboardMonitoring) GetTotalChecks() float32 {
	if o == nil || o.TotalChecks == nil {
		var ret float32
		return ret
	}
	return *o.TotalChecks
}

// GetTotalChecksOk returns a tuple with the TotalChecks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardMonitoring) GetTotalChecksOk() (*float32, bool) {
	if o == nil || o.TotalChecks == nil {
		return nil, false
	}
	return o.TotalChecks, true
}

// HasTotalChecks returns a boolean if a field has been set.
func (o *DashboardMonitoring) HasTotalChecks() bool {
	if o != nil && o.TotalChecks != nil {
		return true
	}

	return false
}

// SetTotalChecks gets a reference to the given float32 and assigns it to the TotalChecks field.
func (o *DashboardMonitoring) SetTotalChecks(v float32) {
	o.TotalChecks = &v
}

// GetMutedChecks returns the MutedChecks field value if set, zero value otherwise.
func (o *DashboardMonitoring) GetMutedChecks() float32 {
	if o == nil || o.MutedChecks == nil {
		var ret float32
		return ret
	}
	return *o.MutedChecks
}

// GetMutedChecksOk returns a tuple with the MutedChecks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardMonitoring) GetMutedChecksOk() (*float32, bool) {
	if o == nil || o.MutedChecks == nil {
		return nil, false
	}
	return o.MutedChecks, true
}

// HasMutedChecks returns a boolean if a field has been set.
func (o *DashboardMonitoring) HasMutedChecks() bool {
	if o != nil && o.MutedChecks != nil {
		return true
	}

	return false
}

// SetMutedChecks gets a reference to the given float32 and assigns it to the MutedChecks field.
func (o *DashboardMonitoring) SetMutedChecks(v float32) {
	o.MutedChecks = &v
}

// GetResponseTimes returns the ResponseTimes field value if set, zero value otherwise.
func (o *DashboardMonitoring) GetResponseTimes() []float32 {
	if o == nil || o.ResponseTimes == nil {
		var ret []float32
		return ret
	}
	return *o.ResponseTimes
}

// GetResponseTimesOk returns a tuple with the ResponseTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardMonitoring) GetResponseTimesOk() (*[]float32, bool) {
	if o == nil || o.ResponseTimes == nil {
		return nil, false
	}
	return o.ResponseTimes, true
}

// HasResponseTimes returns a boolean if a field has been set.
func (o *DashboardMonitoring) HasResponseTimes() bool {
	if o != nil && o.ResponseTimes != nil {
		return true
	}

	return false
}

// SetResponseTimes gets a reference to the given []float32 and assigns it to the ResponseTimes field.
func (o *DashboardMonitoring) SetResponseTimes(v []float32) {
	o.ResponseTimes = &v
}

// GetAllSuccess returns the AllSuccess field value if set, zero value otherwise.
func (o *DashboardMonitoring) GetAllSuccess() bool {
	if o == nil || o.AllSuccess == nil {
		var ret bool
		return ret
	}
	return *o.AllSuccess
}

// GetAllSuccessOk returns a tuple with the AllSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardMonitoring) GetAllSuccessOk() (*bool, bool) {
	if o == nil || o.AllSuccess == nil {
		return nil, false
	}
	return o.AllSuccess, true
}

// HasAllSuccess returns a boolean if a field has been set.
func (o *DashboardMonitoring) HasAllSuccess() bool {
	if o != nil && o.AllSuccess != nil {
		return true
	}

	return false
}

// SetAllSuccess gets a reference to the given bool and assigns it to the AllSuccess field.
func (o *DashboardMonitoring) SetAllSuccess(v bool) {
	o.AllSuccess = &v
}

// GetOpenIncidents returns the OpenIncidents field value if set, zero value otherwise.
func (o *DashboardMonitoring) GetOpenIncidents() float32 {
	if o == nil || o.OpenIncidents == nil {
		var ret float32
		return ret
	}
	return *o.OpenIncidents
}

// GetOpenIncidentsOk returns a tuple with the OpenIncidents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardMonitoring) GetOpenIncidentsOk() (*float32, bool) {
	if o == nil || o.OpenIncidents == nil {
		return nil, false
	}
	return o.OpenIncidents, true
}

// HasOpenIncidents returns a boolean if a field has been set.
func (o *DashboardMonitoring) HasOpenIncidents() bool {
	if o != nil && o.OpenIncidents != nil {
		return true
	}

	return false
}

// SetOpenIncidents gets a reference to the given float32 and assigns it to the OpenIncidents field.
func (o *DashboardMonitoring) SetOpenIncidents(v float32) {
	o.OpenIncidents = &v
}

func (o DashboardMonitoring) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AvgHealth != nil {
		toSerialize["avgHealth"] = o.AvgHealth
	}
	if o.AvgResponseTime != nil {
		toSerialize["avgResponseTime"] = o.AvgResponseTime
	}
	if o.WarningApps != nil {
		toSerialize["warningApps"] = o.WarningApps
	}
	if o.WarningChecks != nil {
		toSerialize["warningChecks"] = o.WarningChecks
	}
	if o.FailApps != nil {
		toSerialize["failApps"] = o.FailApps
	}
	if o.TotalApps != nil {
		toSerialize["totalApps"] = o.TotalApps
	}
	if o.FailChecks != nil {
		toSerialize["failChecks"] = o.FailChecks
	}
	if o.SuccessApps != nil {
		toSerialize["successApps"] = o.SuccessApps
	}
	if o.MutedApps != nil {
		toSerialize["mutedApps"] = o.MutedApps
	}
	if o.SuccessChecks != nil {
		toSerialize["successChecks"] = o.SuccessChecks
	}
	if o.TotalChecks != nil {
		toSerialize["totalChecks"] = o.TotalChecks
	}
	if o.MutedChecks != nil {
		toSerialize["mutedChecks"] = o.MutedChecks
	}
	if o.ResponseTimes != nil {
		toSerialize["responseTimes"] = o.ResponseTimes
	}
	if o.AllSuccess != nil {
		toSerialize["allSuccess"] = o.AllSuccess
	}
	if o.OpenIncidents != nil {
		toSerialize["openIncidents"] = o.OpenIncidents
	}
	return json.Marshal(toSerialize)
}

type NullableDashboardMonitoring struct {
	value *DashboardMonitoring
	isSet bool
}

func (v NullableDashboardMonitoring) Get() *DashboardMonitoring {
	return v.value
}

func (v *NullableDashboardMonitoring) Set(val *DashboardMonitoring) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardMonitoring) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardMonitoring) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardMonitoring(val *DashboardMonitoring) *NullableDashboardMonitoring {
	return &NullableDashboardMonitoring{value: val, isSet: true}
}

func (v NullableDashboardMonitoring) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardMonitoring) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


