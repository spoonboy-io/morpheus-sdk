/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20099 struct for InlineResponse20099
type InlineResponse20099 struct {
	Rule *NetworkRouterFirewallRule `json:"rule,omitempty"`
}

// NewInlineResponse20099 instantiates a new InlineResponse20099 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20099() *InlineResponse20099 {
	this := InlineResponse20099{}
	return &this
}

// NewInlineResponse20099WithDefaults instantiates a new InlineResponse20099 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20099WithDefaults() *InlineResponse20099 {
	this := InlineResponse20099{}
	return &this
}

// GetRule returns the Rule field value if set, zero value otherwise.
func (o *InlineResponse20099) GetRule() NetworkRouterFirewallRule {
	if o == nil || o.Rule == nil {
		var ret NetworkRouterFirewallRule
		return ret
	}
	return *o.Rule
}

// GetRuleOk returns a tuple with the Rule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20099) GetRuleOk() (*NetworkRouterFirewallRule, bool) {
	if o == nil || o.Rule == nil {
		return nil, false
	}
	return o.Rule, true
}

// HasRule returns a boolean if a field has been set.
func (o *InlineResponse20099) HasRule() bool {
	if o != nil && o.Rule != nil {
		return true
	}

	return false
}

// SetRule gets a reference to the given NetworkRouterFirewallRule and assigns it to the Rule field.
func (o *InlineResponse20099) SetRule(v NetworkRouterFirewallRule) {
	o.Rule = &v
}

func (o InlineResponse20099) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Rule != nil {
		toSerialize["rule"] = o.Rule
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20099 struct {
	value *InlineResponse20099
	isSet bool
}

func (v NullableInlineResponse20099) Get() *InlineResponse20099 {
	return v.value
}

func (v *NullableInlineResponse20099) Set(val *InlineResponse20099) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20099) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20099) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20099(val *InlineResponse20099) *NullableInlineResponse20099 {
	return &NullableInlineResponse20099{value: val, isSet: true}
}

func (v NullableInlineResponse20099) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20099) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


