/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20015 struct for InlineResponse20015
type InlineResponse20015 struct {
	CatalogItemType *CatalogItemType `json:"catalogItemType,omitempty"`
}

// NewInlineResponse20015 instantiates a new InlineResponse20015 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20015() *InlineResponse20015 {
	this := InlineResponse20015{}
	return &this
}

// NewInlineResponse20015WithDefaults instantiates a new InlineResponse20015 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20015WithDefaults() *InlineResponse20015 {
	this := InlineResponse20015{}
	return &this
}

// GetCatalogItemType returns the CatalogItemType field value if set, zero value otherwise.
func (o *InlineResponse20015) GetCatalogItemType() CatalogItemType {
	if o == nil || o.CatalogItemType == nil {
		var ret CatalogItemType
		return ret
	}
	return *o.CatalogItemType
}

// GetCatalogItemTypeOk returns a tuple with the CatalogItemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20015) GetCatalogItemTypeOk() (*CatalogItemType, bool) {
	if o == nil || o.CatalogItemType == nil {
		return nil, false
	}
	return o.CatalogItemType, true
}

// HasCatalogItemType returns a boolean if a field has been set.
func (o *InlineResponse20015) HasCatalogItemType() bool {
	if o != nil && o.CatalogItemType != nil {
		return true
	}

	return false
}

// SetCatalogItemType gets a reference to the given CatalogItemType and assigns it to the CatalogItemType field.
func (o *InlineResponse20015) SetCatalogItemType(v CatalogItemType) {
	o.CatalogItemType = &v
}

func (o InlineResponse20015) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CatalogItemType != nil {
		toSerialize["catalogItemType"] = o.CatalogItemType
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20015 struct {
	value *InlineResponse20015
	isSet bool
}

func (v NullableInlineResponse20015) Get() *InlineResponse20015 {
	return v.value
}

func (v *NullableInlineResponse20015) Set(val *InlineResponse20015) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20015) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20015) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20015(val *InlineResponse20015) *NullableInlineResponse20015 {
	return &NullableInlineResponse20015{value: val, isSet: true}
}

func (v NullableInlineResponse20015) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20015) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


