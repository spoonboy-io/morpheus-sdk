/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20090NetworkGroups struct for InlineResponse20090NetworkGroups
type InlineResponse20090NetworkGroups struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	Active *bool `json:"active,omitempty"`
	Networks *[]int64 `json:"networks,omitempty"`
	Subnets *[]map[string]interface{} `json:"subnets,omitempty"`
	Tenants *[]InlineResponse20040AppDeployInstance `json:"tenants,omitempty"`
}

// NewInlineResponse20090NetworkGroups instantiates a new InlineResponse20090NetworkGroups object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20090NetworkGroups() *InlineResponse20090NetworkGroups {
	this := InlineResponse20090NetworkGroups{}
	return &this
}

// NewInlineResponse20090NetworkGroupsWithDefaults instantiates a new InlineResponse20090NetworkGroups object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20090NetworkGroupsWithDefaults() *InlineResponse20090NetworkGroups {
	this := InlineResponse20090NetworkGroups{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20090NetworkGroups) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20090NetworkGroups) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20090NetworkGroups) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *InlineResponse20090NetworkGroups) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse20090NetworkGroups) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20090NetworkGroups) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse20090NetworkGroups) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse20090NetworkGroups) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InlineResponse20090NetworkGroups) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20090NetworkGroups) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineResponse20090NetworkGroups) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InlineResponse20090NetworkGroups) SetDescription(v string) {
	o.Description = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *InlineResponse20090NetworkGroups) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20090NetworkGroups) GetVisibilityOk() (*string, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *InlineResponse20090NetworkGroups) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *InlineResponse20090NetworkGroups) SetVisibility(v string) {
	o.Visibility = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *InlineResponse20090NetworkGroups) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20090NetworkGroups) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *InlineResponse20090NetworkGroups) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *InlineResponse20090NetworkGroups) SetActive(v bool) {
	o.Active = &v
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *InlineResponse20090NetworkGroups) GetNetworks() []int64 {
	if o == nil || o.Networks == nil {
		var ret []int64
		return ret
	}
	return *o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20090NetworkGroups) GetNetworksOk() (*[]int64, bool) {
	if o == nil || o.Networks == nil {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *InlineResponse20090NetworkGroups) HasNetworks() bool {
	if o != nil && o.Networks != nil {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []int64 and assigns it to the Networks field.
func (o *InlineResponse20090NetworkGroups) SetNetworks(v []int64) {
	o.Networks = &v
}

// GetSubnets returns the Subnets field value if set, zero value otherwise.
func (o *InlineResponse20090NetworkGroups) GetSubnets() []map[string]interface{} {
	if o == nil || o.Subnets == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Subnets
}

// GetSubnetsOk returns a tuple with the Subnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20090NetworkGroups) GetSubnetsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Subnets == nil {
		return nil, false
	}
	return o.Subnets, true
}

// HasSubnets returns a boolean if a field has been set.
func (o *InlineResponse20090NetworkGroups) HasSubnets() bool {
	if o != nil && o.Subnets != nil {
		return true
	}

	return false
}

// SetSubnets gets a reference to the given []map[string]interface{} and assigns it to the Subnets field.
func (o *InlineResponse20090NetworkGroups) SetSubnets(v []map[string]interface{}) {
	o.Subnets = &v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *InlineResponse20090NetworkGroups) GetTenants() []InlineResponse20040AppDeployInstance {
	if o == nil || o.Tenants == nil {
		var ret []InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20090NetworkGroups) GetTenantsOk() (*[]InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Tenants == nil {
		return nil, false
	}
	return o.Tenants, true
}

// HasTenants returns a boolean if a field has been set.
func (o *InlineResponse20090NetworkGroups) HasTenants() bool {
	if o != nil && o.Tenants != nil {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []InlineResponse20040AppDeployInstance and assigns it to the Tenants field.
func (o *InlineResponse20090NetworkGroups) SetTenants(v []InlineResponse20040AppDeployInstance) {
	o.Tenants = &v
}

func (o InlineResponse20090NetworkGroups) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.Networks != nil {
		toSerialize["networks"] = o.Networks
	}
	if o.Subnets != nil {
		toSerialize["subnets"] = o.Subnets
	}
	if o.Tenants != nil {
		toSerialize["tenants"] = o.Tenants
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20090NetworkGroups struct {
	value *InlineResponse20090NetworkGroups
	isSet bool
}

func (v NullableInlineResponse20090NetworkGroups) Get() *InlineResponse20090NetworkGroups {
	return v.value
}

func (v *NullableInlineResponse20090NetworkGroups) Set(val *InlineResponse20090NetworkGroups) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20090NetworkGroups) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20090NetworkGroups) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20090NetworkGroups(val *InlineResponse20090NetworkGroups) *NullableInlineResponse20090NetworkGroups {
	return &NullableInlineResponse20090NetworkGroups{value: val, isSet: true}
}

func (v NullableInlineResponse20090NetworkGroups) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20090NetworkGroups) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


