/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// GuidanceAzureReservations struct for GuidanceAzureReservations
type GuidanceAzureReservations struct {
	Id *int64 `json:"id,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	ActionCategory *string `json:"actionCategory,omitempty"`
	ActionMessage *string `json:"actionMessage,omitempty"`
	ActionTitle *string `json:"actionTitle,omitempty"`
	ActionType *string `json:"actionType,omitempty"`
	ActionValue *string `json:"actionValue,omitempty"`
	ActionValueType *string `json:"actionValueType,omitempty"`
	ActionPlanId NullableString `json:"actionPlanId,omitempty"`
	StatusMessage *string `json:"statusMessage,omitempty"`
	AccountId *int64 `json:"accountId,omitempty"`
	UserId NullableString `json:"userId,omitempty"`
	SiteId *int64 `json:"siteId,omitempty"`
	Zone *GuidanceVmwareSizingZone `json:"zone,omitempty"`
	State *string `json:"state,omitempty"`
	StateMessage NullableString `json:"stateMessage,omitempty"`
	Severity *string `json:"severity,omitempty"`
	Resolved *bool `json:"resolved,omitempty"`
	ResolvedMessage NullableString `json:"resolvedMessage,omitempty"`
	RefType *string `json:"refType,omitempty"`
	RefId *int64 `json:"refId,omitempty"`
	RefName *string `json:"refName,omitempty"`
	Type *GuidanceVmwareSizingType `json:"type,omitempty"`
	Savings *GuidanceVmwareSizingSavings `json:"savings,omitempty"`
	Config *GuidanceAzureReservationsConfig `json:"config,omitempty"`
}

// NewGuidanceAzureReservations instantiates a new GuidanceAzureReservations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGuidanceAzureReservations() *GuidanceAzureReservations {
	this := GuidanceAzureReservations{}
	return &this
}

// NewGuidanceAzureReservationsWithDefaults instantiates a new GuidanceAzureReservations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGuidanceAzureReservationsWithDefaults() *GuidanceAzureReservations {
	this := GuidanceAzureReservations{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GuidanceAzureReservations) SetId(v int64) {
	o.Id = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetDateCreated() time.Time {
	if o == nil || o.DateCreated == nil {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *GuidanceAzureReservations) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *GuidanceAzureReservations) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetActionCategory returns the ActionCategory field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetActionCategory() string {
	if o == nil || o.ActionCategory == nil {
		var ret string
		return ret
	}
	return *o.ActionCategory
}

// GetActionCategoryOk returns a tuple with the ActionCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetActionCategoryOk() (*string, bool) {
	if o == nil || o.ActionCategory == nil {
		return nil, false
	}
	return o.ActionCategory, true
}

// HasActionCategory returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasActionCategory() bool {
	if o != nil && o.ActionCategory != nil {
		return true
	}

	return false
}

// SetActionCategory gets a reference to the given string and assigns it to the ActionCategory field.
func (o *GuidanceAzureReservations) SetActionCategory(v string) {
	o.ActionCategory = &v
}

// GetActionMessage returns the ActionMessage field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetActionMessage() string {
	if o == nil || o.ActionMessage == nil {
		var ret string
		return ret
	}
	return *o.ActionMessage
}

// GetActionMessageOk returns a tuple with the ActionMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetActionMessageOk() (*string, bool) {
	if o == nil || o.ActionMessage == nil {
		return nil, false
	}
	return o.ActionMessage, true
}

// HasActionMessage returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasActionMessage() bool {
	if o != nil && o.ActionMessage != nil {
		return true
	}

	return false
}

// SetActionMessage gets a reference to the given string and assigns it to the ActionMessage field.
func (o *GuidanceAzureReservations) SetActionMessage(v string) {
	o.ActionMessage = &v
}

// GetActionTitle returns the ActionTitle field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetActionTitle() string {
	if o == nil || o.ActionTitle == nil {
		var ret string
		return ret
	}
	return *o.ActionTitle
}

// GetActionTitleOk returns a tuple with the ActionTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetActionTitleOk() (*string, bool) {
	if o == nil || o.ActionTitle == nil {
		return nil, false
	}
	return o.ActionTitle, true
}

// HasActionTitle returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasActionTitle() bool {
	if o != nil && o.ActionTitle != nil {
		return true
	}

	return false
}

// SetActionTitle gets a reference to the given string and assigns it to the ActionTitle field.
func (o *GuidanceAzureReservations) SetActionTitle(v string) {
	o.ActionTitle = &v
}

// GetActionType returns the ActionType field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetActionType() string {
	if o == nil || o.ActionType == nil {
		var ret string
		return ret
	}
	return *o.ActionType
}

// GetActionTypeOk returns a tuple with the ActionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetActionTypeOk() (*string, bool) {
	if o == nil || o.ActionType == nil {
		return nil, false
	}
	return o.ActionType, true
}

// HasActionType returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasActionType() bool {
	if o != nil && o.ActionType != nil {
		return true
	}

	return false
}

// SetActionType gets a reference to the given string and assigns it to the ActionType field.
func (o *GuidanceAzureReservations) SetActionType(v string) {
	o.ActionType = &v
}

// GetActionValue returns the ActionValue field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetActionValue() string {
	if o == nil || o.ActionValue == nil {
		var ret string
		return ret
	}
	return *o.ActionValue
}

// GetActionValueOk returns a tuple with the ActionValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetActionValueOk() (*string, bool) {
	if o == nil || o.ActionValue == nil {
		return nil, false
	}
	return o.ActionValue, true
}

// HasActionValue returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasActionValue() bool {
	if o != nil && o.ActionValue != nil {
		return true
	}

	return false
}

// SetActionValue gets a reference to the given string and assigns it to the ActionValue field.
func (o *GuidanceAzureReservations) SetActionValue(v string) {
	o.ActionValue = &v
}

// GetActionValueType returns the ActionValueType field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetActionValueType() string {
	if o == nil || o.ActionValueType == nil {
		var ret string
		return ret
	}
	return *o.ActionValueType
}

// GetActionValueTypeOk returns a tuple with the ActionValueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetActionValueTypeOk() (*string, bool) {
	if o == nil || o.ActionValueType == nil {
		return nil, false
	}
	return o.ActionValueType, true
}

// HasActionValueType returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasActionValueType() bool {
	if o != nil && o.ActionValueType != nil {
		return true
	}

	return false
}

// SetActionValueType gets a reference to the given string and assigns it to the ActionValueType field.
func (o *GuidanceAzureReservations) SetActionValueType(v string) {
	o.ActionValueType = &v
}

// GetActionPlanId returns the ActionPlanId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceAzureReservations) GetActionPlanId() string {
	if o == nil || o.ActionPlanId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ActionPlanId.Get()
}

// GetActionPlanIdOk returns a tuple with the ActionPlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceAzureReservations) GetActionPlanIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ActionPlanId.Get(), o.ActionPlanId.IsSet()
}

// HasActionPlanId returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasActionPlanId() bool {
	if o != nil && o.ActionPlanId.IsSet() {
		return true
	}

	return false
}

// SetActionPlanId gets a reference to the given NullableString and assigns it to the ActionPlanId field.
func (o *GuidanceAzureReservations) SetActionPlanId(v string) {
	o.ActionPlanId.Set(&v)
}
// SetActionPlanIdNil sets the value for ActionPlanId to be an explicit nil
func (o *GuidanceAzureReservations) SetActionPlanIdNil() {
	o.ActionPlanId.Set(nil)
}

// UnsetActionPlanId ensures that no value is present for ActionPlanId, not even an explicit nil
func (o *GuidanceAzureReservations) UnsetActionPlanId() {
	o.ActionPlanId.Unset()
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetStatusMessage() string {
	if o == nil || o.StatusMessage == nil {
		var ret string
		return ret
	}
	return *o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetStatusMessageOk() (*string, bool) {
	if o == nil || o.StatusMessage == nil {
		return nil, false
	}
	return o.StatusMessage, true
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasStatusMessage() bool {
	if o != nil && o.StatusMessage != nil {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given string and assigns it to the StatusMessage field.
func (o *GuidanceAzureReservations) SetStatusMessage(v string) {
	o.StatusMessage = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetAccountId() int64 {
	if o == nil || o.AccountId == nil {
		var ret int64
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetAccountIdOk() (*int64, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int64 and assigns it to the AccountId field.
func (o *GuidanceAzureReservations) SetAccountId(v int64) {
	o.AccountId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceAzureReservations) GetUserId() string {
	if o == nil || o.UserId.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceAzureReservations) GetUserIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *GuidanceAzureReservations) SetUserId(v string) {
	o.UserId.Set(&v)
}
// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *GuidanceAzureReservations) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *GuidanceAzureReservations) UnsetUserId() {
	o.UserId.Unset()
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetSiteId() int64 {
	if o == nil || o.SiteId == nil {
		var ret int64
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetSiteIdOk() (*int64, bool) {
	if o == nil || o.SiteId == nil {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasSiteId() bool {
	if o != nil && o.SiteId != nil {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given int64 and assigns it to the SiteId field.
func (o *GuidanceAzureReservations) SetSiteId(v int64) {
	o.SiteId = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetZone() GuidanceVmwareSizingZone {
	if o == nil || o.Zone == nil {
		var ret GuidanceVmwareSizingZone
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetZoneOk() (*GuidanceVmwareSizingZone, bool) {
	if o == nil || o.Zone == nil {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasZone() bool {
	if o != nil && o.Zone != nil {
		return true
	}

	return false
}

// SetZone gets a reference to the given GuidanceVmwareSizingZone and assigns it to the Zone field.
func (o *GuidanceAzureReservations) SetZone(v GuidanceVmwareSizingZone) {
	o.Zone = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *GuidanceAzureReservations) SetState(v string) {
	o.State = &v
}

// GetStateMessage returns the StateMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceAzureReservations) GetStateMessage() string {
	if o == nil || o.StateMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.StateMessage.Get()
}

// GetStateMessageOk returns a tuple with the StateMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceAzureReservations) GetStateMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StateMessage.Get(), o.StateMessage.IsSet()
}

// HasStateMessage returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasStateMessage() bool {
	if o != nil && o.StateMessage.IsSet() {
		return true
	}

	return false
}

// SetStateMessage gets a reference to the given NullableString and assigns it to the StateMessage field.
func (o *GuidanceAzureReservations) SetStateMessage(v string) {
	o.StateMessage.Set(&v)
}
// SetStateMessageNil sets the value for StateMessage to be an explicit nil
func (o *GuidanceAzureReservations) SetStateMessageNil() {
	o.StateMessage.Set(nil)
}

// UnsetStateMessage ensures that no value is present for StateMessage, not even an explicit nil
func (o *GuidanceAzureReservations) UnsetStateMessage() {
	o.StateMessage.Unset()
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetSeverity() string {
	if o == nil || o.Severity == nil {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetSeverityOk() (*string, bool) {
	if o == nil || o.Severity == nil {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasSeverity() bool {
	if o != nil && o.Severity != nil {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *GuidanceAzureReservations) SetSeverity(v string) {
	o.Severity = &v
}

// GetResolved returns the Resolved field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetResolved() bool {
	if o == nil || o.Resolved == nil {
		var ret bool
		return ret
	}
	return *o.Resolved
}

// GetResolvedOk returns a tuple with the Resolved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetResolvedOk() (*bool, bool) {
	if o == nil || o.Resolved == nil {
		return nil, false
	}
	return o.Resolved, true
}

// HasResolved returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasResolved() bool {
	if o != nil && o.Resolved != nil {
		return true
	}

	return false
}

// SetResolved gets a reference to the given bool and assigns it to the Resolved field.
func (o *GuidanceAzureReservations) SetResolved(v bool) {
	o.Resolved = &v
}

// GetResolvedMessage returns the ResolvedMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GuidanceAzureReservations) GetResolvedMessage() string {
	if o == nil || o.ResolvedMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.ResolvedMessage.Get()
}

// GetResolvedMessageOk returns a tuple with the ResolvedMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GuidanceAzureReservations) GetResolvedMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ResolvedMessage.Get(), o.ResolvedMessage.IsSet()
}

// HasResolvedMessage returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasResolvedMessage() bool {
	if o != nil && o.ResolvedMessage.IsSet() {
		return true
	}

	return false
}

// SetResolvedMessage gets a reference to the given NullableString and assigns it to the ResolvedMessage field.
func (o *GuidanceAzureReservations) SetResolvedMessage(v string) {
	o.ResolvedMessage.Set(&v)
}
// SetResolvedMessageNil sets the value for ResolvedMessage to be an explicit nil
func (o *GuidanceAzureReservations) SetResolvedMessageNil() {
	o.ResolvedMessage.Set(nil)
}

// UnsetResolvedMessage ensures that no value is present for ResolvedMessage, not even an explicit nil
func (o *GuidanceAzureReservations) UnsetResolvedMessage() {
	o.ResolvedMessage.Unset()
}

// GetRefType returns the RefType field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetRefType() string {
	if o == nil || o.RefType == nil {
		var ret string
		return ret
	}
	return *o.RefType
}

// GetRefTypeOk returns a tuple with the RefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetRefTypeOk() (*string, bool) {
	if o == nil || o.RefType == nil {
		return nil, false
	}
	return o.RefType, true
}

// HasRefType returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasRefType() bool {
	if o != nil && o.RefType != nil {
		return true
	}

	return false
}

// SetRefType gets a reference to the given string and assigns it to the RefType field.
func (o *GuidanceAzureReservations) SetRefType(v string) {
	o.RefType = &v
}

// GetRefId returns the RefId field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetRefId() int64 {
	if o == nil || o.RefId == nil {
		var ret int64
		return ret
	}
	return *o.RefId
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetRefIdOk() (*int64, bool) {
	if o == nil || o.RefId == nil {
		return nil, false
	}
	return o.RefId, true
}

// HasRefId returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasRefId() bool {
	if o != nil && o.RefId != nil {
		return true
	}

	return false
}

// SetRefId gets a reference to the given int64 and assigns it to the RefId field.
func (o *GuidanceAzureReservations) SetRefId(v int64) {
	o.RefId = &v
}

// GetRefName returns the RefName field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetRefName() string {
	if o == nil || o.RefName == nil {
		var ret string
		return ret
	}
	return *o.RefName
}

// GetRefNameOk returns a tuple with the RefName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetRefNameOk() (*string, bool) {
	if o == nil || o.RefName == nil {
		return nil, false
	}
	return o.RefName, true
}

// HasRefName returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasRefName() bool {
	if o != nil && o.RefName != nil {
		return true
	}

	return false
}

// SetRefName gets a reference to the given string and assigns it to the RefName field.
func (o *GuidanceAzureReservations) SetRefName(v string) {
	o.RefName = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetType() GuidanceVmwareSizingType {
	if o == nil || o.Type == nil {
		var ret GuidanceVmwareSizingType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetTypeOk() (*GuidanceVmwareSizingType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given GuidanceVmwareSizingType and assigns it to the Type field.
func (o *GuidanceAzureReservations) SetType(v GuidanceVmwareSizingType) {
	o.Type = &v
}

// GetSavings returns the Savings field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetSavings() GuidanceVmwareSizingSavings {
	if o == nil || o.Savings == nil {
		var ret GuidanceVmwareSizingSavings
		return ret
	}
	return *o.Savings
}

// GetSavingsOk returns a tuple with the Savings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetSavingsOk() (*GuidanceVmwareSizingSavings, bool) {
	if o == nil || o.Savings == nil {
		return nil, false
	}
	return o.Savings, true
}

// HasSavings returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasSavings() bool {
	if o != nil && o.Savings != nil {
		return true
	}

	return false
}

// SetSavings gets a reference to the given GuidanceVmwareSizingSavings and assigns it to the Savings field.
func (o *GuidanceAzureReservations) SetSavings(v GuidanceVmwareSizingSavings) {
	o.Savings = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *GuidanceAzureReservations) GetConfig() GuidanceAzureReservationsConfig {
	if o == nil || o.Config == nil {
		var ret GuidanceAzureReservationsConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservations) GetConfigOk() (*GuidanceAzureReservationsConfig, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *GuidanceAzureReservations) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given GuidanceAzureReservationsConfig and assigns it to the Config field.
func (o *GuidanceAzureReservations) SetConfig(v GuidanceAzureReservationsConfig) {
	o.Config = &v
}

func (o GuidanceAzureReservations) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if o.ActionCategory != nil {
		toSerialize["actionCategory"] = o.ActionCategory
	}
	if o.ActionMessage != nil {
		toSerialize["actionMessage"] = o.ActionMessage
	}
	if o.ActionTitle != nil {
		toSerialize["actionTitle"] = o.ActionTitle
	}
	if o.ActionType != nil {
		toSerialize["actionType"] = o.ActionType
	}
	if o.ActionValue != nil {
		toSerialize["actionValue"] = o.ActionValue
	}
	if o.ActionValueType != nil {
		toSerialize["actionValueType"] = o.ActionValueType
	}
	if o.ActionPlanId.IsSet() {
		toSerialize["actionPlanId"] = o.ActionPlanId.Get()
	}
	if o.StatusMessage != nil {
		toSerialize["statusMessage"] = o.StatusMessage
	}
	if o.AccountId != nil {
		toSerialize["accountId"] = o.AccountId
	}
	if o.UserId.IsSet() {
		toSerialize["userId"] = o.UserId.Get()
	}
	if o.SiteId != nil {
		toSerialize["siteId"] = o.SiteId
	}
	if o.Zone != nil {
		toSerialize["zone"] = o.Zone
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.StateMessage.IsSet() {
		toSerialize["stateMessage"] = o.StateMessage.Get()
	}
	if o.Severity != nil {
		toSerialize["severity"] = o.Severity
	}
	if o.Resolved != nil {
		toSerialize["resolved"] = o.Resolved
	}
	if o.ResolvedMessage.IsSet() {
		toSerialize["resolvedMessage"] = o.ResolvedMessage.Get()
	}
	if o.RefType != nil {
		toSerialize["refType"] = o.RefType
	}
	if o.RefId != nil {
		toSerialize["refId"] = o.RefId
	}
	if o.RefName != nil {
		toSerialize["refName"] = o.RefName
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Savings != nil {
		toSerialize["savings"] = o.Savings
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	return json.Marshal(toSerialize)
}

type NullableGuidanceAzureReservations struct {
	value *GuidanceAzureReservations
	isSet bool
}

func (v NullableGuidanceAzureReservations) Get() *GuidanceAzureReservations {
	return v.value
}

func (v *NullableGuidanceAzureReservations) Set(val *GuidanceAzureReservations) {
	v.value = val
	v.isSet = true
}

func (v NullableGuidanceAzureReservations) IsSet() bool {
	return v.isSet
}

func (v *NullableGuidanceAzureReservations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGuidanceAzureReservations(val *GuidanceAzureReservations) *NullableGuidanceAzureReservations {
	return &NullableGuidanceAzureReservations{value: val, isSet: true}
}

func (v NullableGuidanceAzureReservations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGuidanceAzureReservations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


