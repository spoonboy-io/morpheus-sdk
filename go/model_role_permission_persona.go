/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RolePermissionPersona struct for RolePermissionPersona
type RolePermissionPersona struct {
	// code of the Persona, eg. `standard` or `serviceCatalog`
	PersonaCode string `json:"personaCode"`
	// The new access level.
	Access string `json:"access"`
}

// NewRolePermissionPersona instantiates a new RolePermissionPersona object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRolePermissionPersona(personaCode string, access string, ) *RolePermissionPersona {
	this := RolePermissionPersona{}
	this.PersonaCode = personaCode
	this.Access = access
	return &this
}

// NewRolePermissionPersonaWithDefaults instantiates a new RolePermissionPersona object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolePermissionPersonaWithDefaults() *RolePermissionPersona {
	this := RolePermissionPersona{}
	return &this
}

// GetPersonaCode returns the PersonaCode field value
func (o *RolePermissionPersona) GetPersonaCode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.PersonaCode
}

// GetPersonaCodeOk returns a tuple with the PersonaCode field value
// and a boolean to check if the value has been set.
func (o *RolePermissionPersona) GetPersonaCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PersonaCode, true
}

// SetPersonaCode sets field value
func (o *RolePermissionPersona) SetPersonaCode(v string) {
	o.PersonaCode = v
}

// GetAccess returns the Access field value
func (o *RolePermissionPersona) GetAccess() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Access
}

// GetAccessOk returns a tuple with the Access field value
// and a boolean to check if the value has been set.
func (o *RolePermissionPersona) GetAccessOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Access, true
}

// SetAccess sets field value
func (o *RolePermissionPersona) SetAccess(v string) {
	o.Access = v
}

func (o RolePermissionPersona) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["personaCode"] = o.PersonaCode
	}
	if true {
		toSerialize["access"] = o.Access
	}
	return json.Marshal(toSerialize)
}

type NullableRolePermissionPersona struct {
	value *RolePermissionPersona
	isSet bool
}

func (v NullableRolePermissionPersona) Get() *RolePermissionPersona {
	return v.value
}

func (v *NullableRolePermissionPersona) Set(val *RolePermissionPersona) {
	v.value = val
	v.isSet = true
}

func (v NullableRolePermissionPersona) IsSet() bool {
	return v.isSet
}

func (v *NullableRolePermissionPersona) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRolePermissionPersona(val *RolePermissionPersona) *NullableRolePermissionPersona {
	return &NullableRolePermissionPersona{value: val, isSet: true}
}

func (v NullableRolePermissionPersona) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRolePermissionPersona) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


