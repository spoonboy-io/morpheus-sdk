/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListArchiveBuckets200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListArchiveBuckets200Response{}

// ListArchiveBuckets200Response struct for ListArchiveBuckets200Response
type ListArchiveBuckets200Response struct {
	Meta *MetaMeta `json:"meta,omitempty"`
	ArchiveBuckets []ArchiveBucket `json:"archiveBuckets,omitempty"`
	ArchiveBucketCount *int64 `json:"archiveBucketCount,omitempty"`
}

// NewListArchiveBuckets200Response instantiates a new ListArchiveBuckets200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListArchiveBuckets200Response() *ListArchiveBuckets200Response {
	this := ListArchiveBuckets200Response{}
	return &this
}

// NewListArchiveBuckets200ResponseWithDefaults instantiates a new ListArchiveBuckets200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListArchiveBuckets200ResponseWithDefaults() *ListArchiveBuckets200Response {
	this := ListArchiveBuckets200Response{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListArchiveBuckets200Response) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListArchiveBuckets200Response) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ListArchiveBuckets200Response) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *ListArchiveBuckets200Response) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetArchiveBuckets returns the ArchiveBuckets field value if set, zero value otherwise.
func (o *ListArchiveBuckets200Response) GetArchiveBuckets() []ArchiveBucket {
	if o == nil || IsNil(o.ArchiveBuckets) {
		var ret []ArchiveBucket
		return ret
	}
	return o.ArchiveBuckets
}

// GetArchiveBucketsOk returns a tuple with the ArchiveBuckets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListArchiveBuckets200Response) GetArchiveBucketsOk() ([]ArchiveBucket, bool) {
	if o == nil || IsNil(o.ArchiveBuckets) {
		return nil, false
	}
	return o.ArchiveBuckets, true
}

// HasArchiveBuckets returns a boolean if a field has been set.
func (o *ListArchiveBuckets200Response) HasArchiveBuckets() bool {
	if o != nil && !IsNil(o.ArchiveBuckets) {
		return true
	}

	return false
}

// SetArchiveBuckets gets a reference to the given []ArchiveBucket and assigns it to the ArchiveBuckets field.
func (o *ListArchiveBuckets200Response) SetArchiveBuckets(v []ArchiveBucket) {
	o.ArchiveBuckets = v
}

// GetArchiveBucketCount returns the ArchiveBucketCount field value if set, zero value otherwise.
func (o *ListArchiveBuckets200Response) GetArchiveBucketCount() int64 {
	if o == nil || IsNil(o.ArchiveBucketCount) {
		var ret int64
		return ret
	}
	return *o.ArchiveBucketCount
}

// GetArchiveBucketCountOk returns a tuple with the ArchiveBucketCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListArchiveBuckets200Response) GetArchiveBucketCountOk() (*int64, bool) {
	if o == nil || IsNil(o.ArchiveBucketCount) {
		return nil, false
	}
	return o.ArchiveBucketCount, true
}

// HasArchiveBucketCount returns a boolean if a field has been set.
func (o *ListArchiveBuckets200Response) HasArchiveBucketCount() bool {
	if o != nil && !IsNil(o.ArchiveBucketCount) {
		return true
	}

	return false
}

// SetArchiveBucketCount gets a reference to the given int64 and assigns it to the ArchiveBucketCount field.
func (o *ListArchiveBuckets200Response) SetArchiveBucketCount(v int64) {
	o.ArchiveBucketCount = &v
}

func (o ListArchiveBuckets200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListArchiveBuckets200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.ArchiveBuckets) {
		toSerialize["archiveBuckets"] = o.ArchiveBuckets
	}
	if !IsNil(o.ArchiveBucketCount) {
		toSerialize["archiveBucketCount"] = o.ArchiveBucketCount
	}
	return toSerialize, nil
}

type NullableListArchiveBuckets200Response struct {
	value *ListArchiveBuckets200Response
	isSet bool
}

func (v NullableListArchiveBuckets200Response) Get() *ListArchiveBuckets200Response {
	return v.value
}

func (v *NullableListArchiveBuckets200Response) Set(val *ListArchiveBuckets200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListArchiveBuckets200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListArchiveBuckets200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListArchiveBuckets200Response(val *ListArchiveBuckets200Response) *NullableListArchiveBuckets200Response {
	return &NullableListArchiveBuckets200Response{value: val, isSet: true}
}

func (v NullableListArchiveBuckets200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListArchiveBuckets200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


