/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject256 struct for InlineObject256
type InlineObject256 struct {
	User ApiUsersIdUser `json:"user"`
}

// NewInlineObject256 instantiates a new InlineObject256 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject256(user ApiUsersIdUser, ) *InlineObject256 {
	this := InlineObject256{}
	this.User = user
	return &this
}

// NewInlineObject256WithDefaults instantiates a new InlineObject256 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject256WithDefaults() *InlineObject256 {
	this := InlineObject256{}
	return &this
}

// GetUser returns the User field value
func (o *InlineObject256) GetUser() ApiUsersIdUser {
	if o == nil  {
		var ret ApiUsersIdUser
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *InlineObject256) GetUserOk() (*ApiUsersIdUser, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *InlineObject256) SetUser(v ApiUsersIdUser) {
	o.User = v
}

func (o InlineObject256) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject256 struct {
	value *InlineObject256
	isSet bool
}

func (v NullableInlineObject256) Get() *InlineObject256 {
	return v.value
}

func (v *NullableInlineObject256) Set(val *InlineObject256) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject256) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject256) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject256(val *InlineObject256) *NullableInlineObject256 {
	return &NullableInlineObject256{value: val, isSet: true}
}

func (v NullableInlineObject256) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject256) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


