/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VdiPoolConfigNetworkInterfaces struct for VdiPoolConfigNetworkInterfaces
type VdiPoolConfigNetworkInterfaces struct {
	PrimaryInterface *bool `json:"primaryInterface,omitempty"`
	Network *VdiPoolConfigNetwork `json:"network,omitempty"`
	IpMode *string `json:"ipMode,omitempty"`
	ShowNetworkPoolLabel *bool `json:"showNetworkPoolLabel,omitempty"`
	ShowNetworkDhcpLabel *bool `json:"showNetworkDhcpLabel,omitempty"`
}

// NewVdiPoolConfigNetworkInterfaces instantiates a new VdiPoolConfigNetworkInterfaces object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVdiPoolConfigNetworkInterfaces() *VdiPoolConfigNetworkInterfaces {
	this := VdiPoolConfigNetworkInterfaces{}
	return &this
}

// NewVdiPoolConfigNetworkInterfacesWithDefaults instantiates a new VdiPoolConfigNetworkInterfaces object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVdiPoolConfigNetworkInterfacesWithDefaults() *VdiPoolConfigNetworkInterfaces {
	this := VdiPoolConfigNetworkInterfaces{}
	return &this
}

// GetPrimaryInterface returns the PrimaryInterface field value if set, zero value otherwise.
func (o *VdiPoolConfigNetworkInterfaces) GetPrimaryInterface() bool {
	if o == nil || o.PrimaryInterface == nil {
		var ret bool
		return ret
	}
	return *o.PrimaryInterface
}

// GetPrimaryInterfaceOk returns a tuple with the PrimaryInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfigNetworkInterfaces) GetPrimaryInterfaceOk() (*bool, bool) {
	if o == nil || o.PrimaryInterface == nil {
		return nil, false
	}
	return o.PrimaryInterface, true
}

// HasPrimaryInterface returns a boolean if a field has been set.
func (o *VdiPoolConfigNetworkInterfaces) HasPrimaryInterface() bool {
	if o != nil && o.PrimaryInterface != nil {
		return true
	}

	return false
}

// SetPrimaryInterface gets a reference to the given bool and assigns it to the PrimaryInterface field.
func (o *VdiPoolConfigNetworkInterfaces) SetPrimaryInterface(v bool) {
	o.PrimaryInterface = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *VdiPoolConfigNetworkInterfaces) GetNetwork() VdiPoolConfigNetwork {
	if o == nil || o.Network == nil {
		var ret VdiPoolConfigNetwork
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfigNetworkInterfaces) GetNetworkOk() (*VdiPoolConfigNetwork, bool) {
	if o == nil || o.Network == nil {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *VdiPoolConfigNetworkInterfaces) HasNetwork() bool {
	if o != nil && o.Network != nil {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given VdiPoolConfigNetwork and assigns it to the Network field.
func (o *VdiPoolConfigNetworkInterfaces) SetNetwork(v VdiPoolConfigNetwork) {
	o.Network = &v
}

// GetIpMode returns the IpMode field value if set, zero value otherwise.
func (o *VdiPoolConfigNetworkInterfaces) GetIpMode() string {
	if o == nil || o.IpMode == nil {
		var ret string
		return ret
	}
	return *o.IpMode
}

// GetIpModeOk returns a tuple with the IpMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfigNetworkInterfaces) GetIpModeOk() (*string, bool) {
	if o == nil || o.IpMode == nil {
		return nil, false
	}
	return o.IpMode, true
}

// HasIpMode returns a boolean if a field has been set.
func (o *VdiPoolConfigNetworkInterfaces) HasIpMode() bool {
	if o != nil && o.IpMode != nil {
		return true
	}

	return false
}

// SetIpMode gets a reference to the given string and assigns it to the IpMode field.
func (o *VdiPoolConfigNetworkInterfaces) SetIpMode(v string) {
	o.IpMode = &v
}

// GetShowNetworkPoolLabel returns the ShowNetworkPoolLabel field value if set, zero value otherwise.
func (o *VdiPoolConfigNetworkInterfaces) GetShowNetworkPoolLabel() bool {
	if o == nil || o.ShowNetworkPoolLabel == nil {
		var ret bool
		return ret
	}
	return *o.ShowNetworkPoolLabel
}

// GetShowNetworkPoolLabelOk returns a tuple with the ShowNetworkPoolLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfigNetworkInterfaces) GetShowNetworkPoolLabelOk() (*bool, bool) {
	if o == nil || o.ShowNetworkPoolLabel == nil {
		return nil, false
	}
	return o.ShowNetworkPoolLabel, true
}

// HasShowNetworkPoolLabel returns a boolean if a field has been set.
func (o *VdiPoolConfigNetworkInterfaces) HasShowNetworkPoolLabel() bool {
	if o != nil && o.ShowNetworkPoolLabel != nil {
		return true
	}

	return false
}

// SetShowNetworkPoolLabel gets a reference to the given bool and assigns it to the ShowNetworkPoolLabel field.
func (o *VdiPoolConfigNetworkInterfaces) SetShowNetworkPoolLabel(v bool) {
	o.ShowNetworkPoolLabel = &v
}

// GetShowNetworkDhcpLabel returns the ShowNetworkDhcpLabel field value if set, zero value otherwise.
func (o *VdiPoolConfigNetworkInterfaces) GetShowNetworkDhcpLabel() bool {
	if o == nil || o.ShowNetworkDhcpLabel == nil {
		var ret bool
		return ret
	}
	return *o.ShowNetworkDhcpLabel
}

// GetShowNetworkDhcpLabelOk returns a tuple with the ShowNetworkDhcpLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfigNetworkInterfaces) GetShowNetworkDhcpLabelOk() (*bool, bool) {
	if o == nil || o.ShowNetworkDhcpLabel == nil {
		return nil, false
	}
	return o.ShowNetworkDhcpLabel, true
}

// HasShowNetworkDhcpLabel returns a boolean if a field has been set.
func (o *VdiPoolConfigNetworkInterfaces) HasShowNetworkDhcpLabel() bool {
	if o != nil && o.ShowNetworkDhcpLabel != nil {
		return true
	}

	return false
}

// SetShowNetworkDhcpLabel gets a reference to the given bool and assigns it to the ShowNetworkDhcpLabel field.
func (o *VdiPoolConfigNetworkInterfaces) SetShowNetworkDhcpLabel(v bool) {
	o.ShowNetworkDhcpLabel = &v
}

func (o VdiPoolConfigNetworkInterfaces) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PrimaryInterface != nil {
		toSerialize["primaryInterface"] = o.PrimaryInterface
	}
	if o.Network != nil {
		toSerialize["network"] = o.Network
	}
	if o.IpMode != nil {
		toSerialize["ipMode"] = o.IpMode
	}
	if o.ShowNetworkPoolLabel != nil {
		toSerialize["showNetworkPoolLabel"] = o.ShowNetworkPoolLabel
	}
	if o.ShowNetworkDhcpLabel != nil {
		toSerialize["showNetworkDhcpLabel"] = o.ShowNetworkDhcpLabel
	}
	return json.Marshal(toSerialize)
}

type NullableVdiPoolConfigNetworkInterfaces struct {
	value *VdiPoolConfigNetworkInterfaces
	isSet bool
}

func (v NullableVdiPoolConfigNetworkInterfaces) Get() *VdiPoolConfigNetworkInterfaces {
	return v.value
}

func (v *NullableVdiPoolConfigNetworkInterfaces) Set(val *VdiPoolConfigNetworkInterfaces) {
	v.value = val
	v.isSet = true
}

func (v NullableVdiPoolConfigNetworkInterfaces) IsSet() bool {
	return v.isSet
}

func (v *NullableVdiPoolConfigNetworkInterfaces) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVdiPoolConfigNetworkInterfaces(val *VdiPoolConfigNetworkInterfaces) *NullableVdiPoolConfigNetworkInterfaces {
	return &NullableVdiPoolConfigNetworkInterfaces{value: val, isSet: true}
}

func (v NullableVdiPoolConfigNetworkInterfaces) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVdiPoolConfigNetworkInterfaces) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


