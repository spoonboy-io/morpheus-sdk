/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20054 struct for InlineResponse20054
type InlineResponse20054 struct {
	ImageBuild *ImageBuild `json:"imageBuild,omitempty"`
}

// NewInlineResponse20054 instantiates a new InlineResponse20054 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20054() *InlineResponse20054 {
	this := InlineResponse20054{}
	return &this
}

// NewInlineResponse20054WithDefaults instantiates a new InlineResponse20054 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20054WithDefaults() *InlineResponse20054 {
	this := InlineResponse20054{}
	return &this
}

// GetImageBuild returns the ImageBuild field value if set, zero value otherwise.
func (o *InlineResponse20054) GetImageBuild() ImageBuild {
	if o == nil || o.ImageBuild == nil {
		var ret ImageBuild
		return ret
	}
	return *o.ImageBuild
}

// GetImageBuildOk returns a tuple with the ImageBuild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054) GetImageBuildOk() (*ImageBuild, bool) {
	if o == nil || o.ImageBuild == nil {
		return nil, false
	}
	return o.ImageBuild, true
}

// HasImageBuild returns a boolean if a field has been set.
func (o *InlineResponse20054) HasImageBuild() bool {
	if o != nil && o.ImageBuild != nil {
		return true
	}

	return false
}

// SetImageBuild gets a reference to the given ImageBuild and assigns it to the ImageBuild field.
func (o *InlineResponse20054) SetImageBuild(v ImageBuild) {
	o.ImageBuild = &v
}

func (o InlineResponse20054) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ImageBuild != nil {
		toSerialize["imageBuild"] = o.ImageBuild
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20054 struct {
	value *InlineResponse20054
	isSet bool
}

func (v NullableInlineResponse20054) Get() *InlineResponse20054 {
	return v.value
}

func (v *NullableInlineResponse20054) Set(val *InlineResponse20054) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20054) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20054) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20054(val *InlineResponse20054) *NullableInlineResponse20054 {
	return &NullableInlineResponse20054{value: val, isSet: true}
}

func (v NullableInlineResponse20054) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20054) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


