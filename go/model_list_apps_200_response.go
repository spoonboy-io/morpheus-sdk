/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListApps200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListApps200Response{}

// ListApps200Response struct for ListApps200Response
type ListApps200Response struct {
	Stats *AppStats `json:"stats,omitempty"`
	Meta *MetaMeta `json:"meta,omitempty"`
	Apps []App `json:"apps,omitempty"`
}

// NewListApps200Response instantiates a new ListApps200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListApps200Response() *ListApps200Response {
	this := ListApps200Response{}
	return &this
}

// NewListApps200ResponseWithDefaults instantiates a new ListApps200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListApps200ResponseWithDefaults() *ListApps200Response {
	this := ListApps200Response{}
	return &this
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *ListApps200Response) GetStats() AppStats {
	if o == nil || IsNil(o.Stats) {
		var ret AppStats
		return ret
	}
	return *o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListApps200Response) GetStatsOk() (*AppStats, bool) {
	if o == nil || IsNil(o.Stats) {
		return nil, false
	}
	return o.Stats, true
}

// HasStats returns a boolean if a field has been set.
func (o *ListApps200Response) HasStats() bool {
	if o != nil && !IsNil(o.Stats) {
		return true
	}

	return false
}

// SetStats gets a reference to the given AppStats and assigns it to the Stats field.
func (o *ListApps200Response) SetStats(v AppStats) {
	o.Stats = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListApps200Response) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListApps200Response) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ListApps200Response) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *ListApps200Response) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetApps returns the Apps field value if set, zero value otherwise.
func (o *ListApps200Response) GetApps() []App {
	if o == nil || IsNil(o.Apps) {
		var ret []App
		return ret
	}
	return o.Apps
}

// GetAppsOk returns a tuple with the Apps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListApps200Response) GetAppsOk() ([]App, bool) {
	if o == nil || IsNil(o.Apps) {
		return nil, false
	}
	return o.Apps, true
}

// HasApps returns a boolean if a field has been set.
func (o *ListApps200Response) HasApps() bool {
	if o != nil && !IsNil(o.Apps) {
		return true
	}

	return false
}

// SetApps gets a reference to the given []App and assigns it to the Apps field.
func (o *ListApps200Response) SetApps(v []App) {
	o.Apps = v
}

func (o ListApps200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListApps200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Stats) {
		toSerialize["stats"] = o.Stats
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Apps) {
		toSerialize["apps"] = o.Apps
	}
	return toSerialize, nil
}

type NullableListApps200Response struct {
	value *ListApps200Response
	isSet bool
}

func (v NullableListApps200Response) Get() *ListApps200Response {
	return v.value
}

func (v *NullableListApps200Response) Set(val *ListApps200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListApps200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListApps200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListApps200Response(val *ListApps200Response) *NullableListApps200Response {
	return &NullableListApps200Response{value: val, isSet: true}
}

func (v NullableListApps200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListApps200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


