/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IntegrationDockerRepoConfig struct for IntegrationDockerRepoConfig
type IntegrationDockerRepoConfig struct {
	Integration IntegrationDockerRepoConfigIntegration `json:"integration"`
}

// NewIntegrationDockerRepoConfig instantiates a new IntegrationDockerRepoConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationDockerRepoConfig(integration IntegrationDockerRepoConfigIntegration, ) *IntegrationDockerRepoConfig {
	this := IntegrationDockerRepoConfig{}
	this.Integration = integration
	return &this
}

// NewIntegrationDockerRepoConfigWithDefaults instantiates a new IntegrationDockerRepoConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationDockerRepoConfigWithDefaults() *IntegrationDockerRepoConfig {
	this := IntegrationDockerRepoConfig{}
	return &this
}

// GetIntegration returns the Integration field value
func (o *IntegrationDockerRepoConfig) GetIntegration() IntegrationDockerRepoConfigIntegration {
	if o == nil  {
		var ret IntegrationDockerRepoConfigIntegration
		return ret
	}

	return o.Integration
}

// GetIntegrationOk returns a tuple with the Integration field value
// and a boolean to check if the value has been set.
func (o *IntegrationDockerRepoConfig) GetIntegrationOk() (*IntegrationDockerRepoConfigIntegration, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Integration, true
}

// SetIntegration sets field value
func (o *IntegrationDockerRepoConfig) SetIntegration(v IntegrationDockerRepoConfigIntegration) {
	o.Integration = v
}

func (o IntegrationDockerRepoConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["integration"] = o.Integration
	}
	return json.Marshal(toSerialize)
}

type NullableIntegrationDockerRepoConfig struct {
	value *IntegrationDockerRepoConfig
	isSet bool
}

func (v NullableIntegrationDockerRepoConfig) Get() *IntegrationDockerRepoConfig {
	return v.value
}

func (v *NullableIntegrationDockerRepoConfig) Set(val *IntegrationDockerRepoConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationDockerRepoConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationDockerRepoConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationDockerRepoConfig(val *IntegrationDockerRepoConfig) *NullableIntegrationDockerRepoConfig {
	return &NullableIntegrationDockerRepoConfig{value: val, isSet: true}
}

func (v NullableIntegrationDockerRepoConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationDockerRepoConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


