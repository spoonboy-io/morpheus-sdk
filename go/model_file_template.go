/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// FileTemplate struct for FileTemplate
type FileTemplate struct {
	Id *int64 `json:"id,omitempty"`
	Code *string `json:"code,omitempty"`
	Account NullableInlineResponse20082LoadBalancerInstanceSslCert `json:"account,omitempty"`
	Name *string `json:"name,omitempty"`
	Labels []string `json:"labels,omitempty"`
	FileName *string `json:"fileName,omitempty"`
	FilePath *string `json:"filePath,omitempty"`
	TemplateType NullableString `json:"templateType,omitempty"`
	TemplatePhase *string `json:"templatePhase,omitempty"`
	Template *string `json:"template,omitempty"`
	Category NullableString `json:"category,omitempty"`
	SettingCategory NullableString `json:"settingCategory,omitempty"`
	SettingName NullableString `json:"settingName,omitempty"`
	AutoRun *bool `json:"autoRun,omitempty"`
	RunOnScale NullableBool `json:"runOnScale,omitempty"`
	RunOnDeploy NullableBool `json:"runOnDeploy,omitempty"`
	FileOwner NullableString `json:"fileOwner,omitempty"`
	FileGroup NullableString `json:"fileGroup,omitempty"`
	Permissions NullableString `json:"permissions,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
}

// NewFileTemplate instantiates a new FileTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileTemplate() *FileTemplate {
	this := FileTemplate{}
	return &this
}

// NewFileTemplateWithDefaults instantiates a new FileTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileTemplateWithDefaults() *FileTemplate {
	this := FileTemplate{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FileTemplate) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileTemplate) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FileTemplate) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *FileTemplate) SetId(v int64) {
	o.Id = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *FileTemplate) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileTemplate) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *FileTemplate) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *FileTemplate) SetCode(v string) {
	o.Code = &v
}

// GetAccount returns the Account field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FileTemplate) GetAccount() InlineResponse20082LoadBalancerInstanceSslCert {
	if o == nil || o.Account.Get() == nil {
		var ret InlineResponse20082LoadBalancerInstanceSslCert
		return ret
	}
	return *o.Account.Get()
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FileTemplate) GetAccountOk() (*InlineResponse20082LoadBalancerInstanceSslCert, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Account.Get(), o.Account.IsSet()
}

// HasAccount returns a boolean if a field has been set.
func (o *FileTemplate) HasAccount() bool {
	if o != nil && o.Account.IsSet() {
		return true
	}

	return false
}

// SetAccount gets a reference to the given NullableInlineResponse20082LoadBalancerInstanceSslCert and assigns it to the Account field.
func (o *FileTemplate) SetAccount(v InlineResponse20082LoadBalancerInstanceSslCert) {
	o.Account.Set(&v)
}
// SetAccountNil sets the value for Account to be an explicit nil
func (o *FileTemplate) SetAccountNil() {
	o.Account.Set(nil)
}

// UnsetAccount ensures that no value is present for Account, not even an explicit nil
func (o *FileTemplate) UnsetAccount() {
	o.Account.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FileTemplate) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileTemplate) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FileTemplate) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FileTemplate) SetName(v string) {
	o.Name = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FileTemplate) GetLabels() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FileTemplate) GetLabelsOk() (*[]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return &o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *FileTemplate) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *FileTemplate) SetLabels(v []string) {
	o.Labels = v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *FileTemplate) GetFileName() string {
	if o == nil || o.FileName == nil {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileTemplate) GetFileNameOk() (*string, bool) {
	if o == nil || o.FileName == nil {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *FileTemplate) HasFileName() bool {
	if o != nil && o.FileName != nil {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *FileTemplate) SetFileName(v string) {
	o.FileName = &v
}

// GetFilePath returns the FilePath field value if set, zero value otherwise.
func (o *FileTemplate) GetFilePath() string {
	if o == nil || o.FilePath == nil {
		var ret string
		return ret
	}
	return *o.FilePath
}

// GetFilePathOk returns a tuple with the FilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileTemplate) GetFilePathOk() (*string, bool) {
	if o == nil || o.FilePath == nil {
		return nil, false
	}
	return o.FilePath, true
}

// HasFilePath returns a boolean if a field has been set.
func (o *FileTemplate) HasFilePath() bool {
	if o != nil && o.FilePath != nil {
		return true
	}

	return false
}

// SetFilePath gets a reference to the given string and assigns it to the FilePath field.
func (o *FileTemplate) SetFilePath(v string) {
	o.FilePath = &v
}

// GetTemplateType returns the TemplateType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FileTemplate) GetTemplateType() string {
	if o == nil || o.TemplateType.Get() == nil {
		var ret string
		return ret
	}
	return *o.TemplateType.Get()
}

// GetTemplateTypeOk returns a tuple with the TemplateType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FileTemplate) GetTemplateTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TemplateType.Get(), o.TemplateType.IsSet()
}

// HasTemplateType returns a boolean if a field has been set.
func (o *FileTemplate) HasTemplateType() bool {
	if o != nil && o.TemplateType.IsSet() {
		return true
	}

	return false
}

// SetTemplateType gets a reference to the given NullableString and assigns it to the TemplateType field.
func (o *FileTemplate) SetTemplateType(v string) {
	o.TemplateType.Set(&v)
}
// SetTemplateTypeNil sets the value for TemplateType to be an explicit nil
func (o *FileTemplate) SetTemplateTypeNil() {
	o.TemplateType.Set(nil)
}

// UnsetTemplateType ensures that no value is present for TemplateType, not even an explicit nil
func (o *FileTemplate) UnsetTemplateType() {
	o.TemplateType.Unset()
}

// GetTemplatePhase returns the TemplatePhase field value if set, zero value otherwise.
func (o *FileTemplate) GetTemplatePhase() string {
	if o == nil || o.TemplatePhase == nil {
		var ret string
		return ret
	}
	return *o.TemplatePhase
}

// GetTemplatePhaseOk returns a tuple with the TemplatePhase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileTemplate) GetTemplatePhaseOk() (*string, bool) {
	if o == nil || o.TemplatePhase == nil {
		return nil, false
	}
	return o.TemplatePhase, true
}

// HasTemplatePhase returns a boolean if a field has been set.
func (o *FileTemplate) HasTemplatePhase() bool {
	if o != nil && o.TemplatePhase != nil {
		return true
	}

	return false
}

// SetTemplatePhase gets a reference to the given string and assigns it to the TemplatePhase field.
func (o *FileTemplate) SetTemplatePhase(v string) {
	o.TemplatePhase = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *FileTemplate) GetTemplate() string {
	if o == nil || o.Template == nil {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileTemplate) GetTemplateOk() (*string, bool) {
	if o == nil || o.Template == nil {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *FileTemplate) HasTemplate() bool {
	if o != nil && o.Template != nil {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *FileTemplate) SetTemplate(v string) {
	o.Template = &v
}

// GetCategory returns the Category field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FileTemplate) GetCategory() string {
	if o == nil || o.Category.Get() == nil {
		var ret string
		return ret
	}
	return *o.Category.Get()
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FileTemplate) GetCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Category.Get(), o.Category.IsSet()
}

// HasCategory returns a boolean if a field has been set.
func (o *FileTemplate) HasCategory() bool {
	if o != nil && o.Category.IsSet() {
		return true
	}

	return false
}

// SetCategory gets a reference to the given NullableString and assigns it to the Category field.
func (o *FileTemplate) SetCategory(v string) {
	o.Category.Set(&v)
}
// SetCategoryNil sets the value for Category to be an explicit nil
func (o *FileTemplate) SetCategoryNil() {
	o.Category.Set(nil)
}

// UnsetCategory ensures that no value is present for Category, not even an explicit nil
func (o *FileTemplate) UnsetCategory() {
	o.Category.Unset()
}

// GetSettingCategory returns the SettingCategory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FileTemplate) GetSettingCategory() string {
	if o == nil || o.SettingCategory.Get() == nil {
		var ret string
		return ret
	}
	return *o.SettingCategory.Get()
}

// GetSettingCategoryOk returns a tuple with the SettingCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FileTemplate) GetSettingCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SettingCategory.Get(), o.SettingCategory.IsSet()
}

// HasSettingCategory returns a boolean if a field has been set.
func (o *FileTemplate) HasSettingCategory() bool {
	if o != nil && o.SettingCategory.IsSet() {
		return true
	}

	return false
}

// SetSettingCategory gets a reference to the given NullableString and assigns it to the SettingCategory field.
func (o *FileTemplate) SetSettingCategory(v string) {
	o.SettingCategory.Set(&v)
}
// SetSettingCategoryNil sets the value for SettingCategory to be an explicit nil
func (o *FileTemplate) SetSettingCategoryNil() {
	o.SettingCategory.Set(nil)
}

// UnsetSettingCategory ensures that no value is present for SettingCategory, not even an explicit nil
func (o *FileTemplate) UnsetSettingCategory() {
	o.SettingCategory.Unset()
}

// GetSettingName returns the SettingName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FileTemplate) GetSettingName() string {
	if o == nil || o.SettingName.Get() == nil {
		var ret string
		return ret
	}
	return *o.SettingName.Get()
}

// GetSettingNameOk returns a tuple with the SettingName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FileTemplate) GetSettingNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SettingName.Get(), o.SettingName.IsSet()
}

// HasSettingName returns a boolean if a field has been set.
func (o *FileTemplate) HasSettingName() bool {
	if o != nil && o.SettingName.IsSet() {
		return true
	}

	return false
}

// SetSettingName gets a reference to the given NullableString and assigns it to the SettingName field.
func (o *FileTemplate) SetSettingName(v string) {
	o.SettingName.Set(&v)
}
// SetSettingNameNil sets the value for SettingName to be an explicit nil
func (o *FileTemplate) SetSettingNameNil() {
	o.SettingName.Set(nil)
}

// UnsetSettingName ensures that no value is present for SettingName, not even an explicit nil
func (o *FileTemplate) UnsetSettingName() {
	o.SettingName.Unset()
}

// GetAutoRun returns the AutoRun field value if set, zero value otherwise.
func (o *FileTemplate) GetAutoRun() bool {
	if o == nil || o.AutoRun == nil {
		var ret bool
		return ret
	}
	return *o.AutoRun
}

// GetAutoRunOk returns a tuple with the AutoRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileTemplate) GetAutoRunOk() (*bool, bool) {
	if o == nil || o.AutoRun == nil {
		return nil, false
	}
	return o.AutoRun, true
}

// HasAutoRun returns a boolean if a field has been set.
func (o *FileTemplate) HasAutoRun() bool {
	if o != nil && o.AutoRun != nil {
		return true
	}

	return false
}

// SetAutoRun gets a reference to the given bool and assigns it to the AutoRun field.
func (o *FileTemplate) SetAutoRun(v bool) {
	o.AutoRun = &v
}

// GetRunOnScale returns the RunOnScale field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FileTemplate) GetRunOnScale() bool {
	if o == nil || o.RunOnScale.Get() == nil {
		var ret bool
		return ret
	}
	return *o.RunOnScale.Get()
}

// GetRunOnScaleOk returns a tuple with the RunOnScale field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FileTemplate) GetRunOnScaleOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RunOnScale.Get(), o.RunOnScale.IsSet()
}

// HasRunOnScale returns a boolean if a field has been set.
func (o *FileTemplate) HasRunOnScale() bool {
	if o != nil && o.RunOnScale.IsSet() {
		return true
	}

	return false
}

// SetRunOnScale gets a reference to the given NullableBool and assigns it to the RunOnScale field.
func (o *FileTemplate) SetRunOnScale(v bool) {
	o.RunOnScale.Set(&v)
}
// SetRunOnScaleNil sets the value for RunOnScale to be an explicit nil
func (o *FileTemplate) SetRunOnScaleNil() {
	o.RunOnScale.Set(nil)
}

// UnsetRunOnScale ensures that no value is present for RunOnScale, not even an explicit nil
func (o *FileTemplate) UnsetRunOnScale() {
	o.RunOnScale.Unset()
}

// GetRunOnDeploy returns the RunOnDeploy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FileTemplate) GetRunOnDeploy() bool {
	if o == nil || o.RunOnDeploy.Get() == nil {
		var ret bool
		return ret
	}
	return *o.RunOnDeploy.Get()
}

// GetRunOnDeployOk returns a tuple with the RunOnDeploy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FileTemplate) GetRunOnDeployOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RunOnDeploy.Get(), o.RunOnDeploy.IsSet()
}

// HasRunOnDeploy returns a boolean if a field has been set.
func (o *FileTemplate) HasRunOnDeploy() bool {
	if o != nil && o.RunOnDeploy.IsSet() {
		return true
	}

	return false
}

// SetRunOnDeploy gets a reference to the given NullableBool and assigns it to the RunOnDeploy field.
func (o *FileTemplate) SetRunOnDeploy(v bool) {
	o.RunOnDeploy.Set(&v)
}
// SetRunOnDeployNil sets the value for RunOnDeploy to be an explicit nil
func (o *FileTemplate) SetRunOnDeployNil() {
	o.RunOnDeploy.Set(nil)
}

// UnsetRunOnDeploy ensures that no value is present for RunOnDeploy, not even an explicit nil
func (o *FileTemplate) UnsetRunOnDeploy() {
	o.RunOnDeploy.Unset()
}

// GetFileOwner returns the FileOwner field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FileTemplate) GetFileOwner() string {
	if o == nil || o.FileOwner.Get() == nil {
		var ret string
		return ret
	}
	return *o.FileOwner.Get()
}

// GetFileOwnerOk returns a tuple with the FileOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FileTemplate) GetFileOwnerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FileOwner.Get(), o.FileOwner.IsSet()
}

// HasFileOwner returns a boolean if a field has been set.
func (o *FileTemplate) HasFileOwner() bool {
	if o != nil && o.FileOwner.IsSet() {
		return true
	}

	return false
}

// SetFileOwner gets a reference to the given NullableString and assigns it to the FileOwner field.
func (o *FileTemplate) SetFileOwner(v string) {
	o.FileOwner.Set(&v)
}
// SetFileOwnerNil sets the value for FileOwner to be an explicit nil
func (o *FileTemplate) SetFileOwnerNil() {
	o.FileOwner.Set(nil)
}

// UnsetFileOwner ensures that no value is present for FileOwner, not even an explicit nil
func (o *FileTemplate) UnsetFileOwner() {
	o.FileOwner.Unset()
}

// GetFileGroup returns the FileGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FileTemplate) GetFileGroup() string {
	if o == nil || o.FileGroup.Get() == nil {
		var ret string
		return ret
	}
	return *o.FileGroup.Get()
}

// GetFileGroupOk returns a tuple with the FileGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FileTemplate) GetFileGroupOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FileGroup.Get(), o.FileGroup.IsSet()
}

// HasFileGroup returns a boolean if a field has been set.
func (o *FileTemplate) HasFileGroup() bool {
	if o != nil && o.FileGroup.IsSet() {
		return true
	}

	return false
}

// SetFileGroup gets a reference to the given NullableString and assigns it to the FileGroup field.
func (o *FileTemplate) SetFileGroup(v string) {
	o.FileGroup.Set(&v)
}
// SetFileGroupNil sets the value for FileGroup to be an explicit nil
func (o *FileTemplate) SetFileGroupNil() {
	o.FileGroup.Set(nil)
}

// UnsetFileGroup ensures that no value is present for FileGroup, not even an explicit nil
func (o *FileTemplate) UnsetFileGroup() {
	o.FileGroup.Unset()
}

// GetPermissions returns the Permissions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FileTemplate) GetPermissions() string {
	if o == nil || o.Permissions.Get() == nil {
		var ret string
		return ret
	}
	return *o.Permissions.Get()
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FileTemplate) GetPermissionsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Permissions.Get(), o.Permissions.IsSet()
}

// HasPermissions returns a boolean if a field has been set.
func (o *FileTemplate) HasPermissions() bool {
	if o != nil && o.Permissions.IsSet() {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given NullableString and assigns it to the Permissions field.
func (o *FileTemplate) SetPermissions(v string) {
	o.Permissions.Set(&v)
}
// SetPermissionsNil sets the value for Permissions to be an explicit nil
func (o *FileTemplate) SetPermissionsNil() {
	o.Permissions.Set(nil)
}

// UnsetPermissions ensures that no value is present for Permissions, not even an explicit nil
func (o *FileTemplate) UnsetPermissions() {
	o.Permissions.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *FileTemplate) GetDateCreated() time.Time {
	if o == nil || o.DateCreated == nil {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileTemplate) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *FileTemplate) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *FileTemplate) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *FileTemplate) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileTemplate) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *FileTemplate) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *FileTemplate) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

func (o FileTemplate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Account.IsSet() {
		toSerialize["account"] = o.Account.Get()
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.FileName != nil {
		toSerialize["fileName"] = o.FileName
	}
	if o.FilePath != nil {
		toSerialize["filePath"] = o.FilePath
	}
	if o.TemplateType.IsSet() {
		toSerialize["templateType"] = o.TemplateType.Get()
	}
	if o.TemplatePhase != nil {
		toSerialize["templatePhase"] = o.TemplatePhase
	}
	if o.Template != nil {
		toSerialize["template"] = o.Template
	}
	if o.Category.IsSet() {
		toSerialize["category"] = o.Category.Get()
	}
	if o.SettingCategory.IsSet() {
		toSerialize["settingCategory"] = o.SettingCategory.Get()
	}
	if o.SettingName.IsSet() {
		toSerialize["settingName"] = o.SettingName.Get()
	}
	if o.AutoRun != nil {
		toSerialize["autoRun"] = o.AutoRun
	}
	if o.RunOnScale.IsSet() {
		toSerialize["runOnScale"] = o.RunOnScale.Get()
	}
	if o.RunOnDeploy.IsSet() {
		toSerialize["runOnDeploy"] = o.RunOnDeploy.Get()
	}
	if o.FileOwner.IsSet() {
		toSerialize["fileOwner"] = o.FileOwner.Get()
	}
	if o.FileGroup.IsSet() {
		toSerialize["fileGroup"] = o.FileGroup.Get()
	}
	if o.Permissions.IsSet() {
		toSerialize["permissions"] = o.Permissions.Get()
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	return json.Marshal(toSerialize)
}

type NullableFileTemplate struct {
	value *FileTemplate
	isSet bool
}

func (v NullableFileTemplate) Get() *FileTemplate {
	return v.value
}

func (v *NullableFileTemplate) Set(val *FileTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableFileTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableFileTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileTemplate(val *FileTemplate) *NullableFileTemplate {
	return &NullableFileTemplate{value: val, isSet: true}
}

func (v NullableFileTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


