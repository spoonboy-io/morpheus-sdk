/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InstanceConfigSecurityGroups struct for InstanceConfigSecurityGroups
type InstanceConfigSecurityGroups struct {
	Id NullableString `json:"id,omitempty"`
}

// NewInstanceConfigSecurityGroups instantiates a new InstanceConfigSecurityGroups object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceConfigSecurityGroups() *InstanceConfigSecurityGroups {
	this := InstanceConfigSecurityGroups{}
	return &this
}

// NewInstanceConfigSecurityGroupsWithDefaults instantiates a new InstanceConfigSecurityGroups object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceConfigSecurityGroupsWithDefaults() *InstanceConfigSecurityGroups {
	this := InstanceConfigSecurityGroups{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstanceConfigSecurityGroups) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstanceConfigSecurityGroups) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *InstanceConfigSecurityGroups) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *InstanceConfigSecurityGroups) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *InstanceConfigSecurityGroups) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *InstanceConfigSecurityGroups) UnsetId() {
	o.Id.Unset()
}

func (o InstanceConfigSecurityGroups) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableInstanceConfigSecurityGroups struct {
	value *InstanceConfigSecurityGroups
	isSet bool
}

func (v NullableInstanceConfigSecurityGroups) Get() *InstanceConfigSecurityGroups {
	return v.value
}

func (v *NullableInstanceConfigSecurityGroups) Set(val *InstanceConfigSecurityGroups) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceConfigSecurityGroups) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceConfigSecurityGroups) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceConfigSecurityGroups(val *InstanceConfigSecurityGroups) *NullableInstanceConfigSecurityGroups {
	return &NullableInstanceConfigSecurityGroups{value: val, isSet: true}
}

func (v NullableInstanceConfigSecurityGroups) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceConfigSecurityGroups) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


