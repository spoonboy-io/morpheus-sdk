/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject179 The parameters for update a Network Transport Zone is type dependent. The following lists the common parameters. Get a specific network type to list available options for the network relay type. 
type InlineObject179 struct {
	NetworkScope *NetworkTransportZoneCreate `json:"networkScope,omitempty"`
}

// NewInlineObject179 instantiates a new InlineObject179 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject179() *InlineObject179 {
	this := InlineObject179{}
	return &this
}

// NewInlineObject179WithDefaults instantiates a new InlineObject179 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject179WithDefaults() *InlineObject179 {
	this := InlineObject179{}
	return &this
}

// GetNetworkScope returns the NetworkScope field value if set, zero value otherwise.
func (o *InlineObject179) GetNetworkScope() NetworkTransportZoneCreate {
	if o == nil || o.NetworkScope == nil {
		var ret NetworkTransportZoneCreate
		return ret
	}
	return *o.NetworkScope
}

// GetNetworkScopeOk returns a tuple with the NetworkScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject179) GetNetworkScopeOk() (*NetworkTransportZoneCreate, bool) {
	if o == nil || o.NetworkScope == nil {
		return nil, false
	}
	return o.NetworkScope, true
}

// HasNetworkScope returns a boolean if a field has been set.
func (o *InlineObject179) HasNetworkScope() bool {
	if o != nil && o.NetworkScope != nil {
		return true
	}

	return false
}

// SetNetworkScope gets a reference to the given NetworkTransportZoneCreate and assigns it to the NetworkScope field.
func (o *InlineObject179) SetNetworkScope(v NetworkTransportZoneCreate) {
	o.NetworkScope = &v
}

func (o InlineObject179) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkScope != nil {
		toSerialize["networkScope"] = o.NetworkScope
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject179 struct {
	value *InlineObject179
	isSet bool
}

func (v NullableInlineObject179) Get() *InlineObject179 {
	return v.value
}

func (v *NullableInlineObject179) Set(val *InlineObject179) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject179) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject179) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject179(val *InlineObject179) *NullableInlineObject179 {
	return &NullableInlineObject179{value: val, isSet: true}
}

func (v NullableInlineObject179) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject179) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


