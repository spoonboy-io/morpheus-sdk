/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// InlineResponse20080LoadBalancerPool struct for InlineResponse20080LoadBalancerPool
type InlineResponse20080LoadBalancerPool struct {
	Id *int64 `json:"id,omitempty"`
	LoadBalancer *InlineResponse20079LoadBalancerMonitorLoadBalancer `json:"loadBalancer,omitempty"`
	Name *string `json:"name,omitempty"`
	Category NullableString `json:"category,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	Description NullableString `json:"description,omitempty"`
	InternalId *string `json:"internalId,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	VipSticky NullableString `json:"vipSticky,omitempty"`
	VipBalance *string `json:"vipBalance,omitempty"`
	AllowNat NullableString `json:"allowNat,omitempty"`
	AllowSnat NullableString `json:"allowSnat,omitempty"`
	VipClientIpMode NullableString `json:"vipClientIpMode,omitempty"`
	VipServerIpMode NullableString `json:"vipServerIpMode,omitempty"`
	MinActive *int64 `json:"minActive,omitempty"`
	MinInService NullableString `json:"minInService,omitempty"`
	MinUpMonitor NullableString `json:"minUpMonitor,omitempty"`
	MinUpAction NullableString `json:"minUpAction,omitempty"`
	MaxQueueDepth NullableString `json:"maxQueueDepth,omitempty"`
	MaxQueueTime NullableString `json:"maxQueueTime,omitempty"`
	NumberActive *int64 `json:"numberActive,omitempty"`
	NumberInService *int64 `json:"numberInService,omitempty"`
	HealthScore *int64 `json:"healthScore,omitempty"`
	PerformanceScore *int64 `json:"performanceScore,omitempty"`
	HealthPenalty *int64 `json:"healthPenalty,omitempty"`
	SecurityPenalty *int64 `json:"securityPenalty,omitempty"`
	ErrorPenalty *int64 `json:"errorPenalty,omitempty"`
	DownAction NullableString `json:"downAction,omitempty"`
	RampTime NullableString `json:"rampTime,omitempty"`
	Port NullableString `json:"port,omitempty"`
	PortType NullableString `json:"portType,omitempty"`
	Status *string `json:"status,omitempty"`
	Nodes *[]InlineResponse20040AppDeployInstance `json:"nodes,omitempty"`
	Monitors *[]InlineResponse20040AppDeployInstance `json:"monitors,omitempty"`
	Members *[]map[string]interface{} `json:"members,omitempty"`
	Config *map[string]interface{} `json:"config,omitempty"`
	CreatedBy NullableString `json:"createdBy,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
}

// NewInlineResponse20080LoadBalancerPool instantiates a new InlineResponse20080LoadBalancerPool object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20080LoadBalancerPool() *InlineResponse20080LoadBalancerPool {
	this := InlineResponse20080LoadBalancerPool{}
	return &this
}

// NewInlineResponse20080LoadBalancerPoolWithDefaults instantiates a new InlineResponse20080LoadBalancerPool object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20080LoadBalancerPoolWithDefaults() *InlineResponse20080LoadBalancerPool {
	this := InlineResponse20080LoadBalancerPool{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *InlineResponse20080LoadBalancerPool) SetId(v int64) {
	o.Id = &v
}

// GetLoadBalancer returns the LoadBalancer field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetLoadBalancer() InlineResponse20079LoadBalancerMonitorLoadBalancer {
	if o == nil || o.LoadBalancer == nil {
		var ret InlineResponse20079LoadBalancerMonitorLoadBalancer
		return ret
	}
	return *o.LoadBalancer
}

// GetLoadBalancerOk returns a tuple with the LoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetLoadBalancerOk() (*InlineResponse20079LoadBalancerMonitorLoadBalancer, bool) {
	if o == nil || o.LoadBalancer == nil {
		return nil, false
	}
	return o.LoadBalancer, true
}

// HasLoadBalancer returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasLoadBalancer() bool {
	if o != nil && o.LoadBalancer != nil {
		return true
	}

	return false
}

// SetLoadBalancer gets a reference to the given InlineResponse20079LoadBalancerMonitorLoadBalancer and assigns it to the LoadBalancer field.
func (o *InlineResponse20080LoadBalancerPool) SetLoadBalancer(v InlineResponse20079LoadBalancerMonitorLoadBalancer) {
	o.LoadBalancer = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse20080LoadBalancerPool) SetName(v string) {
	o.Name = &v
}

// GetCategory returns the Category field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20080LoadBalancerPool) GetCategory() string {
	if o == nil || o.Category.Get() == nil {
		var ret string
		return ret
	}
	return *o.Category.Get()
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20080LoadBalancerPool) GetCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Category.Get(), o.Category.IsSet()
}

// HasCategory returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasCategory() bool {
	if o != nil && o.Category.IsSet() {
		return true
	}

	return false
}

// SetCategory gets a reference to the given NullableString and assigns it to the Category field.
func (o *InlineResponse20080LoadBalancerPool) SetCategory(v string) {
	o.Category.Set(&v)
}
// SetCategoryNil sets the value for Category to be an explicit nil
func (o *InlineResponse20080LoadBalancerPool) SetCategoryNil() {
	o.Category.Set(nil)
}

// UnsetCategory ensures that no value is present for Category, not even an explicit nil
func (o *InlineResponse20080LoadBalancerPool) UnsetCategory() {
	o.Category.Unset()
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetVisibilityOk() (*string, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *InlineResponse20080LoadBalancerPool) SetVisibility(v string) {
	o.Visibility = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20080LoadBalancerPool) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20080LoadBalancerPool) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *InlineResponse20080LoadBalancerPool) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *InlineResponse20080LoadBalancerPool) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *InlineResponse20080LoadBalancerPool) UnsetDescription() {
	o.Description.Unset()
}

// GetInternalId returns the InternalId field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetInternalId() string {
	if o == nil || o.InternalId == nil {
		var ret string
		return ret
	}
	return *o.InternalId
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetInternalIdOk() (*string, bool) {
	if o == nil || o.InternalId == nil {
		return nil, false
	}
	return o.InternalId, true
}

// HasInternalId returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasInternalId() bool {
	if o != nil && o.InternalId != nil {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given string and assigns it to the InternalId field.
func (o *InlineResponse20080LoadBalancerPool) SetInternalId(v string) {
	o.InternalId = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetExternalIdOk() (*string, bool) {
	if o == nil || o.ExternalId == nil {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasExternalId() bool {
	if o != nil && o.ExternalId != nil {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *InlineResponse20080LoadBalancerPool) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *InlineResponse20080LoadBalancerPool) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetVipSticky returns the VipSticky field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20080LoadBalancerPool) GetVipSticky() string {
	if o == nil || o.VipSticky.Get() == nil {
		var ret string
		return ret
	}
	return *o.VipSticky.Get()
}

// GetVipStickyOk returns a tuple with the VipSticky field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20080LoadBalancerPool) GetVipStickyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VipSticky.Get(), o.VipSticky.IsSet()
}

// HasVipSticky returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasVipSticky() bool {
	if o != nil && o.VipSticky.IsSet() {
		return true
	}

	return false
}

// SetVipSticky gets a reference to the given NullableString and assigns it to the VipSticky field.
func (o *InlineResponse20080LoadBalancerPool) SetVipSticky(v string) {
	o.VipSticky.Set(&v)
}
// SetVipStickyNil sets the value for VipSticky to be an explicit nil
func (o *InlineResponse20080LoadBalancerPool) SetVipStickyNil() {
	o.VipSticky.Set(nil)
}

// UnsetVipSticky ensures that no value is present for VipSticky, not even an explicit nil
func (o *InlineResponse20080LoadBalancerPool) UnsetVipSticky() {
	o.VipSticky.Unset()
}

// GetVipBalance returns the VipBalance field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetVipBalance() string {
	if o == nil || o.VipBalance == nil {
		var ret string
		return ret
	}
	return *o.VipBalance
}

// GetVipBalanceOk returns a tuple with the VipBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetVipBalanceOk() (*string, bool) {
	if o == nil || o.VipBalance == nil {
		return nil, false
	}
	return o.VipBalance, true
}

// HasVipBalance returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasVipBalance() bool {
	if o != nil && o.VipBalance != nil {
		return true
	}

	return false
}

// SetVipBalance gets a reference to the given string and assigns it to the VipBalance field.
func (o *InlineResponse20080LoadBalancerPool) SetVipBalance(v string) {
	o.VipBalance = &v
}

// GetAllowNat returns the AllowNat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20080LoadBalancerPool) GetAllowNat() string {
	if o == nil || o.AllowNat.Get() == nil {
		var ret string
		return ret
	}
	return *o.AllowNat.Get()
}

// GetAllowNatOk returns a tuple with the AllowNat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20080LoadBalancerPool) GetAllowNatOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AllowNat.Get(), o.AllowNat.IsSet()
}

// HasAllowNat returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasAllowNat() bool {
	if o != nil && o.AllowNat.IsSet() {
		return true
	}

	return false
}

// SetAllowNat gets a reference to the given NullableString and assigns it to the AllowNat field.
func (o *InlineResponse20080LoadBalancerPool) SetAllowNat(v string) {
	o.AllowNat.Set(&v)
}
// SetAllowNatNil sets the value for AllowNat to be an explicit nil
func (o *InlineResponse20080LoadBalancerPool) SetAllowNatNil() {
	o.AllowNat.Set(nil)
}

// UnsetAllowNat ensures that no value is present for AllowNat, not even an explicit nil
func (o *InlineResponse20080LoadBalancerPool) UnsetAllowNat() {
	o.AllowNat.Unset()
}

// GetAllowSnat returns the AllowSnat field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20080LoadBalancerPool) GetAllowSnat() string {
	if o == nil || o.AllowSnat.Get() == nil {
		var ret string
		return ret
	}
	return *o.AllowSnat.Get()
}

// GetAllowSnatOk returns a tuple with the AllowSnat field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20080LoadBalancerPool) GetAllowSnatOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AllowSnat.Get(), o.AllowSnat.IsSet()
}

// HasAllowSnat returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasAllowSnat() bool {
	if o != nil && o.AllowSnat.IsSet() {
		return true
	}

	return false
}

// SetAllowSnat gets a reference to the given NullableString and assigns it to the AllowSnat field.
func (o *InlineResponse20080LoadBalancerPool) SetAllowSnat(v string) {
	o.AllowSnat.Set(&v)
}
// SetAllowSnatNil sets the value for AllowSnat to be an explicit nil
func (o *InlineResponse20080LoadBalancerPool) SetAllowSnatNil() {
	o.AllowSnat.Set(nil)
}

// UnsetAllowSnat ensures that no value is present for AllowSnat, not even an explicit nil
func (o *InlineResponse20080LoadBalancerPool) UnsetAllowSnat() {
	o.AllowSnat.Unset()
}

// GetVipClientIpMode returns the VipClientIpMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20080LoadBalancerPool) GetVipClientIpMode() string {
	if o == nil || o.VipClientIpMode.Get() == nil {
		var ret string
		return ret
	}
	return *o.VipClientIpMode.Get()
}

// GetVipClientIpModeOk returns a tuple with the VipClientIpMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20080LoadBalancerPool) GetVipClientIpModeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VipClientIpMode.Get(), o.VipClientIpMode.IsSet()
}

// HasVipClientIpMode returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasVipClientIpMode() bool {
	if o != nil && o.VipClientIpMode.IsSet() {
		return true
	}

	return false
}

// SetVipClientIpMode gets a reference to the given NullableString and assigns it to the VipClientIpMode field.
func (o *InlineResponse20080LoadBalancerPool) SetVipClientIpMode(v string) {
	o.VipClientIpMode.Set(&v)
}
// SetVipClientIpModeNil sets the value for VipClientIpMode to be an explicit nil
func (o *InlineResponse20080LoadBalancerPool) SetVipClientIpModeNil() {
	o.VipClientIpMode.Set(nil)
}

// UnsetVipClientIpMode ensures that no value is present for VipClientIpMode, not even an explicit nil
func (o *InlineResponse20080LoadBalancerPool) UnsetVipClientIpMode() {
	o.VipClientIpMode.Unset()
}

// GetVipServerIpMode returns the VipServerIpMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20080LoadBalancerPool) GetVipServerIpMode() string {
	if o == nil || o.VipServerIpMode.Get() == nil {
		var ret string
		return ret
	}
	return *o.VipServerIpMode.Get()
}

// GetVipServerIpModeOk returns a tuple with the VipServerIpMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20080LoadBalancerPool) GetVipServerIpModeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VipServerIpMode.Get(), o.VipServerIpMode.IsSet()
}

// HasVipServerIpMode returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasVipServerIpMode() bool {
	if o != nil && o.VipServerIpMode.IsSet() {
		return true
	}

	return false
}

// SetVipServerIpMode gets a reference to the given NullableString and assigns it to the VipServerIpMode field.
func (o *InlineResponse20080LoadBalancerPool) SetVipServerIpMode(v string) {
	o.VipServerIpMode.Set(&v)
}
// SetVipServerIpModeNil sets the value for VipServerIpMode to be an explicit nil
func (o *InlineResponse20080LoadBalancerPool) SetVipServerIpModeNil() {
	o.VipServerIpMode.Set(nil)
}

// UnsetVipServerIpMode ensures that no value is present for VipServerIpMode, not even an explicit nil
func (o *InlineResponse20080LoadBalancerPool) UnsetVipServerIpMode() {
	o.VipServerIpMode.Unset()
}

// GetMinActive returns the MinActive field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetMinActive() int64 {
	if o == nil || o.MinActive == nil {
		var ret int64
		return ret
	}
	return *o.MinActive
}

// GetMinActiveOk returns a tuple with the MinActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetMinActiveOk() (*int64, bool) {
	if o == nil || o.MinActive == nil {
		return nil, false
	}
	return o.MinActive, true
}

// HasMinActive returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasMinActive() bool {
	if o != nil && o.MinActive != nil {
		return true
	}

	return false
}

// SetMinActive gets a reference to the given int64 and assigns it to the MinActive field.
func (o *InlineResponse20080LoadBalancerPool) SetMinActive(v int64) {
	o.MinActive = &v
}

// GetMinInService returns the MinInService field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20080LoadBalancerPool) GetMinInService() string {
	if o == nil || o.MinInService.Get() == nil {
		var ret string
		return ret
	}
	return *o.MinInService.Get()
}

// GetMinInServiceOk returns a tuple with the MinInService field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20080LoadBalancerPool) GetMinInServiceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinInService.Get(), o.MinInService.IsSet()
}

// HasMinInService returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasMinInService() bool {
	if o != nil && o.MinInService.IsSet() {
		return true
	}

	return false
}

// SetMinInService gets a reference to the given NullableString and assigns it to the MinInService field.
func (o *InlineResponse20080LoadBalancerPool) SetMinInService(v string) {
	o.MinInService.Set(&v)
}
// SetMinInServiceNil sets the value for MinInService to be an explicit nil
func (o *InlineResponse20080LoadBalancerPool) SetMinInServiceNil() {
	o.MinInService.Set(nil)
}

// UnsetMinInService ensures that no value is present for MinInService, not even an explicit nil
func (o *InlineResponse20080LoadBalancerPool) UnsetMinInService() {
	o.MinInService.Unset()
}

// GetMinUpMonitor returns the MinUpMonitor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20080LoadBalancerPool) GetMinUpMonitor() string {
	if o == nil || o.MinUpMonitor.Get() == nil {
		var ret string
		return ret
	}
	return *o.MinUpMonitor.Get()
}

// GetMinUpMonitorOk returns a tuple with the MinUpMonitor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20080LoadBalancerPool) GetMinUpMonitorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinUpMonitor.Get(), o.MinUpMonitor.IsSet()
}

// HasMinUpMonitor returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasMinUpMonitor() bool {
	if o != nil && o.MinUpMonitor.IsSet() {
		return true
	}

	return false
}

// SetMinUpMonitor gets a reference to the given NullableString and assigns it to the MinUpMonitor field.
func (o *InlineResponse20080LoadBalancerPool) SetMinUpMonitor(v string) {
	o.MinUpMonitor.Set(&v)
}
// SetMinUpMonitorNil sets the value for MinUpMonitor to be an explicit nil
func (o *InlineResponse20080LoadBalancerPool) SetMinUpMonitorNil() {
	o.MinUpMonitor.Set(nil)
}

// UnsetMinUpMonitor ensures that no value is present for MinUpMonitor, not even an explicit nil
func (o *InlineResponse20080LoadBalancerPool) UnsetMinUpMonitor() {
	o.MinUpMonitor.Unset()
}

// GetMinUpAction returns the MinUpAction field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20080LoadBalancerPool) GetMinUpAction() string {
	if o == nil || o.MinUpAction.Get() == nil {
		var ret string
		return ret
	}
	return *o.MinUpAction.Get()
}

// GetMinUpActionOk returns a tuple with the MinUpAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20080LoadBalancerPool) GetMinUpActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinUpAction.Get(), o.MinUpAction.IsSet()
}

// HasMinUpAction returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasMinUpAction() bool {
	if o != nil && o.MinUpAction.IsSet() {
		return true
	}

	return false
}

// SetMinUpAction gets a reference to the given NullableString and assigns it to the MinUpAction field.
func (o *InlineResponse20080LoadBalancerPool) SetMinUpAction(v string) {
	o.MinUpAction.Set(&v)
}
// SetMinUpActionNil sets the value for MinUpAction to be an explicit nil
func (o *InlineResponse20080LoadBalancerPool) SetMinUpActionNil() {
	o.MinUpAction.Set(nil)
}

// UnsetMinUpAction ensures that no value is present for MinUpAction, not even an explicit nil
func (o *InlineResponse20080LoadBalancerPool) UnsetMinUpAction() {
	o.MinUpAction.Unset()
}

// GetMaxQueueDepth returns the MaxQueueDepth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20080LoadBalancerPool) GetMaxQueueDepth() string {
	if o == nil || o.MaxQueueDepth.Get() == nil {
		var ret string
		return ret
	}
	return *o.MaxQueueDepth.Get()
}

// GetMaxQueueDepthOk returns a tuple with the MaxQueueDepth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20080LoadBalancerPool) GetMaxQueueDepthOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxQueueDepth.Get(), o.MaxQueueDepth.IsSet()
}

// HasMaxQueueDepth returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasMaxQueueDepth() bool {
	if o != nil && o.MaxQueueDepth.IsSet() {
		return true
	}

	return false
}

// SetMaxQueueDepth gets a reference to the given NullableString and assigns it to the MaxQueueDepth field.
func (o *InlineResponse20080LoadBalancerPool) SetMaxQueueDepth(v string) {
	o.MaxQueueDepth.Set(&v)
}
// SetMaxQueueDepthNil sets the value for MaxQueueDepth to be an explicit nil
func (o *InlineResponse20080LoadBalancerPool) SetMaxQueueDepthNil() {
	o.MaxQueueDepth.Set(nil)
}

// UnsetMaxQueueDepth ensures that no value is present for MaxQueueDepth, not even an explicit nil
func (o *InlineResponse20080LoadBalancerPool) UnsetMaxQueueDepth() {
	o.MaxQueueDepth.Unset()
}

// GetMaxQueueTime returns the MaxQueueTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20080LoadBalancerPool) GetMaxQueueTime() string {
	if o == nil || o.MaxQueueTime.Get() == nil {
		var ret string
		return ret
	}
	return *o.MaxQueueTime.Get()
}

// GetMaxQueueTimeOk returns a tuple with the MaxQueueTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20080LoadBalancerPool) GetMaxQueueTimeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxQueueTime.Get(), o.MaxQueueTime.IsSet()
}

// HasMaxQueueTime returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasMaxQueueTime() bool {
	if o != nil && o.MaxQueueTime.IsSet() {
		return true
	}

	return false
}

// SetMaxQueueTime gets a reference to the given NullableString and assigns it to the MaxQueueTime field.
func (o *InlineResponse20080LoadBalancerPool) SetMaxQueueTime(v string) {
	o.MaxQueueTime.Set(&v)
}
// SetMaxQueueTimeNil sets the value for MaxQueueTime to be an explicit nil
func (o *InlineResponse20080LoadBalancerPool) SetMaxQueueTimeNil() {
	o.MaxQueueTime.Set(nil)
}

// UnsetMaxQueueTime ensures that no value is present for MaxQueueTime, not even an explicit nil
func (o *InlineResponse20080LoadBalancerPool) UnsetMaxQueueTime() {
	o.MaxQueueTime.Unset()
}

// GetNumberActive returns the NumberActive field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetNumberActive() int64 {
	if o == nil || o.NumberActive == nil {
		var ret int64
		return ret
	}
	return *o.NumberActive
}

// GetNumberActiveOk returns a tuple with the NumberActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetNumberActiveOk() (*int64, bool) {
	if o == nil || o.NumberActive == nil {
		return nil, false
	}
	return o.NumberActive, true
}

// HasNumberActive returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasNumberActive() bool {
	if o != nil && o.NumberActive != nil {
		return true
	}

	return false
}

// SetNumberActive gets a reference to the given int64 and assigns it to the NumberActive field.
func (o *InlineResponse20080LoadBalancerPool) SetNumberActive(v int64) {
	o.NumberActive = &v
}

// GetNumberInService returns the NumberInService field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetNumberInService() int64 {
	if o == nil || o.NumberInService == nil {
		var ret int64
		return ret
	}
	return *o.NumberInService
}

// GetNumberInServiceOk returns a tuple with the NumberInService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetNumberInServiceOk() (*int64, bool) {
	if o == nil || o.NumberInService == nil {
		return nil, false
	}
	return o.NumberInService, true
}

// HasNumberInService returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasNumberInService() bool {
	if o != nil && o.NumberInService != nil {
		return true
	}

	return false
}

// SetNumberInService gets a reference to the given int64 and assigns it to the NumberInService field.
func (o *InlineResponse20080LoadBalancerPool) SetNumberInService(v int64) {
	o.NumberInService = &v
}

// GetHealthScore returns the HealthScore field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetHealthScore() int64 {
	if o == nil || o.HealthScore == nil {
		var ret int64
		return ret
	}
	return *o.HealthScore
}

// GetHealthScoreOk returns a tuple with the HealthScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetHealthScoreOk() (*int64, bool) {
	if o == nil || o.HealthScore == nil {
		return nil, false
	}
	return o.HealthScore, true
}

// HasHealthScore returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasHealthScore() bool {
	if o != nil && o.HealthScore != nil {
		return true
	}

	return false
}

// SetHealthScore gets a reference to the given int64 and assigns it to the HealthScore field.
func (o *InlineResponse20080LoadBalancerPool) SetHealthScore(v int64) {
	o.HealthScore = &v
}

// GetPerformanceScore returns the PerformanceScore field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetPerformanceScore() int64 {
	if o == nil || o.PerformanceScore == nil {
		var ret int64
		return ret
	}
	return *o.PerformanceScore
}

// GetPerformanceScoreOk returns a tuple with the PerformanceScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetPerformanceScoreOk() (*int64, bool) {
	if o == nil || o.PerformanceScore == nil {
		return nil, false
	}
	return o.PerformanceScore, true
}

// HasPerformanceScore returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasPerformanceScore() bool {
	if o != nil && o.PerformanceScore != nil {
		return true
	}

	return false
}

// SetPerformanceScore gets a reference to the given int64 and assigns it to the PerformanceScore field.
func (o *InlineResponse20080LoadBalancerPool) SetPerformanceScore(v int64) {
	o.PerformanceScore = &v
}

// GetHealthPenalty returns the HealthPenalty field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetHealthPenalty() int64 {
	if o == nil || o.HealthPenalty == nil {
		var ret int64
		return ret
	}
	return *o.HealthPenalty
}

// GetHealthPenaltyOk returns a tuple with the HealthPenalty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetHealthPenaltyOk() (*int64, bool) {
	if o == nil || o.HealthPenalty == nil {
		return nil, false
	}
	return o.HealthPenalty, true
}

// HasHealthPenalty returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasHealthPenalty() bool {
	if o != nil && o.HealthPenalty != nil {
		return true
	}

	return false
}

// SetHealthPenalty gets a reference to the given int64 and assigns it to the HealthPenalty field.
func (o *InlineResponse20080LoadBalancerPool) SetHealthPenalty(v int64) {
	o.HealthPenalty = &v
}

// GetSecurityPenalty returns the SecurityPenalty field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetSecurityPenalty() int64 {
	if o == nil || o.SecurityPenalty == nil {
		var ret int64
		return ret
	}
	return *o.SecurityPenalty
}

// GetSecurityPenaltyOk returns a tuple with the SecurityPenalty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetSecurityPenaltyOk() (*int64, bool) {
	if o == nil || o.SecurityPenalty == nil {
		return nil, false
	}
	return o.SecurityPenalty, true
}

// HasSecurityPenalty returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasSecurityPenalty() bool {
	if o != nil && o.SecurityPenalty != nil {
		return true
	}

	return false
}

// SetSecurityPenalty gets a reference to the given int64 and assigns it to the SecurityPenalty field.
func (o *InlineResponse20080LoadBalancerPool) SetSecurityPenalty(v int64) {
	o.SecurityPenalty = &v
}

// GetErrorPenalty returns the ErrorPenalty field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetErrorPenalty() int64 {
	if o == nil || o.ErrorPenalty == nil {
		var ret int64
		return ret
	}
	return *o.ErrorPenalty
}

// GetErrorPenaltyOk returns a tuple with the ErrorPenalty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetErrorPenaltyOk() (*int64, bool) {
	if o == nil || o.ErrorPenalty == nil {
		return nil, false
	}
	return o.ErrorPenalty, true
}

// HasErrorPenalty returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasErrorPenalty() bool {
	if o != nil && o.ErrorPenalty != nil {
		return true
	}

	return false
}

// SetErrorPenalty gets a reference to the given int64 and assigns it to the ErrorPenalty field.
func (o *InlineResponse20080LoadBalancerPool) SetErrorPenalty(v int64) {
	o.ErrorPenalty = &v
}

// GetDownAction returns the DownAction field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20080LoadBalancerPool) GetDownAction() string {
	if o == nil || o.DownAction.Get() == nil {
		var ret string
		return ret
	}
	return *o.DownAction.Get()
}

// GetDownActionOk returns a tuple with the DownAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20080LoadBalancerPool) GetDownActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DownAction.Get(), o.DownAction.IsSet()
}

// HasDownAction returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasDownAction() bool {
	if o != nil && o.DownAction.IsSet() {
		return true
	}

	return false
}

// SetDownAction gets a reference to the given NullableString and assigns it to the DownAction field.
func (o *InlineResponse20080LoadBalancerPool) SetDownAction(v string) {
	o.DownAction.Set(&v)
}
// SetDownActionNil sets the value for DownAction to be an explicit nil
func (o *InlineResponse20080LoadBalancerPool) SetDownActionNil() {
	o.DownAction.Set(nil)
}

// UnsetDownAction ensures that no value is present for DownAction, not even an explicit nil
func (o *InlineResponse20080LoadBalancerPool) UnsetDownAction() {
	o.DownAction.Unset()
}

// GetRampTime returns the RampTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20080LoadBalancerPool) GetRampTime() string {
	if o == nil || o.RampTime.Get() == nil {
		var ret string
		return ret
	}
	return *o.RampTime.Get()
}

// GetRampTimeOk returns a tuple with the RampTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20080LoadBalancerPool) GetRampTimeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RampTime.Get(), o.RampTime.IsSet()
}

// HasRampTime returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasRampTime() bool {
	if o != nil && o.RampTime.IsSet() {
		return true
	}

	return false
}

// SetRampTime gets a reference to the given NullableString and assigns it to the RampTime field.
func (o *InlineResponse20080LoadBalancerPool) SetRampTime(v string) {
	o.RampTime.Set(&v)
}
// SetRampTimeNil sets the value for RampTime to be an explicit nil
func (o *InlineResponse20080LoadBalancerPool) SetRampTimeNil() {
	o.RampTime.Set(nil)
}

// UnsetRampTime ensures that no value is present for RampTime, not even an explicit nil
func (o *InlineResponse20080LoadBalancerPool) UnsetRampTime() {
	o.RampTime.Unset()
}

// GetPort returns the Port field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20080LoadBalancerPool) GetPort() string {
	if o == nil || o.Port.Get() == nil {
		var ret string
		return ret
	}
	return *o.Port.Get()
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20080LoadBalancerPool) GetPortOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Port.Get(), o.Port.IsSet()
}

// HasPort returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasPort() bool {
	if o != nil && o.Port.IsSet() {
		return true
	}

	return false
}

// SetPort gets a reference to the given NullableString and assigns it to the Port field.
func (o *InlineResponse20080LoadBalancerPool) SetPort(v string) {
	o.Port.Set(&v)
}
// SetPortNil sets the value for Port to be an explicit nil
func (o *InlineResponse20080LoadBalancerPool) SetPortNil() {
	o.Port.Set(nil)
}

// UnsetPort ensures that no value is present for Port, not even an explicit nil
func (o *InlineResponse20080LoadBalancerPool) UnsetPort() {
	o.Port.Unset()
}

// GetPortType returns the PortType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20080LoadBalancerPool) GetPortType() string {
	if o == nil || o.PortType.Get() == nil {
		var ret string
		return ret
	}
	return *o.PortType.Get()
}

// GetPortTypeOk returns a tuple with the PortType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20080LoadBalancerPool) GetPortTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PortType.Get(), o.PortType.IsSet()
}

// HasPortType returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasPortType() bool {
	if o != nil && o.PortType.IsSet() {
		return true
	}

	return false
}

// SetPortType gets a reference to the given NullableString and assigns it to the PortType field.
func (o *InlineResponse20080LoadBalancerPool) SetPortType(v string) {
	o.PortType.Set(&v)
}
// SetPortTypeNil sets the value for PortType to be an explicit nil
func (o *InlineResponse20080LoadBalancerPool) SetPortTypeNil() {
	o.PortType.Set(nil)
}

// UnsetPortType ensures that no value is present for PortType, not even an explicit nil
func (o *InlineResponse20080LoadBalancerPool) UnsetPortType() {
	o.PortType.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse20080LoadBalancerPool) SetStatus(v string) {
	o.Status = &v
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetNodes() []InlineResponse20040AppDeployInstance {
	if o == nil || o.Nodes == nil {
		var ret []InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetNodesOk() (*[]InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Nodes == nil {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasNodes() bool {
	if o != nil && o.Nodes != nil {
		return true
	}

	return false
}

// SetNodes gets a reference to the given []InlineResponse20040AppDeployInstance and assigns it to the Nodes field.
func (o *InlineResponse20080LoadBalancerPool) SetNodes(v []InlineResponse20040AppDeployInstance) {
	o.Nodes = &v
}

// GetMonitors returns the Monitors field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetMonitors() []InlineResponse20040AppDeployInstance {
	if o == nil || o.Monitors == nil {
		var ret []InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Monitors
}

// GetMonitorsOk returns a tuple with the Monitors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetMonitorsOk() (*[]InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Monitors == nil {
		return nil, false
	}
	return o.Monitors, true
}

// HasMonitors returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasMonitors() bool {
	if o != nil && o.Monitors != nil {
		return true
	}

	return false
}

// SetMonitors gets a reference to the given []InlineResponse20040AppDeployInstance and assigns it to the Monitors field.
func (o *InlineResponse20080LoadBalancerPool) SetMonitors(v []InlineResponse20040AppDeployInstance) {
	o.Monitors = &v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetMembers() []map[string]interface{} {
	if o == nil || o.Members == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetMembersOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Members == nil {
		return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasMembers() bool {
	if o != nil && o.Members != nil {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []map[string]interface{} and assigns it to the Members field.
func (o *InlineResponse20080LoadBalancerPool) SetMembers(v []map[string]interface{}) {
	o.Members = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetConfig() map[string]interface{} {
	if o == nil || o.Config == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetConfigOk() (*map[string]interface{}, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *InlineResponse20080LoadBalancerPool) SetConfig(v map[string]interface{}) {
	o.Config = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20080LoadBalancerPool) GetCreatedBy() string {
	if o == nil || o.CreatedBy.Get() == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20080LoadBalancerPool) GetCreatedByOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasCreatedBy() bool {
	if o != nil && o.CreatedBy.IsSet() {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given NullableString and assigns it to the CreatedBy field.
func (o *InlineResponse20080LoadBalancerPool) SetCreatedBy(v string) {
	o.CreatedBy.Set(&v)
}
// SetCreatedByNil sets the value for CreatedBy to be an explicit nil
func (o *InlineResponse20080LoadBalancerPool) SetCreatedByNil() {
	o.CreatedBy.Set(nil)
}

// UnsetCreatedBy ensures that no value is present for CreatedBy, not even an explicit nil
func (o *InlineResponse20080LoadBalancerPool) UnsetCreatedBy() {
	o.CreatedBy.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetDateCreated() time.Time {
	if o == nil || o.DateCreated == nil {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *InlineResponse20080LoadBalancerPool) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *InlineResponse20080LoadBalancerPool) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080LoadBalancerPool) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *InlineResponse20080LoadBalancerPool) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *InlineResponse20080LoadBalancerPool) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

func (o InlineResponse20080LoadBalancerPool) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LoadBalancer != nil {
		toSerialize["loadBalancer"] = o.LoadBalancer
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Category.IsSet() {
		toSerialize["category"] = o.Category.Get()
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.InternalId != nil {
		toSerialize["internalId"] = o.InternalId
	}
	if o.ExternalId != nil {
		toSerialize["externalId"] = o.ExternalId
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.VipSticky.IsSet() {
		toSerialize["vipSticky"] = o.VipSticky.Get()
	}
	if o.VipBalance != nil {
		toSerialize["vipBalance"] = o.VipBalance
	}
	if o.AllowNat.IsSet() {
		toSerialize["allowNat"] = o.AllowNat.Get()
	}
	if o.AllowSnat.IsSet() {
		toSerialize["allowSnat"] = o.AllowSnat.Get()
	}
	if o.VipClientIpMode.IsSet() {
		toSerialize["vipClientIpMode"] = o.VipClientIpMode.Get()
	}
	if o.VipServerIpMode.IsSet() {
		toSerialize["vipServerIpMode"] = o.VipServerIpMode.Get()
	}
	if o.MinActive != nil {
		toSerialize["minActive"] = o.MinActive
	}
	if o.MinInService.IsSet() {
		toSerialize["minInService"] = o.MinInService.Get()
	}
	if o.MinUpMonitor.IsSet() {
		toSerialize["minUpMonitor"] = o.MinUpMonitor.Get()
	}
	if o.MinUpAction.IsSet() {
		toSerialize["minUpAction"] = o.MinUpAction.Get()
	}
	if o.MaxQueueDepth.IsSet() {
		toSerialize["maxQueueDepth"] = o.MaxQueueDepth.Get()
	}
	if o.MaxQueueTime.IsSet() {
		toSerialize["maxQueueTime"] = o.MaxQueueTime.Get()
	}
	if o.NumberActive != nil {
		toSerialize["numberActive"] = o.NumberActive
	}
	if o.NumberInService != nil {
		toSerialize["numberInService"] = o.NumberInService
	}
	if o.HealthScore != nil {
		toSerialize["healthScore"] = o.HealthScore
	}
	if o.PerformanceScore != nil {
		toSerialize["performanceScore"] = o.PerformanceScore
	}
	if o.HealthPenalty != nil {
		toSerialize["healthPenalty"] = o.HealthPenalty
	}
	if o.SecurityPenalty != nil {
		toSerialize["securityPenalty"] = o.SecurityPenalty
	}
	if o.ErrorPenalty != nil {
		toSerialize["errorPenalty"] = o.ErrorPenalty
	}
	if o.DownAction.IsSet() {
		toSerialize["downAction"] = o.DownAction.Get()
	}
	if o.RampTime.IsSet() {
		toSerialize["rampTime"] = o.RampTime.Get()
	}
	if o.Port.IsSet() {
		toSerialize["port"] = o.Port.Get()
	}
	if o.PortType.IsSet() {
		toSerialize["portType"] = o.PortType.Get()
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Nodes != nil {
		toSerialize["nodes"] = o.Nodes
	}
	if o.Monitors != nil {
		toSerialize["monitors"] = o.Monitors
	}
	if o.Members != nil {
		toSerialize["members"] = o.Members
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.CreatedBy.IsSet() {
		toSerialize["createdBy"] = o.CreatedBy.Get()
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20080LoadBalancerPool struct {
	value *InlineResponse20080LoadBalancerPool
	isSet bool
}

func (v NullableInlineResponse20080LoadBalancerPool) Get() *InlineResponse20080LoadBalancerPool {
	return v.value
}

func (v *NullableInlineResponse20080LoadBalancerPool) Set(val *InlineResponse20080LoadBalancerPool) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20080LoadBalancerPool) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20080LoadBalancerPool) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20080LoadBalancerPool(val *InlineResponse20080LoadBalancerPool) *NullableInlineResponse20080LoadBalancerPool {
	return &NullableInlineResponse20080LoadBalancerPool{value: val, isSet: true}
}

func (v NullableInlineResponse20080LoadBalancerPool) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20080LoadBalancerPool) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


