/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200121 struct for InlineResponse200121
type InlineResponse200121 struct {
	NetworkPoolServerType *NetworkPoolServerType `json:"networkPoolServerType,omitempty"`
}

// NewInlineResponse200121 instantiates a new InlineResponse200121 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200121() *InlineResponse200121 {
	this := InlineResponse200121{}
	return &this
}

// NewInlineResponse200121WithDefaults instantiates a new InlineResponse200121 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200121WithDefaults() *InlineResponse200121 {
	this := InlineResponse200121{}
	return &this
}

// GetNetworkPoolServerType returns the NetworkPoolServerType field value if set, zero value otherwise.
func (o *InlineResponse200121) GetNetworkPoolServerType() NetworkPoolServerType {
	if o == nil || o.NetworkPoolServerType == nil {
		var ret NetworkPoolServerType
		return ret
	}
	return *o.NetworkPoolServerType
}

// GetNetworkPoolServerTypeOk returns a tuple with the NetworkPoolServerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200121) GetNetworkPoolServerTypeOk() (*NetworkPoolServerType, bool) {
	if o == nil || o.NetworkPoolServerType == nil {
		return nil, false
	}
	return o.NetworkPoolServerType, true
}

// HasNetworkPoolServerType returns a boolean if a field has been set.
func (o *InlineResponse200121) HasNetworkPoolServerType() bool {
	if o != nil && o.NetworkPoolServerType != nil {
		return true
	}

	return false
}

// SetNetworkPoolServerType gets a reference to the given NetworkPoolServerType and assigns it to the NetworkPoolServerType field.
func (o *InlineResponse200121) SetNetworkPoolServerType(v NetworkPoolServerType) {
	o.NetworkPoolServerType = &v
}

func (o InlineResponse200121) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkPoolServerType != nil {
		toSerialize["networkPoolServerType"] = o.NetworkPoolServerType
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200121 struct {
	value *InlineResponse200121
	isSet bool
}

func (v NullableInlineResponse200121) Get() *InlineResponse200121 {
	return v.value
}

func (v *NullableInlineResponse200121) Set(val *InlineResponse200121) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200121) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200121) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200121(val *InlineResponse200121) *NullableInlineResponse200121 {
	return &NullableInlineResponse200121{value: val, isSet: true}
}

func (v NullableInlineResponse200121) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200121) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


