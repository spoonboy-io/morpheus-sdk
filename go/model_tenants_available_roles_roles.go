/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TenantsAvailableRolesRoles struct for TenantsAvailableRolesRoles
type TenantsAvailableRolesRoles struct {
	Id *int64 `json:"id,omitempty"`
	Authority *string `json:"authority,omitempty"`
	Description NullableString `json:"description,omitempty"`
	RoleType NullableString `json:"roleType,omitempty"`
	Owner map[string]interface{} `json:"owner,omitempty"`
}

// NewTenantsAvailableRolesRoles instantiates a new TenantsAvailableRolesRoles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantsAvailableRolesRoles() *TenantsAvailableRolesRoles {
	this := TenantsAvailableRolesRoles{}
	return &this
}

// NewTenantsAvailableRolesRolesWithDefaults instantiates a new TenantsAvailableRolesRoles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantsAvailableRolesRolesWithDefaults() *TenantsAvailableRolesRoles {
	this := TenantsAvailableRolesRoles{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TenantsAvailableRolesRoles) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantsAvailableRolesRoles) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TenantsAvailableRolesRoles) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *TenantsAvailableRolesRoles) SetId(v int64) {
	o.Id = &v
}

// GetAuthority returns the Authority field value if set, zero value otherwise.
func (o *TenantsAvailableRolesRoles) GetAuthority() string {
	if o == nil || o.Authority == nil {
		var ret string
		return ret
	}
	return *o.Authority
}

// GetAuthorityOk returns a tuple with the Authority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantsAvailableRolesRoles) GetAuthorityOk() (*string, bool) {
	if o == nil || o.Authority == nil {
		return nil, false
	}
	return o.Authority, true
}

// HasAuthority returns a boolean if a field has been set.
func (o *TenantsAvailableRolesRoles) HasAuthority() bool {
	if o != nil && o.Authority != nil {
		return true
	}

	return false
}

// SetAuthority gets a reference to the given string and assigns it to the Authority field.
func (o *TenantsAvailableRolesRoles) SetAuthority(v string) {
	o.Authority = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantsAvailableRolesRoles) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantsAvailableRolesRoles) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *TenantsAvailableRolesRoles) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *TenantsAvailableRolesRoles) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *TenantsAvailableRolesRoles) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *TenantsAvailableRolesRoles) UnsetDescription() {
	o.Description.Unset()
}

// GetRoleType returns the RoleType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantsAvailableRolesRoles) GetRoleType() string {
	if o == nil || o.RoleType.Get() == nil {
		var ret string
		return ret
	}
	return *o.RoleType.Get()
}

// GetRoleTypeOk returns a tuple with the RoleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantsAvailableRolesRoles) GetRoleTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RoleType.Get(), o.RoleType.IsSet()
}

// HasRoleType returns a boolean if a field has been set.
func (o *TenantsAvailableRolesRoles) HasRoleType() bool {
	if o != nil && o.RoleType.IsSet() {
		return true
	}

	return false
}

// SetRoleType gets a reference to the given NullableString and assigns it to the RoleType field.
func (o *TenantsAvailableRolesRoles) SetRoleType(v string) {
	o.RoleType.Set(&v)
}
// SetRoleTypeNil sets the value for RoleType to be an explicit nil
func (o *TenantsAvailableRolesRoles) SetRoleTypeNil() {
	o.RoleType.Set(nil)
}

// UnsetRoleType ensures that no value is present for RoleType, not even an explicit nil
func (o *TenantsAvailableRolesRoles) UnsetRoleType() {
	o.RoleType.Unset()
}

// GetOwner returns the Owner field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantsAvailableRolesRoles) GetOwner() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}
	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantsAvailableRolesRoles) GetOwnerOk() (*map[string]interface{}, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return &o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *TenantsAvailableRolesRoles) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given map[string]interface{} and assigns it to the Owner field.
func (o *TenantsAvailableRolesRoles) SetOwner(v map[string]interface{}) {
	o.Owner = v
}

func (o TenantsAvailableRolesRoles) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Authority != nil {
		toSerialize["authority"] = o.Authority
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.RoleType.IsSet() {
		toSerialize["roleType"] = o.RoleType.Get()
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	return json.Marshal(toSerialize)
}

type NullableTenantsAvailableRolesRoles struct {
	value *TenantsAvailableRolesRoles
	isSet bool
}

func (v NullableTenantsAvailableRolesRoles) Get() *TenantsAvailableRolesRoles {
	return v.value
}

func (v *NullableTenantsAvailableRolesRoles) Set(val *TenantsAvailableRolesRoles) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantsAvailableRolesRoles) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantsAvailableRolesRoles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantsAvailableRolesRoles(val *TenantsAvailableRolesRoles) *NullableTenantsAvailableRolesRoles {
	return &NullableTenantsAvailableRolesRoles{value: val, isSet: true}
}

func (v NullableTenantsAvailableRolesRoles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantsAvailableRolesRoles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


