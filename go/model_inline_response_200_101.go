/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200101 struct for InlineResponse200101
type InlineResponse200101 struct {
	RuleGroup *map[string]interface{} `json:"ruleGroup,omitempty"`
}

// NewInlineResponse200101 instantiates a new InlineResponse200101 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200101() *InlineResponse200101 {
	this := InlineResponse200101{}
	return &this
}

// NewInlineResponse200101WithDefaults instantiates a new InlineResponse200101 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200101WithDefaults() *InlineResponse200101 {
	this := InlineResponse200101{}
	return &this
}

// GetRuleGroup returns the RuleGroup field value if set, zero value otherwise.
func (o *InlineResponse200101) GetRuleGroup() map[string]interface{} {
	if o == nil || o.RuleGroup == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.RuleGroup
}

// GetRuleGroupOk returns a tuple with the RuleGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200101) GetRuleGroupOk() (*map[string]interface{}, bool) {
	if o == nil || o.RuleGroup == nil {
		return nil, false
	}
	return o.RuleGroup, true
}

// HasRuleGroup returns a boolean if a field has been set.
func (o *InlineResponse200101) HasRuleGroup() bool {
	if o != nil && o.RuleGroup != nil {
		return true
	}

	return false
}

// SetRuleGroup gets a reference to the given map[string]interface{} and assigns it to the RuleGroup field.
func (o *InlineResponse200101) SetRuleGroup(v map[string]interface{}) {
	o.RuleGroup = &v
}

func (o InlineResponse200101) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RuleGroup != nil {
		toSerialize["ruleGroup"] = o.RuleGroup
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200101 struct {
	value *InlineResponse200101
	isSet bool
}

func (v NullableInlineResponse200101) Get() *InlineResponse200101 {
	return v.value
}

func (v *NullableInlineResponse200101) Set(val *InlineResponse200101) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200101) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200101) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200101(val *InlineResponse200101) *NullableInlineResponse200101 {
	return &NullableInlineResponse200101{value: val, isSet: true}
}

func (v NullableInlineResponse200101) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200101) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


