/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ImageBuildsConfig struct for ImageBuildsConfig
type ImageBuildsConfig struct {
	Instance *ImageBuildsConfigInstance `json:"instance,omitempty"`
	NetworkInterfaces *[]ImageBuildsConfigNetworkInterfaces `json:"networkInterfaces,omitempty"`
	Volumes *[]ImageBuildsConfigVolumes `json:"volumes,omitempty"`
	StorageControllers *[]map[string]interface{} `json:"storageControllers,omitempty"`
	ZoneId *int64 `json:"zoneId,omitempty"`
	Config *ImageBuildsConfigConfig `json:"config,omitempty"`
	Plan *ImageBuildsConfigPlan `json:"plan,omitempty"`
}

// NewImageBuildsConfig instantiates a new ImageBuildsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageBuildsConfig() *ImageBuildsConfig {
	this := ImageBuildsConfig{}
	return &this
}

// NewImageBuildsConfigWithDefaults instantiates a new ImageBuildsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageBuildsConfigWithDefaults() *ImageBuildsConfig {
	this := ImageBuildsConfig{}
	return &this
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *ImageBuildsConfig) GetInstance() ImageBuildsConfigInstance {
	if o == nil || o.Instance == nil {
		var ret ImageBuildsConfigInstance
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuildsConfig) GetInstanceOk() (*ImageBuildsConfigInstance, bool) {
	if o == nil || o.Instance == nil {
		return nil, false
	}
	return o.Instance, true
}

// HasInstance returns a boolean if a field has been set.
func (o *ImageBuildsConfig) HasInstance() bool {
	if o != nil && o.Instance != nil {
		return true
	}

	return false
}

// SetInstance gets a reference to the given ImageBuildsConfigInstance and assigns it to the Instance field.
func (o *ImageBuildsConfig) SetInstance(v ImageBuildsConfigInstance) {
	o.Instance = &v
}

// GetNetworkInterfaces returns the NetworkInterfaces field value if set, zero value otherwise.
func (o *ImageBuildsConfig) GetNetworkInterfaces() []ImageBuildsConfigNetworkInterfaces {
	if o == nil || o.NetworkInterfaces == nil {
		var ret []ImageBuildsConfigNetworkInterfaces
		return ret
	}
	return *o.NetworkInterfaces
}

// GetNetworkInterfacesOk returns a tuple with the NetworkInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuildsConfig) GetNetworkInterfacesOk() (*[]ImageBuildsConfigNetworkInterfaces, bool) {
	if o == nil || o.NetworkInterfaces == nil {
		return nil, false
	}
	return o.NetworkInterfaces, true
}

// HasNetworkInterfaces returns a boolean if a field has been set.
func (o *ImageBuildsConfig) HasNetworkInterfaces() bool {
	if o != nil && o.NetworkInterfaces != nil {
		return true
	}

	return false
}

// SetNetworkInterfaces gets a reference to the given []ImageBuildsConfigNetworkInterfaces and assigns it to the NetworkInterfaces field.
func (o *ImageBuildsConfig) SetNetworkInterfaces(v []ImageBuildsConfigNetworkInterfaces) {
	o.NetworkInterfaces = &v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *ImageBuildsConfig) GetVolumes() []ImageBuildsConfigVolumes {
	if o == nil || o.Volumes == nil {
		var ret []ImageBuildsConfigVolumes
		return ret
	}
	return *o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuildsConfig) GetVolumesOk() (*[]ImageBuildsConfigVolumes, bool) {
	if o == nil || o.Volumes == nil {
		return nil, false
	}
	return o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *ImageBuildsConfig) HasVolumes() bool {
	if o != nil && o.Volumes != nil {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []ImageBuildsConfigVolumes and assigns it to the Volumes field.
func (o *ImageBuildsConfig) SetVolumes(v []ImageBuildsConfigVolumes) {
	o.Volumes = &v
}

// GetStorageControllers returns the StorageControllers field value if set, zero value otherwise.
func (o *ImageBuildsConfig) GetStorageControllers() []map[string]interface{} {
	if o == nil || o.StorageControllers == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.StorageControllers
}

// GetStorageControllersOk returns a tuple with the StorageControllers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuildsConfig) GetStorageControllersOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.StorageControllers == nil {
		return nil, false
	}
	return o.StorageControllers, true
}

// HasStorageControllers returns a boolean if a field has been set.
func (o *ImageBuildsConfig) HasStorageControllers() bool {
	if o != nil && o.StorageControllers != nil {
		return true
	}

	return false
}

// SetStorageControllers gets a reference to the given []map[string]interface{} and assigns it to the StorageControllers field.
func (o *ImageBuildsConfig) SetStorageControllers(v []map[string]interface{}) {
	o.StorageControllers = &v
}

// GetZoneId returns the ZoneId field value if set, zero value otherwise.
func (o *ImageBuildsConfig) GetZoneId() int64 {
	if o == nil || o.ZoneId == nil {
		var ret int64
		return ret
	}
	return *o.ZoneId
}

// GetZoneIdOk returns a tuple with the ZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuildsConfig) GetZoneIdOk() (*int64, bool) {
	if o == nil || o.ZoneId == nil {
		return nil, false
	}
	return o.ZoneId, true
}

// HasZoneId returns a boolean if a field has been set.
func (o *ImageBuildsConfig) HasZoneId() bool {
	if o != nil && o.ZoneId != nil {
		return true
	}

	return false
}

// SetZoneId gets a reference to the given int64 and assigns it to the ZoneId field.
func (o *ImageBuildsConfig) SetZoneId(v int64) {
	o.ZoneId = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *ImageBuildsConfig) GetConfig() ImageBuildsConfigConfig {
	if o == nil || o.Config == nil {
		var ret ImageBuildsConfigConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuildsConfig) GetConfigOk() (*ImageBuildsConfigConfig, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *ImageBuildsConfig) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given ImageBuildsConfigConfig and assigns it to the Config field.
func (o *ImageBuildsConfig) SetConfig(v ImageBuildsConfigConfig) {
	o.Config = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *ImageBuildsConfig) GetPlan() ImageBuildsConfigPlan {
	if o == nil || o.Plan == nil {
		var ret ImageBuildsConfigPlan
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuildsConfig) GetPlanOk() (*ImageBuildsConfigPlan, bool) {
	if o == nil || o.Plan == nil {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *ImageBuildsConfig) HasPlan() bool {
	if o != nil && o.Plan != nil {
		return true
	}

	return false
}

// SetPlan gets a reference to the given ImageBuildsConfigPlan and assigns it to the Plan field.
func (o *ImageBuildsConfig) SetPlan(v ImageBuildsConfigPlan) {
	o.Plan = &v
}

func (o ImageBuildsConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Instance != nil {
		toSerialize["instance"] = o.Instance
	}
	if o.NetworkInterfaces != nil {
		toSerialize["networkInterfaces"] = o.NetworkInterfaces
	}
	if o.Volumes != nil {
		toSerialize["volumes"] = o.Volumes
	}
	if o.StorageControllers != nil {
		toSerialize["storageControllers"] = o.StorageControllers
	}
	if o.ZoneId != nil {
		toSerialize["zoneId"] = o.ZoneId
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.Plan != nil {
		toSerialize["plan"] = o.Plan
	}
	return json.Marshal(toSerialize)
}

type NullableImageBuildsConfig struct {
	value *ImageBuildsConfig
	isSet bool
}

func (v NullableImageBuildsConfig) Get() *ImageBuildsConfig {
	return v.value
}

func (v *NullableImageBuildsConfig) Set(val *ImageBuildsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableImageBuildsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableImageBuildsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageBuildsConfig(val *ImageBuildsConfig) *NullableImageBuildsConfig {
	return &NullableImageBuildsConfig{value: val, isSet: true}
}

func (v NullableImageBuildsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageBuildsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


