/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject54 struct for InlineObject54
type InlineObject54 struct {
	// Url of desired template to apply to cluster
	ServiceUrl *string `json:"serviceUrl,omitempty"`
	// Name or ID of desired Spec Template to apply to cluster
	SpecTemplate *string `json:"specTemplate,omitempty"`
	// Yaml of template to apply to cluster
	SpecYaml *string `json:"specYaml,omitempty"`
}

// NewInlineObject54 instantiates a new InlineObject54 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject54() *InlineObject54 {
	this := InlineObject54{}
	return &this
}

// NewInlineObject54WithDefaults instantiates a new InlineObject54 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject54WithDefaults() *InlineObject54 {
	this := InlineObject54{}
	return &this
}

// GetServiceUrl returns the ServiceUrl field value if set, zero value otherwise.
func (o *InlineObject54) GetServiceUrl() string {
	if o == nil || o.ServiceUrl == nil {
		var ret string
		return ret
	}
	return *o.ServiceUrl
}

// GetServiceUrlOk returns a tuple with the ServiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject54) GetServiceUrlOk() (*string, bool) {
	if o == nil || o.ServiceUrl == nil {
		return nil, false
	}
	return o.ServiceUrl, true
}

// HasServiceUrl returns a boolean if a field has been set.
func (o *InlineObject54) HasServiceUrl() bool {
	if o != nil && o.ServiceUrl != nil {
		return true
	}

	return false
}

// SetServiceUrl gets a reference to the given string and assigns it to the ServiceUrl field.
func (o *InlineObject54) SetServiceUrl(v string) {
	o.ServiceUrl = &v
}

// GetSpecTemplate returns the SpecTemplate field value if set, zero value otherwise.
func (o *InlineObject54) GetSpecTemplate() string {
	if o == nil || o.SpecTemplate == nil {
		var ret string
		return ret
	}
	return *o.SpecTemplate
}

// GetSpecTemplateOk returns a tuple with the SpecTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject54) GetSpecTemplateOk() (*string, bool) {
	if o == nil || o.SpecTemplate == nil {
		return nil, false
	}
	return o.SpecTemplate, true
}

// HasSpecTemplate returns a boolean if a field has been set.
func (o *InlineObject54) HasSpecTemplate() bool {
	if o != nil && o.SpecTemplate != nil {
		return true
	}

	return false
}

// SetSpecTemplate gets a reference to the given string and assigns it to the SpecTemplate field.
func (o *InlineObject54) SetSpecTemplate(v string) {
	o.SpecTemplate = &v
}

// GetSpecYaml returns the SpecYaml field value if set, zero value otherwise.
func (o *InlineObject54) GetSpecYaml() string {
	if o == nil || o.SpecYaml == nil {
		var ret string
		return ret
	}
	return *o.SpecYaml
}

// GetSpecYamlOk returns a tuple with the SpecYaml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject54) GetSpecYamlOk() (*string, bool) {
	if o == nil || o.SpecYaml == nil {
		return nil, false
	}
	return o.SpecYaml, true
}

// HasSpecYaml returns a boolean if a field has been set.
func (o *InlineObject54) HasSpecYaml() bool {
	if o != nil && o.SpecYaml != nil {
		return true
	}

	return false
}

// SetSpecYaml gets a reference to the given string and assigns it to the SpecYaml field.
func (o *InlineObject54) SetSpecYaml(v string) {
	o.SpecYaml = &v
}

func (o InlineObject54) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServiceUrl != nil {
		toSerialize["serviceUrl"] = o.ServiceUrl
	}
	if o.SpecTemplate != nil {
		toSerialize["specTemplate"] = o.SpecTemplate
	}
	if o.SpecYaml != nil {
		toSerialize["specYaml"] = o.SpecYaml
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject54 struct {
	value *InlineObject54
	isSet bool
}

func (v NullableInlineObject54) Get() *InlineObject54 {
	return v.value
}

func (v *NullableInlineObject54) Set(val *InlineObject54) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject54) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject54) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject54(val *InlineObject54) *NullableInlineObject54 {
	return &NullableInlineObject54{value: val, isSet: true}
}

func (v NullableInlineObject54) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject54) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


