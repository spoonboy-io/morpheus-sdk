/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20040AppDeployDeploymentVersion struct for InlineResponse20040AppDeployDeploymentVersion
type InlineResponse20040AppDeployDeploymentVersion struct {
	Id *int64 `json:"id,omitempty"`
	UserVersion *string `json:"userVersion,omitempty"`
	DeployType *string `json:"deployType,omitempty"`
}

// NewInlineResponse20040AppDeployDeploymentVersion instantiates a new InlineResponse20040AppDeployDeploymentVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20040AppDeployDeploymentVersion() *InlineResponse20040AppDeployDeploymentVersion {
	this := InlineResponse20040AppDeployDeploymentVersion{}
	return &this
}

// NewInlineResponse20040AppDeployDeploymentVersionWithDefaults instantiates a new InlineResponse20040AppDeployDeploymentVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20040AppDeployDeploymentVersionWithDefaults() *InlineResponse20040AppDeployDeploymentVersion {
	this := InlineResponse20040AppDeployDeploymentVersion{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20040AppDeployDeploymentVersion) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20040AppDeployDeploymentVersion) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20040AppDeployDeploymentVersion) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *InlineResponse20040AppDeployDeploymentVersion) SetId(v int64) {
	o.Id = &v
}

// GetUserVersion returns the UserVersion field value if set, zero value otherwise.
func (o *InlineResponse20040AppDeployDeploymentVersion) GetUserVersion() string {
	if o == nil || o.UserVersion == nil {
		var ret string
		return ret
	}
	return *o.UserVersion
}

// GetUserVersionOk returns a tuple with the UserVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20040AppDeployDeploymentVersion) GetUserVersionOk() (*string, bool) {
	if o == nil || o.UserVersion == nil {
		return nil, false
	}
	return o.UserVersion, true
}

// HasUserVersion returns a boolean if a field has been set.
func (o *InlineResponse20040AppDeployDeploymentVersion) HasUserVersion() bool {
	if o != nil && o.UserVersion != nil {
		return true
	}

	return false
}

// SetUserVersion gets a reference to the given string and assigns it to the UserVersion field.
func (o *InlineResponse20040AppDeployDeploymentVersion) SetUserVersion(v string) {
	o.UserVersion = &v
}

// GetDeployType returns the DeployType field value if set, zero value otherwise.
func (o *InlineResponse20040AppDeployDeploymentVersion) GetDeployType() string {
	if o == nil || o.DeployType == nil {
		var ret string
		return ret
	}
	return *o.DeployType
}

// GetDeployTypeOk returns a tuple with the DeployType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20040AppDeployDeploymentVersion) GetDeployTypeOk() (*string, bool) {
	if o == nil || o.DeployType == nil {
		return nil, false
	}
	return o.DeployType, true
}

// HasDeployType returns a boolean if a field has been set.
func (o *InlineResponse20040AppDeployDeploymentVersion) HasDeployType() bool {
	if o != nil && o.DeployType != nil {
		return true
	}

	return false
}

// SetDeployType gets a reference to the given string and assigns it to the DeployType field.
func (o *InlineResponse20040AppDeployDeploymentVersion) SetDeployType(v string) {
	o.DeployType = &v
}

func (o InlineResponse20040AppDeployDeploymentVersion) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.UserVersion != nil {
		toSerialize["userVersion"] = o.UserVersion
	}
	if o.DeployType != nil {
		toSerialize["deployType"] = o.DeployType
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20040AppDeployDeploymentVersion struct {
	value *InlineResponse20040AppDeployDeploymentVersion
	isSet bool
}

func (v NullableInlineResponse20040AppDeployDeploymentVersion) Get() *InlineResponse20040AppDeployDeploymentVersion {
	return v.value
}

func (v *NullableInlineResponse20040AppDeployDeploymentVersion) Set(val *InlineResponse20040AppDeployDeploymentVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20040AppDeployDeploymentVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20040AppDeployDeploymentVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20040AppDeployDeploymentVersion(val *InlineResponse20040AppDeployDeploymentVersion) *NullableInlineResponse20040AppDeployDeploymentVersion {
	return &NullableInlineResponse20040AppDeployDeploymentVersion{value: val, isSet: true}
}

func (v NullableInlineResponse20040AppDeployDeploymentVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20040AppDeployDeploymentVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


