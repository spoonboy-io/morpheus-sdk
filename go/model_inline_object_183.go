/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject183 struct for InlineObject183
type InlineObject183 struct {
	Plugin ApiPluginsIdPlugin `json:"plugin"`
}

// NewInlineObject183 instantiates a new InlineObject183 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject183(plugin ApiPluginsIdPlugin, ) *InlineObject183 {
	this := InlineObject183{}
	this.Plugin = plugin
	return &this
}

// NewInlineObject183WithDefaults instantiates a new InlineObject183 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject183WithDefaults() *InlineObject183 {
	this := InlineObject183{}
	return &this
}

// GetPlugin returns the Plugin field value
func (o *InlineObject183) GetPlugin() ApiPluginsIdPlugin {
	if o == nil  {
		var ret ApiPluginsIdPlugin
		return ret
	}

	return o.Plugin
}

// GetPluginOk returns a tuple with the Plugin field value
// and a boolean to check if the value has been set.
func (o *InlineObject183) GetPluginOk() (*ApiPluginsIdPlugin, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Plugin, true
}

// SetPlugin sets field value
func (o *InlineObject183) SetPlugin(v ApiPluginsIdPlugin) {
	o.Plugin = v
}

func (o InlineObject183) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["plugin"] = o.Plugin
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject183 struct {
	value *InlineObject183
	isSet bool
}

func (v NullableInlineObject183) Get() *InlineObject183 {
	return v.value
}

func (v *NullableInlineObject183) Set(val *InlineObject183) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject183) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject183) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject183(val *InlineObject183) *NullableInlineObject183 {
	return &NullableInlineObject183{value: val, isSet: true}
}

func (v NullableInlineObject183) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject183) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


