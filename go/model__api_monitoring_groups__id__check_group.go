/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiMonitoringGroupsIdCheckGroup Payload for creating a new monitoring check group
type ApiMonitoringGroupsIdCheckGroup struct {
	// Unique name scoped to your account for the check group
	Name *string `json:"name,omitempty"`
	// Optional description field
	Description *string `json:"description,omitempty"`
	// This specifies the minimum number of checks within the group that must be happy to keep the group from becoming unhealthy.
	MinHappy *int32 `json:"minHappy,omitempty"`
	// Used to determine if check should affect account wide availability calculations
	InUptime *bool `json:"inUptime,omitempty"`
	// Determines the maximum severity level this group can incur on an incident when failing
	Severity *string `json:"severity,omitempty"`
	// Used to determine if check group is active
	Active *bool `json:"active,omitempty"`
	Checks *[]int32 `json:"checks,omitempty"`
}

// NewApiMonitoringGroupsIdCheckGroup instantiates a new ApiMonitoringGroupsIdCheckGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiMonitoringGroupsIdCheckGroup() *ApiMonitoringGroupsIdCheckGroup {
	this := ApiMonitoringGroupsIdCheckGroup{}
	var minHappy int32 = 1
	this.MinHappy = &minHappy
	var inUptime bool = true
	this.InUptime = &inUptime
	var severity string = "critical"
	this.Severity = &severity
	var active bool = true
	this.Active = &active
	return &this
}

// NewApiMonitoringGroupsIdCheckGroupWithDefaults instantiates a new ApiMonitoringGroupsIdCheckGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiMonitoringGroupsIdCheckGroupWithDefaults() *ApiMonitoringGroupsIdCheckGroup {
	this := ApiMonitoringGroupsIdCheckGroup{}
	var minHappy int32 = 1
	this.MinHappy = &minHappy
	var inUptime bool = true
	this.InUptime = &inUptime
	var severity string = "critical"
	this.Severity = &severity
	var active bool = true
	this.Active = &active
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiMonitoringGroupsIdCheckGroup) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMonitoringGroupsIdCheckGroup) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiMonitoringGroupsIdCheckGroup) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiMonitoringGroupsIdCheckGroup) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiMonitoringGroupsIdCheckGroup) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMonitoringGroupsIdCheckGroup) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiMonitoringGroupsIdCheckGroup) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiMonitoringGroupsIdCheckGroup) SetDescription(v string) {
	o.Description = &v
}

// GetMinHappy returns the MinHappy field value if set, zero value otherwise.
func (o *ApiMonitoringGroupsIdCheckGroup) GetMinHappy() int32 {
	if o == nil || o.MinHappy == nil {
		var ret int32
		return ret
	}
	return *o.MinHappy
}

// GetMinHappyOk returns a tuple with the MinHappy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMonitoringGroupsIdCheckGroup) GetMinHappyOk() (*int32, bool) {
	if o == nil || o.MinHappy == nil {
		return nil, false
	}
	return o.MinHappy, true
}

// HasMinHappy returns a boolean if a field has been set.
func (o *ApiMonitoringGroupsIdCheckGroup) HasMinHappy() bool {
	if o != nil && o.MinHappy != nil {
		return true
	}

	return false
}

// SetMinHappy gets a reference to the given int32 and assigns it to the MinHappy field.
func (o *ApiMonitoringGroupsIdCheckGroup) SetMinHappy(v int32) {
	o.MinHappy = &v
}

// GetInUptime returns the InUptime field value if set, zero value otherwise.
func (o *ApiMonitoringGroupsIdCheckGroup) GetInUptime() bool {
	if o == nil || o.InUptime == nil {
		var ret bool
		return ret
	}
	return *o.InUptime
}

// GetInUptimeOk returns a tuple with the InUptime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMonitoringGroupsIdCheckGroup) GetInUptimeOk() (*bool, bool) {
	if o == nil || o.InUptime == nil {
		return nil, false
	}
	return o.InUptime, true
}

// HasInUptime returns a boolean if a field has been set.
func (o *ApiMonitoringGroupsIdCheckGroup) HasInUptime() bool {
	if o != nil && o.InUptime != nil {
		return true
	}

	return false
}

// SetInUptime gets a reference to the given bool and assigns it to the InUptime field.
func (o *ApiMonitoringGroupsIdCheckGroup) SetInUptime(v bool) {
	o.InUptime = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *ApiMonitoringGroupsIdCheckGroup) GetSeverity() string {
	if o == nil || o.Severity == nil {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMonitoringGroupsIdCheckGroup) GetSeverityOk() (*string, bool) {
	if o == nil || o.Severity == nil {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *ApiMonitoringGroupsIdCheckGroup) HasSeverity() bool {
	if o != nil && o.Severity != nil {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *ApiMonitoringGroupsIdCheckGroup) SetSeverity(v string) {
	o.Severity = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ApiMonitoringGroupsIdCheckGroup) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMonitoringGroupsIdCheckGroup) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ApiMonitoringGroupsIdCheckGroup) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *ApiMonitoringGroupsIdCheckGroup) SetActive(v bool) {
	o.Active = &v
}

// GetChecks returns the Checks field value if set, zero value otherwise.
func (o *ApiMonitoringGroupsIdCheckGroup) GetChecks() []int32 {
	if o == nil || o.Checks == nil {
		var ret []int32
		return ret
	}
	return *o.Checks
}

// GetChecksOk returns a tuple with the Checks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMonitoringGroupsIdCheckGroup) GetChecksOk() (*[]int32, bool) {
	if o == nil || o.Checks == nil {
		return nil, false
	}
	return o.Checks, true
}

// HasChecks returns a boolean if a field has been set.
func (o *ApiMonitoringGroupsIdCheckGroup) HasChecks() bool {
	if o != nil && o.Checks != nil {
		return true
	}

	return false
}

// SetChecks gets a reference to the given []int32 and assigns it to the Checks field.
func (o *ApiMonitoringGroupsIdCheckGroup) SetChecks(v []int32) {
	o.Checks = &v
}

func (o ApiMonitoringGroupsIdCheckGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.MinHappy != nil {
		toSerialize["minHappy"] = o.MinHappy
	}
	if o.InUptime != nil {
		toSerialize["inUptime"] = o.InUptime
	}
	if o.Severity != nil {
		toSerialize["severity"] = o.Severity
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.Checks != nil {
		toSerialize["checks"] = o.Checks
	}
	return json.Marshal(toSerialize)
}

type NullableApiMonitoringGroupsIdCheckGroup struct {
	value *ApiMonitoringGroupsIdCheckGroup
	isSet bool
}

func (v NullableApiMonitoringGroupsIdCheckGroup) Get() *ApiMonitoringGroupsIdCheckGroup {
	return v.value
}

func (v *NullableApiMonitoringGroupsIdCheckGroup) Set(val *ApiMonitoringGroupsIdCheckGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableApiMonitoringGroupsIdCheckGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableApiMonitoringGroupsIdCheckGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiMonitoringGroupsIdCheckGroup(val *ApiMonitoringGroupsIdCheckGroup) *NullableApiMonitoringGroupsIdCheckGroup {
	return &NullableApiMonitoringGroupsIdCheckGroup{value: val, isSet: true}
}

func (v NullableApiMonitoringGroupsIdCheckGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiMonitoringGroupsIdCheckGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


