/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject115 struct for InlineObject115
type InlineObject115 struct {
	InstanceTypeLayout *InstanceTypeLayoutCreate `json:"instanceTypeLayout,omitempty"`
}

// NewInlineObject115 instantiates a new InlineObject115 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject115() *InlineObject115 {
	this := InlineObject115{}
	return &this
}

// NewInlineObject115WithDefaults instantiates a new InlineObject115 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject115WithDefaults() *InlineObject115 {
	this := InlineObject115{}
	return &this
}

// GetInstanceTypeLayout returns the InstanceTypeLayout field value if set, zero value otherwise.
func (o *InlineObject115) GetInstanceTypeLayout() InstanceTypeLayoutCreate {
	if o == nil || o.InstanceTypeLayout == nil {
		var ret InstanceTypeLayoutCreate
		return ret
	}
	return *o.InstanceTypeLayout
}

// GetInstanceTypeLayoutOk returns a tuple with the InstanceTypeLayout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject115) GetInstanceTypeLayoutOk() (*InstanceTypeLayoutCreate, bool) {
	if o == nil || o.InstanceTypeLayout == nil {
		return nil, false
	}
	return o.InstanceTypeLayout, true
}

// HasInstanceTypeLayout returns a boolean if a field has been set.
func (o *InlineObject115) HasInstanceTypeLayout() bool {
	if o != nil && o.InstanceTypeLayout != nil {
		return true
	}

	return false
}

// SetInstanceTypeLayout gets a reference to the given InstanceTypeLayoutCreate and assigns it to the InstanceTypeLayout field.
func (o *InlineObject115) SetInstanceTypeLayout(v InstanceTypeLayoutCreate) {
	o.InstanceTypeLayout = &v
}

func (o InlineObject115) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InstanceTypeLayout != nil {
		toSerialize["instanceTypeLayout"] = o.InstanceTypeLayout
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject115 struct {
	value *InlineObject115
	isSet bool
}

func (v NullableInlineObject115) Get() *InlineObject115 {
	return v.value
}

func (v *NullableInlineObject115) Set(val *InlineObject115) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject115) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject115) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject115(val *InlineObject115) *NullableInlineObject115 {
	return &NullableInlineObject115{value: val, isSet: true}
}

func (v NullableInlineObject115) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject115) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


