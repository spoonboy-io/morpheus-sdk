/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject252 struct for InlineObject252
type InlineObject252 struct {
	User *UserSettingsUpdate `json:"user,omitempty"`
}

// NewInlineObject252 instantiates a new InlineObject252 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject252() *InlineObject252 {
	this := InlineObject252{}
	return &this
}

// NewInlineObject252WithDefaults instantiates a new InlineObject252 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject252WithDefaults() *InlineObject252 {
	this := InlineObject252{}
	return &this
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *InlineObject252) GetUser() UserSettingsUpdate {
	if o == nil || o.User == nil {
		var ret UserSettingsUpdate
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject252) GetUserOk() (*UserSettingsUpdate, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *InlineObject252) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given UserSettingsUpdate and assigns it to the User field.
func (o *InlineObject252) SetUser(v UserSettingsUpdate) {
	o.User = &v
}

func (o InlineObject252) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject252 struct {
	value *InlineObject252
	isSet bool
}

func (v NullableInlineObject252) Get() *InlineObject252 {
	return v.value
}

func (v *NullableInlineObject252) Set(val *InlineObject252) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject252) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject252) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject252(val *InlineObject252) *NullableInlineObject252 {
	return &NullableInlineObject252{value: val, isSet: true}
}

func (v NullableInlineObject252) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject252) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


