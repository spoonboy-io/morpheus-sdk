/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetworkRouterRoute struct for NetworkRouterRoute
type NetworkRouterRoute struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Code NullableString `json:"code,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Priority NullableString `json:"priority,omitempty"`
	RouteType *string `json:"routeType,omitempty"`
	Source *string `json:"source,omitempty"`
	SourceType *string `json:"sourceType,omitempty"`
	Destination *string `json:"destination,omitempty"`
	DestinationType *string `json:"destinationType,omitempty"`
	DefaultRoute *bool `json:"defaultRoute,omitempty"`
	NetworkMtu NullableString `json:"networkMtu,omitempty"`
	ExternalInterface NullableString `json:"externalInterface,omitempty"`
	InternalId NullableString `json:"internalId,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	UniqueId NullableString `json:"uniqueId,omitempty"`
	ProviderId *string `json:"providerId,omitempty"`
	ExternalType NullableString `json:"externalType,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Visible *bool `json:"visible,omitempty"`
}

// NewNetworkRouterRoute instantiates a new NetworkRouterRoute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkRouterRoute() *NetworkRouterRoute {
	this := NetworkRouterRoute{}
	return &this
}

// NewNetworkRouterRouteWithDefaults instantiates a new NetworkRouterRoute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkRouterRouteWithDefaults() *NetworkRouterRoute {
	this := NetworkRouterRoute{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NetworkRouterRoute) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterRoute) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NetworkRouterRoute) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *NetworkRouterRoute) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NetworkRouterRoute) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterRoute) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NetworkRouterRoute) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NetworkRouterRoute) SetName(v string) {
	o.Name = &v
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterRoute) GetCode() string {
	if o == nil || o.Code.Get() == nil {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterRoute) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *NetworkRouterRoute) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *NetworkRouterRoute) SetCode(v string) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *NetworkRouterRoute) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *NetworkRouterRoute) UnsetCode() {
	o.Code.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterRoute) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterRoute) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *NetworkRouterRoute) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *NetworkRouterRoute) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *NetworkRouterRoute) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *NetworkRouterRoute) UnsetDescription() {
	o.Description.Unset()
}

// GetPriority returns the Priority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterRoute) GetPriority() string {
	if o == nil || o.Priority.Get() == nil {
		var ret string
		return ret
	}
	return *o.Priority.Get()
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterRoute) GetPriorityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Priority.Get(), o.Priority.IsSet()
}

// HasPriority returns a boolean if a field has been set.
func (o *NetworkRouterRoute) HasPriority() bool {
	if o != nil && o.Priority.IsSet() {
		return true
	}

	return false
}

// SetPriority gets a reference to the given NullableString and assigns it to the Priority field.
func (o *NetworkRouterRoute) SetPriority(v string) {
	o.Priority.Set(&v)
}
// SetPriorityNil sets the value for Priority to be an explicit nil
func (o *NetworkRouterRoute) SetPriorityNil() {
	o.Priority.Set(nil)
}

// UnsetPriority ensures that no value is present for Priority, not even an explicit nil
func (o *NetworkRouterRoute) UnsetPriority() {
	o.Priority.Unset()
}

// GetRouteType returns the RouteType field value if set, zero value otherwise.
func (o *NetworkRouterRoute) GetRouteType() string {
	if o == nil || o.RouteType == nil {
		var ret string
		return ret
	}
	return *o.RouteType
}

// GetRouteTypeOk returns a tuple with the RouteType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterRoute) GetRouteTypeOk() (*string, bool) {
	if o == nil || o.RouteType == nil {
		return nil, false
	}
	return o.RouteType, true
}

// HasRouteType returns a boolean if a field has been set.
func (o *NetworkRouterRoute) HasRouteType() bool {
	if o != nil && o.RouteType != nil {
		return true
	}

	return false
}

// SetRouteType gets a reference to the given string and assigns it to the RouteType field.
func (o *NetworkRouterRoute) SetRouteType(v string) {
	o.RouteType = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *NetworkRouterRoute) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterRoute) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *NetworkRouterRoute) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *NetworkRouterRoute) SetSource(v string) {
	o.Source = &v
}

// GetSourceType returns the SourceType field value if set, zero value otherwise.
func (o *NetworkRouterRoute) GetSourceType() string {
	if o == nil || o.SourceType == nil {
		var ret string
		return ret
	}
	return *o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterRoute) GetSourceTypeOk() (*string, bool) {
	if o == nil || o.SourceType == nil {
		return nil, false
	}
	return o.SourceType, true
}

// HasSourceType returns a boolean if a field has been set.
func (o *NetworkRouterRoute) HasSourceType() bool {
	if o != nil && o.SourceType != nil {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given string and assigns it to the SourceType field.
func (o *NetworkRouterRoute) SetSourceType(v string) {
	o.SourceType = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *NetworkRouterRoute) GetDestination() string {
	if o == nil || o.Destination == nil {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterRoute) GetDestinationOk() (*string, bool) {
	if o == nil || o.Destination == nil {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *NetworkRouterRoute) HasDestination() bool {
	if o != nil && o.Destination != nil {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *NetworkRouterRoute) SetDestination(v string) {
	o.Destination = &v
}

// GetDestinationType returns the DestinationType field value if set, zero value otherwise.
func (o *NetworkRouterRoute) GetDestinationType() string {
	if o == nil || o.DestinationType == nil {
		var ret string
		return ret
	}
	return *o.DestinationType
}

// GetDestinationTypeOk returns a tuple with the DestinationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterRoute) GetDestinationTypeOk() (*string, bool) {
	if o == nil || o.DestinationType == nil {
		return nil, false
	}
	return o.DestinationType, true
}

// HasDestinationType returns a boolean if a field has been set.
func (o *NetworkRouterRoute) HasDestinationType() bool {
	if o != nil && o.DestinationType != nil {
		return true
	}

	return false
}

// SetDestinationType gets a reference to the given string and assigns it to the DestinationType field.
func (o *NetworkRouterRoute) SetDestinationType(v string) {
	o.DestinationType = &v
}

// GetDefaultRoute returns the DefaultRoute field value if set, zero value otherwise.
func (o *NetworkRouterRoute) GetDefaultRoute() bool {
	if o == nil || o.DefaultRoute == nil {
		var ret bool
		return ret
	}
	return *o.DefaultRoute
}

// GetDefaultRouteOk returns a tuple with the DefaultRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterRoute) GetDefaultRouteOk() (*bool, bool) {
	if o == nil || o.DefaultRoute == nil {
		return nil, false
	}
	return o.DefaultRoute, true
}

// HasDefaultRoute returns a boolean if a field has been set.
func (o *NetworkRouterRoute) HasDefaultRoute() bool {
	if o != nil && o.DefaultRoute != nil {
		return true
	}

	return false
}

// SetDefaultRoute gets a reference to the given bool and assigns it to the DefaultRoute field.
func (o *NetworkRouterRoute) SetDefaultRoute(v bool) {
	o.DefaultRoute = &v
}

// GetNetworkMtu returns the NetworkMtu field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterRoute) GetNetworkMtu() string {
	if o == nil || o.NetworkMtu.Get() == nil {
		var ret string
		return ret
	}
	return *o.NetworkMtu.Get()
}

// GetNetworkMtuOk returns a tuple with the NetworkMtu field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterRoute) GetNetworkMtuOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetworkMtu.Get(), o.NetworkMtu.IsSet()
}

// HasNetworkMtu returns a boolean if a field has been set.
func (o *NetworkRouterRoute) HasNetworkMtu() bool {
	if o != nil && o.NetworkMtu.IsSet() {
		return true
	}

	return false
}

// SetNetworkMtu gets a reference to the given NullableString and assigns it to the NetworkMtu field.
func (o *NetworkRouterRoute) SetNetworkMtu(v string) {
	o.NetworkMtu.Set(&v)
}
// SetNetworkMtuNil sets the value for NetworkMtu to be an explicit nil
func (o *NetworkRouterRoute) SetNetworkMtuNil() {
	o.NetworkMtu.Set(nil)
}

// UnsetNetworkMtu ensures that no value is present for NetworkMtu, not even an explicit nil
func (o *NetworkRouterRoute) UnsetNetworkMtu() {
	o.NetworkMtu.Unset()
}

// GetExternalInterface returns the ExternalInterface field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterRoute) GetExternalInterface() string {
	if o == nil || o.ExternalInterface.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalInterface.Get()
}

// GetExternalInterfaceOk returns a tuple with the ExternalInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterRoute) GetExternalInterfaceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalInterface.Get(), o.ExternalInterface.IsSet()
}

// HasExternalInterface returns a boolean if a field has been set.
func (o *NetworkRouterRoute) HasExternalInterface() bool {
	if o != nil && o.ExternalInterface.IsSet() {
		return true
	}

	return false
}

// SetExternalInterface gets a reference to the given NullableString and assigns it to the ExternalInterface field.
func (o *NetworkRouterRoute) SetExternalInterface(v string) {
	o.ExternalInterface.Set(&v)
}
// SetExternalInterfaceNil sets the value for ExternalInterface to be an explicit nil
func (o *NetworkRouterRoute) SetExternalInterfaceNil() {
	o.ExternalInterface.Set(nil)
}

// UnsetExternalInterface ensures that no value is present for ExternalInterface, not even an explicit nil
func (o *NetworkRouterRoute) UnsetExternalInterface() {
	o.ExternalInterface.Unset()
}

// GetInternalId returns the InternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterRoute) GetInternalId() string {
	if o == nil || o.InternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.InternalId.Get()
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterRoute) GetInternalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InternalId.Get(), o.InternalId.IsSet()
}

// HasInternalId returns a boolean if a field has been set.
func (o *NetworkRouterRoute) HasInternalId() bool {
	if o != nil && o.InternalId.IsSet() {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given NullableString and assigns it to the InternalId field.
func (o *NetworkRouterRoute) SetInternalId(v string) {
	o.InternalId.Set(&v)
}
// SetInternalIdNil sets the value for InternalId to be an explicit nil
func (o *NetworkRouterRoute) SetInternalIdNil() {
	o.InternalId.Set(nil)
}

// UnsetInternalId ensures that no value is present for InternalId, not even an explicit nil
func (o *NetworkRouterRoute) UnsetInternalId() {
	o.InternalId.Unset()
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *NetworkRouterRoute) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterRoute) GetExternalIdOk() (*string, bool) {
	if o == nil || o.ExternalId == nil {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *NetworkRouterRoute) HasExternalId() bool {
	if o != nil && o.ExternalId != nil {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *NetworkRouterRoute) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetUniqueId returns the UniqueId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterRoute) GetUniqueId() string {
	if o == nil || o.UniqueId.Get() == nil {
		var ret string
		return ret
	}
	return *o.UniqueId.Get()
}

// GetUniqueIdOk returns a tuple with the UniqueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterRoute) GetUniqueIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UniqueId.Get(), o.UniqueId.IsSet()
}

// HasUniqueId returns a boolean if a field has been set.
func (o *NetworkRouterRoute) HasUniqueId() bool {
	if o != nil && o.UniqueId.IsSet() {
		return true
	}

	return false
}

// SetUniqueId gets a reference to the given NullableString and assigns it to the UniqueId field.
func (o *NetworkRouterRoute) SetUniqueId(v string) {
	o.UniqueId.Set(&v)
}
// SetUniqueIdNil sets the value for UniqueId to be an explicit nil
func (o *NetworkRouterRoute) SetUniqueIdNil() {
	o.UniqueId.Set(nil)
}

// UnsetUniqueId ensures that no value is present for UniqueId, not even an explicit nil
func (o *NetworkRouterRoute) UnsetUniqueId() {
	o.UniqueId.Unset()
}

// GetProviderId returns the ProviderId field value if set, zero value otherwise.
func (o *NetworkRouterRoute) GetProviderId() string {
	if o == nil || o.ProviderId == nil {
		var ret string
		return ret
	}
	return *o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterRoute) GetProviderIdOk() (*string, bool) {
	if o == nil || o.ProviderId == nil {
		return nil, false
	}
	return o.ProviderId, true
}

// HasProviderId returns a boolean if a field has been set.
func (o *NetworkRouterRoute) HasProviderId() bool {
	if o != nil && o.ProviderId != nil {
		return true
	}

	return false
}

// SetProviderId gets a reference to the given string and assigns it to the ProviderId field.
func (o *NetworkRouterRoute) SetProviderId(v string) {
	o.ProviderId = &v
}

// GetExternalType returns the ExternalType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterRoute) GetExternalType() string {
	if o == nil || o.ExternalType.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalType.Get()
}

// GetExternalTypeOk returns a tuple with the ExternalType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterRoute) GetExternalTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalType.Get(), o.ExternalType.IsSet()
}

// HasExternalType returns a boolean if a field has been set.
func (o *NetworkRouterRoute) HasExternalType() bool {
	if o != nil && o.ExternalType.IsSet() {
		return true
	}

	return false
}

// SetExternalType gets a reference to the given NullableString and assigns it to the ExternalType field.
func (o *NetworkRouterRoute) SetExternalType(v string) {
	o.ExternalType.Set(&v)
}
// SetExternalTypeNil sets the value for ExternalType to be an explicit nil
func (o *NetworkRouterRoute) SetExternalTypeNil() {
	o.ExternalType.Set(nil)
}

// UnsetExternalType ensures that no value is present for ExternalType, not even an explicit nil
func (o *NetworkRouterRoute) UnsetExternalType() {
	o.ExternalType.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *NetworkRouterRoute) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterRoute) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *NetworkRouterRoute) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *NetworkRouterRoute) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *NetworkRouterRoute) GetVisible() bool {
	if o == nil || o.Visible == nil {
		var ret bool
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterRoute) GetVisibleOk() (*bool, bool) {
	if o == nil || o.Visible == nil {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *NetworkRouterRoute) HasVisible() bool {
	if o != nil && o.Visible != nil {
		return true
	}

	return false
}

// SetVisible gets a reference to the given bool and assigns it to the Visible field.
func (o *NetworkRouterRoute) SetVisible(v bool) {
	o.Visible = &v
}

func (o NetworkRouterRoute) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Priority.IsSet() {
		toSerialize["priority"] = o.Priority.Get()
	}
	if o.RouteType != nil {
		toSerialize["routeType"] = o.RouteType
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.SourceType != nil {
		toSerialize["sourceType"] = o.SourceType
	}
	if o.Destination != nil {
		toSerialize["destination"] = o.Destination
	}
	if o.DestinationType != nil {
		toSerialize["destinationType"] = o.DestinationType
	}
	if o.DefaultRoute != nil {
		toSerialize["defaultRoute"] = o.DefaultRoute
	}
	if o.NetworkMtu.IsSet() {
		toSerialize["networkMtu"] = o.NetworkMtu.Get()
	}
	if o.ExternalInterface.IsSet() {
		toSerialize["externalInterface"] = o.ExternalInterface.Get()
	}
	if o.InternalId.IsSet() {
		toSerialize["internalId"] = o.InternalId.Get()
	}
	if o.ExternalId != nil {
		toSerialize["externalId"] = o.ExternalId
	}
	if o.UniqueId.IsSet() {
		toSerialize["uniqueId"] = o.UniqueId.Get()
	}
	if o.ProviderId != nil {
		toSerialize["providerId"] = o.ProviderId
	}
	if o.ExternalType.IsSet() {
		toSerialize["externalType"] = o.ExternalType.Get()
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Visible != nil {
		toSerialize["visible"] = o.Visible
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkRouterRoute struct {
	value *NetworkRouterRoute
	isSet bool
}

func (v NullableNetworkRouterRoute) Get() *NetworkRouterRoute {
	return v.value
}

func (v *NullableNetworkRouterRoute) Set(val *NetworkRouterRoute) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkRouterRoute) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkRouterRoute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkRouterRoute(val *NetworkRouterRoute) *NullableNetworkRouterRoute {
	return &NullableNetworkRouterRoute{value: val, isSet: true}
}

func (v NullableNetworkRouterRoute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkRouterRoute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


