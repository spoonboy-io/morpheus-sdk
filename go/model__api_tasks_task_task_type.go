/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiTasksTaskTaskType struct for ApiTasksTaskTaskType
type ApiTasksTaskTaskType struct {
	// The type of task
	Code string `json:"code"`
}

// NewApiTasksTaskTaskType instantiates a new ApiTasksTaskTaskType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiTasksTaskTaskType(code string, ) *ApiTasksTaskTaskType {
	this := ApiTasksTaskTaskType{}
	this.Code = code
	return &this
}

// NewApiTasksTaskTaskTypeWithDefaults instantiates a new ApiTasksTaskTaskType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiTasksTaskTaskTypeWithDefaults() *ApiTasksTaskTaskType {
	this := ApiTasksTaskTaskType{}
	return &this
}

// GetCode returns the Code field value
func (o *ApiTasksTaskTaskType) GetCode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *ApiTasksTaskTaskType) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *ApiTasksTaskTaskType) SetCode(v string) {
	o.Code = v
}

func (o ApiTasksTaskTaskType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	return json.Marshal(toSerialize)
}

type NullableApiTasksTaskTaskType struct {
	value *ApiTasksTaskTaskType
	isSet bool
}

func (v NullableApiTasksTaskTaskType) Get() *ApiTasksTaskTaskType {
	return v.value
}

func (v *NullableApiTasksTaskTaskType) Set(val *ApiTasksTaskTaskType) {
	v.value = val
	v.isSet = true
}

func (v NullableApiTasksTaskTaskType) IsSet() bool {
	return v.isSet
}

func (v *NullableApiTasksTaskTaskType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiTasksTaskTaskType(val *ApiTasksTaskTaskType) *NullableApiTasksTaskTaskType {
	return &NullableApiTasksTaskTaskType{value: val, isSet: true}
}

func (v NullableApiTasksTaskTaskType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiTasksTaskTaskType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


