/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListApprovals200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListApprovals200Response{}

// ListApprovals200Response struct for ListApprovals200Response
type ListApprovals200Response struct {
	Meta *MetaMeta `json:"meta,omitempty"`
	Approvals []Approvals `json:"approvals,omitempty"`
}

// NewListApprovals200Response instantiates a new ListApprovals200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListApprovals200Response() *ListApprovals200Response {
	this := ListApprovals200Response{}
	return &this
}

// NewListApprovals200ResponseWithDefaults instantiates a new ListApprovals200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListApprovals200ResponseWithDefaults() *ListApprovals200Response {
	this := ListApprovals200Response{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListApprovals200Response) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListApprovals200Response) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ListApprovals200Response) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *ListApprovals200Response) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetApprovals returns the Approvals field value if set, zero value otherwise.
func (o *ListApprovals200Response) GetApprovals() []Approvals {
	if o == nil || IsNil(o.Approvals) {
		var ret []Approvals
		return ret
	}
	return o.Approvals
}

// GetApprovalsOk returns a tuple with the Approvals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListApprovals200Response) GetApprovalsOk() ([]Approvals, bool) {
	if o == nil || IsNil(o.Approvals) {
		return nil, false
	}
	return o.Approvals, true
}

// HasApprovals returns a boolean if a field has been set.
func (o *ListApprovals200Response) HasApprovals() bool {
	if o != nil && !IsNil(o.Approvals) {
		return true
	}

	return false
}

// SetApprovals gets a reference to the given []Approvals and assigns it to the Approvals field.
func (o *ListApprovals200Response) SetApprovals(v []Approvals) {
	o.Approvals = v
}

func (o ListApprovals200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListApprovals200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Approvals) {
		toSerialize["approvals"] = o.Approvals
	}
	return toSerialize, nil
}

type NullableListApprovals200Response struct {
	value *ListApprovals200Response
	isSet bool
}

func (v NullableListApprovals200Response) Get() *ListApprovals200Response {
	return v.value
}

func (v *NullableListApprovals200Response) Set(val *ListApprovals200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListApprovals200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListApprovals200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListApprovals200Response(val *ListApprovals200Response) *NullableListApprovals200Response {
	return &NullableListApprovals200Response{value: val, isSet: true}
}

func (v NullableListApprovals200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListApprovals200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


