/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiTasksIdExecuteJob struct for ApiTasksIdExecuteJob
type ApiTasksIdExecuteJob struct {
	// A name for the execution job. Can be used to find execution results with `/api/processes?name=`
	Name *string `json:"name,omitempty"`
	// The target context for task execution. This is required for tasks with `executeTarget` set to `resource`.
	TargetType *string `json:"targetType,omitempty"`
	// Array of Instance IDs. Only applicable if `targetType` is instance.
	Instances *[]int64 `json:"instances,omitempty"`
	// Array of Server IDs. Only applicable if `targetType` is `server`.
	Servers *[]int64 `json:"servers,omitempty"`
	// Instance Label. Only applicable if `targetType` is `instance-label`.
	InstanceLabel *string `json:"instanceLabel,omitempty"`
	// Server Label. Only applicable if `targetType` is `server-label`.
	ServerLabel *string `json:"serverLabel,omitempty"`
	// Map of options to be used as values in the task. These correspond to option types.
	CustomOptions *map[string]interface{} `json:"customOptions,omitempty"`
	// String of custom configuration values as JSON.
	CustomConfig *string `json:"customConfig,omitempty"`
}

// NewApiTasksIdExecuteJob instantiates a new ApiTasksIdExecuteJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiTasksIdExecuteJob() *ApiTasksIdExecuteJob {
	this := ApiTasksIdExecuteJob{}
	return &this
}

// NewApiTasksIdExecuteJobWithDefaults instantiates a new ApiTasksIdExecuteJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiTasksIdExecuteJobWithDefaults() *ApiTasksIdExecuteJob {
	this := ApiTasksIdExecuteJob{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiTasksIdExecuteJob) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTasksIdExecuteJob) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiTasksIdExecuteJob) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiTasksIdExecuteJob) SetName(v string) {
	o.Name = &v
}

// GetTargetType returns the TargetType field value if set, zero value otherwise.
func (o *ApiTasksIdExecuteJob) GetTargetType() string {
	if o == nil || o.TargetType == nil {
		var ret string
		return ret
	}
	return *o.TargetType
}

// GetTargetTypeOk returns a tuple with the TargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTasksIdExecuteJob) GetTargetTypeOk() (*string, bool) {
	if o == nil || o.TargetType == nil {
		return nil, false
	}
	return o.TargetType, true
}

// HasTargetType returns a boolean if a field has been set.
func (o *ApiTasksIdExecuteJob) HasTargetType() bool {
	if o != nil && o.TargetType != nil {
		return true
	}

	return false
}

// SetTargetType gets a reference to the given string and assigns it to the TargetType field.
func (o *ApiTasksIdExecuteJob) SetTargetType(v string) {
	o.TargetType = &v
}

// GetInstances returns the Instances field value if set, zero value otherwise.
func (o *ApiTasksIdExecuteJob) GetInstances() []int64 {
	if o == nil || o.Instances == nil {
		var ret []int64
		return ret
	}
	return *o.Instances
}

// GetInstancesOk returns a tuple with the Instances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTasksIdExecuteJob) GetInstancesOk() (*[]int64, bool) {
	if o == nil || o.Instances == nil {
		return nil, false
	}
	return o.Instances, true
}

// HasInstances returns a boolean if a field has been set.
func (o *ApiTasksIdExecuteJob) HasInstances() bool {
	if o != nil && o.Instances != nil {
		return true
	}

	return false
}

// SetInstances gets a reference to the given []int64 and assigns it to the Instances field.
func (o *ApiTasksIdExecuteJob) SetInstances(v []int64) {
	o.Instances = &v
}

// GetServers returns the Servers field value if set, zero value otherwise.
func (o *ApiTasksIdExecuteJob) GetServers() []int64 {
	if o == nil || o.Servers == nil {
		var ret []int64
		return ret
	}
	return *o.Servers
}

// GetServersOk returns a tuple with the Servers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTasksIdExecuteJob) GetServersOk() (*[]int64, bool) {
	if o == nil || o.Servers == nil {
		return nil, false
	}
	return o.Servers, true
}

// HasServers returns a boolean if a field has been set.
func (o *ApiTasksIdExecuteJob) HasServers() bool {
	if o != nil && o.Servers != nil {
		return true
	}

	return false
}

// SetServers gets a reference to the given []int64 and assigns it to the Servers field.
func (o *ApiTasksIdExecuteJob) SetServers(v []int64) {
	o.Servers = &v
}

// GetInstanceLabel returns the InstanceLabel field value if set, zero value otherwise.
func (o *ApiTasksIdExecuteJob) GetInstanceLabel() string {
	if o == nil || o.InstanceLabel == nil {
		var ret string
		return ret
	}
	return *o.InstanceLabel
}

// GetInstanceLabelOk returns a tuple with the InstanceLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTasksIdExecuteJob) GetInstanceLabelOk() (*string, bool) {
	if o == nil || o.InstanceLabel == nil {
		return nil, false
	}
	return o.InstanceLabel, true
}

// HasInstanceLabel returns a boolean if a field has been set.
func (o *ApiTasksIdExecuteJob) HasInstanceLabel() bool {
	if o != nil && o.InstanceLabel != nil {
		return true
	}

	return false
}

// SetInstanceLabel gets a reference to the given string and assigns it to the InstanceLabel field.
func (o *ApiTasksIdExecuteJob) SetInstanceLabel(v string) {
	o.InstanceLabel = &v
}

// GetServerLabel returns the ServerLabel field value if set, zero value otherwise.
func (o *ApiTasksIdExecuteJob) GetServerLabel() string {
	if o == nil || o.ServerLabel == nil {
		var ret string
		return ret
	}
	return *o.ServerLabel
}

// GetServerLabelOk returns a tuple with the ServerLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTasksIdExecuteJob) GetServerLabelOk() (*string, bool) {
	if o == nil || o.ServerLabel == nil {
		return nil, false
	}
	return o.ServerLabel, true
}

// HasServerLabel returns a boolean if a field has been set.
func (o *ApiTasksIdExecuteJob) HasServerLabel() bool {
	if o != nil && o.ServerLabel != nil {
		return true
	}

	return false
}

// SetServerLabel gets a reference to the given string and assigns it to the ServerLabel field.
func (o *ApiTasksIdExecuteJob) SetServerLabel(v string) {
	o.ServerLabel = &v
}

// GetCustomOptions returns the CustomOptions field value if set, zero value otherwise.
func (o *ApiTasksIdExecuteJob) GetCustomOptions() map[string]interface{} {
	if o == nil || o.CustomOptions == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.CustomOptions
}

// GetCustomOptionsOk returns a tuple with the CustomOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTasksIdExecuteJob) GetCustomOptionsOk() (*map[string]interface{}, bool) {
	if o == nil || o.CustomOptions == nil {
		return nil, false
	}
	return o.CustomOptions, true
}

// HasCustomOptions returns a boolean if a field has been set.
func (o *ApiTasksIdExecuteJob) HasCustomOptions() bool {
	if o != nil && o.CustomOptions != nil {
		return true
	}

	return false
}

// SetCustomOptions gets a reference to the given map[string]interface{} and assigns it to the CustomOptions field.
func (o *ApiTasksIdExecuteJob) SetCustomOptions(v map[string]interface{}) {
	o.CustomOptions = &v
}

// GetCustomConfig returns the CustomConfig field value if set, zero value otherwise.
func (o *ApiTasksIdExecuteJob) GetCustomConfig() string {
	if o == nil || o.CustomConfig == nil {
		var ret string
		return ret
	}
	return *o.CustomConfig
}

// GetCustomConfigOk returns a tuple with the CustomConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiTasksIdExecuteJob) GetCustomConfigOk() (*string, bool) {
	if o == nil || o.CustomConfig == nil {
		return nil, false
	}
	return o.CustomConfig, true
}

// HasCustomConfig returns a boolean if a field has been set.
func (o *ApiTasksIdExecuteJob) HasCustomConfig() bool {
	if o != nil && o.CustomConfig != nil {
		return true
	}

	return false
}

// SetCustomConfig gets a reference to the given string and assigns it to the CustomConfig field.
func (o *ApiTasksIdExecuteJob) SetCustomConfig(v string) {
	o.CustomConfig = &v
}

func (o ApiTasksIdExecuteJob) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.TargetType != nil {
		toSerialize["targetType"] = o.TargetType
	}
	if o.Instances != nil {
		toSerialize["instances"] = o.Instances
	}
	if o.Servers != nil {
		toSerialize["servers"] = o.Servers
	}
	if o.InstanceLabel != nil {
		toSerialize["instanceLabel"] = o.InstanceLabel
	}
	if o.ServerLabel != nil {
		toSerialize["serverLabel"] = o.ServerLabel
	}
	if o.CustomOptions != nil {
		toSerialize["customOptions"] = o.CustomOptions
	}
	if o.CustomConfig != nil {
		toSerialize["customConfig"] = o.CustomConfig
	}
	return json.Marshal(toSerialize)
}

type NullableApiTasksIdExecuteJob struct {
	value *ApiTasksIdExecuteJob
	isSet bool
}

func (v NullableApiTasksIdExecuteJob) Get() *ApiTasksIdExecuteJob {
	return v.value
}

func (v *NullableApiTasksIdExecuteJob) Set(val *ApiTasksIdExecuteJob) {
	v.value = val
	v.isSet = true
}

func (v NullableApiTasksIdExecuteJob) IsSet() bool {
	return v.isSet
}

func (v *NullableApiTasksIdExecuteJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiTasksIdExecuteJob(val *ApiTasksIdExecuteJob) *NullableApiTasksIdExecuteJob {
	return &NullableApiTasksIdExecuteJob{value: val, isSet: true}
}

func (v NullableApiTasksIdExecuteJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiTasksIdExecuteJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


