/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200143Certificates struct for InlineResponse200143Certificates
type InlineResponse200143Certificates struct {
	AccountId *int64 `json:"accountId,omitempty"`
	CertFile *string `json:"certFile,omitempty"`
	DomainName *string `json:"domainName,omitempty"`
	Generated *bool `json:"generated,omitempty"`
	Id *int64 `json:"id,omitempty"`
	KeyFile *string `json:"keyFile,omitempty"`
	Name *string `json:"name,omitempty"`
	Wildcard *bool `json:"wildcard,omitempty"`
}

// NewInlineResponse200143Certificates instantiates a new InlineResponse200143Certificates object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200143Certificates() *InlineResponse200143Certificates {
	this := InlineResponse200143Certificates{}
	return &this
}

// NewInlineResponse200143CertificatesWithDefaults instantiates a new InlineResponse200143Certificates object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200143CertificatesWithDefaults() *InlineResponse200143Certificates {
	this := InlineResponse200143Certificates{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *InlineResponse200143Certificates) GetAccountId() int64 {
	if o == nil || o.AccountId == nil {
		var ret int64
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200143Certificates) GetAccountIdOk() (*int64, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *InlineResponse200143Certificates) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int64 and assigns it to the AccountId field.
func (o *InlineResponse200143Certificates) SetAccountId(v int64) {
	o.AccountId = &v
}

// GetCertFile returns the CertFile field value if set, zero value otherwise.
func (o *InlineResponse200143Certificates) GetCertFile() string {
	if o == nil || o.CertFile == nil {
		var ret string
		return ret
	}
	return *o.CertFile
}

// GetCertFileOk returns a tuple with the CertFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200143Certificates) GetCertFileOk() (*string, bool) {
	if o == nil || o.CertFile == nil {
		return nil, false
	}
	return o.CertFile, true
}

// HasCertFile returns a boolean if a field has been set.
func (o *InlineResponse200143Certificates) HasCertFile() bool {
	if o != nil && o.CertFile != nil {
		return true
	}

	return false
}

// SetCertFile gets a reference to the given string and assigns it to the CertFile field.
func (o *InlineResponse200143Certificates) SetCertFile(v string) {
	o.CertFile = &v
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *InlineResponse200143Certificates) GetDomainName() string {
	if o == nil || o.DomainName == nil {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200143Certificates) GetDomainNameOk() (*string, bool) {
	if o == nil || o.DomainName == nil {
		return nil, false
	}
	return o.DomainName, true
}

// HasDomainName returns a boolean if a field has been set.
func (o *InlineResponse200143Certificates) HasDomainName() bool {
	if o != nil && o.DomainName != nil {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *InlineResponse200143Certificates) SetDomainName(v string) {
	o.DomainName = &v
}

// GetGenerated returns the Generated field value if set, zero value otherwise.
func (o *InlineResponse200143Certificates) GetGenerated() bool {
	if o == nil || o.Generated == nil {
		var ret bool
		return ret
	}
	return *o.Generated
}

// GetGeneratedOk returns a tuple with the Generated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200143Certificates) GetGeneratedOk() (*bool, bool) {
	if o == nil || o.Generated == nil {
		return nil, false
	}
	return o.Generated, true
}

// HasGenerated returns a boolean if a field has been set.
func (o *InlineResponse200143Certificates) HasGenerated() bool {
	if o != nil && o.Generated != nil {
		return true
	}

	return false
}

// SetGenerated gets a reference to the given bool and assigns it to the Generated field.
func (o *InlineResponse200143Certificates) SetGenerated(v bool) {
	o.Generated = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse200143Certificates) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200143Certificates) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse200143Certificates) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *InlineResponse200143Certificates) SetId(v int64) {
	o.Id = &v
}

// GetKeyFile returns the KeyFile field value if set, zero value otherwise.
func (o *InlineResponse200143Certificates) GetKeyFile() string {
	if o == nil || o.KeyFile == nil {
		var ret string
		return ret
	}
	return *o.KeyFile
}

// GetKeyFileOk returns a tuple with the KeyFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200143Certificates) GetKeyFileOk() (*string, bool) {
	if o == nil || o.KeyFile == nil {
		return nil, false
	}
	return o.KeyFile, true
}

// HasKeyFile returns a boolean if a field has been set.
func (o *InlineResponse200143Certificates) HasKeyFile() bool {
	if o != nil && o.KeyFile != nil {
		return true
	}

	return false
}

// SetKeyFile gets a reference to the given string and assigns it to the KeyFile field.
func (o *InlineResponse200143Certificates) SetKeyFile(v string) {
	o.KeyFile = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse200143Certificates) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200143Certificates) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse200143Certificates) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse200143Certificates) SetName(v string) {
	o.Name = &v
}

// GetWildcard returns the Wildcard field value if set, zero value otherwise.
func (o *InlineResponse200143Certificates) GetWildcard() bool {
	if o == nil || o.Wildcard == nil {
		var ret bool
		return ret
	}
	return *o.Wildcard
}

// GetWildcardOk returns a tuple with the Wildcard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200143Certificates) GetWildcardOk() (*bool, bool) {
	if o == nil || o.Wildcard == nil {
		return nil, false
	}
	return o.Wildcard, true
}

// HasWildcard returns a boolean if a field has been set.
func (o *InlineResponse200143Certificates) HasWildcard() bool {
	if o != nil && o.Wildcard != nil {
		return true
	}

	return false
}

// SetWildcard gets a reference to the given bool and assigns it to the Wildcard field.
func (o *InlineResponse200143Certificates) SetWildcard(v bool) {
	o.Wildcard = &v
}

func (o InlineResponse200143Certificates) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId != nil {
		toSerialize["accountId"] = o.AccountId
	}
	if o.CertFile != nil {
		toSerialize["certFile"] = o.CertFile
	}
	if o.DomainName != nil {
		toSerialize["domainName"] = o.DomainName
	}
	if o.Generated != nil {
		toSerialize["generated"] = o.Generated
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.KeyFile != nil {
		toSerialize["keyFile"] = o.KeyFile
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Wildcard != nil {
		toSerialize["wildcard"] = o.Wildcard
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200143Certificates struct {
	value *InlineResponse200143Certificates
	isSet bool
}

func (v NullableInlineResponse200143Certificates) Get() *InlineResponse200143Certificates {
	return v.value
}

func (v *NullableInlineResponse200143Certificates) Set(val *InlineResponse200143Certificates) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200143Certificates) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200143Certificates) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200143Certificates(val *InlineResponse200143Certificates) *NullableInlineResponse200143Certificates {
	return &NullableInlineResponse200143Certificates{value: val, isSet: true}
}

func (v NullableInlineResponse200143Certificates) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200143Certificates) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


