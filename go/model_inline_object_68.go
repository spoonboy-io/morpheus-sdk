/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject68 struct for InlineObject68
type InlineObject68 struct {
	Deployment *DeploymentCreate `json:"deployment,omitempty"`
}

// NewInlineObject68 instantiates a new InlineObject68 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject68() *InlineObject68 {
	this := InlineObject68{}
	return &this
}

// NewInlineObject68WithDefaults instantiates a new InlineObject68 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject68WithDefaults() *InlineObject68 {
	this := InlineObject68{}
	return &this
}

// GetDeployment returns the Deployment field value if set, zero value otherwise.
func (o *InlineObject68) GetDeployment() DeploymentCreate {
	if o == nil || o.Deployment == nil {
		var ret DeploymentCreate
		return ret
	}
	return *o.Deployment
}

// GetDeploymentOk returns a tuple with the Deployment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject68) GetDeploymentOk() (*DeploymentCreate, bool) {
	if o == nil || o.Deployment == nil {
		return nil, false
	}
	return o.Deployment, true
}

// HasDeployment returns a boolean if a field has been set.
func (o *InlineObject68) HasDeployment() bool {
	if o != nil && o.Deployment != nil {
		return true
	}

	return false
}

// SetDeployment gets a reference to the given DeploymentCreate and assigns it to the Deployment field.
func (o *InlineObject68) SetDeployment(v DeploymentCreate) {
	o.Deployment = &v
}

func (o InlineObject68) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Deployment != nil {
		toSerialize["deployment"] = o.Deployment
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject68 struct {
	value *InlineObject68
	isSet bool
}

func (v NullableInlineObject68) Get() *InlineObject68 {
	return v.value
}

func (v *NullableInlineObject68) Set(val *InlineObject68) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject68) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject68) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject68(val *InlineObject68) *NullableInlineObject68 {
	return &NullableInlineObject68{value: val, isSet: true}
}

func (v NullableInlineObject68) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject68) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


