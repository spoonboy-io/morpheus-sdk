/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiMonitoringContactsIdContact Payload for updating a monitoring contact
type ApiMonitoringContactsIdContact struct {
	// Unique name scoped to your account for the contact
	Name *string `json:"name,omitempty"`
	// Email notification address
	EmailAddress *string `json:"emailAddress,omitempty"`
	// SMS notification address
	SmsAddress *string `json:"smsAddress,omitempty"`
	// Slack Hook
	SlackHook *string `json:"slackHook,omitempty"`
}

// NewApiMonitoringContactsIdContact instantiates a new ApiMonitoringContactsIdContact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiMonitoringContactsIdContact() *ApiMonitoringContactsIdContact {
	this := ApiMonitoringContactsIdContact{}
	return &this
}

// NewApiMonitoringContactsIdContactWithDefaults instantiates a new ApiMonitoringContactsIdContact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiMonitoringContactsIdContactWithDefaults() *ApiMonitoringContactsIdContact {
	this := ApiMonitoringContactsIdContact{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiMonitoringContactsIdContact) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMonitoringContactsIdContact) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiMonitoringContactsIdContact) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiMonitoringContactsIdContact) SetName(v string) {
	o.Name = &v
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise.
func (o *ApiMonitoringContactsIdContact) GetEmailAddress() string {
	if o == nil || o.EmailAddress == nil {
		var ret string
		return ret
	}
	return *o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMonitoringContactsIdContact) GetEmailAddressOk() (*string, bool) {
	if o == nil || o.EmailAddress == nil {
		return nil, false
	}
	return o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *ApiMonitoringContactsIdContact) HasEmailAddress() bool {
	if o != nil && o.EmailAddress != nil {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given string and assigns it to the EmailAddress field.
func (o *ApiMonitoringContactsIdContact) SetEmailAddress(v string) {
	o.EmailAddress = &v
}

// GetSmsAddress returns the SmsAddress field value if set, zero value otherwise.
func (o *ApiMonitoringContactsIdContact) GetSmsAddress() string {
	if o == nil || o.SmsAddress == nil {
		var ret string
		return ret
	}
	return *o.SmsAddress
}

// GetSmsAddressOk returns a tuple with the SmsAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMonitoringContactsIdContact) GetSmsAddressOk() (*string, bool) {
	if o == nil || o.SmsAddress == nil {
		return nil, false
	}
	return o.SmsAddress, true
}

// HasSmsAddress returns a boolean if a field has been set.
func (o *ApiMonitoringContactsIdContact) HasSmsAddress() bool {
	if o != nil && o.SmsAddress != nil {
		return true
	}

	return false
}

// SetSmsAddress gets a reference to the given string and assigns it to the SmsAddress field.
func (o *ApiMonitoringContactsIdContact) SetSmsAddress(v string) {
	o.SmsAddress = &v
}

// GetSlackHook returns the SlackHook field value if set, zero value otherwise.
func (o *ApiMonitoringContactsIdContact) GetSlackHook() string {
	if o == nil || o.SlackHook == nil {
		var ret string
		return ret
	}
	return *o.SlackHook
}

// GetSlackHookOk returns a tuple with the SlackHook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMonitoringContactsIdContact) GetSlackHookOk() (*string, bool) {
	if o == nil || o.SlackHook == nil {
		return nil, false
	}
	return o.SlackHook, true
}

// HasSlackHook returns a boolean if a field has been set.
func (o *ApiMonitoringContactsIdContact) HasSlackHook() bool {
	if o != nil && o.SlackHook != nil {
		return true
	}

	return false
}

// SetSlackHook gets a reference to the given string and assigns it to the SlackHook field.
func (o *ApiMonitoringContactsIdContact) SetSlackHook(v string) {
	o.SlackHook = &v
}

func (o ApiMonitoringContactsIdContact) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.EmailAddress != nil {
		toSerialize["emailAddress"] = o.EmailAddress
	}
	if o.SmsAddress != nil {
		toSerialize["smsAddress"] = o.SmsAddress
	}
	if o.SlackHook != nil {
		toSerialize["slackHook"] = o.SlackHook
	}
	return json.Marshal(toSerialize)
}

type NullableApiMonitoringContactsIdContact struct {
	value *ApiMonitoringContactsIdContact
	isSet bool
}

func (v NullableApiMonitoringContactsIdContact) Get() *ApiMonitoringContactsIdContact {
	return v.value
}

func (v *NullableApiMonitoringContactsIdContact) Set(val *ApiMonitoringContactsIdContact) {
	v.value = val
	v.isSet = true
}

func (v NullableApiMonitoringContactsIdContact) IsSet() bool {
	return v.isSet
}

func (v *NullableApiMonitoringContactsIdContact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiMonitoringContactsIdContact(val *ApiMonitoringContactsIdContact) *NullableApiMonitoringContactsIdContact {
	return &NullableApiMonitoringContactsIdContact{value: val, isSet: true}
}

func (v NullableApiMonitoringContactsIdContact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiMonitoringContactsIdContact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


