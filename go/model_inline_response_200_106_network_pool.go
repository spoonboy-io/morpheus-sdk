/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200106NetworkPool struct for InlineResponse200106NetworkPool
type InlineResponse200106NetworkPool struct {
	Id *int64 `json:"id,omitempty"`
	Type *InlineResponse20094Network `json:"type,omitempty"`
	Account *InlineResponse20040AppDeployInstance `json:"account,omitempty"`
	Category NullableString `json:"category,omitempty"`
	Code NullableString `json:"code,omitempty"`
	Name *string `json:"name,omitempty"`
	DisplayName NullableString `json:"displayName,omitempty"`
	InternalId NullableString `json:"internalId,omitempty"`
	ExternalId NullableString `json:"externalId,omitempty"`
	DnsDomain NullableString `json:"dnsDomain,omitempty"`
	DnsSearchPath NullableString `json:"dnsSearchPath,omitempty"`
	HostPrefix NullableString `json:"hostPrefix,omitempty"`
	HttpProxy NullableString `json:"httpProxy,omitempty"`
	DnsServers *[]string `json:"dnsServers,omitempty"`
	DnsSuffixList *[]string `json:"dnsSuffixList,omitempty"`
	DhcpServer *bool `json:"dhcpServer,omitempty"`
	DhcpIp NullableString `json:"dhcpIp,omitempty"`
	Gateway NullableString `json:"gateway,omitempty"`
	Netmask NullableString `json:"netmask,omitempty"`
	SubnetAddress NullableString `json:"subnetAddress,omitempty"`
	IpCount *int64 `json:"ipCount,omitempty"`
	FreeCount *int64 `json:"freeCount,omitempty"`
	PoolEnabled *bool `json:"poolEnabled,omitempty"`
	TftpServer NullableString `json:"tftpServer,omitempty"`
	BootFile NullableString `json:"bootFile,omitempty"`
	RefType NullableString `json:"refType,omitempty"`
	RefId NullableString `json:"refId,omitempty"`
	ParentType NullableString `json:"parentType,omitempty"`
	ParentId NullableString `json:"parentId,omitempty"`
	PoolGroup NullableString `json:"poolGroup,omitempty"`
	IpRanges *[]InlineResponse200106NetworkPoolIpRanges `json:"ipRanges,omitempty"`
}

// NewInlineResponse200106NetworkPool instantiates a new InlineResponse200106NetworkPool object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200106NetworkPool() *InlineResponse200106NetworkPool {
	this := InlineResponse200106NetworkPool{}
	return &this
}

// NewInlineResponse200106NetworkPoolWithDefaults instantiates a new InlineResponse200106NetworkPool object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200106NetworkPoolWithDefaults() *InlineResponse200106NetworkPool {
	this := InlineResponse200106NetworkPool{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse200106NetworkPool) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200106NetworkPool) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *InlineResponse200106NetworkPool) SetId(v int64) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *InlineResponse200106NetworkPool) GetType() InlineResponse20094Network {
	if o == nil || o.Type == nil {
		var ret InlineResponse20094Network
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200106NetworkPool) GetTypeOk() (*InlineResponse20094Network, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given InlineResponse20094Network and assigns it to the Type field.
func (o *InlineResponse200106NetworkPool) SetType(v InlineResponse20094Network) {
	o.Type = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *InlineResponse200106NetworkPool) GetAccount() InlineResponse20040AppDeployInstance {
	if o == nil || o.Account == nil {
		var ret InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200106NetworkPool) GetAccountOk() (*InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Account == nil {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasAccount() bool {
	if o != nil && o.Account != nil {
		return true
	}

	return false
}

// SetAccount gets a reference to the given InlineResponse20040AppDeployInstance and assigns it to the Account field.
func (o *InlineResponse200106NetworkPool) SetAccount(v InlineResponse20040AppDeployInstance) {
	o.Account = &v
}

// GetCategory returns the Category field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200106NetworkPool) GetCategory() string {
	if o == nil || o.Category.Get() == nil {
		var ret string
		return ret
	}
	return *o.Category.Get()
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200106NetworkPool) GetCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Category.Get(), o.Category.IsSet()
}

// HasCategory returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasCategory() bool {
	if o != nil && o.Category.IsSet() {
		return true
	}

	return false
}

// SetCategory gets a reference to the given NullableString and assigns it to the Category field.
func (o *InlineResponse200106NetworkPool) SetCategory(v string) {
	o.Category.Set(&v)
}
// SetCategoryNil sets the value for Category to be an explicit nil
func (o *InlineResponse200106NetworkPool) SetCategoryNil() {
	o.Category.Set(nil)
}

// UnsetCategory ensures that no value is present for Category, not even an explicit nil
func (o *InlineResponse200106NetworkPool) UnsetCategory() {
	o.Category.Unset()
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200106NetworkPool) GetCode() string {
	if o == nil || o.Code.Get() == nil {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200106NetworkPool) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *InlineResponse200106NetworkPool) SetCode(v string) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *InlineResponse200106NetworkPool) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *InlineResponse200106NetworkPool) UnsetCode() {
	o.Code.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse200106NetworkPool) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200106NetworkPool) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse200106NetworkPool) SetName(v string) {
	o.Name = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200106NetworkPool) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200106NetworkPool) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *InlineResponse200106NetworkPool) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *InlineResponse200106NetworkPool) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *InlineResponse200106NetworkPool) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetInternalId returns the InternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200106NetworkPool) GetInternalId() string {
	if o == nil || o.InternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.InternalId.Get()
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200106NetworkPool) GetInternalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InternalId.Get(), o.InternalId.IsSet()
}

// HasInternalId returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasInternalId() bool {
	if o != nil && o.InternalId.IsSet() {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given NullableString and assigns it to the InternalId field.
func (o *InlineResponse200106NetworkPool) SetInternalId(v string) {
	o.InternalId.Set(&v)
}
// SetInternalIdNil sets the value for InternalId to be an explicit nil
func (o *InlineResponse200106NetworkPool) SetInternalIdNil() {
	o.InternalId.Set(nil)
}

// UnsetInternalId ensures that no value is present for InternalId, not even an explicit nil
func (o *InlineResponse200106NetworkPool) UnsetInternalId() {
	o.InternalId.Unset()
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200106NetworkPool) GetExternalId() string {
	if o == nil || o.ExternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200106NetworkPool) GetExternalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *InlineResponse200106NetworkPool) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}
// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *InlineResponse200106NetworkPool) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *InlineResponse200106NetworkPool) UnsetExternalId() {
	o.ExternalId.Unset()
}

// GetDnsDomain returns the DnsDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200106NetworkPool) GetDnsDomain() string {
	if o == nil || o.DnsDomain.Get() == nil {
		var ret string
		return ret
	}
	return *o.DnsDomain.Get()
}

// GetDnsDomainOk returns a tuple with the DnsDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200106NetworkPool) GetDnsDomainOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DnsDomain.Get(), o.DnsDomain.IsSet()
}

// HasDnsDomain returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasDnsDomain() bool {
	if o != nil && o.DnsDomain.IsSet() {
		return true
	}

	return false
}

// SetDnsDomain gets a reference to the given NullableString and assigns it to the DnsDomain field.
func (o *InlineResponse200106NetworkPool) SetDnsDomain(v string) {
	o.DnsDomain.Set(&v)
}
// SetDnsDomainNil sets the value for DnsDomain to be an explicit nil
func (o *InlineResponse200106NetworkPool) SetDnsDomainNil() {
	o.DnsDomain.Set(nil)
}

// UnsetDnsDomain ensures that no value is present for DnsDomain, not even an explicit nil
func (o *InlineResponse200106NetworkPool) UnsetDnsDomain() {
	o.DnsDomain.Unset()
}

// GetDnsSearchPath returns the DnsSearchPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200106NetworkPool) GetDnsSearchPath() string {
	if o == nil || o.DnsSearchPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.DnsSearchPath.Get()
}

// GetDnsSearchPathOk returns a tuple with the DnsSearchPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200106NetworkPool) GetDnsSearchPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DnsSearchPath.Get(), o.DnsSearchPath.IsSet()
}

// HasDnsSearchPath returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasDnsSearchPath() bool {
	if o != nil && o.DnsSearchPath.IsSet() {
		return true
	}

	return false
}

// SetDnsSearchPath gets a reference to the given NullableString and assigns it to the DnsSearchPath field.
func (o *InlineResponse200106NetworkPool) SetDnsSearchPath(v string) {
	o.DnsSearchPath.Set(&v)
}
// SetDnsSearchPathNil sets the value for DnsSearchPath to be an explicit nil
func (o *InlineResponse200106NetworkPool) SetDnsSearchPathNil() {
	o.DnsSearchPath.Set(nil)
}

// UnsetDnsSearchPath ensures that no value is present for DnsSearchPath, not even an explicit nil
func (o *InlineResponse200106NetworkPool) UnsetDnsSearchPath() {
	o.DnsSearchPath.Unset()
}

// GetHostPrefix returns the HostPrefix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200106NetworkPool) GetHostPrefix() string {
	if o == nil || o.HostPrefix.Get() == nil {
		var ret string
		return ret
	}
	return *o.HostPrefix.Get()
}

// GetHostPrefixOk returns a tuple with the HostPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200106NetworkPool) GetHostPrefixOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HostPrefix.Get(), o.HostPrefix.IsSet()
}

// HasHostPrefix returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasHostPrefix() bool {
	if o != nil && o.HostPrefix.IsSet() {
		return true
	}

	return false
}

// SetHostPrefix gets a reference to the given NullableString and assigns it to the HostPrefix field.
func (o *InlineResponse200106NetworkPool) SetHostPrefix(v string) {
	o.HostPrefix.Set(&v)
}
// SetHostPrefixNil sets the value for HostPrefix to be an explicit nil
func (o *InlineResponse200106NetworkPool) SetHostPrefixNil() {
	o.HostPrefix.Set(nil)
}

// UnsetHostPrefix ensures that no value is present for HostPrefix, not even an explicit nil
func (o *InlineResponse200106NetworkPool) UnsetHostPrefix() {
	o.HostPrefix.Unset()
}

// GetHttpProxy returns the HttpProxy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200106NetworkPool) GetHttpProxy() string {
	if o == nil || o.HttpProxy.Get() == nil {
		var ret string
		return ret
	}
	return *o.HttpProxy.Get()
}

// GetHttpProxyOk returns a tuple with the HttpProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200106NetworkPool) GetHttpProxyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HttpProxy.Get(), o.HttpProxy.IsSet()
}

// HasHttpProxy returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasHttpProxy() bool {
	if o != nil && o.HttpProxy.IsSet() {
		return true
	}

	return false
}

// SetHttpProxy gets a reference to the given NullableString and assigns it to the HttpProxy field.
func (o *InlineResponse200106NetworkPool) SetHttpProxy(v string) {
	o.HttpProxy.Set(&v)
}
// SetHttpProxyNil sets the value for HttpProxy to be an explicit nil
func (o *InlineResponse200106NetworkPool) SetHttpProxyNil() {
	o.HttpProxy.Set(nil)
}

// UnsetHttpProxy ensures that no value is present for HttpProxy, not even an explicit nil
func (o *InlineResponse200106NetworkPool) UnsetHttpProxy() {
	o.HttpProxy.Unset()
}

// GetDnsServers returns the DnsServers field value if set, zero value otherwise.
func (o *InlineResponse200106NetworkPool) GetDnsServers() []string {
	if o == nil || o.DnsServers == nil {
		var ret []string
		return ret
	}
	return *o.DnsServers
}

// GetDnsServersOk returns a tuple with the DnsServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200106NetworkPool) GetDnsServersOk() (*[]string, bool) {
	if o == nil || o.DnsServers == nil {
		return nil, false
	}
	return o.DnsServers, true
}

// HasDnsServers returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasDnsServers() bool {
	if o != nil && o.DnsServers != nil {
		return true
	}

	return false
}

// SetDnsServers gets a reference to the given []string and assigns it to the DnsServers field.
func (o *InlineResponse200106NetworkPool) SetDnsServers(v []string) {
	o.DnsServers = &v
}

// GetDnsSuffixList returns the DnsSuffixList field value if set, zero value otherwise.
func (o *InlineResponse200106NetworkPool) GetDnsSuffixList() []string {
	if o == nil || o.DnsSuffixList == nil {
		var ret []string
		return ret
	}
	return *o.DnsSuffixList
}

// GetDnsSuffixListOk returns a tuple with the DnsSuffixList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200106NetworkPool) GetDnsSuffixListOk() (*[]string, bool) {
	if o == nil || o.DnsSuffixList == nil {
		return nil, false
	}
	return o.DnsSuffixList, true
}

// HasDnsSuffixList returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasDnsSuffixList() bool {
	if o != nil && o.DnsSuffixList != nil {
		return true
	}

	return false
}

// SetDnsSuffixList gets a reference to the given []string and assigns it to the DnsSuffixList field.
func (o *InlineResponse200106NetworkPool) SetDnsSuffixList(v []string) {
	o.DnsSuffixList = &v
}

// GetDhcpServer returns the DhcpServer field value if set, zero value otherwise.
func (o *InlineResponse200106NetworkPool) GetDhcpServer() bool {
	if o == nil || o.DhcpServer == nil {
		var ret bool
		return ret
	}
	return *o.DhcpServer
}

// GetDhcpServerOk returns a tuple with the DhcpServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200106NetworkPool) GetDhcpServerOk() (*bool, bool) {
	if o == nil || o.DhcpServer == nil {
		return nil, false
	}
	return o.DhcpServer, true
}

// HasDhcpServer returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasDhcpServer() bool {
	if o != nil && o.DhcpServer != nil {
		return true
	}

	return false
}

// SetDhcpServer gets a reference to the given bool and assigns it to the DhcpServer field.
func (o *InlineResponse200106NetworkPool) SetDhcpServer(v bool) {
	o.DhcpServer = &v
}

// GetDhcpIp returns the DhcpIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200106NetworkPool) GetDhcpIp() string {
	if o == nil || o.DhcpIp.Get() == nil {
		var ret string
		return ret
	}
	return *o.DhcpIp.Get()
}

// GetDhcpIpOk returns a tuple with the DhcpIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200106NetworkPool) GetDhcpIpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DhcpIp.Get(), o.DhcpIp.IsSet()
}

// HasDhcpIp returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasDhcpIp() bool {
	if o != nil && o.DhcpIp.IsSet() {
		return true
	}

	return false
}

// SetDhcpIp gets a reference to the given NullableString and assigns it to the DhcpIp field.
func (o *InlineResponse200106NetworkPool) SetDhcpIp(v string) {
	o.DhcpIp.Set(&v)
}
// SetDhcpIpNil sets the value for DhcpIp to be an explicit nil
func (o *InlineResponse200106NetworkPool) SetDhcpIpNil() {
	o.DhcpIp.Set(nil)
}

// UnsetDhcpIp ensures that no value is present for DhcpIp, not even an explicit nil
func (o *InlineResponse200106NetworkPool) UnsetDhcpIp() {
	o.DhcpIp.Unset()
}

// GetGateway returns the Gateway field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200106NetworkPool) GetGateway() string {
	if o == nil || o.Gateway.Get() == nil {
		var ret string
		return ret
	}
	return *o.Gateway.Get()
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200106NetworkPool) GetGatewayOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Gateway.Get(), o.Gateway.IsSet()
}

// HasGateway returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasGateway() bool {
	if o != nil && o.Gateway.IsSet() {
		return true
	}

	return false
}

// SetGateway gets a reference to the given NullableString and assigns it to the Gateway field.
func (o *InlineResponse200106NetworkPool) SetGateway(v string) {
	o.Gateway.Set(&v)
}
// SetGatewayNil sets the value for Gateway to be an explicit nil
func (o *InlineResponse200106NetworkPool) SetGatewayNil() {
	o.Gateway.Set(nil)
}

// UnsetGateway ensures that no value is present for Gateway, not even an explicit nil
func (o *InlineResponse200106NetworkPool) UnsetGateway() {
	o.Gateway.Unset()
}

// GetNetmask returns the Netmask field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200106NetworkPool) GetNetmask() string {
	if o == nil || o.Netmask.Get() == nil {
		var ret string
		return ret
	}
	return *o.Netmask.Get()
}

// GetNetmaskOk returns a tuple with the Netmask field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200106NetworkPool) GetNetmaskOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Netmask.Get(), o.Netmask.IsSet()
}

// HasNetmask returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasNetmask() bool {
	if o != nil && o.Netmask.IsSet() {
		return true
	}

	return false
}

// SetNetmask gets a reference to the given NullableString and assigns it to the Netmask field.
func (o *InlineResponse200106NetworkPool) SetNetmask(v string) {
	o.Netmask.Set(&v)
}
// SetNetmaskNil sets the value for Netmask to be an explicit nil
func (o *InlineResponse200106NetworkPool) SetNetmaskNil() {
	o.Netmask.Set(nil)
}

// UnsetNetmask ensures that no value is present for Netmask, not even an explicit nil
func (o *InlineResponse200106NetworkPool) UnsetNetmask() {
	o.Netmask.Unset()
}

// GetSubnetAddress returns the SubnetAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200106NetworkPool) GetSubnetAddress() string {
	if o == nil || o.SubnetAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.SubnetAddress.Get()
}

// GetSubnetAddressOk returns a tuple with the SubnetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200106NetworkPool) GetSubnetAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubnetAddress.Get(), o.SubnetAddress.IsSet()
}

// HasSubnetAddress returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasSubnetAddress() bool {
	if o != nil && o.SubnetAddress.IsSet() {
		return true
	}

	return false
}

// SetSubnetAddress gets a reference to the given NullableString and assigns it to the SubnetAddress field.
func (o *InlineResponse200106NetworkPool) SetSubnetAddress(v string) {
	o.SubnetAddress.Set(&v)
}
// SetSubnetAddressNil sets the value for SubnetAddress to be an explicit nil
func (o *InlineResponse200106NetworkPool) SetSubnetAddressNil() {
	o.SubnetAddress.Set(nil)
}

// UnsetSubnetAddress ensures that no value is present for SubnetAddress, not even an explicit nil
func (o *InlineResponse200106NetworkPool) UnsetSubnetAddress() {
	o.SubnetAddress.Unset()
}

// GetIpCount returns the IpCount field value if set, zero value otherwise.
func (o *InlineResponse200106NetworkPool) GetIpCount() int64 {
	if o == nil || o.IpCount == nil {
		var ret int64
		return ret
	}
	return *o.IpCount
}

// GetIpCountOk returns a tuple with the IpCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200106NetworkPool) GetIpCountOk() (*int64, bool) {
	if o == nil || o.IpCount == nil {
		return nil, false
	}
	return o.IpCount, true
}

// HasIpCount returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasIpCount() bool {
	if o != nil && o.IpCount != nil {
		return true
	}

	return false
}

// SetIpCount gets a reference to the given int64 and assigns it to the IpCount field.
func (o *InlineResponse200106NetworkPool) SetIpCount(v int64) {
	o.IpCount = &v
}

// GetFreeCount returns the FreeCount field value if set, zero value otherwise.
func (o *InlineResponse200106NetworkPool) GetFreeCount() int64 {
	if o == nil || o.FreeCount == nil {
		var ret int64
		return ret
	}
	return *o.FreeCount
}

// GetFreeCountOk returns a tuple with the FreeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200106NetworkPool) GetFreeCountOk() (*int64, bool) {
	if o == nil || o.FreeCount == nil {
		return nil, false
	}
	return o.FreeCount, true
}

// HasFreeCount returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasFreeCount() bool {
	if o != nil && o.FreeCount != nil {
		return true
	}

	return false
}

// SetFreeCount gets a reference to the given int64 and assigns it to the FreeCount field.
func (o *InlineResponse200106NetworkPool) SetFreeCount(v int64) {
	o.FreeCount = &v
}

// GetPoolEnabled returns the PoolEnabled field value if set, zero value otherwise.
func (o *InlineResponse200106NetworkPool) GetPoolEnabled() bool {
	if o == nil || o.PoolEnabled == nil {
		var ret bool
		return ret
	}
	return *o.PoolEnabled
}

// GetPoolEnabledOk returns a tuple with the PoolEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200106NetworkPool) GetPoolEnabledOk() (*bool, bool) {
	if o == nil || o.PoolEnabled == nil {
		return nil, false
	}
	return o.PoolEnabled, true
}

// HasPoolEnabled returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasPoolEnabled() bool {
	if o != nil && o.PoolEnabled != nil {
		return true
	}

	return false
}

// SetPoolEnabled gets a reference to the given bool and assigns it to the PoolEnabled field.
func (o *InlineResponse200106NetworkPool) SetPoolEnabled(v bool) {
	o.PoolEnabled = &v
}

// GetTftpServer returns the TftpServer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200106NetworkPool) GetTftpServer() string {
	if o == nil || o.TftpServer.Get() == nil {
		var ret string
		return ret
	}
	return *o.TftpServer.Get()
}

// GetTftpServerOk returns a tuple with the TftpServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200106NetworkPool) GetTftpServerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TftpServer.Get(), o.TftpServer.IsSet()
}

// HasTftpServer returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasTftpServer() bool {
	if o != nil && o.TftpServer.IsSet() {
		return true
	}

	return false
}

// SetTftpServer gets a reference to the given NullableString and assigns it to the TftpServer field.
func (o *InlineResponse200106NetworkPool) SetTftpServer(v string) {
	o.TftpServer.Set(&v)
}
// SetTftpServerNil sets the value for TftpServer to be an explicit nil
func (o *InlineResponse200106NetworkPool) SetTftpServerNil() {
	o.TftpServer.Set(nil)
}

// UnsetTftpServer ensures that no value is present for TftpServer, not even an explicit nil
func (o *InlineResponse200106NetworkPool) UnsetTftpServer() {
	o.TftpServer.Unset()
}

// GetBootFile returns the BootFile field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200106NetworkPool) GetBootFile() string {
	if o == nil || o.BootFile.Get() == nil {
		var ret string
		return ret
	}
	return *o.BootFile.Get()
}

// GetBootFileOk returns a tuple with the BootFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200106NetworkPool) GetBootFileOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BootFile.Get(), o.BootFile.IsSet()
}

// HasBootFile returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasBootFile() bool {
	if o != nil && o.BootFile.IsSet() {
		return true
	}

	return false
}

// SetBootFile gets a reference to the given NullableString and assigns it to the BootFile field.
func (o *InlineResponse200106NetworkPool) SetBootFile(v string) {
	o.BootFile.Set(&v)
}
// SetBootFileNil sets the value for BootFile to be an explicit nil
func (o *InlineResponse200106NetworkPool) SetBootFileNil() {
	o.BootFile.Set(nil)
}

// UnsetBootFile ensures that no value is present for BootFile, not even an explicit nil
func (o *InlineResponse200106NetworkPool) UnsetBootFile() {
	o.BootFile.Unset()
}

// GetRefType returns the RefType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200106NetworkPool) GetRefType() string {
	if o == nil || o.RefType.Get() == nil {
		var ret string
		return ret
	}
	return *o.RefType.Get()
}

// GetRefTypeOk returns a tuple with the RefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200106NetworkPool) GetRefTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefType.Get(), o.RefType.IsSet()
}

// HasRefType returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasRefType() bool {
	if o != nil && o.RefType.IsSet() {
		return true
	}

	return false
}

// SetRefType gets a reference to the given NullableString and assigns it to the RefType field.
func (o *InlineResponse200106NetworkPool) SetRefType(v string) {
	o.RefType.Set(&v)
}
// SetRefTypeNil sets the value for RefType to be an explicit nil
func (o *InlineResponse200106NetworkPool) SetRefTypeNil() {
	o.RefType.Set(nil)
}

// UnsetRefType ensures that no value is present for RefType, not even an explicit nil
func (o *InlineResponse200106NetworkPool) UnsetRefType() {
	o.RefType.Unset()
}

// GetRefId returns the RefId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200106NetworkPool) GetRefId() string {
	if o == nil || o.RefId.Get() == nil {
		var ret string
		return ret
	}
	return *o.RefId.Get()
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200106NetworkPool) GetRefIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefId.Get(), o.RefId.IsSet()
}

// HasRefId returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasRefId() bool {
	if o != nil && o.RefId.IsSet() {
		return true
	}

	return false
}

// SetRefId gets a reference to the given NullableString and assigns it to the RefId field.
func (o *InlineResponse200106NetworkPool) SetRefId(v string) {
	o.RefId.Set(&v)
}
// SetRefIdNil sets the value for RefId to be an explicit nil
func (o *InlineResponse200106NetworkPool) SetRefIdNil() {
	o.RefId.Set(nil)
}

// UnsetRefId ensures that no value is present for RefId, not even an explicit nil
func (o *InlineResponse200106NetworkPool) UnsetRefId() {
	o.RefId.Unset()
}

// GetParentType returns the ParentType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200106NetworkPool) GetParentType() string {
	if o == nil || o.ParentType.Get() == nil {
		var ret string
		return ret
	}
	return *o.ParentType.Get()
}

// GetParentTypeOk returns a tuple with the ParentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200106NetworkPool) GetParentTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ParentType.Get(), o.ParentType.IsSet()
}

// HasParentType returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasParentType() bool {
	if o != nil && o.ParentType.IsSet() {
		return true
	}

	return false
}

// SetParentType gets a reference to the given NullableString and assigns it to the ParentType field.
func (o *InlineResponse200106NetworkPool) SetParentType(v string) {
	o.ParentType.Set(&v)
}
// SetParentTypeNil sets the value for ParentType to be an explicit nil
func (o *InlineResponse200106NetworkPool) SetParentTypeNil() {
	o.ParentType.Set(nil)
}

// UnsetParentType ensures that no value is present for ParentType, not even an explicit nil
func (o *InlineResponse200106NetworkPool) UnsetParentType() {
	o.ParentType.Unset()
}

// GetParentId returns the ParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200106NetworkPool) GetParentId() string {
	if o == nil || o.ParentId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ParentId.Get()
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200106NetworkPool) GetParentIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ParentId.Get(), o.ParentId.IsSet()
}

// HasParentId returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasParentId() bool {
	if o != nil && o.ParentId.IsSet() {
		return true
	}

	return false
}

// SetParentId gets a reference to the given NullableString and assigns it to the ParentId field.
func (o *InlineResponse200106NetworkPool) SetParentId(v string) {
	o.ParentId.Set(&v)
}
// SetParentIdNil sets the value for ParentId to be an explicit nil
func (o *InlineResponse200106NetworkPool) SetParentIdNil() {
	o.ParentId.Set(nil)
}

// UnsetParentId ensures that no value is present for ParentId, not even an explicit nil
func (o *InlineResponse200106NetworkPool) UnsetParentId() {
	o.ParentId.Unset()
}

// GetPoolGroup returns the PoolGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200106NetworkPool) GetPoolGroup() string {
	if o == nil || o.PoolGroup.Get() == nil {
		var ret string
		return ret
	}
	return *o.PoolGroup.Get()
}

// GetPoolGroupOk returns a tuple with the PoolGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200106NetworkPool) GetPoolGroupOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PoolGroup.Get(), o.PoolGroup.IsSet()
}

// HasPoolGroup returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasPoolGroup() bool {
	if o != nil && o.PoolGroup.IsSet() {
		return true
	}

	return false
}

// SetPoolGroup gets a reference to the given NullableString and assigns it to the PoolGroup field.
func (o *InlineResponse200106NetworkPool) SetPoolGroup(v string) {
	o.PoolGroup.Set(&v)
}
// SetPoolGroupNil sets the value for PoolGroup to be an explicit nil
func (o *InlineResponse200106NetworkPool) SetPoolGroupNil() {
	o.PoolGroup.Set(nil)
}

// UnsetPoolGroup ensures that no value is present for PoolGroup, not even an explicit nil
func (o *InlineResponse200106NetworkPool) UnsetPoolGroup() {
	o.PoolGroup.Unset()
}

// GetIpRanges returns the IpRanges field value if set, zero value otherwise.
func (o *InlineResponse200106NetworkPool) GetIpRanges() []InlineResponse200106NetworkPoolIpRanges {
	if o == nil || o.IpRanges == nil {
		var ret []InlineResponse200106NetworkPoolIpRanges
		return ret
	}
	return *o.IpRanges
}

// GetIpRangesOk returns a tuple with the IpRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200106NetworkPool) GetIpRangesOk() (*[]InlineResponse200106NetworkPoolIpRanges, bool) {
	if o == nil || o.IpRanges == nil {
		return nil, false
	}
	return o.IpRanges, true
}

// HasIpRanges returns a boolean if a field has been set.
func (o *InlineResponse200106NetworkPool) HasIpRanges() bool {
	if o != nil && o.IpRanges != nil {
		return true
	}

	return false
}

// SetIpRanges gets a reference to the given []InlineResponse200106NetworkPoolIpRanges and assigns it to the IpRanges field.
func (o *InlineResponse200106NetworkPool) SetIpRanges(v []InlineResponse200106NetworkPoolIpRanges) {
	o.IpRanges = &v
}

func (o InlineResponse200106NetworkPool) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Account != nil {
		toSerialize["account"] = o.Account
	}
	if o.Category.IsSet() {
		toSerialize["category"] = o.Category.Get()
	}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.InternalId.IsSet() {
		toSerialize["internalId"] = o.InternalId.Get()
	}
	if o.ExternalId.IsSet() {
		toSerialize["externalId"] = o.ExternalId.Get()
	}
	if o.DnsDomain.IsSet() {
		toSerialize["dnsDomain"] = o.DnsDomain.Get()
	}
	if o.DnsSearchPath.IsSet() {
		toSerialize["dnsSearchPath"] = o.DnsSearchPath.Get()
	}
	if o.HostPrefix.IsSet() {
		toSerialize["hostPrefix"] = o.HostPrefix.Get()
	}
	if o.HttpProxy.IsSet() {
		toSerialize["httpProxy"] = o.HttpProxy.Get()
	}
	if o.DnsServers != nil {
		toSerialize["dnsServers"] = o.DnsServers
	}
	if o.DnsSuffixList != nil {
		toSerialize["dnsSuffixList"] = o.DnsSuffixList
	}
	if o.DhcpServer != nil {
		toSerialize["dhcpServer"] = o.DhcpServer
	}
	if o.DhcpIp.IsSet() {
		toSerialize["dhcpIp"] = o.DhcpIp.Get()
	}
	if o.Gateway.IsSet() {
		toSerialize["gateway"] = o.Gateway.Get()
	}
	if o.Netmask.IsSet() {
		toSerialize["netmask"] = o.Netmask.Get()
	}
	if o.SubnetAddress.IsSet() {
		toSerialize["subnetAddress"] = o.SubnetAddress.Get()
	}
	if o.IpCount != nil {
		toSerialize["ipCount"] = o.IpCount
	}
	if o.FreeCount != nil {
		toSerialize["freeCount"] = o.FreeCount
	}
	if o.PoolEnabled != nil {
		toSerialize["poolEnabled"] = o.PoolEnabled
	}
	if o.TftpServer.IsSet() {
		toSerialize["tftpServer"] = o.TftpServer.Get()
	}
	if o.BootFile.IsSet() {
		toSerialize["bootFile"] = o.BootFile.Get()
	}
	if o.RefType.IsSet() {
		toSerialize["refType"] = o.RefType.Get()
	}
	if o.RefId.IsSet() {
		toSerialize["refId"] = o.RefId.Get()
	}
	if o.ParentType.IsSet() {
		toSerialize["parentType"] = o.ParentType.Get()
	}
	if o.ParentId.IsSet() {
		toSerialize["parentId"] = o.ParentId.Get()
	}
	if o.PoolGroup.IsSet() {
		toSerialize["poolGroup"] = o.PoolGroup.Get()
	}
	if o.IpRanges != nil {
		toSerialize["ipRanges"] = o.IpRanges
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200106NetworkPool struct {
	value *InlineResponse200106NetworkPool
	isSet bool
}

func (v NullableInlineResponse200106NetworkPool) Get() *InlineResponse200106NetworkPool {
	return v.value
}

func (v *NullableInlineResponse200106NetworkPool) Set(val *InlineResponse200106NetworkPool) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200106NetworkPool) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200106NetworkPool) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200106NetworkPool(val *InlineResponse200106NetworkPool) *NullableInlineResponse200106NetworkPool {
	return &NullableInlineResponse200106NetworkPool{value: val, isSet: true}
}

func (v NullableInlineResponse200106NetworkPool) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200106NetworkPool) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


