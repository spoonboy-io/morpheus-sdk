/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SecurityGroupLocation struct for SecurityGroupLocation
type SecurityGroupLocation struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	IacId NullableString `json:"iacId,omitempty"`
	Zone *InlineResponse20040AppDeployInstance `json:"zone,omitempty"`
	ZonePool *InlineResponse20040AppDeployInstance `json:"zonePool,omitempty"`
	Status *string `json:"status,omitempty"`
	Priority NullableString `json:"priority,omitempty"`
	GroupLayer NullableString `json:"groupLayer,omitempty"`
}

// NewSecurityGroupLocation instantiates a new SecurityGroupLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupLocation() *SecurityGroupLocation {
	this := SecurityGroupLocation{}
	return &this
}

// NewSecurityGroupLocationWithDefaults instantiates a new SecurityGroupLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupLocationWithDefaults() *SecurityGroupLocation {
	this := SecurityGroupLocation{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SecurityGroupLocation) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupLocation) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SecurityGroupLocation) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *SecurityGroupLocation) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SecurityGroupLocation) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupLocation) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SecurityGroupLocation) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SecurityGroupLocation) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupLocation) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupLocation) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *SecurityGroupLocation) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *SecurityGroupLocation) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *SecurityGroupLocation) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *SecurityGroupLocation) UnsetDescription() {
	o.Description.Unset()
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *SecurityGroupLocation) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupLocation) GetExternalIdOk() (*string, bool) {
	if o == nil || o.ExternalId == nil {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *SecurityGroupLocation) HasExternalId() bool {
	if o != nil && o.ExternalId != nil {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *SecurityGroupLocation) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetIacId returns the IacId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupLocation) GetIacId() string {
	if o == nil || o.IacId.Get() == nil {
		var ret string
		return ret
	}
	return *o.IacId.Get()
}

// GetIacIdOk returns a tuple with the IacId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupLocation) GetIacIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IacId.Get(), o.IacId.IsSet()
}

// HasIacId returns a boolean if a field has been set.
func (o *SecurityGroupLocation) HasIacId() bool {
	if o != nil && o.IacId.IsSet() {
		return true
	}

	return false
}

// SetIacId gets a reference to the given NullableString and assigns it to the IacId field.
func (o *SecurityGroupLocation) SetIacId(v string) {
	o.IacId.Set(&v)
}
// SetIacIdNil sets the value for IacId to be an explicit nil
func (o *SecurityGroupLocation) SetIacIdNil() {
	o.IacId.Set(nil)
}

// UnsetIacId ensures that no value is present for IacId, not even an explicit nil
func (o *SecurityGroupLocation) UnsetIacId() {
	o.IacId.Unset()
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *SecurityGroupLocation) GetZone() InlineResponse20040AppDeployInstance {
	if o == nil || o.Zone == nil {
		var ret InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupLocation) GetZoneOk() (*InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Zone == nil {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *SecurityGroupLocation) HasZone() bool {
	if o != nil && o.Zone != nil {
		return true
	}

	return false
}

// SetZone gets a reference to the given InlineResponse20040AppDeployInstance and assigns it to the Zone field.
func (o *SecurityGroupLocation) SetZone(v InlineResponse20040AppDeployInstance) {
	o.Zone = &v
}

// GetZonePool returns the ZonePool field value if set, zero value otherwise.
func (o *SecurityGroupLocation) GetZonePool() InlineResponse20040AppDeployInstance {
	if o == nil || o.ZonePool == nil {
		var ret InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.ZonePool
}

// GetZonePoolOk returns a tuple with the ZonePool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupLocation) GetZonePoolOk() (*InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.ZonePool == nil {
		return nil, false
	}
	return o.ZonePool, true
}

// HasZonePool returns a boolean if a field has been set.
func (o *SecurityGroupLocation) HasZonePool() bool {
	if o != nil && o.ZonePool != nil {
		return true
	}

	return false
}

// SetZonePool gets a reference to the given InlineResponse20040AppDeployInstance and assigns it to the ZonePool field.
func (o *SecurityGroupLocation) SetZonePool(v InlineResponse20040AppDeployInstance) {
	o.ZonePool = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SecurityGroupLocation) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupLocation) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SecurityGroupLocation) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SecurityGroupLocation) SetStatus(v string) {
	o.Status = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupLocation) GetPriority() string {
	if o == nil || o.Priority.Get() == nil {
		var ret string
		return ret
	}
	return *o.Priority.Get()
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupLocation) GetPriorityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Priority.Get(), o.Priority.IsSet()
}

// HasPriority returns a boolean if a field has been set.
func (o *SecurityGroupLocation) HasPriority() bool {
	if o != nil && o.Priority.IsSet() {
		return true
	}

	return false
}

// SetPriority gets a reference to the given NullableString and assigns it to the Priority field.
func (o *SecurityGroupLocation) SetPriority(v string) {
	o.Priority.Set(&v)
}
// SetPriorityNil sets the value for Priority to be an explicit nil
func (o *SecurityGroupLocation) SetPriorityNil() {
	o.Priority.Set(nil)
}

// UnsetPriority ensures that no value is present for Priority, not even an explicit nil
func (o *SecurityGroupLocation) UnsetPriority() {
	o.Priority.Unset()
}

// GetGroupLayer returns the GroupLayer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroupLocation) GetGroupLayer() string {
	if o == nil || o.GroupLayer.Get() == nil {
		var ret string
		return ret
	}
	return *o.GroupLayer.Get()
}

// GetGroupLayerOk returns a tuple with the GroupLayer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroupLocation) GetGroupLayerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GroupLayer.Get(), o.GroupLayer.IsSet()
}

// HasGroupLayer returns a boolean if a field has been set.
func (o *SecurityGroupLocation) HasGroupLayer() bool {
	if o != nil && o.GroupLayer.IsSet() {
		return true
	}

	return false
}

// SetGroupLayer gets a reference to the given NullableString and assigns it to the GroupLayer field.
func (o *SecurityGroupLocation) SetGroupLayer(v string) {
	o.GroupLayer.Set(&v)
}
// SetGroupLayerNil sets the value for GroupLayer to be an explicit nil
func (o *SecurityGroupLocation) SetGroupLayerNil() {
	o.GroupLayer.Set(nil)
}

// UnsetGroupLayer ensures that no value is present for GroupLayer, not even an explicit nil
func (o *SecurityGroupLocation) UnsetGroupLayer() {
	o.GroupLayer.Unset()
}

func (o SecurityGroupLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.ExternalId != nil {
		toSerialize["externalId"] = o.ExternalId
	}
	if o.IacId.IsSet() {
		toSerialize["iacId"] = o.IacId.Get()
	}
	if o.Zone != nil {
		toSerialize["zone"] = o.Zone
	}
	if o.ZonePool != nil {
		toSerialize["zonePool"] = o.ZonePool
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Priority.IsSet() {
		toSerialize["priority"] = o.Priority.Get()
	}
	if o.GroupLayer.IsSet() {
		toSerialize["groupLayer"] = o.GroupLayer.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableSecurityGroupLocation struct {
	value *SecurityGroupLocation
	isSet bool
}

func (v NullableSecurityGroupLocation) Get() *SecurityGroupLocation {
	return v.value
}

func (v *NullableSecurityGroupLocation) Set(val *SecurityGroupLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupLocation(val *SecurityGroupLocation) *NullableSecurityGroupLocation {
	return &NullableSecurityGroupLocation{value: val, isSet: true}
}

func (v NullableSecurityGroupLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


