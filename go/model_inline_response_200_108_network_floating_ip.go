/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// InlineResponse200108NetworkFloatingIp struct for InlineResponse200108NetworkFloatingIp
type InlineResponse200108NetworkFloatingIp struct {
	Id *int64 `json:"id,omitempty"`
	ExternalId NullableString `json:"externalId,omitempty"`
	Cloud *InlineResponse200108NetworkFloatingIpCloud `json:"cloud,omitempty"`
	Server NullableInlineResponse200108NetworkFloatingIpServer `json:"server,omitempty"`
	IpStatus *string `json:"ipStatus,omitempty"`
	// IP Address
	IpAddress *string `json:"ipAddress,omitempty"`
	IpRange NullableString `json:"ipRange,omitempty"`
	PtrId NullableString `json:"ptrId,omitempty"`
	NetworkDomain NullableInlineResponse200108NetworkFloatingIpNetworkDomain `json:"networkDomain,omitempty"`
	CreatedBy NullableInlineResponse200108NetworkFloatingIpCreatedBy `json:"createdBy,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
}

// NewInlineResponse200108NetworkFloatingIp instantiates a new InlineResponse200108NetworkFloatingIp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200108NetworkFloatingIp() *InlineResponse200108NetworkFloatingIp {
	this := InlineResponse200108NetworkFloatingIp{}
	return &this
}

// NewInlineResponse200108NetworkFloatingIpWithDefaults instantiates a new InlineResponse200108NetworkFloatingIp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200108NetworkFloatingIpWithDefaults() *InlineResponse200108NetworkFloatingIp {
	this := InlineResponse200108NetworkFloatingIp{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse200108NetworkFloatingIp) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200108NetworkFloatingIp) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse200108NetworkFloatingIp) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *InlineResponse200108NetworkFloatingIp) SetId(v int64) {
	o.Id = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200108NetworkFloatingIp) GetExternalId() string {
	if o == nil || o.ExternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200108NetworkFloatingIp) GetExternalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *InlineResponse200108NetworkFloatingIp) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *InlineResponse200108NetworkFloatingIp) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}
// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *InlineResponse200108NetworkFloatingIp) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *InlineResponse200108NetworkFloatingIp) UnsetExternalId() {
	o.ExternalId.Unset()
}

// GetCloud returns the Cloud field value if set, zero value otherwise.
func (o *InlineResponse200108NetworkFloatingIp) GetCloud() InlineResponse200108NetworkFloatingIpCloud {
	if o == nil || o.Cloud == nil {
		var ret InlineResponse200108NetworkFloatingIpCloud
		return ret
	}
	return *o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200108NetworkFloatingIp) GetCloudOk() (*InlineResponse200108NetworkFloatingIpCloud, bool) {
	if o == nil || o.Cloud == nil {
		return nil, false
	}
	return o.Cloud, true
}

// HasCloud returns a boolean if a field has been set.
func (o *InlineResponse200108NetworkFloatingIp) HasCloud() bool {
	if o != nil && o.Cloud != nil {
		return true
	}

	return false
}

// SetCloud gets a reference to the given InlineResponse200108NetworkFloatingIpCloud and assigns it to the Cloud field.
func (o *InlineResponse200108NetworkFloatingIp) SetCloud(v InlineResponse200108NetworkFloatingIpCloud) {
	o.Cloud = &v
}

// GetServer returns the Server field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200108NetworkFloatingIp) GetServer() InlineResponse200108NetworkFloatingIpServer {
	if o == nil || o.Server.Get() == nil {
		var ret InlineResponse200108NetworkFloatingIpServer
		return ret
	}
	return *o.Server.Get()
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200108NetworkFloatingIp) GetServerOk() (*InlineResponse200108NetworkFloatingIpServer, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Server.Get(), o.Server.IsSet()
}

// HasServer returns a boolean if a field has been set.
func (o *InlineResponse200108NetworkFloatingIp) HasServer() bool {
	if o != nil && o.Server.IsSet() {
		return true
	}

	return false
}

// SetServer gets a reference to the given NullableInlineResponse200108NetworkFloatingIpServer and assigns it to the Server field.
func (o *InlineResponse200108NetworkFloatingIp) SetServer(v InlineResponse200108NetworkFloatingIpServer) {
	o.Server.Set(&v)
}
// SetServerNil sets the value for Server to be an explicit nil
func (o *InlineResponse200108NetworkFloatingIp) SetServerNil() {
	o.Server.Set(nil)
}

// UnsetServer ensures that no value is present for Server, not even an explicit nil
func (o *InlineResponse200108NetworkFloatingIp) UnsetServer() {
	o.Server.Unset()
}

// GetIpStatus returns the IpStatus field value if set, zero value otherwise.
func (o *InlineResponse200108NetworkFloatingIp) GetIpStatus() string {
	if o == nil || o.IpStatus == nil {
		var ret string
		return ret
	}
	return *o.IpStatus
}

// GetIpStatusOk returns a tuple with the IpStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200108NetworkFloatingIp) GetIpStatusOk() (*string, bool) {
	if o == nil || o.IpStatus == nil {
		return nil, false
	}
	return o.IpStatus, true
}

// HasIpStatus returns a boolean if a field has been set.
func (o *InlineResponse200108NetworkFloatingIp) HasIpStatus() bool {
	if o != nil && o.IpStatus != nil {
		return true
	}

	return false
}

// SetIpStatus gets a reference to the given string and assigns it to the IpStatus field.
func (o *InlineResponse200108NetworkFloatingIp) SetIpStatus(v string) {
	o.IpStatus = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *InlineResponse200108NetworkFloatingIp) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200108NetworkFloatingIp) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *InlineResponse200108NetworkFloatingIp) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *InlineResponse200108NetworkFloatingIp) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetIpRange returns the IpRange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200108NetworkFloatingIp) GetIpRange() string {
	if o == nil || o.IpRange.Get() == nil {
		var ret string
		return ret
	}
	return *o.IpRange.Get()
}

// GetIpRangeOk returns a tuple with the IpRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200108NetworkFloatingIp) GetIpRangeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IpRange.Get(), o.IpRange.IsSet()
}

// HasIpRange returns a boolean if a field has been set.
func (o *InlineResponse200108NetworkFloatingIp) HasIpRange() bool {
	if o != nil && o.IpRange.IsSet() {
		return true
	}

	return false
}

// SetIpRange gets a reference to the given NullableString and assigns it to the IpRange field.
func (o *InlineResponse200108NetworkFloatingIp) SetIpRange(v string) {
	o.IpRange.Set(&v)
}
// SetIpRangeNil sets the value for IpRange to be an explicit nil
func (o *InlineResponse200108NetworkFloatingIp) SetIpRangeNil() {
	o.IpRange.Set(nil)
}

// UnsetIpRange ensures that no value is present for IpRange, not even an explicit nil
func (o *InlineResponse200108NetworkFloatingIp) UnsetIpRange() {
	o.IpRange.Unset()
}

// GetPtrId returns the PtrId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200108NetworkFloatingIp) GetPtrId() string {
	if o == nil || o.PtrId.Get() == nil {
		var ret string
		return ret
	}
	return *o.PtrId.Get()
}

// GetPtrIdOk returns a tuple with the PtrId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200108NetworkFloatingIp) GetPtrIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PtrId.Get(), o.PtrId.IsSet()
}

// HasPtrId returns a boolean if a field has been set.
func (o *InlineResponse200108NetworkFloatingIp) HasPtrId() bool {
	if o != nil && o.PtrId.IsSet() {
		return true
	}

	return false
}

// SetPtrId gets a reference to the given NullableString and assigns it to the PtrId field.
func (o *InlineResponse200108NetworkFloatingIp) SetPtrId(v string) {
	o.PtrId.Set(&v)
}
// SetPtrIdNil sets the value for PtrId to be an explicit nil
func (o *InlineResponse200108NetworkFloatingIp) SetPtrIdNil() {
	o.PtrId.Set(nil)
}

// UnsetPtrId ensures that no value is present for PtrId, not even an explicit nil
func (o *InlineResponse200108NetworkFloatingIp) UnsetPtrId() {
	o.PtrId.Unset()
}

// GetNetworkDomain returns the NetworkDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200108NetworkFloatingIp) GetNetworkDomain() InlineResponse200108NetworkFloatingIpNetworkDomain {
	if o == nil || o.NetworkDomain.Get() == nil {
		var ret InlineResponse200108NetworkFloatingIpNetworkDomain
		return ret
	}
	return *o.NetworkDomain.Get()
}

// GetNetworkDomainOk returns a tuple with the NetworkDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200108NetworkFloatingIp) GetNetworkDomainOk() (*InlineResponse200108NetworkFloatingIpNetworkDomain, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetworkDomain.Get(), o.NetworkDomain.IsSet()
}

// HasNetworkDomain returns a boolean if a field has been set.
func (o *InlineResponse200108NetworkFloatingIp) HasNetworkDomain() bool {
	if o != nil && o.NetworkDomain.IsSet() {
		return true
	}

	return false
}

// SetNetworkDomain gets a reference to the given NullableInlineResponse200108NetworkFloatingIpNetworkDomain and assigns it to the NetworkDomain field.
func (o *InlineResponse200108NetworkFloatingIp) SetNetworkDomain(v InlineResponse200108NetworkFloatingIpNetworkDomain) {
	o.NetworkDomain.Set(&v)
}
// SetNetworkDomainNil sets the value for NetworkDomain to be an explicit nil
func (o *InlineResponse200108NetworkFloatingIp) SetNetworkDomainNil() {
	o.NetworkDomain.Set(nil)
}

// UnsetNetworkDomain ensures that no value is present for NetworkDomain, not even an explicit nil
func (o *InlineResponse200108NetworkFloatingIp) UnsetNetworkDomain() {
	o.NetworkDomain.Unset()
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200108NetworkFloatingIp) GetCreatedBy() InlineResponse200108NetworkFloatingIpCreatedBy {
	if o == nil || o.CreatedBy.Get() == nil {
		var ret InlineResponse200108NetworkFloatingIpCreatedBy
		return ret
	}
	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200108NetworkFloatingIp) GetCreatedByOk() (*InlineResponse200108NetworkFloatingIpCreatedBy, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *InlineResponse200108NetworkFloatingIp) HasCreatedBy() bool {
	if o != nil && o.CreatedBy.IsSet() {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given NullableInlineResponse200108NetworkFloatingIpCreatedBy and assigns it to the CreatedBy field.
func (o *InlineResponse200108NetworkFloatingIp) SetCreatedBy(v InlineResponse200108NetworkFloatingIpCreatedBy) {
	o.CreatedBy.Set(&v)
}
// SetCreatedByNil sets the value for CreatedBy to be an explicit nil
func (o *InlineResponse200108NetworkFloatingIp) SetCreatedByNil() {
	o.CreatedBy.Set(nil)
}

// UnsetCreatedBy ensures that no value is present for CreatedBy, not even an explicit nil
func (o *InlineResponse200108NetworkFloatingIp) UnsetCreatedBy() {
	o.CreatedBy.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *InlineResponse200108NetworkFloatingIp) GetDateCreated() time.Time {
	if o == nil || o.DateCreated == nil {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200108NetworkFloatingIp) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *InlineResponse200108NetworkFloatingIp) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *InlineResponse200108NetworkFloatingIp) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *InlineResponse200108NetworkFloatingIp) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200108NetworkFloatingIp) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *InlineResponse200108NetworkFloatingIp) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *InlineResponse200108NetworkFloatingIp) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

func (o InlineResponse200108NetworkFloatingIp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ExternalId.IsSet() {
		toSerialize["externalId"] = o.ExternalId.Get()
	}
	if o.Cloud != nil {
		toSerialize["cloud"] = o.Cloud
	}
	if o.Server.IsSet() {
		toSerialize["server"] = o.Server.Get()
	}
	if o.IpStatus != nil {
		toSerialize["ipStatus"] = o.IpStatus
	}
	if o.IpAddress != nil {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if o.IpRange.IsSet() {
		toSerialize["ipRange"] = o.IpRange.Get()
	}
	if o.PtrId.IsSet() {
		toSerialize["ptrId"] = o.PtrId.Get()
	}
	if o.NetworkDomain.IsSet() {
		toSerialize["networkDomain"] = o.NetworkDomain.Get()
	}
	if o.CreatedBy.IsSet() {
		toSerialize["createdBy"] = o.CreatedBy.Get()
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200108NetworkFloatingIp struct {
	value *InlineResponse200108NetworkFloatingIp
	isSet bool
}

func (v NullableInlineResponse200108NetworkFloatingIp) Get() *InlineResponse200108NetworkFloatingIp {
	return v.value
}

func (v *NullableInlineResponse200108NetworkFloatingIp) Set(val *InlineResponse200108NetworkFloatingIp) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200108NetworkFloatingIp) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200108NetworkFloatingIp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200108NetworkFloatingIp(val *InlineResponse200108NetworkFloatingIp) *NullableInlineResponse200108NetworkFloatingIp {
	return &NullableInlineResponse200108NetworkFloatingIp{value: val, isSet: true}
}

func (v NullableInlineResponse200108NetworkFloatingIp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200108NetworkFloatingIp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


