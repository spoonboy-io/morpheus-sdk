/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200167Appliance struct for InlineResponse200167Appliance
type InlineResponse200167Appliance struct {
	BuildVersion *string `json:"buildVersion,omitempty"`
}

// NewInlineResponse200167Appliance instantiates a new InlineResponse200167Appliance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200167Appliance() *InlineResponse200167Appliance {
	this := InlineResponse200167Appliance{}
	return &this
}

// NewInlineResponse200167ApplianceWithDefaults instantiates a new InlineResponse200167Appliance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200167ApplianceWithDefaults() *InlineResponse200167Appliance {
	this := InlineResponse200167Appliance{}
	return &this
}

// GetBuildVersion returns the BuildVersion field value if set, zero value otherwise.
func (o *InlineResponse200167Appliance) GetBuildVersion() string {
	if o == nil || o.BuildVersion == nil {
		var ret string
		return ret
	}
	return *o.BuildVersion
}

// GetBuildVersionOk returns a tuple with the BuildVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200167Appliance) GetBuildVersionOk() (*string, bool) {
	if o == nil || o.BuildVersion == nil {
		return nil, false
	}
	return o.BuildVersion, true
}

// HasBuildVersion returns a boolean if a field has been set.
func (o *InlineResponse200167Appliance) HasBuildVersion() bool {
	if o != nil && o.BuildVersion != nil {
		return true
	}

	return false
}

// SetBuildVersion gets a reference to the given string and assigns it to the BuildVersion field.
func (o *InlineResponse200167Appliance) SetBuildVersion(v string) {
	o.BuildVersion = &v
}

func (o InlineResponse200167Appliance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BuildVersion != nil {
		toSerialize["buildVersion"] = o.BuildVersion
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200167Appliance struct {
	value *InlineResponse200167Appliance
	isSet bool
}

func (v NullableInlineResponse200167Appliance) Get() *InlineResponse200167Appliance {
	return v.value
}

func (v *NullableInlineResponse200167Appliance) Set(val *InlineResponse200167Appliance) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200167Appliance) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200167Appliance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200167Appliance(val *InlineResponse200167Appliance) *NullableInlineResponse200167Appliance {
	return &NullableInlineResponse200167Appliance{value: val, isSet: true}
}

func (v NullableInlineResponse200167Appliance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200167Appliance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


