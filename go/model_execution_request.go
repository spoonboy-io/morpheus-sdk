/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ExecutionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecutionRequest{}

// ExecutionRequest struct for ExecutionRequest
type ExecutionRequest struct {
	Id *int64 `json:"id,omitempty"`
	UniqueId *string `json:"uniqueId,omitempty"`
	ContainerId NullableString `json:"containerId,omitempty"`
	ServerId NullableString `json:"serverId,omitempty"`
	InstanceId *int64 `json:"instanceId,omitempty"`
	ResourceId NullableString `json:"resourceId,omitempty"`
	AppId NullableString `json:"appId,omitempty"`
	StdOut *string `json:"stdOut,omitempty"`
	StdErr *string `json:"stdErr,omitempty"`
	ExitCode *int64 `json:"exitCode,omitempty"`
	Status *string `json:"status,omitempty"`
	ExpiresAt *time.Time `json:"expiresAt,omitempty"`
	CreatedById *int64 `json:"createdById,omitempty"`
	StatusMessage NullableString `json:"statusMessage,omitempty"`
	ErrorMessage NullableString `json:"errorMessage,omitempty"`
	Config map[string]interface{} `json:"config,omitempty"`
	RawData NullableString `json:"rawData,omitempty"`
}

// NewExecutionRequest instantiates a new ExecutionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecutionRequest() *ExecutionRequest {
	this := ExecutionRequest{}
	return &this
}

// NewExecutionRequestWithDefaults instantiates a new ExecutionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecutionRequestWithDefaults() *ExecutionRequest {
	this := ExecutionRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ExecutionRequest) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionRequest) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ExecutionRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ExecutionRequest) SetId(v int64) {
	o.Id = &v
}

// GetUniqueId returns the UniqueId field value if set, zero value otherwise.
func (o *ExecutionRequest) GetUniqueId() string {
	if o == nil || IsNil(o.UniqueId) {
		var ret string
		return ret
	}
	return *o.UniqueId
}

// GetUniqueIdOk returns a tuple with the UniqueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionRequest) GetUniqueIdOk() (*string, bool) {
	if o == nil || IsNil(o.UniqueId) {
		return nil, false
	}
	return o.UniqueId, true
}

// HasUniqueId returns a boolean if a field has been set.
func (o *ExecutionRequest) HasUniqueId() bool {
	if o != nil && !IsNil(o.UniqueId) {
		return true
	}

	return false
}

// SetUniqueId gets a reference to the given string and assigns it to the UniqueId field.
func (o *ExecutionRequest) SetUniqueId(v string) {
	o.UniqueId = &v
}

// GetContainerId returns the ContainerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExecutionRequest) GetContainerId() string {
	if o == nil || IsNil(o.ContainerId.Get()) {
		var ret string
		return ret
	}
	return *o.ContainerId.Get()
}

// GetContainerIdOk returns a tuple with the ContainerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExecutionRequest) GetContainerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContainerId.Get(), o.ContainerId.IsSet()
}

// HasContainerId returns a boolean if a field has been set.
func (o *ExecutionRequest) HasContainerId() bool {
	if o != nil && o.ContainerId.IsSet() {
		return true
	}

	return false
}

// SetContainerId gets a reference to the given NullableString and assigns it to the ContainerId field.
func (o *ExecutionRequest) SetContainerId(v string) {
	o.ContainerId.Set(&v)
}
// SetContainerIdNil sets the value for ContainerId to be an explicit nil
func (o *ExecutionRequest) SetContainerIdNil() {
	o.ContainerId.Set(nil)
}

// UnsetContainerId ensures that no value is present for ContainerId, not even an explicit nil
func (o *ExecutionRequest) UnsetContainerId() {
	o.ContainerId.Unset()
}

// GetServerId returns the ServerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExecutionRequest) GetServerId() string {
	if o == nil || IsNil(o.ServerId.Get()) {
		var ret string
		return ret
	}
	return *o.ServerId.Get()
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExecutionRequest) GetServerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerId.Get(), o.ServerId.IsSet()
}

// HasServerId returns a boolean if a field has been set.
func (o *ExecutionRequest) HasServerId() bool {
	if o != nil && o.ServerId.IsSet() {
		return true
	}

	return false
}

// SetServerId gets a reference to the given NullableString and assigns it to the ServerId field.
func (o *ExecutionRequest) SetServerId(v string) {
	o.ServerId.Set(&v)
}
// SetServerIdNil sets the value for ServerId to be an explicit nil
func (o *ExecutionRequest) SetServerIdNil() {
	o.ServerId.Set(nil)
}

// UnsetServerId ensures that no value is present for ServerId, not even an explicit nil
func (o *ExecutionRequest) UnsetServerId() {
	o.ServerId.Unset()
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *ExecutionRequest) GetInstanceId() int64 {
	if o == nil || IsNil(o.InstanceId) {
		var ret int64
		return ret
	}
	return *o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionRequest) GetInstanceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.InstanceId) {
		return nil, false
	}
	return o.InstanceId, true
}

// HasInstanceId returns a boolean if a field has been set.
func (o *ExecutionRequest) HasInstanceId() bool {
	if o != nil && !IsNil(o.InstanceId) {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given int64 and assigns it to the InstanceId field.
func (o *ExecutionRequest) SetInstanceId(v int64) {
	o.InstanceId = &v
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExecutionRequest) GetResourceId() string {
	if o == nil || IsNil(o.ResourceId.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceId.Get()
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExecutionRequest) GetResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceId.Get(), o.ResourceId.IsSet()
}

// HasResourceId returns a boolean if a field has been set.
func (o *ExecutionRequest) HasResourceId() bool {
	if o != nil && o.ResourceId.IsSet() {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given NullableString and assigns it to the ResourceId field.
func (o *ExecutionRequest) SetResourceId(v string) {
	o.ResourceId.Set(&v)
}
// SetResourceIdNil sets the value for ResourceId to be an explicit nil
func (o *ExecutionRequest) SetResourceIdNil() {
	o.ResourceId.Set(nil)
}

// UnsetResourceId ensures that no value is present for ResourceId, not even an explicit nil
func (o *ExecutionRequest) UnsetResourceId() {
	o.ResourceId.Unset()
}

// GetAppId returns the AppId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExecutionRequest) GetAppId() string {
	if o == nil || IsNil(o.AppId.Get()) {
		var ret string
		return ret
	}
	return *o.AppId.Get()
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExecutionRequest) GetAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AppId.Get(), o.AppId.IsSet()
}

// HasAppId returns a boolean if a field has been set.
func (o *ExecutionRequest) HasAppId() bool {
	if o != nil && o.AppId.IsSet() {
		return true
	}

	return false
}

// SetAppId gets a reference to the given NullableString and assigns it to the AppId field.
func (o *ExecutionRequest) SetAppId(v string) {
	o.AppId.Set(&v)
}
// SetAppIdNil sets the value for AppId to be an explicit nil
func (o *ExecutionRequest) SetAppIdNil() {
	o.AppId.Set(nil)
}

// UnsetAppId ensures that no value is present for AppId, not even an explicit nil
func (o *ExecutionRequest) UnsetAppId() {
	o.AppId.Unset()
}

// GetStdOut returns the StdOut field value if set, zero value otherwise.
func (o *ExecutionRequest) GetStdOut() string {
	if o == nil || IsNil(o.StdOut) {
		var ret string
		return ret
	}
	return *o.StdOut
}

// GetStdOutOk returns a tuple with the StdOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionRequest) GetStdOutOk() (*string, bool) {
	if o == nil || IsNil(o.StdOut) {
		return nil, false
	}
	return o.StdOut, true
}

// HasStdOut returns a boolean if a field has been set.
func (o *ExecutionRequest) HasStdOut() bool {
	if o != nil && !IsNil(o.StdOut) {
		return true
	}

	return false
}

// SetStdOut gets a reference to the given string and assigns it to the StdOut field.
func (o *ExecutionRequest) SetStdOut(v string) {
	o.StdOut = &v
}

// GetStdErr returns the StdErr field value if set, zero value otherwise.
func (o *ExecutionRequest) GetStdErr() string {
	if o == nil || IsNil(o.StdErr) {
		var ret string
		return ret
	}
	return *o.StdErr
}

// GetStdErrOk returns a tuple with the StdErr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionRequest) GetStdErrOk() (*string, bool) {
	if o == nil || IsNil(o.StdErr) {
		return nil, false
	}
	return o.StdErr, true
}

// HasStdErr returns a boolean if a field has been set.
func (o *ExecutionRequest) HasStdErr() bool {
	if o != nil && !IsNil(o.StdErr) {
		return true
	}

	return false
}

// SetStdErr gets a reference to the given string and assigns it to the StdErr field.
func (o *ExecutionRequest) SetStdErr(v string) {
	o.StdErr = &v
}

// GetExitCode returns the ExitCode field value if set, zero value otherwise.
func (o *ExecutionRequest) GetExitCode() int64 {
	if o == nil || IsNil(o.ExitCode) {
		var ret int64
		return ret
	}
	return *o.ExitCode
}

// GetExitCodeOk returns a tuple with the ExitCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionRequest) GetExitCodeOk() (*int64, bool) {
	if o == nil || IsNil(o.ExitCode) {
		return nil, false
	}
	return o.ExitCode, true
}

// HasExitCode returns a boolean if a field has been set.
func (o *ExecutionRequest) HasExitCode() bool {
	if o != nil && !IsNil(o.ExitCode) {
		return true
	}

	return false
}

// SetExitCode gets a reference to the given int64 and assigns it to the ExitCode field.
func (o *ExecutionRequest) SetExitCode(v int64) {
	o.ExitCode = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ExecutionRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ExecutionRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ExecutionRequest) SetStatus(v string) {
	o.Status = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *ExecutionRequest) GetExpiresAt() time.Time {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret time.Time
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionRequest) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *ExecutionRequest) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given time.Time and assigns it to the ExpiresAt field.
func (o *ExecutionRequest) SetExpiresAt(v time.Time) {
	o.ExpiresAt = &v
}

// GetCreatedById returns the CreatedById field value if set, zero value otherwise.
func (o *ExecutionRequest) GetCreatedById() int64 {
	if o == nil || IsNil(o.CreatedById) {
		var ret int64
		return ret
	}
	return *o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionRequest) GetCreatedByIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CreatedById) {
		return nil, false
	}
	return o.CreatedById, true
}

// HasCreatedById returns a boolean if a field has been set.
func (o *ExecutionRequest) HasCreatedById() bool {
	if o != nil && !IsNil(o.CreatedById) {
		return true
	}

	return false
}

// SetCreatedById gets a reference to the given int64 and assigns it to the CreatedById field.
func (o *ExecutionRequest) SetCreatedById(v int64) {
	o.CreatedById = &v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExecutionRequest) GetStatusMessage() string {
	if o == nil || IsNil(o.StatusMessage.Get()) {
		var ret string
		return ret
	}
	return *o.StatusMessage.Get()
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExecutionRequest) GetStatusMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StatusMessage.Get(), o.StatusMessage.IsSet()
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *ExecutionRequest) HasStatusMessage() bool {
	if o != nil && o.StatusMessage.IsSet() {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given NullableString and assigns it to the StatusMessage field.
func (o *ExecutionRequest) SetStatusMessage(v string) {
	o.StatusMessage.Set(&v)
}
// SetStatusMessageNil sets the value for StatusMessage to be an explicit nil
func (o *ExecutionRequest) SetStatusMessageNil() {
	o.StatusMessage.Set(nil)
}

// UnsetStatusMessage ensures that no value is present for StatusMessage, not even an explicit nil
func (o *ExecutionRequest) UnsetStatusMessage() {
	o.StatusMessage.Unset()
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExecutionRequest) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExecutionRequest) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *ExecutionRequest) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given NullableString and assigns it to the ErrorMessage field.
func (o *ExecutionRequest) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}
// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *ExecutionRequest) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *ExecutionRequest) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *ExecutionRequest) GetConfig() map[string]interface{} {
	if o == nil || IsNil(o.Config) {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionRequest) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Config) {
		return map[string]interface{}{}, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *ExecutionRequest) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *ExecutionRequest) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetRawData returns the RawData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExecutionRequest) GetRawData() string {
	if o == nil || IsNil(o.RawData.Get()) {
		var ret string
		return ret
	}
	return *o.RawData.Get()
}

// GetRawDataOk returns a tuple with the RawData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExecutionRequest) GetRawDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RawData.Get(), o.RawData.IsSet()
}

// HasRawData returns a boolean if a field has been set.
func (o *ExecutionRequest) HasRawData() bool {
	if o != nil && o.RawData.IsSet() {
		return true
	}

	return false
}

// SetRawData gets a reference to the given NullableString and assigns it to the RawData field.
func (o *ExecutionRequest) SetRawData(v string) {
	o.RawData.Set(&v)
}
// SetRawDataNil sets the value for RawData to be an explicit nil
func (o *ExecutionRequest) SetRawDataNil() {
	o.RawData.Set(nil)
}

// UnsetRawData ensures that no value is present for RawData, not even an explicit nil
func (o *ExecutionRequest) UnsetRawData() {
	o.RawData.Unset()
}

func (o ExecutionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecutionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.UniqueId) {
		toSerialize["uniqueId"] = o.UniqueId
	}
	if o.ContainerId.IsSet() {
		toSerialize["containerId"] = o.ContainerId.Get()
	}
	if o.ServerId.IsSet() {
		toSerialize["serverId"] = o.ServerId.Get()
	}
	if !IsNil(o.InstanceId) {
		toSerialize["instanceId"] = o.InstanceId
	}
	if o.ResourceId.IsSet() {
		toSerialize["resourceId"] = o.ResourceId.Get()
	}
	if o.AppId.IsSet() {
		toSerialize["appId"] = o.AppId.Get()
	}
	if !IsNil(o.StdOut) {
		toSerialize["stdOut"] = o.StdOut
	}
	if !IsNil(o.StdErr) {
		toSerialize["stdErr"] = o.StdErr
	}
	if !IsNil(o.ExitCode) {
		toSerialize["exitCode"] = o.ExitCode
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expiresAt"] = o.ExpiresAt
	}
	if !IsNil(o.CreatedById) {
		toSerialize["createdById"] = o.CreatedById
	}
	if o.StatusMessage.IsSet() {
		toSerialize["statusMessage"] = o.StatusMessage.Get()
	}
	if o.ErrorMessage.IsSet() {
		toSerialize["errorMessage"] = o.ErrorMessage.Get()
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if o.RawData.IsSet() {
		toSerialize["rawData"] = o.RawData.Get()
	}
	return toSerialize, nil
}

type NullableExecutionRequest struct {
	value *ExecutionRequest
	isSet bool
}

func (v NullableExecutionRequest) Get() *ExecutionRequest {
	return v.value
}

func (v *NullableExecutionRequest) Set(val *ExecutionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExecutionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExecutionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecutionRequest(val *ExecutionRequest) *NullableExecutionRequest {
	return &NullableExecutionRequest{value: val, isSet: true}
}

func (v NullableExecutionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecutionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


