/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterLayoutFile struct for ClusterLayoutFile
type ClusterLayoutFile struct {
	Id *int64 `json:"id,omitempty"`
	SourceType *string `json:"sourceType,omitempty"`
	ContentRef NullableString `json:"contentRef,omitempty"`
	ContentPath NullableString `json:"contentPath,omitempty"`
	Repository NullableString `json:"repository,omitempty"`
	Content *string `json:"content,omitempty"`
}

// NewClusterLayoutFile instantiates a new ClusterLayoutFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterLayoutFile() *ClusterLayoutFile {
	this := ClusterLayoutFile{}
	return &this
}

// NewClusterLayoutFileWithDefaults instantiates a new ClusterLayoutFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterLayoutFileWithDefaults() *ClusterLayoutFile {
	this := ClusterLayoutFile{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClusterLayoutFile) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutFile) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClusterLayoutFile) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ClusterLayoutFile) SetId(v int64) {
	o.Id = &v
}

// GetSourceType returns the SourceType field value if set, zero value otherwise.
func (o *ClusterLayoutFile) GetSourceType() string {
	if o == nil || o.SourceType == nil {
		var ret string
		return ret
	}
	return *o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutFile) GetSourceTypeOk() (*string, bool) {
	if o == nil || o.SourceType == nil {
		return nil, false
	}
	return o.SourceType, true
}

// HasSourceType returns a boolean if a field has been set.
func (o *ClusterLayoutFile) HasSourceType() bool {
	if o != nil && o.SourceType != nil {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given string and assigns it to the SourceType field.
func (o *ClusterLayoutFile) SetSourceType(v string) {
	o.SourceType = &v
}

// GetContentRef returns the ContentRef field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterLayoutFile) GetContentRef() string {
	if o == nil || o.ContentRef.Get() == nil {
		var ret string
		return ret
	}
	return *o.ContentRef.Get()
}

// GetContentRefOk returns a tuple with the ContentRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterLayoutFile) GetContentRefOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ContentRef.Get(), o.ContentRef.IsSet()
}

// HasContentRef returns a boolean if a field has been set.
func (o *ClusterLayoutFile) HasContentRef() bool {
	if o != nil && o.ContentRef.IsSet() {
		return true
	}

	return false
}

// SetContentRef gets a reference to the given NullableString and assigns it to the ContentRef field.
func (o *ClusterLayoutFile) SetContentRef(v string) {
	o.ContentRef.Set(&v)
}
// SetContentRefNil sets the value for ContentRef to be an explicit nil
func (o *ClusterLayoutFile) SetContentRefNil() {
	o.ContentRef.Set(nil)
}

// UnsetContentRef ensures that no value is present for ContentRef, not even an explicit nil
func (o *ClusterLayoutFile) UnsetContentRef() {
	o.ContentRef.Unset()
}

// GetContentPath returns the ContentPath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterLayoutFile) GetContentPath() string {
	if o == nil || o.ContentPath.Get() == nil {
		var ret string
		return ret
	}
	return *o.ContentPath.Get()
}

// GetContentPathOk returns a tuple with the ContentPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterLayoutFile) GetContentPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ContentPath.Get(), o.ContentPath.IsSet()
}

// HasContentPath returns a boolean if a field has been set.
func (o *ClusterLayoutFile) HasContentPath() bool {
	if o != nil && o.ContentPath.IsSet() {
		return true
	}

	return false
}

// SetContentPath gets a reference to the given NullableString and assigns it to the ContentPath field.
func (o *ClusterLayoutFile) SetContentPath(v string) {
	o.ContentPath.Set(&v)
}
// SetContentPathNil sets the value for ContentPath to be an explicit nil
func (o *ClusterLayoutFile) SetContentPathNil() {
	o.ContentPath.Set(nil)
}

// UnsetContentPath ensures that no value is present for ContentPath, not even an explicit nil
func (o *ClusterLayoutFile) UnsetContentPath() {
	o.ContentPath.Unset()
}

// GetRepository returns the Repository field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterLayoutFile) GetRepository() string {
	if o == nil || o.Repository.Get() == nil {
		var ret string
		return ret
	}
	return *o.Repository.Get()
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterLayoutFile) GetRepositoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Repository.Get(), o.Repository.IsSet()
}

// HasRepository returns a boolean if a field has been set.
func (o *ClusterLayoutFile) HasRepository() bool {
	if o != nil && o.Repository.IsSet() {
		return true
	}

	return false
}

// SetRepository gets a reference to the given NullableString and assigns it to the Repository field.
func (o *ClusterLayoutFile) SetRepository(v string) {
	o.Repository.Set(&v)
}
// SetRepositoryNil sets the value for Repository to be an explicit nil
func (o *ClusterLayoutFile) SetRepositoryNil() {
	o.Repository.Set(nil)
}

// UnsetRepository ensures that no value is present for Repository, not even an explicit nil
func (o *ClusterLayoutFile) UnsetRepository() {
	o.Repository.Unset()
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ClusterLayoutFile) GetContent() string {
	if o == nil || o.Content == nil {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutFile) GetContentOk() (*string, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ClusterLayoutFile) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *ClusterLayoutFile) SetContent(v string) {
	o.Content = &v
}

func (o ClusterLayoutFile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.SourceType != nil {
		toSerialize["sourceType"] = o.SourceType
	}
	if o.ContentRef.IsSet() {
		toSerialize["contentRef"] = o.ContentRef.Get()
	}
	if o.ContentPath.IsSet() {
		toSerialize["contentPath"] = o.ContentPath.Get()
	}
	if o.Repository.IsSet() {
		toSerialize["repository"] = o.Repository.Get()
	}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	return json.Marshal(toSerialize)
}

type NullableClusterLayoutFile struct {
	value *ClusterLayoutFile
	isSet bool
}

func (v NullableClusterLayoutFile) Get() *ClusterLayoutFile {
	return v.value
}

func (v *NullableClusterLayoutFile) Set(val *ClusterLayoutFile) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterLayoutFile) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterLayoutFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterLayoutFile(val *ClusterLayoutFile) *NullableClusterLayoutFile {
	return &NullableClusterLayoutFile{value: val, isSet: true}
}

func (v NullableClusterLayoutFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterLayoutFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


