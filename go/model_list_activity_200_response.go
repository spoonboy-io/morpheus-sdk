/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListActivity200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListActivity200Response{}

// ListActivity200Response struct for ListActivity200Response
type ListActivity200Response struct {
	Meta *MetaMeta `json:"meta,omitempty"`
	Activity []Activity `json:"activity,omitempty"`
}

// NewListActivity200Response instantiates a new ListActivity200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListActivity200Response() *ListActivity200Response {
	this := ListActivity200Response{}
	return &this
}

// NewListActivity200ResponseWithDefaults instantiates a new ListActivity200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListActivity200ResponseWithDefaults() *ListActivity200Response {
	this := ListActivity200Response{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListActivity200Response) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListActivity200Response) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ListActivity200Response) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *ListActivity200Response) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetActivity returns the Activity field value if set, zero value otherwise.
func (o *ListActivity200Response) GetActivity() []Activity {
	if o == nil || IsNil(o.Activity) {
		var ret []Activity
		return ret
	}
	return o.Activity
}

// GetActivityOk returns a tuple with the Activity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListActivity200Response) GetActivityOk() ([]Activity, bool) {
	if o == nil || IsNil(o.Activity) {
		return nil, false
	}
	return o.Activity, true
}

// HasActivity returns a boolean if a field has been set.
func (o *ListActivity200Response) HasActivity() bool {
	if o != nil && !IsNil(o.Activity) {
		return true
	}

	return false
}

// SetActivity gets a reference to the given []Activity and assigns it to the Activity field.
func (o *ListActivity200Response) SetActivity(v []Activity) {
	o.Activity = v
}

func (o ListActivity200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListActivity200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Activity) {
		toSerialize["activity"] = o.Activity
	}
	return toSerialize, nil
}

type NullableListActivity200Response struct {
	value *ListActivity200Response
	isSet bool
}

func (v NullableListActivity200Response) Get() *ListActivity200Response {
	return v.value
}

func (v *NullableListActivity200Response) Set(val *ListActivity200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListActivity200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListActivity200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListActivity200Response(val *ListActivity200Response) *NullableListActivity200Response {
	return &NullableListActivity200Response{value: val, isSet: true}
}

func (v NullableListActivity200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListActivity200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


