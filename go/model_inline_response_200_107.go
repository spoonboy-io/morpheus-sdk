/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200107 struct for InlineResponse200107
type InlineResponse200107 struct {
	NetworkPool *InlineResponse200107NetworkPool `json:"networkPool,omitempty"`
}

// NewInlineResponse200107 instantiates a new InlineResponse200107 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200107() *InlineResponse200107 {
	this := InlineResponse200107{}
	return &this
}

// NewInlineResponse200107WithDefaults instantiates a new InlineResponse200107 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200107WithDefaults() *InlineResponse200107 {
	this := InlineResponse200107{}
	return &this
}

// GetNetworkPool returns the NetworkPool field value if set, zero value otherwise.
func (o *InlineResponse200107) GetNetworkPool() InlineResponse200107NetworkPool {
	if o == nil || o.NetworkPool == nil {
		var ret InlineResponse200107NetworkPool
		return ret
	}
	return *o.NetworkPool
}

// GetNetworkPoolOk returns a tuple with the NetworkPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200107) GetNetworkPoolOk() (*InlineResponse200107NetworkPool, bool) {
	if o == nil || o.NetworkPool == nil {
		return nil, false
	}
	return o.NetworkPool, true
}

// HasNetworkPool returns a boolean if a field has been set.
func (o *InlineResponse200107) HasNetworkPool() bool {
	if o != nil && o.NetworkPool != nil {
		return true
	}

	return false
}

// SetNetworkPool gets a reference to the given InlineResponse200107NetworkPool and assigns it to the NetworkPool field.
func (o *InlineResponse200107) SetNetworkPool(v InlineResponse200107NetworkPool) {
	o.NetworkPool = &v
}

func (o InlineResponse200107) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkPool != nil {
		toSerialize["networkPool"] = o.NetworkPool
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200107 struct {
	value *InlineResponse200107
	isSet bool
}

func (v NullableInlineResponse200107) Get() *InlineResponse200107 {
	return v.value
}

func (v *NullableInlineResponse200107) Set(val *InlineResponse200107) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200107) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200107) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200107(val *InlineResponse200107) *NullableInlineResponse200107 {
	return &NullableInlineResponse200107{value: val, isSet: true}
}

func (v NullableInlineResponse200107) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200107) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


