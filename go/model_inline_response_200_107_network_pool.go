/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// InlineResponse200107NetworkPool struct for InlineResponse200107NetworkPool
type InlineResponse200107NetworkPool struct {
	Id *int64 `json:"id,omitempty"`
	NetworkPoolId *int64 `json:"networkPoolId,omitempty"`
	IpType *string `json:"ipType,omitempty"`
	IpAddress *string `json:"ipAddress,omitempty"`
	GatewayAddress NullableString `json:"gatewayAddress,omitempty"`
	SubnetMask NullableString `json:"subnetMask,omitempty"`
	DnsServer NullableString `json:"dnsServer,omitempty"`
	InterfaceName NullableString `json:"interfaceName,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Active *bool `json:"active,omitempty"`
	StaticIp *bool `json:"staticIp,omitempty"`
	Fqdn *string `json:"fqdn,omitempty"`
	DomainName NullableString `json:"domainName,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	InternalId NullableString `json:"internalId,omitempty"`
	ExternalId NullableString `json:"externalId,omitempty"`
	PtrId NullableString `json:"ptrId,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	StartDate *time.Time `json:"startDate,omitempty"`
	EndDate *time.Time `json:"endDate,omitempty"`
	RefType NullableString `json:"refType,omitempty"`
	RefId NullableString `json:"refId,omitempty"`
	SubRefId NullableString `json:"subRefId,omitempty"`
	NetworkDomain NullableString `json:"networkDomain,omitempty"`
	CreatedBy *InlineResponse200107NetworkPoolCreatedBy `json:"createdBy,omitempty"`
}

// NewInlineResponse200107NetworkPool instantiates a new InlineResponse200107NetworkPool object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200107NetworkPool() *InlineResponse200107NetworkPool {
	this := InlineResponse200107NetworkPool{}
	return &this
}

// NewInlineResponse200107NetworkPoolWithDefaults instantiates a new InlineResponse200107NetworkPool object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200107NetworkPoolWithDefaults() *InlineResponse200107NetworkPool {
	this := InlineResponse200107NetworkPool{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse200107NetworkPool) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200107NetworkPool) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *InlineResponse200107NetworkPool) SetId(v int64) {
	o.Id = &v
}

// GetNetworkPoolId returns the NetworkPoolId field value if set, zero value otherwise.
func (o *InlineResponse200107NetworkPool) GetNetworkPoolId() int64 {
	if o == nil || o.NetworkPoolId == nil {
		var ret int64
		return ret
	}
	return *o.NetworkPoolId
}

// GetNetworkPoolIdOk returns a tuple with the NetworkPoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200107NetworkPool) GetNetworkPoolIdOk() (*int64, bool) {
	if o == nil || o.NetworkPoolId == nil {
		return nil, false
	}
	return o.NetworkPoolId, true
}

// HasNetworkPoolId returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasNetworkPoolId() bool {
	if o != nil && o.NetworkPoolId != nil {
		return true
	}

	return false
}

// SetNetworkPoolId gets a reference to the given int64 and assigns it to the NetworkPoolId field.
func (o *InlineResponse200107NetworkPool) SetNetworkPoolId(v int64) {
	o.NetworkPoolId = &v
}

// GetIpType returns the IpType field value if set, zero value otherwise.
func (o *InlineResponse200107NetworkPool) GetIpType() string {
	if o == nil || o.IpType == nil {
		var ret string
		return ret
	}
	return *o.IpType
}

// GetIpTypeOk returns a tuple with the IpType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200107NetworkPool) GetIpTypeOk() (*string, bool) {
	if o == nil || o.IpType == nil {
		return nil, false
	}
	return o.IpType, true
}

// HasIpType returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasIpType() bool {
	if o != nil && o.IpType != nil {
		return true
	}

	return false
}

// SetIpType gets a reference to the given string and assigns it to the IpType field.
func (o *InlineResponse200107NetworkPool) SetIpType(v string) {
	o.IpType = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *InlineResponse200107NetworkPool) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200107NetworkPool) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *InlineResponse200107NetworkPool) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetGatewayAddress returns the GatewayAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200107NetworkPool) GetGatewayAddress() string {
	if o == nil || o.GatewayAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.GatewayAddress.Get()
}

// GetGatewayAddressOk returns a tuple with the GatewayAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200107NetworkPool) GetGatewayAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GatewayAddress.Get(), o.GatewayAddress.IsSet()
}

// HasGatewayAddress returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasGatewayAddress() bool {
	if o != nil && o.GatewayAddress.IsSet() {
		return true
	}

	return false
}

// SetGatewayAddress gets a reference to the given NullableString and assigns it to the GatewayAddress field.
func (o *InlineResponse200107NetworkPool) SetGatewayAddress(v string) {
	o.GatewayAddress.Set(&v)
}
// SetGatewayAddressNil sets the value for GatewayAddress to be an explicit nil
func (o *InlineResponse200107NetworkPool) SetGatewayAddressNil() {
	o.GatewayAddress.Set(nil)
}

// UnsetGatewayAddress ensures that no value is present for GatewayAddress, not even an explicit nil
func (o *InlineResponse200107NetworkPool) UnsetGatewayAddress() {
	o.GatewayAddress.Unset()
}

// GetSubnetMask returns the SubnetMask field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200107NetworkPool) GetSubnetMask() string {
	if o == nil || o.SubnetMask.Get() == nil {
		var ret string
		return ret
	}
	return *o.SubnetMask.Get()
}

// GetSubnetMaskOk returns a tuple with the SubnetMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200107NetworkPool) GetSubnetMaskOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubnetMask.Get(), o.SubnetMask.IsSet()
}

// HasSubnetMask returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasSubnetMask() bool {
	if o != nil && o.SubnetMask.IsSet() {
		return true
	}

	return false
}

// SetSubnetMask gets a reference to the given NullableString and assigns it to the SubnetMask field.
func (o *InlineResponse200107NetworkPool) SetSubnetMask(v string) {
	o.SubnetMask.Set(&v)
}
// SetSubnetMaskNil sets the value for SubnetMask to be an explicit nil
func (o *InlineResponse200107NetworkPool) SetSubnetMaskNil() {
	o.SubnetMask.Set(nil)
}

// UnsetSubnetMask ensures that no value is present for SubnetMask, not even an explicit nil
func (o *InlineResponse200107NetworkPool) UnsetSubnetMask() {
	o.SubnetMask.Unset()
}

// GetDnsServer returns the DnsServer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200107NetworkPool) GetDnsServer() string {
	if o == nil || o.DnsServer.Get() == nil {
		var ret string
		return ret
	}
	return *o.DnsServer.Get()
}

// GetDnsServerOk returns a tuple with the DnsServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200107NetworkPool) GetDnsServerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DnsServer.Get(), o.DnsServer.IsSet()
}

// HasDnsServer returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasDnsServer() bool {
	if o != nil && o.DnsServer.IsSet() {
		return true
	}

	return false
}

// SetDnsServer gets a reference to the given NullableString and assigns it to the DnsServer field.
func (o *InlineResponse200107NetworkPool) SetDnsServer(v string) {
	o.DnsServer.Set(&v)
}
// SetDnsServerNil sets the value for DnsServer to be an explicit nil
func (o *InlineResponse200107NetworkPool) SetDnsServerNil() {
	o.DnsServer.Set(nil)
}

// UnsetDnsServer ensures that no value is present for DnsServer, not even an explicit nil
func (o *InlineResponse200107NetworkPool) UnsetDnsServer() {
	o.DnsServer.Unset()
}

// GetInterfaceName returns the InterfaceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200107NetworkPool) GetInterfaceName() string {
	if o == nil || o.InterfaceName.Get() == nil {
		var ret string
		return ret
	}
	return *o.InterfaceName.Get()
}

// GetInterfaceNameOk returns a tuple with the InterfaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200107NetworkPool) GetInterfaceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InterfaceName.Get(), o.InterfaceName.IsSet()
}

// HasInterfaceName returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasInterfaceName() bool {
	if o != nil && o.InterfaceName.IsSet() {
		return true
	}

	return false
}

// SetInterfaceName gets a reference to the given NullableString and assigns it to the InterfaceName field.
func (o *InlineResponse200107NetworkPool) SetInterfaceName(v string) {
	o.InterfaceName.Set(&v)
}
// SetInterfaceNameNil sets the value for InterfaceName to be an explicit nil
func (o *InlineResponse200107NetworkPool) SetInterfaceNameNil() {
	o.InterfaceName.Set(nil)
}

// UnsetInterfaceName ensures that no value is present for InterfaceName, not even an explicit nil
func (o *InlineResponse200107NetworkPool) UnsetInterfaceName() {
	o.InterfaceName.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200107NetworkPool) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200107NetworkPool) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *InlineResponse200107NetworkPool) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *InlineResponse200107NetworkPool) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *InlineResponse200107NetworkPool) UnsetDescription() {
	o.Description.Unset()
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *InlineResponse200107NetworkPool) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200107NetworkPool) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *InlineResponse200107NetworkPool) SetActive(v bool) {
	o.Active = &v
}

// GetStaticIp returns the StaticIp field value if set, zero value otherwise.
func (o *InlineResponse200107NetworkPool) GetStaticIp() bool {
	if o == nil || o.StaticIp == nil {
		var ret bool
		return ret
	}
	return *o.StaticIp
}

// GetStaticIpOk returns a tuple with the StaticIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200107NetworkPool) GetStaticIpOk() (*bool, bool) {
	if o == nil || o.StaticIp == nil {
		return nil, false
	}
	return o.StaticIp, true
}

// HasStaticIp returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasStaticIp() bool {
	if o != nil && o.StaticIp != nil {
		return true
	}

	return false
}

// SetStaticIp gets a reference to the given bool and assigns it to the StaticIp field.
func (o *InlineResponse200107NetworkPool) SetStaticIp(v bool) {
	o.StaticIp = &v
}

// GetFqdn returns the Fqdn field value if set, zero value otherwise.
func (o *InlineResponse200107NetworkPool) GetFqdn() string {
	if o == nil || o.Fqdn == nil {
		var ret string
		return ret
	}
	return *o.Fqdn
}

// GetFqdnOk returns a tuple with the Fqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200107NetworkPool) GetFqdnOk() (*string, bool) {
	if o == nil || o.Fqdn == nil {
		return nil, false
	}
	return o.Fqdn, true
}

// HasFqdn returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasFqdn() bool {
	if o != nil && o.Fqdn != nil {
		return true
	}

	return false
}

// SetFqdn gets a reference to the given string and assigns it to the Fqdn field.
func (o *InlineResponse200107NetworkPool) SetFqdn(v string) {
	o.Fqdn = &v
}

// GetDomainName returns the DomainName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200107NetworkPool) GetDomainName() string {
	if o == nil || o.DomainName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DomainName.Get()
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200107NetworkPool) GetDomainNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DomainName.Get(), o.DomainName.IsSet()
}

// HasDomainName returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasDomainName() bool {
	if o != nil && o.DomainName.IsSet() {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given NullableString and assigns it to the DomainName field.
func (o *InlineResponse200107NetworkPool) SetDomainName(v string) {
	o.DomainName.Set(&v)
}
// SetDomainNameNil sets the value for DomainName to be an explicit nil
func (o *InlineResponse200107NetworkPool) SetDomainNameNil() {
	o.DomainName.Set(nil)
}

// UnsetDomainName ensures that no value is present for DomainName, not even an explicit nil
func (o *InlineResponse200107NetworkPool) UnsetDomainName() {
	o.DomainName.Unset()
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *InlineResponse200107NetworkPool) GetHostname() string {
	if o == nil || o.Hostname == nil {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200107NetworkPool) GetHostnameOk() (*string, bool) {
	if o == nil || o.Hostname == nil {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasHostname() bool {
	if o != nil && o.Hostname != nil {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *InlineResponse200107NetworkPool) SetHostname(v string) {
	o.Hostname = &v
}

// GetInternalId returns the InternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200107NetworkPool) GetInternalId() string {
	if o == nil || o.InternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.InternalId.Get()
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200107NetworkPool) GetInternalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InternalId.Get(), o.InternalId.IsSet()
}

// HasInternalId returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasInternalId() bool {
	if o != nil && o.InternalId.IsSet() {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given NullableString and assigns it to the InternalId field.
func (o *InlineResponse200107NetworkPool) SetInternalId(v string) {
	o.InternalId.Set(&v)
}
// SetInternalIdNil sets the value for InternalId to be an explicit nil
func (o *InlineResponse200107NetworkPool) SetInternalIdNil() {
	o.InternalId.Set(nil)
}

// UnsetInternalId ensures that no value is present for InternalId, not even an explicit nil
func (o *InlineResponse200107NetworkPool) UnsetInternalId() {
	o.InternalId.Unset()
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200107NetworkPool) GetExternalId() string {
	if o == nil || o.ExternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200107NetworkPool) GetExternalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *InlineResponse200107NetworkPool) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}
// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *InlineResponse200107NetworkPool) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *InlineResponse200107NetworkPool) UnsetExternalId() {
	o.ExternalId.Unset()
}

// GetPtrId returns the PtrId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200107NetworkPool) GetPtrId() string {
	if o == nil || o.PtrId.Get() == nil {
		var ret string
		return ret
	}
	return *o.PtrId.Get()
}

// GetPtrIdOk returns a tuple with the PtrId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200107NetworkPool) GetPtrIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PtrId.Get(), o.PtrId.IsSet()
}

// HasPtrId returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasPtrId() bool {
	if o != nil && o.PtrId.IsSet() {
		return true
	}

	return false
}

// SetPtrId gets a reference to the given NullableString and assigns it to the PtrId field.
func (o *InlineResponse200107NetworkPool) SetPtrId(v string) {
	o.PtrId.Set(&v)
}
// SetPtrIdNil sets the value for PtrId to be an explicit nil
func (o *InlineResponse200107NetworkPool) SetPtrIdNil() {
	o.PtrId.Set(nil)
}

// UnsetPtrId ensures that no value is present for PtrId, not even an explicit nil
func (o *InlineResponse200107NetworkPool) UnsetPtrId() {
	o.PtrId.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *InlineResponse200107NetworkPool) GetDateCreated() time.Time {
	if o == nil || o.DateCreated == nil {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200107NetworkPool) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *InlineResponse200107NetworkPool) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *InlineResponse200107NetworkPool) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200107NetworkPool) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *InlineResponse200107NetworkPool) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *InlineResponse200107NetworkPool) GetStartDate() time.Time {
	if o == nil || o.StartDate == nil {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200107NetworkPool) GetStartDateOk() (*time.Time, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *InlineResponse200107NetworkPool) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *InlineResponse200107NetworkPool) GetEndDate() time.Time {
	if o == nil || o.EndDate == nil {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200107NetworkPool) GetEndDateOk() (*time.Time, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *InlineResponse200107NetworkPool) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetRefType returns the RefType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200107NetworkPool) GetRefType() string {
	if o == nil || o.RefType.Get() == nil {
		var ret string
		return ret
	}
	return *o.RefType.Get()
}

// GetRefTypeOk returns a tuple with the RefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200107NetworkPool) GetRefTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefType.Get(), o.RefType.IsSet()
}

// HasRefType returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasRefType() bool {
	if o != nil && o.RefType.IsSet() {
		return true
	}

	return false
}

// SetRefType gets a reference to the given NullableString and assigns it to the RefType field.
func (o *InlineResponse200107NetworkPool) SetRefType(v string) {
	o.RefType.Set(&v)
}
// SetRefTypeNil sets the value for RefType to be an explicit nil
func (o *InlineResponse200107NetworkPool) SetRefTypeNil() {
	o.RefType.Set(nil)
}

// UnsetRefType ensures that no value is present for RefType, not even an explicit nil
func (o *InlineResponse200107NetworkPool) UnsetRefType() {
	o.RefType.Unset()
}

// GetRefId returns the RefId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200107NetworkPool) GetRefId() string {
	if o == nil || o.RefId.Get() == nil {
		var ret string
		return ret
	}
	return *o.RefId.Get()
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200107NetworkPool) GetRefIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefId.Get(), o.RefId.IsSet()
}

// HasRefId returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasRefId() bool {
	if o != nil && o.RefId.IsSet() {
		return true
	}

	return false
}

// SetRefId gets a reference to the given NullableString and assigns it to the RefId field.
func (o *InlineResponse200107NetworkPool) SetRefId(v string) {
	o.RefId.Set(&v)
}
// SetRefIdNil sets the value for RefId to be an explicit nil
func (o *InlineResponse200107NetworkPool) SetRefIdNil() {
	o.RefId.Set(nil)
}

// UnsetRefId ensures that no value is present for RefId, not even an explicit nil
func (o *InlineResponse200107NetworkPool) UnsetRefId() {
	o.RefId.Unset()
}

// GetSubRefId returns the SubRefId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200107NetworkPool) GetSubRefId() string {
	if o == nil || o.SubRefId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SubRefId.Get()
}

// GetSubRefIdOk returns a tuple with the SubRefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200107NetworkPool) GetSubRefIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubRefId.Get(), o.SubRefId.IsSet()
}

// HasSubRefId returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasSubRefId() bool {
	if o != nil && o.SubRefId.IsSet() {
		return true
	}

	return false
}

// SetSubRefId gets a reference to the given NullableString and assigns it to the SubRefId field.
func (o *InlineResponse200107NetworkPool) SetSubRefId(v string) {
	o.SubRefId.Set(&v)
}
// SetSubRefIdNil sets the value for SubRefId to be an explicit nil
func (o *InlineResponse200107NetworkPool) SetSubRefIdNil() {
	o.SubRefId.Set(nil)
}

// UnsetSubRefId ensures that no value is present for SubRefId, not even an explicit nil
func (o *InlineResponse200107NetworkPool) UnsetSubRefId() {
	o.SubRefId.Unset()
}

// GetNetworkDomain returns the NetworkDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse200107NetworkPool) GetNetworkDomain() string {
	if o == nil || o.NetworkDomain.Get() == nil {
		var ret string
		return ret
	}
	return *o.NetworkDomain.Get()
}

// GetNetworkDomainOk returns a tuple with the NetworkDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse200107NetworkPool) GetNetworkDomainOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetworkDomain.Get(), o.NetworkDomain.IsSet()
}

// HasNetworkDomain returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasNetworkDomain() bool {
	if o != nil && o.NetworkDomain.IsSet() {
		return true
	}

	return false
}

// SetNetworkDomain gets a reference to the given NullableString and assigns it to the NetworkDomain field.
func (o *InlineResponse200107NetworkPool) SetNetworkDomain(v string) {
	o.NetworkDomain.Set(&v)
}
// SetNetworkDomainNil sets the value for NetworkDomain to be an explicit nil
func (o *InlineResponse200107NetworkPool) SetNetworkDomainNil() {
	o.NetworkDomain.Set(nil)
}

// UnsetNetworkDomain ensures that no value is present for NetworkDomain, not even an explicit nil
func (o *InlineResponse200107NetworkPool) UnsetNetworkDomain() {
	o.NetworkDomain.Unset()
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *InlineResponse200107NetworkPool) GetCreatedBy() InlineResponse200107NetworkPoolCreatedBy {
	if o == nil || o.CreatedBy == nil {
		var ret InlineResponse200107NetworkPoolCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200107NetworkPool) GetCreatedByOk() (*InlineResponse200107NetworkPoolCreatedBy, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *InlineResponse200107NetworkPool) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given InlineResponse200107NetworkPoolCreatedBy and assigns it to the CreatedBy field.
func (o *InlineResponse200107NetworkPool) SetCreatedBy(v InlineResponse200107NetworkPoolCreatedBy) {
	o.CreatedBy = &v
}

func (o InlineResponse200107NetworkPool) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.NetworkPoolId != nil {
		toSerialize["networkPoolId"] = o.NetworkPoolId
	}
	if o.IpType != nil {
		toSerialize["ipType"] = o.IpType
	}
	if o.IpAddress != nil {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if o.GatewayAddress.IsSet() {
		toSerialize["gatewayAddress"] = o.GatewayAddress.Get()
	}
	if o.SubnetMask.IsSet() {
		toSerialize["subnetMask"] = o.SubnetMask.Get()
	}
	if o.DnsServer.IsSet() {
		toSerialize["dnsServer"] = o.DnsServer.Get()
	}
	if o.InterfaceName.IsSet() {
		toSerialize["interfaceName"] = o.InterfaceName.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.StaticIp != nil {
		toSerialize["staticIp"] = o.StaticIp
	}
	if o.Fqdn != nil {
		toSerialize["fqdn"] = o.Fqdn
	}
	if o.DomainName.IsSet() {
		toSerialize["domainName"] = o.DomainName.Get()
	}
	if o.Hostname != nil {
		toSerialize["hostname"] = o.Hostname
	}
	if o.InternalId.IsSet() {
		toSerialize["internalId"] = o.InternalId.Get()
	}
	if o.ExternalId.IsSet() {
		toSerialize["externalId"] = o.ExternalId.Get()
	}
	if o.PtrId.IsSet() {
		toSerialize["ptrId"] = o.PtrId.Get()
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if o.StartDate != nil {
		toSerialize["startDate"] = o.StartDate
	}
	if o.EndDate != nil {
		toSerialize["endDate"] = o.EndDate
	}
	if o.RefType.IsSet() {
		toSerialize["refType"] = o.RefType.Get()
	}
	if o.RefId.IsSet() {
		toSerialize["refId"] = o.RefId.Get()
	}
	if o.SubRefId.IsSet() {
		toSerialize["subRefId"] = o.SubRefId.Get()
	}
	if o.NetworkDomain.IsSet() {
		toSerialize["networkDomain"] = o.NetworkDomain.Get()
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200107NetworkPool struct {
	value *InlineResponse200107NetworkPool
	isSet bool
}

func (v NullableInlineResponse200107NetworkPool) Get() *InlineResponse200107NetworkPool {
	return v.value
}

func (v *NullableInlineResponse200107NetworkPool) Set(val *InlineResponse200107NetworkPool) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200107NetworkPool) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200107NetworkPool) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200107NetworkPool(val *InlineResponse200107NetworkPool) *NullableInlineResponse200107NetworkPool {
	return &NullableInlineResponse200107NetworkPool{value: val, isSet: true}
}

func (v NullableInlineResponse200107NetworkPool) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200107NetworkPool) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


