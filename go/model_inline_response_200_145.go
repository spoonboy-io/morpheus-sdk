/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200145 struct for InlineResponse200145
type InlineResponse200145 struct {
	StorageBucket *StorageBucket `json:"storageBucket,omitempty"`
}

// NewInlineResponse200145 instantiates a new InlineResponse200145 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200145() *InlineResponse200145 {
	this := InlineResponse200145{}
	return &this
}

// NewInlineResponse200145WithDefaults instantiates a new InlineResponse200145 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200145WithDefaults() *InlineResponse200145 {
	this := InlineResponse200145{}
	return &this
}

// GetStorageBucket returns the StorageBucket field value if set, zero value otherwise.
func (o *InlineResponse200145) GetStorageBucket() StorageBucket {
	if o == nil || o.StorageBucket == nil {
		var ret StorageBucket
		return ret
	}
	return *o.StorageBucket
}

// GetStorageBucketOk returns a tuple with the StorageBucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200145) GetStorageBucketOk() (*StorageBucket, bool) {
	if o == nil || o.StorageBucket == nil {
		return nil, false
	}
	return o.StorageBucket, true
}

// HasStorageBucket returns a boolean if a field has been set.
func (o *InlineResponse200145) HasStorageBucket() bool {
	if o != nil && o.StorageBucket != nil {
		return true
	}

	return false
}

// SetStorageBucket gets a reference to the given StorageBucket and assigns it to the StorageBucket field.
func (o *InlineResponse200145) SetStorageBucket(v StorageBucket) {
	o.StorageBucket = &v
}

func (o InlineResponse200145) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StorageBucket != nil {
		toSerialize["storageBucket"] = o.StorageBucket
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200145 struct {
	value *InlineResponse200145
	isSet bool
}

func (v NullableInlineResponse200145) Get() *InlineResponse200145 {
	return v.value
}

func (v *NullableInlineResponse200145) Set(val *InlineResponse200145) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200145) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200145) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200145(val *InlineResponse200145) *NullableInlineResponse200145 {
	return &NullableInlineResponse200145{value: val, isSet: true}
}

func (v NullableInlineResponse200145) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200145) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


