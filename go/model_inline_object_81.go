/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject81 struct for InlineObject81
type InlineObject81 struct {
	Alarm ApiHealthAlarmsIdAcknowledgeAlarm `json:"alarm"`
}

// NewInlineObject81 instantiates a new InlineObject81 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject81(alarm ApiHealthAlarmsIdAcknowledgeAlarm, ) *InlineObject81 {
	this := InlineObject81{}
	this.Alarm = alarm
	return &this
}

// NewInlineObject81WithDefaults instantiates a new InlineObject81 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject81WithDefaults() *InlineObject81 {
	this := InlineObject81{}
	return &this
}

// GetAlarm returns the Alarm field value
func (o *InlineObject81) GetAlarm() ApiHealthAlarmsIdAcknowledgeAlarm {
	if o == nil  {
		var ret ApiHealthAlarmsIdAcknowledgeAlarm
		return ret
	}

	return o.Alarm
}

// GetAlarmOk returns a tuple with the Alarm field value
// and a boolean to check if the value has been set.
func (o *InlineObject81) GetAlarmOk() (*ApiHealthAlarmsIdAcknowledgeAlarm, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Alarm, true
}

// SetAlarm sets field value
func (o *InlineObject81) SetAlarm(v ApiHealthAlarmsIdAcknowledgeAlarm) {
	o.Alarm = v
}

func (o InlineObject81) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["alarm"] = o.Alarm
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject81 struct {
	value *InlineObject81
	isSet bool
}

func (v NullableInlineObject81) Get() *InlineObject81 {
	return v.value
}

func (v *NullableInlineObject81) Set(val *InlineObject81) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject81) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject81) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject81(val *InlineObject81) *NullableInlineObject81 {
	return &NullableInlineObject81{value: val, isSet: true}
}

func (v NullableInlineObject81) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject81) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


