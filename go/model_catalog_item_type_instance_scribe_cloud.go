/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CatalogItemTypeInstanceScribeCloud struct for CatalogItemTypeInstanceScribeCloud
type CatalogItemTypeInstanceScribeCloud struct {
	Id OneOfstringlong `json:"id"`
	// The cloud name
	Name *string `json:"name,omitempty"`
}

// NewCatalogItemTypeInstanceScribeCloud instantiates a new CatalogItemTypeInstanceScribeCloud object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogItemTypeInstanceScribeCloud(id OneOfstringlong, ) *CatalogItemTypeInstanceScribeCloud {
	this := CatalogItemTypeInstanceScribeCloud{}
	this.Id = id
	return &this
}

// NewCatalogItemTypeInstanceScribeCloudWithDefaults instantiates a new CatalogItemTypeInstanceScribeCloud object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogItemTypeInstanceScribeCloudWithDefaults() *CatalogItemTypeInstanceScribeCloud {
	this := CatalogItemTypeInstanceScribeCloud{}
	return &this
}

// GetId returns the Id field value
func (o *CatalogItemTypeInstanceScribeCloud) GetId() OneOfstringlong {
	if o == nil  {
		var ret OneOfstringlong
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribeCloud) GetIdOk() (*OneOfstringlong, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CatalogItemTypeInstanceScribeCloud) SetId(v OneOfstringlong) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CatalogItemTypeInstanceScribeCloud) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribeCloud) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CatalogItemTypeInstanceScribeCloud) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CatalogItemTypeInstanceScribeCloud) SetName(v string) {
	o.Name = &v
}

func (o CatalogItemTypeInstanceScribeCloud) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableCatalogItemTypeInstanceScribeCloud struct {
	value *CatalogItemTypeInstanceScribeCloud
	isSet bool
}

func (v NullableCatalogItemTypeInstanceScribeCloud) Get() *CatalogItemTypeInstanceScribeCloud {
	return v.value
}

func (v *NullableCatalogItemTypeInstanceScribeCloud) Set(val *CatalogItemTypeInstanceScribeCloud) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogItemTypeInstanceScribeCloud) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogItemTypeInstanceScribeCloud) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogItemTypeInstanceScribeCloud(val *CatalogItemTypeInstanceScribeCloud) *NullableCatalogItemTypeInstanceScribeCloud {
	return &NullableCatalogItemTypeInstanceScribeCloud{value: val, isSet: true}
}

func (v NullableCatalogItemTypeInstanceScribeCloud) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogItemTypeInstanceScribeCloud) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


