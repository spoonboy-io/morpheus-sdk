/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200160 struct for InlineResponse200160
type InlineResponse200160 struct {
	VdiApp *VdiApp `json:"vdiApp,omitempty"`
}

// NewInlineResponse200160 instantiates a new InlineResponse200160 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200160() *InlineResponse200160 {
	this := InlineResponse200160{}
	return &this
}

// NewInlineResponse200160WithDefaults instantiates a new InlineResponse200160 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200160WithDefaults() *InlineResponse200160 {
	this := InlineResponse200160{}
	return &this
}

// GetVdiApp returns the VdiApp field value if set, zero value otherwise.
func (o *InlineResponse200160) GetVdiApp() VdiApp {
	if o == nil || o.VdiApp == nil {
		var ret VdiApp
		return ret
	}
	return *o.VdiApp
}

// GetVdiAppOk returns a tuple with the VdiApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200160) GetVdiAppOk() (*VdiApp, bool) {
	if o == nil || o.VdiApp == nil {
		return nil, false
	}
	return o.VdiApp, true
}

// HasVdiApp returns a boolean if a field has been set.
func (o *InlineResponse200160) HasVdiApp() bool {
	if o != nil && o.VdiApp != nil {
		return true
	}

	return false
}

// SetVdiApp gets a reference to the given VdiApp and assigns it to the VdiApp field.
func (o *InlineResponse200160) SetVdiApp(v VdiApp) {
	o.VdiApp = &v
}

func (o InlineResponse200160) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VdiApp != nil {
		toSerialize["vdiApp"] = o.VdiApp
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200160 struct {
	value *InlineResponse200160
	isSet bool
}

func (v NullableInlineResponse200160) Get() *InlineResponse200160 {
	return v.value
}

func (v *NullableInlineResponse200160) Set(val *InlineResponse200160) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200160) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200160) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200160(val *InlineResponse200160) *NullableInlineResponse200160 {
	return &NullableInlineResponse200160{value: val, isSet: true}
}

func (v NullableInlineResponse200160) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200160) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


