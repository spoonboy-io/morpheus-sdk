/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200102 struct for InlineResponse200102
type InlineResponse200102 struct {
	NetworkRouterNATs *[]NetworkRouterNat `json:"networkRouterNATs,omitempty"`
}

// NewInlineResponse200102 instantiates a new InlineResponse200102 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200102() *InlineResponse200102 {
	this := InlineResponse200102{}
	return &this
}

// NewInlineResponse200102WithDefaults instantiates a new InlineResponse200102 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200102WithDefaults() *InlineResponse200102 {
	this := InlineResponse200102{}
	return &this
}

// GetNetworkRouterNATs returns the NetworkRouterNATs field value if set, zero value otherwise.
func (o *InlineResponse200102) GetNetworkRouterNATs() []NetworkRouterNat {
	if o == nil || o.NetworkRouterNATs == nil {
		var ret []NetworkRouterNat
		return ret
	}
	return *o.NetworkRouterNATs
}

// GetNetworkRouterNATsOk returns a tuple with the NetworkRouterNATs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200102) GetNetworkRouterNATsOk() (*[]NetworkRouterNat, bool) {
	if o == nil || o.NetworkRouterNATs == nil {
		return nil, false
	}
	return o.NetworkRouterNATs, true
}

// HasNetworkRouterNATs returns a boolean if a field has been set.
func (o *InlineResponse200102) HasNetworkRouterNATs() bool {
	if o != nil && o.NetworkRouterNATs != nil {
		return true
	}

	return false
}

// SetNetworkRouterNATs gets a reference to the given []NetworkRouterNat and assigns it to the NetworkRouterNATs field.
func (o *InlineResponse200102) SetNetworkRouterNATs(v []NetworkRouterNat) {
	o.NetworkRouterNATs = &v
}

func (o InlineResponse200102) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkRouterNATs != nil {
		toSerialize["networkRouterNATs"] = o.NetworkRouterNATs
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200102 struct {
	value *InlineResponse200102
	isSet bool
}

func (v NullableInlineResponse200102) Get() *InlineResponse200102 {
	return v.value
}

func (v *NullableInlineResponse200102) Set(val *InlineResponse200102) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200102) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200102) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200102(val *InlineResponse200102) *NullableInlineResponse200102 {
	return &NullableInlineResponse200102{value: val, isSet: true}
}

func (v NullableInlineResponse200102) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200102) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


