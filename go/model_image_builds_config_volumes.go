/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ImageBuildsConfigVolumes struct for ImageBuildsConfigVolumes
type ImageBuildsConfigVolumes struct {
	VolumeCustomizable *bool `json:"volumeCustomizable,omitempty"`
	VId *int64 `json:"vId,omitempty"`
	ReadonlyName *bool `json:"readonlyName,omitempty"`
	Size *int64 `json:"size,omitempty"`
	MaxIOPS NullableString `json:"maxIOPS,omitempty"`
	Name *string `json:"name,omitempty"`
	RootVolume *bool `json:"rootVolume,omitempty"`
	StorageType *int64 `json:"storageType,omitempty"`
	DatastoreId *string `json:"datastoreId,omitempty"`
	MaxStorage *int64 `json:"maxStorage,omitempty"`
}

// NewImageBuildsConfigVolumes instantiates a new ImageBuildsConfigVolumes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageBuildsConfigVolumes() *ImageBuildsConfigVolumes {
	this := ImageBuildsConfigVolumes{}
	return &this
}

// NewImageBuildsConfigVolumesWithDefaults instantiates a new ImageBuildsConfigVolumes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageBuildsConfigVolumesWithDefaults() *ImageBuildsConfigVolumes {
	this := ImageBuildsConfigVolumes{}
	return &this
}

// GetVolumeCustomizable returns the VolumeCustomizable field value if set, zero value otherwise.
func (o *ImageBuildsConfigVolumes) GetVolumeCustomizable() bool {
	if o == nil || o.VolumeCustomizable == nil {
		var ret bool
		return ret
	}
	return *o.VolumeCustomizable
}

// GetVolumeCustomizableOk returns a tuple with the VolumeCustomizable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuildsConfigVolumes) GetVolumeCustomizableOk() (*bool, bool) {
	if o == nil || o.VolumeCustomizable == nil {
		return nil, false
	}
	return o.VolumeCustomizable, true
}

// HasVolumeCustomizable returns a boolean if a field has been set.
func (o *ImageBuildsConfigVolumes) HasVolumeCustomizable() bool {
	if o != nil && o.VolumeCustomizable != nil {
		return true
	}

	return false
}

// SetVolumeCustomizable gets a reference to the given bool and assigns it to the VolumeCustomizable field.
func (o *ImageBuildsConfigVolumes) SetVolumeCustomizable(v bool) {
	o.VolumeCustomizable = &v
}

// GetVId returns the VId field value if set, zero value otherwise.
func (o *ImageBuildsConfigVolumes) GetVId() int64 {
	if o == nil || o.VId == nil {
		var ret int64
		return ret
	}
	return *o.VId
}

// GetVIdOk returns a tuple with the VId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuildsConfigVolumes) GetVIdOk() (*int64, bool) {
	if o == nil || o.VId == nil {
		return nil, false
	}
	return o.VId, true
}

// HasVId returns a boolean if a field has been set.
func (o *ImageBuildsConfigVolumes) HasVId() bool {
	if o != nil && o.VId != nil {
		return true
	}

	return false
}

// SetVId gets a reference to the given int64 and assigns it to the VId field.
func (o *ImageBuildsConfigVolumes) SetVId(v int64) {
	o.VId = &v
}

// GetReadonlyName returns the ReadonlyName field value if set, zero value otherwise.
func (o *ImageBuildsConfigVolumes) GetReadonlyName() bool {
	if o == nil || o.ReadonlyName == nil {
		var ret bool
		return ret
	}
	return *o.ReadonlyName
}

// GetReadonlyNameOk returns a tuple with the ReadonlyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuildsConfigVolumes) GetReadonlyNameOk() (*bool, bool) {
	if o == nil || o.ReadonlyName == nil {
		return nil, false
	}
	return o.ReadonlyName, true
}

// HasReadonlyName returns a boolean if a field has been set.
func (o *ImageBuildsConfigVolumes) HasReadonlyName() bool {
	if o != nil && o.ReadonlyName != nil {
		return true
	}

	return false
}

// SetReadonlyName gets a reference to the given bool and assigns it to the ReadonlyName field.
func (o *ImageBuildsConfigVolumes) SetReadonlyName(v bool) {
	o.ReadonlyName = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *ImageBuildsConfigVolumes) GetSize() int64 {
	if o == nil || o.Size == nil {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuildsConfigVolumes) GetSizeOk() (*int64, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *ImageBuildsConfigVolumes) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *ImageBuildsConfigVolumes) SetSize(v int64) {
	o.Size = &v
}

// GetMaxIOPS returns the MaxIOPS field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageBuildsConfigVolumes) GetMaxIOPS() string {
	if o == nil || o.MaxIOPS.Get() == nil {
		var ret string
		return ret
	}
	return *o.MaxIOPS.Get()
}

// GetMaxIOPSOk returns a tuple with the MaxIOPS field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageBuildsConfigVolumes) GetMaxIOPSOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxIOPS.Get(), o.MaxIOPS.IsSet()
}

// HasMaxIOPS returns a boolean if a field has been set.
func (o *ImageBuildsConfigVolumes) HasMaxIOPS() bool {
	if o != nil && o.MaxIOPS.IsSet() {
		return true
	}

	return false
}

// SetMaxIOPS gets a reference to the given NullableString and assigns it to the MaxIOPS field.
func (o *ImageBuildsConfigVolumes) SetMaxIOPS(v string) {
	o.MaxIOPS.Set(&v)
}
// SetMaxIOPSNil sets the value for MaxIOPS to be an explicit nil
func (o *ImageBuildsConfigVolumes) SetMaxIOPSNil() {
	o.MaxIOPS.Set(nil)
}

// UnsetMaxIOPS ensures that no value is present for MaxIOPS, not even an explicit nil
func (o *ImageBuildsConfigVolumes) UnsetMaxIOPS() {
	o.MaxIOPS.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ImageBuildsConfigVolumes) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuildsConfigVolumes) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ImageBuildsConfigVolumes) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ImageBuildsConfigVolumes) SetName(v string) {
	o.Name = &v
}

// GetRootVolume returns the RootVolume field value if set, zero value otherwise.
func (o *ImageBuildsConfigVolumes) GetRootVolume() bool {
	if o == nil || o.RootVolume == nil {
		var ret bool
		return ret
	}
	return *o.RootVolume
}

// GetRootVolumeOk returns a tuple with the RootVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuildsConfigVolumes) GetRootVolumeOk() (*bool, bool) {
	if o == nil || o.RootVolume == nil {
		return nil, false
	}
	return o.RootVolume, true
}

// HasRootVolume returns a boolean if a field has been set.
func (o *ImageBuildsConfigVolumes) HasRootVolume() bool {
	if o != nil && o.RootVolume != nil {
		return true
	}

	return false
}

// SetRootVolume gets a reference to the given bool and assigns it to the RootVolume field.
func (o *ImageBuildsConfigVolumes) SetRootVolume(v bool) {
	o.RootVolume = &v
}

// GetStorageType returns the StorageType field value if set, zero value otherwise.
func (o *ImageBuildsConfigVolumes) GetStorageType() int64 {
	if o == nil || o.StorageType == nil {
		var ret int64
		return ret
	}
	return *o.StorageType
}

// GetStorageTypeOk returns a tuple with the StorageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuildsConfigVolumes) GetStorageTypeOk() (*int64, bool) {
	if o == nil || o.StorageType == nil {
		return nil, false
	}
	return o.StorageType, true
}

// HasStorageType returns a boolean if a field has been set.
func (o *ImageBuildsConfigVolumes) HasStorageType() bool {
	if o != nil && o.StorageType != nil {
		return true
	}

	return false
}

// SetStorageType gets a reference to the given int64 and assigns it to the StorageType field.
func (o *ImageBuildsConfigVolumes) SetStorageType(v int64) {
	o.StorageType = &v
}

// GetDatastoreId returns the DatastoreId field value if set, zero value otherwise.
func (o *ImageBuildsConfigVolumes) GetDatastoreId() string {
	if o == nil || o.DatastoreId == nil {
		var ret string
		return ret
	}
	return *o.DatastoreId
}

// GetDatastoreIdOk returns a tuple with the DatastoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuildsConfigVolumes) GetDatastoreIdOk() (*string, bool) {
	if o == nil || o.DatastoreId == nil {
		return nil, false
	}
	return o.DatastoreId, true
}

// HasDatastoreId returns a boolean if a field has been set.
func (o *ImageBuildsConfigVolumes) HasDatastoreId() bool {
	if o != nil && o.DatastoreId != nil {
		return true
	}

	return false
}

// SetDatastoreId gets a reference to the given string and assigns it to the DatastoreId field.
func (o *ImageBuildsConfigVolumes) SetDatastoreId(v string) {
	o.DatastoreId = &v
}

// GetMaxStorage returns the MaxStorage field value if set, zero value otherwise.
func (o *ImageBuildsConfigVolumes) GetMaxStorage() int64 {
	if o == nil || o.MaxStorage == nil {
		var ret int64
		return ret
	}
	return *o.MaxStorage
}

// GetMaxStorageOk returns a tuple with the MaxStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuildsConfigVolumes) GetMaxStorageOk() (*int64, bool) {
	if o == nil || o.MaxStorage == nil {
		return nil, false
	}
	return o.MaxStorage, true
}

// HasMaxStorage returns a boolean if a field has been set.
func (o *ImageBuildsConfigVolumes) HasMaxStorage() bool {
	if o != nil && o.MaxStorage != nil {
		return true
	}

	return false
}

// SetMaxStorage gets a reference to the given int64 and assigns it to the MaxStorage field.
func (o *ImageBuildsConfigVolumes) SetMaxStorage(v int64) {
	o.MaxStorage = &v
}

func (o ImageBuildsConfigVolumes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VolumeCustomizable != nil {
		toSerialize["volumeCustomizable"] = o.VolumeCustomizable
	}
	if o.VId != nil {
		toSerialize["vId"] = o.VId
	}
	if o.ReadonlyName != nil {
		toSerialize["readonlyName"] = o.ReadonlyName
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.MaxIOPS.IsSet() {
		toSerialize["maxIOPS"] = o.MaxIOPS.Get()
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.RootVolume != nil {
		toSerialize["rootVolume"] = o.RootVolume
	}
	if o.StorageType != nil {
		toSerialize["storageType"] = o.StorageType
	}
	if o.DatastoreId != nil {
		toSerialize["datastoreId"] = o.DatastoreId
	}
	if o.MaxStorage != nil {
		toSerialize["maxStorage"] = o.MaxStorage
	}
	return json.Marshal(toSerialize)
}

type NullableImageBuildsConfigVolumes struct {
	value *ImageBuildsConfigVolumes
	isSet bool
}

func (v NullableImageBuildsConfigVolumes) Get() *ImageBuildsConfigVolumes {
	return v.value
}

func (v *NullableImageBuildsConfigVolumes) Set(val *ImageBuildsConfigVolumes) {
	v.value = val
	v.isSet = true
}

func (v NullableImageBuildsConfigVolumes) IsSet() bool {
	return v.isSet
}

func (v *NullableImageBuildsConfigVolumes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageBuildsConfigVolumes(val *ImageBuildsConfigVolumes) *NullableImageBuildsConfigVolumes {
	return &NullableImageBuildsConfigVolumes{value: val, isSet: true}
}

func (v NullableImageBuildsConfigVolumes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageBuildsConfigVolumes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


