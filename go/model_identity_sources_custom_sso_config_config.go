/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IdentitySourcesCustomSSOConfigConfig struct for IdentitySourcesCustomSSOConfigConfig
type IdentitySourcesCustomSSOConfigConfig struct {
	Noninteractive *bool `json:"noninteractive,omitempty"`
	LoginUrl *string `json:"loginUrl,omitempty"`
	LogoutUrl *string `json:"logoutUrl,omitempty"`
	EncryptionAlgo *string `json:"encryptionAlgo,omitempty"`
	EncryptionKey *string `json:"encryptionKey,omitempty"`
	RequiredAttributeValue *string `json:"requiredAttributeValue,omitempty"`
}

// NewIdentitySourcesCustomSSOConfigConfig instantiates a new IdentitySourcesCustomSSOConfigConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentitySourcesCustomSSOConfigConfig() *IdentitySourcesCustomSSOConfigConfig {
	this := IdentitySourcesCustomSSOConfigConfig{}
	return &this
}

// NewIdentitySourcesCustomSSOConfigConfigWithDefaults instantiates a new IdentitySourcesCustomSSOConfigConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentitySourcesCustomSSOConfigConfigWithDefaults() *IdentitySourcesCustomSSOConfigConfig {
	this := IdentitySourcesCustomSSOConfigConfig{}
	return &this
}

// GetNoninteractive returns the Noninteractive field value if set, zero value otherwise.
func (o *IdentitySourcesCustomSSOConfigConfig) GetNoninteractive() bool {
	if o == nil || o.Noninteractive == nil {
		var ret bool
		return ret
	}
	return *o.Noninteractive
}

// GetNoninteractiveOk returns a tuple with the Noninteractive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesCustomSSOConfigConfig) GetNoninteractiveOk() (*bool, bool) {
	if o == nil || o.Noninteractive == nil {
		return nil, false
	}
	return o.Noninteractive, true
}

// HasNoninteractive returns a boolean if a field has been set.
func (o *IdentitySourcesCustomSSOConfigConfig) HasNoninteractive() bool {
	if o != nil && o.Noninteractive != nil {
		return true
	}

	return false
}

// SetNoninteractive gets a reference to the given bool and assigns it to the Noninteractive field.
func (o *IdentitySourcesCustomSSOConfigConfig) SetNoninteractive(v bool) {
	o.Noninteractive = &v
}

// GetLoginUrl returns the LoginUrl field value if set, zero value otherwise.
func (o *IdentitySourcesCustomSSOConfigConfig) GetLoginUrl() string {
	if o == nil || o.LoginUrl == nil {
		var ret string
		return ret
	}
	return *o.LoginUrl
}

// GetLoginUrlOk returns a tuple with the LoginUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesCustomSSOConfigConfig) GetLoginUrlOk() (*string, bool) {
	if o == nil || o.LoginUrl == nil {
		return nil, false
	}
	return o.LoginUrl, true
}

// HasLoginUrl returns a boolean if a field has been set.
func (o *IdentitySourcesCustomSSOConfigConfig) HasLoginUrl() bool {
	if o != nil && o.LoginUrl != nil {
		return true
	}

	return false
}

// SetLoginUrl gets a reference to the given string and assigns it to the LoginUrl field.
func (o *IdentitySourcesCustomSSOConfigConfig) SetLoginUrl(v string) {
	o.LoginUrl = &v
}

// GetLogoutUrl returns the LogoutUrl field value if set, zero value otherwise.
func (o *IdentitySourcesCustomSSOConfigConfig) GetLogoutUrl() string {
	if o == nil || o.LogoutUrl == nil {
		var ret string
		return ret
	}
	return *o.LogoutUrl
}

// GetLogoutUrlOk returns a tuple with the LogoutUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesCustomSSOConfigConfig) GetLogoutUrlOk() (*string, bool) {
	if o == nil || o.LogoutUrl == nil {
		return nil, false
	}
	return o.LogoutUrl, true
}

// HasLogoutUrl returns a boolean if a field has been set.
func (o *IdentitySourcesCustomSSOConfigConfig) HasLogoutUrl() bool {
	if o != nil && o.LogoutUrl != nil {
		return true
	}

	return false
}

// SetLogoutUrl gets a reference to the given string and assigns it to the LogoutUrl field.
func (o *IdentitySourcesCustomSSOConfigConfig) SetLogoutUrl(v string) {
	o.LogoutUrl = &v
}

// GetEncryptionAlgo returns the EncryptionAlgo field value if set, zero value otherwise.
func (o *IdentitySourcesCustomSSOConfigConfig) GetEncryptionAlgo() string {
	if o == nil || o.EncryptionAlgo == nil {
		var ret string
		return ret
	}
	return *o.EncryptionAlgo
}

// GetEncryptionAlgoOk returns a tuple with the EncryptionAlgo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesCustomSSOConfigConfig) GetEncryptionAlgoOk() (*string, bool) {
	if o == nil || o.EncryptionAlgo == nil {
		return nil, false
	}
	return o.EncryptionAlgo, true
}

// HasEncryptionAlgo returns a boolean if a field has been set.
func (o *IdentitySourcesCustomSSOConfigConfig) HasEncryptionAlgo() bool {
	if o != nil && o.EncryptionAlgo != nil {
		return true
	}

	return false
}

// SetEncryptionAlgo gets a reference to the given string and assigns it to the EncryptionAlgo field.
func (o *IdentitySourcesCustomSSOConfigConfig) SetEncryptionAlgo(v string) {
	o.EncryptionAlgo = &v
}

// GetEncryptionKey returns the EncryptionKey field value if set, zero value otherwise.
func (o *IdentitySourcesCustomSSOConfigConfig) GetEncryptionKey() string {
	if o == nil || o.EncryptionKey == nil {
		var ret string
		return ret
	}
	return *o.EncryptionKey
}

// GetEncryptionKeyOk returns a tuple with the EncryptionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesCustomSSOConfigConfig) GetEncryptionKeyOk() (*string, bool) {
	if o == nil || o.EncryptionKey == nil {
		return nil, false
	}
	return o.EncryptionKey, true
}

// HasEncryptionKey returns a boolean if a field has been set.
func (o *IdentitySourcesCustomSSOConfigConfig) HasEncryptionKey() bool {
	if o != nil && o.EncryptionKey != nil {
		return true
	}

	return false
}

// SetEncryptionKey gets a reference to the given string and assigns it to the EncryptionKey field.
func (o *IdentitySourcesCustomSSOConfigConfig) SetEncryptionKey(v string) {
	o.EncryptionKey = &v
}

// GetRequiredAttributeValue returns the RequiredAttributeValue field value if set, zero value otherwise.
func (o *IdentitySourcesCustomSSOConfigConfig) GetRequiredAttributeValue() string {
	if o == nil || o.RequiredAttributeValue == nil {
		var ret string
		return ret
	}
	return *o.RequiredAttributeValue
}

// GetRequiredAttributeValueOk returns a tuple with the RequiredAttributeValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesCustomSSOConfigConfig) GetRequiredAttributeValueOk() (*string, bool) {
	if o == nil || o.RequiredAttributeValue == nil {
		return nil, false
	}
	return o.RequiredAttributeValue, true
}

// HasRequiredAttributeValue returns a boolean if a field has been set.
func (o *IdentitySourcesCustomSSOConfigConfig) HasRequiredAttributeValue() bool {
	if o != nil && o.RequiredAttributeValue != nil {
		return true
	}

	return false
}

// SetRequiredAttributeValue gets a reference to the given string and assigns it to the RequiredAttributeValue field.
func (o *IdentitySourcesCustomSSOConfigConfig) SetRequiredAttributeValue(v string) {
	o.RequiredAttributeValue = &v
}

func (o IdentitySourcesCustomSSOConfigConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Noninteractive != nil {
		toSerialize["noninteractive"] = o.Noninteractive
	}
	if o.LoginUrl != nil {
		toSerialize["loginUrl"] = o.LoginUrl
	}
	if o.LogoutUrl != nil {
		toSerialize["logoutUrl"] = o.LogoutUrl
	}
	if o.EncryptionAlgo != nil {
		toSerialize["encryptionAlgo"] = o.EncryptionAlgo
	}
	if o.EncryptionKey != nil {
		toSerialize["encryptionKey"] = o.EncryptionKey
	}
	if o.RequiredAttributeValue != nil {
		toSerialize["requiredAttributeValue"] = o.RequiredAttributeValue
	}
	return json.Marshal(toSerialize)
}

type NullableIdentitySourcesCustomSSOConfigConfig struct {
	value *IdentitySourcesCustomSSOConfigConfig
	isSet bool
}

func (v NullableIdentitySourcesCustomSSOConfigConfig) Get() *IdentitySourcesCustomSSOConfigConfig {
	return v.value
}

func (v *NullableIdentitySourcesCustomSSOConfigConfig) Set(val *IdentitySourcesCustomSSOConfigConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentitySourcesCustomSSOConfigConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentitySourcesCustomSSOConfigConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentitySourcesCustomSSOConfigConfig(val *IdentitySourcesCustomSSOConfigConfig) *NullableIdentitySourcesCustomSSOConfigConfig {
	return &NullableIdentitySourcesCustomSSOConfigConfig{value: val, isSet: true}
}

func (v NullableIdentitySourcesCustomSSOConfigConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentitySourcesCustomSSOConfigConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


