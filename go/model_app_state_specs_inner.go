/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AppStateSpecsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppStateSpecsInner{}

// AppStateSpecsInner struct for AppStateSpecsInner
type AppStateSpecsInner struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Template *AppStateSpecsInnerTemplate `json:"template,omitempty"`
	Isolated *bool `json:"isolated,omitempty"`
}

// NewAppStateSpecsInner instantiates a new AppStateSpecsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppStateSpecsInner() *AppStateSpecsInner {
	this := AppStateSpecsInner{}
	return &this
}

// NewAppStateSpecsInnerWithDefaults instantiates a new AppStateSpecsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppStateSpecsInnerWithDefaults() *AppStateSpecsInner {
	this := AppStateSpecsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AppStateSpecsInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStateSpecsInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AppStateSpecsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *AppStateSpecsInner) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AppStateSpecsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStateSpecsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AppStateSpecsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AppStateSpecsInner) SetName(v string) {
	o.Name = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *AppStateSpecsInner) GetTemplate() AppStateSpecsInnerTemplate {
	if o == nil || IsNil(o.Template) {
		var ret AppStateSpecsInnerTemplate
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStateSpecsInner) GetTemplateOk() (*AppStateSpecsInnerTemplate, bool) {
	if o == nil || IsNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *AppStateSpecsInner) HasTemplate() bool {
	if o != nil && !IsNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given AppStateSpecsInnerTemplate and assigns it to the Template field.
func (o *AppStateSpecsInner) SetTemplate(v AppStateSpecsInnerTemplate) {
	o.Template = &v
}

// GetIsolated returns the Isolated field value if set, zero value otherwise.
func (o *AppStateSpecsInner) GetIsolated() bool {
	if o == nil || IsNil(o.Isolated) {
		var ret bool
		return ret
	}
	return *o.Isolated
}

// GetIsolatedOk returns a tuple with the Isolated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStateSpecsInner) GetIsolatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Isolated) {
		return nil, false
	}
	return o.Isolated, true
}

// HasIsolated returns a boolean if a field has been set.
func (o *AppStateSpecsInner) HasIsolated() bool {
	if o != nil && !IsNil(o.Isolated) {
		return true
	}

	return false
}

// SetIsolated gets a reference to the given bool and assigns it to the Isolated field.
func (o *AppStateSpecsInner) SetIsolated(v bool) {
	o.Isolated = &v
}

func (o AppStateSpecsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppStateSpecsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Template) {
		toSerialize["template"] = o.Template
	}
	if !IsNil(o.Isolated) {
		toSerialize["isolated"] = o.Isolated
	}
	return toSerialize, nil
}

type NullableAppStateSpecsInner struct {
	value *AppStateSpecsInner
	isSet bool
}

func (v NullableAppStateSpecsInner) Get() *AppStateSpecsInner {
	return v.value
}

func (v *NullableAppStateSpecsInner) Set(val *AppStateSpecsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAppStateSpecsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAppStateSpecsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppStateSpecsInner(val *AppStateSpecsInner) *NullableAppStateSpecsInner {
	return &NullableAppStateSpecsInner{value: val, isSet: true}
}

func (v NullableAppStateSpecsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppStateSpecsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


