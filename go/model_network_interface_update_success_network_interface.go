/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetworkInterfaceUpdateSuccessNetworkInterface struct for NetworkInterfaceUpdateSuccessNetworkInterface
type NetworkInterfaceUpdateSuccessNetworkInterface struct {
	Id *int64 `json:"id,omitempty"`
	Addresses *[]map[string]interface{} `json:"addresses,omitempty"`
	InternalId NullableString `json:"internalId,omitempty"`
	InterfaceId NullableString `json:"interfaceId,omitempty"`
	DisplayOrder *int64 `json:"displayOrder,omitempty"`
	NetworkPool map[string]interface{} `json:"networkPool,omitempty"`
	Dhcp *bool `json:"dhcp,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	Active *bool `json:"active,omitempty"`
	UniqueId *string `json:"uniqueId,omitempty"`
	Subnet NullableString `json:"subnet,omitempty"`
	ReplaceHostRecord *bool `json:"replaceHostRecord,omitempty"`
	IpMode *string `json:"ipMode,omitempty"`
	Version NullableString `json:"version,omitempty"`
	IpSubnet NullableString `json:"ipSubnet,omitempty"`
	Config NullableString `json:"config,omitempty"`
	PublicIpAddress *string `json:"publicIpAddress,omitempty"`
	FabricId NullableString `json:"fabricId,omitempty"`
	Ipv6Subnet NullableString `json:"ipv6Subnet,omitempty"`
	MacAddress *string `json:"macAddress,omitempty"`
	PublicIpv6Address NullableString `json:"publicIpv6Address,omitempty"`
	RefType NullableString `json:"refType,omitempty"`
	NetworkGroup NullableString `json:"networkGroup,omitempty"`
	RefId NullableString `json:"refId,omitempty"`
	NetworkDomain NullableString `json:"networkDomain,omitempty"`
	Name *string `json:"name,omitempty"`
	PrimaryInterface *bool `json:"primaryInterface,omitempty"`
	NetworkPoolIPv6 map[string]interface{} `json:"networkPoolIPv6,omitempty"`
	Network *ApiBlueprintsIdUpdatePermissionsResourcePermissionSites `json:"network,omitempty"`
	VlanId NullableString `json:"vlanId,omitempty"`
	Type *ApiBlueprintsIdUpdatePermissionsResourcePermissionSites `json:"type,omitempty"`
	NetworkPosition NullableString `json:"networkPosition,omitempty"`
	PoolAssigned *bool `json:"poolAssigned,omitempty"`
	Description *string `json:"description,omitempty"`
	ExternalType NullableString `json:"externalType,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
}

// NewNetworkInterfaceUpdateSuccessNetworkInterface instantiates a new NetworkInterfaceUpdateSuccessNetworkInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkInterfaceUpdateSuccessNetworkInterface() *NetworkInterfaceUpdateSuccessNetworkInterface {
	this := NetworkInterfaceUpdateSuccessNetworkInterface{}
	return &this
}

// NewNetworkInterfaceUpdateSuccessNetworkInterfaceWithDefaults instantiates a new NetworkInterfaceUpdateSuccessNetworkInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkInterfaceUpdateSuccessNetworkInterfaceWithDefaults() *NetworkInterfaceUpdateSuccessNetworkInterface {
	this := NetworkInterfaceUpdateSuccessNetworkInterface{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetId(v int64) {
	o.Id = &v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetAddresses() []map[string]interface{} {
	if o == nil || o.Addresses == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetAddressesOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Addresses == nil {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasAddresses() bool {
	if o != nil && o.Addresses != nil {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []map[string]interface{} and assigns it to the Addresses field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetAddresses(v []map[string]interface{}) {
	o.Addresses = &v
}

// GetInternalId returns the InternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetInternalId() string {
	if o == nil || o.InternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.InternalId.Get()
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetInternalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InternalId.Get(), o.InternalId.IsSet()
}

// HasInternalId returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasInternalId() bool {
	if o != nil && o.InternalId.IsSet() {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given NullableString and assigns it to the InternalId field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetInternalId(v string) {
	o.InternalId.Set(&v)
}
// SetInternalIdNil sets the value for InternalId to be an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetInternalIdNil() {
	o.InternalId.Set(nil)
}

// UnsetInternalId ensures that no value is present for InternalId, not even an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) UnsetInternalId() {
	o.InternalId.Unset()
}

// GetInterfaceId returns the InterfaceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetInterfaceId() string {
	if o == nil || o.InterfaceId.Get() == nil {
		var ret string
		return ret
	}
	return *o.InterfaceId.Get()
}

// GetInterfaceIdOk returns a tuple with the InterfaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetInterfaceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InterfaceId.Get(), o.InterfaceId.IsSet()
}

// HasInterfaceId returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasInterfaceId() bool {
	if o != nil && o.InterfaceId.IsSet() {
		return true
	}

	return false
}

// SetInterfaceId gets a reference to the given NullableString and assigns it to the InterfaceId field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetInterfaceId(v string) {
	o.InterfaceId.Set(&v)
}
// SetInterfaceIdNil sets the value for InterfaceId to be an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetInterfaceIdNil() {
	o.InterfaceId.Set(nil)
}

// UnsetInterfaceId ensures that no value is present for InterfaceId, not even an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) UnsetInterfaceId() {
	o.InterfaceId.Unset()
}

// GetDisplayOrder returns the DisplayOrder field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetDisplayOrder() int64 {
	if o == nil || o.DisplayOrder == nil {
		var ret int64
		return ret
	}
	return *o.DisplayOrder
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetDisplayOrderOk() (*int64, bool) {
	if o == nil || o.DisplayOrder == nil {
		return nil, false
	}
	return o.DisplayOrder, true
}

// HasDisplayOrder returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasDisplayOrder() bool {
	if o != nil && o.DisplayOrder != nil {
		return true
	}

	return false
}

// SetDisplayOrder gets a reference to the given int64 and assigns it to the DisplayOrder field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetDisplayOrder(v int64) {
	o.DisplayOrder = &v
}

// GetNetworkPool returns the NetworkPool field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetNetworkPool() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}
	return o.NetworkPool
}

// GetNetworkPoolOk returns a tuple with the NetworkPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetNetworkPoolOk() (*map[string]interface{}, bool) {
	if o == nil || o.NetworkPool == nil {
		return nil, false
	}
	return &o.NetworkPool, true
}

// HasNetworkPool returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasNetworkPool() bool {
	if o != nil && o.NetworkPool != nil {
		return true
	}

	return false
}

// SetNetworkPool gets a reference to the given map[string]interface{} and assigns it to the NetworkPool field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetNetworkPool(v map[string]interface{}) {
	o.NetworkPool = v
}

// GetDhcp returns the Dhcp field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetDhcp() bool {
	if o == nil || o.Dhcp == nil {
		var ret bool
		return ret
	}
	return *o.Dhcp
}

// GetDhcpOk returns a tuple with the Dhcp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetDhcpOk() (*bool, bool) {
	if o == nil || o.Dhcp == nil {
		return nil, false
	}
	return o.Dhcp, true
}

// HasDhcp returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasDhcp() bool {
	if o != nil && o.Dhcp != nil {
		return true
	}

	return false
}

// SetDhcp gets a reference to the given bool and assigns it to the Dhcp field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetDhcp(v bool) {
	o.Dhcp = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetUuid(v string) {
	o.Uuid = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetActive(v bool) {
	o.Active = &v
}

// GetUniqueId returns the UniqueId field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetUniqueId() string {
	if o == nil || o.UniqueId == nil {
		var ret string
		return ret
	}
	return *o.UniqueId
}

// GetUniqueIdOk returns a tuple with the UniqueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetUniqueIdOk() (*string, bool) {
	if o == nil || o.UniqueId == nil {
		return nil, false
	}
	return o.UniqueId, true
}

// HasUniqueId returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasUniqueId() bool {
	if o != nil && o.UniqueId != nil {
		return true
	}

	return false
}

// SetUniqueId gets a reference to the given string and assigns it to the UniqueId field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetUniqueId(v string) {
	o.UniqueId = &v
}

// GetSubnet returns the Subnet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetSubnet() string {
	if o == nil || o.Subnet.Get() == nil {
		var ret string
		return ret
	}
	return *o.Subnet.Get()
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetSubnetOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Subnet.Get(), o.Subnet.IsSet()
}

// HasSubnet returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasSubnet() bool {
	if o != nil && o.Subnet.IsSet() {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given NullableString and assigns it to the Subnet field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetSubnet(v string) {
	o.Subnet.Set(&v)
}
// SetSubnetNil sets the value for Subnet to be an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetSubnetNil() {
	o.Subnet.Set(nil)
}

// UnsetSubnet ensures that no value is present for Subnet, not even an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) UnsetSubnet() {
	o.Subnet.Unset()
}

// GetReplaceHostRecord returns the ReplaceHostRecord field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetReplaceHostRecord() bool {
	if o == nil || o.ReplaceHostRecord == nil {
		var ret bool
		return ret
	}
	return *o.ReplaceHostRecord
}

// GetReplaceHostRecordOk returns a tuple with the ReplaceHostRecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetReplaceHostRecordOk() (*bool, bool) {
	if o == nil || o.ReplaceHostRecord == nil {
		return nil, false
	}
	return o.ReplaceHostRecord, true
}

// HasReplaceHostRecord returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasReplaceHostRecord() bool {
	if o != nil && o.ReplaceHostRecord != nil {
		return true
	}

	return false
}

// SetReplaceHostRecord gets a reference to the given bool and assigns it to the ReplaceHostRecord field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetReplaceHostRecord(v bool) {
	o.ReplaceHostRecord = &v
}

// GetIpMode returns the IpMode field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetIpMode() string {
	if o == nil || o.IpMode == nil {
		var ret string
		return ret
	}
	return *o.IpMode
}

// GetIpModeOk returns a tuple with the IpMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetIpModeOk() (*string, bool) {
	if o == nil || o.IpMode == nil {
		return nil, false
	}
	return o.IpMode, true
}

// HasIpMode returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasIpMode() bool {
	if o != nil && o.IpMode != nil {
		return true
	}

	return false
}

// SetIpMode gets a reference to the given string and assigns it to the IpMode field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetIpMode(v string) {
	o.IpMode = &v
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetVersion() string {
	if o == nil || o.Version.Get() == nil {
		var ret string
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableString and assigns it to the Version field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetVersion(v string) {
	o.Version.Set(&v)
}
// SetVersionNil sets the value for Version to be an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) UnsetVersion() {
	o.Version.Unset()
}

// GetIpSubnet returns the IpSubnet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetIpSubnet() string {
	if o == nil || o.IpSubnet.Get() == nil {
		var ret string
		return ret
	}
	return *o.IpSubnet.Get()
}

// GetIpSubnetOk returns a tuple with the IpSubnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetIpSubnetOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IpSubnet.Get(), o.IpSubnet.IsSet()
}

// HasIpSubnet returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasIpSubnet() bool {
	if o != nil && o.IpSubnet.IsSet() {
		return true
	}

	return false
}

// SetIpSubnet gets a reference to the given NullableString and assigns it to the IpSubnet field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetIpSubnet(v string) {
	o.IpSubnet.Set(&v)
}
// SetIpSubnetNil sets the value for IpSubnet to be an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetIpSubnetNil() {
	o.IpSubnet.Set(nil)
}

// UnsetIpSubnet ensures that no value is present for IpSubnet, not even an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) UnsetIpSubnet() {
	o.IpSubnet.Unset()
}

// GetConfig returns the Config field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetConfig() string {
	if o == nil || o.Config.Get() == nil {
		var ret string
		return ret
	}
	return *o.Config.Get()
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetConfigOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Config.Get(), o.Config.IsSet()
}

// HasConfig returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasConfig() bool {
	if o != nil && o.Config.IsSet() {
		return true
	}

	return false
}

// SetConfig gets a reference to the given NullableString and assigns it to the Config field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetConfig(v string) {
	o.Config.Set(&v)
}
// SetConfigNil sets the value for Config to be an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetConfigNil() {
	o.Config.Set(nil)
}

// UnsetConfig ensures that no value is present for Config, not even an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) UnsetConfig() {
	o.Config.Unset()
}

// GetPublicIpAddress returns the PublicIpAddress field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetPublicIpAddress() string {
	if o == nil || o.PublicIpAddress == nil {
		var ret string
		return ret
	}
	return *o.PublicIpAddress
}

// GetPublicIpAddressOk returns a tuple with the PublicIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetPublicIpAddressOk() (*string, bool) {
	if o == nil || o.PublicIpAddress == nil {
		return nil, false
	}
	return o.PublicIpAddress, true
}

// HasPublicIpAddress returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasPublicIpAddress() bool {
	if o != nil && o.PublicIpAddress != nil {
		return true
	}

	return false
}

// SetPublicIpAddress gets a reference to the given string and assigns it to the PublicIpAddress field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetPublicIpAddress(v string) {
	o.PublicIpAddress = &v
}

// GetFabricId returns the FabricId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetFabricId() string {
	if o == nil || o.FabricId.Get() == nil {
		var ret string
		return ret
	}
	return *o.FabricId.Get()
}

// GetFabricIdOk returns a tuple with the FabricId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetFabricIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FabricId.Get(), o.FabricId.IsSet()
}

// HasFabricId returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasFabricId() bool {
	if o != nil && o.FabricId.IsSet() {
		return true
	}

	return false
}

// SetFabricId gets a reference to the given NullableString and assigns it to the FabricId field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetFabricId(v string) {
	o.FabricId.Set(&v)
}
// SetFabricIdNil sets the value for FabricId to be an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetFabricIdNil() {
	o.FabricId.Set(nil)
}

// UnsetFabricId ensures that no value is present for FabricId, not even an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) UnsetFabricId() {
	o.FabricId.Unset()
}

// GetIpv6Subnet returns the Ipv6Subnet field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetIpv6Subnet() string {
	if o == nil || o.Ipv6Subnet.Get() == nil {
		var ret string
		return ret
	}
	return *o.Ipv6Subnet.Get()
}

// GetIpv6SubnetOk returns a tuple with the Ipv6Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetIpv6SubnetOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Ipv6Subnet.Get(), o.Ipv6Subnet.IsSet()
}

// HasIpv6Subnet returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasIpv6Subnet() bool {
	if o != nil && o.Ipv6Subnet.IsSet() {
		return true
	}

	return false
}

// SetIpv6Subnet gets a reference to the given NullableString and assigns it to the Ipv6Subnet field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetIpv6Subnet(v string) {
	o.Ipv6Subnet.Set(&v)
}
// SetIpv6SubnetNil sets the value for Ipv6Subnet to be an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetIpv6SubnetNil() {
	o.Ipv6Subnet.Set(nil)
}

// UnsetIpv6Subnet ensures that no value is present for Ipv6Subnet, not even an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) UnsetIpv6Subnet() {
	o.Ipv6Subnet.Unset()
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetMacAddress() string {
	if o == nil || o.MacAddress == nil {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetMacAddressOk() (*string, bool) {
	if o == nil || o.MacAddress == nil {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasMacAddress() bool {
	if o != nil && o.MacAddress != nil {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetPublicIpv6Address returns the PublicIpv6Address field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetPublicIpv6Address() string {
	if o == nil || o.PublicIpv6Address.Get() == nil {
		var ret string
		return ret
	}
	return *o.PublicIpv6Address.Get()
}

// GetPublicIpv6AddressOk returns a tuple with the PublicIpv6Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetPublicIpv6AddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PublicIpv6Address.Get(), o.PublicIpv6Address.IsSet()
}

// HasPublicIpv6Address returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasPublicIpv6Address() bool {
	if o != nil && o.PublicIpv6Address.IsSet() {
		return true
	}

	return false
}

// SetPublicIpv6Address gets a reference to the given NullableString and assigns it to the PublicIpv6Address field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetPublicIpv6Address(v string) {
	o.PublicIpv6Address.Set(&v)
}
// SetPublicIpv6AddressNil sets the value for PublicIpv6Address to be an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetPublicIpv6AddressNil() {
	o.PublicIpv6Address.Set(nil)
}

// UnsetPublicIpv6Address ensures that no value is present for PublicIpv6Address, not even an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) UnsetPublicIpv6Address() {
	o.PublicIpv6Address.Unset()
}

// GetRefType returns the RefType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetRefType() string {
	if o == nil || o.RefType.Get() == nil {
		var ret string
		return ret
	}
	return *o.RefType.Get()
}

// GetRefTypeOk returns a tuple with the RefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetRefTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefType.Get(), o.RefType.IsSet()
}

// HasRefType returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasRefType() bool {
	if o != nil && o.RefType.IsSet() {
		return true
	}

	return false
}

// SetRefType gets a reference to the given NullableString and assigns it to the RefType field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetRefType(v string) {
	o.RefType.Set(&v)
}
// SetRefTypeNil sets the value for RefType to be an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetRefTypeNil() {
	o.RefType.Set(nil)
}

// UnsetRefType ensures that no value is present for RefType, not even an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) UnsetRefType() {
	o.RefType.Unset()
}

// GetNetworkGroup returns the NetworkGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetNetworkGroup() string {
	if o == nil || o.NetworkGroup.Get() == nil {
		var ret string
		return ret
	}
	return *o.NetworkGroup.Get()
}

// GetNetworkGroupOk returns a tuple with the NetworkGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetNetworkGroupOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetworkGroup.Get(), o.NetworkGroup.IsSet()
}

// HasNetworkGroup returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasNetworkGroup() bool {
	if o != nil && o.NetworkGroup.IsSet() {
		return true
	}

	return false
}

// SetNetworkGroup gets a reference to the given NullableString and assigns it to the NetworkGroup field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetNetworkGroup(v string) {
	o.NetworkGroup.Set(&v)
}
// SetNetworkGroupNil sets the value for NetworkGroup to be an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetNetworkGroupNil() {
	o.NetworkGroup.Set(nil)
}

// UnsetNetworkGroup ensures that no value is present for NetworkGroup, not even an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) UnsetNetworkGroup() {
	o.NetworkGroup.Unset()
}

// GetRefId returns the RefId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetRefId() string {
	if o == nil || o.RefId.Get() == nil {
		var ret string
		return ret
	}
	return *o.RefId.Get()
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetRefIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefId.Get(), o.RefId.IsSet()
}

// HasRefId returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasRefId() bool {
	if o != nil && o.RefId.IsSet() {
		return true
	}

	return false
}

// SetRefId gets a reference to the given NullableString and assigns it to the RefId field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetRefId(v string) {
	o.RefId.Set(&v)
}
// SetRefIdNil sets the value for RefId to be an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetRefIdNil() {
	o.RefId.Set(nil)
}

// UnsetRefId ensures that no value is present for RefId, not even an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) UnsetRefId() {
	o.RefId.Unset()
}

// GetNetworkDomain returns the NetworkDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetNetworkDomain() string {
	if o == nil || o.NetworkDomain.Get() == nil {
		var ret string
		return ret
	}
	return *o.NetworkDomain.Get()
}

// GetNetworkDomainOk returns a tuple with the NetworkDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetNetworkDomainOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetworkDomain.Get(), o.NetworkDomain.IsSet()
}

// HasNetworkDomain returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasNetworkDomain() bool {
	if o != nil && o.NetworkDomain.IsSet() {
		return true
	}

	return false
}

// SetNetworkDomain gets a reference to the given NullableString and assigns it to the NetworkDomain field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetNetworkDomain(v string) {
	o.NetworkDomain.Set(&v)
}
// SetNetworkDomainNil sets the value for NetworkDomain to be an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetNetworkDomainNil() {
	o.NetworkDomain.Set(nil)
}

// UnsetNetworkDomain ensures that no value is present for NetworkDomain, not even an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) UnsetNetworkDomain() {
	o.NetworkDomain.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetName(v string) {
	o.Name = &v
}

// GetPrimaryInterface returns the PrimaryInterface field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetPrimaryInterface() bool {
	if o == nil || o.PrimaryInterface == nil {
		var ret bool
		return ret
	}
	return *o.PrimaryInterface
}

// GetPrimaryInterfaceOk returns a tuple with the PrimaryInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetPrimaryInterfaceOk() (*bool, bool) {
	if o == nil || o.PrimaryInterface == nil {
		return nil, false
	}
	return o.PrimaryInterface, true
}

// HasPrimaryInterface returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasPrimaryInterface() bool {
	if o != nil && o.PrimaryInterface != nil {
		return true
	}

	return false
}

// SetPrimaryInterface gets a reference to the given bool and assigns it to the PrimaryInterface field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetPrimaryInterface(v bool) {
	o.PrimaryInterface = &v
}

// GetNetworkPoolIPv6 returns the NetworkPoolIPv6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetNetworkPoolIPv6() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}
	return o.NetworkPoolIPv6
}

// GetNetworkPoolIPv6Ok returns a tuple with the NetworkPoolIPv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetNetworkPoolIPv6Ok() (*map[string]interface{}, bool) {
	if o == nil || o.NetworkPoolIPv6 == nil {
		return nil, false
	}
	return &o.NetworkPoolIPv6, true
}

// HasNetworkPoolIPv6 returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasNetworkPoolIPv6() bool {
	if o != nil && o.NetworkPoolIPv6 != nil {
		return true
	}

	return false
}

// SetNetworkPoolIPv6 gets a reference to the given map[string]interface{} and assigns it to the NetworkPoolIPv6 field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetNetworkPoolIPv6(v map[string]interface{}) {
	o.NetworkPoolIPv6 = v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetNetwork() ApiBlueprintsIdUpdatePermissionsResourcePermissionSites {
	if o == nil || o.Network == nil {
		var ret ApiBlueprintsIdUpdatePermissionsResourcePermissionSites
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetNetworkOk() (*ApiBlueprintsIdUpdatePermissionsResourcePermissionSites, bool) {
	if o == nil || o.Network == nil {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasNetwork() bool {
	if o != nil && o.Network != nil {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given ApiBlueprintsIdUpdatePermissionsResourcePermissionSites and assigns it to the Network field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetNetwork(v ApiBlueprintsIdUpdatePermissionsResourcePermissionSites) {
	o.Network = &v
}

// GetVlanId returns the VlanId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetVlanId() string {
	if o == nil || o.VlanId.Get() == nil {
		var ret string
		return ret
	}
	return *o.VlanId.Get()
}

// GetVlanIdOk returns a tuple with the VlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetVlanIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VlanId.Get(), o.VlanId.IsSet()
}

// HasVlanId returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasVlanId() bool {
	if o != nil && o.VlanId.IsSet() {
		return true
	}

	return false
}

// SetVlanId gets a reference to the given NullableString and assigns it to the VlanId field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetVlanId(v string) {
	o.VlanId.Set(&v)
}
// SetVlanIdNil sets the value for VlanId to be an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetVlanIdNil() {
	o.VlanId.Set(nil)
}

// UnsetVlanId ensures that no value is present for VlanId, not even an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) UnsetVlanId() {
	o.VlanId.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetType() ApiBlueprintsIdUpdatePermissionsResourcePermissionSites {
	if o == nil || o.Type == nil {
		var ret ApiBlueprintsIdUpdatePermissionsResourcePermissionSites
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetTypeOk() (*ApiBlueprintsIdUpdatePermissionsResourcePermissionSites, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given ApiBlueprintsIdUpdatePermissionsResourcePermissionSites and assigns it to the Type field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetType(v ApiBlueprintsIdUpdatePermissionsResourcePermissionSites) {
	o.Type = &v
}

// GetNetworkPosition returns the NetworkPosition field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetNetworkPosition() string {
	if o == nil || o.NetworkPosition.Get() == nil {
		var ret string
		return ret
	}
	return *o.NetworkPosition.Get()
}

// GetNetworkPositionOk returns a tuple with the NetworkPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetNetworkPositionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetworkPosition.Get(), o.NetworkPosition.IsSet()
}

// HasNetworkPosition returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasNetworkPosition() bool {
	if o != nil && o.NetworkPosition.IsSet() {
		return true
	}

	return false
}

// SetNetworkPosition gets a reference to the given NullableString and assigns it to the NetworkPosition field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetNetworkPosition(v string) {
	o.NetworkPosition.Set(&v)
}
// SetNetworkPositionNil sets the value for NetworkPosition to be an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetNetworkPositionNil() {
	o.NetworkPosition.Set(nil)
}

// UnsetNetworkPosition ensures that no value is present for NetworkPosition, not even an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) UnsetNetworkPosition() {
	o.NetworkPosition.Unset()
}

// GetPoolAssigned returns the PoolAssigned field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetPoolAssigned() bool {
	if o == nil || o.PoolAssigned == nil {
		var ret bool
		return ret
	}
	return *o.PoolAssigned
}

// GetPoolAssignedOk returns a tuple with the PoolAssigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetPoolAssignedOk() (*bool, bool) {
	if o == nil || o.PoolAssigned == nil {
		return nil, false
	}
	return o.PoolAssigned, true
}

// HasPoolAssigned returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasPoolAssigned() bool {
	if o != nil && o.PoolAssigned != nil {
		return true
	}

	return false
}

// SetPoolAssigned gets a reference to the given bool and assigns it to the PoolAssigned field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetPoolAssigned(v bool) {
	o.PoolAssigned = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetDescription(v string) {
	o.Description = &v
}

// GetExternalType returns the ExternalType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetExternalType() string {
	if o == nil || o.ExternalType.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalType.Get()
}

// GetExternalTypeOk returns a tuple with the ExternalType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetExternalTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalType.Get(), o.ExternalType.IsSet()
}

// HasExternalType returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasExternalType() bool {
	if o != nil && o.ExternalType.IsSet() {
		return true
	}

	return false
}

// SetExternalType gets a reference to the given NullableString and assigns it to the ExternalType field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetExternalType(v string) {
	o.ExternalType.Set(&v)
}
// SetExternalTypeNil sets the value for ExternalType to be an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetExternalTypeNil() {
	o.ExternalType.Set(nil)
}

// UnsetExternalType ensures that no value is present for ExternalType, not even an explicit nil
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) UnsetExternalType() {
	o.ExternalType.Unset()
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) GetExternalIdOk() (*string, bool) {
	if o == nil || o.ExternalId == nil {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) HasExternalId() bool {
	if o != nil && o.ExternalId != nil {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *NetworkInterfaceUpdateSuccessNetworkInterface) SetExternalId(v string) {
	o.ExternalId = &v
}

func (o NetworkInterfaceUpdateSuccessNetworkInterface) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Addresses != nil {
		toSerialize["addresses"] = o.Addresses
	}
	if o.InternalId.IsSet() {
		toSerialize["internalId"] = o.InternalId.Get()
	}
	if o.InterfaceId.IsSet() {
		toSerialize["interfaceId"] = o.InterfaceId.Get()
	}
	if o.DisplayOrder != nil {
		toSerialize["displayOrder"] = o.DisplayOrder
	}
	if o.NetworkPool != nil {
		toSerialize["networkPool"] = o.NetworkPool
	}
	if o.Dhcp != nil {
		toSerialize["dhcp"] = o.Dhcp
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.UniqueId != nil {
		toSerialize["uniqueId"] = o.UniqueId
	}
	if o.Subnet.IsSet() {
		toSerialize["subnet"] = o.Subnet.Get()
	}
	if o.ReplaceHostRecord != nil {
		toSerialize["replaceHostRecord"] = o.ReplaceHostRecord
	}
	if o.IpMode != nil {
		toSerialize["ipMode"] = o.IpMode
	}
	if o.Version.IsSet() {
		toSerialize["version"] = o.Version.Get()
	}
	if o.IpSubnet.IsSet() {
		toSerialize["ipSubnet"] = o.IpSubnet.Get()
	}
	if o.Config.IsSet() {
		toSerialize["config"] = o.Config.Get()
	}
	if o.PublicIpAddress != nil {
		toSerialize["publicIpAddress"] = o.PublicIpAddress
	}
	if o.FabricId.IsSet() {
		toSerialize["fabricId"] = o.FabricId.Get()
	}
	if o.Ipv6Subnet.IsSet() {
		toSerialize["ipv6Subnet"] = o.Ipv6Subnet.Get()
	}
	if o.MacAddress != nil {
		toSerialize["macAddress"] = o.MacAddress
	}
	if o.PublicIpv6Address.IsSet() {
		toSerialize["publicIpv6Address"] = o.PublicIpv6Address.Get()
	}
	if o.RefType.IsSet() {
		toSerialize["refType"] = o.RefType.Get()
	}
	if o.NetworkGroup.IsSet() {
		toSerialize["networkGroup"] = o.NetworkGroup.Get()
	}
	if o.RefId.IsSet() {
		toSerialize["refId"] = o.RefId.Get()
	}
	if o.NetworkDomain.IsSet() {
		toSerialize["networkDomain"] = o.NetworkDomain.Get()
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.PrimaryInterface != nil {
		toSerialize["primaryInterface"] = o.PrimaryInterface
	}
	if o.NetworkPoolIPv6 != nil {
		toSerialize["networkPoolIPv6"] = o.NetworkPoolIPv6
	}
	if o.Network != nil {
		toSerialize["network"] = o.Network
	}
	if o.VlanId.IsSet() {
		toSerialize["vlanId"] = o.VlanId.Get()
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.NetworkPosition.IsSet() {
		toSerialize["networkPosition"] = o.NetworkPosition.Get()
	}
	if o.PoolAssigned != nil {
		toSerialize["poolAssigned"] = o.PoolAssigned
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ExternalType.IsSet() {
		toSerialize["externalType"] = o.ExternalType.Get()
	}
	if o.ExternalId != nil {
		toSerialize["externalId"] = o.ExternalId
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkInterfaceUpdateSuccessNetworkInterface struct {
	value *NetworkInterfaceUpdateSuccessNetworkInterface
	isSet bool
}

func (v NullableNetworkInterfaceUpdateSuccessNetworkInterface) Get() *NetworkInterfaceUpdateSuccessNetworkInterface {
	return v.value
}

func (v *NullableNetworkInterfaceUpdateSuccessNetworkInterface) Set(val *NetworkInterfaceUpdateSuccessNetworkInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkInterfaceUpdateSuccessNetworkInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkInterfaceUpdateSuccessNetworkInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkInterfaceUpdateSuccessNetworkInterface(val *NetworkInterfaceUpdateSuccessNetworkInterface) *NullableNetworkInterfaceUpdateSuccessNetworkInterface {
	return &NullableNetworkInterfaceUpdateSuccessNetworkInterface{value: val, isSet: true}
}

func (v NullableNetworkInterfaceUpdateSuccessNetworkInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkInterfaceUpdateSuccessNetworkInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


