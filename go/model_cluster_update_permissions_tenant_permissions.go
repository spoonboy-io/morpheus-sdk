/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterUpdatePermissionsTenantPermissions struct for ClusterUpdatePermissionsTenantPermissions
type ClusterUpdatePermissionsTenantPermissions struct {
	// Array of tenant account ids that are allowed access
	Accounts *[]int64 `json:"accounts,omitempty"`
}

// NewClusterUpdatePermissionsTenantPermissions instantiates a new ClusterUpdatePermissionsTenantPermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterUpdatePermissionsTenantPermissions() *ClusterUpdatePermissionsTenantPermissions {
	this := ClusterUpdatePermissionsTenantPermissions{}
	return &this
}

// NewClusterUpdatePermissionsTenantPermissionsWithDefaults instantiates a new ClusterUpdatePermissionsTenantPermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterUpdatePermissionsTenantPermissionsWithDefaults() *ClusterUpdatePermissionsTenantPermissions {
	this := ClusterUpdatePermissionsTenantPermissions{}
	return &this
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *ClusterUpdatePermissionsTenantPermissions) GetAccounts() []int64 {
	if o == nil || o.Accounts == nil {
		var ret []int64
		return ret
	}
	return *o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdatePermissionsTenantPermissions) GetAccountsOk() (*[]int64, bool) {
	if o == nil || o.Accounts == nil {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *ClusterUpdatePermissionsTenantPermissions) HasAccounts() bool {
	if o != nil && o.Accounts != nil {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []int64 and assigns it to the Accounts field.
func (o *ClusterUpdatePermissionsTenantPermissions) SetAccounts(v []int64) {
	o.Accounts = &v
}

func (o ClusterUpdatePermissionsTenantPermissions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accounts != nil {
		toSerialize["accounts"] = o.Accounts
	}
	return json.Marshal(toSerialize)
}

type NullableClusterUpdatePermissionsTenantPermissions struct {
	value *ClusterUpdatePermissionsTenantPermissions
	isSet bool
}

func (v NullableClusterUpdatePermissionsTenantPermissions) Get() *ClusterUpdatePermissionsTenantPermissions {
	return v.value
}

func (v *NullableClusterUpdatePermissionsTenantPermissions) Set(val *ClusterUpdatePermissionsTenantPermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterUpdatePermissionsTenantPermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterUpdatePermissionsTenantPermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterUpdatePermissionsTenantPermissions(val *ClusterUpdatePermissionsTenantPermissions) *NullableClusterUpdatePermissionsTenantPermissions {
	return &NullableClusterUpdatePermissionsTenantPermissions{value: val, isSet: true}
}

func (v NullableClusterUpdatePermissionsTenantPermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterUpdatePermissionsTenantPermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


