/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SpecTemplateCreateConfig The Cloud Formation type supports some additional configuration parameters
type SpecTemplateCreateConfig struct {
	Cloudformation *SpecTemplateCreateConfigCloudformation `json:"cloudformation,omitempty"`
}

// NewSpecTemplateCreateConfig instantiates a new SpecTemplateCreateConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpecTemplateCreateConfig() *SpecTemplateCreateConfig {
	this := SpecTemplateCreateConfig{}
	return &this
}

// NewSpecTemplateCreateConfigWithDefaults instantiates a new SpecTemplateCreateConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpecTemplateCreateConfigWithDefaults() *SpecTemplateCreateConfig {
	this := SpecTemplateCreateConfig{}
	return &this
}

// GetCloudformation returns the Cloudformation field value if set, zero value otherwise.
func (o *SpecTemplateCreateConfig) GetCloudformation() SpecTemplateCreateConfigCloudformation {
	if o == nil || o.Cloudformation == nil {
		var ret SpecTemplateCreateConfigCloudformation
		return ret
	}
	return *o.Cloudformation
}

// GetCloudformationOk returns a tuple with the Cloudformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecTemplateCreateConfig) GetCloudformationOk() (*SpecTemplateCreateConfigCloudformation, bool) {
	if o == nil || o.Cloudformation == nil {
		return nil, false
	}
	return o.Cloudformation, true
}

// HasCloudformation returns a boolean if a field has been set.
func (o *SpecTemplateCreateConfig) HasCloudformation() bool {
	if o != nil && o.Cloudformation != nil {
		return true
	}

	return false
}

// SetCloudformation gets a reference to the given SpecTemplateCreateConfigCloudformation and assigns it to the Cloudformation field.
func (o *SpecTemplateCreateConfig) SetCloudformation(v SpecTemplateCreateConfigCloudformation) {
	o.Cloudformation = &v
}

func (o SpecTemplateCreateConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cloudformation != nil {
		toSerialize["cloudformation"] = o.Cloudformation
	}
	return json.Marshal(toSerialize)
}

type NullableSpecTemplateCreateConfig struct {
	value *SpecTemplateCreateConfig
	isSet bool
}

func (v NullableSpecTemplateCreateConfig) Get() *SpecTemplateCreateConfig {
	return v.value
}

func (v *NullableSpecTemplateCreateConfig) Set(val *SpecTemplateCreateConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSpecTemplateCreateConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSpecTemplateCreateConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpecTemplateCreateConfig(val *SpecTemplateCreateConfig) *NullableSpecTemplateCreateConfig {
	return &NullableSpecTemplateCreateConfig{value: val, isSet: true}
}

func (v NullableSpecTemplateCreateConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpecTemplateCreateConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


