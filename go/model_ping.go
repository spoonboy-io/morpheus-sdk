/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Ping struct for Ping
type Ping struct {
	Success *bool `json:"success,omitempty"`
	BuildVersion *string `json:"buildVersion,omitempty"`
}

// NewPing instantiates a new Ping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPing() *Ping {
	this := Ping{}
	return &this
}

// NewPingWithDefaults instantiates a new Ping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPingWithDefaults() *Ping {
	this := Ping{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *Ping) GetSuccess() bool {
	if o == nil || o.Success == nil {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ping) GetSuccessOk() (*bool, bool) {
	if o == nil || o.Success == nil {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *Ping) HasSuccess() bool {
	if o != nil && o.Success != nil {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *Ping) SetSuccess(v bool) {
	o.Success = &v
}

// GetBuildVersion returns the BuildVersion field value if set, zero value otherwise.
func (o *Ping) GetBuildVersion() string {
	if o == nil || o.BuildVersion == nil {
		var ret string
		return ret
	}
	return *o.BuildVersion
}

// GetBuildVersionOk returns a tuple with the BuildVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Ping) GetBuildVersionOk() (*string, bool) {
	if o == nil || o.BuildVersion == nil {
		return nil, false
	}
	return o.BuildVersion, true
}

// HasBuildVersion returns a boolean if a field has been set.
func (o *Ping) HasBuildVersion() bool {
	if o != nil && o.BuildVersion != nil {
		return true
	}

	return false
}

// SetBuildVersion gets a reference to the given string and assigns it to the BuildVersion field.
func (o *Ping) SetBuildVersion(v string) {
	o.BuildVersion = &v
}

func (o Ping) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Success != nil {
		toSerialize["success"] = o.Success
	}
	if o.BuildVersion != nil {
		toSerialize["buildVersion"] = o.BuildVersion
	}
	return json.Marshal(toSerialize)
}

type NullablePing struct {
	value *Ping
	isSet bool
}

func (v NullablePing) Get() *Ping {
	return v.value
}

func (v *NullablePing) Set(val *Ping) {
	v.value = val
	v.isSet = true
}

func (v NullablePing) IsSet() bool {
	return v.isSet
}

func (v *NullablePing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePing(val *Ping) *NullablePing {
	return &NullablePing{value: val, isSet: true}
}

func (v NullablePing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


