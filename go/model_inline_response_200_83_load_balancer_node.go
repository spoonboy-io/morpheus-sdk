/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// InlineResponse20083LoadBalancerNode struct for InlineResponse20083LoadBalancerNode
type InlineResponse20083LoadBalancerNode struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	Description NullableString `json:"description,omitempty"`
	IpAddress *string `json:"ipAddress,omitempty"`
	Port *int64 `json:"port,omitempty"`
	PortType NullableString `json:"portType,omitempty"`
	MonitorPort NullableString `json:"monitorPort,omitempty"`
	Weight NullableInt64 `json:"weight,omitempty"`
	NodeState NullableString `json:"nodeState,omitempty"`
	InternalId NullableString `json:"internalId,omitempty"`
	ExternalId NullableString `json:"externalId,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Status *string `json:"status,omitempty"`
	StatusMessage NullableString `json:"statusMessage,omitempty"`
	StatusDate NullableTime `json:"statusDate,omitempty"`
	Server NullableInlineResponse20082LoadBalancerInstanceSslCert `json:"server,omitempty"`
	InstanceId NullableInt64 `json:"instanceId,omitempty"`
	ContainerId NullableInt64 `json:"containerId,omitempty"`
	NodeSource NullableString `json:"nodeSource,omitempty"`
	Monitor NullableInlineResponse20082LoadBalancerInstanceSslCert `json:"monitor,omitempty"`
	MaxConnections NullableInt64 `json:"maxConnections,omitempty"`
	ExternalRefType NullableString `json:"externalRefType,omitempty"`
	ExternalRefId NullableString `json:"externalRefId,omitempty"`
	ExternalRefName NullableString `json:"externalRefName,omitempty"`
	CreatedBy NullableInlineResponse20083LoadBalancerNodeCreatedBy `json:"createdBy,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
}

// NewInlineResponse20083LoadBalancerNode instantiates a new InlineResponse20083LoadBalancerNode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20083LoadBalancerNode() *InlineResponse20083LoadBalancerNode {
	this := InlineResponse20083LoadBalancerNode{}
	return &this
}

// NewInlineResponse20083LoadBalancerNodeWithDefaults instantiates a new InlineResponse20083LoadBalancerNode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20083LoadBalancerNodeWithDefaults() *InlineResponse20083LoadBalancerNode {
	this := InlineResponse20083LoadBalancerNode{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20083LoadBalancerNode) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20083LoadBalancerNode) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *InlineResponse20083LoadBalancerNode) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse20083LoadBalancerNode) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20083LoadBalancerNode) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse20083LoadBalancerNode) SetName(v string) {
	o.Name = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *InlineResponse20083LoadBalancerNode) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20083LoadBalancerNode) GetVisibilityOk() (*string, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *InlineResponse20083LoadBalancerNode) SetVisibility(v string) {
	o.Visibility = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20083LoadBalancerNode) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20083LoadBalancerNode) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *InlineResponse20083LoadBalancerNode) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *InlineResponse20083LoadBalancerNode) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *InlineResponse20083LoadBalancerNode) UnsetDescription() {
	o.Description.Unset()
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *InlineResponse20083LoadBalancerNode) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20083LoadBalancerNode) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *InlineResponse20083LoadBalancerNode) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *InlineResponse20083LoadBalancerNode) GetPort() int64 {
	if o == nil || o.Port == nil {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20083LoadBalancerNode) GetPortOk() (*int64, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *InlineResponse20083LoadBalancerNode) SetPort(v int64) {
	o.Port = &v
}

// GetPortType returns the PortType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20083LoadBalancerNode) GetPortType() string {
	if o == nil || o.PortType.Get() == nil {
		var ret string
		return ret
	}
	return *o.PortType.Get()
}

// GetPortTypeOk returns a tuple with the PortType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20083LoadBalancerNode) GetPortTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PortType.Get(), o.PortType.IsSet()
}

// HasPortType returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasPortType() bool {
	if o != nil && o.PortType.IsSet() {
		return true
	}

	return false
}

// SetPortType gets a reference to the given NullableString and assigns it to the PortType field.
func (o *InlineResponse20083LoadBalancerNode) SetPortType(v string) {
	o.PortType.Set(&v)
}
// SetPortTypeNil sets the value for PortType to be an explicit nil
func (o *InlineResponse20083LoadBalancerNode) SetPortTypeNil() {
	o.PortType.Set(nil)
}

// UnsetPortType ensures that no value is present for PortType, not even an explicit nil
func (o *InlineResponse20083LoadBalancerNode) UnsetPortType() {
	o.PortType.Unset()
}

// GetMonitorPort returns the MonitorPort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20083LoadBalancerNode) GetMonitorPort() string {
	if o == nil || o.MonitorPort.Get() == nil {
		var ret string
		return ret
	}
	return *o.MonitorPort.Get()
}

// GetMonitorPortOk returns a tuple with the MonitorPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20083LoadBalancerNode) GetMonitorPortOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MonitorPort.Get(), o.MonitorPort.IsSet()
}

// HasMonitorPort returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasMonitorPort() bool {
	if o != nil && o.MonitorPort.IsSet() {
		return true
	}

	return false
}

// SetMonitorPort gets a reference to the given NullableString and assigns it to the MonitorPort field.
func (o *InlineResponse20083LoadBalancerNode) SetMonitorPort(v string) {
	o.MonitorPort.Set(&v)
}
// SetMonitorPortNil sets the value for MonitorPort to be an explicit nil
func (o *InlineResponse20083LoadBalancerNode) SetMonitorPortNil() {
	o.MonitorPort.Set(nil)
}

// UnsetMonitorPort ensures that no value is present for MonitorPort, not even an explicit nil
func (o *InlineResponse20083LoadBalancerNode) UnsetMonitorPort() {
	o.MonitorPort.Unset()
}

// GetWeight returns the Weight field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20083LoadBalancerNode) GetWeight() int64 {
	if o == nil || o.Weight.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Weight.Get()
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20083LoadBalancerNode) GetWeightOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Weight.Get(), o.Weight.IsSet()
}

// HasWeight returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasWeight() bool {
	if o != nil && o.Weight.IsSet() {
		return true
	}

	return false
}

// SetWeight gets a reference to the given NullableInt64 and assigns it to the Weight field.
func (o *InlineResponse20083LoadBalancerNode) SetWeight(v int64) {
	o.Weight.Set(&v)
}
// SetWeightNil sets the value for Weight to be an explicit nil
func (o *InlineResponse20083LoadBalancerNode) SetWeightNil() {
	o.Weight.Set(nil)
}

// UnsetWeight ensures that no value is present for Weight, not even an explicit nil
func (o *InlineResponse20083LoadBalancerNode) UnsetWeight() {
	o.Weight.Unset()
}

// GetNodeState returns the NodeState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20083LoadBalancerNode) GetNodeState() string {
	if o == nil || o.NodeState.Get() == nil {
		var ret string
		return ret
	}
	return *o.NodeState.Get()
}

// GetNodeStateOk returns a tuple with the NodeState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20083LoadBalancerNode) GetNodeStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NodeState.Get(), o.NodeState.IsSet()
}

// HasNodeState returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasNodeState() bool {
	if o != nil && o.NodeState.IsSet() {
		return true
	}

	return false
}

// SetNodeState gets a reference to the given NullableString and assigns it to the NodeState field.
func (o *InlineResponse20083LoadBalancerNode) SetNodeState(v string) {
	o.NodeState.Set(&v)
}
// SetNodeStateNil sets the value for NodeState to be an explicit nil
func (o *InlineResponse20083LoadBalancerNode) SetNodeStateNil() {
	o.NodeState.Set(nil)
}

// UnsetNodeState ensures that no value is present for NodeState, not even an explicit nil
func (o *InlineResponse20083LoadBalancerNode) UnsetNodeState() {
	o.NodeState.Unset()
}

// GetInternalId returns the InternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20083LoadBalancerNode) GetInternalId() string {
	if o == nil || o.InternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.InternalId.Get()
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20083LoadBalancerNode) GetInternalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InternalId.Get(), o.InternalId.IsSet()
}

// HasInternalId returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasInternalId() bool {
	if o != nil && o.InternalId.IsSet() {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given NullableString and assigns it to the InternalId field.
func (o *InlineResponse20083LoadBalancerNode) SetInternalId(v string) {
	o.InternalId.Set(&v)
}
// SetInternalIdNil sets the value for InternalId to be an explicit nil
func (o *InlineResponse20083LoadBalancerNode) SetInternalIdNil() {
	o.InternalId.Set(nil)
}

// UnsetInternalId ensures that no value is present for InternalId, not even an explicit nil
func (o *InlineResponse20083LoadBalancerNode) UnsetInternalId() {
	o.InternalId.Unset()
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20083LoadBalancerNode) GetExternalId() string {
	if o == nil || o.ExternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20083LoadBalancerNode) GetExternalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *InlineResponse20083LoadBalancerNode) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}
// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *InlineResponse20083LoadBalancerNode) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *InlineResponse20083LoadBalancerNode) UnsetExternalId() {
	o.ExternalId.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *InlineResponse20083LoadBalancerNode) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20083LoadBalancerNode) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *InlineResponse20083LoadBalancerNode) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse20083LoadBalancerNode) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20083LoadBalancerNode) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse20083LoadBalancerNode) SetStatus(v string) {
	o.Status = &v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20083LoadBalancerNode) GetStatusMessage() string {
	if o == nil || o.StatusMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.StatusMessage.Get()
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20083LoadBalancerNode) GetStatusMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StatusMessage.Get(), o.StatusMessage.IsSet()
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasStatusMessage() bool {
	if o != nil && o.StatusMessage.IsSet() {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given NullableString and assigns it to the StatusMessage field.
func (o *InlineResponse20083LoadBalancerNode) SetStatusMessage(v string) {
	o.StatusMessage.Set(&v)
}
// SetStatusMessageNil sets the value for StatusMessage to be an explicit nil
func (o *InlineResponse20083LoadBalancerNode) SetStatusMessageNil() {
	o.StatusMessage.Set(nil)
}

// UnsetStatusMessage ensures that no value is present for StatusMessage, not even an explicit nil
func (o *InlineResponse20083LoadBalancerNode) UnsetStatusMessage() {
	o.StatusMessage.Unset()
}

// GetStatusDate returns the StatusDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20083LoadBalancerNode) GetStatusDate() time.Time {
	if o == nil || o.StatusDate.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.StatusDate.Get()
}

// GetStatusDateOk returns a tuple with the StatusDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20083LoadBalancerNode) GetStatusDateOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StatusDate.Get(), o.StatusDate.IsSet()
}

// HasStatusDate returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasStatusDate() bool {
	if o != nil && o.StatusDate.IsSet() {
		return true
	}

	return false
}

// SetStatusDate gets a reference to the given NullableTime and assigns it to the StatusDate field.
func (o *InlineResponse20083LoadBalancerNode) SetStatusDate(v time.Time) {
	o.StatusDate.Set(&v)
}
// SetStatusDateNil sets the value for StatusDate to be an explicit nil
func (o *InlineResponse20083LoadBalancerNode) SetStatusDateNil() {
	o.StatusDate.Set(nil)
}

// UnsetStatusDate ensures that no value is present for StatusDate, not even an explicit nil
func (o *InlineResponse20083LoadBalancerNode) UnsetStatusDate() {
	o.StatusDate.Unset()
}

// GetServer returns the Server field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20083LoadBalancerNode) GetServer() InlineResponse20082LoadBalancerInstanceSslCert {
	if o == nil || o.Server.Get() == nil {
		var ret InlineResponse20082LoadBalancerInstanceSslCert
		return ret
	}
	return *o.Server.Get()
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20083LoadBalancerNode) GetServerOk() (*InlineResponse20082LoadBalancerInstanceSslCert, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Server.Get(), o.Server.IsSet()
}

// HasServer returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasServer() bool {
	if o != nil && o.Server.IsSet() {
		return true
	}

	return false
}

// SetServer gets a reference to the given NullableInlineResponse20082LoadBalancerInstanceSslCert and assigns it to the Server field.
func (o *InlineResponse20083LoadBalancerNode) SetServer(v InlineResponse20082LoadBalancerInstanceSslCert) {
	o.Server.Set(&v)
}
// SetServerNil sets the value for Server to be an explicit nil
func (o *InlineResponse20083LoadBalancerNode) SetServerNil() {
	o.Server.Set(nil)
}

// UnsetServer ensures that no value is present for Server, not even an explicit nil
func (o *InlineResponse20083LoadBalancerNode) UnsetServer() {
	o.Server.Unset()
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20083LoadBalancerNode) GetInstanceId() int64 {
	if o == nil || o.InstanceId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.InstanceId.Get()
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20083LoadBalancerNode) GetInstanceIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InstanceId.Get(), o.InstanceId.IsSet()
}

// HasInstanceId returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasInstanceId() bool {
	if o != nil && o.InstanceId.IsSet() {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given NullableInt64 and assigns it to the InstanceId field.
func (o *InlineResponse20083LoadBalancerNode) SetInstanceId(v int64) {
	o.InstanceId.Set(&v)
}
// SetInstanceIdNil sets the value for InstanceId to be an explicit nil
func (o *InlineResponse20083LoadBalancerNode) SetInstanceIdNil() {
	o.InstanceId.Set(nil)
}

// UnsetInstanceId ensures that no value is present for InstanceId, not even an explicit nil
func (o *InlineResponse20083LoadBalancerNode) UnsetInstanceId() {
	o.InstanceId.Unset()
}

// GetContainerId returns the ContainerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20083LoadBalancerNode) GetContainerId() int64 {
	if o == nil || o.ContainerId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ContainerId.Get()
}

// GetContainerIdOk returns a tuple with the ContainerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20083LoadBalancerNode) GetContainerIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ContainerId.Get(), o.ContainerId.IsSet()
}

// HasContainerId returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasContainerId() bool {
	if o != nil && o.ContainerId.IsSet() {
		return true
	}

	return false
}

// SetContainerId gets a reference to the given NullableInt64 and assigns it to the ContainerId field.
func (o *InlineResponse20083LoadBalancerNode) SetContainerId(v int64) {
	o.ContainerId.Set(&v)
}
// SetContainerIdNil sets the value for ContainerId to be an explicit nil
func (o *InlineResponse20083LoadBalancerNode) SetContainerIdNil() {
	o.ContainerId.Set(nil)
}

// UnsetContainerId ensures that no value is present for ContainerId, not even an explicit nil
func (o *InlineResponse20083LoadBalancerNode) UnsetContainerId() {
	o.ContainerId.Unset()
}

// GetNodeSource returns the NodeSource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20083LoadBalancerNode) GetNodeSource() string {
	if o == nil || o.NodeSource.Get() == nil {
		var ret string
		return ret
	}
	return *o.NodeSource.Get()
}

// GetNodeSourceOk returns a tuple with the NodeSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20083LoadBalancerNode) GetNodeSourceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NodeSource.Get(), o.NodeSource.IsSet()
}

// HasNodeSource returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasNodeSource() bool {
	if o != nil && o.NodeSource.IsSet() {
		return true
	}

	return false
}

// SetNodeSource gets a reference to the given NullableString and assigns it to the NodeSource field.
func (o *InlineResponse20083LoadBalancerNode) SetNodeSource(v string) {
	o.NodeSource.Set(&v)
}
// SetNodeSourceNil sets the value for NodeSource to be an explicit nil
func (o *InlineResponse20083LoadBalancerNode) SetNodeSourceNil() {
	o.NodeSource.Set(nil)
}

// UnsetNodeSource ensures that no value is present for NodeSource, not even an explicit nil
func (o *InlineResponse20083LoadBalancerNode) UnsetNodeSource() {
	o.NodeSource.Unset()
}

// GetMonitor returns the Monitor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20083LoadBalancerNode) GetMonitor() InlineResponse20082LoadBalancerInstanceSslCert {
	if o == nil || o.Monitor.Get() == nil {
		var ret InlineResponse20082LoadBalancerInstanceSslCert
		return ret
	}
	return *o.Monitor.Get()
}

// GetMonitorOk returns a tuple with the Monitor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20083LoadBalancerNode) GetMonitorOk() (*InlineResponse20082LoadBalancerInstanceSslCert, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Monitor.Get(), o.Monitor.IsSet()
}

// HasMonitor returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasMonitor() bool {
	if o != nil && o.Monitor.IsSet() {
		return true
	}

	return false
}

// SetMonitor gets a reference to the given NullableInlineResponse20082LoadBalancerInstanceSslCert and assigns it to the Monitor field.
func (o *InlineResponse20083LoadBalancerNode) SetMonitor(v InlineResponse20082LoadBalancerInstanceSslCert) {
	o.Monitor.Set(&v)
}
// SetMonitorNil sets the value for Monitor to be an explicit nil
func (o *InlineResponse20083LoadBalancerNode) SetMonitorNil() {
	o.Monitor.Set(nil)
}

// UnsetMonitor ensures that no value is present for Monitor, not even an explicit nil
func (o *InlineResponse20083LoadBalancerNode) UnsetMonitor() {
	o.Monitor.Unset()
}

// GetMaxConnections returns the MaxConnections field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20083LoadBalancerNode) GetMaxConnections() int64 {
	if o == nil || o.MaxConnections.Get() == nil {
		var ret int64
		return ret
	}
	return *o.MaxConnections.Get()
}

// GetMaxConnectionsOk returns a tuple with the MaxConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20083LoadBalancerNode) GetMaxConnectionsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxConnections.Get(), o.MaxConnections.IsSet()
}

// HasMaxConnections returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasMaxConnections() bool {
	if o != nil && o.MaxConnections.IsSet() {
		return true
	}

	return false
}

// SetMaxConnections gets a reference to the given NullableInt64 and assigns it to the MaxConnections field.
func (o *InlineResponse20083LoadBalancerNode) SetMaxConnections(v int64) {
	o.MaxConnections.Set(&v)
}
// SetMaxConnectionsNil sets the value for MaxConnections to be an explicit nil
func (o *InlineResponse20083LoadBalancerNode) SetMaxConnectionsNil() {
	o.MaxConnections.Set(nil)
}

// UnsetMaxConnections ensures that no value is present for MaxConnections, not even an explicit nil
func (o *InlineResponse20083LoadBalancerNode) UnsetMaxConnections() {
	o.MaxConnections.Unset()
}

// GetExternalRefType returns the ExternalRefType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20083LoadBalancerNode) GetExternalRefType() string {
	if o == nil || o.ExternalRefType.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalRefType.Get()
}

// GetExternalRefTypeOk returns a tuple with the ExternalRefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20083LoadBalancerNode) GetExternalRefTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalRefType.Get(), o.ExternalRefType.IsSet()
}

// HasExternalRefType returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasExternalRefType() bool {
	if o != nil && o.ExternalRefType.IsSet() {
		return true
	}

	return false
}

// SetExternalRefType gets a reference to the given NullableString and assigns it to the ExternalRefType field.
func (o *InlineResponse20083LoadBalancerNode) SetExternalRefType(v string) {
	o.ExternalRefType.Set(&v)
}
// SetExternalRefTypeNil sets the value for ExternalRefType to be an explicit nil
func (o *InlineResponse20083LoadBalancerNode) SetExternalRefTypeNil() {
	o.ExternalRefType.Set(nil)
}

// UnsetExternalRefType ensures that no value is present for ExternalRefType, not even an explicit nil
func (o *InlineResponse20083LoadBalancerNode) UnsetExternalRefType() {
	o.ExternalRefType.Unset()
}

// GetExternalRefId returns the ExternalRefId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20083LoadBalancerNode) GetExternalRefId() string {
	if o == nil || o.ExternalRefId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalRefId.Get()
}

// GetExternalRefIdOk returns a tuple with the ExternalRefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20083LoadBalancerNode) GetExternalRefIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalRefId.Get(), o.ExternalRefId.IsSet()
}

// HasExternalRefId returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasExternalRefId() bool {
	if o != nil && o.ExternalRefId.IsSet() {
		return true
	}

	return false
}

// SetExternalRefId gets a reference to the given NullableString and assigns it to the ExternalRefId field.
func (o *InlineResponse20083LoadBalancerNode) SetExternalRefId(v string) {
	o.ExternalRefId.Set(&v)
}
// SetExternalRefIdNil sets the value for ExternalRefId to be an explicit nil
func (o *InlineResponse20083LoadBalancerNode) SetExternalRefIdNil() {
	o.ExternalRefId.Set(nil)
}

// UnsetExternalRefId ensures that no value is present for ExternalRefId, not even an explicit nil
func (o *InlineResponse20083LoadBalancerNode) UnsetExternalRefId() {
	o.ExternalRefId.Unset()
}

// GetExternalRefName returns the ExternalRefName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20083LoadBalancerNode) GetExternalRefName() string {
	if o == nil || o.ExternalRefName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalRefName.Get()
}

// GetExternalRefNameOk returns a tuple with the ExternalRefName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20083LoadBalancerNode) GetExternalRefNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalRefName.Get(), o.ExternalRefName.IsSet()
}

// HasExternalRefName returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasExternalRefName() bool {
	if o != nil && o.ExternalRefName.IsSet() {
		return true
	}

	return false
}

// SetExternalRefName gets a reference to the given NullableString and assigns it to the ExternalRefName field.
func (o *InlineResponse20083LoadBalancerNode) SetExternalRefName(v string) {
	o.ExternalRefName.Set(&v)
}
// SetExternalRefNameNil sets the value for ExternalRefName to be an explicit nil
func (o *InlineResponse20083LoadBalancerNode) SetExternalRefNameNil() {
	o.ExternalRefName.Set(nil)
}

// UnsetExternalRefName ensures that no value is present for ExternalRefName, not even an explicit nil
func (o *InlineResponse20083LoadBalancerNode) UnsetExternalRefName() {
	o.ExternalRefName.Unset()
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20083LoadBalancerNode) GetCreatedBy() InlineResponse20083LoadBalancerNodeCreatedBy {
	if o == nil || o.CreatedBy.Get() == nil {
		var ret InlineResponse20083LoadBalancerNodeCreatedBy
		return ret
	}
	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20083LoadBalancerNode) GetCreatedByOk() (*InlineResponse20083LoadBalancerNodeCreatedBy, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasCreatedBy() bool {
	if o != nil && o.CreatedBy.IsSet() {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given NullableInlineResponse20083LoadBalancerNodeCreatedBy and assigns it to the CreatedBy field.
func (o *InlineResponse20083LoadBalancerNode) SetCreatedBy(v InlineResponse20083LoadBalancerNodeCreatedBy) {
	o.CreatedBy.Set(&v)
}
// SetCreatedByNil sets the value for CreatedBy to be an explicit nil
func (o *InlineResponse20083LoadBalancerNode) SetCreatedByNil() {
	o.CreatedBy.Set(nil)
}

// UnsetCreatedBy ensures that no value is present for CreatedBy, not even an explicit nil
func (o *InlineResponse20083LoadBalancerNode) UnsetCreatedBy() {
	o.CreatedBy.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *InlineResponse20083LoadBalancerNode) GetDateCreated() time.Time {
	if o == nil || o.DateCreated == nil {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20083LoadBalancerNode) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *InlineResponse20083LoadBalancerNode) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *InlineResponse20083LoadBalancerNode) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20083LoadBalancerNode) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *InlineResponse20083LoadBalancerNode) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *InlineResponse20083LoadBalancerNode) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

func (o InlineResponse20083LoadBalancerNode) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.IpAddress != nil {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.PortType.IsSet() {
		toSerialize["portType"] = o.PortType.Get()
	}
	if o.MonitorPort.IsSet() {
		toSerialize["monitorPort"] = o.MonitorPort.Get()
	}
	if o.Weight.IsSet() {
		toSerialize["weight"] = o.Weight.Get()
	}
	if o.NodeState.IsSet() {
		toSerialize["nodeState"] = o.NodeState.Get()
	}
	if o.InternalId.IsSet() {
		toSerialize["internalId"] = o.InternalId.Get()
	}
	if o.ExternalId.IsSet() {
		toSerialize["externalId"] = o.ExternalId.Get()
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StatusMessage.IsSet() {
		toSerialize["statusMessage"] = o.StatusMessage.Get()
	}
	if o.StatusDate.IsSet() {
		toSerialize["statusDate"] = o.StatusDate.Get()
	}
	if o.Server.IsSet() {
		toSerialize["server"] = o.Server.Get()
	}
	if o.InstanceId.IsSet() {
		toSerialize["instanceId"] = o.InstanceId.Get()
	}
	if o.ContainerId.IsSet() {
		toSerialize["containerId"] = o.ContainerId.Get()
	}
	if o.NodeSource.IsSet() {
		toSerialize["nodeSource"] = o.NodeSource.Get()
	}
	if o.Monitor.IsSet() {
		toSerialize["monitor"] = o.Monitor.Get()
	}
	if o.MaxConnections.IsSet() {
		toSerialize["maxConnections"] = o.MaxConnections.Get()
	}
	if o.ExternalRefType.IsSet() {
		toSerialize["externalRefType"] = o.ExternalRefType.Get()
	}
	if o.ExternalRefId.IsSet() {
		toSerialize["externalRefId"] = o.ExternalRefId.Get()
	}
	if o.ExternalRefName.IsSet() {
		toSerialize["externalRefName"] = o.ExternalRefName.Get()
	}
	if o.CreatedBy.IsSet() {
		toSerialize["createdBy"] = o.CreatedBy.Get()
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20083LoadBalancerNode struct {
	value *InlineResponse20083LoadBalancerNode
	isSet bool
}

func (v NullableInlineResponse20083LoadBalancerNode) Get() *InlineResponse20083LoadBalancerNode {
	return v.value
}

func (v *NullableInlineResponse20083LoadBalancerNode) Set(val *InlineResponse20083LoadBalancerNode) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20083LoadBalancerNode) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20083LoadBalancerNode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20083LoadBalancerNode(val *InlineResponse20083LoadBalancerNode) *NullableInlineResponse20083LoadBalancerNode {
	return &NullableInlineResponse20083LoadBalancerNode{value: val, isSet: true}
}

func (v NullableInlineResponse20083LoadBalancerNode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20083LoadBalancerNode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


