/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ClusterJobs struct for ClusterJobs
type ClusterJobs struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Labels *[]string `json:"labels,omitempty"`
	Type *InlineResponse20094Network `json:"type,omitempty"`
	JobSummary NullableString `json:"jobSummary,omitempty"`
	ScheduleMode NullableString `json:"scheduleMode,omitempty"`
	DateTime NullableTime `json:"dateTime,omitempty"`
	Status NullableString `json:"status,omitempty"`
	Namespace NullableString `json:"namespace,omitempty"`
	Category *string `json:"category,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	LastRun NullableTime `json:"lastRun,omitempty"`
	LastResult NullableString `json:"lastResult,omitempty"`
	CreatedBy NullableInlineResponse20083LoadBalancerNodeCreatedBy `json:"createdBy,omitempty"`
	TargetType NullableString `json:"targetType,omitempty"`
	Targets *[]map[string]interface{} `json:"targets,omitempty"`
	CustomConfig map[string]interface{} `json:"customConfig,omitempty"`
	CustomOptions map[string]interface{} `json:"customOptions,omitempty"`
}

// NewClusterJobs instantiates a new ClusterJobs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterJobs() *ClusterJobs {
	this := ClusterJobs{}
	return &this
}

// NewClusterJobsWithDefaults instantiates a new ClusterJobs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterJobsWithDefaults() *ClusterJobs {
	this := ClusterJobs{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClusterJobs) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterJobs) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClusterJobs) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ClusterJobs) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClusterJobs) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterJobs) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClusterJobs) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClusterJobs) SetName(v string) {
	o.Name = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *ClusterJobs) GetLabels() []string {
	if o == nil || o.Labels == nil {
		var ret []string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterJobs) GetLabelsOk() (*[]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *ClusterJobs) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *ClusterJobs) SetLabels(v []string) {
	o.Labels = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ClusterJobs) GetType() InlineResponse20094Network {
	if o == nil || o.Type == nil {
		var ret InlineResponse20094Network
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterJobs) GetTypeOk() (*InlineResponse20094Network, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ClusterJobs) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given InlineResponse20094Network and assigns it to the Type field.
func (o *ClusterJobs) SetType(v InlineResponse20094Network) {
	o.Type = &v
}

// GetJobSummary returns the JobSummary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterJobs) GetJobSummary() string {
	if o == nil || o.JobSummary.Get() == nil {
		var ret string
		return ret
	}
	return *o.JobSummary.Get()
}

// GetJobSummaryOk returns a tuple with the JobSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterJobs) GetJobSummaryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.JobSummary.Get(), o.JobSummary.IsSet()
}

// HasJobSummary returns a boolean if a field has been set.
func (o *ClusterJobs) HasJobSummary() bool {
	if o != nil && o.JobSummary.IsSet() {
		return true
	}

	return false
}

// SetJobSummary gets a reference to the given NullableString and assigns it to the JobSummary field.
func (o *ClusterJobs) SetJobSummary(v string) {
	o.JobSummary.Set(&v)
}
// SetJobSummaryNil sets the value for JobSummary to be an explicit nil
func (o *ClusterJobs) SetJobSummaryNil() {
	o.JobSummary.Set(nil)
}

// UnsetJobSummary ensures that no value is present for JobSummary, not even an explicit nil
func (o *ClusterJobs) UnsetJobSummary() {
	o.JobSummary.Unset()
}

// GetScheduleMode returns the ScheduleMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterJobs) GetScheduleMode() string {
	if o == nil || o.ScheduleMode.Get() == nil {
		var ret string
		return ret
	}
	return *o.ScheduleMode.Get()
}

// GetScheduleModeOk returns a tuple with the ScheduleMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterJobs) GetScheduleModeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ScheduleMode.Get(), o.ScheduleMode.IsSet()
}

// HasScheduleMode returns a boolean if a field has been set.
func (o *ClusterJobs) HasScheduleMode() bool {
	if o != nil && o.ScheduleMode.IsSet() {
		return true
	}

	return false
}

// SetScheduleMode gets a reference to the given NullableString and assigns it to the ScheduleMode field.
func (o *ClusterJobs) SetScheduleMode(v string) {
	o.ScheduleMode.Set(&v)
}
// SetScheduleModeNil sets the value for ScheduleMode to be an explicit nil
func (o *ClusterJobs) SetScheduleModeNil() {
	o.ScheduleMode.Set(nil)
}

// UnsetScheduleMode ensures that no value is present for ScheduleMode, not even an explicit nil
func (o *ClusterJobs) UnsetScheduleMode() {
	o.ScheduleMode.Unset()
}

// GetDateTime returns the DateTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterJobs) GetDateTime() time.Time {
	if o == nil || o.DateTime.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTime.Get()
}

// GetDateTimeOk returns a tuple with the DateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterJobs) GetDateTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DateTime.Get(), o.DateTime.IsSet()
}

// HasDateTime returns a boolean if a field has been set.
func (o *ClusterJobs) HasDateTime() bool {
	if o != nil && o.DateTime.IsSet() {
		return true
	}

	return false
}

// SetDateTime gets a reference to the given NullableTime and assigns it to the DateTime field.
func (o *ClusterJobs) SetDateTime(v time.Time) {
	o.DateTime.Set(&v)
}
// SetDateTimeNil sets the value for DateTime to be an explicit nil
func (o *ClusterJobs) SetDateTimeNil() {
	o.DateTime.Set(nil)
}

// UnsetDateTime ensures that no value is present for DateTime, not even an explicit nil
func (o *ClusterJobs) UnsetDateTime() {
	o.DateTime.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterJobs) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterJobs) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *ClusterJobs) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *ClusterJobs) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *ClusterJobs) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *ClusterJobs) UnsetStatus() {
	o.Status.Unset()
}

// GetNamespace returns the Namespace field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterJobs) GetNamespace() string {
	if o == nil || o.Namespace.Get() == nil {
		var ret string
		return ret
	}
	return *o.Namespace.Get()
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterJobs) GetNamespaceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Namespace.Get(), o.Namespace.IsSet()
}

// HasNamespace returns a boolean if a field has been set.
func (o *ClusterJobs) HasNamespace() bool {
	if o != nil && o.Namespace.IsSet() {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given NullableString and assigns it to the Namespace field.
func (o *ClusterJobs) SetNamespace(v string) {
	o.Namespace.Set(&v)
}
// SetNamespaceNil sets the value for Namespace to be an explicit nil
func (o *ClusterJobs) SetNamespaceNil() {
	o.Namespace.Set(nil)
}

// UnsetNamespace ensures that no value is present for Namespace, not even an explicit nil
func (o *ClusterJobs) UnsetNamespace() {
	o.Namespace.Unset()
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ClusterJobs) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterJobs) GetCategoryOk() (*string, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *ClusterJobs) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *ClusterJobs) SetCategory(v string) {
	o.Category = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterJobs) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterJobs) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ClusterJobs) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ClusterJobs) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ClusterJobs) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ClusterJobs) UnsetDescription() {
	o.Description.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ClusterJobs) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterJobs) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ClusterJobs) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ClusterJobs) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *ClusterJobs) GetDateCreated() time.Time {
	if o == nil || o.DateCreated == nil {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterJobs) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *ClusterJobs) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *ClusterJobs) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ClusterJobs) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterJobs) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *ClusterJobs) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *ClusterJobs) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastRun returns the LastRun field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterJobs) GetLastRun() time.Time {
	if o == nil || o.LastRun.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.LastRun.Get()
}

// GetLastRunOk returns a tuple with the LastRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterJobs) GetLastRunOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastRun.Get(), o.LastRun.IsSet()
}

// HasLastRun returns a boolean if a field has been set.
func (o *ClusterJobs) HasLastRun() bool {
	if o != nil && o.LastRun.IsSet() {
		return true
	}

	return false
}

// SetLastRun gets a reference to the given NullableTime and assigns it to the LastRun field.
func (o *ClusterJobs) SetLastRun(v time.Time) {
	o.LastRun.Set(&v)
}
// SetLastRunNil sets the value for LastRun to be an explicit nil
func (o *ClusterJobs) SetLastRunNil() {
	o.LastRun.Set(nil)
}

// UnsetLastRun ensures that no value is present for LastRun, not even an explicit nil
func (o *ClusterJobs) UnsetLastRun() {
	o.LastRun.Unset()
}

// GetLastResult returns the LastResult field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterJobs) GetLastResult() string {
	if o == nil || o.LastResult.Get() == nil {
		var ret string
		return ret
	}
	return *o.LastResult.Get()
}

// GetLastResultOk returns a tuple with the LastResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterJobs) GetLastResultOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastResult.Get(), o.LastResult.IsSet()
}

// HasLastResult returns a boolean if a field has been set.
func (o *ClusterJobs) HasLastResult() bool {
	if o != nil && o.LastResult.IsSet() {
		return true
	}

	return false
}

// SetLastResult gets a reference to the given NullableString and assigns it to the LastResult field.
func (o *ClusterJobs) SetLastResult(v string) {
	o.LastResult.Set(&v)
}
// SetLastResultNil sets the value for LastResult to be an explicit nil
func (o *ClusterJobs) SetLastResultNil() {
	o.LastResult.Set(nil)
}

// UnsetLastResult ensures that no value is present for LastResult, not even an explicit nil
func (o *ClusterJobs) UnsetLastResult() {
	o.LastResult.Unset()
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterJobs) GetCreatedBy() InlineResponse20083LoadBalancerNodeCreatedBy {
	if o == nil || o.CreatedBy.Get() == nil {
		var ret InlineResponse20083LoadBalancerNodeCreatedBy
		return ret
	}
	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterJobs) GetCreatedByOk() (*InlineResponse20083LoadBalancerNodeCreatedBy, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ClusterJobs) HasCreatedBy() bool {
	if o != nil && o.CreatedBy.IsSet() {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given NullableInlineResponse20083LoadBalancerNodeCreatedBy and assigns it to the CreatedBy field.
func (o *ClusterJobs) SetCreatedBy(v InlineResponse20083LoadBalancerNodeCreatedBy) {
	o.CreatedBy.Set(&v)
}
// SetCreatedByNil sets the value for CreatedBy to be an explicit nil
func (o *ClusterJobs) SetCreatedByNil() {
	o.CreatedBy.Set(nil)
}

// UnsetCreatedBy ensures that no value is present for CreatedBy, not even an explicit nil
func (o *ClusterJobs) UnsetCreatedBy() {
	o.CreatedBy.Unset()
}

// GetTargetType returns the TargetType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterJobs) GetTargetType() string {
	if o == nil || o.TargetType.Get() == nil {
		var ret string
		return ret
	}
	return *o.TargetType.Get()
}

// GetTargetTypeOk returns a tuple with the TargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterJobs) GetTargetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TargetType.Get(), o.TargetType.IsSet()
}

// HasTargetType returns a boolean if a field has been set.
func (o *ClusterJobs) HasTargetType() bool {
	if o != nil && o.TargetType.IsSet() {
		return true
	}

	return false
}

// SetTargetType gets a reference to the given NullableString and assigns it to the TargetType field.
func (o *ClusterJobs) SetTargetType(v string) {
	o.TargetType.Set(&v)
}
// SetTargetTypeNil sets the value for TargetType to be an explicit nil
func (o *ClusterJobs) SetTargetTypeNil() {
	o.TargetType.Set(nil)
}

// UnsetTargetType ensures that no value is present for TargetType, not even an explicit nil
func (o *ClusterJobs) UnsetTargetType() {
	o.TargetType.Unset()
}

// GetTargets returns the Targets field value if set, zero value otherwise.
func (o *ClusterJobs) GetTargets() []map[string]interface{} {
	if o == nil || o.Targets == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Targets
}

// GetTargetsOk returns a tuple with the Targets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterJobs) GetTargetsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Targets == nil {
		return nil, false
	}
	return o.Targets, true
}

// HasTargets returns a boolean if a field has been set.
func (o *ClusterJobs) HasTargets() bool {
	if o != nil && o.Targets != nil {
		return true
	}

	return false
}

// SetTargets gets a reference to the given []map[string]interface{} and assigns it to the Targets field.
func (o *ClusterJobs) SetTargets(v []map[string]interface{}) {
	o.Targets = &v
}

// GetCustomConfig returns the CustomConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterJobs) GetCustomConfig() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomConfig
}

// GetCustomConfigOk returns a tuple with the CustomConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterJobs) GetCustomConfigOk() (*map[string]interface{}, bool) {
	if o == nil || o.CustomConfig == nil {
		return nil, false
	}
	return &o.CustomConfig, true
}

// HasCustomConfig returns a boolean if a field has been set.
func (o *ClusterJobs) HasCustomConfig() bool {
	if o != nil && o.CustomConfig != nil {
		return true
	}

	return false
}

// SetCustomConfig gets a reference to the given map[string]interface{} and assigns it to the CustomConfig field.
func (o *ClusterJobs) SetCustomConfig(v map[string]interface{}) {
	o.CustomConfig = v
}

// GetCustomOptions returns the CustomOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterJobs) GetCustomOptions() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomOptions
}

// GetCustomOptionsOk returns a tuple with the CustomOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterJobs) GetCustomOptionsOk() (*map[string]interface{}, bool) {
	if o == nil || o.CustomOptions == nil {
		return nil, false
	}
	return &o.CustomOptions, true
}

// HasCustomOptions returns a boolean if a field has been set.
func (o *ClusterJobs) HasCustomOptions() bool {
	if o != nil && o.CustomOptions != nil {
		return true
	}

	return false
}

// SetCustomOptions gets a reference to the given map[string]interface{} and assigns it to the CustomOptions field.
func (o *ClusterJobs) SetCustomOptions(v map[string]interface{}) {
	o.CustomOptions = v
}

func (o ClusterJobs) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.JobSummary.IsSet() {
		toSerialize["jobSummary"] = o.JobSummary.Get()
	}
	if o.ScheduleMode.IsSet() {
		toSerialize["scheduleMode"] = o.ScheduleMode.Get()
	}
	if o.DateTime.IsSet() {
		toSerialize["dateTime"] = o.DateTime.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Namespace.IsSet() {
		toSerialize["namespace"] = o.Namespace.Get()
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if o.LastRun.IsSet() {
		toSerialize["lastRun"] = o.LastRun.Get()
	}
	if o.LastResult.IsSet() {
		toSerialize["lastResult"] = o.LastResult.Get()
	}
	if o.CreatedBy.IsSet() {
		toSerialize["createdBy"] = o.CreatedBy.Get()
	}
	if o.TargetType.IsSet() {
		toSerialize["targetType"] = o.TargetType.Get()
	}
	if o.Targets != nil {
		toSerialize["targets"] = o.Targets
	}
	if o.CustomConfig != nil {
		toSerialize["customConfig"] = o.CustomConfig
	}
	if o.CustomOptions != nil {
		toSerialize["customOptions"] = o.CustomOptions
	}
	return json.Marshal(toSerialize)
}

type NullableClusterJobs struct {
	value *ClusterJobs
	isSet bool
}

func (v NullableClusterJobs) Get() *ClusterJobs {
	return v.value
}

func (v *NullableClusterJobs) Set(val *ClusterJobs) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterJobs) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterJobs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterJobs(val *ClusterJobs) *NullableClusterJobs {
	return &NullableClusterJobs{value: val, isSet: true}
}

func (v NullableClusterJobs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterJobs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


