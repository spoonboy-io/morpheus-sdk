/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject169 struct for InlineObject169
type InlineObject169 struct {
	NetworkDhcpServer *NetworkDhcpServerCreate `json:"networkDhcpServer,omitempty"`
}

// NewInlineObject169 instantiates a new InlineObject169 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject169() *InlineObject169 {
	this := InlineObject169{}
	return &this
}

// NewInlineObject169WithDefaults instantiates a new InlineObject169 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject169WithDefaults() *InlineObject169 {
	this := InlineObject169{}
	return &this
}

// GetNetworkDhcpServer returns the NetworkDhcpServer field value if set, zero value otherwise.
func (o *InlineObject169) GetNetworkDhcpServer() NetworkDhcpServerCreate {
	if o == nil || o.NetworkDhcpServer == nil {
		var ret NetworkDhcpServerCreate
		return ret
	}
	return *o.NetworkDhcpServer
}

// GetNetworkDhcpServerOk returns a tuple with the NetworkDhcpServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject169) GetNetworkDhcpServerOk() (*NetworkDhcpServerCreate, bool) {
	if o == nil || o.NetworkDhcpServer == nil {
		return nil, false
	}
	return o.NetworkDhcpServer, true
}

// HasNetworkDhcpServer returns a boolean if a field has been set.
func (o *InlineObject169) HasNetworkDhcpServer() bool {
	if o != nil && o.NetworkDhcpServer != nil {
		return true
	}

	return false
}

// SetNetworkDhcpServer gets a reference to the given NetworkDhcpServerCreate and assigns it to the NetworkDhcpServer field.
func (o *InlineObject169) SetNetworkDhcpServer(v NetworkDhcpServerCreate) {
	o.NetworkDhcpServer = &v
}

func (o InlineObject169) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkDhcpServer != nil {
		toSerialize["networkDhcpServer"] = o.NetworkDhcpServer
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject169 struct {
	value *InlineObject169
	isSet bool
}

func (v NullableInlineObject169) Get() *InlineObject169 {
	return v.value
}

func (v *NullableInlineObject169) Set(val *InlineObject169) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject169) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject169) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject169(val *InlineObject169) *NullableInlineObject169 {
	return &NullableInlineObject169{value: val, isSet: true}
}

func (v NullableInlineObject169) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject169) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


