/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20084 struct for InlineResponse20084
type InlineResponse20084 struct {
	LogSettings *LogSettings `json:"logSettings,omitempty"`
}

// NewInlineResponse20084 instantiates a new InlineResponse20084 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20084() *InlineResponse20084 {
	this := InlineResponse20084{}
	return &this
}

// NewInlineResponse20084WithDefaults instantiates a new InlineResponse20084 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20084WithDefaults() *InlineResponse20084 {
	this := InlineResponse20084{}
	return &this
}

// GetLogSettings returns the LogSettings field value if set, zero value otherwise.
func (o *InlineResponse20084) GetLogSettings() LogSettings {
	if o == nil || o.LogSettings == nil {
		var ret LogSettings
		return ret
	}
	return *o.LogSettings
}

// GetLogSettingsOk returns a tuple with the LogSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20084) GetLogSettingsOk() (*LogSettings, bool) {
	if o == nil || o.LogSettings == nil {
		return nil, false
	}
	return o.LogSettings, true
}

// HasLogSettings returns a boolean if a field has been set.
func (o *InlineResponse20084) HasLogSettings() bool {
	if o != nil && o.LogSettings != nil {
		return true
	}

	return false
}

// SetLogSettings gets a reference to the given LogSettings and assigns it to the LogSettings field.
func (o *InlineResponse20084) SetLogSettings(v LogSettings) {
	o.LogSettings = &v
}

func (o InlineResponse20084) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LogSettings != nil {
		toSerialize["logSettings"] = o.LogSettings
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20084 struct {
	value *InlineResponse20084
	isSet bool
}

func (v NullableInlineResponse20084) Get() *InlineResponse20084 {
	return v.value
}

func (v *NullableInlineResponse20084) Set(val *InlineResponse20084) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20084) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20084) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20084(val *InlineResponse20084) *NullableInlineResponse20084 {
	return &NullableInlineResponse20084{value: val, isSet: true}
}

func (v NullableInlineResponse20084) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20084) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


