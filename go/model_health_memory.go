/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// HealthMemory struct for HealthMemory
type HealthMemory struct {
	Success *bool `json:"success,omitempty"`
	MaxMemory *int64 `json:"maxMemory,omitempty"`
	TotalMemory *int64 `json:"totalMemory,omitempty"`
	FreeMemory *int64 `json:"freeMemory,omitempty"`
	UsedMemory *int64 `json:"usedMemory,omitempty"`
	SystemMemory *int64 `json:"systemMemory,omitempty"`
	CommittedMemory *int64 `json:"committedMemory,omitempty"`
	SystemFreeMemory *int64 `json:"systemFreeMemory,omitempty"`
	SystemSwap *int64 `json:"systemSwap,omitempty"`
	SystemFreeSwap *int64 `json:"systemFreeSwap,omitempty"`
	SwapPercent *int64 `json:"swapPercent,omitempty"`
	MemoryPercent *float32 `json:"memoryPercent,omitempty"`
	SystemMemoryPercent *float32 `json:"systemMemoryPercent,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewHealthMemory instantiates a new HealthMemory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHealthMemory() *HealthMemory {
	this := HealthMemory{}
	return &this
}

// NewHealthMemoryWithDefaults instantiates a new HealthMemory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHealthMemoryWithDefaults() *HealthMemory {
	this := HealthMemory{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *HealthMemory) GetSuccess() bool {
	if o == nil || o.Success == nil {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthMemory) GetSuccessOk() (*bool, bool) {
	if o == nil || o.Success == nil {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *HealthMemory) HasSuccess() bool {
	if o != nil && o.Success != nil {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *HealthMemory) SetSuccess(v bool) {
	o.Success = &v
}

// GetMaxMemory returns the MaxMemory field value if set, zero value otherwise.
func (o *HealthMemory) GetMaxMemory() int64 {
	if o == nil || o.MaxMemory == nil {
		var ret int64
		return ret
	}
	return *o.MaxMemory
}

// GetMaxMemoryOk returns a tuple with the MaxMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthMemory) GetMaxMemoryOk() (*int64, bool) {
	if o == nil || o.MaxMemory == nil {
		return nil, false
	}
	return o.MaxMemory, true
}

// HasMaxMemory returns a boolean if a field has been set.
func (o *HealthMemory) HasMaxMemory() bool {
	if o != nil && o.MaxMemory != nil {
		return true
	}

	return false
}

// SetMaxMemory gets a reference to the given int64 and assigns it to the MaxMemory field.
func (o *HealthMemory) SetMaxMemory(v int64) {
	o.MaxMemory = &v
}

// GetTotalMemory returns the TotalMemory field value if set, zero value otherwise.
func (o *HealthMemory) GetTotalMemory() int64 {
	if o == nil || o.TotalMemory == nil {
		var ret int64
		return ret
	}
	return *o.TotalMemory
}

// GetTotalMemoryOk returns a tuple with the TotalMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthMemory) GetTotalMemoryOk() (*int64, bool) {
	if o == nil || o.TotalMemory == nil {
		return nil, false
	}
	return o.TotalMemory, true
}

// HasTotalMemory returns a boolean if a field has been set.
func (o *HealthMemory) HasTotalMemory() bool {
	if o != nil && o.TotalMemory != nil {
		return true
	}

	return false
}

// SetTotalMemory gets a reference to the given int64 and assigns it to the TotalMemory field.
func (o *HealthMemory) SetTotalMemory(v int64) {
	o.TotalMemory = &v
}

// GetFreeMemory returns the FreeMemory field value if set, zero value otherwise.
func (o *HealthMemory) GetFreeMemory() int64 {
	if o == nil || o.FreeMemory == nil {
		var ret int64
		return ret
	}
	return *o.FreeMemory
}

// GetFreeMemoryOk returns a tuple with the FreeMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthMemory) GetFreeMemoryOk() (*int64, bool) {
	if o == nil || o.FreeMemory == nil {
		return nil, false
	}
	return o.FreeMemory, true
}

// HasFreeMemory returns a boolean if a field has been set.
func (o *HealthMemory) HasFreeMemory() bool {
	if o != nil && o.FreeMemory != nil {
		return true
	}

	return false
}

// SetFreeMemory gets a reference to the given int64 and assigns it to the FreeMemory field.
func (o *HealthMemory) SetFreeMemory(v int64) {
	o.FreeMemory = &v
}

// GetUsedMemory returns the UsedMemory field value if set, zero value otherwise.
func (o *HealthMemory) GetUsedMemory() int64 {
	if o == nil || o.UsedMemory == nil {
		var ret int64
		return ret
	}
	return *o.UsedMemory
}

// GetUsedMemoryOk returns a tuple with the UsedMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthMemory) GetUsedMemoryOk() (*int64, bool) {
	if o == nil || o.UsedMemory == nil {
		return nil, false
	}
	return o.UsedMemory, true
}

// HasUsedMemory returns a boolean if a field has been set.
func (o *HealthMemory) HasUsedMemory() bool {
	if o != nil && o.UsedMemory != nil {
		return true
	}

	return false
}

// SetUsedMemory gets a reference to the given int64 and assigns it to the UsedMemory field.
func (o *HealthMemory) SetUsedMemory(v int64) {
	o.UsedMemory = &v
}

// GetSystemMemory returns the SystemMemory field value if set, zero value otherwise.
func (o *HealthMemory) GetSystemMemory() int64 {
	if o == nil || o.SystemMemory == nil {
		var ret int64
		return ret
	}
	return *o.SystemMemory
}

// GetSystemMemoryOk returns a tuple with the SystemMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthMemory) GetSystemMemoryOk() (*int64, bool) {
	if o == nil || o.SystemMemory == nil {
		return nil, false
	}
	return o.SystemMemory, true
}

// HasSystemMemory returns a boolean if a field has been set.
func (o *HealthMemory) HasSystemMemory() bool {
	if o != nil && o.SystemMemory != nil {
		return true
	}

	return false
}

// SetSystemMemory gets a reference to the given int64 and assigns it to the SystemMemory field.
func (o *HealthMemory) SetSystemMemory(v int64) {
	o.SystemMemory = &v
}

// GetCommittedMemory returns the CommittedMemory field value if set, zero value otherwise.
func (o *HealthMemory) GetCommittedMemory() int64 {
	if o == nil || o.CommittedMemory == nil {
		var ret int64
		return ret
	}
	return *o.CommittedMemory
}

// GetCommittedMemoryOk returns a tuple with the CommittedMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthMemory) GetCommittedMemoryOk() (*int64, bool) {
	if o == nil || o.CommittedMemory == nil {
		return nil, false
	}
	return o.CommittedMemory, true
}

// HasCommittedMemory returns a boolean if a field has been set.
func (o *HealthMemory) HasCommittedMemory() bool {
	if o != nil && o.CommittedMemory != nil {
		return true
	}

	return false
}

// SetCommittedMemory gets a reference to the given int64 and assigns it to the CommittedMemory field.
func (o *HealthMemory) SetCommittedMemory(v int64) {
	o.CommittedMemory = &v
}

// GetSystemFreeMemory returns the SystemFreeMemory field value if set, zero value otherwise.
func (o *HealthMemory) GetSystemFreeMemory() int64 {
	if o == nil || o.SystemFreeMemory == nil {
		var ret int64
		return ret
	}
	return *o.SystemFreeMemory
}

// GetSystemFreeMemoryOk returns a tuple with the SystemFreeMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthMemory) GetSystemFreeMemoryOk() (*int64, bool) {
	if o == nil || o.SystemFreeMemory == nil {
		return nil, false
	}
	return o.SystemFreeMemory, true
}

// HasSystemFreeMemory returns a boolean if a field has been set.
func (o *HealthMemory) HasSystemFreeMemory() bool {
	if o != nil && o.SystemFreeMemory != nil {
		return true
	}

	return false
}

// SetSystemFreeMemory gets a reference to the given int64 and assigns it to the SystemFreeMemory field.
func (o *HealthMemory) SetSystemFreeMemory(v int64) {
	o.SystemFreeMemory = &v
}

// GetSystemSwap returns the SystemSwap field value if set, zero value otherwise.
func (o *HealthMemory) GetSystemSwap() int64 {
	if o == nil || o.SystemSwap == nil {
		var ret int64
		return ret
	}
	return *o.SystemSwap
}

// GetSystemSwapOk returns a tuple with the SystemSwap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthMemory) GetSystemSwapOk() (*int64, bool) {
	if o == nil || o.SystemSwap == nil {
		return nil, false
	}
	return o.SystemSwap, true
}

// HasSystemSwap returns a boolean if a field has been set.
func (o *HealthMemory) HasSystemSwap() bool {
	if o != nil && o.SystemSwap != nil {
		return true
	}

	return false
}

// SetSystemSwap gets a reference to the given int64 and assigns it to the SystemSwap field.
func (o *HealthMemory) SetSystemSwap(v int64) {
	o.SystemSwap = &v
}

// GetSystemFreeSwap returns the SystemFreeSwap field value if set, zero value otherwise.
func (o *HealthMemory) GetSystemFreeSwap() int64 {
	if o == nil || o.SystemFreeSwap == nil {
		var ret int64
		return ret
	}
	return *o.SystemFreeSwap
}

// GetSystemFreeSwapOk returns a tuple with the SystemFreeSwap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthMemory) GetSystemFreeSwapOk() (*int64, bool) {
	if o == nil || o.SystemFreeSwap == nil {
		return nil, false
	}
	return o.SystemFreeSwap, true
}

// HasSystemFreeSwap returns a boolean if a field has been set.
func (o *HealthMemory) HasSystemFreeSwap() bool {
	if o != nil && o.SystemFreeSwap != nil {
		return true
	}

	return false
}

// SetSystemFreeSwap gets a reference to the given int64 and assigns it to the SystemFreeSwap field.
func (o *HealthMemory) SetSystemFreeSwap(v int64) {
	o.SystemFreeSwap = &v
}

// GetSwapPercent returns the SwapPercent field value if set, zero value otherwise.
func (o *HealthMemory) GetSwapPercent() int64 {
	if o == nil || o.SwapPercent == nil {
		var ret int64
		return ret
	}
	return *o.SwapPercent
}

// GetSwapPercentOk returns a tuple with the SwapPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthMemory) GetSwapPercentOk() (*int64, bool) {
	if o == nil || o.SwapPercent == nil {
		return nil, false
	}
	return o.SwapPercent, true
}

// HasSwapPercent returns a boolean if a field has been set.
func (o *HealthMemory) HasSwapPercent() bool {
	if o != nil && o.SwapPercent != nil {
		return true
	}

	return false
}

// SetSwapPercent gets a reference to the given int64 and assigns it to the SwapPercent field.
func (o *HealthMemory) SetSwapPercent(v int64) {
	o.SwapPercent = &v
}

// GetMemoryPercent returns the MemoryPercent field value if set, zero value otherwise.
func (o *HealthMemory) GetMemoryPercent() float32 {
	if o == nil || o.MemoryPercent == nil {
		var ret float32
		return ret
	}
	return *o.MemoryPercent
}

// GetMemoryPercentOk returns a tuple with the MemoryPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthMemory) GetMemoryPercentOk() (*float32, bool) {
	if o == nil || o.MemoryPercent == nil {
		return nil, false
	}
	return o.MemoryPercent, true
}

// HasMemoryPercent returns a boolean if a field has been set.
func (o *HealthMemory) HasMemoryPercent() bool {
	if o != nil && o.MemoryPercent != nil {
		return true
	}

	return false
}

// SetMemoryPercent gets a reference to the given float32 and assigns it to the MemoryPercent field.
func (o *HealthMemory) SetMemoryPercent(v float32) {
	o.MemoryPercent = &v
}

// GetSystemMemoryPercent returns the SystemMemoryPercent field value if set, zero value otherwise.
func (o *HealthMemory) GetSystemMemoryPercent() float32 {
	if o == nil || o.SystemMemoryPercent == nil {
		var ret float32
		return ret
	}
	return *o.SystemMemoryPercent
}

// GetSystemMemoryPercentOk returns a tuple with the SystemMemoryPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthMemory) GetSystemMemoryPercentOk() (*float32, bool) {
	if o == nil || o.SystemMemoryPercent == nil {
		return nil, false
	}
	return o.SystemMemoryPercent, true
}

// HasSystemMemoryPercent returns a boolean if a field has been set.
func (o *HealthMemory) HasSystemMemoryPercent() bool {
	if o != nil && o.SystemMemoryPercent != nil {
		return true
	}

	return false
}

// SetSystemMemoryPercent gets a reference to the given float32 and assigns it to the SystemMemoryPercent field.
func (o *HealthMemory) SetSystemMemoryPercent(v float32) {
	o.SystemMemoryPercent = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *HealthMemory) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthMemory) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *HealthMemory) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *HealthMemory) SetStatus(v string) {
	o.Status = &v
}

func (o HealthMemory) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Success != nil {
		toSerialize["success"] = o.Success
	}
	if o.MaxMemory != nil {
		toSerialize["maxMemory"] = o.MaxMemory
	}
	if o.TotalMemory != nil {
		toSerialize["totalMemory"] = o.TotalMemory
	}
	if o.FreeMemory != nil {
		toSerialize["freeMemory"] = o.FreeMemory
	}
	if o.UsedMemory != nil {
		toSerialize["usedMemory"] = o.UsedMemory
	}
	if o.SystemMemory != nil {
		toSerialize["systemMemory"] = o.SystemMemory
	}
	if o.CommittedMemory != nil {
		toSerialize["committedMemory"] = o.CommittedMemory
	}
	if o.SystemFreeMemory != nil {
		toSerialize["systemFreeMemory"] = o.SystemFreeMemory
	}
	if o.SystemSwap != nil {
		toSerialize["systemSwap"] = o.SystemSwap
	}
	if o.SystemFreeSwap != nil {
		toSerialize["systemFreeSwap"] = o.SystemFreeSwap
	}
	if o.SwapPercent != nil {
		toSerialize["swapPercent"] = o.SwapPercent
	}
	if o.MemoryPercent != nil {
		toSerialize["memoryPercent"] = o.MemoryPercent
	}
	if o.SystemMemoryPercent != nil {
		toSerialize["systemMemoryPercent"] = o.SystemMemoryPercent
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableHealthMemory struct {
	value *HealthMemory
	isSet bool
}

func (v NullableHealthMemory) Get() *HealthMemory {
	return v.value
}

func (v *NullableHealthMemory) Set(val *HealthMemory) {
	v.value = val
	v.isSet = true
}

func (v NullableHealthMemory) IsSet() bool {
	return v.isSet
}

func (v *NullableHealthMemory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHealthMemory(val *HealthMemory) *NullableHealthMemory {
	return &NullableHealthMemory{value: val, isSet: true}
}

func (v NullableHealthMemory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHealthMemory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


