/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20029 struct for InlineResponse20029
type InlineResponse20029 struct {
	ProcessEvent *ClusterHistoryEventItem `json:"processEvent,omitempty"`
}

// NewInlineResponse20029 instantiates a new InlineResponse20029 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20029() *InlineResponse20029 {
	this := InlineResponse20029{}
	return &this
}

// NewInlineResponse20029WithDefaults instantiates a new InlineResponse20029 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20029WithDefaults() *InlineResponse20029 {
	this := InlineResponse20029{}
	return &this
}

// GetProcessEvent returns the ProcessEvent field value if set, zero value otherwise.
func (o *InlineResponse20029) GetProcessEvent() ClusterHistoryEventItem {
	if o == nil || o.ProcessEvent == nil {
		var ret ClusterHistoryEventItem
		return ret
	}
	return *o.ProcessEvent
}

// GetProcessEventOk returns a tuple with the ProcessEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20029) GetProcessEventOk() (*ClusterHistoryEventItem, bool) {
	if o == nil || o.ProcessEvent == nil {
		return nil, false
	}
	return o.ProcessEvent, true
}

// HasProcessEvent returns a boolean if a field has been set.
func (o *InlineResponse20029) HasProcessEvent() bool {
	if o != nil && o.ProcessEvent != nil {
		return true
	}

	return false
}

// SetProcessEvent gets a reference to the given ClusterHistoryEventItem and assigns it to the ProcessEvent field.
func (o *InlineResponse20029) SetProcessEvent(v ClusterHistoryEventItem) {
	o.ProcessEvent = &v
}

func (o InlineResponse20029) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProcessEvent != nil {
		toSerialize["processEvent"] = o.ProcessEvent
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20029 struct {
	value *InlineResponse20029
	isSet bool
}

func (v NullableInlineResponse20029) Get() *InlineResponse20029 {
	return v.value
}

func (v *NullableInlineResponse20029) Set(val *InlineResponse20029) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20029) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20029) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20029(val *InlineResponse20029) *NullableInlineResponse20029 {
	return &NullableInlineResponse20029{value: val, isSet: true}
}

func (v NullableInlineResponse20029) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20029) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


