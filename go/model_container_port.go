/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ContainerPort struct for ContainerPort
type ContainerPort struct {
	Id *int64 `json:"id,omitempty"`
	Index *int64 `json:"index,omitempty"`
	External *int64 `json:"external,omitempty"`
	Internal *int64 `json:"internal,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	PrimaryPort *bool `json:"primaryPort,omitempty"`
	Export *bool `json:"export,omitempty"`
	Visible *bool `json:"visible,omitempty"`
	ExportName *string `json:"exportName,omitempty"`
	LoadBalanceProtocol *string `json:"loadBalanceProtocol,omitempty"`
	LoadBalance *bool `json:"loadBalance,omitempty"`
	Protocol *string `json:"protocol,omitempty"`
	Link *bool `json:"link,omitempty"`
	ExternalIp NullableString `json:"externalIp,omitempty"`
	InternalIp NullableString `json:"internalIp,omitempty"`
}

// NewContainerPort instantiates a new ContainerPort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerPort() *ContainerPort {
	this := ContainerPort{}
	return &this
}

// NewContainerPortWithDefaults instantiates a new ContainerPort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerPortWithDefaults() *ContainerPort {
	this := ContainerPort{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ContainerPort) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerPort) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ContainerPort) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ContainerPort) SetId(v int64) {
	o.Id = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *ContainerPort) GetIndex() int64 {
	if o == nil || o.Index == nil {
		var ret int64
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerPort) GetIndexOk() (*int64, bool) {
	if o == nil || o.Index == nil {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *ContainerPort) HasIndex() bool {
	if o != nil && o.Index != nil {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int64 and assigns it to the Index field.
func (o *ContainerPort) SetIndex(v int64) {
	o.Index = &v
}

// GetExternal returns the External field value if set, zero value otherwise.
func (o *ContainerPort) GetExternal() int64 {
	if o == nil || o.External == nil {
		var ret int64
		return ret
	}
	return *o.External
}

// GetExternalOk returns a tuple with the External field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerPort) GetExternalOk() (*int64, bool) {
	if o == nil || o.External == nil {
		return nil, false
	}
	return o.External, true
}

// HasExternal returns a boolean if a field has been set.
func (o *ContainerPort) HasExternal() bool {
	if o != nil && o.External != nil {
		return true
	}

	return false
}

// SetExternal gets a reference to the given int64 and assigns it to the External field.
func (o *ContainerPort) SetExternal(v int64) {
	o.External = &v
}

// GetInternal returns the Internal field value if set, zero value otherwise.
func (o *ContainerPort) GetInternal() int64 {
	if o == nil || o.Internal == nil {
		var ret int64
		return ret
	}
	return *o.Internal
}

// GetInternalOk returns a tuple with the Internal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerPort) GetInternalOk() (*int64, bool) {
	if o == nil || o.Internal == nil {
		return nil, false
	}
	return o.Internal, true
}

// HasInternal returns a boolean if a field has been set.
func (o *ContainerPort) HasInternal() bool {
	if o != nil && o.Internal != nil {
		return true
	}

	return false
}

// SetInternal gets a reference to the given int64 and assigns it to the Internal field.
func (o *ContainerPort) SetInternal(v int64) {
	o.Internal = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ContainerPort) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerPort) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ContainerPort) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ContainerPort) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetPrimaryPort returns the PrimaryPort field value if set, zero value otherwise.
func (o *ContainerPort) GetPrimaryPort() bool {
	if o == nil || o.PrimaryPort == nil {
		var ret bool
		return ret
	}
	return *o.PrimaryPort
}

// GetPrimaryPortOk returns a tuple with the PrimaryPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerPort) GetPrimaryPortOk() (*bool, bool) {
	if o == nil || o.PrimaryPort == nil {
		return nil, false
	}
	return o.PrimaryPort, true
}

// HasPrimaryPort returns a boolean if a field has been set.
func (o *ContainerPort) HasPrimaryPort() bool {
	if o != nil && o.PrimaryPort != nil {
		return true
	}

	return false
}

// SetPrimaryPort gets a reference to the given bool and assigns it to the PrimaryPort field.
func (o *ContainerPort) SetPrimaryPort(v bool) {
	o.PrimaryPort = &v
}

// GetExport returns the Export field value if set, zero value otherwise.
func (o *ContainerPort) GetExport() bool {
	if o == nil || o.Export == nil {
		var ret bool
		return ret
	}
	return *o.Export
}

// GetExportOk returns a tuple with the Export field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerPort) GetExportOk() (*bool, bool) {
	if o == nil || o.Export == nil {
		return nil, false
	}
	return o.Export, true
}

// HasExport returns a boolean if a field has been set.
func (o *ContainerPort) HasExport() bool {
	if o != nil && o.Export != nil {
		return true
	}

	return false
}

// SetExport gets a reference to the given bool and assigns it to the Export field.
func (o *ContainerPort) SetExport(v bool) {
	o.Export = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *ContainerPort) GetVisible() bool {
	if o == nil || o.Visible == nil {
		var ret bool
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerPort) GetVisibleOk() (*bool, bool) {
	if o == nil || o.Visible == nil {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *ContainerPort) HasVisible() bool {
	if o != nil && o.Visible != nil {
		return true
	}

	return false
}

// SetVisible gets a reference to the given bool and assigns it to the Visible field.
func (o *ContainerPort) SetVisible(v bool) {
	o.Visible = &v
}

// GetExportName returns the ExportName field value if set, zero value otherwise.
func (o *ContainerPort) GetExportName() string {
	if o == nil || o.ExportName == nil {
		var ret string
		return ret
	}
	return *o.ExportName
}

// GetExportNameOk returns a tuple with the ExportName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerPort) GetExportNameOk() (*string, bool) {
	if o == nil || o.ExportName == nil {
		return nil, false
	}
	return o.ExportName, true
}

// HasExportName returns a boolean if a field has been set.
func (o *ContainerPort) HasExportName() bool {
	if o != nil && o.ExportName != nil {
		return true
	}

	return false
}

// SetExportName gets a reference to the given string and assigns it to the ExportName field.
func (o *ContainerPort) SetExportName(v string) {
	o.ExportName = &v
}

// GetLoadBalanceProtocol returns the LoadBalanceProtocol field value if set, zero value otherwise.
func (o *ContainerPort) GetLoadBalanceProtocol() string {
	if o == nil || o.LoadBalanceProtocol == nil {
		var ret string
		return ret
	}
	return *o.LoadBalanceProtocol
}

// GetLoadBalanceProtocolOk returns a tuple with the LoadBalanceProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerPort) GetLoadBalanceProtocolOk() (*string, bool) {
	if o == nil || o.LoadBalanceProtocol == nil {
		return nil, false
	}
	return o.LoadBalanceProtocol, true
}

// HasLoadBalanceProtocol returns a boolean if a field has been set.
func (o *ContainerPort) HasLoadBalanceProtocol() bool {
	if o != nil && o.LoadBalanceProtocol != nil {
		return true
	}

	return false
}

// SetLoadBalanceProtocol gets a reference to the given string and assigns it to the LoadBalanceProtocol field.
func (o *ContainerPort) SetLoadBalanceProtocol(v string) {
	o.LoadBalanceProtocol = &v
}

// GetLoadBalance returns the LoadBalance field value if set, zero value otherwise.
func (o *ContainerPort) GetLoadBalance() bool {
	if o == nil || o.LoadBalance == nil {
		var ret bool
		return ret
	}
	return *o.LoadBalance
}

// GetLoadBalanceOk returns a tuple with the LoadBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerPort) GetLoadBalanceOk() (*bool, bool) {
	if o == nil || o.LoadBalance == nil {
		return nil, false
	}
	return o.LoadBalance, true
}

// HasLoadBalance returns a boolean if a field has been set.
func (o *ContainerPort) HasLoadBalance() bool {
	if o != nil && o.LoadBalance != nil {
		return true
	}

	return false
}

// SetLoadBalance gets a reference to the given bool and assigns it to the LoadBalance field.
func (o *ContainerPort) SetLoadBalance(v bool) {
	o.LoadBalance = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *ContainerPort) GetProtocol() string {
	if o == nil || o.Protocol == nil {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerPort) GetProtocolOk() (*string, bool) {
	if o == nil || o.Protocol == nil {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *ContainerPort) HasProtocol() bool {
	if o != nil && o.Protocol != nil {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *ContainerPort) SetProtocol(v string) {
	o.Protocol = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *ContainerPort) GetLink() bool {
	if o == nil || o.Link == nil {
		var ret bool
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerPort) GetLinkOk() (*bool, bool) {
	if o == nil || o.Link == nil {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *ContainerPort) HasLink() bool {
	if o != nil && o.Link != nil {
		return true
	}

	return false
}

// SetLink gets a reference to the given bool and assigns it to the Link field.
func (o *ContainerPort) SetLink(v bool) {
	o.Link = &v
}

// GetExternalIp returns the ExternalIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContainerPort) GetExternalIp() string {
	if o == nil || o.ExternalIp.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalIp.Get()
}

// GetExternalIpOk returns a tuple with the ExternalIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerPort) GetExternalIpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalIp.Get(), o.ExternalIp.IsSet()
}

// HasExternalIp returns a boolean if a field has been set.
func (o *ContainerPort) HasExternalIp() bool {
	if o != nil && o.ExternalIp.IsSet() {
		return true
	}

	return false
}

// SetExternalIp gets a reference to the given NullableString and assigns it to the ExternalIp field.
func (o *ContainerPort) SetExternalIp(v string) {
	o.ExternalIp.Set(&v)
}
// SetExternalIpNil sets the value for ExternalIp to be an explicit nil
func (o *ContainerPort) SetExternalIpNil() {
	o.ExternalIp.Set(nil)
}

// UnsetExternalIp ensures that no value is present for ExternalIp, not even an explicit nil
func (o *ContainerPort) UnsetExternalIp() {
	o.ExternalIp.Unset()
}

// GetInternalIp returns the InternalIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContainerPort) GetInternalIp() string {
	if o == nil || o.InternalIp.Get() == nil {
		var ret string
		return ret
	}
	return *o.InternalIp.Get()
}

// GetInternalIpOk returns a tuple with the InternalIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerPort) GetInternalIpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InternalIp.Get(), o.InternalIp.IsSet()
}

// HasInternalIp returns a boolean if a field has been set.
func (o *ContainerPort) HasInternalIp() bool {
	if o != nil && o.InternalIp.IsSet() {
		return true
	}

	return false
}

// SetInternalIp gets a reference to the given NullableString and assigns it to the InternalIp field.
func (o *ContainerPort) SetInternalIp(v string) {
	o.InternalIp.Set(&v)
}
// SetInternalIpNil sets the value for InternalIp to be an explicit nil
func (o *ContainerPort) SetInternalIpNil() {
	o.InternalIp.Set(nil)
}

// UnsetInternalIp ensures that no value is present for InternalIp, not even an explicit nil
func (o *ContainerPort) UnsetInternalIp() {
	o.InternalIp.Unset()
}

func (o ContainerPort) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Index != nil {
		toSerialize["index"] = o.Index
	}
	if o.External != nil {
		toSerialize["external"] = o.External
	}
	if o.Internal != nil {
		toSerialize["internal"] = o.Internal
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.PrimaryPort != nil {
		toSerialize["primaryPort"] = o.PrimaryPort
	}
	if o.Export != nil {
		toSerialize["export"] = o.Export
	}
	if o.Visible != nil {
		toSerialize["visible"] = o.Visible
	}
	if o.ExportName != nil {
		toSerialize["exportName"] = o.ExportName
	}
	if o.LoadBalanceProtocol != nil {
		toSerialize["loadBalanceProtocol"] = o.LoadBalanceProtocol
	}
	if o.LoadBalance != nil {
		toSerialize["loadBalance"] = o.LoadBalance
	}
	if o.Protocol != nil {
		toSerialize["protocol"] = o.Protocol
	}
	if o.Link != nil {
		toSerialize["link"] = o.Link
	}
	if o.ExternalIp.IsSet() {
		toSerialize["externalIp"] = o.ExternalIp.Get()
	}
	if o.InternalIp.IsSet() {
		toSerialize["internalIp"] = o.InternalIp.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableContainerPort struct {
	value *ContainerPort
	isSet bool
}

func (v NullableContainerPort) Get() *ContainerPort {
	return v.value
}

func (v *NullableContainerPort) Set(val *ContainerPort) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerPort) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerPort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerPort(val *ContainerPort) *NullableContainerPort {
	return &NullableContainerPort{value: val, isSet: true}
}

func (v NullableContainerPort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerPort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


