/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetworkRouterTypesOptionTypes struct for NetworkRouterTypesOptionTypes
type NetworkRouterTypesOptionTypes struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Code *string `json:"code,omitempty"`
	FieldName *string `json:"fieldName,omitempty"`
	FieldLabel *string `json:"fieldLabel,omitempty"`
	FieldContext *string `json:"fieldContext,omitempty"`
	FieldGroup NullableString `json:"fieldGroup,omitempty"`
	FieldClass NullableString `json:"fieldClass,omitempty"`
	FieldAddOn NullableString `json:"fieldAddOn,omitempty"`
	FieldComponent NullableString `json:"fieldComponent,omitempty"`
	FieldInput *string `json:"fieldInput,omitempty"`
	PlaceHolder NullableString `json:"placeHolder,omitempty"`
	HelpBlock *string `json:"helpBlock,omitempty"`
	DefaultValue NullableString `json:"defaultValue,omitempty"`
	OptionSource *string `json:"optionSource,omitempty"`
	OptionList NullableString `json:"optionList,omitempty"`
	Type *string `json:"type,omitempty"`
	Advanced *bool `json:"advanced,omitempty"`
	Required *bool `json:"required,omitempty"`
	Editable *bool `json:"editable,omitempty"`
	Creatable *bool `json:"creatable,omitempty"`
	Config *map[string]interface{} `json:"config,omitempty"`
	DisplayOrder *int64 `json:"displayOrder,omitempty"`
	WrapperClass NullableString `json:"wrapperClass,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	NoBlank *bool `json:"noBlank,omitempty"`
	DependsOnCode *string `json:"dependsOnCode,omitempty"`
	ContextualDefault *bool `json:"contextualDefault,omitempty"`
}

// NewNetworkRouterTypesOptionTypes instantiates a new NetworkRouterTypesOptionTypes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkRouterTypesOptionTypes() *NetworkRouterTypesOptionTypes {
	this := NetworkRouterTypesOptionTypes{}
	return &this
}

// NewNetworkRouterTypesOptionTypesWithDefaults instantiates a new NetworkRouterTypesOptionTypes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkRouterTypesOptionTypesWithDefaults() *NetworkRouterTypesOptionTypes {
	this := NetworkRouterTypesOptionTypes{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NetworkRouterTypesOptionTypes) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterTypesOptionTypes) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *NetworkRouterTypesOptionTypes) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NetworkRouterTypesOptionTypes) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterTypesOptionTypes) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NetworkRouterTypesOptionTypes) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterTypesOptionTypes) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterTypesOptionTypes) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *NetworkRouterTypesOptionTypes) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *NetworkRouterTypesOptionTypes) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *NetworkRouterTypesOptionTypes) UnsetDescription() {
	o.Description.Unset()
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *NetworkRouterTypesOptionTypes) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterTypesOptionTypes) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *NetworkRouterTypesOptionTypes) SetCode(v string) {
	o.Code = &v
}

// GetFieldName returns the FieldName field value if set, zero value otherwise.
func (o *NetworkRouterTypesOptionTypes) GetFieldName() string {
	if o == nil || o.FieldName == nil {
		var ret string
		return ret
	}
	return *o.FieldName
}

// GetFieldNameOk returns a tuple with the FieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterTypesOptionTypes) GetFieldNameOk() (*string, bool) {
	if o == nil || o.FieldName == nil {
		return nil, false
	}
	return o.FieldName, true
}

// HasFieldName returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasFieldName() bool {
	if o != nil && o.FieldName != nil {
		return true
	}

	return false
}

// SetFieldName gets a reference to the given string and assigns it to the FieldName field.
func (o *NetworkRouterTypesOptionTypes) SetFieldName(v string) {
	o.FieldName = &v
}

// GetFieldLabel returns the FieldLabel field value if set, zero value otherwise.
func (o *NetworkRouterTypesOptionTypes) GetFieldLabel() string {
	if o == nil || o.FieldLabel == nil {
		var ret string
		return ret
	}
	return *o.FieldLabel
}

// GetFieldLabelOk returns a tuple with the FieldLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterTypesOptionTypes) GetFieldLabelOk() (*string, bool) {
	if o == nil || o.FieldLabel == nil {
		return nil, false
	}
	return o.FieldLabel, true
}

// HasFieldLabel returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasFieldLabel() bool {
	if o != nil && o.FieldLabel != nil {
		return true
	}

	return false
}

// SetFieldLabel gets a reference to the given string and assigns it to the FieldLabel field.
func (o *NetworkRouterTypesOptionTypes) SetFieldLabel(v string) {
	o.FieldLabel = &v
}

// GetFieldContext returns the FieldContext field value if set, zero value otherwise.
func (o *NetworkRouterTypesOptionTypes) GetFieldContext() string {
	if o == nil || o.FieldContext == nil {
		var ret string
		return ret
	}
	return *o.FieldContext
}

// GetFieldContextOk returns a tuple with the FieldContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterTypesOptionTypes) GetFieldContextOk() (*string, bool) {
	if o == nil || o.FieldContext == nil {
		return nil, false
	}
	return o.FieldContext, true
}

// HasFieldContext returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasFieldContext() bool {
	if o != nil && o.FieldContext != nil {
		return true
	}

	return false
}

// SetFieldContext gets a reference to the given string and assigns it to the FieldContext field.
func (o *NetworkRouterTypesOptionTypes) SetFieldContext(v string) {
	o.FieldContext = &v
}

// GetFieldGroup returns the FieldGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterTypesOptionTypes) GetFieldGroup() string {
	if o == nil || o.FieldGroup.Get() == nil {
		var ret string
		return ret
	}
	return *o.FieldGroup.Get()
}

// GetFieldGroupOk returns a tuple with the FieldGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterTypesOptionTypes) GetFieldGroupOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FieldGroup.Get(), o.FieldGroup.IsSet()
}

// HasFieldGroup returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasFieldGroup() bool {
	if o != nil && o.FieldGroup.IsSet() {
		return true
	}

	return false
}

// SetFieldGroup gets a reference to the given NullableString and assigns it to the FieldGroup field.
func (o *NetworkRouterTypesOptionTypes) SetFieldGroup(v string) {
	o.FieldGroup.Set(&v)
}
// SetFieldGroupNil sets the value for FieldGroup to be an explicit nil
func (o *NetworkRouterTypesOptionTypes) SetFieldGroupNil() {
	o.FieldGroup.Set(nil)
}

// UnsetFieldGroup ensures that no value is present for FieldGroup, not even an explicit nil
func (o *NetworkRouterTypesOptionTypes) UnsetFieldGroup() {
	o.FieldGroup.Unset()
}

// GetFieldClass returns the FieldClass field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterTypesOptionTypes) GetFieldClass() string {
	if o == nil || o.FieldClass.Get() == nil {
		var ret string
		return ret
	}
	return *o.FieldClass.Get()
}

// GetFieldClassOk returns a tuple with the FieldClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterTypesOptionTypes) GetFieldClassOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FieldClass.Get(), o.FieldClass.IsSet()
}

// HasFieldClass returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasFieldClass() bool {
	if o != nil && o.FieldClass.IsSet() {
		return true
	}

	return false
}

// SetFieldClass gets a reference to the given NullableString and assigns it to the FieldClass field.
func (o *NetworkRouterTypesOptionTypes) SetFieldClass(v string) {
	o.FieldClass.Set(&v)
}
// SetFieldClassNil sets the value for FieldClass to be an explicit nil
func (o *NetworkRouterTypesOptionTypes) SetFieldClassNil() {
	o.FieldClass.Set(nil)
}

// UnsetFieldClass ensures that no value is present for FieldClass, not even an explicit nil
func (o *NetworkRouterTypesOptionTypes) UnsetFieldClass() {
	o.FieldClass.Unset()
}

// GetFieldAddOn returns the FieldAddOn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterTypesOptionTypes) GetFieldAddOn() string {
	if o == nil || o.FieldAddOn.Get() == nil {
		var ret string
		return ret
	}
	return *o.FieldAddOn.Get()
}

// GetFieldAddOnOk returns a tuple with the FieldAddOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterTypesOptionTypes) GetFieldAddOnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FieldAddOn.Get(), o.FieldAddOn.IsSet()
}

// HasFieldAddOn returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasFieldAddOn() bool {
	if o != nil && o.FieldAddOn.IsSet() {
		return true
	}

	return false
}

// SetFieldAddOn gets a reference to the given NullableString and assigns it to the FieldAddOn field.
func (o *NetworkRouterTypesOptionTypes) SetFieldAddOn(v string) {
	o.FieldAddOn.Set(&v)
}
// SetFieldAddOnNil sets the value for FieldAddOn to be an explicit nil
func (o *NetworkRouterTypesOptionTypes) SetFieldAddOnNil() {
	o.FieldAddOn.Set(nil)
}

// UnsetFieldAddOn ensures that no value is present for FieldAddOn, not even an explicit nil
func (o *NetworkRouterTypesOptionTypes) UnsetFieldAddOn() {
	o.FieldAddOn.Unset()
}

// GetFieldComponent returns the FieldComponent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterTypesOptionTypes) GetFieldComponent() string {
	if o == nil || o.FieldComponent.Get() == nil {
		var ret string
		return ret
	}
	return *o.FieldComponent.Get()
}

// GetFieldComponentOk returns a tuple with the FieldComponent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterTypesOptionTypes) GetFieldComponentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FieldComponent.Get(), o.FieldComponent.IsSet()
}

// HasFieldComponent returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasFieldComponent() bool {
	if o != nil && o.FieldComponent.IsSet() {
		return true
	}

	return false
}

// SetFieldComponent gets a reference to the given NullableString and assigns it to the FieldComponent field.
func (o *NetworkRouterTypesOptionTypes) SetFieldComponent(v string) {
	o.FieldComponent.Set(&v)
}
// SetFieldComponentNil sets the value for FieldComponent to be an explicit nil
func (o *NetworkRouterTypesOptionTypes) SetFieldComponentNil() {
	o.FieldComponent.Set(nil)
}

// UnsetFieldComponent ensures that no value is present for FieldComponent, not even an explicit nil
func (o *NetworkRouterTypesOptionTypes) UnsetFieldComponent() {
	o.FieldComponent.Unset()
}

// GetFieldInput returns the FieldInput field value if set, zero value otherwise.
func (o *NetworkRouterTypesOptionTypes) GetFieldInput() string {
	if o == nil || o.FieldInput == nil {
		var ret string
		return ret
	}
	return *o.FieldInput
}

// GetFieldInputOk returns a tuple with the FieldInput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterTypesOptionTypes) GetFieldInputOk() (*string, bool) {
	if o == nil || o.FieldInput == nil {
		return nil, false
	}
	return o.FieldInput, true
}

// HasFieldInput returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasFieldInput() bool {
	if o != nil && o.FieldInput != nil {
		return true
	}

	return false
}

// SetFieldInput gets a reference to the given string and assigns it to the FieldInput field.
func (o *NetworkRouterTypesOptionTypes) SetFieldInput(v string) {
	o.FieldInput = &v
}

// GetPlaceHolder returns the PlaceHolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterTypesOptionTypes) GetPlaceHolder() string {
	if o == nil || o.PlaceHolder.Get() == nil {
		var ret string
		return ret
	}
	return *o.PlaceHolder.Get()
}

// GetPlaceHolderOk returns a tuple with the PlaceHolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterTypesOptionTypes) GetPlaceHolderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PlaceHolder.Get(), o.PlaceHolder.IsSet()
}

// HasPlaceHolder returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasPlaceHolder() bool {
	if o != nil && o.PlaceHolder.IsSet() {
		return true
	}

	return false
}

// SetPlaceHolder gets a reference to the given NullableString and assigns it to the PlaceHolder field.
func (o *NetworkRouterTypesOptionTypes) SetPlaceHolder(v string) {
	o.PlaceHolder.Set(&v)
}
// SetPlaceHolderNil sets the value for PlaceHolder to be an explicit nil
func (o *NetworkRouterTypesOptionTypes) SetPlaceHolderNil() {
	o.PlaceHolder.Set(nil)
}

// UnsetPlaceHolder ensures that no value is present for PlaceHolder, not even an explicit nil
func (o *NetworkRouterTypesOptionTypes) UnsetPlaceHolder() {
	o.PlaceHolder.Unset()
}

// GetHelpBlock returns the HelpBlock field value if set, zero value otherwise.
func (o *NetworkRouterTypesOptionTypes) GetHelpBlock() string {
	if o == nil || o.HelpBlock == nil {
		var ret string
		return ret
	}
	return *o.HelpBlock
}

// GetHelpBlockOk returns a tuple with the HelpBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterTypesOptionTypes) GetHelpBlockOk() (*string, bool) {
	if o == nil || o.HelpBlock == nil {
		return nil, false
	}
	return o.HelpBlock, true
}

// HasHelpBlock returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasHelpBlock() bool {
	if o != nil && o.HelpBlock != nil {
		return true
	}

	return false
}

// SetHelpBlock gets a reference to the given string and assigns it to the HelpBlock field.
func (o *NetworkRouterTypesOptionTypes) SetHelpBlock(v string) {
	o.HelpBlock = &v
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterTypesOptionTypes) GetDefaultValue() string {
	if o == nil || o.DefaultValue.Get() == nil {
		var ret string
		return ret
	}
	return *o.DefaultValue.Get()
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterTypesOptionTypes) GetDefaultValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DefaultValue.Get(), o.DefaultValue.IsSet()
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasDefaultValue() bool {
	if o != nil && o.DefaultValue.IsSet() {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given NullableString and assigns it to the DefaultValue field.
func (o *NetworkRouterTypesOptionTypes) SetDefaultValue(v string) {
	o.DefaultValue.Set(&v)
}
// SetDefaultValueNil sets the value for DefaultValue to be an explicit nil
func (o *NetworkRouterTypesOptionTypes) SetDefaultValueNil() {
	o.DefaultValue.Set(nil)
}

// UnsetDefaultValue ensures that no value is present for DefaultValue, not even an explicit nil
func (o *NetworkRouterTypesOptionTypes) UnsetDefaultValue() {
	o.DefaultValue.Unset()
}

// GetOptionSource returns the OptionSource field value if set, zero value otherwise.
func (o *NetworkRouterTypesOptionTypes) GetOptionSource() string {
	if o == nil || o.OptionSource == nil {
		var ret string
		return ret
	}
	return *o.OptionSource
}

// GetOptionSourceOk returns a tuple with the OptionSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterTypesOptionTypes) GetOptionSourceOk() (*string, bool) {
	if o == nil || o.OptionSource == nil {
		return nil, false
	}
	return o.OptionSource, true
}

// HasOptionSource returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasOptionSource() bool {
	if o != nil && o.OptionSource != nil {
		return true
	}

	return false
}

// SetOptionSource gets a reference to the given string and assigns it to the OptionSource field.
func (o *NetworkRouterTypesOptionTypes) SetOptionSource(v string) {
	o.OptionSource = &v
}

// GetOptionList returns the OptionList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterTypesOptionTypes) GetOptionList() string {
	if o == nil || o.OptionList.Get() == nil {
		var ret string
		return ret
	}
	return *o.OptionList.Get()
}

// GetOptionListOk returns a tuple with the OptionList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterTypesOptionTypes) GetOptionListOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.OptionList.Get(), o.OptionList.IsSet()
}

// HasOptionList returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasOptionList() bool {
	if o != nil && o.OptionList.IsSet() {
		return true
	}

	return false
}

// SetOptionList gets a reference to the given NullableString and assigns it to the OptionList field.
func (o *NetworkRouterTypesOptionTypes) SetOptionList(v string) {
	o.OptionList.Set(&v)
}
// SetOptionListNil sets the value for OptionList to be an explicit nil
func (o *NetworkRouterTypesOptionTypes) SetOptionListNil() {
	o.OptionList.Set(nil)
}

// UnsetOptionList ensures that no value is present for OptionList, not even an explicit nil
func (o *NetworkRouterTypesOptionTypes) UnsetOptionList() {
	o.OptionList.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *NetworkRouterTypesOptionTypes) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterTypesOptionTypes) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *NetworkRouterTypesOptionTypes) SetType(v string) {
	o.Type = &v
}

// GetAdvanced returns the Advanced field value if set, zero value otherwise.
func (o *NetworkRouterTypesOptionTypes) GetAdvanced() bool {
	if o == nil || o.Advanced == nil {
		var ret bool
		return ret
	}
	return *o.Advanced
}

// GetAdvancedOk returns a tuple with the Advanced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterTypesOptionTypes) GetAdvancedOk() (*bool, bool) {
	if o == nil || o.Advanced == nil {
		return nil, false
	}
	return o.Advanced, true
}

// HasAdvanced returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasAdvanced() bool {
	if o != nil && o.Advanced != nil {
		return true
	}

	return false
}

// SetAdvanced gets a reference to the given bool and assigns it to the Advanced field.
func (o *NetworkRouterTypesOptionTypes) SetAdvanced(v bool) {
	o.Advanced = &v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *NetworkRouterTypesOptionTypes) GetRequired() bool {
	if o == nil || o.Required == nil {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterTypesOptionTypes) GetRequiredOk() (*bool, bool) {
	if o == nil || o.Required == nil {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasRequired() bool {
	if o != nil && o.Required != nil {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *NetworkRouterTypesOptionTypes) SetRequired(v bool) {
	o.Required = &v
}

// GetEditable returns the Editable field value if set, zero value otherwise.
func (o *NetworkRouterTypesOptionTypes) GetEditable() bool {
	if o == nil || o.Editable == nil {
		var ret bool
		return ret
	}
	return *o.Editable
}

// GetEditableOk returns a tuple with the Editable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterTypesOptionTypes) GetEditableOk() (*bool, bool) {
	if o == nil || o.Editable == nil {
		return nil, false
	}
	return o.Editable, true
}

// HasEditable returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasEditable() bool {
	if o != nil && o.Editable != nil {
		return true
	}

	return false
}

// SetEditable gets a reference to the given bool and assigns it to the Editable field.
func (o *NetworkRouterTypesOptionTypes) SetEditable(v bool) {
	o.Editable = &v
}

// GetCreatable returns the Creatable field value if set, zero value otherwise.
func (o *NetworkRouterTypesOptionTypes) GetCreatable() bool {
	if o == nil || o.Creatable == nil {
		var ret bool
		return ret
	}
	return *o.Creatable
}

// GetCreatableOk returns a tuple with the Creatable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterTypesOptionTypes) GetCreatableOk() (*bool, bool) {
	if o == nil || o.Creatable == nil {
		return nil, false
	}
	return o.Creatable, true
}

// HasCreatable returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasCreatable() bool {
	if o != nil && o.Creatable != nil {
		return true
	}

	return false
}

// SetCreatable gets a reference to the given bool and assigns it to the Creatable field.
func (o *NetworkRouterTypesOptionTypes) SetCreatable(v bool) {
	o.Creatable = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *NetworkRouterTypesOptionTypes) GetConfig() map[string]interface{} {
	if o == nil || o.Config == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterTypesOptionTypes) GetConfigOk() (*map[string]interface{}, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *NetworkRouterTypesOptionTypes) SetConfig(v map[string]interface{}) {
	o.Config = &v
}

// GetDisplayOrder returns the DisplayOrder field value if set, zero value otherwise.
func (o *NetworkRouterTypesOptionTypes) GetDisplayOrder() int64 {
	if o == nil || o.DisplayOrder == nil {
		var ret int64
		return ret
	}
	return *o.DisplayOrder
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterTypesOptionTypes) GetDisplayOrderOk() (*int64, bool) {
	if o == nil || o.DisplayOrder == nil {
		return nil, false
	}
	return o.DisplayOrder, true
}

// HasDisplayOrder returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasDisplayOrder() bool {
	if o != nil && o.DisplayOrder != nil {
		return true
	}

	return false
}

// SetDisplayOrder gets a reference to the given int64 and assigns it to the DisplayOrder field.
func (o *NetworkRouterTypesOptionTypes) SetDisplayOrder(v int64) {
	o.DisplayOrder = &v
}

// GetWrapperClass returns the WrapperClass field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterTypesOptionTypes) GetWrapperClass() string {
	if o == nil || o.WrapperClass.Get() == nil {
		var ret string
		return ret
	}
	return *o.WrapperClass.Get()
}

// GetWrapperClassOk returns a tuple with the WrapperClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterTypesOptionTypes) GetWrapperClassOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WrapperClass.Get(), o.WrapperClass.IsSet()
}

// HasWrapperClass returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasWrapperClass() bool {
	if o != nil && o.WrapperClass.IsSet() {
		return true
	}

	return false
}

// SetWrapperClass gets a reference to the given NullableString and assigns it to the WrapperClass field.
func (o *NetworkRouterTypesOptionTypes) SetWrapperClass(v string) {
	o.WrapperClass.Set(&v)
}
// SetWrapperClassNil sets the value for WrapperClass to be an explicit nil
func (o *NetworkRouterTypesOptionTypes) SetWrapperClassNil() {
	o.WrapperClass.Set(nil)
}

// UnsetWrapperClass ensures that no value is present for WrapperClass, not even an explicit nil
func (o *NetworkRouterTypesOptionTypes) UnsetWrapperClass() {
	o.WrapperClass.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *NetworkRouterTypesOptionTypes) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterTypesOptionTypes) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *NetworkRouterTypesOptionTypes) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetNoBlank returns the NoBlank field value if set, zero value otherwise.
func (o *NetworkRouterTypesOptionTypes) GetNoBlank() bool {
	if o == nil || o.NoBlank == nil {
		var ret bool
		return ret
	}
	return *o.NoBlank
}

// GetNoBlankOk returns a tuple with the NoBlank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterTypesOptionTypes) GetNoBlankOk() (*bool, bool) {
	if o == nil || o.NoBlank == nil {
		return nil, false
	}
	return o.NoBlank, true
}

// HasNoBlank returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasNoBlank() bool {
	if o != nil && o.NoBlank != nil {
		return true
	}

	return false
}

// SetNoBlank gets a reference to the given bool and assigns it to the NoBlank field.
func (o *NetworkRouterTypesOptionTypes) SetNoBlank(v bool) {
	o.NoBlank = &v
}

// GetDependsOnCode returns the DependsOnCode field value if set, zero value otherwise.
func (o *NetworkRouterTypesOptionTypes) GetDependsOnCode() string {
	if o == nil || o.DependsOnCode == nil {
		var ret string
		return ret
	}
	return *o.DependsOnCode
}

// GetDependsOnCodeOk returns a tuple with the DependsOnCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterTypesOptionTypes) GetDependsOnCodeOk() (*string, bool) {
	if o == nil || o.DependsOnCode == nil {
		return nil, false
	}
	return o.DependsOnCode, true
}

// HasDependsOnCode returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasDependsOnCode() bool {
	if o != nil && o.DependsOnCode != nil {
		return true
	}

	return false
}

// SetDependsOnCode gets a reference to the given string and assigns it to the DependsOnCode field.
func (o *NetworkRouterTypesOptionTypes) SetDependsOnCode(v string) {
	o.DependsOnCode = &v
}

// GetContextualDefault returns the ContextualDefault field value if set, zero value otherwise.
func (o *NetworkRouterTypesOptionTypes) GetContextualDefault() bool {
	if o == nil || o.ContextualDefault == nil {
		var ret bool
		return ret
	}
	return *o.ContextualDefault
}

// GetContextualDefaultOk returns a tuple with the ContextualDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterTypesOptionTypes) GetContextualDefaultOk() (*bool, bool) {
	if o == nil || o.ContextualDefault == nil {
		return nil, false
	}
	return o.ContextualDefault, true
}

// HasContextualDefault returns a boolean if a field has been set.
func (o *NetworkRouterTypesOptionTypes) HasContextualDefault() bool {
	if o != nil && o.ContextualDefault != nil {
		return true
	}

	return false
}

// SetContextualDefault gets a reference to the given bool and assigns it to the ContextualDefault field.
func (o *NetworkRouterTypesOptionTypes) SetContextualDefault(v bool) {
	o.ContextualDefault = &v
}

func (o NetworkRouterTypesOptionTypes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.FieldName != nil {
		toSerialize["fieldName"] = o.FieldName
	}
	if o.FieldLabel != nil {
		toSerialize["fieldLabel"] = o.FieldLabel
	}
	if o.FieldContext != nil {
		toSerialize["fieldContext"] = o.FieldContext
	}
	if o.FieldGroup.IsSet() {
		toSerialize["fieldGroup"] = o.FieldGroup.Get()
	}
	if o.FieldClass.IsSet() {
		toSerialize["fieldClass"] = o.FieldClass.Get()
	}
	if o.FieldAddOn.IsSet() {
		toSerialize["fieldAddOn"] = o.FieldAddOn.Get()
	}
	if o.FieldComponent.IsSet() {
		toSerialize["fieldComponent"] = o.FieldComponent.Get()
	}
	if o.FieldInput != nil {
		toSerialize["fieldInput"] = o.FieldInput
	}
	if o.PlaceHolder.IsSet() {
		toSerialize["placeHolder"] = o.PlaceHolder.Get()
	}
	if o.HelpBlock != nil {
		toSerialize["helpBlock"] = o.HelpBlock
	}
	if o.DefaultValue.IsSet() {
		toSerialize["defaultValue"] = o.DefaultValue.Get()
	}
	if o.OptionSource != nil {
		toSerialize["optionSource"] = o.OptionSource
	}
	if o.OptionList.IsSet() {
		toSerialize["optionList"] = o.OptionList.Get()
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Advanced != nil {
		toSerialize["advanced"] = o.Advanced
	}
	if o.Required != nil {
		toSerialize["required"] = o.Required
	}
	if o.Editable != nil {
		toSerialize["editable"] = o.Editable
	}
	if o.Creatable != nil {
		toSerialize["creatable"] = o.Creatable
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.DisplayOrder != nil {
		toSerialize["displayOrder"] = o.DisplayOrder
	}
	if o.WrapperClass.IsSet() {
		toSerialize["wrapperClass"] = o.WrapperClass.Get()
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.NoBlank != nil {
		toSerialize["noBlank"] = o.NoBlank
	}
	if o.DependsOnCode != nil {
		toSerialize["dependsOnCode"] = o.DependsOnCode
	}
	if o.ContextualDefault != nil {
		toSerialize["contextualDefault"] = o.ContextualDefault
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkRouterTypesOptionTypes struct {
	value *NetworkRouterTypesOptionTypes
	isSet bool
}

func (v NullableNetworkRouterTypesOptionTypes) Get() *NetworkRouterTypesOptionTypes {
	return v.value
}

func (v *NullableNetworkRouterTypesOptionTypes) Set(val *NetworkRouterTypesOptionTypes) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkRouterTypesOptionTypes) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkRouterTypesOptionTypes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkRouterTypesOptionTypes(val *NetworkRouterTypesOptionTypes) *NullableNetworkRouterTypesOptionTypes {
	return &NullableNetworkRouterTypesOptionTypes{value: val, isSet: true}
}

func (v NullableNetworkRouterTypesOptionTypes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkRouterTypesOptionTypes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


