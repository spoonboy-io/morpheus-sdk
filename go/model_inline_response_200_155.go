/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200155 struct for InlineResponse200155
type InlineResponse200155 struct {
	TaskTypes *[]TaskType `json:"taskTypes,omitempty"`
}

// NewInlineResponse200155 instantiates a new InlineResponse200155 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200155() *InlineResponse200155 {
	this := InlineResponse200155{}
	return &this
}

// NewInlineResponse200155WithDefaults instantiates a new InlineResponse200155 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200155WithDefaults() *InlineResponse200155 {
	this := InlineResponse200155{}
	return &this
}

// GetTaskTypes returns the TaskTypes field value if set, zero value otherwise.
func (o *InlineResponse200155) GetTaskTypes() []TaskType {
	if o == nil || o.TaskTypes == nil {
		var ret []TaskType
		return ret
	}
	return *o.TaskTypes
}

// GetTaskTypesOk returns a tuple with the TaskTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200155) GetTaskTypesOk() (*[]TaskType, bool) {
	if o == nil || o.TaskTypes == nil {
		return nil, false
	}
	return o.TaskTypes, true
}

// HasTaskTypes returns a boolean if a field has been set.
func (o *InlineResponse200155) HasTaskTypes() bool {
	if o != nil && o.TaskTypes != nil {
		return true
	}

	return false
}

// SetTaskTypes gets a reference to the given []TaskType and assigns it to the TaskTypes field.
func (o *InlineResponse200155) SetTaskTypes(v []TaskType) {
	o.TaskTypes = &v
}

func (o InlineResponse200155) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TaskTypes != nil {
		toSerialize["taskTypes"] = o.TaskTypes
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200155 struct {
	value *InlineResponse200155
	isSet bool
}

func (v NullableInlineResponse200155) Get() *InlineResponse200155 {
	return v.value
}

func (v *NullableInlineResponse200155) Set(val *InlineResponse200155) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200155) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200155) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200155(val *InlineResponse200155) *NullableInlineResponse200155 {
	return &NullableInlineResponse200155{value: val, isSet: true}
}

func (v NullableInlineResponse200155) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200155) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


