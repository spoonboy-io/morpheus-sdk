/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Instance struct for Instance
type Instance struct {
	Id *int64 `json:"id,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	AccountId *int64 `json:"accountId,omitempty"`
	Tenant *InlineResponse20040AppDeployInstance `json:"tenant,omitempty"`
	InstanceType *InstanceInstanceType `json:"instanceType,omitempty"`
	Group *InlineResponse20040AppDeployInstance `json:"group,omitempty"`
	Cloud *InlineResponse20040AppDeployInstance `json:"cloud,omitempty"`
	Containers *[]int64 `json:"containers,omitempty"`
	Servers *[]int64 `json:"servers,omitempty"`
	ConnectionInfo *[]InstanceConnectionInfo `json:"connectionInfo,omitempty"`
	Layout *InstanceLayout `json:"layout,omitempty"`
	Plan *InlineResponse20079LoadBalancerMonitorLoadBalancerType `json:"plan,omitempty"`
	Name *string `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Environment NullableString `json:"environment,omitempty"`
	Config *InstanceConfig `json:"config,omitempty"`
	ConfigGroup NullableString `json:"configGroup,omitempty"`
	ConfigId NullableString `json:"configId,omitempty"`
	ConfigRole NullableString `json:"configRole,omitempty"`
	Volumes *[]InstanceVolumes `json:"volumes,omitempty"`
	Controllers *[]GuidanceVmwareSizingResourceControllers `json:"controllers,omitempty"`
	Interfaces *[]InstanceInterfaces `json:"interfaces,omitempty"`
	CustomOptions *map[string]interface{} `json:"customOptions,omitempty"`
	InstanceVersion *string `json:"instanceVersion,omitempty"`
	Labels []string `json:"labels,omitempty"`
	Tags []map[string]interface{} `json:"tags,omitempty"`
	Evars []map[string]interface{} `json:"evars,omitempty"`
	MaxMemory *int64 `json:"maxMemory,omitempty"`
	MaxStorage *int64 `json:"maxStorage,omitempty"`
	MaxCores *int64 `json:"maxCores,omitempty"`
	CoresPerSocket NullableInt64 `json:"coresPerSocket,omitempty"`
	MaxCpu NullableString `json:"maxCpu,omitempty"`
	HourlyCost *float32 `json:"hourlyCost,omitempty"`
	HourlyPrice *float32 `json:"hourlyPrice,omitempty"`
	InstancePrice *InstanceInstancePrice `json:"instancePrice,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	HostName *string `json:"hostName,omitempty"`
	DomainName NullableString `json:"domainName,omitempty"`
	EnvironmentPrefix NullableString `json:"environmentPrefix,omitempty"`
	FirewallEnabled *bool `json:"firewallEnabled,omitempty"`
	NetworkLevel *string `json:"networkLevel,omitempty"`
	AutoScale *bool `json:"autoScale,omitempty"`
	InstanceContext NullableString `json:"instanceContext,omitempty"`
	CurrentDeployId NullableString `json:"currentDeployId,omitempty"`
	Locked *bool `json:"locked,omitempty"`
	Status *string `json:"status,omitempty"`
	StatusMessage NullableString `json:"statusMessage,omitempty"`
	ErrorMessage NullableString `json:"errorMessage,omitempty"`
	StatusDate *time.Time `json:"statusDate,omitempty"`
	StatusPercent NullableString `json:"statusPercent,omitempty"`
	StatusEta NullableString `json:"statusEta,omitempty"`
	UserStatus NullableString `json:"userStatus,omitempty"`
	ExpireDays *int64 `json:"expireDays,omitempty"`
	RenewDays *int64 `json:"renewDays,omitempty"`
	ExpireCount *int64 `json:"expireCount,omitempty"`
	ExpireDate *time.Time `json:"expireDate,omitempty"`
	ExpireWarningDate *time.Time `json:"expireWarningDate,omitempty"`
	ExpireWarningSent *bool `json:"expireWarningSent,omitempty"`
	ShutdownDays *int64 `json:"shutdownDays,omitempty"`
	ShutdownRenewDays *int64 `json:"shutdownRenewDays,omitempty"`
	ShutdownCount *int64 `json:"shutdownCount,omitempty"`
	ShutdownDate *time.Time `json:"shutdownDate,omitempty"`
	ShutdownWarningDate *time.Time `json:"shutdownWarningDate,omitempty"`
	ShutdownWarningSent *bool `json:"shutdownWarningSent,omitempty"`
	RemovalDate NullableTime `json:"removalDate,omitempty"`
	CreatedBy *InlineResponse200107NetworkPoolCreatedBy `json:"createdBy,omitempty"`
	Owner *InlineResponse200107NetworkPoolCreatedBy `json:"owner,omitempty"`
	Notes NullableString `json:"notes,omitempty"`
	Stats *InstanceStats `json:"stats,omitempty"`
	PowerSchedule NullableString `json:"powerSchedule,omitempty"`
	IsScalable *bool `json:"isScalable,omitempty"`
	InstanceThreshold map[string]interface{} `json:"instanceThreshold,omitempty"`
	IsBusy *bool `json:"isBusy,omitempty"`
	Apps []map[string]interface{} `json:"apps,omitempty"`
}

// NewInstance instantiates a new Instance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstance() *Instance {
	this := Instance{}
	return &this
}

// NewInstanceWithDefaults instantiates a new Instance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceWithDefaults() *Instance {
	this := Instance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Instance) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Instance) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *Instance) SetId(v int64) {
	o.Id = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *Instance) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *Instance) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *Instance) SetUuid(v string) {
	o.Uuid = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *Instance) GetAccountId() int64 {
	if o == nil || o.AccountId == nil {
		var ret int64
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetAccountIdOk() (*int64, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *Instance) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int64 and assigns it to the AccountId field.
func (o *Instance) SetAccountId(v int64) {
	o.AccountId = &v
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *Instance) GetTenant() InlineResponse20040AppDeployInstance {
	if o == nil || o.Tenant == nil {
		var ret InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetTenantOk() (*InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Tenant == nil {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *Instance) HasTenant() bool {
	if o != nil && o.Tenant != nil {
		return true
	}

	return false
}

// SetTenant gets a reference to the given InlineResponse20040AppDeployInstance and assigns it to the Tenant field.
func (o *Instance) SetTenant(v InlineResponse20040AppDeployInstance) {
	o.Tenant = &v
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise.
func (o *Instance) GetInstanceType() InstanceInstanceType {
	if o == nil || o.InstanceType == nil {
		var ret InstanceInstanceType
		return ret
	}
	return *o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetInstanceTypeOk() (*InstanceInstanceType, bool) {
	if o == nil || o.InstanceType == nil {
		return nil, false
	}
	return o.InstanceType, true
}

// HasInstanceType returns a boolean if a field has been set.
func (o *Instance) HasInstanceType() bool {
	if o != nil && o.InstanceType != nil {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given InstanceInstanceType and assigns it to the InstanceType field.
func (o *Instance) SetInstanceType(v InstanceInstanceType) {
	o.InstanceType = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *Instance) GetGroup() InlineResponse20040AppDeployInstance {
	if o == nil || o.Group == nil {
		var ret InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetGroupOk() (*InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *Instance) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given InlineResponse20040AppDeployInstance and assigns it to the Group field.
func (o *Instance) SetGroup(v InlineResponse20040AppDeployInstance) {
	o.Group = &v
}

// GetCloud returns the Cloud field value if set, zero value otherwise.
func (o *Instance) GetCloud() InlineResponse20040AppDeployInstance {
	if o == nil || o.Cloud == nil {
		var ret InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetCloudOk() (*InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Cloud == nil {
		return nil, false
	}
	return o.Cloud, true
}

// HasCloud returns a boolean if a field has been set.
func (o *Instance) HasCloud() bool {
	if o != nil && o.Cloud != nil {
		return true
	}

	return false
}

// SetCloud gets a reference to the given InlineResponse20040AppDeployInstance and assigns it to the Cloud field.
func (o *Instance) SetCloud(v InlineResponse20040AppDeployInstance) {
	o.Cloud = &v
}

// GetContainers returns the Containers field value if set, zero value otherwise.
func (o *Instance) GetContainers() []int64 {
	if o == nil || o.Containers == nil {
		var ret []int64
		return ret
	}
	return *o.Containers
}

// GetContainersOk returns a tuple with the Containers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetContainersOk() (*[]int64, bool) {
	if o == nil || o.Containers == nil {
		return nil, false
	}
	return o.Containers, true
}

// HasContainers returns a boolean if a field has been set.
func (o *Instance) HasContainers() bool {
	if o != nil && o.Containers != nil {
		return true
	}

	return false
}

// SetContainers gets a reference to the given []int64 and assigns it to the Containers field.
func (o *Instance) SetContainers(v []int64) {
	o.Containers = &v
}

// GetServers returns the Servers field value if set, zero value otherwise.
func (o *Instance) GetServers() []int64 {
	if o == nil || o.Servers == nil {
		var ret []int64
		return ret
	}
	return *o.Servers
}

// GetServersOk returns a tuple with the Servers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetServersOk() (*[]int64, bool) {
	if o == nil || o.Servers == nil {
		return nil, false
	}
	return o.Servers, true
}

// HasServers returns a boolean if a field has been set.
func (o *Instance) HasServers() bool {
	if o != nil && o.Servers != nil {
		return true
	}

	return false
}

// SetServers gets a reference to the given []int64 and assigns it to the Servers field.
func (o *Instance) SetServers(v []int64) {
	o.Servers = &v
}

// GetConnectionInfo returns the ConnectionInfo field value if set, zero value otherwise.
func (o *Instance) GetConnectionInfo() []InstanceConnectionInfo {
	if o == nil || o.ConnectionInfo == nil {
		var ret []InstanceConnectionInfo
		return ret
	}
	return *o.ConnectionInfo
}

// GetConnectionInfoOk returns a tuple with the ConnectionInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetConnectionInfoOk() (*[]InstanceConnectionInfo, bool) {
	if o == nil || o.ConnectionInfo == nil {
		return nil, false
	}
	return o.ConnectionInfo, true
}

// HasConnectionInfo returns a boolean if a field has been set.
func (o *Instance) HasConnectionInfo() bool {
	if o != nil && o.ConnectionInfo != nil {
		return true
	}

	return false
}

// SetConnectionInfo gets a reference to the given []InstanceConnectionInfo and assigns it to the ConnectionInfo field.
func (o *Instance) SetConnectionInfo(v []InstanceConnectionInfo) {
	o.ConnectionInfo = &v
}

// GetLayout returns the Layout field value if set, zero value otherwise.
func (o *Instance) GetLayout() InstanceLayout {
	if o == nil || o.Layout == nil {
		var ret InstanceLayout
		return ret
	}
	return *o.Layout
}

// GetLayoutOk returns a tuple with the Layout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetLayoutOk() (*InstanceLayout, bool) {
	if o == nil || o.Layout == nil {
		return nil, false
	}
	return o.Layout, true
}

// HasLayout returns a boolean if a field has been set.
func (o *Instance) HasLayout() bool {
	if o != nil && o.Layout != nil {
		return true
	}

	return false
}

// SetLayout gets a reference to the given InstanceLayout and assigns it to the Layout field.
func (o *Instance) SetLayout(v InstanceLayout) {
	o.Layout = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *Instance) GetPlan() InlineResponse20079LoadBalancerMonitorLoadBalancerType {
	if o == nil || o.Plan == nil {
		var ret InlineResponse20079LoadBalancerMonitorLoadBalancerType
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetPlanOk() (*InlineResponse20079LoadBalancerMonitorLoadBalancerType, bool) {
	if o == nil || o.Plan == nil {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *Instance) HasPlan() bool {
	if o != nil && o.Plan != nil {
		return true
	}

	return false
}

// SetPlan gets a reference to the given InlineResponse20079LoadBalancerMonitorLoadBalancerType and assigns it to the Plan field.
func (o *Instance) SetPlan(v InlineResponse20079LoadBalancerMonitorLoadBalancerType) {
	o.Plan = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Instance) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Instance) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Instance) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *Instance) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *Instance) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *Instance) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *Instance) UnsetDescription() {
	o.Description.Unset()
}

// GetEnvironment returns the Environment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetEnvironment() string {
	if o == nil || o.Environment.Get() == nil {
		var ret string
		return ret
	}
	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetEnvironmentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// HasEnvironment returns a boolean if a field has been set.
func (o *Instance) HasEnvironment() bool {
	if o != nil && o.Environment.IsSet() {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given NullableString and assigns it to the Environment field.
func (o *Instance) SetEnvironment(v string) {
	o.Environment.Set(&v)
}
// SetEnvironmentNil sets the value for Environment to be an explicit nil
func (o *Instance) SetEnvironmentNil() {
	o.Environment.Set(nil)
}

// UnsetEnvironment ensures that no value is present for Environment, not even an explicit nil
func (o *Instance) UnsetEnvironment() {
	o.Environment.Unset()
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *Instance) GetConfig() InstanceConfig {
	if o == nil || o.Config == nil {
		var ret InstanceConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetConfigOk() (*InstanceConfig, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *Instance) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given InstanceConfig and assigns it to the Config field.
func (o *Instance) SetConfig(v InstanceConfig) {
	o.Config = &v
}

// GetConfigGroup returns the ConfigGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetConfigGroup() string {
	if o == nil || o.ConfigGroup.Get() == nil {
		var ret string
		return ret
	}
	return *o.ConfigGroup.Get()
}

// GetConfigGroupOk returns a tuple with the ConfigGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetConfigGroupOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ConfigGroup.Get(), o.ConfigGroup.IsSet()
}

// HasConfigGroup returns a boolean if a field has been set.
func (o *Instance) HasConfigGroup() bool {
	if o != nil && o.ConfigGroup.IsSet() {
		return true
	}

	return false
}

// SetConfigGroup gets a reference to the given NullableString and assigns it to the ConfigGroup field.
func (o *Instance) SetConfigGroup(v string) {
	o.ConfigGroup.Set(&v)
}
// SetConfigGroupNil sets the value for ConfigGroup to be an explicit nil
func (o *Instance) SetConfigGroupNil() {
	o.ConfigGroup.Set(nil)
}

// UnsetConfigGroup ensures that no value is present for ConfigGroup, not even an explicit nil
func (o *Instance) UnsetConfigGroup() {
	o.ConfigGroup.Unset()
}

// GetConfigId returns the ConfigId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetConfigId() string {
	if o == nil || o.ConfigId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ConfigId.Get()
}

// GetConfigIdOk returns a tuple with the ConfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetConfigIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ConfigId.Get(), o.ConfigId.IsSet()
}

// HasConfigId returns a boolean if a field has been set.
func (o *Instance) HasConfigId() bool {
	if o != nil && o.ConfigId.IsSet() {
		return true
	}

	return false
}

// SetConfigId gets a reference to the given NullableString and assigns it to the ConfigId field.
func (o *Instance) SetConfigId(v string) {
	o.ConfigId.Set(&v)
}
// SetConfigIdNil sets the value for ConfigId to be an explicit nil
func (o *Instance) SetConfigIdNil() {
	o.ConfigId.Set(nil)
}

// UnsetConfigId ensures that no value is present for ConfigId, not even an explicit nil
func (o *Instance) UnsetConfigId() {
	o.ConfigId.Unset()
}

// GetConfigRole returns the ConfigRole field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetConfigRole() string {
	if o == nil || o.ConfigRole.Get() == nil {
		var ret string
		return ret
	}
	return *o.ConfigRole.Get()
}

// GetConfigRoleOk returns a tuple with the ConfigRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetConfigRoleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ConfigRole.Get(), o.ConfigRole.IsSet()
}

// HasConfigRole returns a boolean if a field has been set.
func (o *Instance) HasConfigRole() bool {
	if o != nil && o.ConfigRole.IsSet() {
		return true
	}

	return false
}

// SetConfigRole gets a reference to the given NullableString and assigns it to the ConfigRole field.
func (o *Instance) SetConfigRole(v string) {
	o.ConfigRole.Set(&v)
}
// SetConfigRoleNil sets the value for ConfigRole to be an explicit nil
func (o *Instance) SetConfigRoleNil() {
	o.ConfigRole.Set(nil)
}

// UnsetConfigRole ensures that no value is present for ConfigRole, not even an explicit nil
func (o *Instance) UnsetConfigRole() {
	o.ConfigRole.Unset()
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *Instance) GetVolumes() []InstanceVolumes {
	if o == nil || o.Volumes == nil {
		var ret []InstanceVolumes
		return ret
	}
	return *o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetVolumesOk() (*[]InstanceVolumes, bool) {
	if o == nil || o.Volumes == nil {
		return nil, false
	}
	return o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *Instance) HasVolumes() bool {
	if o != nil && o.Volumes != nil {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []InstanceVolumes and assigns it to the Volumes field.
func (o *Instance) SetVolumes(v []InstanceVolumes) {
	o.Volumes = &v
}

// GetControllers returns the Controllers field value if set, zero value otherwise.
func (o *Instance) GetControllers() []GuidanceVmwareSizingResourceControllers {
	if o == nil || o.Controllers == nil {
		var ret []GuidanceVmwareSizingResourceControllers
		return ret
	}
	return *o.Controllers
}

// GetControllersOk returns a tuple with the Controllers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetControllersOk() (*[]GuidanceVmwareSizingResourceControllers, bool) {
	if o == nil || o.Controllers == nil {
		return nil, false
	}
	return o.Controllers, true
}

// HasControllers returns a boolean if a field has been set.
func (o *Instance) HasControllers() bool {
	if o != nil && o.Controllers != nil {
		return true
	}

	return false
}

// SetControllers gets a reference to the given []GuidanceVmwareSizingResourceControllers and assigns it to the Controllers field.
func (o *Instance) SetControllers(v []GuidanceVmwareSizingResourceControllers) {
	o.Controllers = &v
}

// GetInterfaces returns the Interfaces field value if set, zero value otherwise.
func (o *Instance) GetInterfaces() []InstanceInterfaces {
	if o == nil || o.Interfaces == nil {
		var ret []InstanceInterfaces
		return ret
	}
	return *o.Interfaces
}

// GetInterfacesOk returns a tuple with the Interfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetInterfacesOk() (*[]InstanceInterfaces, bool) {
	if o == nil || o.Interfaces == nil {
		return nil, false
	}
	return o.Interfaces, true
}

// HasInterfaces returns a boolean if a field has been set.
func (o *Instance) HasInterfaces() bool {
	if o != nil && o.Interfaces != nil {
		return true
	}

	return false
}

// SetInterfaces gets a reference to the given []InstanceInterfaces and assigns it to the Interfaces field.
func (o *Instance) SetInterfaces(v []InstanceInterfaces) {
	o.Interfaces = &v
}

// GetCustomOptions returns the CustomOptions field value if set, zero value otherwise.
func (o *Instance) GetCustomOptions() map[string]interface{} {
	if o == nil || o.CustomOptions == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.CustomOptions
}

// GetCustomOptionsOk returns a tuple with the CustomOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetCustomOptionsOk() (*map[string]interface{}, bool) {
	if o == nil || o.CustomOptions == nil {
		return nil, false
	}
	return o.CustomOptions, true
}

// HasCustomOptions returns a boolean if a field has been set.
func (o *Instance) HasCustomOptions() bool {
	if o != nil && o.CustomOptions != nil {
		return true
	}

	return false
}

// SetCustomOptions gets a reference to the given map[string]interface{} and assigns it to the CustomOptions field.
func (o *Instance) SetCustomOptions(v map[string]interface{}) {
	o.CustomOptions = &v
}

// GetInstanceVersion returns the InstanceVersion field value if set, zero value otherwise.
func (o *Instance) GetInstanceVersion() string {
	if o == nil || o.InstanceVersion == nil {
		var ret string
		return ret
	}
	return *o.InstanceVersion
}

// GetInstanceVersionOk returns a tuple with the InstanceVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetInstanceVersionOk() (*string, bool) {
	if o == nil || o.InstanceVersion == nil {
		return nil, false
	}
	return o.InstanceVersion, true
}

// HasInstanceVersion returns a boolean if a field has been set.
func (o *Instance) HasInstanceVersion() bool {
	if o != nil && o.InstanceVersion != nil {
		return true
	}

	return false
}

// SetInstanceVersion gets a reference to the given string and assigns it to the InstanceVersion field.
func (o *Instance) SetInstanceVersion(v string) {
	o.InstanceVersion = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetLabels() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetLabelsOk() (*[]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return &o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *Instance) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *Instance) SetLabels(v []string) {
	o.Labels = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetTags() []map[string]interface{} {
	if o == nil  {
		var ret []map[string]interface{}
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetTagsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return &o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Instance) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []map[string]interface{} and assigns it to the Tags field.
func (o *Instance) SetTags(v []map[string]interface{}) {
	o.Tags = v
}

// GetEvars returns the Evars field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetEvars() []map[string]interface{} {
	if o == nil  {
		var ret []map[string]interface{}
		return ret
	}
	return o.Evars
}

// GetEvarsOk returns a tuple with the Evars field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetEvarsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Evars == nil {
		return nil, false
	}
	return &o.Evars, true
}

// HasEvars returns a boolean if a field has been set.
func (o *Instance) HasEvars() bool {
	if o != nil && o.Evars != nil {
		return true
	}

	return false
}

// SetEvars gets a reference to the given []map[string]interface{} and assigns it to the Evars field.
func (o *Instance) SetEvars(v []map[string]interface{}) {
	o.Evars = v
}

// GetMaxMemory returns the MaxMemory field value if set, zero value otherwise.
func (o *Instance) GetMaxMemory() int64 {
	if o == nil || o.MaxMemory == nil {
		var ret int64
		return ret
	}
	return *o.MaxMemory
}

// GetMaxMemoryOk returns a tuple with the MaxMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetMaxMemoryOk() (*int64, bool) {
	if o == nil || o.MaxMemory == nil {
		return nil, false
	}
	return o.MaxMemory, true
}

// HasMaxMemory returns a boolean if a field has been set.
func (o *Instance) HasMaxMemory() bool {
	if o != nil && o.MaxMemory != nil {
		return true
	}

	return false
}

// SetMaxMemory gets a reference to the given int64 and assigns it to the MaxMemory field.
func (o *Instance) SetMaxMemory(v int64) {
	o.MaxMemory = &v
}

// GetMaxStorage returns the MaxStorage field value if set, zero value otherwise.
func (o *Instance) GetMaxStorage() int64 {
	if o == nil || o.MaxStorage == nil {
		var ret int64
		return ret
	}
	return *o.MaxStorage
}

// GetMaxStorageOk returns a tuple with the MaxStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetMaxStorageOk() (*int64, bool) {
	if o == nil || o.MaxStorage == nil {
		return nil, false
	}
	return o.MaxStorage, true
}

// HasMaxStorage returns a boolean if a field has been set.
func (o *Instance) HasMaxStorage() bool {
	if o != nil && o.MaxStorage != nil {
		return true
	}

	return false
}

// SetMaxStorage gets a reference to the given int64 and assigns it to the MaxStorage field.
func (o *Instance) SetMaxStorage(v int64) {
	o.MaxStorage = &v
}

// GetMaxCores returns the MaxCores field value if set, zero value otherwise.
func (o *Instance) GetMaxCores() int64 {
	if o == nil || o.MaxCores == nil {
		var ret int64
		return ret
	}
	return *o.MaxCores
}

// GetMaxCoresOk returns a tuple with the MaxCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetMaxCoresOk() (*int64, bool) {
	if o == nil || o.MaxCores == nil {
		return nil, false
	}
	return o.MaxCores, true
}

// HasMaxCores returns a boolean if a field has been set.
func (o *Instance) HasMaxCores() bool {
	if o != nil && o.MaxCores != nil {
		return true
	}

	return false
}

// SetMaxCores gets a reference to the given int64 and assigns it to the MaxCores field.
func (o *Instance) SetMaxCores(v int64) {
	o.MaxCores = &v
}

// GetCoresPerSocket returns the CoresPerSocket field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetCoresPerSocket() int64 {
	if o == nil || o.CoresPerSocket.Get() == nil {
		var ret int64
		return ret
	}
	return *o.CoresPerSocket.Get()
}

// GetCoresPerSocketOk returns a tuple with the CoresPerSocket field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetCoresPerSocketOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CoresPerSocket.Get(), o.CoresPerSocket.IsSet()
}

// HasCoresPerSocket returns a boolean if a field has been set.
func (o *Instance) HasCoresPerSocket() bool {
	if o != nil && o.CoresPerSocket.IsSet() {
		return true
	}

	return false
}

// SetCoresPerSocket gets a reference to the given NullableInt64 and assigns it to the CoresPerSocket field.
func (o *Instance) SetCoresPerSocket(v int64) {
	o.CoresPerSocket.Set(&v)
}
// SetCoresPerSocketNil sets the value for CoresPerSocket to be an explicit nil
func (o *Instance) SetCoresPerSocketNil() {
	o.CoresPerSocket.Set(nil)
}

// UnsetCoresPerSocket ensures that no value is present for CoresPerSocket, not even an explicit nil
func (o *Instance) UnsetCoresPerSocket() {
	o.CoresPerSocket.Unset()
}

// GetMaxCpu returns the MaxCpu field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetMaxCpu() string {
	if o == nil || o.MaxCpu.Get() == nil {
		var ret string
		return ret
	}
	return *o.MaxCpu.Get()
}

// GetMaxCpuOk returns a tuple with the MaxCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetMaxCpuOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxCpu.Get(), o.MaxCpu.IsSet()
}

// HasMaxCpu returns a boolean if a field has been set.
func (o *Instance) HasMaxCpu() bool {
	if o != nil && o.MaxCpu.IsSet() {
		return true
	}

	return false
}

// SetMaxCpu gets a reference to the given NullableString and assigns it to the MaxCpu field.
func (o *Instance) SetMaxCpu(v string) {
	o.MaxCpu.Set(&v)
}
// SetMaxCpuNil sets the value for MaxCpu to be an explicit nil
func (o *Instance) SetMaxCpuNil() {
	o.MaxCpu.Set(nil)
}

// UnsetMaxCpu ensures that no value is present for MaxCpu, not even an explicit nil
func (o *Instance) UnsetMaxCpu() {
	o.MaxCpu.Unset()
}

// GetHourlyCost returns the HourlyCost field value if set, zero value otherwise.
func (o *Instance) GetHourlyCost() float32 {
	if o == nil || o.HourlyCost == nil {
		var ret float32
		return ret
	}
	return *o.HourlyCost
}

// GetHourlyCostOk returns a tuple with the HourlyCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetHourlyCostOk() (*float32, bool) {
	if o == nil || o.HourlyCost == nil {
		return nil, false
	}
	return o.HourlyCost, true
}

// HasHourlyCost returns a boolean if a field has been set.
func (o *Instance) HasHourlyCost() bool {
	if o != nil && o.HourlyCost != nil {
		return true
	}

	return false
}

// SetHourlyCost gets a reference to the given float32 and assigns it to the HourlyCost field.
func (o *Instance) SetHourlyCost(v float32) {
	o.HourlyCost = &v
}

// GetHourlyPrice returns the HourlyPrice field value if set, zero value otherwise.
func (o *Instance) GetHourlyPrice() float32 {
	if o == nil || o.HourlyPrice == nil {
		var ret float32
		return ret
	}
	return *o.HourlyPrice
}

// GetHourlyPriceOk returns a tuple with the HourlyPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetHourlyPriceOk() (*float32, bool) {
	if o == nil || o.HourlyPrice == nil {
		return nil, false
	}
	return o.HourlyPrice, true
}

// HasHourlyPrice returns a boolean if a field has been set.
func (o *Instance) HasHourlyPrice() bool {
	if o != nil && o.HourlyPrice != nil {
		return true
	}

	return false
}

// SetHourlyPrice gets a reference to the given float32 and assigns it to the HourlyPrice field.
func (o *Instance) SetHourlyPrice(v float32) {
	o.HourlyPrice = &v
}

// GetInstancePrice returns the InstancePrice field value if set, zero value otherwise.
func (o *Instance) GetInstancePrice() InstanceInstancePrice {
	if o == nil || o.InstancePrice == nil {
		var ret InstanceInstancePrice
		return ret
	}
	return *o.InstancePrice
}

// GetInstancePriceOk returns a tuple with the InstancePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetInstancePriceOk() (*InstanceInstancePrice, bool) {
	if o == nil || o.InstancePrice == nil {
		return nil, false
	}
	return o.InstancePrice, true
}

// HasInstancePrice returns a boolean if a field has been set.
func (o *Instance) HasInstancePrice() bool {
	if o != nil && o.InstancePrice != nil {
		return true
	}

	return false
}

// SetInstancePrice gets a reference to the given InstanceInstancePrice and assigns it to the InstancePrice field.
func (o *Instance) SetInstancePrice(v InstanceInstancePrice) {
	o.InstancePrice = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *Instance) GetDateCreated() time.Time {
	if o == nil || o.DateCreated == nil {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *Instance) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *Instance) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *Instance) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *Instance) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *Instance) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *Instance) GetHostName() string {
	if o == nil || o.HostName == nil {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetHostNameOk() (*string, bool) {
	if o == nil || o.HostName == nil {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *Instance) HasHostName() bool {
	if o != nil && o.HostName != nil {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *Instance) SetHostName(v string) {
	o.HostName = &v
}

// GetDomainName returns the DomainName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetDomainName() string {
	if o == nil || o.DomainName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DomainName.Get()
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetDomainNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DomainName.Get(), o.DomainName.IsSet()
}

// HasDomainName returns a boolean if a field has been set.
func (o *Instance) HasDomainName() bool {
	if o != nil && o.DomainName.IsSet() {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given NullableString and assigns it to the DomainName field.
func (o *Instance) SetDomainName(v string) {
	o.DomainName.Set(&v)
}
// SetDomainNameNil sets the value for DomainName to be an explicit nil
func (o *Instance) SetDomainNameNil() {
	o.DomainName.Set(nil)
}

// UnsetDomainName ensures that no value is present for DomainName, not even an explicit nil
func (o *Instance) UnsetDomainName() {
	o.DomainName.Unset()
}

// GetEnvironmentPrefix returns the EnvironmentPrefix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetEnvironmentPrefix() string {
	if o == nil || o.EnvironmentPrefix.Get() == nil {
		var ret string
		return ret
	}
	return *o.EnvironmentPrefix.Get()
}

// GetEnvironmentPrefixOk returns a tuple with the EnvironmentPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetEnvironmentPrefixOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EnvironmentPrefix.Get(), o.EnvironmentPrefix.IsSet()
}

// HasEnvironmentPrefix returns a boolean if a field has been set.
func (o *Instance) HasEnvironmentPrefix() bool {
	if o != nil && o.EnvironmentPrefix.IsSet() {
		return true
	}

	return false
}

// SetEnvironmentPrefix gets a reference to the given NullableString and assigns it to the EnvironmentPrefix field.
func (o *Instance) SetEnvironmentPrefix(v string) {
	o.EnvironmentPrefix.Set(&v)
}
// SetEnvironmentPrefixNil sets the value for EnvironmentPrefix to be an explicit nil
func (o *Instance) SetEnvironmentPrefixNil() {
	o.EnvironmentPrefix.Set(nil)
}

// UnsetEnvironmentPrefix ensures that no value is present for EnvironmentPrefix, not even an explicit nil
func (o *Instance) UnsetEnvironmentPrefix() {
	o.EnvironmentPrefix.Unset()
}

// GetFirewallEnabled returns the FirewallEnabled field value if set, zero value otherwise.
func (o *Instance) GetFirewallEnabled() bool {
	if o == nil || o.FirewallEnabled == nil {
		var ret bool
		return ret
	}
	return *o.FirewallEnabled
}

// GetFirewallEnabledOk returns a tuple with the FirewallEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetFirewallEnabledOk() (*bool, bool) {
	if o == nil || o.FirewallEnabled == nil {
		return nil, false
	}
	return o.FirewallEnabled, true
}

// HasFirewallEnabled returns a boolean if a field has been set.
func (o *Instance) HasFirewallEnabled() bool {
	if o != nil && o.FirewallEnabled != nil {
		return true
	}

	return false
}

// SetFirewallEnabled gets a reference to the given bool and assigns it to the FirewallEnabled field.
func (o *Instance) SetFirewallEnabled(v bool) {
	o.FirewallEnabled = &v
}

// GetNetworkLevel returns the NetworkLevel field value if set, zero value otherwise.
func (o *Instance) GetNetworkLevel() string {
	if o == nil || o.NetworkLevel == nil {
		var ret string
		return ret
	}
	return *o.NetworkLevel
}

// GetNetworkLevelOk returns a tuple with the NetworkLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetNetworkLevelOk() (*string, bool) {
	if o == nil || o.NetworkLevel == nil {
		return nil, false
	}
	return o.NetworkLevel, true
}

// HasNetworkLevel returns a boolean if a field has been set.
func (o *Instance) HasNetworkLevel() bool {
	if o != nil && o.NetworkLevel != nil {
		return true
	}

	return false
}

// SetNetworkLevel gets a reference to the given string and assigns it to the NetworkLevel field.
func (o *Instance) SetNetworkLevel(v string) {
	o.NetworkLevel = &v
}

// GetAutoScale returns the AutoScale field value if set, zero value otherwise.
func (o *Instance) GetAutoScale() bool {
	if o == nil || o.AutoScale == nil {
		var ret bool
		return ret
	}
	return *o.AutoScale
}

// GetAutoScaleOk returns a tuple with the AutoScale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetAutoScaleOk() (*bool, bool) {
	if o == nil || o.AutoScale == nil {
		return nil, false
	}
	return o.AutoScale, true
}

// HasAutoScale returns a boolean if a field has been set.
func (o *Instance) HasAutoScale() bool {
	if o != nil && o.AutoScale != nil {
		return true
	}

	return false
}

// SetAutoScale gets a reference to the given bool and assigns it to the AutoScale field.
func (o *Instance) SetAutoScale(v bool) {
	o.AutoScale = &v
}

// GetInstanceContext returns the InstanceContext field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetInstanceContext() string {
	if o == nil || o.InstanceContext.Get() == nil {
		var ret string
		return ret
	}
	return *o.InstanceContext.Get()
}

// GetInstanceContextOk returns a tuple with the InstanceContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetInstanceContextOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InstanceContext.Get(), o.InstanceContext.IsSet()
}

// HasInstanceContext returns a boolean if a field has been set.
func (o *Instance) HasInstanceContext() bool {
	if o != nil && o.InstanceContext.IsSet() {
		return true
	}

	return false
}

// SetInstanceContext gets a reference to the given NullableString and assigns it to the InstanceContext field.
func (o *Instance) SetInstanceContext(v string) {
	o.InstanceContext.Set(&v)
}
// SetInstanceContextNil sets the value for InstanceContext to be an explicit nil
func (o *Instance) SetInstanceContextNil() {
	o.InstanceContext.Set(nil)
}

// UnsetInstanceContext ensures that no value is present for InstanceContext, not even an explicit nil
func (o *Instance) UnsetInstanceContext() {
	o.InstanceContext.Unset()
}

// GetCurrentDeployId returns the CurrentDeployId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetCurrentDeployId() string {
	if o == nil || o.CurrentDeployId.Get() == nil {
		var ret string
		return ret
	}
	return *o.CurrentDeployId.Get()
}

// GetCurrentDeployIdOk returns a tuple with the CurrentDeployId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetCurrentDeployIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CurrentDeployId.Get(), o.CurrentDeployId.IsSet()
}

// HasCurrentDeployId returns a boolean if a field has been set.
func (o *Instance) HasCurrentDeployId() bool {
	if o != nil && o.CurrentDeployId.IsSet() {
		return true
	}

	return false
}

// SetCurrentDeployId gets a reference to the given NullableString and assigns it to the CurrentDeployId field.
func (o *Instance) SetCurrentDeployId(v string) {
	o.CurrentDeployId.Set(&v)
}
// SetCurrentDeployIdNil sets the value for CurrentDeployId to be an explicit nil
func (o *Instance) SetCurrentDeployIdNil() {
	o.CurrentDeployId.Set(nil)
}

// UnsetCurrentDeployId ensures that no value is present for CurrentDeployId, not even an explicit nil
func (o *Instance) UnsetCurrentDeployId() {
	o.CurrentDeployId.Unset()
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *Instance) GetLocked() bool {
	if o == nil || o.Locked == nil {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetLockedOk() (*bool, bool) {
	if o == nil || o.Locked == nil {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *Instance) HasLocked() bool {
	if o != nil && o.Locked != nil {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *Instance) SetLocked(v bool) {
	o.Locked = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Instance) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Instance) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Instance) SetStatus(v string) {
	o.Status = &v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetStatusMessage() string {
	if o == nil || o.StatusMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.StatusMessage.Get()
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetStatusMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StatusMessage.Get(), o.StatusMessage.IsSet()
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *Instance) HasStatusMessage() bool {
	if o != nil && o.StatusMessage.IsSet() {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given NullableString and assigns it to the StatusMessage field.
func (o *Instance) SetStatusMessage(v string) {
	o.StatusMessage.Set(&v)
}
// SetStatusMessageNil sets the value for StatusMessage to be an explicit nil
func (o *Instance) SetStatusMessageNil() {
	o.StatusMessage.Set(nil)
}

// UnsetStatusMessage ensures that no value is present for StatusMessage, not even an explicit nil
func (o *Instance) UnsetStatusMessage() {
	o.StatusMessage.Unset()
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetErrorMessage() string {
	if o == nil || o.ErrorMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetErrorMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *Instance) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given NullableString and assigns it to the ErrorMessage field.
func (o *Instance) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}
// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *Instance) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *Instance) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

// GetStatusDate returns the StatusDate field value if set, zero value otherwise.
func (o *Instance) GetStatusDate() time.Time {
	if o == nil || o.StatusDate == nil {
		var ret time.Time
		return ret
	}
	return *o.StatusDate
}

// GetStatusDateOk returns a tuple with the StatusDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetStatusDateOk() (*time.Time, bool) {
	if o == nil || o.StatusDate == nil {
		return nil, false
	}
	return o.StatusDate, true
}

// HasStatusDate returns a boolean if a field has been set.
func (o *Instance) HasStatusDate() bool {
	if o != nil && o.StatusDate != nil {
		return true
	}

	return false
}

// SetStatusDate gets a reference to the given time.Time and assigns it to the StatusDate field.
func (o *Instance) SetStatusDate(v time.Time) {
	o.StatusDate = &v
}

// GetStatusPercent returns the StatusPercent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetStatusPercent() string {
	if o == nil || o.StatusPercent.Get() == nil {
		var ret string
		return ret
	}
	return *o.StatusPercent.Get()
}

// GetStatusPercentOk returns a tuple with the StatusPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetStatusPercentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StatusPercent.Get(), o.StatusPercent.IsSet()
}

// HasStatusPercent returns a boolean if a field has been set.
func (o *Instance) HasStatusPercent() bool {
	if o != nil && o.StatusPercent.IsSet() {
		return true
	}

	return false
}

// SetStatusPercent gets a reference to the given NullableString and assigns it to the StatusPercent field.
func (o *Instance) SetStatusPercent(v string) {
	o.StatusPercent.Set(&v)
}
// SetStatusPercentNil sets the value for StatusPercent to be an explicit nil
func (o *Instance) SetStatusPercentNil() {
	o.StatusPercent.Set(nil)
}

// UnsetStatusPercent ensures that no value is present for StatusPercent, not even an explicit nil
func (o *Instance) UnsetStatusPercent() {
	o.StatusPercent.Unset()
}

// GetStatusEta returns the StatusEta field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetStatusEta() string {
	if o == nil || o.StatusEta.Get() == nil {
		var ret string
		return ret
	}
	return *o.StatusEta.Get()
}

// GetStatusEtaOk returns a tuple with the StatusEta field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetStatusEtaOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StatusEta.Get(), o.StatusEta.IsSet()
}

// HasStatusEta returns a boolean if a field has been set.
func (o *Instance) HasStatusEta() bool {
	if o != nil && o.StatusEta.IsSet() {
		return true
	}

	return false
}

// SetStatusEta gets a reference to the given NullableString and assigns it to the StatusEta field.
func (o *Instance) SetStatusEta(v string) {
	o.StatusEta.Set(&v)
}
// SetStatusEtaNil sets the value for StatusEta to be an explicit nil
func (o *Instance) SetStatusEtaNil() {
	o.StatusEta.Set(nil)
}

// UnsetStatusEta ensures that no value is present for StatusEta, not even an explicit nil
func (o *Instance) UnsetStatusEta() {
	o.StatusEta.Unset()
}

// GetUserStatus returns the UserStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetUserStatus() string {
	if o == nil || o.UserStatus.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserStatus.Get()
}

// GetUserStatusOk returns a tuple with the UserStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetUserStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserStatus.Get(), o.UserStatus.IsSet()
}

// HasUserStatus returns a boolean if a field has been set.
func (o *Instance) HasUserStatus() bool {
	if o != nil && o.UserStatus.IsSet() {
		return true
	}

	return false
}

// SetUserStatus gets a reference to the given NullableString and assigns it to the UserStatus field.
func (o *Instance) SetUserStatus(v string) {
	o.UserStatus.Set(&v)
}
// SetUserStatusNil sets the value for UserStatus to be an explicit nil
func (o *Instance) SetUserStatusNil() {
	o.UserStatus.Set(nil)
}

// UnsetUserStatus ensures that no value is present for UserStatus, not even an explicit nil
func (o *Instance) UnsetUserStatus() {
	o.UserStatus.Unset()
}

// GetExpireDays returns the ExpireDays field value if set, zero value otherwise.
func (o *Instance) GetExpireDays() int64 {
	if o == nil || o.ExpireDays == nil {
		var ret int64
		return ret
	}
	return *o.ExpireDays
}

// GetExpireDaysOk returns a tuple with the ExpireDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetExpireDaysOk() (*int64, bool) {
	if o == nil || o.ExpireDays == nil {
		return nil, false
	}
	return o.ExpireDays, true
}

// HasExpireDays returns a boolean if a field has been set.
func (o *Instance) HasExpireDays() bool {
	if o != nil && o.ExpireDays != nil {
		return true
	}

	return false
}

// SetExpireDays gets a reference to the given int64 and assigns it to the ExpireDays field.
func (o *Instance) SetExpireDays(v int64) {
	o.ExpireDays = &v
}

// GetRenewDays returns the RenewDays field value if set, zero value otherwise.
func (o *Instance) GetRenewDays() int64 {
	if o == nil || o.RenewDays == nil {
		var ret int64
		return ret
	}
	return *o.RenewDays
}

// GetRenewDaysOk returns a tuple with the RenewDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetRenewDaysOk() (*int64, bool) {
	if o == nil || o.RenewDays == nil {
		return nil, false
	}
	return o.RenewDays, true
}

// HasRenewDays returns a boolean if a field has been set.
func (o *Instance) HasRenewDays() bool {
	if o != nil && o.RenewDays != nil {
		return true
	}

	return false
}

// SetRenewDays gets a reference to the given int64 and assigns it to the RenewDays field.
func (o *Instance) SetRenewDays(v int64) {
	o.RenewDays = &v
}

// GetExpireCount returns the ExpireCount field value if set, zero value otherwise.
func (o *Instance) GetExpireCount() int64 {
	if o == nil || o.ExpireCount == nil {
		var ret int64
		return ret
	}
	return *o.ExpireCount
}

// GetExpireCountOk returns a tuple with the ExpireCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetExpireCountOk() (*int64, bool) {
	if o == nil || o.ExpireCount == nil {
		return nil, false
	}
	return o.ExpireCount, true
}

// HasExpireCount returns a boolean if a field has been set.
func (o *Instance) HasExpireCount() bool {
	if o != nil && o.ExpireCount != nil {
		return true
	}

	return false
}

// SetExpireCount gets a reference to the given int64 and assigns it to the ExpireCount field.
func (o *Instance) SetExpireCount(v int64) {
	o.ExpireCount = &v
}

// GetExpireDate returns the ExpireDate field value if set, zero value otherwise.
func (o *Instance) GetExpireDate() time.Time {
	if o == nil || o.ExpireDate == nil {
		var ret time.Time
		return ret
	}
	return *o.ExpireDate
}

// GetExpireDateOk returns a tuple with the ExpireDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetExpireDateOk() (*time.Time, bool) {
	if o == nil || o.ExpireDate == nil {
		return nil, false
	}
	return o.ExpireDate, true
}

// HasExpireDate returns a boolean if a field has been set.
func (o *Instance) HasExpireDate() bool {
	if o != nil && o.ExpireDate != nil {
		return true
	}

	return false
}

// SetExpireDate gets a reference to the given time.Time and assigns it to the ExpireDate field.
func (o *Instance) SetExpireDate(v time.Time) {
	o.ExpireDate = &v
}

// GetExpireWarningDate returns the ExpireWarningDate field value if set, zero value otherwise.
func (o *Instance) GetExpireWarningDate() time.Time {
	if o == nil || o.ExpireWarningDate == nil {
		var ret time.Time
		return ret
	}
	return *o.ExpireWarningDate
}

// GetExpireWarningDateOk returns a tuple with the ExpireWarningDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetExpireWarningDateOk() (*time.Time, bool) {
	if o == nil || o.ExpireWarningDate == nil {
		return nil, false
	}
	return o.ExpireWarningDate, true
}

// HasExpireWarningDate returns a boolean if a field has been set.
func (o *Instance) HasExpireWarningDate() bool {
	if o != nil && o.ExpireWarningDate != nil {
		return true
	}

	return false
}

// SetExpireWarningDate gets a reference to the given time.Time and assigns it to the ExpireWarningDate field.
func (o *Instance) SetExpireWarningDate(v time.Time) {
	o.ExpireWarningDate = &v
}

// GetExpireWarningSent returns the ExpireWarningSent field value if set, zero value otherwise.
func (o *Instance) GetExpireWarningSent() bool {
	if o == nil || o.ExpireWarningSent == nil {
		var ret bool
		return ret
	}
	return *o.ExpireWarningSent
}

// GetExpireWarningSentOk returns a tuple with the ExpireWarningSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetExpireWarningSentOk() (*bool, bool) {
	if o == nil || o.ExpireWarningSent == nil {
		return nil, false
	}
	return o.ExpireWarningSent, true
}

// HasExpireWarningSent returns a boolean if a field has been set.
func (o *Instance) HasExpireWarningSent() bool {
	if o != nil && o.ExpireWarningSent != nil {
		return true
	}

	return false
}

// SetExpireWarningSent gets a reference to the given bool and assigns it to the ExpireWarningSent field.
func (o *Instance) SetExpireWarningSent(v bool) {
	o.ExpireWarningSent = &v
}

// GetShutdownDays returns the ShutdownDays field value if set, zero value otherwise.
func (o *Instance) GetShutdownDays() int64 {
	if o == nil || o.ShutdownDays == nil {
		var ret int64
		return ret
	}
	return *o.ShutdownDays
}

// GetShutdownDaysOk returns a tuple with the ShutdownDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetShutdownDaysOk() (*int64, bool) {
	if o == nil || o.ShutdownDays == nil {
		return nil, false
	}
	return o.ShutdownDays, true
}

// HasShutdownDays returns a boolean if a field has been set.
func (o *Instance) HasShutdownDays() bool {
	if o != nil && o.ShutdownDays != nil {
		return true
	}

	return false
}

// SetShutdownDays gets a reference to the given int64 and assigns it to the ShutdownDays field.
func (o *Instance) SetShutdownDays(v int64) {
	o.ShutdownDays = &v
}

// GetShutdownRenewDays returns the ShutdownRenewDays field value if set, zero value otherwise.
func (o *Instance) GetShutdownRenewDays() int64 {
	if o == nil || o.ShutdownRenewDays == nil {
		var ret int64
		return ret
	}
	return *o.ShutdownRenewDays
}

// GetShutdownRenewDaysOk returns a tuple with the ShutdownRenewDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetShutdownRenewDaysOk() (*int64, bool) {
	if o == nil || o.ShutdownRenewDays == nil {
		return nil, false
	}
	return o.ShutdownRenewDays, true
}

// HasShutdownRenewDays returns a boolean if a field has been set.
func (o *Instance) HasShutdownRenewDays() bool {
	if o != nil && o.ShutdownRenewDays != nil {
		return true
	}

	return false
}

// SetShutdownRenewDays gets a reference to the given int64 and assigns it to the ShutdownRenewDays field.
func (o *Instance) SetShutdownRenewDays(v int64) {
	o.ShutdownRenewDays = &v
}

// GetShutdownCount returns the ShutdownCount field value if set, zero value otherwise.
func (o *Instance) GetShutdownCount() int64 {
	if o == nil || o.ShutdownCount == nil {
		var ret int64
		return ret
	}
	return *o.ShutdownCount
}

// GetShutdownCountOk returns a tuple with the ShutdownCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetShutdownCountOk() (*int64, bool) {
	if o == nil || o.ShutdownCount == nil {
		return nil, false
	}
	return o.ShutdownCount, true
}

// HasShutdownCount returns a boolean if a field has been set.
func (o *Instance) HasShutdownCount() bool {
	if o != nil && o.ShutdownCount != nil {
		return true
	}

	return false
}

// SetShutdownCount gets a reference to the given int64 and assigns it to the ShutdownCount field.
func (o *Instance) SetShutdownCount(v int64) {
	o.ShutdownCount = &v
}

// GetShutdownDate returns the ShutdownDate field value if set, zero value otherwise.
func (o *Instance) GetShutdownDate() time.Time {
	if o == nil || o.ShutdownDate == nil {
		var ret time.Time
		return ret
	}
	return *o.ShutdownDate
}

// GetShutdownDateOk returns a tuple with the ShutdownDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetShutdownDateOk() (*time.Time, bool) {
	if o == nil || o.ShutdownDate == nil {
		return nil, false
	}
	return o.ShutdownDate, true
}

// HasShutdownDate returns a boolean if a field has been set.
func (o *Instance) HasShutdownDate() bool {
	if o != nil && o.ShutdownDate != nil {
		return true
	}

	return false
}

// SetShutdownDate gets a reference to the given time.Time and assigns it to the ShutdownDate field.
func (o *Instance) SetShutdownDate(v time.Time) {
	o.ShutdownDate = &v
}

// GetShutdownWarningDate returns the ShutdownWarningDate field value if set, zero value otherwise.
func (o *Instance) GetShutdownWarningDate() time.Time {
	if o == nil || o.ShutdownWarningDate == nil {
		var ret time.Time
		return ret
	}
	return *o.ShutdownWarningDate
}

// GetShutdownWarningDateOk returns a tuple with the ShutdownWarningDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetShutdownWarningDateOk() (*time.Time, bool) {
	if o == nil || o.ShutdownWarningDate == nil {
		return nil, false
	}
	return o.ShutdownWarningDate, true
}

// HasShutdownWarningDate returns a boolean if a field has been set.
func (o *Instance) HasShutdownWarningDate() bool {
	if o != nil && o.ShutdownWarningDate != nil {
		return true
	}

	return false
}

// SetShutdownWarningDate gets a reference to the given time.Time and assigns it to the ShutdownWarningDate field.
func (o *Instance) SetShutdownWarningDate(v time.Time) {
	o.ShutdownWarningDate = &v
}

// GetShutdownWarningSent returns the ShutdownWarningSent field value if set, zero value otherwise.
func (o *Instance) GetShutdownWarningSent() bool {
	if o == nil || o.ShutdownWarningSent == nil {
		var ret bool
		return ret
	}
	return *o.ShutdownWarningSent
}

// GetShutdownWarningSentOk returns a tuple with the ShutdownWarningSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetShutdownWarningSentOk() (*bool, bool) {
	if o == nil || o.ShutdownWarningSent == nil {
		return nil, false
	}
	return o.ShutdownWarningSent, true
}

// HasShutdownWarningSent returns a boolean if a field has been set.
func (o *Instance) HasShutdownWarningSent() bool {
	if o != nil && o.ShutdownWarningSent != nil {
		return true
	}

	return false
}

// SetShutdownWarningSent gets a reference to the given bool and assigns it to the ShutdownWarningSent field.
func (o *Instance) SetShutdownWarningSent(v bool) {
	o.ShutdownWarningSent = &v
}

// GetRemovalDate returns the RemovalDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetRemovalDate() time.Time {
	if o == nil || o.RemovalDate.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.RemovalDate.Get()
}

// GetRemovalDateOk returns a tuple with the RemovalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetRemovalDateOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RemovalDate.Get(), o.RemovalDate.IsSet()
}

// HasRemovalDate returns a boolean if a field has been set.
func (o *Instance) HasRemovalDate() bool {
	if o != nil && o.RemovalDate.IsSet() {
		return true
	}

	return false
}

// SetRemovalDate gets a reference to the given NullableTime and assigns it to the RemovalDate field.
func (o *Instance) SetRemovalDate(v time.Time) {
	o.RemovalDate.Set(&v)
}
// SetRemovalDateNil sets the value for RemovalDate to be an explicit nil
func (o *Instance) SetRemovalDateNil() {
	o.RemovalDate.Set(nil)
}

// UnsetRemovalDate ensures that no value is present for RemovalDate, not even an explicit nil
func (o *Instance) UnsetRemovalDate() {
	o.RemovalDate.Unset()
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *Instance) GetCreatedBy() InlineResponse200107NetworkPoolCreatedBy {
	if o == nil || o.CreatedBy == nil {
		var ret InlineResponse200107NetworkPoolCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetCreatedByOk() (*InlineResponse200107NetworkPoolCreatedBy, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *Instance) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given InlineResponse200107NetworkPoolCreatedBy and assigns it to the CreatedBy field.
func (o *Instance) SetCreatedBy(v InlineResponse200107NetworkPoolCreatedBy) {
	o.CreatedBy = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *Instance) GetOwner() InlineResponse200107NetworkPoolCreatedBy {
	if o == nil || o.Owner == nil {
		var ret InlineResponse200107NetworkPoolCreatedBy
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetOwnerOk() (*InlineResponse200107NetworkPoolCreatedBy, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *Instance) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given InlineResponse200107NetworkPoolCreatedBy and assigns it to the Owner field.
func (o *Instance) SetOwner(v InlineResponse200107NetworkPoolCreatedBy) {
	o.Owner = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetNotes() string {
	if o == nil || o.Notes.Get() == nil {
		var ret string
		return ret
	}
	return *o.Notes.Get()
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetNotesOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Notes.Get(), o.Notes.IsSet()
}

// HasNotes returns a boolean if a field has been set.
func (o *Instance) HasNotes() bool {
	if o != nil && o.Notes.IsSet() {
		return true
	}

	return false
}

// SetNotes gets a reference to the given NullableString and assigns it to the Notes field.
func (o *Instance) SetNotes(v string) {
	o.Notes.Set(&v)
}
// SetNotesNil sets the value for Notes to be an explicit nil
func (o *Instance) SetNotesNil() {
	o.Notes.Set(nil)
}

// UnsetNotes ensures that no value is present for Notes, not even an explicit nil
func (o *Instance) UnsetNotes() {
	o.Notes.Unset()
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *Instance) GetStats() InstanceStats {
	if o == nil || o.Stats == nil {
		var ret InstanceStats
		return ret
	}
	return *o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetStatsOk() (*InstanceStats, bool) {
	if o == nil || o.Stats == nil {
		return nil, false
	}
	return o.Stats, true
}

// HasStats returns a boolean if a field has been set.
func (o *Instance) HasStats() bool {
	if o != nil && o.Stats != nil {
		return true
	}

	return false
}

// SetStats gets a reference to the given InstanceStats and assigns it to the Stats field.
func (o *Instance) SetStats(v InstanceStats) {
	o.Stats = &v
}

// GetPowerSchedule returns the PowerSchedule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetPowerSchedule() string {
	if o == nil || o.PowerSchedule.Get() == nil {
		var ret string
		return ret
	}
	return *o.PowerSchedule.Get()
}

// GetPowerScheduleOk returns a tuple with the PowerSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetPowerScheduleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PowerSchedule.Get(), o.PowerSchedule.IsSet()
}

// HasPowerSchedule returns a boolean if a field has been set.
func (o *Instance) HasPowerSchedule() bool {
	if o != nil && o.PowerSchedule.IsSet() {
		return true
	}

	return false
}

// SetPowerSchedule gets a reference to the given NullableString and assigns it to the PowerSchedule field.
func (o *Instance) SetPowerSchedule(v string) {
	o.PowerSchedule.Set(&v)
}
// SetPowerScheduleNil sets the value for PowerSchedule to be an explicit nil
func (o *Instance) SetPowerScheduleNil() {
	o.PowerSchedule.Set(nil)
}

// UnsetPowerSchedule ensures that no value is present for PowerSchedule, not even an explicit nil
func (o *Instance) UnsetPowerSchedule() {
	o.PowerSchedule.Unset()
}

// GetIsScalable returns the IsScalable field value if set, zero value otherwise.
func (o *Instance) GetIsScalable() bool {
	if o == nil || o.IsScalable == nil {
		var ret bool
		return ret
	}
	return *o.IsScalable
}

// GetIsScalableOk returns a tuple with the IsScalable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetIsScalableOk() (*bool, bool) {
	if o == nil || o.IsScalable == nil {
		return nil, false
	}
	return o.IsScalable, true
}

// HasIsScalable returns a boolean if a field has been set.
func (o *Instance) HasIsScalable() bool {
	if o != nil && o.IsScalable != nil {
		return true
	}

	return false
}

// SetIsScalable gets a reference to the given bool and assigns it to the IsScalable field.
func (o *Instance) SetIsScalable(v bool) {
	o.IsScalable = &v
}

// GetInstanceThreshold returns the InstanceThreshold field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetInstanceThreshold() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}
	return o.InstanceThreshold
}

// GetInstanceThresholdOk returns a tuple with the InstanceThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetInstanceThresholdOk() (*map[string]interface{}, bool) {
	if o == nil || o.InstanceThreshold == nil {
		return nil, false
	}
	return &o.InstanceThreshold, true
}

// HasInstanceThreshold returns a boolean if a field has been set.
func (o *Instance) HasInstanceThreshold() bool {
	if o != nil && o.InstanceThreshold != nil {
		return true
	}

	return false
}

// SetInstanceThreshold gets a reference to the given map[string]interface{} and assigns it to the InstanceThreshold field.
func (o *Instance) SetInstanceThreshold(v map[string]interface{}) {
	o.InstanceThreshold = v
}

// GetIsBusy returns the IsBusy field value if set, zero value otherwise.
func (o *Instance) GetIsBusy() bool {
	if o == nil || o.IsBusy == nil {
		var ret bool
		return ret
	}
	return *o.IsBusy
}

// GetIsBusyOk returns a tuple with the IsBusy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Instance) GetIsBusyOk() (*bool, bool) {
	if o == nil || o.IsBusy == nil {
		return nil, false
	}
	return o.IsBusy, true
}

// HasIsBusy returns a boolean if a field has been set.
func (o *Instance) HasIsBusy() bool {
	if o != nil && o.IsBusy != nil {
		return true
	}

	return false
}

// SetIsBusy gets a reference to the given bool and assigns it to the IsBusy field.
func (o *Instance) SetIsBusy(v bool) {
	o.IsBusy = &v
}

// GetApps returns the Apps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Instance) GetApps() []map[string]interface{} {
	if o == nil  {
		var ret []map[string]interface{}
		return ret
	}
	return o.Apps
}

// GetAppsOk returns a tuple with the Apps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Instance) GetAppsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Apps == nil {
		return nil, false
	}
	return &o.Apps, true
}

// HasApps returns a boolean if a field has been set.
func (o *Instance) HasApps() bool {
	if o != nil && o.Apps != nil {
		return true
	}

	return false
}

// SetApps gets a reference to the given []map[string]interface{} and assigns it to the Apps field.
func (o *Instance) SetApps(v []map[string]interface{}) {
	o.Apps = v
}

func (o Instance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.AccountId != nil {
		toSerialize["accountId"] = o.AccountId
	}
	if o.Tenant != nil {
		toSerialize["tenant"] = o.Tenant
	}
	if o.InstanceType != nil {
		toSerialize["instanceType"] = o.InstanceType
	}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	if o.Cloud != nil {
		toSerialize["cloud"] = o.Cloud
	}
	if o.Containers != nil {
		toSerialize["containers"] = o.Containers
	}
	if o.Servers != nil {
		toSerialize["servers"] = o.Servers
	}
	if o.ConnectionInfo != nil {
		toSerialize["connectionInfo"] = o.ConnectionInfo
	}
	if o.Layout != nil {
		toSerialize["layout"] = o.Layout
	}
	if o.Plan != nil {
		toSerialize["plan"] = o.Plan
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Environment.IsSet() {
		toSerialize["environment"] = o.Environment.Get()
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.ConfigGroup.IsSet() {
		toSerialize["configGroup"] = o.ConfigGroup.Get()
	}
	if o.ConfigId.IsSet() {
		toSerialize["configId"] = o.ConfigId.Get()
	}
	if o.ConfigRole.IsSet() {
		toSerialize["configRole"] = o.ConfigRole.Get()
	}
	if o.Volumes != nil {
		toSerialize["volumes"] = o.Volumes
	}
	if o.Controllers != nil {
		toSerialize["controllers"] = o.Controllers
	}
	if o.Interfaces != nil {
		toSerialize["interfaces"] = o.Interfaces
	}
	if o.CustomOptions != nil {
		toSerialize["customOptions"] = o.CustomOptions
	}
	if o.InstanceVersion != nil {
		toSerialize["instanceVersion"] = o.InstanceVersion
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Evars != nil {
		toSerialize["evars"] = o.Evars
	}
	if o.MaxMemory != nil {
		toSerialize["maxMemory"] = o.MaxMemory
	}
	if o.MaxStorage != nil {
		toSerialize["maxStorage"] = o.MaxStorage
	}
	if o.MaxCores != nil {
		toSerialize["maxCores"] = o.MaxCores
	}
	if o.CoresPerSocket.IsSet() {
		toSerialize["coresPerSocket"] = o.CoresPerSocket.Get()
	}
	if o.MaxCpu.IsSet() {
		toSerialize["maxCpu"] = o.MaxCpu.Get()
	}
	if o.HourlyCost != nil {
		toSerialize["hourlyCost"] = o.HourlyCost
	}
	if o.HourlyPrice != nil {
		toSerialize["hourlyPrice"] = o.HourlyPrice
	}
	if o.InstancePrice != nil {
		toSerialize["instancePrice"] = o.InstancePrice
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if o.HostName != nil {
		toSerialize["hostName"] = o.HostName
	}
	if o.DomainName.IsSet() {
		toSerialize["domainName"] = o.DomainName.Get()
	}
	if o.EnvironmentPrefix.IsSet() {
		toSerialize["environmentPrefix"] = o.EnvironmentPrefix.Get()
	}
	if o.FirewallEnabled != nil {
		toSerialize["firewallEnabled"] = o.FirewallEnabled
	}
	if o.NetworkLevel != nil {
		toSerialize["networkLevel"] = o.NetworkLevel
	}
	if o.AutoScale != nil {
		toSerialize["autoScale"] = o.AutoScale
	}
	if o.InstanceContext.IsSet() {
		toSerialize["instanceContext"] = o.InstanceContext.Get()
	}
	if o.CurrentDeployId.IsSet() {
		toSerialize["currentDeployId"] = o.CurrentDeployId.Get()
	}
	if o.Locked != nil {
		toSerialize["locked"] = o.Locked
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StatusMessage.IsSet() {
		toSerialize["statusMessage"] = o.StatusMessage.Get()
	}
	if o.ErrorMessage.IsSet() {
		toSerialize["errorMessage"] = o.ErrorMessage.Get()
	}
	if o.StatusDate != nil {
		toSerialize["statusDate"] = o.StatusDate
	}
	if o.StatusPercent.IsSet() {
		toSerialize["statusPercent"] = o.StatusPercent.Get()
	}
	if o.StatusEta.IsSet() {
		toSerialize["statusEta"] = o.StatusEta.Get()
	}
	if o.UserStatus.IsSet() {
		toSerialize["userStatus"] = o.UserStatus.Get()
	}
	if o.ExpireDays != nil {
		toSerialize["expireDays"] = o.ExpireDays
	}
	if o.RenewDays != nil {
		toSerialize["renewDays"] = o.RenewDays
	}
	if o.ExpireCount != nil {
		toSerialize["expireCount"] = o.ExpireCount
	}
	if o.ExpireDate != nil {
		toSerialize["expireDate"] = o.ExpireDate
	}
	if o.ExpireWarningDate != nil {
		toSerialize["expireWarningDate"] = o.ExpireWarningDate
	}
	if o.ExpireWarningSent != nil {
		toSerialize["expireWarningSent"] = o.ExpireWarningSent
	}
	if o.ShutdownDays != nil {
		toSerialize["shutdownDays"] = o.ShutdownDays
	}
	if o.ShutdownRenewDays != nil {
		toSerialize["shutdownRenewDays"] = o.ShutdownRenewDays
	}
	if o.ShutdownCount != nil {
		toSerialize["shutdownCount"] = o.ShutdownCount
	}
	if o.ShutdownDate != nil {
		toSerialize["shutdownDate"] = o.ShutdownDate
	}
	if o.ShutdownWarningDate != nil {
		toSerialize["shutdownWarningDate"] = o.ShutdownWarningDate
	}
	if o.ShutdownWarningSent != nil {
		toSerialize["shutdownWarningSent"] = o.ShutdownWarningSent
	}
	if o.RemovalDate.IsSet() {
		toSerialize["removalDate"] = o.RemovalDate.Get()
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.Notes.IsSet() {
		toSerialize["notes"] = o.Notes.Get()
	}
	if o.Stats != nil {
		toSerialize["stats"] = o.Stats
	}
	if o.PowerSchedule.IsSet() {
		toSerialize["powerSchedule"] = o.PowerSchedule.Get()
	}
	if o.IsScalable != nil {
		toSerialize["isScalable"] = o.IsScalable
	}
	if o.InstanceThreshold != nil {
		toSerialize["instanceThreshold"] = o.InstanceThreshold
	}
	if o.IsBusy != nil {
		toSerialize["isBusy"] = o.IsBusy
	}
	if o.Apps != nil {
		toSerialize["apps"] = o.Apps
	}
	return json.Marshal(toSerialize)
}

type NullableInstance struct {
	value *Instance
	isSet bool
}

func (v NullableInstance) Get() *Instance {
	return v.value
}

func (v *NullableInstance) Set(val *Instance) {
	v.value = val
	v.isSet = true
}

func (v NullableInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstance(val *Instance) *NullableInstance {
	return &NullableInstance{value: val, isSet: true}
}

func (v NullableInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


