/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiIntegrationsIdInventoryInventoryIdInventory struct for ApiIntegrationsIdInventoryInventoryIdInventory
type ApiIntegrationsIdInventoryInventoryIdInventory struct {
	// Array of tenant accounts that will use this inventory as Default. Used by jobs set to 'Use Tenant Default'
	Tenants *[]ApiBlueprintsIdUpdatePermissionsResourcePermissionSites `json:"tenants,omitempty"`
}

// NewApiIntegrationsIdInventoryInventoryIdInventory instantiates a new ApiIntegrationsIdInventoryInventoryIdInventory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiIntegrationsIdInventoryInventoryIdInventory() *ApiIntegrationsIdInventoryInventoryIdInventory {
	this := ApiIntegrationsIdInventoryInventoryIdInventory{}
	return &this
}

// NewApiIntegrationsIdInventoryInventoryIdInventoryWithDefaults instantiates a new ApiIntegrationsIdInventoryInventoryIdInventory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiIntegrationsIdInventoryInventoryIdInventoryWithDefaults() *ApiIntegrationsIdInventoryInventoryIdInventory {
	this := ApiIntegrationsIdInventoryInventoryIdInventory{}
	return &this
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *ApiIntegrationsIdInventoryInventoryIdInventory) GetTenants() []ApiBlueprintsIdUpdatePermissionsResourcePermissionSites {
	if o == nil || o.Tenants == nil {
		var ret []ApiBlueprintsIdUpdatePermissionsResourcePermissionSites
		return ret
	}
	return *o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiIntegrationsIdInventoryInventoryIdInventory) GetTenantsOk() (*[]ApiBlueprintsIdUpdatePermissionsResourcePermissionSites, bool) {
	if o == nil || o.Tenants == nil {
		return nil, false
	}
	return o.Tenants, true
}

// HasTenants returns a boolean if a field has been set.
func (o *ApiIntegrationsIdInventoryInventoryIdInventory) HasTenants() bool {
	if o != nil && o.Tenants != nil {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []ApiBlueprintsIdUpdatePermissionsResourcePermissionSites and assigns it to the Tenants field.
func (o *ApiIntegrationsIdInventoryInventoryIdInventory) SetTenants(v []ApiBlueprintsIdUpdatePermissionsResourcePermissionSites) {
	o.Tenants = &v
}

func (o ApiIntegrationsIdInventoryInventoryIdInventory) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Tenants != nil {
		toSerialize["tenants"] = o.Tenants
	}
	return json.Marshal(toSerialize)
}

type NullableApiIntegrationsIdInventoryInventoryIdInventory struct {
	value *ApiIntegrationsIdInventoryInventoryIdInventory
	isSet bool
}

func (v NullableApiIntegrationsIdInventoryInventoryIdInventory) Get() *ApiIntegrationsIdInventoryInventoryIdInventory {
	return v.value
}

func (v *NullableApiIntegrationsIdInventoryInventoryIdInventory) Set(val *ApiIntegrationsIdInventoryInventoryIdInventory) {
	v.value = val
	v.isSet = true
}

func (v NullableApiIntegrationsIdInventoryInventoryIdInventory) IsSet() bool {
	return v.isSet
}

func (v *NullableApiIntegrationsIdInventoryInventoryIdInventory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiIntegrationsIdInventoryInventoryIdInventory(val *ApiIntegrationsIdInventoryInventoryIdInventory) *NullableApiIntegrationsIdInventoryInventoryIdInventory {
	return &NullableApiIntegrationsIdInventoryInventoryIdInventory{value: val, isSet: true}
}

func (v NullableApiIntegrationsIdInventoryInventoryIdInventory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiIntegrationsIdInventoryInventoryIdInventory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


