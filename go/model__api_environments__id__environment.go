/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiEnvironmentsIdEnvironment Payload for updating a new environment
type ApiEnvironmentsIdEnvironment struct {
	// A unique name for the environment
	Name *string `json:"name,omitempty"`
	// A description of the environment
	Description *string `json:"description,omitempty"`
	// private or public
	Visibility *string `json:"visibility,omitempty"`
	// Sort order
	SortOrder *int64 `json:"sortOrder,omitempty"`
	// Set to false to deactivate the environment
	Active *bool `json:"active,omitempty"`
}

// NewApiEnvironmentsIdEnvironment instantiates a new ApiEnvironmentsIdEnvironment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiEnvironmentsIdEnvironment() *ApiEnvironmentsIdEnvironment {
	this := ApiEnvironmentsIdEnvironment{}
	var visibility string = "private"
	this.Visibility = &visibility
	var sortOrder int64 = 0
	this.SortOrder = &sortOrder
	return &this
}

// NewApiEnvironmentsIdEnvironmentWithDefaults instantiates a new ApiEnvironmentsIdEnvironment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiEnvironmentsIdEnvironmentWithDefaults() *ApiEnvironmentsIdEnvironment {
	this := ApiEnvironmentsIdEnvironment{}
	var visibility string = "private"
	this.Visibility = &visibility
	var sortOrder int64 = 0
	this.SortOrder = &sortOrder
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiEnvironmentsIdEnvironment) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEnvironmentsIdEnvironment) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiEnvironmentsIdEnvironment) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiEnvironmentsIdEnvironment) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiEnvironmentsIdEnvironment) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEnvironmentsIdEnvironment) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiEnvironmentsIdEnvironment) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiEnvironmentsIdEnvironment) SetDescription(v string) {
	o.Description = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *ApiEnvironmentsIdEnvironment) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEnvironmentsIdEnvironment) GetVisibilityOk() (*string, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *ApiEnvironmentsIdEnvironment) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *ApiEnvironmentsIdEnvironment) SetVisibility(v string) {
	o.Visibility = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *ApiEnvironmentsIdEnvironment) GetSortOrder() int64 {
	if o == nil || o.SortOrder == nil {
		var ret int64
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEnvironmentsIdEnvironment) GetSortOrderOk() (*int64, bool) {
	if o == nil || o.SortOrder == nil {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *ApiEnvironmentsIdEnvironment) HasSortOrder() bool {
	if o != nil && o.SortOrder != nil {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given int64 and assigns it to the SortOrder field.
func (o *ApiEnvironmentsIdEnvironment) SetSortOrder(v int64) {
	o.SortOrder = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ApiEnvironmentsIdEnvironment) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEnvironmentsIdEnvironment) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ApiEnvironmentsIdEnvironment) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *ApiEnvironmentsIdEnvironment) SetActive(v bool) {
	o.Active = &v
}

func (o ApiEnvironmentsIdEnvironment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if o.SortOrder != nil {
		toSerialize["sortOrder"] = o.SortOrder
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	return json.Marshal(toSerialize)
}

type NullableApiEnvironmentsIdEnvironment struct {
	value *ApiEnvironmentsIdEnvironment
	isSet bool
}

func (v NullableApiEnvironmentsIdEnvironment) Get() *ApiEnvironmentsIdEnvironment {
	return v.value
}

func (v *NullableApiEnvironmentsIdEnvironment) Set(val *ApiEnvironmentsIdEnvironment) {
	v.value = val
	v.isSet = true
}

func (v NullableApiEnvironmentsIdEnvironment) IsSet() bool {
	return v.isSet
}

func (v *NullableApiEnvironmentsIdEnvironment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiEnvironmentsIdEnvironment(val *ApiEnvironmentsIdEnvironment) *NullableApiEnvironmentsIdEnvironment {
	return &NullableApiEnvironmentsIdEnvironment{value: val, isSet: true}
}

func (v NullableApiEnvironmentsIdEnvironment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiEnvironmentsIdEnvironment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


