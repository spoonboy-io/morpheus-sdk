/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiVdiPoolsIdVdiPoolConfig This can be passed in place of `instanceConfig`, but will not preserve the config property order.
type ApiVdiPoolsIdVdiPoolConfig struct {
	// Name of instance
	Name string `json:"name"`
	Group OneOfstringlong `json:"group"`
	Cloud OneOfstringlong `json:"cloud"`
	Type OneOfstringlong `json:"type"`
	Layout OneOfstringlong `json:"layout"`
	Plan OneOfstringlong `json:"plan"`
}

// NewApiVdiPoolsIdVdiPoolConfig instantiates a new ApiVdiPoolsIdVdiPoolConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiVdiPoolsIdVdiPoolConfig(name string, group OneOfstringlong, cloud OneOfstringlong, type_ OneOfstringlong, layout OneOfstringlong, plan OneOfstringlong, ) *ApiVdiPoolsIdVdiPoolConfig {
	this := ApiVdiPoolsIdVdiPoolConfig{}
	this.Name = name
	this.Group = group
	this.Cloud = cloud
	this.Type = type_
	this.Layout = layout
	this.Plan = plan
	return &this
}

// NewApiVdiPoolsIdVdiPoolConfigWithDefaults instantiates a new ApiVdiPoolsIdVdiPoolConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiVdiPoolsIdVdiPoolConfigWithDefaults() *ApiVdiPoolsIdVdiPoolConfig {
	this := ApiVdiPoolsIdVdiPoolConfig{}
	return &this
}

// GetName returns the Name field value
func (o *ApiVdiPoolsIdVdiPoolConfig) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApiVdiPoolsIdVdiPoolConfig) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApiVdiPoolsIdVdiPoolConfig) SetName(v string) {
	o.Name = v
}

// GetGroup returns the Group field value
func (o *ApiVdiPoolsIdVdiPoolConfig) GetGroup() OneOfstringlong {
	if o == nil  {
		var ret OneOfstringlong
		return ret
	}

	return o.Group
}

// GetGroupOk returns a tuple with the Group field value
// and a boolean to check if the value has been set.
func (o *ApiVdiPoolsIdVdiPoolConfig) GetGroupOk() (*OneOfstringlong, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Group, true
}

// SetGroup sets field value
func (o *ApiVdiPoolsIdVdiPoolConfig) SetGroup(v OneOfstringlong) {
	o.Group = v
}

// GetCloud returns the Cloud field value
func (o *ApiVdiPoolsIdVdiPoolConfig) GetCloud() OneOfstringlong {
	if o == nil  {
		var ret OneOfstringlong
		return ret
	}

	return o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value
// and a boolean to check if the value has been set.
func (o *ApiVdiPoolsIdVdiPoolConfig) GetCloudOk() (*OneOfstringlong, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Cloud, true
}

// SetCloud sets field value
func (o *ApiVdiPoolsIdVdiPoolConfig) SetCloud(v OneOfstringlong) {
	o.Cloud = v
}

// GetType returns the Type field value
func (o *ApiVdiPoolsIdVdiPoolConfig) GetType() OneOfstringlong {
	if o == nil  {
		var ret OneOfstringlong
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ApiVdiPoolsIdVdiPoolConfig) GetTypeOk() (*OneOfstringlong, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ApiVdiPoolsIdVdiPoolConfig) SetType(v OneOfstringlong) {
	o.Type = v
}

// GetLayout returns the Layout field value
func (o *ApiVdiPoolsIdVdiPoolConfig) GetLayout() OneOfstringlong {
	if o == nil  {
		var ret OneOfstringlong
		return ret
	}

	return o.Layout
}

// GetLayoutOk returns a tuple with the Layout field value
// and a boolean to check if the value has been set.
func (o *ApiVdiPoolsIdVdiPoolConfig) GetLayoutOk() (*OneOfstringlong, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Layout, true
}

// SetLayout sets field value
func (o *ApiVdiPoolsIdVdiPoolConfig) SetLayout(v OneOfstringlong) {
	o.Layout = v
}

// GetPlan returns the Plan field value
func (o *ApiVdiPoolsIdVdiPoolConfig) GetPlan() OneOfstringlong {
	if o == nil  {
		var ret OneOfstringlong
		return ret
	}

	return o.Plan
}

// GetPlanOk returns a tuple with the Plan field value
// and a boolean to check if the value has been set.
func (o *ApiVdiPoolsIdVdiPoolConfig) GetPlanOk() (*OneOfstringlong, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Plan, true
}

// SetPlan sets field value
func (o *ApiVdiPoolsIdVdiPoolConfig) SetPlan(v OneOfstringlong) {
	o.Plan = v
}

func (o ApiVdiPoolsIdVdiPoolConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["group"] = o.Group
	}
	if true {
		toSerialize["cloud"] = o.Cloud
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["layout"] = o.Layout
	}
	if true {
		toSerialize["plan"] = o.Plan
	}
	return json.Marshal(toSerialize)
}

type NullableApiVdiPoolsIdVdiPoolConfig struct {
	value *ApiVdiPoolsIdVdiPoolConfig
	isSet bool
}

func (v NullableApiVdiPoolsIdVdiPoolConfig) Get() *ApiVdiPoolsIdVdiPoolConfig {
	return v.value
}

func (v *NullableApiVdiPoolsIdVdiPoolConfig) Set(val *ApiVdiPoolsIdVdiPoolConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableApiVdiPoolsIdVdiPoolConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableApiVdiPoolsIdVdiPoolConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiVdiPoolsIdVdiPoolConfig(val *ApiVdiPoolsIdVdiPoolConfig) *NullableApiVdiPoolsIdVdiPoolConfig {
	return &NullableApiVdiPoolsIdVdiPoolConfig{value: val, isSet: true}
}

func (v NullableApiVdiPoolsIdVdiPoolConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiVdiPoolsIdVdiPoolConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


