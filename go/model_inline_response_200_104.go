/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200104 struct for InlineResponse200104
type InlineResponse200104 struct {
	NetworkRoutes *[]NetworkRouterRoute `json:"networkRoutes,omitempty"`
}

// NewInlineResponse200104 instantiates a new InlineResponse200104 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200104() *InlineResponse200104 {
	this := InlineResponse200104{}
	return &this
}

// NewInlineResponse200104WithDefaults instantiates a new InlineResponse200104 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200104WithDefaults() *InlineResponse200104 {
	this := InlineResponse200104{}
	return &this
}

// GetNetworkRoutes returns the NetworkRoutes field value if set, zero value otherwise.
func (o *InlineResponse200104) GetNetworkRoutes() []NetworkRouterRoute {
	if o == nil || o.NetworkRoutes == nil {
		var ret []NetworkRouterRoute
		return ret
	}
	return *o.NetworkRoutes
}

// GetNetworkRoutesOk returns a tuple with the NetworkRoutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200104) GetNetworkRoutesOk() (*[]NetworkRouterRoute, bool) {
	if o == nil || o.NetworkRoutes == nil {
		return nil, false
	}
	return o.NetworkRoutes, true
}

// HasNetworkRoutes returns a boolean if a field has been set.
func (o *InlineResponse200104) HasNetworkRoutes() bool {
	if o != nil && o.NetworkRoutes != nil {
		return true
	}

	return false
}

// SetNetworkRoutes gets a reference to the given []NetworkRouterRoute and assigns it to the NetworkRoutes field.
func (o *InlineResponse200104) SetNetworkRoutes(v []NetworkRouterRoute) {
	o.NetworkRoutes = &v
}

func (o InlineResponse200104) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkRoutes != nil {
		toSerialize["networkRoutes"] = o.NetworkRoutes
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200104 struct {
	value *InlineResponse200104
	isSet bool
}

func (v NullableInlineResponse200104) Get() *InlineResponse200104 {
	return v.value
}

func (v *NullableInlineResponse200104) Set(val *InlineResponse200104) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200104) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200104) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200104(val *InlineResponse200104) *NullableInlineResponse200104 {
	return &NullableInlineResponse200104{value: val, isSet: true}
}

func (v NullableInlineResponse200104) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200104) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


