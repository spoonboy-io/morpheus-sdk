/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject263 struct for InlineObject263
type InlineObject263 struct {
	VirtualImage VirtualImageCreate `json:"virtualImage"`
}

// NewInlineObject263 instantiates a new InlineObject263 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject263(virtualImage VirtualImageCreate, ) *InlineObject263 {
	this := InlineObject263{}
	this.VirtualImage = virtualImage
	return &this
}

// NewInlineObject263WithDefaults instantiates a new InlineObject263 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject263WithDefaults() *InlineObject263 {
	this := InlineObject263{}
	return &this
}

// GetVirtualImage returns the VirtualImage field value
func (o *InlineObject263) GetVirtualImage() VirtualImageCreate {
	if o == nil  {
		var ret VirtualImageCreate
		return ret
	}

	return o.VirtualImage
}

// GetVirtualImageOk returns a tuple with the VirtualImage field value
// and a boolean to check if the value has been set.
func (o *InlineObject263) GetVirtualImageOk() (*VirtualImageCreate, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VirtualImage, true
}

// SetVirtualImage sets field value
func (o *InlineObject263) SetVirtualImage(v VirtualImageCreate) {
	o.VirtualImage = v
}

func (o InlineObject263) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["virtualImage"] = o.VirtualImage
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject263 struct {
	value *InlineObject263
	isSet bool
}

func (v NullableInlineObject263) Get() *InlineObject263 {
	return v.value
}

func (v *NullableInlineObject263) Set(val *InlineObject263) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject263) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject263) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject263(val *InlineObject263) *NullableInlineObject263 {
	return &NullableInlineObject263{value: val, isSet: true}
}

func (v NullableInlineObject263) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject263) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


