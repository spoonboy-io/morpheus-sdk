/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// HubLoginObjectHub struct for HubLoginObjectHub
type HubLoginObjectHub struct {
	// Email for existing Morpheus Hub user
	Email string `json:"email"`
	// Password for existing Morpheus Hub user
	Password string `json:"password"`
}

// NewHubLoginObjectHub instantiates a new HubLoginObjectHub object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHubLoginObjectHub(email string, password string, ) *HubLoginObjectHub {
	this := HubLoginObjectHub{}
	this.Email = email
	this.Password = password
	return &this
}

// NewHubLoginObjectHubWithDefaults instantiates a new HubLoginObjectHub object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHubLoginObjectHubWithDefaults() *HubLoginObjectHub {
	this := HubLoginObjectHub{}
	return &this
}

// GetEmail returns the Email field value
func (o *HubLoginObjectHub) GetEmail() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *HubLoginObjectHub) GetEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *HubLoginObjectHub) SetEmail(v string) {
	o.Email = v
}

// GetPassword returns the Password field value
func (o *HubLoginObjectHub) GetPassword() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *HubLoginObjectHub) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *HubLoginObjectHub) SetPassword(v string) {
	o.Password = v
}

func (o HubLoginObjectHub) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableHubLoginObjectHub struct {
	value *HubLoginObjectHub
	isSet bool
}

func (v NullableHubLoginObjectHub) Get() *HubLoginObjectHub {
	return v.value
}

func (v *NullableHubLoginObjectHub) Set(val *HubLoginObjectHub) {
	v.value = val
	v.isSet = true
}

func (v NullableHubLoginObjectHub) IsSet() bool {
	return v.isSet
}

func (v *NullableHubLoginObjectHub) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHubLoginObjectHub(val *HubLoginObjectHub) *NullableHubLoginObjectHub {
	return &NullableHubLoginObjectHub{value: val, isSet: true}
}

func (v NullableHubLoginObjectHub) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHubLoginObjectHub) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


