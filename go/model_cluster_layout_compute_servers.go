/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterLayoutComputeServers struct for ClusterLayoutComputeServers
type ClusterLayoutComputeServers struct {
	Id *int64 `json:"id,omitempty"`
	PriorityOrder *int64 `json:"priorityOrder,omitempty"`
	NodeCount *int64 `json:"nodeCount,omitempty"`
	NodeType *string `json:"nodeType,omitempty"`
	MinNodeCount *int64 `json:"minNodeCount,omitempty"`
	MaxNodeCount NullableString `json:"maxNodeCount,omitempty"`
	DynamicCount *bool `json:"dynamicCount,omitempty"`
	InstallContainerRuntime *bool `json:"installContainerRuntime,omitempty"`
	InstallStorageRuntime *bool `json:"installStorageRuntime,omitempty"`
	Name *string `json:"name,omitempty"`
	Code *string `json:"code,omitempty"`
	Category *string `json:"category,omitempty"`
	Config NullableString `json:"config,omitempty"`
	ContainerType *ClusterLayoutContainerType `json:"containerType,omitempty"`
	ComputeServerType *ClusterLayoutComputeServerType `json:"computeServerType,omitempty"`
	ProvisionService NullableString `json:"provisionService,omitempty"`
	PlanCategory NullableString `json:"planCategory,omitempty"`
	NamePrefix NullableString `json:"namePrefix,omitempty"`
	NameSuffix NullableString `json:"nameSuffix,omitempty"`
	ForceNameIndex *bool `json:"forceNameIndex,omitempty"`
	LoadBalance *bool `json:"loadBalance,omitempty"`
}

// NewClusterLayoutComputeServers instantiates a new ClusterLayoutComputeServers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterLayoutComputeServers() *ClusterLayoutComputeServers {
	this := ClusterLayoutComputeServers{}
	return &this
}

// NewClusterLayoutComputeServersWithDefaults instantiates a new ClusterLayoutComputeServers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterLayoutComputeServersWithDefaults() *ClusterLayoutComputeServers {
	this := ClusterLayoutComputeServers{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClusterLayoutComputeServers) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutComputeServers) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ClusterLayoutComputeServers) SetId(v int64) {
	o.Id = &v
}

// GetPriorityOrder returns the PriorityOrder field value if set, zero value otherwise.
func (o *ClusterLayoutComputeServers) GetPriorityOrder() int64 {
	if o == nil || o.PriorityOrder == nil {
		var ret int64
		return ret
	}
	return *o.PriorityOrder
}

// GetPriorityOrderOk returns a tuple with the PriorityOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutComputeServers) GetPriorityOrderOk() (*int64, bool) {
	if o == nil || o.PriorityOrder == nil {
		return nil, false
	}
	return o.PriorityOrder, true
}

// HasPriorityOrder returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasPriorityOrder() bool {
	if o != nil && o.PriorityOrder != nil {
		return true
	}

	return false
}

// SetPriorityOrder gets a reference to the given int64 and assigns it to the PriorityOrder field.
func (o *ClusterLayoutComputeServers) SetPriorityOrder(v int64) {
	o.PriorityOrder = &v
}

// GetNodeCount returns the NodeCount field value if set, zero value otherwise.
func (o *ClusterLayoutComputeServers) GetNodeCount() int64 {
	if o == nil || o.NodeCount == nil {
		var ret int64
		return ret
	}
	return *o.NodeCount
}

// GetNodeCountOk returns a tuple with the NodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutComputeServers) GetNodeCountOk() (*int64, bool) {
	if o == nil || o.NodeCount == nil {
		return nil, false
	}
	return o.NodeCount, true
}

// HasNodeCount returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasNodeCount() bool {
	if o != nil && o.NodeCount != nil {
		return true
	}

	return false
}

// SetNodeCount gets a reference to the given int64 and assigns it to the NodeCount field.
func (o *ClusterLayoutComputeServers) SetNodeCount(v int64) {
	o.NodeCount = &v
}

// GetNodeType returns the NodeType field value if set, zero value otherwise.
func (o *ClusterLayoutComputeServers) GetNodeType() string {
	if o == nil || o.NodeType == nil {
		var ret string
		return ret
	}
	return *o.NodeType
}

// GetNodeTypeOk returns a tuple with the NodeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutComputeServers) GetNodeTypeOk() (*string, bool) {
	if o == nil || o.NodeType == nil {
		return nil, false
	}
	return o.NodeType, true
}

// HasNodeType returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasNodeType() bool {
	if o != nil && o.NodeType != nil {
		return true
	}

	return false
}

// SetNodeType gets a reference to the given string and assigns it to the NodeType field.
func (o *ClusterLayoutComputeServers) SetNodeType(v string) {
	o.NodeType = &v
}

// GetMinNodeCount returns the MinNodeCount field value if set, zero value otherwise.
func (o *ClusterLayoutComputeServers) GetMinNodeCount() int64 {
	if o == nil || o.MinNodeCount == nil {
		var ret int64
		return ret
	}
	return *o.MinNodeCount
}

// GetMinNodeCountOk returns a tuple with the MinNodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutComputeServers) GetMinNodeCountOk() (*int64, bool) {
	if o == nil || o.MinNodeCount == nil {
		return nil, false
	}
	return o.MinNodeCount, true
}

// HasMinNodeCount returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasMinNodeCount() bool {
	if o != nil && o.MinNodeCount != nil {
		return true
	}

	return false
}

// SetMinNodeCount gets a reference to the given int64 and assigns it to the MinNodeCount field.
func (o *ClusterLayoutComputeServers) SetMinNodeCount(v int64) {
	o.MinNodeCount = &v
}

// GetMaxNodeCount returns the MaxNodeCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterLayoutComputeServers) GetMaxNodeCount() string {
	if o == nil || o.MaxNodeCount.Get() == nil {
		var ret string
		return ret
	}
	return *o.MaxNodeCount.Get()
}

// GetMaxNodeCountOk returns a tuple with the MaxNodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterLayoutComputeServers) GetMaxNodeCountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxNodeCount.Get(), o.MaxNodeCount.IsSet()
}

// HasMaxNodeCount returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasMaxNodeCount() bool {
	if o != nil && o.MaxNodeCount.IsSet() {
		return true
	}

	return false
}

// SetMaxNodeCount gets a reference to the given NullableString and assigns it to the MaxNodeCount field.
func (o *ClusterLayoutComputeServers) SetMaxNodeCount(v string) {
	o.MaxNodeCount.Set(&v)
}
// SetMaxNodeCountNil sets the value for MaxNodeCount to be an explicit nil
func (o *ClusterLayoutComputeServers) SetMaxNodeCountNil() {
	o.MaxNodeCount.Set(nil)
}

// UnsetMaxNodeCount ensures that no value is present for MaxNodeCount, not even an explicit nil
func (o *ClusterLayoutComputeServers) UnsetMaxNodeCount() {
	o.MaxNodeCount.Unset()
}

// GetDynamicCount returns the DynamicCount field value if set, zero value otherwise.
func (o *ClusterLayoutComputeServers) GetDynamicCount() bool {
	if o == nil || o.DynamicCount == nil {
		var ret bool
		return ret
	}
	return *o.DynamicCount
}

// GetDynamicCountOk returns a tuple with the DynamicCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutComputeServers) GetDynamicCountOk() (*bool, bool) {
	if o == nil || o.DynamicCount == nil {
		return nil, false
	}
	return o.DynamicCount, true
}

// HasDynamicCount returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasDynamicCount() bool {
	if o != nil && o.DynamicCount != nil {
		return true
	}

	return false
}

// SetDynamicCount gets a reference to the given bool and assigns it to the DynamicCount field.
func (o *ClusterLayoutComputeServers) SetDynamicCount(v bool) {
	o.DynamicCount = &v
}

// GetInstallContainerRuntime returns the InstallContainerRuntime field value if set, zero value otherwise.
func (o *ClusterLayoutComputeServers) GetInstallContainerRuntime() bool {
	if o == nil || o.InstallContainerRuntime == nil {
		var ret bool
		return ret
	}
	return *o.InstallContainerRuntime
}

// GetInstallContainerRuntimeOk returns a tuple with the InstallContainerRuntime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutComputeServers) GetInstallContainerRuntimeOk() (*bool, bool) {
	if o == nil || o.InstallContainerRuntime == nil {
		return nil, false
	}
	return o.InstallContainerRuntime, true
}

// HasInstallContainerRuntime returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasInstallContainerRuntime() bool {
	if o != nil && o.InstallContainerRuntime != nil {
		return true
	}

	return false
}

// SetInstallContainerRuntime gets a reference to the given bool and assigns it to the InstallContainerRuntime field.
func (o *ClusterLayoutComputeServers) SetInstallContainerRuntime(v bool) {
	o.InstallContainerRuntime = &v
}

// GetInstallStorageRuntime returns the InstallStorageRuntime field value if set, zero value otherwise.
func (o *ClusterLayoutComputeServers) GetInstallStorageRuntime() bool {
	if o == nil || o.InstallStorageRuntime == nil {
		var ret bool
		return ret
	}
	return *o.InstallStorageRuntime
}

// GetInstallStorageRuntimeOk returns a tuple with the InstallStorageRuntime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutComputeServers) GetInstallStorageRuntimeOk() (*bool, bool) {
	if o == nil || o.InstallStorageRuntime == nil {
		return nil, false
	}
	return o.InstallStorageRuntime, true
}

// HasInstallStorageRuntime returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasInstallStorageRuntime() bool {
	if o != nil && o.InstallStorageRuntime != nil {
		return true
	}

	return false
}

// SetInstallStorageRuntime gets a reference to the given bool and assigns it to the InstallStorageRuntime field.
func (o *ClusterLayoutComputeServers) SetInstallStorageRuntime(v bool) {
	o.InstallStorageRuntime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClusterLayoutComputeServers) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutComputeServers) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClusterLayoutComputeServers) SetName(v string) {
	o.Name = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ClusterLayoutComputeServers) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutComputeServers) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ClusterLayoutComputeServers) SetCode(v string) {
	o.Code = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ClusterLayoutComputeServers) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutComputeServers) GetCategoryOk() (*string, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *ClusterLayoutComputeServers) SetCategory(v string) {
	o.Category = &v
}

// GetConfig returns the Config field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterLayoutComputeServers) GetConfig() string {
	if o == nil || o.Config.Get() == nil {
		var ret string
		return ret
	}
	return *o.Config.Get()
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterLayoutComputeServers) GetConfigOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Config.Get(), o.Config.IsSet()
}

// HasConfig returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasConfig() bool {
	if o != nil && o.Config.IsSet() {
		return true
	}

	return false
}

// SetConfig gets a reference to the given NullableString and assigns it to the Config field.
func (o *ClusterLayoutComputeServers) SetConfig(v string) {
	o.Config.Set(&v)
}
// SetConfigNil sets the value for Config to be an explicit nil
func (o *ClusterLayoutComputeServers) SetConfigNil() {
	o.Config.Set(nil)
}

// UnsetConfig ensures that no value is present for Config, not even an explicit nil
func (o *ClusterLayoutComputeServers) UnsetConfig() {
	o.Config.Unset()
}

// GetContainerType returns the ContainerType field value if set, zero value otherwise.
func (o *ClusterLayoutComputeServers) GetContainerType() ClusterLayoutContainerType {
	if o == nil || o.ContainerType == nil {
		var ret ClusterLayoutContainerType
		return ret
	}
	return *o.ContainerType
}

// GetContainerTypeOk returns a tuple with the ContainerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutComputeServers) GetContainerTypeOk() (*ClusterLayoutContainerType, bool) {
	if o == nil || o.ContainerType == nil {
		return nil, false
	}
	return o.ContainerType, true
}

// HasContainerType returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasContainerType() bool {
	if o != nil && o.ContainerType != nil {
		return true
	}

	return false
}

// SetContainerType gets a reference to the given ClusterLayoutContainerType and assigns it to the ContainerType field.
func (o *ClusterLayoutComputeServers) SetContainerType(v ClusterLayoutContainerType) {
	o.ContainerType = &v
}

// GetComputeServerType returns the ComputeServerType field value if set, zero value otherwise.
func (o *ClusterLayoutComputeServers) GetComputeServerType() ClusterLayoutComputeServerType {
	if o == nil || o.ComputeServerType == nil {
		var ret ClusterLayoutComputeServerType
		return ret
	}
	return *o.ComputeServerType
}

// GetComputeServerTypeOk returns a tuple with the ComputeServerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutComputeServers) GetComputeServerTypeOk() (*ClusterLayoutComputeServerType, bool) {
	if o == nil || o.ComputeServerType == nil {
		return nil, false
	}
	return o.ComputeServerType, true
}

// HasComputeServerType returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasComputeServerType() bool {
	if o != nil && o.ComputeServerType != nil {
		return true
	}

	return false
}

// SetComputeServerType gets a reference to the given ClusterLayoutComputeServerType and assigns it to the ComputeServerType field.
func (o *ClusterLayoutComputeServers) SetComputeServerType(v ClusterLayoutComputeServerType) {
	o.ComputeServerType = &v
}

// GetProvisionService returns the ProvisionService field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterLayoutComputeServers) GetProvisionService() string {
	if o == nil || o.ProvisionService.Get() == nil {
		var ret string
		return ret
	}
	return *o.ProvisionService.Get()
}

// GetProvisionServiceOk returns a tuple with the ProvisionService field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterLayoutComputeServers) GetProvisionServiceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ProvisionService.Get(), o.ProvisionService.IsSet()
}

// HasProvisionService returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasProvisionService() bool {
	if o != nil && o.ProvisionService.IsSet() {
		return true
	}

	return false
}

// SetProvisionService gets a reference to the given NullableString and assigns it to the ProvisionService field.
func (o *ClusterLayoutComputeServers) SetProvisionService(v string) {
	o.ProvisionService.Set(&v)
}
// SetProvisionServiceNil sets the value for ProvisionService to be an explicit nil
func (o *ClusterLayoutComputeServers) SetProvisionServiceNil() {
	o.ProvisionService.Set(nil)
}

// UnsetProvisionService ensures that no value is present for ProvisionService, not even an explicit nil
func (o *ClusterLayoutComputeServers) UnsetProvisionService() {
	o.ProvisionService.Unset()
}

// GetPlanCategory returns the PlanCategory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterLayoutComputeServers) GetPlanCategory() string {
	if o == nil || o.PlanCategory.Get() == nil {
		var ret string
		return ret
	}
	return *o.PlanCategory.Get()
}

// GetPlanCategoryOk returns a tuple with the PlanCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterLayoutComputeServers) GetPlanCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PlanCategory.Get(), o.PlanCategory.IsSet()
}

// HasPlanCategory returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasPlanCategory() bool {
	if o != nil && o.PlanCategory.IsSet() {
		return true
	}

	return false
}

// SetPlanCategory gets a reference to the given NullableString and assigns it to the PlanCategory field.
func (o *ClusterLayoutComputeServers) SetPlanCategory(v string) {
	o.PlanCategory.Set(&v)
}
// SetPlanCategoryNil sets the value for PlanCategory to be an explicit nil
func (o *ClusterLayoutComputeServers) SetPlanCategoryNil() {
	o.PlanCategory.Set(nil)
}

// UnsetPlanCategory ensures that no value is present for PlanCategory, not even an explicit nil
func (o *ClusterLayoutComputeServers) UnsetPlanCategory() {
	o.PlanCategory.Unset()
}

// GetNamePrefix returns the NamePrefix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterLayoutComputeServers) GetNamePrefix() string {
	if o == nil || o.NamePrefix.Get() == nil {
		var ret string
		return ret
	}
	return *o.NamePrefix.Get()
}

// GetNamePrefixOk returns a tuple with the NamePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterLayoutComputeServers) GetNamePrefixOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NamePrefix.Get(), o.NamePrefix.IsSet()
}

// HasNamePrefix returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasNamePrefix() bool {
	if o != nil && o.NamePrefix.IsSet() {
		return true
	}

	return false
}

// SetNamePrefix gets a reference to the given NullableString and assigns it to the NamePrefix field.
func (o *ClusterLayoutComputeServers) SetNamePrefix(v string) {
	o.NamePrefix.Set(&v)
}
// SetNamePrefixNil sets the value for NamePrefix to be an explicit nil
func (o *ClusterLayoutComputeServers) SetNamePrefixNil() {
	o.NamePrefix.Set(nil)
}

// UnsetNamePrefix ensures that no value is present for NamePrefix, not even an explicit nil
func (o *ClusterLayoutComputeServers) UnsetNamePrefix() {
	o.NamePrefix.Unset()
}

// GetNameSuffix returns the NameSuffix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterLayoutComputeServers) GetNameSuffix() string {
	if o == nil || o.NameSuffix.Get() == nil {
		var ret string
		return ret
	}
	return *o.NameSuffix.Get()
}

// GetNameSuffixOk returns a tuple with the NameSuffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterLayoutComputeServers) GetNameSuffixOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NameSuffix.Get(), o.NameSuffix.IsSet()
}

// HasNameSuffix returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasNameSuffix() bool {
	if o != nil && o.NameSuffix.IsSet() {
		return true
	}

	return false
}

// SetNameSuffix gets a reference to the given NullableString and assigns it to the NameSuffix field.
func (o *ClusterLayoutComputeServers) SetNameSuffix(v string) {
	o.NameSuffix.Set(&v)
}
// SetNameSuffixNil sets the value for NameSuffix to be an explicit nil
func (o *ClusterLayoutComputeServers) SetNameSuffixNil() {
	o.NameSuffix.Set(nil)
}

// UnsetNameSuffix ensures that no value is present for NameSuffix, not even an explicit nil
func (o *ClusterLayoutComputeServers) UnsetNameSuffix() {
	o.NameSuffix.Unset()
}

// GetForceNameIndex returns the ForceNameIndex field value if set, zero value otherwise.
func (o *ClusterLayoutComputeServers) GetForceNameIndex() bool {
	if o == nil || o.ForceNameIndex == nil {
		var ret bool
		return ret
	}
	return *o.ForceNameIndex
}

// GetForceNameIndexOk returns a tuple with the ForceNameIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutComputeServers) GetForceNameIndexOk() (*bool, bool) {
	if o == nil || o.ForceNameIndex == nil {
		return nil, false
	}
	return o.ForceNameIndex, true
}

// HasForceNameIndex returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasForceNameIndex() bool {
	if o != nil && o.ForceNameIndex != nil {
		return true
	}

	return false
}

// SetForceNameIndex gets a reference to the given bool and assigns it to the ForceNameIndex field.
func (o *ClusterLayoutComputeServers) SetForceNameIndex(v bool) {
	o.ForceNameIndex = &v
}

// GetLoadBalance returns the LoadBalance field value if set, zero value otherwise.
func (o *ClusterLayoutComputeServers) GetLoadBalance() bool {
	if o == nil || o.LoadBalance == nil {
		var ret bool
		return ret
	}
	return *o.LoadBalance
}

// GetLoadBalanceOk returns a tuple with the LoadBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterLayoutComputeServers) GetLoadBalanceOk() (*bool, bool) {
	if o == nil || o.LoadBalance == nil {
		return nil, false
	}
	return o.LoadBalance, true
}

// HasLoadBalance returns a boolean if a field has been set.
func (o *ClusterLayoutComputeServers) HasLoadBalance() bool {
	if o != nil && o.LoadBalance != nil {
		return true
	}

	return false
}

// SetLoadBalance gets a reference to the given bool and assigns it to the LoadBalance field.
func (o *ClusterLayoutComputeServers) SetLoadBalance(v bool) {
	o.LoadBalance = &v
}

func (o ClusterLayoutComputeServers) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.PriorityOrder != nil {
		toSerialize["priorityOrder"] = o.PriorityOrder
	}
	if o.NodeCount != nil {
		toSerialize["nodeCount"] = o.NodeCount
	}
	if o.NodeType != nil {
		toSerialize["nodeType"] = o.NodeType
	}
	if o.MinNodeCount != nil {
		toSerialize["minNodeCount"] = o.MinNodeCount
	}
	if o.MaxNodeCount.IsSet() {
		toSerialize["maxNodeCount"] = o.MaxNodeCount.Get()
	}
	if o.DynamicCount != nil {
		toSerialize["dynamicCount"] = o.DynamicCount
	}
	if o.InstallContainerRuntime != nil {
		toSerialize["installContainerRuntime"] = o.InstallContainerRuntime
	}
	if o.InstallStorageRuntime != nil {
		toSerialize["installStorageRuntime"] = o.InstallStorageRuntime
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.Config.IsSet() {
		toSerialize["config"] = o.Config.Get()
	}
	if o.ContainerType != nil {
		toSerialize["containerType"] = o.ContainerType
	}
	if o.ComputeServerType != nil {
		toSerialize["computeServerType"] = o.ComputeServerType
	}
	if o.ProvisionService.IsSet() {
		toSerialize["provisionService"] = o.ProvisionService.Get()
	}
	if o.PlanCategory.IsSet() {
		toSerialize["planCategory"] = o.PlanCategory.Get()
	}
	if o.NamePrefix.IsSet() {
		toSerialize["namePrefix"] = o.NamePrefix.Get()
	}
	if o.NameSuffix.IsSet() {
		toSerialize["nameSuffix"] = o.NameSuffix.Get()
	}
	if o.ForceNameIndex != nil {
		toSerialize["forceNameIndex"] = o.ForceNameIndex
	}
	if o.LoadBalance != nil {
		toSerialize["loadBalance"] = o.LoadBalance
	}
	return json.Marshal(toSerialize)
}

type NullableClusterLayoutComputeServers struct {
	value *ClusterLayoutComputeServers
	isSet bool
}

func (v NullableClusterLayoutComputeServers) Get() *ClusterLayoutComputeServers {
	return v.value
}

func (v *NullableClusterLayoutComputeServers) Set(val *ClusterLayoutComputeServers) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterLayoutComputeServers) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterLayoutComputeServers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterLayoutComputeServers(val *ClusterLayoutComputeServers) *NullableClusterLayoutComputeServers {
	return &NullableClusterLayoutComputeServers{value: val, isSet: true}
}

func (v NullableClusterLayoutComputeServers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterLayoutComputeServers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


