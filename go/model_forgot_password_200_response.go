/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ForgotPassword200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ForgotPassword200Response{}

// ForgotPassword200Response struct for ForgotPassword200Response
type ForgotPassword200Response struct {
	Success *bool `json:"success,omitempty"`
	Msg *string `json:"msg,omitempty"`
}

// NewForgotPassword200Response instantiates a new ForgotPassword200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewForgotPassword200Response() *ForgotPassword200Response {
	this := ForgotPassword200Response{}
	return &this
}

// NewForgotPassword200ResponseWithDefaults instantiates a new ForgotPassword200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewForgotPassword200ResponseWithDefaults() *ForgotPassword200Response {
	this := ForgotPassword200Response{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *ForgotPassword200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ForgotPassword200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *ForgotPassword200Response) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *ForgotPassword200Response) SetSuccess(v bool) {
	o.Success = &v
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *ForgotPassword200Response) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ForgotPassword200Response) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *ForgotPassword200Response) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *ForgotPassword200Response) SetMsg(v string) {
	o.Msg = &v
}

func (o ForgotPassword200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ForgotPassword200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	return toSerialize, nil
}

type NullableForgotPassword200Response struct {
	value *ForgotPassword200Response
	isSet bool
}

func (v NullableForgotPassword200Response) Get() *ForgotPassword200Response {
	return v.value
}

func (v *NullableForgotPassword200Response) Set(val *ForgotPassword200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableForgotPassword200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableForgotPassword200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableForgotPassword200Response(val *ForgotPassword200Response) *NullableForgotPassword200Response {
	return &NullableForgotPassword200Response{value: val, isSet: true}
}

func (v NullableForgotPassword200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableForgotPassword200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


