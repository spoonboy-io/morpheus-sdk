/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GuidanceStatsSeverity struct for GuidanceStatsSeverity
type GuidanceStatsSeverity struct {
	Low *int64 `json:"low,omitempty"`
	Info *int64 `json:"info,omitempty"`
	Warning *int64 `json:"warning,omitempty"`
	Critical *int64 `json:"critical,omitempty"`
}

// NewGuidanceStatsSeverity instantiates a new GuidanceStatsSeverity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGuidanceStatsSeverity() *GuidanceStatsSeverity {
	this := GuidanceStatsSeverity{}
	return &this
}

// NewGuidanceStatsSeverityWithDefaults instantiates a new GuidanceStatsSeverity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGuidanceStatsSeverityWithDefaults() *GuidanceStatsSeverity {
	this := GuidanceStatsSeverity{}
	return &this
}

// GetLow returns the Low field value if set, zero value otherwise.
func (o *GuidanceStatsSeverity) GetLow() int64 {
	if o == nil || o.Low == nil {
		var ret int64
		return ret
	}
	return *o.Low
}

// GetLowOk returns a tuple with the Low field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceStatsSeverity) GetLowOk() (*int64, bool) {
	if o == nil || o.Low == nil {
		return nil, false
	}
	return o.Low, true
}

// HasLow returns a boolean if a field has been set.
func (o *GuidanceStatsSeverity) HasLow() bool {
	if o != nil && o.Low != nil {
		return true
	}

	return false
}

// SetLow gets a reference to the given int64 and assigns it to the Low field.
func (o *GuidanceStatsSeverity) SetLow(v int64) {
	o.Low = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *GuidanceStatsSeverity) GetInfo() int64 {
	if o == nil || o.Info == nil {
		var ret int64
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceStatsSeverity) GetInfoOk() (*int64, bool) {
	if o == nil || o.Info == nil {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *GuidanceStatsSeverity) HasInfo() bool {
	if o != nil && o.Info != nil {
		return true
	}

	return false
}

// SetInfo gets a reference to the given int64 and assigns it to the Info field.
func (o *GuidanceStatsSeverity) SetInfo(v int64) {
	o.Info = &v
}

// GetWarning returns the Warning field value if set, zero value otherwise.
func (o *GuidanceStatsSeverity) GetWarning() int64 {
	if o == nil || o.Warning == nil {
		var ret int64
		return ret
	}
	return *o.Warning
}

// GetWarningOk returns a tuple with the Warning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceStatsSeverity) GetWarningOk() (*int64, bool) {
	if o == nil || o.Warning == nil {
		return nil, false
	}
	return o.Warning, true
}

// HasWarning returns a boolean if a field has been set.
func (o *GuidanceStatsSeverity) HasWarning() bool {
	if o != nil && o.Warning != nil {
		return true
	}

	return false
}

// SetWarning gets a reference to the given int64 and assigns it to the Warning field.
func (o *GuidanceStatsSeverity) SetWarning(v int64) {
	o.Warning = &v
}

// GetCritical returns the Critical field value if set, zero value otherwise.
func (o *GuidanceStatsSeverity) GetCritical() int64 {
	if o == nil || o.Critical == nil {
		var ret int64
		return ret
	}
	return *o.Critical
}

// GetCriticalOk returns a tuple with the Critical field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceStatsSeverity) GetCriticalOk() (*int64, bool) {
	if o == nil || o.Critical == nil {
		return nil, false
	}
	return o.Critical, true
}

// HasCritical returns a boolean if a field has been set.
func (o *GuidanceStatsSeverity) HasCritical() bool {
	if o != nil && o.Critical != nil {
		return true
	}

	return false
}

// SetCritical gets a reference to the given int64 and assigns it to the Critical field.
func (o *GuidanceStatsSeverity) SetCritical(v int64) {
	o.Critical = &v
}

func (o GuidanceStatsSeverity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Low != nil {
		toSerialize["low"] = o.Low
	}
	if o.Info != nil {
		toSerialize["info"] = o.Info
	}
	if o.Warning != nil {
		toSerialize["warning"] = o.Warning
	}
	if o.Critical != nil {
		toSerialize["critical"] = o.Critical
	}
	return json.Marshal(toSerialize)
}

type NullableGuidanceStatsSeverity struct {
	value *GuidanceStatsSeverity
	isSet bool
}

func (v NullableGuidanceStatsSeverity) Get() *GuidanceStatsSeverity {
	return v.value
}

func (v *NullableGuidanceStatsSeverity) Set(val *GuidanceStatsSeverity) {
	v.value = val
	v.isSet = true
}

func (v NullableGuidanceStatsSeverity) IsSet() bool {
	return v.isSet
}

func (v *NullableGuidanceStatsSeverity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGuidanceStatsSeverity(val *GuidanceStatsSeverity) *NullableGuidanceStatsSeverity {
	return &NullableGuidanceStatsSeverity{value: val, isSet: true}
}

func (v NullableGuidanceStatsSeverity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGuidanceStatsSeverity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


