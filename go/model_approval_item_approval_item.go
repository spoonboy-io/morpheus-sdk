/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ApprovalItemApprovalItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApprovalItemApprovalItem{}

// ApprovalItemApprovalItem struct for ApprovalItemApprovalItem
type ApprovalItemApprovalItem struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	ExternalId NullableString `json:"externalId,omitempty"`
	ExternalName NullableString `json:"externalName,omitempty"`
	InternalId NullableString `json:"internalId,omitempty"`
	ApprovedBy *string `json:"approvedBy,omitempty"`
	DeniedBy NullableString `json:"deniedBy,omitempty"`
	Status *string `json:"status,omitempty"`
	ErrorMessage NullableString `json:"errorMessage,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	DateApproved *time.Time `json:"dateApproved,omitempty"`
	DateDenied NullableTime `json:"dateDenied,omitempty"`
	Approval *UpdateBlueprintPermissionsRequestResourcePermissionSitesInner `json:"approval,omitempty"`
	Reference *ApprovalItemApprovalItemReference `json:"reference,omitempty"`
}

// NewApprovalItemApprovalItem instantiates a new ApprovalItemApprovalItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApprovalItemApprovalItem() *ApprovalItemApprovalItem {
	this := ApprovalItemApprovalItem{}
	return &this
}

// NewApprovalItemApprovalItemWithDefaults instantiates a new ApprovalItemApprovalItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApprovalItemApprovalItemWithDefaults() *ApprovalItemApprovalItem {
	this := ApprovalItemApprovalItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApprovalItemApprovalItem) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalItemApprovalItem) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApprovalItemApprovalItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ApprovalItemApprovalItem) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApprovalItemApprovalItem) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalItemApprovalItem) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApprovalItemApprovalItem) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApprovalItemApprovalItem) SetName(v string) {
	o.Name = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApprovalItemApprovalItem) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApprovalItemApprovalItem) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *ApprovalItemApprovalItem) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *ApprovalItemApprovalItem) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}
// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *ApprovalItemApprovalItem) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *ApprovalItemApprovalItem) UnsetExternalId() {
	o.ExternalId.Unset()
}

// GetExternalName returns the ExternalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApprovalItemApprovalItem) GetExternalName() string {
	if o == nil || IsNil(o.ExternalName.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalName.Get()
}

// GetExternalNameOk returns a tuple with the ExternalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApprovalItemApprovalItem) GetExternalNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalName.Get(), o.ExternalName.IsSet()
}

// HasExternalName returns a boolean if a field has been set.
func (o *ApprovalItemApprovalItem) HasExternalName() bool {
	if o != nil && o.ExternalName.IsSet() {
		return true
	}

	return false
}

// SetExternalName gets a reference to the given NullableString and assigns it to the ExternalName field.
func (o *ApprovalItemApprovalItem) SetExternalName(v string) {
	o.ExternalName.Set(&v)
}
// SetExternalNameNil sets the value for ExternalName to be an explicit nil
func (o *ApprovalItemApprovalItem) SetExternalNameNil() {
	o.ExternalName.Set(nil)
}

// UnsetExternalName ensures that no value is present for ExternalName, not even an explicit nil
func (o *ApprovalItemApprovalItem) UnsetExternalName() {
	o.ExternalName.Unset()
}

// GetInternalId returns the InternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApprovalItemApprovalItem) GetInternalId() string {
	if o == nil || IsNil(o.InternalId.Get()) {
		var ret string
		return ret
	}
	return *o.InternalId.Get()
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApprovalItemApprovalItem) GetInternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InternalId.Get(), o.InternalId.IsSet()
}

// HasInternalId returns a boolean if a field has been set.
func (o *ApprovalItemApprovalItem) HasInternalId() bool {
	if o != nil && o.InternalId.IsSet() {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given NullableString and assigns it to the InternalId field.
func (o *ApprovalItemApprovalItem) SetInternalId(v string) {
	o.InternalId.Set(&v)
}
// SetInternalIdNil sets the value for InternalId to be an explicit nil
func (o *ApprovalItemApprovalItem) SetInternalIdNil() {
	o.InternalId.Set(nil)
}

// UnsetInternalId ensures that no value is present for InternalId, not even an explicit nil
func (o *ApprovalItemApprovalItem) UnsetInternalId() {
	o.InternalId.Unset()
}

// GetApprovedBy returns the ApprovedBy field value if set, zero value otherwise.
func (o *ApprovalItemApprovalItem) GetApprovedBy() string {
	if o == nil || IsNil(o.ApprovedBy) {
		var ret string
		return ret
	}
	return *o.ApprovedBy
}

// GetApprovedByOk returns a tuple with the ApprovedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalItemApprovalItem) GetApprovedByOk() (*string, bool) {
	if o == nil || IsNil(o.ApprovedBy) {
		return nil, false
	}
	return o.ApprovedBy, true
}

// HasApprovedBy returns a boolean if a field has been set.
func (o *ApprovalItemApprovalItem) HasApprovedBy() bool {
	if o != nil && !IsNil(o.ApprovedBy) {
		return true
	}

	return false
}

// SetApprovedBy gets a reference to the given string and assigns it to the ApprovedBy field.
func (o *ApprovalItemApprovalItem) SetApprovedBy(v string) {
	o.ApprovedBy = &v
}

// GetDeniedBy returns the DeniedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApprovalItemApprovalItem) GetDeniedBy() string {
	if o == nil || IsNil(o.DeniedBy.Get()) {
		var ret string
		return ret
	}
	return *o.DeniedBy.Get()
}

// GetDeniedByOk returns a tuple with the DeniedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApprovalItemApprovalItem) GetDeniedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeniedBy.Get(), o.DeniedBy.IsSet()
}

// HasDeniedBy returns a boolean if a field has been set.
func (o *ApprovalItemApprovalItem) HasDeniedBy() bool {
	if o != nil && o.DeniedBy.IsSet() {
		return true
	}

	return false
}

// SetDeniedBy gets a reference to the given NullableString and assigns it to the DeniedBy field.
func (o *ApprovalItemApprovalItem) SetDeniedBy(v string) {
	o.DeniedBy.Set(&v)
}
// SetDeniedByNil sets the value for DeniedBy to be an explicit nil
func (o *ApprovalItemApprovalItem) SetDeniedByNil() {
	o.DeniedBy.Set(nil)
}

// UnsetDeniedBy ensures that no value is present for DeniedBy, not even an explicit nil
func (o *ApprovalItemApprovalItem) UnsetDeniedBy() {
	o.DeniedBy.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApprovalItemApprovalItem) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalItemApprovalItem) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApprovalItemApprovalItem) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ApprovalItemApprovalItem) SetStatus(v string) {
	o.Status = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApprovalItemApprovalItem) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApprovalItemApprovalItem) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *ApprovalItemApprovalItem) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given NullableString and assigns it to the ErrorMessage field.
func (o *ApprovalItemApprovalItem) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}
// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *ApprovalItemApprovalItem) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *ApprovalItemApprovalItem) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *ApprovalItemApprovalItem) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalItemApprovalItem) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *ApprovalItemApprovalItem) HasDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *ApprovalItemApprovalItem) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ApprovalItemApprovalItem) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalItemApprovalItem) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *ApprovalItemApprovalItem) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *ApprovalItemApprovalItem) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetDateApproved returns the DateApproved field value if set, zero value otherwise.
func (o *ApprovalItemApprovalItem) GetDateApproved() time.Time {
	if o == nil || IsNil(o.DateApproved) {
		var ret time.Time
		return ret
	}
	return *o.DateApproved
}

// GetDateApprovedOk returns a tuple with the DateApproved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalItemApprovalItem) GetDateApprovedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateApproved) {
		return nil, false
	}
	return o.DateApproved, true
}

// HasDateApproved returns a boolean if a field has been set.
func (o *ApprovalItemApprovalItem) HasDateApproved() bool {
	if o != nil && !IsNil(o.DateApproved) {
		return true
	}

	return false
}

// SetDateApproved gets a reference to the given time.Time and assigns it to the DateApproved field.
func (o *ApprovalItemApprovalItem) SetDateApproved(v time.Time) {
	o.DateApproved = &v
}

// GetDateDenied returns the DateDenied field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApprovalItemApprovalItem) GetDateDenied() time.Time {
	if o == nil || IsNil(o.DateDenied.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DateDenied.Get()
}

// GetDateDeniedOk returns a tuple with the DateDenied field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApprovalItemApprovalItem) GetDateDeniedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateDenied.Get(), o.DateDenied.IsSet()
}

// HasDateDenied returns a boolean if a field has been set.
func (o *ApprovalItemApprovalItem) HasDateDenied() bool {
	if o != nil && o.DateDenied.IsSet() {
		return true
	}

	return false
}

// SetDateDenied gets a reference to the given NullableTime and assigns it to the DateDenied field.
func (o *ApprovalItemApprovalItem) SetDateDenied(v time.Time) {
	o.DateDenied.Set(&v)
}
// SetDateDeniedNil sets the value for DateDenied to be an explicit nil
func (o *ApprovalItemApprovalItem) SetDateDeniedNil() {
	o.DateDenied.Set(nil)
}

// UnsetDateDenied ensures that no value is present for DateDenied, not even an explicit nil
func (o *ApprovalItemApprovalItem) UnsetDateDenied() {
	o.DateDenied.Unset()
}

// GetApproval returns the Approval field value if set, zero value otherwise.
func (o *ApprovalItemApprovalItem) GetApproval() UpdateBlueprintPermissionsRequestResourcePermissionSitesInner {
	if o == nil || IsNil(o.Approval) {
		var ret UpdateBlueprintPermissionsRequestResourcePermissionSitesInner
		return ret
	}
	return *o.Approval
}

// GetApprovalOk returns a tuple with the Approval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalItemApprovalItem) GetApprovalOk() (*UpdateBlueprintPermissionsRequestResourcePermissionSitesInner, bool) {
	if o == nil || IsNil(o.Approval) {
		return nil, false
	}
	return o.Approval, true
}

// HasApproval returns a boolean if a field has been set.
func (o *ApprovalItemApprovalItem) HasApproval() bool {
	if o != nil && !IsNil(o.Approval) {
		return true
	}

	return false
}

// SetApproval gets a reference to the given UpdateBlueprintPermissionsRequestResourcePermissionSitesInner and assigns it to the Approval field.
func (o *ApprovalItemApprovalItem) SetApproval(v UpdateBlueprintPermissionsRequestResourcePermissionSitesInner) {
	o.Approval = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *ApprovalItemApprovalItem) GetReference() ApprovalItemApprovalItemReference {
	if o == nil || IsNil(o.Reference) {
		var ret ApprovalItemApprovalItemReference
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalItemApprovalItem) GetReferenceOk() (*ApprovalItemApprovalItemReference, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *ApprovalItemApprovalItem) HasReference() bool {
	if o != nil && !IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given ApprovalItemApprovalItemReference and assigns it to the Reference field.
func (o *ApprovalItemApprovalItem) SetReference(v ApprovalItemApprovalItemReference) {
	o.Reference = &v
}

func (o ApprovalItemApprovalItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApprovalItemApprovalItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.ExternalId.IsSet() {
		toSerialize["externalId"] = o.ExternalId.Get()
	}
	if o.ExternalName.IsSet() {
		toSerialize["externalName"] = o.ExternalName.Get()
	}
	if o.InternalId.IsSet() {
		toSerialize["internalId"] = o.InternalId.Get()
	}
	if !IsNil(o.ApprovedBy) {
		toSerialize["approvedBy"] = o.ApprovedBy
	}
	if o.DeniedBy.IsSet() {
		toSerialize["deniedBy"] = o.DeniedBy.Get()
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.ErrorMessage.IsSet() {
		toSerialize["errorMessage"] = o.ErrorMessage.Get()
	}
	if !IsNil(o.DateCreated) {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.DateApproved) {
		toSerialize["dateApproved"] = o.DateApproved
	}
	if o.DateDenied.IsSet() {
		toSerialize["dateDenied"] = o.DateDenied.Get()
	}
	if !IsNil(o.Approval) {
		toSerialize["approval"] = o.Approval
	}
	if !IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	return toSerialize, nil
}

type NullableApprovalItemApprovalItem struct {
	value *ApprovalItemApprovalItem
	isSet bool
}

func (v NullableApprovalItemApprovalItem) Get() *ApprovalItemApprovalItem {
	return v.value
}

func (v *NullableApprovalItemApprovalItem) Set(val *ApprovalItemApprovalItem) {
	v.value = val
	v.isSet = true
}

func (v NullableApprovalItemApprovalItem) IsSet() bool {
	return v.isSet
}

func (v *NullableApprovalItemApprovalItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApprovalItemApprovalItem(val *ApprovalItemApprovalItem) *NullableApprovalItemApprovalItem {
	return &NullableApprovalItemApprovalItem{value: val, isSet: true}
}

func (v NullableApprovalItemApprovalItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApprovalItemApprovalItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


