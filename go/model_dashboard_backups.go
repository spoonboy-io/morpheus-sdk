/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DashboardBackups struct for DashboardBackups
type DashboardBackups struct {
	AccountStats *DashboardBackupsAccountStats `json:"accountStats,omitempty"`
}

// NewDashboardBackups instantiates a new DashboardBackups object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardBackups() *DashboardBackups {
	this := DashboardBackups{}
	return &this
}

// NewDashboardBackupsWithDefaults instantiates a new DashboardBackups object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardBackupsWithDefaults() *DashboardBackups {
	this := DashboardBackups{}
	return &this
}

// GetAccountStats returns the AccountStats field value if set, zero value otherwise.
func (o *DashboardBackups) GetAccountStats() DashboardBackupsAccountStats {
	if o == nil || o.AccountStats == nil {
		var ret DashboardBackupsAccountStats
		return ret
	}
	return *o.AccountStats
}

// GetAccountStatsOk returns a tuple with the AccountStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardBackups) GetAccountStatsOk() (*DashboardBackupsAccountStats, bool) {
	if o == nil || o.AccountStats == nil {
		return nil, false
	}
	return o.AccountStats, true
}

// HasAccountStats returns a boolean if a field has been set.
func (o *DashboardBackups) HasAccountStats() bool {
	if o != nil && o.AccountStats != nil {
		return true
	}

	return false
}

// SetAccountStats gets a reference to the given DashboardBackupsAccountStats and assigns it to the AccountStats field.
func (o *DashboardBackups) SetAccountStats(v DashboardBackupsAccountStats) {
	o.AccountStats = &v
}

func (o DashboardBackups) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountStats != nil {
		toSerialize["accountStats"] = o.AccountStats
	}
	return json.Marshal(toSerialize)
}

type NullableDashboardBackups struct {
	value *DashboardBackups
	isSet bool
}

func (v NullableDashboardBackups) Get() *DashboardBackups {
	return v.value
}

func (v *NullableDashboardBackups) Set(val *DashboardBackups) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardBackups) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardBackups) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardBackups(val *DashboardBackups) *NullableDashboardBackups {
	return &NullableDashboardBackups{value: val, isSet: true}
}

func (v NullableDashboardBackups) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardBackups) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


