/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetworkPoolServerCreateBluecatConfig struct for NetworkPoolServerCreateBluecatConfig
type NetworkPoolServerCreateBluecatConfig struct {
	// Inventory Existing
	InventoryExisting NullableString `json:"inventoryExisting,omitempty"`
}

// NewNetworkPoolServerCreateBluecatConfig instantiates a new NetworkPoolServerCreateBluecatConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkPoolServerCreateBluecatConfig() *NetworkPoolServerCreateBluecatConfig {
	this := NetworkPoolServerCreateBluecatConfig{}
	var inventoryExisting INVENTORY_EXISTING = "off"
	this.InventoryExisting = *NewNullableString(&inventoryExisting)
	return &this
}

// NewNetworkPoolServerCreateBluecatConfigWithDefaults instantiates a new NetworkPoolServerCreateBluecatConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkPoolServerCreateBluecatConfigWithDefaults() *NetworkPoolServerCreateBluecatConfig {
	this := NetworkPoolServerCreateBluecatConfig{}
	var inventoryExisting INVENTORY_EXISTING = "off"
	this.InventoryExisting = *NewNullableString(&inventoryExisting)
	return &this
}

// GetInventoryExisting returns the InventoryExisting field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkPoolServerCreateBluecatConfig) GetInventoryExisting() string {
	if o == nil || o.InventoryExisting.Get() == nil {
		var ret string
		return ret
	}
	return *o.InventoryExisting.Get()
}

// GetInventoryExistingOk returns a tuple with the InventoryExisting field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkPoolServerCreateBluecatConfig) GetInventoryExistingOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InventoryExisting.Get(), o.InventoryExisting.IsSet()
}

// HasInventoryExisting returns a boolean if a field has been set.
func (o *NetworkPoolServerCreateBluecatConfig) HasInventoryExisting() bool {
	if o != nil && o.InventoryExisting.IsSet() {
		return true
	}

	return false
}

// SetInventoryExisting gets a reference to the given NullableString and assigns it to the InventoryExisting field.
func (o *NetworkPoolServerCreateBluecatConfig) SetInventoryExisting(v string) {
	o.InventoryExisting.Set(&v)
}
// SetInventoryExistingNil sets the value for InventoryExisting to be an explicit nil
func (o *NetworkPoolServerCreateBluecatConfig) SetInventoryExistingNil() {
	o.InventoryExisting.Set(nil)
}

// UnsetInventoryExisting ensures that no value is present for InventoryExisting, not even an explicit nil
func (o *NetworkPoolServerCreateBluecatConfig) UnsetInventoryExisting() {
	o.InventoryExisting.Unset()
}

func (o NetworkPoolServerCreateBluecatConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InventoryExisting.IsSet() {
		toSerialize["inventoryExisting"] = o.InventoryExisting.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkPoolServerCreateBluecatConfig struct {
	value *NetworkPoolServerCreateBluecatConfig
	isSet bool
}

func (v NullableNetworkPoolServerCreateBluecatConfig) Get() *NetworkPoolServerCreateBluecatConfig {
	return v.value
}

func (v *NullableNetworkPoolServerCreateBluecatConfig) Set(val *NetworkPoolServerCreateBluecatConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkPoolServerCreateBluecatConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkPoolServerCreateBluecatConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkPoolServerCreateBluecatConfig(val *NetworkPoolServerCreateBluecatConfig) *NullableNetworkPoolServerCreateBluecatConfig {
	return &NullableNetworkPoolServerCreateBluecatConfig{value: val, isSet: true}
}

func (v NullableNetworkPoolServerCreateBluecatConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkPoolServerCreateBluecatConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


