/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddArchiveBucket200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddArchiveBucket200Response{}

// AddArchiveBucket200Response struct for AddArchiveBucket200Response
type AddArchiveBucket200Response struct {
	Success *bool `json:"success,omitempty"`
	ArchiveBucket *ArchiveBucket `json:"archiveBucket,omitempty"`
}

// NewAddArchiveBucket200Response instantiates a new AddArchiveBucket200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddArchiveBucket200Response() *AddArchiveBucket200Response {
	this := AddArchiveBucket200Response{}
	return &this
}

// NewAddArchiveBucket200ResponseWithDefaults instantiates a new AddArchiveBucket200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddArchiveBucket200ResponseWithDefaults() *AddArchiveBucket200Response {
	this := AddArchiveBucket200Response{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddArchiveBucket200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddArchiveBucket200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *AddArchiveBucket200Response) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddArchiveBucket200Response) SetSuccess(v bool) {
	o.Success = &v
}

// GetArchiveBucket returns the ArchiveBucket field value if set, zero value otherwise.
func (o *AddArchiveBucket200Response) GetArchiveBucket() ArchiveBucket {
	if o == nil || IsNil(o.ArchiveBucket) {
		var ret ArchiveBucket
		return ret
	}
	return *o.ArchiveBucket
}

// GetArchiveBucketOk returns a tuple with the ArchiveBucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddArchiveBucket200Response) GetArchiveBucketOk() (*ArchiveBucket, bool) {
	if o == nil || IsNil(o.ArchiveBucket) {
		return nil, false
	}
	return o.ArchiveBucket, true
}

// HasArchiveBucket returns a boolean if a field has been set.
func (o *AddArchiveBucket200Response) HasArchiveBucket() bool {
	if o != nil && !IsNil(o.ArchiveBucket) {
		return true
	}

	return false
}

// SetArchiveBucket gets a reference to the given ArchiveBucket and assigns it to the ArchiveBucket field.
func (o *AddArchiveBucket200Response) SetArchiveBucket(v ArchiveBucket) {
	o.ArchiveBucket = &v
}

func (o AddArchiveBucket200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddArchiveBucket200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.ArchiveBucket) {
		toSerialize["archiveBucket"] = o.ArchiveBucket
	}
	return toSerialize, nil
}

type NullableAddArchiveBucket200Response struct {
	value *AddArchiveBucket200Response
	isSet bool
}

func (v NullableAddArchiveBucket200Response) Get() *AddArchiveBucket200Response {
	return v.value
}

func (v *NullableAddArchiveBucket200Response) Set(val *AddArchiveBucket200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddArchiveBucket200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddArchiveBucket200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddArchiveBucket200Response(val *AddArchiveBucket200Response) *NullableAddArchiveBucket200Response {
	return &NullableAddArchiveBucket200Response{value: val, isSet: true}
}

func (v NullableAddArchiveBucket200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddArchiveBucket200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


