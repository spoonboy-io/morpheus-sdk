/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Network struct for Network
type Network struct {
	// Network ID
	Id *int64 `json:"id,omitempty"`
	// Name
	Name *string `json:"name,omitempty"`
	// Network Display Name
	DisplayName *string `json:"displayName,omitempty"`
	Labels []string `json:"labels,omitempty"`
	Zone *NetworkZone `json:"zone,omitempty"`
	Type *NetworkType `json:"type,omitempty"`
	Owner *NetworkOwner `json:"owner,omitempty"`
	// Network Code
	Code NullableString `json:"code,omitempty"`
	Ipv4Enabled *bool `json:"ipv4Enabled,omitempty"`
	Ipv6Enabled *bool `json:"ipv6Enabled,omitempty"`
	// Network Category
	Category NullableString `json:"category,omitempty"`
	InterfaceName NullableString `json:"interfaceName,omitempty"`
	BridgeName NullableString `json:"bridgeName,omitempty"`
	BridgeInterface NullableString `json:"bridgeInterface,omitempty"`
	// Description
	Description NullableString `json:"description,omitempty"`
	ExternalId NullableString `json:"externalId,omitempty"`
	InternalId NullableString `json:"internalId,omitempty"`
	UniqueId NullableString `json:"uniqueId,omitempty"`
	ExternalType *string `json:"externalType,omitempty"`
	RefUrl NullableString `json:"refUrl,omitempty"`
	RefType *string `json:"refType,omitempty"`
	RefId *int64 `json:"refId,omitempty"`
	VlanId NullableInt64 `json:"vlanId,omitempty"`
	VswitchName NullableString `json:"vswitchName,omitempty"`
	DhcpServer *bool `json:"dhcpServer,omitempty"`
	DhcpIp NullableString `json:"dhcpIp,omitempty"`
	DhcpServerIPv6 *bool `json:"dhcpServerIPv6,omitempty"`
	// Network Gateway
	Gateway NullableString `json:"gateway,omitempty"`
	Netmask NullableString `json:"netmask,omitempty"`
	Broadcast NullableString `json:"broadcast,omitempty"`
	SubnetAddress NullableString `json:"subnetAddress,omitempty"`
	// Primary DNS Server
	DnsPrimary NullableString `json:"dnsPrimary,omitempty"`
	// Secondary DNS Server
	DnsSecondary NullableString `json:"dnsSecondary,omitempty"`
	// Network CIDR
	Cidr *string `json:"cidr,omitempty"`
	// IPv6 Network Gateway
	GatewayIPv6 NullableString `json:"gatewayIPv6,omitempty"`
	NetmaskIPv6 NullableString `json:"netmaskIPv6,omitempty"`
	// Primary IPv6 DNS Server
	DnsPrimaryIPv6 NullableString `json:"dnsPrimaryIPv6,omitempty"`
	// Secondary IPv6 DNS Server
	DnsSecondaryIPv6 NullableString `json:"dnsSecondaryIPv6,omitempty"`
	// IPv6 Network CIDR
	CidrIPv6 NullableString `json:"cidrIPv6,omitempty"`
	TftpServer NullableString `json:"tftpServer,omitempty"`
	BootFile NullableString `json:"bootFile,omitempty"`
	SwitchId NullableString `json:"switchId,omitempty"`
	FabricId NullableString `json:"fabricId,omitempty"`
	NetworkRole NullableString `json:"networkRole,omitempty"`
	Status *string `json:"status,omitempty"`
	AvailabilityZone NullableString `json:"availabilityZone,omitempty"`
	Pool map[string]interface{} `json:"pool,omitempty"`
	PoolIPv6 map[string]interface{} `json:"poolIPv6,omitempty"`
	NetworkProxy NullableNetworkNetworkProxy `json:"networkProxy,omitempty"`
	NetworkDomain NullableInlineResponse200108NetworkFloatingIpNetworkDomain `json:"networkDomain,omitempty"`
	SearchDomains NullableString `json:"searchDomains,omitempty"`
	PrefixLength NullableString `json:"prefixLength,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	EnableAdmin *bool `json:"enableAdmin,omitempty"`
	Active *bool `json:"active,omitempty"`
	DefaultNetwork *bool `json:"defaultNetwork,omitempty"`
	AssignPublicIp *bool `json:"assignPublicIp,omitempty"`
	NoProxy NullableString `json:"noProxy,omitempty"`
	ApplianceUrlProxyBypass *bool `json:"applianceUrlProxyBypass,omitempty"`
	ZonePool NullableInlineResponse20082LoadBalancerInstanceSslCert `json:"zonePool,omitempty"`
	AllowStaticOverride *bool `json:"allowStaticOverride,omitempty"`
	Config *NetworkConfig `json:"config,omitempty"`
	Tenants *[]InlineResponse20040AppDeployInstance `json:"tenants,omitempty"`
}

// NewNetwork instantiates a new Network object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetwork() *Network {
	this := Network{}
	return &this
}

// NewNetworkWithDefaults instantiates a new Network object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkWithDefaults() *Network {
	this := Network{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Network) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Network) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *Network) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Network) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Network) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Network) SetName(v string) {
	o.Name = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *Network) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *Network) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *Network) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetLabels() []string {
	if o == nil  {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetLabelsOk() (*[]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return &o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *Network) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *Network) SetLabels(v []string) {
	o.Labels = v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *Network) GetZone() NetworkZone {
	if o == nil || o.Zone == nil {
		var ret NetworkZone
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetZoneOk() (*NetworkZone, bool) {
	if o == nil || o.Zone == nil {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *Network) HasZone() bool {
	if o != nil && o.Zone != nil {
		return true
	}

	return false
}

// SetZone gets a reference to the given NetworkZone and assigns it to the Zone field.
func (o *Network) SetZone(v NetworkZone) {
	o.Zone = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Network) GetType() NetworkType {
	if o == nil || o.Type == nil {
		var ret NetworkType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetTypeOk() (*NetworkType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Network) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given NetworkType and assigns it to the Type field.
func (o *Network) SetType(v NetworkType) {
	o.Type = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *Network) GetOwner() NetworkOwner {
	if o == nil || o.Owner == nil {
		var ret NetworkOwner
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetOwnerOk() (*NetworkOwner, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *Network) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given NetworkOwner and assigns it to the Owner field.
func (o *Network) SetOwner(v NetworkOwner) {
	o.Owner = &v
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetCode() string {
	if o == nil || o.Code.Get() == nil {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *Network) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *Network) SetCode(v string) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *Network) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *Network) UnsetCode() {
	o.Code.Unset()
}

// GetIpv4Enabled returns the Ipv4Enabled field value if set, zero value otherwise.
func (o *Network) GetIpv4Enabled() bool {
	if o == nil || o.Ipv4Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Ipv4Enabled
}

// GetIpv4EnabledOk returns a tuple with the Ipv4Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetIpv4EnabledOk() (*bool, bool) {
	if o == nil || o.Ipv4Enabled == nil {
		return nil, false
	}
	return o.Ipv4Enabled, true
}

// HasIpv4Enabled returns a boolean if a field has been set.
func (o *Network) HasIpv4Enabled() bool {
	if o != nil && o.Ipv4Enabled != nil {
		return true
	}

	return false
}

// SetIpv4Enabled gets a reference to the given bool and assigns it to the Ipv4Enabled field.
func (o *Network) SetIpv4Enabled(v bool) {
	o.Ipv4Enabled = &v
}

// GetIpv6Enabled returns the Ipv6Enabled field value if set, zero value otherwise.
func (o *Network) GetIpv6Enabled() bool {
	if o == nil || o.Ipv6Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Ipv6Enabled
}

// GetIpv6EnabledOk returns a tuple with the Ipv6Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetIpv6EnabledOk() (*bool, bool) {
	if o == nil || o.Ipv6Enabled == nil {
		return nil, false
	}
	return o.Ipv6Enabled, true
}

// HasIpv6Enabled returns a boolean if a field has been set.
func (o *Network) HasIpv6Enabled() bool {
	if o != nil && o.Ipv6Enabled != nil {
		return true
	}

	return false
}

// SetIpv6Enabled gets a reference to the given bool and assigns it to the Ipv6Enabled field.
func (o *Network) SetIpv6Enabled(v bool) {
	o.Ipv6Enabled = &v
}

// GetCategory returns the Category field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetCategory() string {
	if o == nil || o.Category.Get() == nil {
		var ret string
		return ret
	}
	return *o.Category.Get()
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Category.Get(), o.Category.IsSet()
}

// HasCategory returns a boolean if a field has been set.
func (o *Network) HasCategory() bool {
	if o != nil && o.Category.IsSet() {
		return true
	}

	return false
}

// SetCategory gets a reference to the given NullableString and assigns it to the Category field.
func (o *Network) SetCategory(v string) {
	o.Category.Set(&v)
}
// SetCategoryNil sets the value for Category to be an explicit nil
func (o *Network) SetCategoryNil() {
	o.Category.Set(nil)
}

// UnsetCategory ensures that no value is present for Category, not even an explicit nil
func (o *Network) UnsetCategory() {
	o.Category.Unset()
}

// GetInterfaceName returns the InterfaceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetInterfaceName() string {
	if o == nil || o.InterfaceName.Get() == nil {
		var ret string
		return ret
	}
	return *o.InterfaceName.Get()
}

// GetInterfaceNameOk returns a tuple with the InterfaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetInterfaceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InterfaceName.Get(), o.InterfaceName.IsSet()
}

// HasInterfaceName returns a boolean if a field has been set.
func (o *Network) HasInterfaceName() bool {
	if o != nil && o.InterfaceName.IsSet() {
		return true
	}

	return false
}

// SetInterfaceName gets a reference to the given NullableString and assigns it to the InterfaceName field.
func (o *Network) SetInterfaceName(v string) {
	o.InterfaceName.Set(&v)
}
// SetInterfaceNameNil sets the value for InterfaceName to be an explicit nil
func (o *Network) SetInterfaceNameNil() {
	o.InterfaceName.Set(nil)
}

// UnsetInterfaceName ensures that no value is present for InterfaceName, not even an explicit nil
func (o *Network) UnsetInterfaceName() {
	o.InterfaceName.Unset()
}

// GetBridgeName returns the BridgeName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetBridgeName() string {
	if o == nil || o.BridgeName.Get() == nil {
		var ret string
		return ret
	}
	return *o.BridgeName.Get()
}

// GetBridgeNameOk returns a tuple with the BridgeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetBridgeNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BridgeName.Get(), o.BridgeName.IsSet()
}

// HasBridgeName returns a boolean if a field has been set.
func (o *Network) HasBridgeName() bool {
	if o != nil && o.BridgeName.IsSet() {
		return true
	}

	return false
}

// SetBridgeName gets a reference to the given NullableString and assigns it to the BridgeName field.
func (o *Network) SetBridgeName(v string) {
	o.BridgeName.Set(&v)
}
// SetBridgeNameNil sets the value for BridgeName to be an explicit nil
func (o *Network) SetBridgeNameNil() {
	o.BridgeName.Set(nil)
}

// UnsetBridgeName ensures that no value is present for BridgeName, not even an explicit nil
func (o *Network) UnsetBridgeName() {
	o.BridgeName.Unset()
}

// GetBridgeInterface returns the BridgeInterface field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetBridgeInterface() string {
	if o == nil || o.BridgeInterface.Get() == nil {
		var ret string
		return ret
	}
	return *o.BridgeInterface.Get()
}

// GetBridgeInterfaceOk returns a tuple with the BridgeInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetBridgeInterfaceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BridgeInterface.Get(), o.BridgeInterface.IsSet()
}

// HasBridgeInterface returns a boolean if a field has been set.
func (o *Network) HasBridgeInterface() bool {
	if o != nil && o.BridgeInterface.IsSet() {
		return true
	}

	return false
}

// SetBridgeInterface gets a reference to the given NullableString and assigns it to the BridgeInterface field.
func (o *Network) SetBridgeInterface(v string) {
	o.BridgeInterface.Set(&v)
}
// SetBridgeInterfaceNil sets the value for BridgeInterface to be an explicit nil
func (o *Network) SetBridgeInterfaceNil() {
	o.BridgeInterface.Set(nil)
}

// UnsetBridgeInterface ensures that no value is present for BridgeInterface, not even an explicit nil
func (o *Network) UnsetBridgeInterface() {
	o.BridgeInterface.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *Network) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *Network) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *Network) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *Network) UnsetDescription() {
	o.Description.Unset()
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetExternalId() string {
	if o == nil || o.ExternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetExternalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *Network) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *Network) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}
// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *Network) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *Network) UnsetExternalId() {
	o.ExternalId.Unset()
}

// GetInternalId returns the InternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetInternalId() string {
	if o == nil || o.InternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.InternalId.Get()
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetInternalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InternalId.Get(), o.InternalId.IsSet()
}

// HasInternalId returns a boolean if a field has been set.
func (o *Network) HasInternalId() bool {
	if o != nil && o.InternalId.IsSet() {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given NullableString and assigns it to the InternalId field.
func (o *Network) SetInternalId(v string) {
	o.InternalId.Set(&v)
}
// SetInternalIdNil sets the value for InternalId to be an explicit nil
func (o *Network) SetInternalIdNil() {
	o.InternalId.Set(nil)
}

// UnsetInternalId ensures that no value is present for InternalId, not even an explicit nil
func (o *Network) UnsetInternalId() {
	o.InternalId.Unset()
}

// GetUniqueId returns the UniqueId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetUniqueId() string {
	if o == nil || o.UniqueId.Get() == nil {
		var ret string
		return ret
	}
	return *o.UniqueId.Get()
}

// GetUniqueIdOk returns a tuple with the UniqueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetUniqueIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UniqueId.Get(), o.UniqueId.IsSet()
}

// HasUniqueId returns a boolean if a field has been set.
func (o *Network) HasUniqueId() bool {
	if o != nil && o.UniqueId.IsSet() {
		return true
	}

	return false
}

// SetUniqueId gets a reference to the given NullableString and assigns it to the UniqueId field.
func (o *Network) SetUniqueId(v string) {
	o.UniqueId.Set(&v)
}
// SetUniqueIdNil sets the value for UniqueId to be an explicit nil
func (o *Network) SetUniqueIdNil() {
	o.UniqueId.Set(nil)
}

// UnsetUniqueId ensures that no value is present for UniqueId, not even an explicit nil
func (o *Network) UnsetUniqueId() {
	o.UniqueId.Unset()
}

// GetExternalType returns the ExternalType field value if set, zero value otherwise.
func (o *Network) GetExternalType() string {
	if o == nil || o.ExternalType == nil {
		var ret string
		return ret
	}
	return *o.ExternalType
}

// GetExternalTypeOk returns a tuple with the ExternalType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetExternalTypeOk() (*string, bool) {
	if o == nil || o.ExternalType == nil {
		return nil, false
	}
	return o.ExternalType, true
}

// HasExternalType returns a boolean if a field has been set.
func (o *Network) HasExternalType() bool {
	if o != nil && o.ExternalType != nil {
		return true
	}

	return false
}

// SetExternalType gets a reference to the given string and assigns it to the ExternalType field.
func (o *Network) SetExternalType(v string) {
	o.ExternalType = &v
}

// GetRefUrl returns the RefUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetRefUrl() string {
	if o == nil || o.RefUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.RefUrl.Get()
}

// GetRefUrlOk returns a tuple with the RefUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetRefUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RefUrl.Get(), o.RefUrl.IsSet()
}

// HasRefUrl returns a boolean if a field has been set.
func (o *Network) HasRefUrl() bool {
	if o != nil && o.RefUrl.IsSet() {
		return true
	}

	return false
}

// SetRefUrl gets a reference to the given NullableString and assigns it to the RefUrl field.
func (o *Network) SetRefUrl(v string) {
	o.RefUrl.Set(&v)
}
// SetRefUrlNil sets the value for RefUrl to be an explicit nil
func (o *Network) SetRefUrlNil() {
	o.RefUrl.Set(nil)
}

// UnsetRefUrl ensures that no value is present for RefUrl, not even an explicit nil
func (o *Network) UnsetRefUrl() {
	o.RefUrl.Unset()
}

// GetRefType returns the RefType field value if set, zero value otherwise.
func (o *Network) GetRefType() string {
	if o == nil || o.RefType == nil {
		var ret string
		return ret
	}
	return *o.RefType
}

// GetRefTypeOk returns a tuple with the RefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetRefTypeOk() (*string, bool) {
	if o == nil || o.RefType == nil {
		return nil, false
	}
	return o.RefType, true
}

// HasRefType returns a boolean if a field has been set.
func (o *Network) HasRefType() bool {
	if o != nil && o.RefType != nil {
		return true
	}

	return false
}

// SetRefType gets a reference to the given string and assigns it to the RefType field.
func (o *Network) SetRefType(v string) {
	o.RefType = &v
}

// GetRefId returns the RefId field value if set, zero value otherwise.
func (o *Network) GetRefId() int64 {
	if o == nil || o.RefId == nil {
		var ret int64
		return ret
	}
	return *o.RefId
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetRefIdOk() (*int64, bool) {
	if o == nil || o.RefId == nil {
		return nil, false
	}
	return o.RefId, true
}

// HasRefId returns a boolean if a field has been set.
func (o *Network) HasRefId() bool {
	if o != nil && o.RefId != nil {
		return true
	}

	return false
}

// SetRefId gets a reference to the given int64 and assigns it to the RefId field.
func (o *Network) SetRefId(v int64) {
	o.RefId = &v
}

// GetVlanId returns the VlanId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetVlanId() int64 {
	if o == nil || o.VlanId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.VlanId.Get()
}

// GetVlanIdOk returns a tuple with the VlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetVlanIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VlanId.Get(), o.VlanId.IsSet()
}

// HasVlanId returns a boolean if a field has been set.
func (o *Network) HasVlanId() bool {
	if o != nil && o.VlanId.IsSet() {
		return true
	}

	return false
}

// SetVlanId gets a reference to the given NullableInt64 and assigns it to the VlanId field.
func (o *Network) SetVlanId(v int64) {
	o.VlanId.Set(&v)
}
// SetVlanIdNil sets the value for VlanId to be an explicit nil
func (o *Network) SetVlanIdNil() {
	o.VlanId.Set(nil)
}

// UnsetVlanId ensures that no value is present for VlanId, not even an explicit nil
func (o *Network) UnsetVlanId() {
	o.VlanId.Unset()
}

// GetVswitchName returns the VswitchName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetVswitchName() string {
	if o == nil || o.VswitchName.Get() == nil {
		var ret string
		return ret
	}
	return *o.VswitchName.Get()
}

// GetVswitchNameOk returns a tuple with the VswitchName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetVswitchNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VswitchName.Get(), o.VswitchName.IsSet()
}

// HasVswitchName returns a boolean if a field has been set.
func (o *Network) HasVswitchName() bool {
	if o != nil && o.VswitchName.IsSet() {
		return true
	}

	return false
}

// SetVswitchName gets a reference to the given NullableString and assigns it to the VswitchName field.
func (o *Network) SetVswitchName(v string) {
	o.VswitchName.Set(&v)
}
// SetVswitchNameNil sets the value for VswitchName to be an explicit nil
func (o *Network) SetVswitchNameNil() {
	o.VswitchName.Set(nil)
}

// UnsetVswitchName ensures that no value is present for VswitchName, not even an explicit nil
func (o *Network) UnsetVswitchName() {
	o.VswitchName.Unset()
}

// GetDhcpServer returns the DhcpServer field value if set, zero value otherwise.
func (o *Network) GetDhcpServer() bool {
	if o == nil || o.DhcpServer == nil {
		var ret bool
		return ret
	}
	return *o.DhcpServer
}

// GetDhcpServerOk returns a tuple with the DhcpServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetDhcpServerOk() (*bool, bool) {
	if o == nil || o.DhcpServer == nil {
		return nil, false
	}
	return o.DhcpServer, true
}

// HasDhcpServer returns a boolean if a field has been set.
func (o *Network) HasDhcpServer() bool {
	if o != nil && o.DhcpServer != nil {
		return true
	}

	return false
}

// SetDhcpServer gets a reference to the given bool and assigns it to the DhcpServer field.
func (o *Network) SetDhcpServer(v bool) {
	o.DhcpServer = &v
}

// GetDhcpIp returns the DhcpIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetDhcpIp() string {
	if o == nil || o.DhcpIp.Get() == nil {
		var ret string
		return ret
	}
	return *o.DhcpIp.Get()
}

// GetDhcpIpOk returns a tuple with the DhcpIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetDhcpIpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DhcpIp.Get(), o.DhcpIp.IsSet()
}

// HasDhcpIp returns a boolean if a field has been set.
func (o *Network) HasDhcpIp() bool {
	if o != nil && o.DhcpIp.IsSet() {
		return true
	}

	return false
}

// SetDhcpIp gets a reference to the given NullableString and assigns it to the DhcpIp field.
func (o *Network) SetDhcpIp(v string) {
	o.DhcpIp.Set(&v)
}
// SetDhcpIpNil sets the value for DhcpIp to be an explicit nil
func (o *Network) SetDhcpIpNil() {
	o.DhcpIp.Set(nil)
}

// UnsetDhcpIp ensures that no value is present for DhcpIp, not even an explicit nil
func (o *Network) UnsetDhcpIp() {
	o.DhcpIp.Unset()
}

// GetDhcpServerIPv6 returns the DhcpServerIPv6 field value if set, zero value otherwise.
func (o *Network) GetDhcpServerIPv6() bool {
	if o == nil || o.DhcpServerIPv6 == nil {
		var ret bool
		return ret
	}
	return *o.DhcpServerIPv6
}

// GetDhcpServerIPv6Ok returns a tuple with the DhcpServerIPv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetDhcpServerIPv6Ok() (*bool, bool) {
	if o == nil || o.DhcpServerIPv6 == nil {
		return nil, false
	}
	return o.DhcpServerIPv6, true
}

// HasDhcpServerIPv6 returns a boolean if a field has been set.
func (o *Network) HasDhcpServerIPv6() bool {
	if o != nil && o.DhcpServerIPv6 != nil {
		return true
	}

	return false
}

// SetDhcpServerIPv6 gets a reference to the given bool and assigns it to the DhcpServerIPv6 field.
func (o *Network) SetDhcpServerIPv6(v bool) {
	o.DhcpServerIPv6 = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetGateway() string {
	if o == nil || o.Gateway.Get() == nil {
		var ret string
		return ret
	}
	return *o.Gateway.Get()
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetGatewayOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Gateway.Get(), o.Gateway.IsSet()
}

// HasGateway returns a boolean if a field has been set.
func (o *Network) HasGateway() bool {
	if o != nil && o.Gateway.IsSet() {
		return true
	}

	return false
}

// SetGateway gets a reference to the given NullableString and assigns it to the Gateway field.
func (o *Network) SetGateway(v string) {
	o.Gateway.Set(&v)
}
// SetGatewayNil sets the value for Gateway to be an explicit nil
func (o *Network) SetGatewayNil() {
	o.Gateway.Set(nil)
}

// UnsetGateway ensures that no value is present for Gateway, not even an explicit nil
func (o *Network) UnsetGateway() {
	o.Gateway.Unset()
}

// GetNetmask returns the Netmask field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetNetmask() string {
	if o == nil || o.Netmask.Get() == nil {
		var ret string
		return ret
	}
	return *o.Netmask.Get()
}

// GetNetmaskOk returns a tuple with the Netmask field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetNetmaskOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Netmask.Get(), o.Netmask.IsSet()
}

// HasNetmask returns a boolean if a field has been set.
func (o *Network) HasNetmask() bool {
	if o != nil && o.Netmask.IsSet() {
		return true
	}

	return false
}

// SetNetmask gets a reference to the given NullableString and assigns it to the Netmask field.
func (o *Network) SetNetmask(v string) {
	o.Netmask.Set(&v)
}
// SetNetmaskNil sets the value for Netmask to be an explicit nil
func (o *Network) SetNetmaskNil() {
	o.Netmask.Set(nil)
}

// UnsetNetmask ensures that no value is present for Netmask, not even an explicit nil
func (o *Network) UnsetNetmask() {
	o.Netmask.Unset()
}

// GetBroadcast returns the Broadcast field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetBroadcast() string {
	if o == nil || o.Broadcast.Get() == nil {
		var ret string
		return ret
	}
	return *o.Broadcast.Get()
}

// GetBroadcastOk returns a tuple with the Broadcast field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetBroadcastOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Broadcast.Get(), o.Broadcast.IsSet()
}

// HasBroadcast returns a boolean if a field has been set.
func (o *Network) HasBroadcast() bool {
	if o != nil && o.Broadcast.IsSet() {
		return true
	}

	return false
}

// SetBroadcast gets a reference to the given NullableString and assigns it to the Broadcast field.
func (o *Network) SetBroadcast(v string) {
	o.Broadcast.Set(&v)
}
// SetBroadcastNil sets the value for Broadcast to be an explicit nil
func (o *Network) SetBroadcastNil() {
	o.Broadcast.Set(nil)
}

// UnsetBroadcast ensures that no value is present for Broadcast, not even an explicit nil
func (o *Network) UnsetBroadcast() {
	o.Broadcast.Unset()
}

// GetSubnetAddress returns the SubnetAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetSubnetAddress() string {
	if o == nil || o.SubnetAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.SubnetAddress.Get()
}

// GetSubnetAddressOk returns a tuple with the SubnetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetSubnetAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubnetAddress.Get(), o.SubnetAddress.IsSet()
}

// HasSubnetAddress returns a boolean if a field has been set.
func (o *Network) HasSubnetAddress() bool {
	if o != nil && o.SubnetAddress.IsSet() {
		return true
	}

	return false
}

// SetSubnetAddress gets a reference to the given NullableString and assigns it to the SubnetAddress field.
func (o *Network) SetSubnetAddress(v string) {
	o.SubnetAddress.Set(&v)
}
// SetSubnetAddressNil sets the value for SubnetAddress to be an explicit nil
func (o *Network) SetSubnetAddressNil() {
	o.SubnetAddress.Set(nil)
}

// UnsetSubnetAddress ensures that no value is present for SubnetAddress, not even an explicit nil
func (o *Network) UnsetSubnetAddress() {
	o.SubnetAddress.Unset()
}

// GetDnsPrimary returns the DnsPrimary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetDnsPrimary() string {
	if o == nil || o.DnsPrimary.Get() == nil {
		var ret string
		return ret
	}
	return *o.DnsPrimary.Get()
}

// GetDnsPrimaryOk returns a tuple with the DnsPrimary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetDnsPrimaryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DnsPrimary.Get(), o.DnsPrimary.IsSet()
}

// HasDnsPrimary returns a boolean if a field has been set.
func (o *Network) HasDnsPrimary() bool {
	if o != nil && o.DnsPrimary.IsSet() {
		return true
	}

	return false
}

// SetDnsPrimary gets a reference to the given NullableString and assigns it to the DnsPrimary field.
func (o *Network) SetDnsPrimary(v string) {
	o.DnsPrimary.Set(&v)
}
// SetDnsPrimaryNil sets the value for DnsPrimary to be an explicit nil
func (o *Network) SetDnsPrimaryNil() {
	o.DnsPrimary.Set(nil)
}

// UnsetDnsPrimary ensures that no value is present for DnsPrimary, not even an explicit nil
func (o *Network) UnsetDnsPrimary() {
	o.DnsPrimary.Unset()
}

// GetDnsSecondary returns the DnsSecondary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetDnsSecondary() string {
	if o == nil || o.DnsSecondary.Get() == nil {
		var ret string
		return ret
	}
	return *o.DnsSecondary.Get()
}

// GetDnsSecondaryOk returns a tuple with the DnsSecondary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetDnsSecondaryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DnsSecondary.Get(), o.DnsSecondary.IsSet()
}

// HasDnsSecondary returns a boolean if a field has been set.
func (o *Network) HasDnsSecondary() bool {
	if o != nil && o.DnsSecondary.IsSet() {
		return true
	}

	return false
}

// SetDnsSecondary gets a reference to the given NullableString and assigns it to the DnsSecondary field.
func (o *Network) SetDnsSecondary(v string) {
	o.DnsSecondary.Set(&v)
}
// SetDnsSecondaryNil sets the value for DnsSecondary to be an explicit nil
func (o *Network) SetDnsSecondaryNil() {
	o.DnsSecondary.Set(nil)
}

// UnsetDnsSecondary ensures that no value is present for DnsSecondary, not even an explicit nil
func (o *Network) UnsetDnsSecondary() {
	o.DnsSecondary.Unset()
}

// GetCidr returns the Cidr field value if set, zero value otherwise.
func (o *Network) GetCidr() string {
	if o == nil || o.Cidr == nil {
		var ret string
		return ret
	}
	return *o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetCidrOk() (*string, bool) {
	if o == nil || o.Cidr == nil {
		return nil, false
	}
	return o.Cidr, true
}

// HasCidr returns a boolean if a field has been set.
func (o *Network) HasCidr() bool {
	if o != nil && o.Cidr != nil {
		return true
	}

	return false
}

// SetCidr gets a reference to the given string and assigns it to the Cidr field.
func (o *Network) SetCidr(v string) {
	o.Cidr = &v
}

// GetGatewayIPv6 returns the GatewayIPv6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetGatewayIPv6() string {
	if o == nil || o.GatewayIPv6.Get() == nil {
		var ret string
		return ret
	}
	return *o.GatewayIPv6.Get()
}

// GetGatewayIPv6Ok returns a tuple with the GatewayIPv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetGatewayIPv6Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GatewayIPv6.Get(), o.GatewayIPv6.IsSet()
}

// HasGatewayIPv6 returns a boolean if a field has been set.
func (o *Network) HasGatewayIPv6() bool {
	if o != nil && o.GatewayIPv6.IsSet() {
		return true
	}

	return false
}

// SetGatewayIPv6 gets a reference to the given NullableString and assigns it to the GatewayIPv6 field.
func (o *Network) SetGatewayIPv6(v string) {
	o.GatewayIPv6.Set(&v)
}
// SetGatewayIPv6Nil sets the value for GatewayIPv6 to be an explicit nil
func (o *Network) SetGatewayIPv6Nil() {
	o.GatewayIPv6.Set(nil)
}

// UnsetGatewayIPv6 ensures that no value is present for GatewayIPv6, not even an explicit nil
func (o *Network) UnsetGatewayIPv6() {
	o.GatewayIPv6.Unset()
}

// GetNetmaskIPv6 returns the NetmaskIPv6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetNetmaskIPv6() string {
	if o == nil || o.NetmaskIPv6.Get() == nil {
		var ret string
		return ret
	}
	return *o.NetmaskIPv6.Get()
}

// GetNetmaskIPv6Ok returns a tuple with the NetmaskIPv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetNetmaskIPv6Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetmaskIPv6.Get(), o.NetmaskIPv6.IsSet()
}

// HasNetmaskIPv6 returns a boolean if a field has been set.
func (o *Network) HasNetmaskIPv6() bool {
	if o != nil && o.NetmaskIPv6.IsSet() {
		return true
	}

	return false
}

// SetNetmaskIPv6 gets a reference to the given NullableString and assigns it to the NetmaskIPv6 field.
func (o *Network) SetNetmaskIPv6(v string) {
	o.NetmaskIPv6.Set(&v)
}
// SetNetmaskIPv6Nil sets the value for NetmaskIPv6 to be an explicit nil
func (o *Network) SetNetmaskIPv6Nil() {
	o.NetmaskIPv6.Set(nil)
}

// UnsetNetmaskIPv6 ensures that no value is present for NetmaskIPv6, not even an explicit nil
func (o *Network) UnsetNetmaskIPv6() {
	o.NetmaskIPv6.Unset()
}

// GetDnsPrimaryIPv6 returns the DnsPrimaryIPv6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetDnsPrimaryIPv6() string {
	if o == nil || o.DnsPrimaryIPv6.Get() == nil {
		var ret string
		return ret
	}
	return *o.DnsPrimaryIPv6.Get()
}

// GetDnsPrimaryIPv6Ok returns a tuple with the DnsPrimaryIPv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetDnsPrimaryIPv6Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DnsPrimaryIPv6.Get(), o.DnsPrimaryIPv6.IsSet()
}

// HasDnsPrimaryIPv6 returns a boolean if a field has been set.
func (o *Network) HasDnsPrimaryIPv6() bool {
	if o != nil && o.DnsPrimaryIPv6.IsSet() {
		return true
	}

	return false
}

// SetDnsPrimaryIPv6 gets a reference to the given NullableString and assigns it to the DnsPrimaryIPv6 field.
func (o *Network) SetDnsPrimaryIPv6(v string) {
	o.DnsPrimaryIPv6.Set(&v)
}
// SetDnsPrimaryIPv6Nil sets the value for DnsPrimaryIPv6 to be an explicit nil
func (o *Network) SetDnsPrimaryIPv6Nil() {
	o.DnsPrimaryIPv6.Set(nil)
}

// UnsetDnsPrimaryIPv6 ensures that no value is present for DnsPrimaryIPv6, not even an explicit nil
func (o *Network) UnsetDnsPrimaryIPv6() {
	o.DnsPrimaryIPv6.Unset()
}

// GetDnsSecondaryIPv6 returns the DnsSecondaryIPv6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetDnsSecondaryIPv6() string {
	if o == nil || o.DnsSecondaryIPv6.Get() == nil {
		var ret string
		return ret
	}
	return *o.DnsSecondaryIPv6.Get()
}

// GetDnsSecondaryIPv6Ok returns a tuple with the DnsSecondaryIPv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetDnsSecondaryIPv6Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DnsSecondaryIPv6.Get(), o.DnsSecondaryIPv6.IsSet()
}

// HasDnsSecondaryIPv6 returns a boolean if a field has been set.
func (o *Network) HasDnsSecondaryIPv6() bool {
	if o != nil && o.DnsSecondaryIPv6.IsSet() {
		return true
	}

	return false
}

// SetDnsSecondaryIPv6 gets a reference to the given NullableString and assigns it to the DnsSecondaryIPv6 field.
func (o *Network) SetDnsSecondaryIPv6(v string) {
	o.DnsSecondaryIPv6.Set(&v)
}
// SetDnsSecondaryIPv6Nil sets the value for DnsSecondaryIPv6 to be an explicit nil
func (o *Network) SetDnsSecondaryIPv6Nil() {
	o.DnsSecondaryIPv6.Set(nil)
}

// UnsetDnsSecondaryIPv6 ensures that no value is present for DnsSecondaryIPv6, not even an explicit nil
func (o *Network) UnsetDnsSecondaryIPv6() {
	o.DnsSecondaryIPv6.Unset()
}

// GetCidrIPv6 returns the CidrIPv6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetCidrIPv6() string {
	if o == nil || o.CidrIPv6.Get() == nil {
		var ret string
		return ret
	}
	return *o.CidrIPv6.Get()
}

// GetCidrIPv6Ok returns a tuple with the CidrIPv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetCidrIPv6Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CidrIPv6.Get(), o.CidrIPv6.IsSet()
}

// HasCidrIPv6 returns a boolean if a field has been set.
func (o *Network) HasCidrIPv6() bool {
	if o != nil && o.CidrIPv6.IsSet() {
		return true
	}

	return false
}

// SetCidrIPv6 gets a reference to the given NullableString and assigns it to the CidrIPv6 field.
func (o *Network) SetCidrIPv6(v string) {
	o.CidrIPv6.Set(&v)
}
// SetCidrIPv6Nil sets the value for CidrIPv6 to be an explicit nil
func (o *Network) SetCidrIPv6Nil() {
	o.CidrIPv6.Set(nil)
}

// UnsetCidrIPv6 ensures that no value is present for CidrIPv6, not even an explicit nil
func (o *Network) UnsetCidrIPv6() {
	o.CidrIPv6.Unset()
}

// GetTftpServer returns the TftpServer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetTftpServer() string {
	if o == nil || o.TftpServer.Get() == nil {
		var ret string
		return ret
	}
	return *o.TftpServer.Get()
}

// GetTftpServerOk returns a tuple with the TftpServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetTftpServerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TftpServer.Get(), o.TftpServer.IsSet()
}

// HasTftpServer returns a boolean if a field has been set.
func (o *Network) HasTftpServer() bool {
	if o != nil && o.TftpServer.IsSet() {
		return true
	}

	return false
}

// SetTftpServer gets a reference to the given NullableString and assigns it to the TftpServer field.
func (o *Network) SetTftpServer(v string) {
	o.TftpServer.Set(&v)
}
// SetTftpServerNil sets the value for TftpServer to be an explicit nil
func (o *Network) SetTftpServerNil() {
	o.TftpServer.Set(nil)
}

// UnsetTftpServer ensures that no value is present for TftpServer, not even an explicit nil
func (o *Network) UnsetTftpServer() {
	o.TftpServer.Unset()
}

// GetBootFile returns the BootFile field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetBootFile() string {
	if o == nil || o.BootFile.Get() == nil {
		var ret string
		return ret
	}
	return *o.BootFile.Get()
}

// GetBootFileOk returns a tuple with the BootFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetBootFileOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BootFile.Get(), o.BootFile.IsSet()
}

// HasBootFile returns a boolean if a field has been set.
func (o *Network) HasBootFile() bool {
	if o != nil && o.BootFile.IsSet() {
		return true
	}

	return false
}

// SetBootFile gets a reference to the given NullableString and assigns it to the BootFile field.
func (o *Network) SetBootFile(v string) {
	o.BootFile.Set(&v)
}
// SetBootFileNil sets the value for BootFile to be an explicit nil
func (o *Network) SetBootFileNil() {
	o.BootFile.Set(nil)
}

// UnsetBootFile ensures that no value is present for BootFile, not even an explicit nil
func (o *Network) UnsetBootFile() {
	o.BootFile.Unset()
}

// GetSwitchId returns the SwitchId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetSwitchId() string {
	if o == nil || o.SwitchId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SwitchId.Get()
}

// GetSwitchIdOk returns a tuple with the SwitchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetSwitchIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SwitchId.Get(), o.SwitchId.IsSet()
}

// HasSwitchId returns a boolean if a field has been set.
func (o *Network) HasSwitchId() bool {
	if o != nil && o.SwitchId.IsSet() {
		return true
	}

	return false
}

// SetSwitchId gets a reference to the given NullableString and assigns it to the SwitchId field.
func (o *Network) SetSwitchId(v string) {
	o.SwitchId.Set(&v)
}
// SetSwitchIdNil sets the value for SwitchId to be an explicit nil
func (o *Network) SetSwitchIdNil() {
	o.SwitchId.Set(nil)
}

// UnsetSwitchId ensures that no value is present for SwitchId, not even an explicit nil
func (o *Network) UnsetSwitchId() {
	o.SwitchId.Unset()
}

// GetFabricId returns the FabricId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetFabricId() string {
	if o == nil || o.FabricId.Get() == nil {
		var ret string
		return ret
	}
	return *o.FabricId.Get()
}

// GetFabricIdOk returns a tuple with the FabricId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetFabricIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FabricId.Get(), o.FabricId.IsSet()
}

// HasFabricId returns a boolean if a field has been set.
func (o *Network) HasFabricId() bool {
	if o != nil && o.FabricId.IsSet() {
		return true
	}

	return false
}

// SetFabricId gets a reference to the given NullableString and assigns it to the FabricId field.
func (o *Network) SetFabricId(v string) {
	o.FabricId.Set(&v)
}
// SetFabricIdNil sets the value for FabricId to be an explicit nil
func (o *Network) SetFabricIdNil() {
	o.FabricId.Set(nil)
}

// UnsetFabricId ensures that no value is present for FabricId, not even an explicit nil
func (o *Network) UnsetFabricId() {
	o.FabricId.Unset()
}

// GetNetworkRole returns the NetworkRole field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetNetworkRole() string {
	if o == nil || o.NetworkRole.Get() == nil {
		var ret string
		return ret
	}
	return *o.NetworkRole.Get()
}

// GetNetworkRoleOk returns a tuple with the NetworkRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetNetworkRoleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetworkRole.Get(), o.NetworkRole.IsSet()
}

// HasNetworkRole returns a boolean if a field has been set.
func (o *Network) HasNetworkRole() bool {
	if o != nil && o.NetworkRole.IsSet() {
		return true
	}

	return false
}

// SetNetworkRole gets a reference to the given NullableString and assigns it to the NetworkRole field.
func (o *Network) SetNetworkRole(v string) {
	o.NetworkRole.Set(&v)
}
// SetNetworkRoleNil sets the value for NetworkRole to be an explicit nil
func (o *Network) SetNetworkRoleNil() {
	o.NetworkRole.Set(nil)
}

// UnsetNetworkRole ensures that no value is present for NetworkRole, not even an explicit nil
func (o *Network) UnsetNetworkRole() {
	o.NetworkRole.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Network) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Network) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Network) SetStatus(v string) {
	o.Status = &v
}

// GetAvailabilityZone returns the AvailabilityZone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetAvailabilityZone() string {
	if o == nil || o.AvailabilityZone.Get() == nil {
		var ret string
		return ret
	}
	return *o.AvailabilityZone.Get()
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetAvailabilityZoneOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AvailabilityZone.Get(), o.AvailabilityZone.IsSet()
}

// HasAvailabilityZone returns a boolean if a field has been set.
func (o *Network) HasAvailabilityZone() bool {
	if o != nil && o.AvailabilityZone.IsSet() {
		return true
	}

	return false
}

// SetAvailabilityZone gets a reference to the given NullableString and assigns it to the AvailabilityZone field.
func (o *Network) SetAvailabilityZone(v string) {
	o.AvailabilityZone.Set(&v)
}
// SetAvailabilityZoneNil sets the value for AvailabilityZone to be an explicit nil
func (o *Network) SetAvailabilityZoneNil() {
	o.AvailabilityZone.Set(nil)
}

// UnsetAvailabilityZone ensures that no value is present for AvailabilityZone, not even an explicit nil
func (o *Network) UnsetAvailabilityZone() {
	o.AvailabilityZone.Unset()
}

// GetPool returns the Pool field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetPool() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}
	return o.Pool
}

// GetPoolOk returns a tuple with the Pool field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetPoolOk() (*map[string]interface{}, bool) {
	if o == nil || o.Pool == nil {
		return nil, false
	}
	return &o.Pool, true
}

// HasPool returns a boolean if a field has been set.
func (o *Network) HasPool() bool {
	if o != nil && o.Pool != nil {
		return true
	}

	return false
}

// SetPool gets a reference to the given map[string]interface{} and assigns it to the Pool field.
func (o *Network) SetPool(v map[string]interface{}) {
	o.Pool = v
}

// GetPoolIPv6 returns the PoolIPv6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetPoolIPv6() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}
	return o.PoolIPv6
}

// GetPoolIPv6Ok returns a tuple with the PoolIPv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetPoolIPv6Ok() (*map[string]interface{}, bool) {
	if o == nil || o.PoolIPv6 == nil {
		return nil, false
	}
	return &o.PoolIPv6, true
}

// HasPoolIPv6 returns a boolean if a field has been set.
func (o *Network) HasPoolIPv6() bool {
	if o != nil && o.PoolIPv6 != nil {
		return true
	}

	return false
}

// SetPoolIPv6 gets a reference to the given map[string]interface{} and assigns it to the PoolIPv6 field.
func (o *Network) SetPoolIPv6(v map[string]interface{}) {
	o.PoolIPv6 = v
}

// GetNetworkProxy returns the NetworkProxy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetNetworkProxy() NetworkNetworkProxy {
	if o == nil || o.NetworkProxy.Get() == nil {
		var ret NetworkNetworkProxy
		return ret
	}
	return *o.NetworkProxy.Get()
}

// GetNetworkProxyOk returns a tuple with the NetworkProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetNetworkProxyOk() (*NetworkNetworkProxy, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetworkProxy.Get(), o.NetworkProxy.IsSet()
}

// HasNetworkProxy returns a boolean if a field has been set.
func (o *Network) HasNetworkProxy() bool {
	if o != nil && o.NetworkProxy.IsSet() {
		return true
	}

	return false
}

// SetNetworkProxy gets a reference to the given NullableNetworkNetworkProxy and assigns it to the NetworkProxy field.
func (o *Network) SetNetworkProxy(v NetworkNetworkProxy) {
	o.NetworkProxy.Set(&v)
}
// SetNetworkProxyNil sets the value for NetworkProxy to be an explicit nil
func (o *Network) SetNetworkProxyNil() {
	o.NetworkProxy.Set(nil)
}

// UnsetNetworkProxy ensures that no value is present for NetworkProxy, not even an explicit nil
func (o *Network) UnsetNetworkProxy() {
	o.NetworkProxy.Unset()
}

// GetNetworkDomain returns the NetworkDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetNetworkDomain() InlineResponse200108NetworkFloatingIpNetworkDomain {
	if o == nil || o.NetworkDomain.Get() == nil {
		var ret InlineResponse200108NetworkFloatingIpNetworkDomain
		return ret
	}
	return *o.NetworkDomain.Get()
}

// GetNetworkDomainOk returns a tuple with the NetworkDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetNetworkDomainOk() (*InlineResponse200108NetworkFloatingIpNetworkDomain, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetworkDomain.Get(), o.NetworkDomain.IsSet()
}

// HasNetworkDomain returns a boolean if a field has been set.
func (o *Network) HasNetworkDomain() bool {
	if o != nil && o.NetworkDomain.IsSet() {
		return true
	}

	return false
}

// SetNetworkDomain gets a reference to the given NullableInlineResponse200108NetworkFloatingIpNetworkDomain and assigns it to the NetworkDomain field.
func (o *Network) SetNetworkDomain(v InlineResponse200108NetworkFloatingIpNetworkDomain) {
	o.NetworkDomain.Set(&v)
}
// SetNetworkDomainNil sets the value for NetworkDomain to be an explicit nil
func (o *Network) SetNetworkDomainNil() {
	o.NetworkDomain.Set(nil)
}

// UnsetNetworkDomain ensures that no value is present for NetworkDomain, not even an explicit nil
func (o *Network) UnsetNetworkDomain() {
	o.NetworkDomain.Unset()
}

// GetSearchDomains returns the SearchDomains field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetSearchDomains() string {
	if o == nil || o.SearchDomains.Get() == nil {
		var ret string
		return ret
	}
	return *o.SearchDomains.Get()
}

// GetSearchDomainsOk returns a tuple with the SearchDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetSearchDomainsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SearchDomains.Get(), o.SearchDomains.IsSet()
}

// HasSearchDomains returns a boolean if a field has been set.
func (o *Network) HasSearchDomains() bool {
	if o != nil && o.SearchDomains.IsSet() {
		return true
	}

	return false
}

// SetSearchDomains gets a reference to the given NullableString and assigns it to the SearchDomains field.
func (o *Network) SetSearchDomains(v string) {
	o.SearchDomains.Set(&v)
}
// SetSearchDomainsNil sets the value for SearchDomains to be an explicit nil
func (o *Network) SetSearchDomainsNil() {
	o.SearchDomains.Set(nil)
}

// UnsetSearchDomains ensures that no value is present for SearchDomains, not even an explicit nil
func (o *Network) UnsetSearchDomains() {
	o.SearchDomains.Unset()
}

// GetPrefixLength returns the PrefixLength field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetPrefixLength() string {
	if o == nil || o.PrefixLength.Get() == nil {
		var ret string
		return ret
	}
	return *o.PrefixLength.Get()
}

// GetPrefixLengthOk returns a tuple with the PrefixLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetPrefixLengthOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PrefixLength.Get(), o.PrefixLength.IsSet()
}

// HasPrefixLength returns a boolean if a field has been set.
func (o *Network) HasPrefixLength() bool {
	if o != nil && o.PrefixLength.IsSet() {
		return true
	}

	return false
}

// SetPrefixLength gets a reference to the given NullableString and assigns it to the PrefixLength field.
func (o *Network) SetPrefixLength(v string) {
	o.PrefixLength.Set(&v)
}
// SetPrefixLengthNil sets the value for PrefixLength to be an explicit nil
func (o *Network) SetPrefixLengthNil() {
	o.PrefixLength.Set(nil)
}

// UnsetPrefixLength ensures that no value is present for PrefixLength, not even an explicit nil
func (o *Network) UnsetPrefixLength() {
	o.PrefixLength.Unset()
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *Network) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetVisibilityOk() (*string, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *Network) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *Network) SetVisibility(v string) {
	o.Visibility = &v
}

// GetEnableAdmin returns the EnableAdmin field value if set, zero value otherwise.
func (o *Network) GetEnableAdmin() bool {
	if o == nil || o.EnableAdmin == nil {
		var ret bool
		return ret
	}
	return *o.EnableAdmin
}

// GetEnableAdminOk returns a tuple with the EnableAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetEnableAdminOk() (*bool, bool) {
	if o == nil || o.EnableAdmin == nil {
		return nil, false
	}
	return o.EnableAdmin, true
}

// HasEnableAdmin returns a boolean if a field has been set.
func (o *Network) HasEnableAdmin() bool {
	if o != nil && o.EnableAdmin != nil {
		return true
	}

	return false
}

// SetEnableAdmin gets a reference to the given bool and assigns it to the EnableAdmin field.
func (o *Network) SetEnableAdmin(v bool) {
	o.EnableAdmin = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *Network) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *Network) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *Network) SetActive(v bool) {
	o.Active = &v
}

// GetDefaultNetwork returns the DefaultNetwork field value if set, zero value otherwise.
func (o *Network) GetDefaultNetwork() bool {
	if o == nil || o.DefaultNetwork == nil {
		var ret bool
		return ret
	}
	return *o.DefaultNetwork
}

// GetDefaultNetworkOk returns a tuple with the DefaultNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetDefaultNetworkOk() (*bool, bool) {
	if o == nil || o.DefaultNetwork == nil {
		return nil, false
	}
	return o.DefaultNetwork, true
}

// HasDefaultNetwork returns a boolean if a field has been set.
func (o *Network) HasDefaultNetwork() bool {
	if o != nil && o.DefaultNetwork != nil {
		return true
	}

	return false
}

// SetDefaultNetwork gets a reference to the given bool and assigns it to the DefaultNetwork field.
func (o *Network) SetDefaultNetwork(v bool) {
	o.DefaultNetwork = &v
}

// GetAssignPublicIp returns the AssignPublicIp field value if set, zero value otherwise.
func (o *Network) GetAssignPublicIp() bool {
	if o == nil || o.AssignPublicIp == nil {
		var ret bool
		return ret
	}
	return *o.AssignPublicIp
}

// GetAssignPublicIpOk returns a tuple with the AssignPublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetAssignPublicIpOk() (*bool, bool) {
	if o == nil || o.AssignPublicIp == nil {
		return nil, false
	}
	return o.AssignPublicIp, true
}

// HasAssignPublicIp returns a boolean if a field has been set.
func (o *Network) HasAssignPublicIp() bool {
	if o != nil && o.AssignPublicIp != nil {
		return true
	}

	return false
}

// SetAssignPublicIp gets a reference to the given bool and assigns it to the AssignPublicIp field.
func (o *Network) SetAssignPublicIp(v bool) {
	o.AssignPublicIp = &v
}

// GetNoProxy returns the NoProxy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetNoProxy() string {
	if o == nil || o.NoProxy.Get() == nil {
		var ret string
		return ret
	}
	return *o.NoProxy.Get()
}

// GetNoProxyOk returns a tuple with the NoProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetNoProxyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NoProxy.Get(), o.NoProxy.IsSet()
}

// HasNoProxy returns a boolean if a field has been set.
func (o *Network) HasNoProxy() bool {
	if o != nil && o.NoProxy.IsSet() {
		return true
	}

	return false
}

// SetNoProxy gets a reference to the given NullableString and assigns it to the NoProxy field.
func (o *Network) SetNoProxy(v string) {
	o.NoProxy.Set(&v)
}
// SetNoProxyNil sets the value for NoProxy to be an explicit nil
func (o *Network) SetNoProxyNil() {
	o.NoProxy.Set(nil)
}

// UnsetNoProxy ensures that no value is present for NoProxy, not even an explicit nil
func (o *Network) UnsetNoProxy() {
	o.NoProxy.Unset()
}

// GetApplianceUrlProxyBypass returns the ApplianceUrlProxyBypass field value if set, zero value otherwise.
func (o *Network) GetApplianceUrlProxyBypass() bool {
	if o == nil || o.ApplianceUrlProxyBypass == nil {
		var ret bool
		return ret
	}
	return *o.ApplianceUrlProxyBypass
}

// GetApplianceUrlProxyBypassOk returns a tuple with the ApplianceUrlProxyBypass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetApplianceUrlProxyBypassOk() (*bool, bool) {
	if o == nil || o.ApplianceUrlProxyBypass == nil {
		return nil, false
	}
	return o.ApplianceUrlProxyBypass, true
}

// HasApplianceUrlProxyBypass returns a boolean if a field has been set.
func (o *Network) HasApplianceUrlProxyBypass() bool {
	if o != nil && o.ApplianceUrlProxyBypass != nil {
		return true
	}

	return false
}

// SetApplianceUrlProxyBypass gets a reference to the given bool and assigns it to the ApplianceUrlProxyBypass field.
func (o *Network) SetApplianceUrlProxyBypass(v bool) {
	o.ApplianceUrlProxyBypass = &v
}

// GetZonePool returns the ZonePool field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Network) GetZonePool() InlineResponse20082LoadBalancerInstanceSslCert {
	if o == nil || o.ZonePool.Get() == nil {
		var ret InlineResponse20082LoadBalancerInstanceSslCert
		return ret
	}
	return *o.ZonePool.Get()
}

// GetZonePoolOk returns a tuple with the ZonePool field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Network) GetZonePoolOk() (*InlineResponse20082LoadBalancerInstanceSslCert, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ZonePool.Get(), o.ZonePool.IsSet()
}

// HasZonePool returns a boolean if a field has been set.
func (o *Network) HasZonePool() bool {
	if o != nil && o.ZonePool.IsSet() {
		return true
	}

	return false
}

// SetZonePool gets a reference to the given NullableInlineResponse20082LoadBalancerInstanceSslCert and assigns it to the ZonePool field.
func (o *Network) SetZonePool(v InlineResponse20082LoadBalancerInstanceSslCert) {
	o.ZonePool.Set(&v)
}
// SetZonePoolNil sets the value for ZonePool to be an explicit nil
func (o *Network) SetZonePoolNil() {
	o.ZonePool.Set(nil)
}

// UnsetZonePool ensures that no value is present for ZonePool, not even an explicit nil
func (o *Network) UnsetZonePool() {
	o.ZonePool.Unset()
}

// GetAllowStaticOverride returns the AllowStaticOverride field value if set, zero value otherwise.
func (o *Network) GetAllowStaticOverride() bool {
	if o == nil || o.AllowStaticOverride == nil {
		var ret bool
		return ret
	}
	return *o.AllowStaticOverride
}

// GetAllowStaticOverrideOk returns a tuple with the AllowStaticOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetAllowStaticOverrideOk() (*bool, bool) {
	if o == nil || o.AllowStaticOverride == nil {
		return nil, false
	}
	return o.AllowStaticOverride, true
}

// HasAllowStaticOverride returns a boolean if a field has been set.
func (o *Network) HasAllowStaticOverride() bool {
	if o != nil && o.AllowStaticOverride != nil {
		return true
	}

	return false
}

// SetAllowStaticOverride gets a reference to the given bool and assigns it to the AllowStaticOverride field.
func (o *Network) SetAllowStaticOverride(v bool) {
	o.AllowStaticOverride = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *Network) GetConfig() NetworkConfig {
	if o == nil || o.Config == nil {
		var ret NetworkConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetConfigOk() (*NetworkConfig, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *Network) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given NetworkConfig and assigns it to the Config field.
func (o *Network) SetConfig(v NetworkConfig) {
	o.Config = &v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *Network) GetTenants() []InlineResponse20040AppDeployInstance {
	if o == nil || o.Tenants == nil {
		var ret []InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetTenantsOk() (*[]InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Tenants == nil {
		return nil, false
	}
	return o.Tenants, true
}

// HasTenants returns a boolean if a field has been set.
func (o *Network) HasTenants() bool {
	if o != nil && o.Tenants != nil {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []InlineResponse20040AppDeployInstance and assigns it to the Tenants field.
func (o *Network) SetTenants(v []InlineResponse20040AppDeployInstance) {
	o.Tenants = &v
}

func (o Network) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.Zone != nil {
		toSerialize["zone"] = o.Zone
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	if o.Ipv4Enabled != nil {
		toSerialize["ipv4Enabled"] = o.Ipv4Enabled
	}
	if o.Ipv6Enabled != nil {
		toSerialize["ipv6Enabled"] = o.Ipv6Enabled
	}
	if o.Category.IsSet() {
		toSerialize["category"] = o.Category.Get()
	}
	if o.InterfaceName.IsSet() {
		toSerialize["interfaceName"] = o.InterfaceName.Get()
	}
	if o.BridgeName.IsSet() {
		toSerialize["bridgeName"] = o.BridgeName.Get()
	}
	if o.BridgeInterface.IsSet() {
		toSerialize["bridgeInterface"] = o.BridgeInterface.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.ExternalId.IsSet() {
		toSerialize["externalId"] = o.ExternalId.Get()
	}
	if o.InternalId.IsSet() {
		toSerialize["internalId"] = o.InternalId.Get()
	}
	if o.UniqueId.IsSet() {
		toSerialize["uniqueId"] = o.UniqueId.Get()
	}
	if o.ExternalType != nil {
		toSerialize["externalType"] = o.ExternalType
	}
	if o.RefUrl.IsSet() {
		toSerialize["refUrl"] = o.RefUrl.Get()
	}
	if o.RefType != nil {
		toSerialize["refType"] = o.RefType
	}
	if o.RefId != nil {
		toSerialize["refId"] = o.RefId
	}
	if o.VlanId.IsSet() {
		toSerialize["vlanId"] = o.VlanId.Get()
	}
	if o.VswitchName.IsSet() {
		toSerialize["vswitchName"] = o.VswitchName.Get()
	}
	if o.DhcpServer != nil {
		toSerialize["dhcpServer"] = o.DhcpServer
	}
	if o.DhcpIp.IsSet() {
		toSerialize["dhcpIp"] = o.DhcpIp.Get()
	}
	if o.DhcpServerIPv6 != nil {
		toSerialize["dhcpServerIPv6"] = o.DhcpServerIPv6
	}
	if o.Gateway.IsSet() {
		toSerialize["gateway"] = o.Gateway.Get()
	}
	if o.Netmask.IsSet() {
		toSerialize["netmask"] = o.Netmask.Get()
	}
	if o.Broadcast.IsSet() {
		toSerialize["broadcast"] = o.Broadcast.Get()
	}
	if o.SubnetAddress.IsSet() {
		toSerialize["subnetAddress"] = o.SubnetAddress.Get()
	}
	if o.DnsPrimary.IsSet() {
		toSerialize["dnsPrimary"] = o.DnsPrimary.Get()
	}
	if o.DnsSecondary.IsSet() {
		toSerialize["dnsSecondary"] = o.DnsSecondary.Get()
	}
	if o.Cidr != nil {
		toSerialize["cidr"] = o.Cidr
	}
	if o.GatewayIPv6.IsSet() {
		toSerialize["gatewayIPv6"] = o.GatewayIPv6.Get()
	}
	if o.NetmaskIPv6.IsSet() {
		toSerialize["netmaskIPv6"] = o.NetmaskIPv6.Get()
	}
	if o.DnsPrimaryIPv6.IsSet() {
		toSerialize["dnsPrimaryIPv6"] = o.DnsPrimaryIPv6.Get()
	}
	if o.DnsSecondaryIPv6.IsSet() {
		toSerialize["dnsSecondaryIPv6"] = o.DnsSecondaryIPv6.Get()
	}
	if o.CidrIPv6.IsSet() {
		toSerialize["cidrIPv6"] = o.CidrIPv6.Get()
	}
	if o.TftpServer.IsSet() {
		toSerialize["tftpServer"] = o.TftpServer.Get()
	}
	if o.BootFile.IsSet() {
		toSerialize["bootFile"] = o.BootFile.Get()
	}
	if o.SwitchId.IsSet() {
		toSerialize["switchId"] = o.SwitchId.Get()
	}
	if o.FabricId.IsSet() {
		toSerialize["fabricId"] = o.FabricId.Get()
	}
	if o.NetworkRole.IsSet() {
		toSerialize["networkRole"] = o.NetworkRole.Get()
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.AvailabilityZone.IsSet() {
		toSerialize["availabilityZone"] = o.AvailabilityZone.Get()
	}
	if o.Pool != nil {
		toSerialize["pool"] = o.Pool
	}
	if o.PoolIPv6 != nil {
		toSerialize["poolIPv6"] = o.PoolIPv6
	}
	if o.NetworkProxy.IsSet() {
		toSerialize["networkProxy"] = o.NetworkProxy.Get()
	}
	if o.NetworkDomain.IsSet() {
		toSerialize["networkDomain"] = o.NetworkDomain.Get()
	}
	if o.SearchDomains.IsSet() {
		toSerialize["searchDomains"] = o.SearchDomains.Get()
	}
	if o.PrefixLength.IsSet() {
		toSerialize["prefixLength"] = o.PrefixLength.Get()
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if o.EnableAdmin != nil {
		toSerialize["enableAdmin"] = o.EnableAdmin
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.DefaultNetwork != nil {
		toSerialize["defaultNetwork"] = o.DefaultNetwork
	}
	if o.AssignPublicIp != nil {
		toSerialize["assignPublicIp"] = o.AssignPublicIp
	}
	if o.NoProxy.IsSet() {
		toSerialize["noProxy"] = o.NoProxy.Get()
	}
	if o.ApplianceUrlProxyBypass != nil {
		toSerialize["applianceUrlProxyBypass"] = o.ApplianceUrlProxyBypass
	}
	if o.ZonePool.IsSet() {
		toSerialize["zonePool"] = o.ZonePool.Get()
	}
	if o.AllowStaticOverride != nil {
		toSerialize["allowStaticOverride"] = o.AllowStaticOverride
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.Tenants != nil {
		toSerialize["tenants"] = o.Tenants
	}
	return json.Marshal(toSerialize)
}

type NullableNetwork struct {
	value *Network
	isSet bool
}

func (v NullableNetwork) Get() *Network {
	return v.value
}

func (v *NullableNetwork) Set(val *Network) {
	v.value = val
	v.isSet = true
}

func (v NullableNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetwork(val *Network) *NullableNetwork {
	return &NullableNetwork{value: val, isSet: true}
}

func (v NullableNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


