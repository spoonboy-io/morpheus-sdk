/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetworkCreateType struct for NetworkCreateType
type NetworkCreateType struct {
	// Network Type ID
	Id int64 `json:"id"`
}

// NewNetworkCreateType instantiates a new NetworkCreateType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkCreateType(id int64, ) *NetworkCreateType {
	this := NetworkCreateType{}
	this.Id = id
	return &this
}

// NewNetworkCreateTypeWithDefaults instantiates a new NetworkCreateType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkCreateTypeWithDefaults() *NetworkCreateType {
	this := NetworkCreateType{}
	return &this
}

// GetId returns the Id field value
func (o *NetworkCreateType) GetId() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *NetworkCreateType) GetIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *NetworkCreateType) SetId(v int64) {
	o.Id = v
}

func (o NetworkCreateType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkCreateType struct {
	value *NetworkCreateType
	isSet bool
}

func (v NullableNetworkCreateType) Get() *NetworkCreateType {
	return v.value
}

func (v *NullableNetworkCreateType) Set(val *NetworkCreateType) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkCreateType) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkCreateType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkCreateType(val *NetworkCreateType) *NullableNetworkCreateType {
	return &NullableNetworkCreateType{value: val, isSet: true}
}

func (v NullableNetworkCreateType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkCreateType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


