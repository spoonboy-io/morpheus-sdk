/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SpecTemplateUpdateFile File, object specifying file type and content
type SpecTemplateUpdateFile struct {
	// File Source i.e. local, repository, url.
	SourceType *string `json:"sourceType,omitempty"`
	// File content, the template text. Only required when sourceType is `local`.
	Content *string `json:"content,omitempty"`
	// Content Path, the repo file location or url. Required when sourceType is repository or url.
	ContentPath *string `json:"contentPath,omitempty"`
	// Content Ref, the branch/tag. Only used when sourceType is repo.
	ContentRef *string `json:"contentRef,omitempty"`
	Repository *SpecTemplateUpdateFileRepository `json:"repository,omitempty"`
}

// NewSpecTemplateUpdateFile instantiates a new SpecTemplateUpdateFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpecTemplateUpdateFile() *SpecTemplateUpdateFile {
	this := SpecTemplateUpdateFile{}
	var sourceType string = "local"
	this.SourceType = &sourceType
	return &this
}

// NewSpecTemplateUpdateFileWithDefaults instantiates a new SpecTemplateUpdateFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpecTemplateUpdateFileWithDefaults() *SpecTemplateUpdateFile {
	this := SpecTemplateUpdateFile{}
	var sourceType string = "local"
	this.SourceType = &sourceType
	return &this
}

// GetSourceType returns the SourceType field value if set, zero value otherwise.
func (o *SpecTemplateUpdateFile) GetSourceType() string {
	if o == nil || o.SourceType == nil {
		var ret string
		return ret
	}
	return *o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecTemplateUpdateFile) GetSourceTypeOk() (*string, bool) {
	if o == nil || o.SourceType == nil {
		return nil, false
	}
	return o.SourceType, true
}

// HasSourceType returns a boolean if a field has been set.
func (o *SpecTemplateUpdateFile) HasSourceType() bool {
	if o != nil && o.SourceType != nil {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given string and assigns it to the SourceType field.
func (o *SpecTemplateUpdateFile) SetSourceType(v string) {
	o.SourceType = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *SpecTemplateUpdateFile) GetContent() string {
	if o == nil || o.Content == nil {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecTemplateUpdateFile) GetContentOk() (*string, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *SpecTemplateUpdateFile) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *SpecTemplateUpdateFile) SetContent(v string) {
	o.Content = &v
}

// GetContentPath returns the ContentPath field value if set, zero value otherwise.
func (o *SpecTemplateUpdateFile) GetContentPath() string {
	if o == nil || o.ContentPath == nil {
		var ret string
		return ret
	}
	return *o.ContentPath
}

// GetContentPathOk returns a tuple with the ContentPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecTemplateUpdateFile) GetContentPathOk() (*string, bool) {
	if o == nil || o.ContentPath == nil {
		return nil, false
	}
	return o.ContentPath, true
}

// HasContentPath returns a boolean if a field has been set.
func (o *SpecTemplateUpdateFile) HasContentPath() bool {
	if o != nil && o.ContentPath != nil {
		return true
	}

	return false
}

// SetContentPath gets a reference to the given string and assigns it to the ContentPath field.
func (o *SpecTemplateUpdateFile) SetContentPath(v string) {
	o.ContentPath = &v
}

// GetContentRef returns the ContentRef field value if set, zero value otherwise.
func (o *SpecTemplateUpdateFile) GetContentRef() string {
	if o == nil || o.ContentRef == nil {
		var ret string
		return ret
	}
	return *o.ContentRef
}

// GetContentRefOk returns a tuple with the ContentRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecTemplateUpdateFile) GetContentRefOk() (*string, bool) {
	if o == nil || o.ContentRef == nil {
		return nil, false
	}
	return o.ContentRef, true
}

// HasContentRef returns a boolean if a field has been set.
func (o *SpecTemplateUpdateFile) HasContentRef() bool {
	if o != nil && o.ContentRef != nil {
		return true
	}

	return false
}

// SetContentRef gets a reference to the given string and assigns it to the ContentRef field.
func (o *SpecTemplateUpdateFile) SetContentRef(v string) {
	o.ContentRef = &v
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *SpecTemplateUpdateFile) GetRepository() SpecTemplateUpdateFileRepository {
	if o == nil || o.Repository == nil {
		var ret SpecTemplateUpdateFileRepository
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecTemplateUpdateFile) GetRepositoryOk() (*SpecTemplateUpdateFileRepository, bool) {
	if o == nil || o.Repository == nil {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *SpecTemplateUpdateFile) HasRepository() bool {
	if o != nil && o.Repository != nil {
		return true
	}

	return false
}

// SetRepository gets a reference to the given SpecTemplateUpdateFileRepository and assigns it to the Repository field.
func (o *SpecTemplateUpdateFile) SetRepository(v SpecTemplateUpdateFileRepository) {
	o.Repository = &v
}

func (o SpecTemplateUpdateFile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SourceType != nil {
		toSerialize["sourceType"] = o.SourceType
	}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	if o.ContentPath != nil {
		toSerialize["contentPath"] = o.ContentPath
	}
	if o.ContentRef != nil {
		toSerialize["contentRef"] = o.ContentRef
	}
	if o.Repository != nil {
		toSerialize["repository"] = o.Repository
	}
	return json.Marshal(toSerialize)
}

type NullableSpecTemplateUpdateFile struct {
	value *SpecTemplateUpdateFile
	isSet bool
}

func (v NullableSpecTemplateUpdateFile) Get() *SpecTemplateUpdateFile {
	return v.value
}

func (v *NullableSpecTemplateUpdateFile) Set(val *SpecTemplateUpdateFile) {
	v.value = val
	v.isSet = true
}

func (v NullableSpecTemplateUpdateFile) IsSet() bool {
	return v.isSet
}

func (v *NullableSpecTemplateUpdateFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpecTemplateUpdateFile(val *SpecTemplateUpdateFile) *NullableSpecTemplateUpdateFile {
	return &NullableSpecTemplateUpdateFile{value: val, isSet: true}
}

func (v NullableSpecTemplateUpdateFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpecTemplateUpdateFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


