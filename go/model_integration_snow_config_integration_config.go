/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IntegrationSNOWConfigIntegrationConfig struct for IntegrationSNOWConfigIntegrationConfig
type IntegrationSNOWConfigIntegrationConfig struct {
	ServiceNowCustomCmdbMapping *[]map[string]interface{} `json:"serviceNowCustomCmdbMapping,omitempty"`
	ServiceNowCmdbClassMapping *[]map[string]interface{} `json:"serviceNowCmdbClassMapping,omitempty"`
	ServiceNowCMDBBusinessObject *[]map[string]interface{} `json:"serviceNowCMDBBusinessObject,omitempty"`
	// Ignore SSL Errors.
	IgnoreCertErrors *bool `json:"ignoreCertErrors,omitempty"`
}

// NewIntegrationSNOWConfigIntegrationConfig instantiates a new IntegrationSNOWConfigIntegrationConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationSNOWConfigIntegrationConfig() *IntegrationSNOWConfigIntegrationConfig {
	this := IntegrationSNOWConfigIntegrationConfig{}
	var ignoreCertErrors bool = false
	this.IgnoreCertErrors = &ignoreCertErrors
	return &this
}

// NewIntegrationSNOWConfigIntegrationConfigWithDefaults instantiates a new IntegrationSNOWConfigIntegrationConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationSNOWConfigIntegrationConfigWithDefaults() *IntegrationSNOWConfigIntegrationConfig {
	this := IntegrationSNOWConfigIntegrationConfig{}
	var ignoreCertErrors bool = false
	this.IgnoreCertErrors = &ignoreCertErrors
	return &this
}

// GetServiceNowCustomCmdbMapping returns the ServiceNowCustomCmdbMapping field value if set, zero value otherwise.
func (o *IntegrationSNOWConfigIntegrationConfig) GetServiceNowCustomCmdbMapping() []map[string]interface{} {
	if o == nil || o.ServiceNowCustomCmdbMapping == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.ServiceNowCustomCmdbMapping
}

// GetServiceNowCustomCmdbMappingOk returns a tuple with the ServiceNowCustomCmdbMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationSNOWConfigIntegrationConfig) GetServiceNowCustomCmdbMappingOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.ServiceNowCustomCmdbMapping == nil {
		return nil, false
	}
	return o.ServiceNowCustomCmdbMapping, true
}

// HasServiceNowCustomCmdbMapping returns a boolean if a field has been set.
func (o *IntegrationSNOWConfigIntegrationConfig) HasServiceNowCustomCmdbMapping() bool {
	if o != nil && o.ServiceNowCustomCmdbMapping != nil {
		return true
	}

	return false
}

// SetServiceNowCustomCmdbMapping gets a reference to the given []map[string]interface{} and assigns it to the ServiceNowCustomCmdbMapping field.
func (o *IntegrationSNOWConfigIntegrationConfig) SetServiceNowCustomCmdbMapping(v []map[string]interface{}) {
	o.ServiceNowCustomCmdbMapping = &v
}

// GetServiceNowCmdbClassMapping returns the ServiceNowCmdbClassMapping field value if set, zero value otherwise.
func (o *IntegrationSNOWConfigIntegrationConfig) GetServiceNowCmdbClassMapping() []map[string]interface{} {
	if o == nil || o.ServiceNowCmdbClassMapping == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.ServiceNowCmdbClassMapping
}

// GetServiceNowCmdbClassMappingOk returns a tuple with the ServiceNowCmdbClassMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationSNOWConfigIntegrationConfig) GetServiceNowCmdbClassMappingOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.ServiceNowCmdbClassMapping == nil {
		return nil, false
	}
	return o.ServiceNowCmdbClassMapping, true
}

// HasServiceNowCmdbClassMapping returns a boolean if a field has been set.
func (o *IntegrationSNOWConfigIntegrationConfig) HasServiceNowCmdbClassMapping() bool {
	if o != nil && o.ServiceNowCmdbClassMapping != nil {
		return true
	}

	return false
}

// SetServiceNowCmdbClassMapping gets a reference to the given []map[string]interface{} and assigns it to the ServiceNowCmdbClassMapping field.
func (o *IntegrationSNOWConfigIntegrationConfig) SetServiceNowCmdbClassMapping(v []map[string]interface{}) {
	o.ServiceNowCmdbClassMapping = &v
}

// GetServiceNowCMDBBusinessObject returns the ServiceNowCMDBBusinessObject field value if set, zero value otherwise.
func (o *IntegrationSNOWConfigIntegrationConfig) GetServiceNowCMDBBusinessObject() []map[string]interface{} {
	if o == nil || o.ServiceNowCMDBBusinessObject == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.ServiceNowCMDBBusinessObject
}

// GetServiceNowCMDBBusinessObjectOk returns a tuple with the ServiceNowCMDBBusinessObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationSNOWConfigIntegrationConfig) GetServiceNowCMDBBusinessObjectOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.ServiceNowCMDBBusinessObject == nil {
		return nil, false
	}
	return o.ServiceNowCMDBBusinessObject, true
}

// HasServiceNowCMDBBusinessObject returns a boolean if a field has been set.
func (o *IntegrationSNOWConfigIntegrationConfig) HasServiceNowCMDBBusinessObject() bool {
	if o != nil && o.ServiceNowCMDBBusinessObject != nil {
		return true
	}

	return false
}

// SetServiceNowCMDBBusinessObject gets a reference to the given []map[string]interface{} and assigns it to the ServiceNowCMDBBusinessObject field.
func (o *IntegrationSNOWConfigIntegrationConfig) SetServiceNowCMDBBusinessObject(v []map[string]interface{}) {
	o.ServiceNowCMDBBusinessObject = &v
}

// GetIgnoreCertErrors returns the IgnoreCertErrors field value if set, zero value otherwise.
func (o *IntegrationSNOWConfigIntegrationConfig) GetIgnoreCertErrors() bool {
	if o == nil || o.IgnoreCertErrors == nil {
		var ret bool
		return ret
	}
	return *o.IgnoreCertErrors
}

// GetIgnoreCertErrorsOk returns a tuple with the IgnoreCertErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationSNOWConfigIntegrationConfig) GetIgnoreCertErrorsOk() (*bool, bool) {
	if o == nil || o.IgnoreCertErrors == nil {
		return nil, false
	}
	return o.IgnoreCertErrors, true
}

// HasIgnoreCertErrors returns a boolean if a field has been set.
func (o *IntegrationSNOWConfigIntegrationConfig) HasIgnoreCertErrors() bool {
	if o != nil && o.IgnoreCertErrors != nil {
		return true
	}

	return false
}

// SetIgnoreCertErrors gets a reference to the given bool and assigns it to the IgnoreCertErrors field.
func (o *IntegrationSNOWConfigIntegrationConfig) SetIgnoreCertErrors(v bool) {
	o.IgnoreCertErrors = &v
}

func (o IntegrationSNOWConfigIntegrationConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServiceNowCustomCmdbMapping != nil {
		toSerialize["serviceNowCustomCmdbMapping"] = o.ServiceNowCustomCmdbMapping
	}
	if o.ServiceNowCmdbClassMapping != nil {
		toSerialize["serviceNowCmdbClassMapping"] = o.ServiceNowCmdbClassMapping
	}
	if o.ServiceNowCMDBBusinessObject != nil {
		toSerialize["serviceNowCMDBBusinessObject"] = o.ServiceNowCMDBBusinessObject
	}
	if o.IgnoreCertErrors != nil {
		toSerialize["ignoreCertErrors"] = o.IgnoreCertErrors
	}
	return json.Marshal(toSerialize)
}

type NullableIntegrationSNOWConfigIntegrationConfig struct {
	value *IntegrationSNOWConfigIntegrationConfig
	isSet bool
}

func (v NullableIntegrationSNOWConfigIntegrationConfig) Get() *IntegrationSNOWConfigIntegrationConfig {
	return v.value
}

func (v *NullableIntegrationSNOWConfigIntegrationConfig) Set(val *IntegrationSNOWConfigIntegrationConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationSNOWConfigIntegrationConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationSNOWConfigIntegrationConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationSNOWConfigIntegrationConfig(val *IntegrationSNOWConfigIntegrationConfig) *NullableIntegrationSNOWConfigIntegrationConfig {
	return &NullableIntegrationSNOWConfigIntegrationConfig{value: val, isSet: true}
}

func (v NullableIntegrationSNOWConfigIntegrationConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationSNOWConfigIntegrationConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


