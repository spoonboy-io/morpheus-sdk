/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ContainerTypeContainerPorts struct for ContainerTypeContainerPorts
type ContainerTypeContainerPorts struct {
	Name *string `json:"name,omitempty"`
	Port *int64 `json:"port,omitempty"`
	LoadBalanceProtocol NullableString `json:"loadBalanceProtocol,omitempty"`
}

// NewContainerTypeContainerPorts instantiates a new ContainerTypeContainerPorts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerTypeContainerPorts() *ContainerTypeContainerPorts {
	this := ContainerTypeContainerPorts{}
	return &this
}

// NewContainerTypeContainerPortsWithDefaults instantiates a new ContainerTypeContainerPorts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerTypeContainerPortsWithDefaults() *ContainerTypeContainerPorts {
	this := ContainerTypeContainerPorts{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ContainerTypeContainerPorts) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeContainerPorts) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ContainerTypeContainerPorts) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ContainerTypeContainerPorts) SetName(v string) {
	o.Name = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ContainerTypeContainerPorts) GetPort() int64 {
	if o == nil || o.Port == nil {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeContainerPorts) GetPortOk() (*int64, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *ContainerTypeContainerPorts) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *ContainerTypeContainerPorts) SetPort(v int64) {
	o.Port = &v
}

// GetLoadBalanceProtocol returns the LoadBalanceProtocol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContainerTypeContainerPorts) GetLoadBalanceProtocol() string {
	if o == nil || o.LoadBalanceProtocol.Get() == nil {
		var ret string
		return ret
	}
	return *o.LoadBalanceProtocol.Get()
}

// GetLoadBalanceProtocolOk returns a tuple with the LoadBalanceProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerTypeContainerPorts) GetLoadBalanceProtocolOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LoadBalanceProtocol.Get(), o.LoadBalanceProtocol.IsSet()
}

// HasLoadBalanceProtocol returns a boolean if a field has been set.
func (o *ContainerTypeContainerPorts) HasLoadBalanceProtocol() bool {
	if o != nil && o.LoadBalanceProtocol.IsSet() {
		return true
	}

	return false
}

// SetLoadBalanceProtocol gets a reference to the given NullableString and assigns it to the LoadBalanceProtocol field.
func (o *ContainerTypeContainerPorts) SetLoadBalanceProtocol(v string) {
	o.LoadBalanceProtocol.Set(&v)
}
// SetLoadBalanceProtocolNil sets the value for LoadBalanceProtocol to be an explicit nil
func (o *ContainerTypeContainerPorts) SetLoadBalanceProtocolNil() {
	o.LoadBalanceProtocol.Set(nil)
}

// UnsetLoadBalanceProtocol ensures that no value is present for LoadBalanceProtocol, not even an explicit nil
func (o *ContainerTypeContainerPorts) UnsetLoadBalanceProtocol() {
	o.LoadBalanceProtocol.Unset()
}

func (o ContainerTypeContainerPorts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.LoadBalanceProtocol.IsSet() {
		toSerialize["loadBalanceProtocol"] = o.LoadBalanceProtocol.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableContainerTypeContainerPorts struct {
	value *ContainerTypeContainerPorts
	isSet bool
}

func (v NullableContainerTypeContainerPorts) Get() *ContainerTypeContainerPorts {
	return v.value
}

func (v *NullableContainerTypeContainerPorts) Set(val *ContainerTypeContainerPorts) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerTypeContainerPorts) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerTypeContainerPorts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerTypeContainerPorts(val *ContainerTypeContainerPorts) *NullableContainerTypeContainerPorts {
	return &NullableContainerTypeContainerPorts{value: val, isSet: true}
}

func (v NullableContainerTypeContainerPorts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerTypeContainerPorts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


