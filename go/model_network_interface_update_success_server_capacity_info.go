/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetworkInterfaceUpdateSuccessServerCapacityInfo struct for NetworkInterfaceUpdateSuccessServerCapacityInfo
type NetworkInterfaceUpdateSuccessServerCapacityInfo struct {
	Id *int64 `json:"id,omitempty"`
	MaxMemory *int64 `json:"maxMemory,omitempty"`
	Server *ApiBlueprintsIdUpdatePermissionsResourcePermissionSites `json:"server,omitempty"`
	UsedStorage *int64 `json:"usedStorage,omitempty"`
	Version NullableString `json:"version,omitempty"`
	MaxCpu NullableString `json:"maxCpu,omitempty"`
	UsedCores *int64 `json:"usedCores,omitempty"`
	UsedMemory *int64 `json:"usedMemory,omitempty"`
	MaxCores *int64 `json:"maxCores,omitempty"`
	MaxStorage *int64 `json:"maxStorage,omitempty"`
}

// NewNetworkInterfaceUpdateSuccessServerCapacityInfo instantiates a new NetworkInterfaceUpdateSuccessServerCapacityInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkInterfaceUpdateSuccessServerCapacityInfo() *NetworkInterfaceUpdateSuccessServerCapacityInfo {
	this := NetworkInterfaceUpdateSuccessServerCapacityInfo{}
	return &this
}

// NewNetworkInterfaceUpdateSuccessServerCapacityInfoWithDefaults instantiates a new NetworkInterfaceUpdateSuccessServerCapacityInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkInterfaceUpdateSuccessServerCapacityInfoWithDefaults() *NetworkInterfaceUpdateSuccessServerCapacityInfo {
	this := NetworkInterfaceUpdateSuccessServerCapacityInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) SetId(v int64) {
	o.Id = &v
}

// GetMaxMemory returns the MaxMemory field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) GetMaxMemory() int64 {
	if o == nil || o.MaxMemory == nil {
		var ret int64
		return ret
	}
	return *o.MaxMemory
}

// GetMaxMemoryOk returns a tuple with the MaxMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) GetMaxMemoryOk() (*int64, bool) {
	if o == nil || o.MaxMemory == nil {
		return nil, false
	}
	return o.MaxMemory, true
}

// HasMaxMemory returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) HasMaxMemory() bool {
	if o != nil && o.MaxMemory != nil {
		return true
	}

	return false
}

// SetMaxMemory gets a reference to the given int64 and assigns it to the MaxMemory field.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) SetMaxMemory(v int64) {
	o.MaxMemory = &v
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) GetServer() ApiBlueprintsIdUpdatePermissionsResourcePermissionSites {
	if o == nil || o.Server == nil {
		var ret ApiBlueprintsIdUpdatePermissionsResourcePermissionSites
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) GetServerOk() (*ApiBlueprintsIdUpdatePermissionsResourcePermissionSites, bool) {
	if o == nil || o.Server == nil {
		return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) HasServer() bool {
	if o != nil && o.Server != nil {
		return true
	}

	return false
}

// SetServer gets a reference to the given ApiBlueprintsIdUpdatePermissionsResourcePermissionSites and assigns it to the Server field.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) SetServer(v ApiBlueprintsIdUpdatePermissionsResourcePermissionSites) {
	o.Server = &v
}

// GetUsedStorage returns the UsedStorage field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) GetUsedStorage() int64 {
	if o == nil || o.UsedStorage == nil {
		var ret int64
		return ret
	}
	return *o.UsedStorage
}

// GetUsedStorageOk returns a tuple with the UsedStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) GetUsedStorageOk() (*int64, bool) {
	if o == nil || o.UsedStorage == nil {
		return nil, false
	}
	return o.UsedStorage, true
}

// HasUsedStorage returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) HasUsedStorage() bool {
	if o != nil && o.UsedStorage != nil {
		return true
	}

	return false
}

// SetUsedStorage gets a reference to the given int64 and assigns it to the UsedStorage field.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) SetUsedStorage(v int64) {
	o.UsedStorage = &v
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) GetVersion() string {
	if o == nil || o.Version.Get() == nil {
		var ret string
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableString and assigns it to the Version field.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) SetVersion(v string) {
	o.Version.Set(&v)
}
// SetVersionNil sets the value for Version to be an explicit nil
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) UnsetVersion() {
	o.Version.Unset()
}

// GetMaxCpu returns the MaxCpu field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) GetMaxCpu() string {
	if o == nil || o.MaxCpu.Get() == nil {
		var ret string
		return ret
	}
	return *o.MaxCpu.Get()
}

// GetMaxCpuOk returns a tuple with the MaxCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) GetMaxCpuOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxCpu.Get(), o.MaxCpu.IsSet()
}

// HasMaxCpu returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) HasMaxCpu() bool {
	if o != nil && o.MaxCpu.IsSet() {
		return true
	}

	return false
}

// SetMaxCpu gets a reference to the given NullableString and assigns it to the MaxCpu field.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) SetMaxCpu(v string) {
	o.MaxCpu.Set(&v)
}
// SetMaxCpuNil sets the value for MaxCpu to be an explicit nil
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) SetMaxCpuNil() {
	o.MaxCpu.Set(nil)
}

// UnsetMaxCpu ensures that no value is present for MaxCpu, not even an explicit nil
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) UnsetMaxCpu() {
	o.MaxCpu.Unset()
}

// GetUsedCores returns the UsedCores field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) GetUsedCores() int64 {
	if o == nil || o.UsedCores == nil {
		var ret int64
		return ret
	}
	return *o.UsedCores
}

// GetUsedCoresOk returns a tuple with the UsedCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) GetUsedCoresOk() (*int64, bool) {
	if o == nil || o.UsedCores == nil {
		return nil, false
	}
	return o.UsedCores, true
}

// HasUsedCores returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) HasUsedCores() bool {
	if o != nil && o.UsedCores != nil {
		return true
	}

	return false
}

// SetUsedCores gets a reference to the given int64 and assigns it to the UsedCores field.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) SetUsedCores(v int64) {
	o.UsedCores = &v
}

// GetUsedMemory returns the UsedMemory field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) GetUsedMemory() int64 {
	if o == nil || o.UsedMemory == nil {
		var ret int64
		return ret
	}
	return *o.UsedMemory
}

// GetUsedMemoryOk returns a tuple with the UsedMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) GetUsedMemoryOk() (*int64, bool) {
	if o == nil || o.UsedMemory == nil {
		return nil, false
	}
	return o.UsedMemory, true
}

// HasUsedMemory returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) HasUsedMemory() bool {
	if o != nil && o.UsedMemory != nil {
		return true
	}

	return false
}

// SetUsedMemory gets a reference to the given int64 and assigns it to the UsedMemory field.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) SetUsedMemory(v int64) {
	o.UsedMemory = &v
}

// GetMaxCores returns the MaxCores field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) GetMaxCores() int64 {
	if o == nil || o.MaxCores == nil {
		var ret int64
		return ret
	}
	return *o.MaxCores
}

// GetMaxCoresOk returns a tuple with the MaxCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) GetMaxCoresOk() (*int64, bool) {
	if o == nil || o.MaxCores == nil {
		return nil, false
	}
	return o.MaxCores, true
}

// HasMaxCores returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) HasMaxCores() bool {
	if o != nil && o.MaxCores != nil {
		return true
	}

	return false
}

// SetMaxCores gets a reference to the given int64 and assigns it to the MaxCores field.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) SetMaxCores(v int64) {
	o.MaxCores = &v
}

// GetMaxStorage returns the MaxStorage field value if set, zero value otherwise.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) GetMaxStorage() int64 {
	if o == nil || o.MaxStorage == nil {
		var ret int64
		return ret
	}
	return *o.MaxStorage
}

// GetMaxStorageOk returns a tuple with the MaxStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) GetMaxStorageOk() (*int64, bool) {
	if o == nil || o.MaxStorage == nil {
		return nil, false
	}
	return o.MaxStorage, true
}

// HasMaxStorage returns a boolean if a field has been set.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) HasMaxStorage() bool {
	if o != nil && o.MaxStorage != nil {
		return true
	}

	return false
}

// SetMaxStorage gets a reference to the given int64 and assigns it to the MaxStorage field.
func (o *NetworkInterfaceUpdateSuccessServerCapacityInfo) SetMaxStorage(v int64) {
	o.MaxStorage = &v
}

func (o NetworkInterfaceUpdateSuccessServerCapacityInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MaxMemory != nil {
		toSerialize["maxMemory"] = o.MaxMemory
	}
	if o.Server != nil {
		toSerialize["server"] = o.Server
	}
	if o.UsedStorage != nil {
		toSerialize["usedStorage"] = o.UsedStorage
	}
	if o.Version.IsSet() {
		toSerialize["version"] = o.Version.Get()
	}
	if o.MaxCpu.IsSet() {
		toSerialize["maxCpu"] = o.MaxCpu.Get()
	}
	if o.UsedCores != nil {
		toSerialize["usedCores"] = o.UsedCores
	}
	if o.UsedMemory != nil {
		toSerialize["usedMemory"] = o.UsedMemory
	}
	if o.MaxCores != nil {
		toSerialize["maxCores"] = o.MaxCores
	}
	if o.MaxStorage != nil {
		toSerialize["maxStorage"] = o.MaxStorage
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkInterfaceUpdateSuccessServerCapacityInfo struct {
	value *NetworkInterfaceUpdateSuccessServerCapacityInfo
	isSet bool
}

func (v NullableNetworkInterfaceUpdateSuccessServerCapacityInfo) Get() *NetworkInterfaceUpdateSuccessServerCapacityInfo {
	return v.value
}

func (v *NullableNetworkInterfaceUpdateSuccessServerCapacityInfo) Set(val *NetworkInterfaceUpdateSuccessServerCapacityInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkInterfaceUpdateSuccessServerCapacityInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkInterfaceUpdateSuccessServerCapacityInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkInterfaceUpdateSuccessServerCapacityInfo(val *NetworkInterfaceUpdateSuccessServerCapacityInfo) *NullableNetworkInterfaceUpdateSuccessServerCapacityInfo {
	return &NullableNetworkInterfaceUpdateSuccessServerCapacityInfo{value: val, isSet: true}
}

func (v NullableNetworkInterfaceUpdateSuccessServerCapacityInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkInterfaceUpdateSuccessServerCapacityInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


