/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddArchiveFileLink200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddArchiveFileLink200Response{}

// AddArchiveFileLink200Response struct for AddArchiveFileLink200Response
type AddArchiveFileLink200Response struct {
	Success *bool `json:"success,omitempty"`
	SecretAccessKey *string `json:"secretAccessKey,omitempty"`
}

// NewAddArchiveFileLink200Response instantiates a new AddArchiveFileLink200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddArchiveFileLink200Response() *AddArchiveFileLink200Response {
	this := AddArchiveFileLink200Response{}
	return &this
}

// NewAddArchiveFileLink200ResponseWithDefaults instantiates a new AddArchiveFileLink200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddArchiveFileLink200ResponseWithDefaults() *AddArchiveFileLink200Response {
	this := AddArchiveFileLink200Response{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddArchiveFileLink200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddArchiveFileLink200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *AddArchiveFileLink200Response) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddArchiveFileLink200Response) SetSuccess(v bool) {
	o.Success = &v
}

// GetSecretAccessKey returns the SecretAccessKey field value if set, zero value otherwise.
func (o *AddArchiveFileLink200Response) GetSecretAccessKey() string {
	if o == nil || IsNil(o.SecretAccessKey) {
		var ret string
		return ret
	}
	return *o.SecretAccessKey
}

// GetSecretAccessKeyOk returns a tuple with the SecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddArchiveFileLink200Response) GetSecretAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretAccessKey) {
		return nil, false
	}
	return o.SecretAccessKey, true
}

// HasSecretAccessKey returns a boolean if a field has been set.
func (o *AddArchiveFileLink200Response) HasSecretAccessKey() bool {
	if o != nil && !IsNil(o.SecretAccessKey) {
		return true
	}

	return false
}

// SetSecretAccessKey gets a reference to the given string and assigns it to the SecretAccessKey field.
func (o *AddArchiveFileLink200Response) SetSecretAccessKey(v string) {
	o.SecretAccessKey = &v
}

func (o AddArchiveFileLink200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddArchiveFileLink200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.SecretAccessKey) {
		toSerialize["secretAccessKey"] = o.SecretAccessKey
	}
	return toSerialize, nil
}

type NullableAddArchiveFileLink200Response struct {
	value *AddArchiveFileLink200Response
	isSet bool
}

func (v NullableAddArchiveFileLink200Response) Get() *AddArchiveFileLink200Response {
	return v.value
}

func (v *NullableAddArchiveFileLink200Response) Set(val *AddArchiveFileLink200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddArchiveFileLink200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddArchiveFileLink200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddArchiveFileLink200Response(val *AddArchiveFileLink200Response) *NullableAddArchiveFileLink200Response {
	return &NullableAddArchiveFileLink200Response{value: val, isSet: true}
}

func (v NullableAddArchiveFileLink200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddArchiveFileLink200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


