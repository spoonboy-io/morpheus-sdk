/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject160 struct for InlineObject160
type InlineObject160 struct {
	NetworkPool *NetworkPoolCreate `json:"networkPool,omitempty"`
}

// NewInlineObject160 instantiates a new InlineObject160 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject160() *InlineObject160 {
	this := InlineObject160{}
	return &this
}

// NewInlineObject160WithDefaults instantiates a new InlineObject160 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject160WithDefaults() *InlineObject160 {
	this := InlineObject160{}
	return &this
}

// GetNetworkPool returns the NetworkPool field value if set, zero value otherwise.
func (o *InlineObject160) GetNetworkPool() NetworkPoolCreate {
	if o == nil || o.NetworkPool == nil {
		var ret NetworkPoolCreate
		return ret
	}
	return *o.NetworkPool
}

// GetNetworkPoolOk returns a tuple with the NetworkPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject160) GetNetworkPoolOk() (*NetworkPoolCreate, bool) {
	if o == nil || o.NetworkPool == nil {
		return nil, false
	}
	return o.NetworkPool, true
}

// HasNetworkPool returns a boolean if a field has been set.
func (o *InlineObject160) HasNetworkPool() bool {
	if o != nil && o.NetworkPool != nil {
		return true
	}

	return false
}

// SetNetworkPool gets a reference to the given NetworkPoolCreate and assigns it to the NetworkPool field.
func (o *InlineObject160) SetNetworkPool(v NetworkPoolCreate) {
	o.NetworkPool = &v
}

func (o InlineObject160) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkPool != nil {
		toSerialize["networkPool"] = o.NetworkPool
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject160 struct {
	value *InlineObject160
	isSet bool
}

func (v NullableInlineObject160) Get() *InlineObject160 {
	return v.value
}

func (v *NullableInlineObject160) Set(val *InlineObject160) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject160) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject160) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject160(val *InlineObject160) *NullableInlineObject160 {
	return &NullableInlineObject160{value: val, isSet: true}
}

func (v NullableInlineObject160) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject160) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


