/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetworkRouterFirewallRule struct for NetworkRouterFirewallRule
type NetworkRouterFirewallRule struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Code NullableString `json:"code,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Priority *int64 `json:"priority,omitempty"`
	GroupName *string `json:"groupName,omitempty"`
	Direction *string `json:"direction,omitempty"`
	RuleType *string `json:"ruleType,omitempty"`
	Policy *string `json:"policy,omitempty"`
	Source *[]string `json:"source,omitempty"`
	SourceType *string `json:"sourceType,omitempty"`
	Destination *[]string `json:"destination,omitempty"`
	DestinationType *string `json:"destinationType,omitempty"`
	Profiles *[]string `json:"profiles,omitempty"`
	Protocol NullableString `json:"protocol,omitempty"`
	Application NullableString `json:"application,omitempty"`
	ApplicationType *string `json:"applicationType,omitempty"`
	PortRange NullableString `json:"portRange,omitempty"`
	SourcePortRange NullableString `json:"sourcePortRange,omitempty"`
	SourceGroup NullableString `json:"sourceGroup,omitempty"`
	SourceTier NullableString `json:"sourceTier,omitempty"`
	Applications *[]InlineResponse20040AppDeployInstance `json:"applications,omitempty"`
}

// NewNetworkRouterFirewallRule instantiates a new NetworkRouterFirewallRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkRouterFirewallRule() *NetworkRouterFirewallRule {
	this := NetworkRouterFirewallRule{}
	return &this
}

// NewNetworkRouterFirewallRuleWithDefaults instantiates a new NetworkRouterFirewallRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkRouterFirewallRuleWithDefaults() *NetworkRouterFirewallRule {
	this := NetworkRouterFirewallRule{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NetworkRouterFirewallRule) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterFirewallRule) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *NetworkRouterFirewallRule) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NetworkRouterFirewallRule) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterFirewallRule) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NetworkRouterFirewallRule) SetName(v string) {
	o.Name = &v
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterFirewallRule) GetCode() string {
	if o == nil || o.Code.Get() == nil {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterFirewallRule) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *NetworkRouterFirewallRule) SetCode(v string) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *NetworkRouterFirewallRule) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *NetworkRouterFirewallRule) UnsetCode() {
	o.Code.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *NetworkRouterFirewallRule) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterFirewallRule) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *NetworkRouterFirewallRule) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *NetworkRouterFirewallRule) GetPriority() int64 {
	if o == nil || o.Priority == nil {
		var ret int64
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterFirewallRule) GetPriorityOk() (*int64, bool) {
	if o == nil || o.Priority == nil {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasPriority() bool {
	if o != nil && o.Priority != nil {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int64 and assigns it to the Priority field.
func (o *NetworkRouterFirewallRule) SetPriority(v int64) {
	o.Priority = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *NetworkRouterFirewallRule) GetGroupName() string {
	if o == nil || o.GroupName == nil {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterFirewallRule) GetGroupNameOk() (*string, bool) {
	if o == nil || o.GroupName == nil {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasGroupName() bool {
	if o != nil && o.GroupName != nil {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *NetworkRouterFirewallRule) SetGroupName(v string) {
	o.GroupName = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *NetworkRouterFirewallRule) GetDirection() string {
	if o == nil || o.Direction == nil {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterFirewallRule) GetDirectionOk() (*string, bool) {
	if o == nil || o.Direction == nil {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasDirection() bool {
	if o != nil && o.Direction != nil {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *NetworkRouterFirewallRule) SetDirection(v string) {
	o.Direction = &v
}

// GetRuleType returns the RuleType field value if set, zero value otherwise.
func (o *NetworkRouterFirewallRule) GetRuleType() string {
	if o == nil || o.RuleType == nil {
		var ret string
		return ret
	}
	return *o.RuleType
}

// GetRuleTypeOk returns a tuple with the RuleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterFirewallRule) GetRuleTypeOk() (*string, bool) {
	if o == nil || o.RuleType == nil {
		return nil, false
	}
	return o.RuleType, true
}

// HasRuleType returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasRuleType() bool {
	if o != nil && o.RuleType != nil {
		return true
	}

	return false
}

// SetRuleType gets a reference to the given string and assigns it to the RuleType field.
func (o *NetworkRouterFirewallRule) SetRuleType(v string) {
	o.RuleType = &v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *NetworkRouterFirewallRule) GetPolicy() string {
	if o == nil || o.Policy == nil {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterFirewallRule) GetPolicyOk() (*string, bool) {
	if o == nil || o.Policy == nil {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasPolicy() bool {
	if o != nil && o.Policy != nil {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
func (o *NetworkRouterFirewallRule) SetPolicy(v string) {
	o.Policy = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *NetworkRouterFirewallRule) GetSource() []string {
	if o == nil || o.Source == nil {
		var ret []string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterFirewallRule) GetSourceOk() (*[]string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given []string and assigns it to the Source field.
func (o *NetworkRouterFirewallRule) SetSource(v []string) {
	o.Source = &v
}

// GetSourceType returns the SourceType field value if set, zero value otherwise.
func (o *NetworkRouterFirewallRule) GetSourceType() string {
	if o == nil || o.SourceType == nil {
		var ret string
		return ret
	}
	return *o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterFirewallRule) GetSourceTypeOk() (*string, bool) {
	if o == nil || o.SourceType == nil {
		return nil, false
	}
	return o.SourceType, true
}

// HasSourceType returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasSourceType() bool {
	if o != nil && o.SourceType != nil {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given string and assigns it to the SourceType field.
func (o *NetworkRouterFirewallRule) SetSourceType(v string) {
	o.SourceType = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *NetworkRouterFirewallRule) GetDestination() []string {
	if o == nil || o.Destination == nil {
		var ret []string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterFirewallRule) GetDestinationOk() (*[]string, bool) {
	if o == nil || o.Destination == nil {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasDestination() bool {
	if o != nil && o.Destination != nil {
		return true
	}

	return false
}

// SetDestination gets a reference to the given []string and assigns it to the Destination field.
func (o *NetworkRouterFirewallRule) SetDestination(v []string) {
	o.Destination = &v
}

// GetDestinationType returns the DestinationType field value if set, zero value otherwise.
func (o *NetworkRouterFirewallRule) GetDestinationType() string {
	if o == nil || o.DestinationType == nil {
		var ret string
		return ret
	}
	return *o.DestinationType
}

// GetDestinationTypeOk returns a tuple with the DestinationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterFirewallRule) GetDestinationTypeOk() (*string, bool) {
	if o == nil || o.DestinationType == nil {
		return nil, false
	}
	return o.DestinationType, true
}

// HasDestinationType returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasDestinationType() bool {
	if o != nil && o.DestinationType != nil {
		return true
	}

	return false
}

// SetDestinationType gets a reference to the given string and assigns it to the DestinationType field.
func (o *NetworkRouterFirewallRule) SetDestinationType(v string) {
	o.DestinationType = &v
}

// GetProfiles returns the Profiles field value if set, zero value otherwise.
func (o *NetworkRouterFirewallRule) GetProfiles() []string {
	if o == nil || o.Profiles == nil {
		var ret []string
		return ret
	}
	return *o.Profiles
}

// GetProfilesOk returns a tuple with the Profiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterFirewallRule) GetProfilesOk() (*[]string, bool) {
	if o == nil || o.Profiles == nil {
		return nil, false
	}
	return o.Profiles, true
}

// HasProfiles returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasProfiles() bool {
	if o != nil && o.Profiles != nil {
		return true
	}

	return false
}

// SetProfiles gets a reference to the given []string and assigns it to the Profiles field.
func (o *NetworkRouterFirewallRule) SetProfiles(v []string) {
	o.Profiles = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterFirewallRule) GetProtocol() string {
	if o == nil || o.Protocol.Get() == nil {
		var ret string
		return ret
	}
	return *o.Protocol.Get()
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterFirewallRule) GetProtocolOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Protocol.Get(), o.Protocol.IsSet()
}

// HasProtocol returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasProtocol() bool {
	if o != nil && o.Protocol.IsSet() {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given NullableString and assigns it to the Protocol field.
func (o *NetworkRouterFirewallRule) SetProtocol(v string) {
	o.Protocol.Set(&v)
}
// SetProtocolNil sets the value for Protocol to be an explicit nil
func (o *NetworkRouterFirewallRule) SetProtocolNil() {
	o.Protocol.Set(nil)
}

// UnsetProtocol ensures that no value is present for Protocol, not even an explicit nil
func (o *NetworkRouterFirewallRule) UnsetProtocol() {
	o.Protocol.Unset()
}

// GetApplication returns the Application field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterFirewallRule) GetApplication() string {
	if o == nil || o.Application.Get() == nil {
		var ret string
		return ret
	}
	return *o.Application.Get()
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterFirewallRule) GetApplicationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Application.Get(), o.Application.IsSet()
}

// HasApplication returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasApplication() bool {
	if o != nil && o.Application.IsSet() {
		return true
	}

	return false
}

// SetApplication gets a reference to the given NullableString and assigns it to the Application field.
func (o *NetworkRouterFirewallRule) SetApplication(v string) {
	o.Application.Set(&v)
}
// SetApplicationNil sets the value for Application to be an explicit nil
func (o *NetworkRouterFirewallRule) SetApplicationNil() {
	o.Application.Set(nil)
}

// UnsetApplication ensures that no value is present for Application, not even an explicit nil
func (o *NetworkRouterFirewallRule) UnsetApplication() {
	o.Application.Unset()
}

// GetApplicationType returns the ApplicationType field value if set, zero value otherwise.
func (o *NetworkRouterFirewallRule) GetApplicationType() string {
	if o == nil || o.ApplicationType == nil {
		var ret string
		return ret
	}
	return *o.ApplicationType
}

// GetApplicationTypeOk returns a tuple with the ApplicationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterFirewallRule) GetApplicationTypeOk() (*string, bool) {
	if o == nil || o.ApplicationType == nil {
		return nil, false
	}
	return o.ApplicationType, true
}

// HasApplicationType returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasApplicationType() bool {
	if o != nil && o.ApplicationType != nil {
		return true
	}

	return false
}

// SetApplicationType gets a reference to the given string and assigns it to the ApplicationType field.
func (o *NetworkRouterFirewallRule) SetApplicationType(v string) {
	o.ApplicationType = &v
}

// GetPortRange returns the PortRange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterFirewallRule) GetPortRange() string {
	if o == nil || o.PortRange.Get() == nil {
		var ret string
		return ret
	}
	return *o.PortRange.Get()
}

// GetPortRangeOk returns a tuple with the PortRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterFirewallRule) GetPortRangeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PortRange.Get(), o.PortRange.IsSet()
}

// HasPortRange returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasPortRange() bool {
	if o != nil && o.PortRange.IsSet() {
		return true
	}

	return false
}

// SetPortRange gets a reference to the given NullableString and assigns it to the PortRange field.
func (o *NetworkRouterFirewallRule) SetPortRange(v string) {
	o.PortRange.Set(&v)
}
// SetPortRangeNil sets the value for PortRange to be an explicit nil
func (o *NetworkRouterFirewallRule) SetPortRangeNil() {
	o.PortRange.Set(nil)
}

// UnsetPortRange ensures that no value is present for PortRange, not even an explicit nil
func (o *NetworkRouterFirewallRule) UnsetPortRange() {
	o.PortRange.Unset()
}

// GetSourcePortRange returns the SourcePortRange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterFirewallRule) GetSourcePortRange() string {
	if o == nil || o.SourcePortRange.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourcePortRange.Get()
}

// GetSourcePortRangeOk returns a tuple with the SourcePortRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterFirewallRule) GetSourcePortRangeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourcePortRange.Get(), o.SourcePortRange.IsSet()
}

// HasSourcePortRange returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasSourcePortRange() bool {
	if o != nil && o.SourcePortRange.IsSet() {
		return true
	}

	return false
}

// SetSourcePortRange gets a reference to the given NullableString and assigns it to the SourcePortRange field.
func (o *NetworkRouterFirewallRule) SetSourcePortRange(v string) {
	o.SourcePortRange.Set(&v)
}
// SetSourcePortRangeNil sets the value for SourcePortRange to be an explicit nil
func (o *NetworkRouterFirewallRule) SetSourcePortRangeNil() {
	o.SourcePortRange.Set(nil)
}

// UnsetSourcePortRange ensures that no value is present for SourcePortRange, not even an explicit nil
func (o *NetworkRouterFirewallRule) UnsetSourcePortRange() {
	o.SourcePortRange.Unset()
}

// GetSourceGroup returns the SourceGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterFirewallRule) GetSourceGroup() string {
	if o == nil || o.SourceGroup.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceGroup.Get()
}

// GetSourceGroupOk returns a tuple with the SourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterFirewallRule) GetSourceGroupOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceGroup.Get(), o.SourceGroup.IsSet()
}

// HasSourceGroup returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasSourceGroup() bool {
	if o != nil && o.SourceGroup.IsSet() {
		return true
	}

	return false
}

// SetSourceGroup gets a reference to the given NullableString and assigns it to the SourceGroup field.
func (o *NetworkRouterFirewallRule) SetSourceGroup(v string) {
	o.SourceGroup.Set(&v)
}
// SetSourceGroupNil sets the value for SourceGroup to be an explicit nil
func (o *NetworkRouterFirewallRule) SetSourceGroupNil() {
	o.SourceGroup.Set(nil)
}

// UnsetSourceGroup ensures that no value is present for SourceGroup, not even an explicit nil
func (o *NetworkRouterFirewallRule) UnsetSourceGroup() {
	o.SourceGroup.Unset()
}

// GetSourceTier returns the SourceTier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkRouterFirewallRule) GetSourceTier() string {
	if o == nil || o.SourceTier.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceTier.Get()
}

// GetSourceTierOk returns a tuple with the SourceTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkRouterFirewallRule) GetSourceTierOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceTier.Get(), o.SourceTier.IsSet()
}

// HasSourceTier returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasSourceTier() bool {
	if o != nil && o.SourceTier.IsSet() {
		return true
	}

	return false
}

// SetSourceTier gets a reference to the given NullableString and assigns it to the SourceTier field.
func (o *NetworkRouterFirewallRule) SetSourceTier(v string) {
	o.SourceTier.Set(&v)
}
// SetSourceTierNil sets the value for SourceTier to be an explicit nil
func (o *NetworkRouterFirewallRule) SetSourceTierNil() {
	o.SourceTier.Set(nil)
}

// UnsetSourceTier ensures that no value is present for SourceTier, not even an explicit nil
func (o *NetworkRouterFirewallRule) UnsetSourceTier() {
	o.SourceTier.Unset()
}

// GetApplications returns the Applications field value if set, zero value otherwise.
func (o *NetworkRouterFirewallRule) GetApplications() []InlineResponse20040AppDeployInstance {
	if o == nil || o.Applications == nil {
		var ret []InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Applications
}

// GetApplicationsOk returns a tuple with the Applications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRouterFirewallRule) GetApplicationsOk() (*[]InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Applications == nil {
		return nil, false
	}
	return o.Applications, true
}

// HasApplications returns a boolean if a field has been set.
func (o *NetworkRouterFirewallRule) HasApplications() bool {
	if o != nil && o.Applications != nil {
		return true
	}

	return false
}

// SetApplications gets a reference to the given []InlineResponse20040AppDeployInstance and assigns it to the Applications field.
func (o *NetworkRouterFirewallRule) SetApplications(v []InlineResponse20040AppDeployInstance) {
	o.Applications = &v
}

func (o NetworkRouterFirewallRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Priority != nil {
		toSerialize["priority"] = o.Priority
	}
	if o.GroupName != nil {
		toSerialize["groupName"] = o.GroupName
	}
	if o.Direction != nil {
		toSerialize["direction"] = o.Direction
	}
	if o.RuleType != nil {
		toSerialize["ruleType"] = o.RuleType
	}
	if o.Policy != nil {
		toSerialize["policy"] = o.Policy
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.SourceType != nil {
		toSerialize["sourceType"] = o.SourceType
	}
	if o.Destination != nil {
		toSerialize["destination"] = o.Destination
	}
	if o.DestinationType != nil {
		toSerialize["destinationType"] = o.DestinationType
	}
	if o.Profiles != nil {
		toSerialize["profiles"] = o.Profiles
	}
	if o.Protocol.IsSet() {
		toSerialize["protocol"] = o.Protocol.Get()
	}
	if o.Application.IsSet() {
		toSerialize["application"] = o.Application.Get()
	}
	if o.ApplicationType != nil {
		toSerialize["applicationType"] = o.ApplicationType
	}
	if o.PortRange.IsSet() {
		toSerialize["portRange"] = o.PortRange.Get()
	}
	if o.SourcePortRange.IsSet() {
		toSerialize["sourcePortRange"] = o.SourcePortRange.Get()
	}
	if o.SourceGroup.IsSet() {
		toSerialize["sourceGroup"] = o.SourceGroup.Get()
	}
	if o.SourceTier.IsSet() {
		toSerialize["sourceTier"] = o.SourceTier.Get()
	}
	if o.Applications != nil {
		toSerialize["applications"] = o.Applications
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkRouterFirewallRule struct {
	value *NetworkRouterFirewallRule
	isSet bool
}

func (v NullableNetworkRouterFirewallRule) Get() *NetworkRouterFirewallRule {
	return v.value
}

func (v *NullableNetworkRouterFirewallRule) Set(val *NetworkRouterFirewallRule) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkRouterFirewallRule) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkRouterFirewallRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkRouterFirewallRule(val *NetworkRouterFirewallRule) *NullableNetworkRouterFirewallRule {
	return &NullableNetworkRouterFirewallRule{value: val, isSet: true}
}

func (v NullableNetworkRouterFirewallRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkRouterFirewallRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


