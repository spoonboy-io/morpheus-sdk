/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject60 struct for InlineObject60
type InlineObject60 struct {
	Contact ApiMonitoringContactsContact `json:"contact"`
}

// NewInlineObject60 instantiates a new InlineObject60 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject60(contact ApiMonitoringContactsContact, ) *InlineObject60 {
	this := InlineObject60{}
	this.Contact = contact
	return &this
}

// NewInlineObject60WithDefaults instantiates a new InlineObject60 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject60WithDefaults() *InlineObject60 {
	this := InlineObject60{}
	return &this
}

// GetContact returns the Contact field value
func (o *InlineObject60) GetContact() ApiMonitoringContactsContact {
	if o == nil  {
		var ret ApiMonitoringContactsContact
		return ret
	}

	return o.Contact
}

// GetContactOk returns a tuple with the Contact field value
// and a boolean to check if the value has been set.
func (o *InlineObject60) GetContactOk() (*ApiMonitoringContactsContact, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Contact, true
}

// SetContact sets field value
func (o *InlineObject60) SetContact(v ApiMonitoringContactsContact) {
	o.Contact = v
}

func (o InlineObject60) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["contact"] = o.Contact
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject60 struct {
	value *InlineObject60
	isSet bool
}

func (v NullableInlineObject60) Get() *InlineObject60 {
	return v.value
}

func (v *NullableInlineObject60) Set(val *InlineObject60) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject60) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject60) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject60(val *InlineObject60) *NullableInlineObject60 {
	return &NullableInlineObject60{value: val, isSet: true}
}

func (v NullableInlineObject60) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject60) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


