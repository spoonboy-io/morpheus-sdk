/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ZoneResourcePool struct for ZoneResourcePool
type ZoneResourcePool struct {
	Id *int64 `json:"id,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Zone *InlineResponse20040AppDeployInstance `json:"zone,omitempty"`
	Parent NullableInlineResponse20082LoadBalancerInstanceSslCert `json:"parent,omitempty"`
	Type *string `json:"type,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	RegionCode NullableString `json:"regionCode,omitempty"`
	IacId NullableString `json:"iacId,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	ReadOnly *bool `json:"readOnly,omitempty"`
	DefaultPool *bool `json:"defaultPool,omitempty"`
	Active *bool `json:"active,omitempty"`
	Status *string `json:"status,omitempty"`
	Inventory *bool `json:"inventory,omitempty"`
	Config *AnyOfobjectobjectobject `json:"config,omitempty"`
	Name *string `json:"name,omitempty"`
	DisplayName NullableString `json:"displayName,omitempty"`
	Tenants *[]InlineResponse20040AppDeployInstance `json:"tenants,omitempty"`
	ResourcePermission *ResourcePermissions `json:"resourcePermission,omitempty"`
	Depth *int64 `json:"depth,omitempty"`
}

// NewZoneResourcePool instantiates a new ZoneResourcePool object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZoneResourcePool() *ZoneResourcePool {
	this := ZoneResourcePool{}
	return &this
}

// NewZoneResourcePoolWithDefaults instantiates a new ZoneResourcePool object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneResourcePoolWithDefaults() *ZoneResourcePool {
	this := ZoneResourcePool{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ZoneResourcePool) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneResourcePool) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ZoneResourcePool) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ZoneResourcePool) SetId(v int64) {
	o.Id = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ZoneResourcePool) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ZoneResourcePool) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ZoneResourcePool) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ZoneResourcePool) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ZoneResourcePool) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ZoneResourcePool) UnsetDescription() {
	o.Description.Unset()
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *ZoneResourcePool) GetZone() InlineResponse20040AppDeployInstance {
	if o == nil || o.Zone == nil {
		var ret InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneResourcePool) GetZoneOk() (*InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Zone == nil {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *ZoneResourcePool) HasZone() bool {
	if o != nil && o.Zone != nil {
		return true
	}

	return false
}

// SetZone gets a reference to the given InlineResponse20040AppDeployInstance and assigns it to the Zone field.
func (o *ZoneResourcePool) SetZone(v InlineResponse20040AppDeployInstance) {
	o.Zone = &v
}

// GetParent returns the Parent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ZoneResourcePool) GetParent() InlineResponse20082LoadBalancerInstanceSslCert {
	if o == nil || o.Parent.Get() == nil {
		var ret InlineResponse20082LoadBalancerInstanceSslCert
		return ret
	}
	return *o.Parent.Get()
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ZoneResourcePool) GetParentOk() (*InlineResponse20082LoadBalancerInstanceSslCert, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Parent.Get(), o.Parent.IsSet()
}

// HasParent returns a boolean if a field has been set.
func (o *ZoneResourcePool) HasParent() bool {
	if o != nil && o.Parent.IsSet() {
		return true
	}

	return false
}

// SetParent gets a reference to the given NullableInlineResponse20082LoadBalancerInstanceSslCert and assigns it to the Parent field.
func (o *ZoneResourcePool) SetParent(v InlineResponse20082LoadBalancerInstanceSslCert) {
	o.Parent.Set(&v)
}
// SetParentNil sets the value for Parent to be an explicit nil
func (o *ZoneResourcePool) SetParentNil() {
	o.Parent.Set(nil)
}

// UnsetParent ensures that no value is present for Parent, not even an explicit nil
func (o *ZoneResourcePool) UnsetParent() {
	o.Parent.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ZoneResourcePool) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneResourcePool) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ZoneResourcePool) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ZoneResourcePool) SetType(v string) {
	o.Type = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *ZoneResourcePool) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneResourcePool) GetExternalIdOk() (*string, bool) {
	if o == nil || o.ExternalId == nil {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *ZoneResourcePool) HasExternalId() bool {
	if o != nil && o.ExternalId != nil {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *ZoneResourcePool) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetRegionCode returns the RegionCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ZoneResourcePool) GetRegionCode() string {
	if o == nil || o.RegionCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.RegionCode.Get()
}

// GetRegionCodeOk returns a tuple with the RegionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ZoneResourcePool) GetRegionCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RegionCode.Get(), o.RegionCode.IsSet()
}

// HasRegionCode returns a boolean if a field has been set.
func (o *ZoneResourcePool) HasRegionCode() bool {
	if o != nil && o.RegionCode.IsSet() {
		return true
	}

	return false
}

// SetRegionCode gets a reference to the given NullableString and assigns it to the RegionCode field.
func (o *ZoneResourcePool) SetRegionCode(v string) {
	o.RegionCode.Set(&v)
}
// SetRegionCodeNil sets the value for RegionCode to be an explicit nil
func (o *ZoneResourcePool) SetRegionCodeNil() {
	o.RegionCode.Set(nil)
}

// UnsetRegionCode ensures that no value is present for RegionCode, not even an explicit nil
func (o *ZoneResourcePool) UnsetRegionCode() {
	o.RegionCode.Unset()
}

// GetIacId returns the IacId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ZoneResourcePool) GetIacId() string {
	if o == nil || o.IacId.Get() == nil {
		var ret string
		return ret
	}
	return *o.IacId.Get()
}

// GetIacIdOk returns a tuple with the IacId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ZoneResourcePool) GetIacIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IacId.Get(), o.IacId.IsSet()
}

// HasIacId returns a boolean if a field has been set.
func (o *ZoneResourcePool) HasIacId() bool {
	if o != nil && o.IacId.IsSet() {
		return true
	}

	return false
}

// SetIacId gets a reference to the given NullableString and assigns it to the IacId field.
func (o *ZoneResourcePool) SetIacId(v string) {
	o.IacId.Set(&v)
}
// SetIacIdNil sets the value for IacId to be an explicit nil
func (o *ZoneResourcePool) SetIacIdNil() {
	o.IacId.Set(nil)
}

// UnsetIacId ensures that no value is present for IacId, not even an explicit nil
func (o *ZoneResourcePool) UnsetIacId() {
	o.IacId.Unset()
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *ZoneResourcePool) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneResourcePool) GetVisibilityOk() (*string, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *ZoneResourcePool) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *ZoneResourcePool) SetVisibility(v string) {
	o.Visibility = &v
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *ZoneResourcePool) GetReadOnly() bool {
	if o == nil || o.ReadOnly == nil {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneResourcePool) GetReadOnlyOk() (*bool, bool) {
	if o == nil || o.ReadOnly == nil {
		return nil, false
	}
	return o.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (o *ZoneResourcePool) HasReadOnly() bool {
	if o != nil && o.ReadOnly != nil {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *ZoneResourcePool) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

// GetDefaultPool returns the DefaultPool field value if set, zero value otherwise.
func (o *ZoneResourcePool) GetDefaultPool() bool {
	if o == nil || o.DefaultPool == nil {
		var ret bool
		return ret
	}
	return *o.DefaultPool
}

// GetDefaultPoolOk returns a tuple with the DefaultPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneResourcePool) GetDefaultPoolOk() (*bool, bool) {
	if o == nil || o.DefaultPool == nil {
		return nil, false
	}
	return o.DefaultPool, true
}

// HasDefaultPool returns a boolean if a field has been set.
func (o *ZoneResourcePool) HasDefaultPool() bool {
	if o != nil && o.DefaultPool != nil {
		return true
	}

	return false
}

// SetDefaultPool gets a reference to the given bool and assigns it to the DefaultPool field.
func (o *ZoneResourcePool) SetDefaultPool(v bool) {
	o.DefaultPool = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ZoneResourcePool) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneResourcePool) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ZoneResourcePool) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *ZoneResourcePool) SetActive(v bool) {
	o.Active = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ZoneResourcePool) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneResourcePool) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ZoneResourcePool) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ZoneResourcePool) SetStatus(v string) {
	o.Status = &v
}

// GetInventory returns the Inventory field value if set, zero value otherwise.
func (o *ZoneResourcePool) GetInventory() bool {
	if o == nil || o.Inventory == nil {
		var ret bool
		return ret
	}
	return *o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneResourcePool) GetInventoryOk() (*bool, bool) {
	if o == nil || o.Inventory == nil {
		return nil, false
	}
	return o.Inventory, true
}

// HasInventory returns a boolean if a field has been set.
func (o *ZoneResourcePool) HasInventory() bool {
	if o != nil && o.Inventory != nil {
		return true
	}

	return false
}

// SetInventory gets a reference to the given bool and assigns it to the Inventory field.
func (o *ZoneResourcePool) SetInventory(v bool) {
	o.Inventory = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *ZoneResourcePool) GetConfig() AnyOfobjectobjectobject {
	if o == nil || o.Config == nil {
		var ret AnyOfobjectobjectobject
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneResourcePool) GetConfigOk() (*AnyOfobjectobjectobject, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *ZoneResourcePool) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given AnyOfobjectobjectobject and assigns it to the Config field.
func (o *ZoneResourcePool) SetConfig(v AnyOfobjectobjectobject) {
	o.Config = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ZoneResourcePool) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneResourcePool) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ZoneResourcePool) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ZoneResourcePool) SetName(v string) {
	o.Name = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ZoneResourcePool) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ZoneResourcePool) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ZoneResourcePool) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *ZoneResourcePool) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}
// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *ZoneResourcePool) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *ZoneResourcePool) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *ZoneResourcePool) GetTenants() []InlineResponse20040AppDeployInstance {
	if o == nil || o.Tenants == nil {
		var ret []InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneResourcePool) GetTenantsOk() (*[]InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Tenants == nil {
		return nil, false
	}
	return o.Tenants, true
}

// HasTenants returns a boolean if a field has been set.
func (o *ZoneResourcePool) HasTenants() bool {
	if o != nil && o.Tenants != nil {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []InlineResponse20040AppDeployInstance and assigns it to the Tenants field.
func (o *ZoneResourcePool) SetTenants(v []InlineResponse20040AppDeployInstance) {
	o.Tenants = &v
}

// GetResourcePermission returns the ResourcePermission field value if set, zero value otherwise.
func (o *ZoneResourcePool) GetResourcePermission() ResourcePermissions {
	if o == nil || o.ResourcePermission == nil {
		var ret ResourcePermissions
		return ret
	}
	return *o.ResourcePermission
}

// GetResourcePermissionOk returns a tuple with the ResourcePermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneResourcePool) GetResourcePermissionOk() (*ResourcePermissions, bool) {
	if o == nil || o.ResourcePermission == nil {
		return nil, false
	}
	return o.ResourcePermission, true
}

// HasResourcePermission returns a boolean if a field has been set.
func (o *ZoneResourcePool) HasResourcePermission() bool {
	if o != nil && o.ResourcePermission != nil {
		return true
	}

	return false
}

// SetResourcePermission gets a reference to the given ResourcePermissions and assigns it to the ResourcePermission field.
func (o *ZoneResourcePool) SetResourcePermission(v ResourcePermissions) {
	o.ResourcePermission = &v
}

// GetDepth returns the Depth field value if set, zero value otherwise.
func (o *ZoneResourcePool) GetDepth() int64 {
	if o == nil || o.Depth == nil {
		var ret int64
		return ret
	}
	return *o.Depth
}

// GetDepthOk returns a tuple with the Depth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneResourcePool) GetDepthOk() (*int64, bool) {
	if o == nil || o.Depth == nil {
		return nil, false
	}
	return o.Depth, true
}

// HasDepth returns a boolean if a field has been set.
func (o *ZoneResourcePool) HasDepth() bool {
	if o != nil && o.Depth != nil {
		return true
	}

	return false
}

// SetDepth gets a reference to the given int64 and assigns it to the Depth field.
func (o *ZoneResourcePool) SetDepth(v int64) {
	o.Depth = &v
}

func (o ZoneResourcePool) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Zone != nil {
		toSerialize["zone"] = o.Zone
	}
	if o.Parent.IsSet() {
		toSerialize["parent"] = o.Parent.Get()
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.ExternalId != nil {
		toSerialize["externalId"] = o.ExternalId
	}
	if o.RegionCode.IsSet() {
		toSerialize["regionCode"] = o.RegionCode.Get()
	}
	if o.IacId.IsSet() {
		toSerialize["iacId"] = o.IacId.Get()
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if o.ReadOnly != nil {
		toSerialize["readOnly"] = o.ReadOnly
	}
	if o.DefaultPool != nil {
		toSerialize["defaultPool"] = o.DefaultPool
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Inventory != nil {
		toSerialize["inventory"] = o.Inventory
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.Tenants != nil {
		toSerialize["tenants"] = o.Tenants
	}
	if o.ResourcePermission != nil {
		toSerialize["resourcePermission"] = o.ResourcePermission
	}
	if o.Depth != nil {
		toSerialize["depth"] = o.Depth
	}
	return json.Marshal(toSerialize)
}

type NullableZoneResourcePool struct {
	value *ZoneResourcePool
	isSet bool
}

func (v NullableZoneResourcePool) Get() *ZoneResourcePool {
	return v.value
}

func (v *NullableZoneResourcePool) Set(val *ZoneResourcePool) {
	v.value = val
	v.isSet = true
}

func (v NullableZoneResourcePool) IsSet() bool {
	return v.isSet
}

func (v *NullableZoneResourcePool) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZoneResourcePool(val *ZoneResourcePool) *NullableZoneResourcePool {
	return &NullableZoneResourcePool{value: val, isSet: true}
}

func (v NullableZoneResourcePool) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZoneResourcePool) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


