/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CatalogItemTypeInstanceScribePorts struct for CatalogItemTypeInstanceScribePorts
type CatalogItemTypeInstanceScribePorts struct {
	// Port number.
	Port *int64 `json:"port,omitempty"`
	// A name for the port.
	Name *string `json:"name,omitempty"`
	// The load balancer protocol. HTTP, HTTPS, or TCP.
	Lb NullableString `json:"lb,omitempty"`
}

// NewCatalogItemTypeInstanceScribePorts instantiates a new CatalogItemTypeInstanceScribePorts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogItemTypeInstanceScribePorts() *CatalogItemTypeInstanceScribePorts {
	this := CatalogItemTypeInstanceScribePorts{}
	return &this
}

// NewCatalogItemTypeInstanceScribePortsWithDefaults instantiates a new CatalogItemTypeInstanceScribePorts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogItemTypeInstanceScribePortsWithDefaults() *CatalogItemTypeInstanceScribePorts {
	this := CatalogItemTypeInstanceScribePorts{}
	return &this
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *CatalogItemTypeInstanceScribePorts) GetPort() int64 {
	if o == nil || o.Port == nil {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribePorts) GetPortOk() (*int64, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *CatalogItemTypeInstanceScribePorts) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *CatalogItemTypeInstanceScribePorts) SetPort(v int64) {
	o.Port = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CatalogItemTypeInstanceScribePorts) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogItemTypeInstanceScribePorts) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CatalogItemTypeInstanceScribePorts) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CatalogItemTypeInstanceScribePorts) SetName(v string) {
	o.Name = &v
}

// GetLb returns the Lb field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CatalogItemTypeInstanceScribePorts) GetLb() string {
	if o == nil || o.Lb.Get() == nil {
		var ret string
		return ret
	}
	return *o.Lb.Get()
}

// GetLbOk returns a tuple with the Lb field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CatalogItemTypeInstanceScribePorts) GetLbOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Lb.Get(), o.Lb.IsSet()
}

// HasLb returns a boolean if a field has been set.
func (o *CatalogItemTypeInstanceScribePorts) HasLb() bool {
	if o != nil && o.Lb.IsSet() {
		return true
	}

	return false
}

// SetLb gets a reference to the given NullableString and assigns it to the Lb field.
func (o *CatalogItemTypeInstanceScribePorts) SetLb(v string) {
	o.Lb.Set(&v)
}
// SetLbNil sets the value for Lb to be an explicit nil
func (o *CatalogItemTypeInstanceScribePorts) SetLbNil() {
	o.Lb.Set(nil)
}

// UnsetLb ensures that no value is present for Lb, not even an explicit nil
func (o *CatalogItemTypeInstanceScribePorts) UnsetLb() {
	o.Lb.Unset()
}

func (o CatalogItemTypeInstanceScribePorts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Lb.IsSet() {
		toSerialize["lb"] = o.Lb.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCatalogItemTypeInstanceScribePorts struct {
	value *CatalogItemTypeInstanceScribePorts
	isSet bool
}

func (v NullableCatalogItemTypeInstanceScribePorts) Get() *CatalogItemTypeInstanceScribePorts {
	return v.value
}

func (v *NullableCatalogItemTypeInstanceScribePorts) Set(val *CatalogItemTypeInstanceScribePorts) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogItemTypeInstanceScribePorts) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogItemTypeInstanceScribePorts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogItemTypeInstanceScribePorts(val *CatalogItemTypeInstanceScribePorts) *NullableCatalogItemTypeInstanceScribePorts {
	return &NullableCatalogItemTypeInstanceScribePorts{value: val, isSet: true}
}

func (v NullableCatalogItemTypeInstanceScribePorts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogItemTypeInstanceScribePorts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


