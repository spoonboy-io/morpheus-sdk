/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiJobsIdJobTargets struct for ApiJobsIdJobTargets
type ApiJobsIdJobTargets struct {
	RefId *int64 `json:"refId,omitempty"`
}

// NewApiJobsIdJobTargets instantiates a new ApiJobsIdJobTargets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiJobsIdJobTargets() *ApiJobsIdJobTargets {
	this := ApiJobsIdJobTargets{}
	return &this
}

// NewApiJobsIdJobTargetsWithDefaults instantiates a new ApiJobsIdJobTargets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiJobsIdJobTargetsWithDefaults() *ApiJobsIdJobTargets {
	this := ApiJobsIdJobTargets{}
	return &this
}

// GetRefId returns the RefId field value if set, zero value otherwise.
func (o *ApiJobsIdJobTargets) GetRefId() int64 {
	if o == nil || o.RefId == nil {
		var ret int64
		return ret
	}
	return *o.RefId
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiJobsIdJobTargets) GetRefIdOk() (*int64, bool) {
	if o == nil || o.RefId == nil {
		return nil, false
	}
	return o.RefId, true
}

// HasRefId returns a boolean if a field has been set.
func (o *ApiJobsIdJobTargets) HasRefId() bool {
	if o != nil && o.RefId != nil {
		return true
	}

	return false
}

// SetRefId gets a reference to the given int64 and assigns it to the RefId field.
func (o *ApiJobsIdJobTargets) SetRefId(v int64) {
	o.RefId = &v
}

func (o ApiJobsIdJobTargets) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RefId != nil {
		toSerialize["refId"] = o.RefId
	}
	return json.Marshal(toSerialize)
}

type NullableApiJobsIdJobTargets struct {
	value *ApiJobsIdJobTargets
	isSet bool
}

func (v NullableApiJobsIdJobTargets) Get() *ApiJobsIdJobTargets {
	return v.value
}

func (v *NullableApiJobsIdJobTargets) Set(val *ApiJobsIdJobTargets) {
	v.value = val
	v.isSet = true
}

func (v NullableApiJobsIdJobTargets) IsSet() bool {
	return v.isSet
}

func (v *NullableApiJobsIdJobTargets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiJobsIdJobTargets(val *ApiJobsIdJobTargets) *NullableApiJobsIdJobTargets {
	return &NullableApiJobsIdJobTargets{value: val, isSet: true}
}

func (v NullableApiJobsIdJobTargets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiJobsIdJobTargets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


