/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterDatastorePermissionsResourcePermissions struct for ClusterDatastorePermissionsResourcePermissions
type ClusterDatastorePermissionsResourcePermissions struct {
	AllGroups *bool `json:"allGroups,omitempty"`
	DefaultStore *bool `json:"defaultStore,omitempty"`
	AllPlans *bool `json:"allPlans,omitempty"`
	DefaultTarget *bool `json:"defaultTarget,omitempty"`
	MorpheusResourceType *string `json:"morpheusResourceType,omitempty"`
	MorpheusResourceId *int64 `json:"morpheusResourceId,omitempty"`
	CanManage *bool `json:"canManage,omitempty"`
	All *bool `json:"all,omitempty"`
	Account *ApiBlueprintsIdUpdatePermissionsResourcePermissionSites `json:"account,omitempty"`
	Sites []map[string]interface{} `json:"sites,omitempty"`
	Plans []map[string]interface{} `json:"plans,omitempty"`
}

// NewClusterDatastorePermissionsResourcePermissions instantiates a new ClusterDatastorePermissionsResourcePermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterDatastorePermissionsResourcePermissions() *ClusterDatastorePermissionsResourcePermissions {
	this := ClusterDatastorePermissionsResourcePermissions{}
	return &this
}

// NewClusterDatastorePermissionsResourcePermissionsWithDefaults instantiates a new ClusterDatastorePermissionsResourcePermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterDatastorePermissionsResourcePermissionsWithDefaults() *ClusterDatastorePermissionsResourcePermissions {
	this := ClusterDatastorePermissionsResourcePermissions{}
	return &this
}

// GetAllGroups returns the AllGroups field value if set, zero value otherwise.
func (o *ClusterDatastorePermissionsResourcePermissions) GetAllGroups() bool {
	if o == nil || o.AllGroups == nil {
		var ret bool
		return ret
	}
	return *o.AllGroups
}

// GetAllGroupsOk returns a tuple with the AllGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDatastorePermissionsResourcePermissions) GetAllGroupsOk() (*bool, bool) {
	if o == nil || o.AllGroups == nil {
		return nil, false
	}
	return o.AllGroups, true
}

// HasAllGroups returns a boolean if a field has been set.
func (o *ClusterDatastorePermissionsResourcePermissions) HasAllGroups() bool {
	if o != nil && o.AllGroups != nil {
		return true
	}

	return false
}

// SetAllGroups gets a reference to the given bool and assigns it to the AllGroups field.
func (o *ClusterDatastorePermissionsResourcePermissions) SetAllGroups(v bool) {
	o.AllGroups = &v
}

// GetDefaultStore returns the DefaultStore field value if set, zero value otherwise.
func (o *ClusterDatastorePermissionsResourcePermissions) GetDefaultStore() bool {
	if o == nil || o.DefaultStore == nil {
		var ret bool
		return ret
	}
	return *o.DefaultStore
}

// GetDefaultStoreOk returns a tuple with the DefaultStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDatastorePermissionsResourcePermissions) GetDefaultStoreOk() (*bool, bool) {
	if o == nil || o.DefaultStore == nil {
		return nil, false
	}
	return o.DefaultStore, true
}

// HasDefaultStore returns a boolean if a field has been set.
func (o *ClusterDatastorePermissionsResourcePermissions) HasDefaultStore() bool {
	if o != nil && o.DefaultStore != nil {
		return true
	}

	return false
}

// SetDefaultStore gets a reference to the given bool and assigns it to the DefaultStore field.
func (o *ClusterDatastorePermissionsResourcePermissions) SetDefaultStore(v bool) {
	o.DefaultStore = &v
}

// GetAllPlans returns the AllPlans field value if set, zero value otherwise.
func (o *ClusterDatastorePermissionsResourcePermissions) GetAllPlans() bool {
	if o == nil || o.AllPlans == nil {
		var ret bool
		return ret
	}
	return *o.AllPlans
}

// GetAllPlansOk returns a tuple with the AllPlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDatastorePermissionsResourcePermissions) GetAllPlansOk() (*bool, bool) {
	if o == nil || o.AllPlans == nil {
		return nil, false
	}
	return o.AllPlans, true
}

// HasAllPlans returns a boolean if a field has been set.
func (o *ClusterDatastorePermissionsResourcePermissions) HasAllPlans() bool {
	if o != nil && o.AllPlans != nil {
		return true
	}

	return false
}

// SetAllPlans gets a reference to the given bool and assigns it to the AllPlans field.
func (o *ClusterDatastorePermissionsResourcePermissions) SetAllPlans(v bool) {
	o.AllPlans = &v
}

// GetDefaultTarget returns the DefaultTarget field value if set, zero value otherwise.
func (o *ClusterDatastorePermissionsResourcePermissions) GetDefaultTarget() bool {
	if o == nil || o.DefaultTarget == nil {
		var ret bool
		return ret
	}
	return *o.DefaultTarget
}

// GetDefaultTargetOk returns a tuple with the DefaultTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDatastorePermissionsResourcePermissions) GetDefaultTargetOk() (*bool, bool) {
	if o == nil || o.DefaultTarget == nil {
		return nil, false
	}
	return o.DefaultTarget, true
}

// HasDefaultTarget returns a boolean if a field has been set.
func (o *ClusterDatastorePermissionsResourcePermissions) HasDefaultTarget() bool {
	if o != nil && o.DefaultTarget != nil {
		return true
	}

	return false
}

// SetDefaultTarget gets a reference to the given bool and assigns it to the DefaultTarget field.
func (o *ClusterDatastorePermissionsResourcePermissions) SetDefaultTarget(v bool) {
	o.DefaultTarget = &v
}

// GetMorpheusResourceType returns the MorpheusResourceType field value if set, zero value otherwise.
func (o *ClusterDatastorePermissionsResourcePermissions) GetMorpheusResourceType() string {
	if o == nil || o.MorpheusResourceType == nil {
		var ret string
		return ret
	}
	return *o.MorpheusResourceType
}

// GetMorpheusResourceTypeOk returns a tuple with the MorpheusResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDatastorePermissionsResourcePermissions) GetMorpheusResourceTypeOk() (*string, bool) {
	if o == nil || o.MorpheusResourceType == nil {
		return nil, false
	}
	return o.MorpheusResourceType, true
}

// HasMorpheusResourceType returns a boolean if a field has been set.
func (o *ClusterDatastorePermissionsResourcePermissions) HasMorpheusResourceType() bool {
	if o != nil && o.MorpheusResourceType != nil {
		return true
	}

	return false
}

// SetMorpheusResourceType gets a reference to the given string and assigns it to the MorpheusResourceType field.
func (o *ClusterDatastorePermissionsResourcePermissions) SetMorpheusResourceType(v string) {
	o.MorpheusResourceType = &v
}

// GetMorpheusResourceId returns the MorpheusResourceId field value if set, zero value otherwise.
func (o *ClusterDatastorePermissionsResourcePermissions) GetMorpheusResourceId() int64 {
	if o == nil || o.MorpheusResourceId == nil {
		var ret int64
		return ret
	}
	return *o.MorpheusResourceId
}

// GetMorpheusResourceIdOk returns a tuple with the MorpheusResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDatastorePermissionsResourcePermissions) GetMorpheusResourceIdOk() (*int64, bool) {
	if o == nil || o.MorpheusResourceId == nil {
		return nil, false
	}
	return o.MorpheusResourceId, true
}

// HasMorpheusResourceId returns a boolean if a field has been set.
func (o *ClusterDatastorePermissionsResourcePermissions) HasMorpheusResourceId() bool {
	if o != nil && o.MorpheusResourceId != nil {
		return true
	}

	return false
}

// SetMorpheusResourceId gets a reference to the given int64 and assigns it to the MorpheusResourceId field.
func (o *ClusterDatastorePermissionsResourcePermissions) SetMorpheusResourceId(v int64) {
	o.MorpheusResourceId = &v
}

// GetCanManage returns the CanManage field value if set, zero value otherwise.
func (o *ClusterDatastorePermissionsResourcePermissions) GetCanManage() bool {
	if o == nil || o.CanManage == nil {
		var ret bool
		return ret
	}
	return *o.CanManage
}

// GetCanManageOk returns a tuple with the CanManage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDatastorePermissionsResourcePermissions) GetCanManageOk() (*bool, bool) {
	if o == nil || o.CanManage == nil {
		return nil, false
	}
	return o.CanManage, true
}

// HasCanManage returns a boolean if a field has been set.
func (o *ClusterDatastorePermissionsResourcePermissions) HasCanManage() bool {
	if o != nil && o.CanManage != nil {
		return true
	}

	return false
}

// SetCanManage gets a reference to the given bool and assigns it to the CanManage field.
func (o *ClusterDatastorePermissionsResourcePermissions) SetCanManage(v bool) {
	o.CanManage = &v
}

// GetAll returns the All field value if set, zero value otherwise.
func (o *ClusterDatastorePermissionsResourcePermissions) GetAll() bool {
	if o == nil || o.All == nil {
		var ret bool
		return ret
	}
	return *o.All
}

// GetAllOk returns a tuple with the All field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDatastorePermissionsResourcePermissions) GetAllOk() (*bool, bool) {
	if o == nil || o.All == nil {
		return nil, false
	}
	return o.All, true
}

// HasAll returns a boolean if a field has been set.
func (o *ClusterDatastorePermissionsResourcePermissions) HasAll() bool {
	if o != nil && o.All != nil {
		return true
	}

	return false
}

// SetAll gets a reference to the given bool and assigns it to the All field.
func (o *ClusterDatastorePermissionsResourcePermissions) SetAll(v bool) {
	o.All = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *ClusterDatastorePermissionsResourcePermissions) GetAccount() ApiBlueprintsIdUpdatePermissionsResourcePermissionSites {
	if o == nil || o.Account == nil {
		var ret ApiBlueprintsIdUpdatePermissionsResourcePermissionSites
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterDatastorePermissionsResourcePermissions) GetAccountOk() (*ApiBlueprintsIdUpdatePermissionsResourcePermissionSites, bool) {
	if o == nil || o.Account == nil {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *ClusterDatastorePermissionsResourcePermissions) HasAccount() bool {
	if o != nil && o.Account != nil {
		return true
	}

	return false
}

// SetAccount gets a reference to the given ApiBlueprintsIdUpdatePermissionsResourcePermissionSites and assigns it to the Account field.
func (o *ClusterDatastorePermissionsResourcePermissions) SetAccount(v ApiBlueprintsIdUpdatePermissionsResourcePermissionSites) {
	o.Account = &v
}

// GetSites returns the Sites field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterDatastorePermissionsResourcePermissions) GetSites() []map[string]interface{} {
	if o == nil  {
		var ret []map[string]interface{}
		return ret
	}
	return o.Sites
}

// GetSitesOk returns a tuple with the Sites field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterDatastorePermissionsResourcePermissions) GetSitesOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Sites == nil {
		return nil, false
	}
	return &o.Sites, true
}

// HasSites returns a boolean if a field has been set.
func (o *ClusterDatastorePermissionsResourcePermissions) HasSites() bool {
	if o != nil && o.Sites != nil {
		return true
	}

	return false
}

// SetSites gets a reference to the given []map[string]interface{} and assigns it to the Sites field.
func (o *ClusterDatastorePermissionsResourcePermissions) SetSites(v []map[string]interface{}) {
	o.Sites = v
}

// GetPlans returns the Plans field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterDatastorePermissionsResourcePermissions) GetPlans() []map[string]interface{} {
	if o == nil  {
		var ret []map[string]interface{}
		return ret
	}
	return o.Plans
}

// GetPlansOk returns a tuple with the Plans field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterDatastorePermissionsResourcePermissions) GetPlansOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Plans == nil {
		return nil, false
	}
	return &o.Plans, true
}

// HasPlans returns a boolean if a field has been set.
func (o *ClusterDatastorePermissionsResourcePermissions) HasPlans() bool {
	if o != nil && o.Plans != nil {
		return true
	}

	return false
}

// SetPlans gets a reference to the given []map[string]interface{} and assigns it to the Plans field.
func (o *ClusterDatastorePermissionsResourcePermissions) SetPlans(v []map[string]interface{}) {
	o.Plans = v
}

func (o ClusterDatastorePermissionsResourcePermissions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllGroups != nil {
		toSerialize["allGroups"] = o.AllGroups
	}
	if o.DefaultStore != nil {
		toSerialize["defaultStore"] = o.DefaultStore
	}
	if o.AllPlans != nil {
		toSerialize["allPlans"] = o.AllPlans
	}
	if o.DefaultTarget != nil {
		toSerialize["defaultTarget"] = o.DefaultTarget
	}
	if o.MorpheusResourceType != nil {
		toSerialize["morpheusResourceType"] = o.MorpheusResourceType
	}
	if o.MorpheusResourceId != nil {
		toSerialize["morpheusResourceId"] = o.MorpheusResourceId
	}
	if o.CanManage != nil {
		toSerialize["canManage"] = o.CanManage
	}
	if o.All != nil {
		toSerialize["all"] = o.All
	}
	if o.Account != nil {
		toSerialize["account"] = o.Account
	}
	if o.Sites != nil {
		toSerialize["sites"] = o.Sites
	}
	if o.Plans != nil {
		toSerialize["plans"] = o.Plans
	}
	return json.Marshal(toSerialize)
}

type NullableClusterDatastorePermissionsResourcePermissions struct {
	value *ClusterDatastorePermissionsResourcePermissions
	isSet bool
}

func (v NullableClusterDatastorePermissionsResourcePermissions) Get() *ClusterDatastorePermissionsResourcePermissions {
	return v.value
}

func (v *NullableClusterDatastorePermissionsResourcePermissions) Set(val *ClusterDatastorePermissionsResourcePermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterDatastorePermissionsResourcePermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterDatastorePermissionsResourcePermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterDatastorePermissionsResourcePermissions(val *ClusterDatastorePermissionsResourcePermissions) *NullableClusterDatastorePermissionsResourcePermissions {
	return &NullableClusterDatastorePermissionsResourcePermissions{value: val, isSet: true}
}

func (v NullableClusterDatastorePermissionsResourcePermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterDatastorePermissionsResourcePermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


