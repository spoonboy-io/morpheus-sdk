/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200 struct for InlineResponse200
type InlineResponse200 struct {
	ApplianceSettings *ApplianceSettings `json:"applianceSettings,omitempty"`
}

// NewInlineResponse200 instantiates a new InlineResponse200 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200() *InlineResponse200 {
	this := InlineResponse200{}
	return &this
}

// NewInlineResponse200WithDefaults instantiates a new InlineResponse200 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200WithDefaults() *InlineResponse200 {
	this := InlineResponse200{}
	return &this
}

// GetApplianceSettings returns the ApplianceSettings field value if set, zero value otherwise.
func (o *InlineResponse200) GetApplianceSettings() ApplianceSettings {
	if o == nil || o.ApplianceSettings == nil {
		var ret ApplianceSettings
		return ret
	}
	return *o.ApplianceSettings
}

// GetApplianceSettingsOk returns a tuple with the ApplianceSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200) GetApplianceSettingsOk() (*ApplianceSettings, bool) {
	if o == nil || o.ApplianceSettings == nil {
		return nil, false
	}
	return o.ApplianceSettings, true
}

// HasApplianceSettings returns a boolean if a field has been set.
func (o *InlineResponse200) HasApplianceSettings() bool {
	if o != nil && o.ApplianceSettings != nil {
		return true
	}

	return false
}

// SetApplianceSettings gets a reference to the given ApplianceSettings and assigns it to the ApplianceSettings field.
func (o *InlineResponse200) SetApplianceSettings(v ApplianceSettings) {
	o.ApplianceSettings = &v
}

func (o InlineResponse200) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplianceSettings != nil {
		toSerialize["applianceSettings"] = o.ApplianceSettings
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200 struct {
	value *InlineResponse200
	isSet bool
}

func (v NullableInlineResponse200) Get() *InlineResponse200 {
	return v.value
}

func (v *NullableInlineResponse200) Set(val *InlineResponse200) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200(val *InlineResponse200) *NullableInlineResponse200 {
	return &NullableInlineResponse200{value: val, isSet: true}
}

func (v NullableInlineResponse200) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


