/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InstancesConfigGCP struct for InstancesConfigGCP
type InstancesConfigGCP struct {
	// Skipping Agent installation will result in a lack of logging and guest operating system statistics. Automation scripts may also be adversely affected.
	NoAgent NullableBool `json:"noAgent,omitempty"`
	// External ID of the Google zone to use for instance.
	GoogleZoneId *int64 `json:"googleZoneId,omitempty"`
	// External IP Type.  `-1` for ephemeral IP.
	ExternalIpType *int64 `json:"externalIpType,omitempty"`
	// Network Tags
	NetworkTags *string `json:"networkTags,omitempty"`
	// Service Account
	ServiceAccount *string `json:"serviceAccount,omitempty"`
	// Access Scope
	AccessScope *string `json:"accessScope,omitempty"`
}

// NewInstancesConfigGCP instantiates a new InstancesConfigGCP object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstancesConfigGCP() *InstancesConfigGCP {
	this := InstancesConfigGCP{}
	var noAgent bool = false
	this.NoAgent = *NewNullableBool(&noAgent)
	return &this
}

// NewInstancesConfigGCPWithDefaults instantiates a new InstancesConfigGCP object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstancesConfigGCPWithDefaults() *InstancesConfigGCP {
	this := InstancesConfigGCP{}
	var noAgent bool = false
	this.NoAgent = *NewNullableBool(&noAgent)
	return &this
}

// GetNoAgent returns the NoAgent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstancesConfigGCP) GetNoAgent() bool {
	if o == nil || o.NoAgent.Get() == nil {
		var ret bool
		return ret
	}
	return *o.NoAgent.Get()
}

// GetNoAgentOk returns a tuple with the NoAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstancesConfigGCP) GetNoAgentOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NoAgent.Get(), o.NoAgent.IsSet()
}

// HasNoAgent returns a boolean if a field has been set.
func (o *InstancesConfigGCP) HasNoAgent() bool {
	if o != nil && o.NoAgent.IsSet() {
		return true
	}

	return false
}

// SetNoAgent gets a reference to the given NullableBool and assigns it to the NoAgent field.
func (o *InstancesConfigGCP) SetNoAgent(v bool) {
	o.NoAgent.Set(&v)
}
// SetNoAgentNil sets the value for NoAgent to be an explicit nil
func (o *InstancesConfigGCP) SetNoAgentNil() {
	o.NoAgent.Set(nil)
}

// UnsetNoAgent ensures that no value is present for NoAgent, not even an explicit nil
func (o *InstancesConfigGCP) UnsetNoAgent() {
	o.NoAgent.Unset()
}

// GetGoogleZoneId returns the GoogleZoneId field value if set, zero value otherwise.
func (o *InstancesConfigGCP) GetGoogleZoneId() int64 {
	if o == nil || o.GoogleZoneId == nil {
		var ret int64
		return ret
	}
	return *o.GoogleZoneId
}

// GetGoogleZoneIdOk returns a tuple with the GoogleZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesConfigGCP) GetGoogleZoneIdOk() (*int64, bool) {
	if o == nil || o.GoogleZoneId == nil {
		return nil, false
	}
	return o.GoogleZoneId, true
}

// HasGoogleZoneId returns a boolean if a field has been set.
func (o *InstancesConfigGCP) HasGoogleZoneId() bool {
	if o != nil && o.GoogleZoneId != nil {
		return true
	}

	return false
}

// SetGoogleZoneId gets a reference to the given int64 and assigns it to the GoogleZoneId field.
func (o *InstancesConfigGCP) SetGoogleZoneId(v int64) {
	o.GoogleZoneId = &v
}

// GetExternalIpType returns the ExternalIpType field value if set, zero value otherwise.
func (o *InstancesConfigGCP) GetExternalIpType() int64 {
	if o == nil || o.ExternalIpType == nil {
		var ret int64
		return ret
	}
	return *o.ExternalIpType
}

// GetExternalIpTypeOk returns a tuple with the ExternalIpType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesConfigGCP) GetExternalIpTypeOk() (*int64, bool) {
	if o == nil || o.ExternalIpType == nil {
		return nil, false
	}
	return o.ExternalIpType, true
}

// HasExternalIpType returns a boolean if a field has been set.
func (o *InstancesConfigGCP) HasExternalIpType() bool {
	if o != nil && o.ExternalIpType != nil {
		return true
	}

	return false
}

// SetExternalIpType gets a reference to the given int64 and assigns it to the ExternalIpType field.
func (o *InstancesConfigGCP) SetExternalIpType(v int64) {
	o.ExternalIpType = &v
}

// GetNetworkTags returns the NetworkTags field value if set, zero value otherwise.
func (o *InstancesConfigGCP) GetNetworkTags() string {
	if o == nil || o.NetworkTags == nil {
		var ret string
		return ret
	}
	return *o.NetworkTags
}

// GetNetworkTagsOk returns a tuple with the NetworkTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesConfigGCP) GetNetworkTagsOk() (*string, bool) {
	if o == nil || o.NetworkTags == nil {
		return nil, false
	}
	return o.NetworkTags, true
}

// HasNetworkTags returns a boolean if a field has been set.
func (o *InstancesConfigGCP) HasNetworkTags() bool {
	if o != nil && o.NetworkTags != nil {
		return true
	}

	return false
}

// SetNetworkTags gets a reference to the given string and assigns it to the NetworkTags field.
func (o *InstancesConfigGCP) SetNetworkTags(v string) {
	o.NetworkTags = &v
}

// GetServiceAccount returns the ServiceAccount field value if set, zero value otherwise.
func (o *InstancesConfigGCP) GetServiceAccount() string {
	if o == nil || o.ServiceAccount == nil {
		var ret string
		return ret
	}
	return *o.ServiceAccount
}

// GetServiceAccountOk returns a tuple with the ServiceAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesConfigGCP) GetServiceAccountOk() (*string, bool) {
	if o == nil || o.ServiceAccount == nil {
		return nil, false
	}
	return o.ServiceAccount, true
}

// HasServiceAccount returns a boolean if a field has been set.
func (o *InstancesConfigGCP) HasServiceAccount() bool {
	if o != nil && o.ServiceAccount != nil {
		return true
	}

	return false
}

// SetServiceAccount gets a reference to the given string and assigns it to the ServiceAccount field.
func (o *InstancesConfigGCP) SetServiceAccount(v string) {
	o.ServiceAccount = &v
}

// GetAccessScope returns the AccessScope field value if set, zero value otherwise.
func (o *InstancesConfigGCP) GetAccessScope() string {
	if o == nil || o.AccessScope == nil {
		var ret string
		return ret
	}
	return *o.AccessScope
}

// GetAccessScopeOk returns a tuple with the AccessScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesConfigGCP) GetAccessScopeOk() (*string, bool) {
	if o == nil || o.AccessScope == nil {
		return nil, false
	}
	return o.AccessScope, true
}

// HasAccessScope returns a boolean if a field has been set.
func (o *InstancesConfigGCP) HasAccessScope() bool {
	if o != nil && o.AccessScope != nil {
		return true
	}

	return false
}

// SetAccessScope gets a reference to the given string and assigns it to the AccessScope field.
func (o *InstancesConfigGCP) SetAccessScope(v string) {
	o.AccessScope = &v
}

func (o InstancesConfigGCP) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NoAgent.IsSet() {
		toSerialize["noAgent"] = o.NoAgent.Get()
	}
	if o.GoogleZoneId != nil {
		toSerialize["googleZoneId"] = o.GoogleZoneId
	}
	if o.ExternalIpType != nil {
		toSerialize["externalIpType"] = o.ExternalIpType
	}
	if o.NetworkTags != nil {
		toSerialize["networkTags"] = o.NetworkTags
	}
	if o.ServiceAccount != nil {
		toSerialize["serviceAccount"] = o.ServiceAccount
	}
	if o.AccessScope != nil {
		toSerialize["accessScope"] = o.AccessScope
	}
	return json.Marshal(toSerialize)
}

type NullableInstancesConfigGCP struct {
	value *InstancesConfigGCP
	isSet bool
}

func (v NullableInstancesConfigGCP) Get() *InstancesConfigGCP {
	return v.value
}

func (v *NullableInstancesConfigGCP) Set(val *InstancesConfigGCP) {
	v.value = val
	v.isSet = true
}

func (v NullableInstancesConfigGCP) IsSet() bool {
	return v.isSet
}

func (v *NullableInstancesConfigGCP) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstancesConfigGCP(val *InstancesConfigGCP) *NullableInstancesConfigGCP {
	return &NullableInstancesConfigGCP{value: val, isSet: true}
}

func (v NullableInstancesConfigGCP) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstancesConfigGCP) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


