/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse2009 struct for InlineResponse2009
type InlineResponse2009 struct {
	BackupSettings *BackupSettings `json:"backupSettings,omitempty"`
}

// NewInlineResponse2009 instantiates a new InlineResponse2009 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2009() *InlineResponse2009 {
	this := InlineResponse2009{}
	return &this
}

// NewInlineResponse2009WithDefaults instantiates a new InlineResponse2009 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2009WithDefaults() *InlineResponse2009 {
	this := InlineResponse2009{}
	return &this
}

// GetBackupSettings returns the BackupSettings field value if set, zero value otherwise.
func (o *InlineResponse2009) GetBackupSettings() BackupSettings {
	if o == nil || o.BackupSettings == nil {
		var ret BackupSettings
		return ret
	}
	return *o.BackupSettings
}

// GetBackupSettingsOk returns a tuple with the BackupSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2009) GetBackupSettingsOk() (*BackupSettings, bool) {
	if o == nil || o.BackupSettings == nil {
		return nil, false
	}
	return o.BackupSettings, true
}

// HasBackupSettings returns a boolean if a field has been set.
func (o *InlineResponse2009) HasBackupSettings() bool {
	if o != nil && o.BackupSettings != nil {
		return true
	}

	return false
}

// SetBackupSettings gets a reference to the given BackupSettings and assigns it to the BackupSettings field.
func (o *InlineResponse2009) SetBackupSettings(v BackupSettings) {
	o.BackupSettings = &v
}

func (o InlineResponse2009) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BackupSettings != nil {
		toSerialize["backupSettings"] = o.BackupSettings
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2009 struct {
	value *InlineResponse2009
	isSet bool
}

func (v NullableInlineResponse2009) Get() *InlineResponse2009 {
	return v.value
}

func (v *NullableInlineResponse2009) Set(val *InlineResponse2009) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2009) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2009) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2009(val *InlineResponse2009) *NullableInlineResponse2009 {
	return &NullableInlineResponse2009{value: val, isSet: true}
}

func (v NullableInlineResponse2009) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2009) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


