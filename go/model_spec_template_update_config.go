/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SpecTemplateUpdateConfig The Cloud Formation type supports some additional configuration parameters
type SpecTemplateUpdateConfig struct {
	Cloudformation *SpecTemplateUpdateConfigCloudformation `json:"cloudformation,omitempty"`
}

// NewSpecTemplateUpdateConfig instantiates a new SpecTemplateUpdateConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpecTemplateUpdateConfig() *SpecTemplateUpdateConfig {
	this := SpecTemplateUpdateConfig{}
	return &this
}

// NewSpecTemplateUpdateConfigWithDefaults instantiates a new SpecTemplateUpdateConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpecTemplateUpdateConfigWithDefaults() *SpecTemplateUpdateConfig {
	this := SpecTemplateUpdateConfig{}
	return &this
}

// GetCloudformation returns the Cloudformation field value if set, zero value otherwise.
func (o *SpecTemplateUpdateConfig) GetCloudformation() SpecTemplateUpdateConfigCloudformation {
	if o == nil || o.Cloudformation == nil {
		var ret SpecTemplateUpdateConfigCloudformation
		return ret
	}
	return *o.Cloudformation
}

// GetCloudformationOk returns a tuple with the Cloudformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecTemplateUpdateConfig) GetCloudformationOk() (*SpecTemplateUpdateConfigCloudformation, bool) {
	if o == nil || o.Cloudformation == nil {
		return nil, false
	}
	return o.Cloudformation, true
}

// HasCloudformation returns a boolean if a field has been set.
func (o *SpecTemplateUpdateConfig) HasCloudformation() bool {
	if o != nil && o.Cloudformation != nil {
		return true
	}

	return false
}

// SetCloudformation gets a reference to the given SpecTemplateUpdateConfigCloudformation and assigns it to the Cloudformation field.
func (o *SpecTemplateUpdateConfig) SetCloudformation(v SpecTemplateUpdateConfigCloudformation) {
	o.Cloudformation = &v
}

func (o SpecTemplateUpdateConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cloudformation != nil {
		toSerialize["cloudformation"] = o.Cloudformation
	}
	return json.Marshal(toSerialize)
}

type NullableSpecTemplateUpdateConfig struct {
	value *SpecTemplateUpdateConfig
	isSet bool
}

func (v NullableSpecTemplateUpdateConfig) Get() *SpecTemplateUpdateConfig {
	return v.value
}

func (v *NullableSpecTemplateUpdateConfig) Set(val *SpecTemplateUpdateConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSpecTemplateUpdateConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSpecTemplateUpdateConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpecTemplateUpdateConfig(val *SpecTemplateUpdateConfig) *NullableSpecTemplateUpdateConfig {
	return &NullableSpecTemplateUpdateConfig{value: val, isSet: true}
}

func (v NullableSpecTemplateUpdateConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpecTemplateUpdateConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


