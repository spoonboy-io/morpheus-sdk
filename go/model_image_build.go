/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ImageBuild struct for ImageBuild
type ImageBuild struct {
	Id *int64 `json:"id,omitempty"`
	Account *InlineResponse20040AppDeployInstance `json:"account,omitempty"`
	Type *InlineResponse20079LoadBalancerMonitorLoadBalancerType `json:"type,omitempty"`
	Site *InlineResponse20040AppDeployInstance `json:"site,omitempty"`
	Zone *InlineResponse20040AppDeployInstance `json:"zone,omitempty"`
	Name *string `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	BootScript *ImageBuildsBootScript `json:"bootScript,omitempty"`
	BootCommand NullableString `json:"bootCommand,omitempty"`
	PreseedScript *ImageBuildsBootScript `json:"preseedScript,omitempty"`
	Scripts *[]ImageBuildsScripts `json:"scripts,omitempty"`
	SshUsername *string `json:"sshUsername,omitempty"`
	SshPassword *string `json:"sshPassword,omitempty"`
	StorageProvider NullableString `json:"storageProvider,omitempty"`
	BuildOutputName NullableString `json:"buildOutputName,omitempty"`
	ConversionFormats NullableString `json:"conversionFormats,omitempty"`
	IsCloudInit *bool `json:"isCloudInit,omitempty"`
	VmToolsInstalled *bool `json:"vmToolsInstalled,omitempty"`
	KeepResults NullableInt64 `json:"keepResults,omitempty"`
	Config *ImageBuildConfig `json:"config,omitempty"`
	LastResult NullableImageBuildLastResult `json:"lastResult,omitempty"`
	ExecutionCount *int64 `json:"executionCount,omitempty"`
}

// NewImageBuild instantiates a new ImageBuild object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageBuild() *ImageBuild {
	this := ImageBuild{}
	return &this
}

// NewImageBuildWithDefaults instantiates a new ImageBuild object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageBuildWithDefaults() *ImageBuild {
	this := ImageBuild{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ImageBuild) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuild) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ImageBuild) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ImageBuild) SetId(v int64) {
	o.Id = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *ImageBuild) GetAccount() InlineResponse20040AppDeployInstance {
	if o == nil || o.Account == nil {
		var ret InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuild) GetAccountOk() (*InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Account == nil {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *ImageBuild) HasAccount() bool {
	if o != nil && o.Account != nil {
		return true
	}

	return false
}

// SetAccount gets a reference to the given InlineResponse20040AppDeployInstance and assigns it to the Account field.
func (o *ImageBuild) SetAccount(v InlineResponse20040AppDeployInstance) {
	o.Account = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ImageBuild) GetType() InlineResponse20079LoadBalancerMonitorLoadBalancerType {
	if o == nil || o.Type == nil {
		var ret InlineResponse20079LoadBalancerMonitorLoadBalancerType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuild) GetTypeOk() (*InlineResponse20079LoadBalancerMonitorLoadBalancerType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ImageBuild) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given InlineResponse20079LoadBalancerMonitorLoadBalancerType and assigns it to the Type field.
func (o *ImageBuild) SetType(v InlineResponse20079LoadBalancerMonitorLoadBalancerType) {
	o.Type = &v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *ImageBuild) GetSite() InlineResponse20040AppDeployInstance {
	if o == nil || o.Site == nil {
		var ret InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuild) GetSiteOk() (*InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Site == nil {
		return nil, false
	}
	return o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *ImageBuild) HasSite() bool {
	if o != nil && o.Site != nil {
		return true
	}

	return false
}

// SetSite gets a reference to the given InlineResponse20040AppDeployInstance and assigns it to the Site field.
func (o *ImageBuild) SetSite(v InlineResponse20040AppDeployInstance) {
	o.Site = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *ImageBuild) GetZone() InlineResponse20040AppDeployInstance {
	if o == nil || o.Zone == nil {
		var ret InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuild) GetZoneOk() (*InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Zone == nil {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *ImageBuild) HasZone() bool {
	if o != nil && o.Zone != nil {
		return true
	}

	return false
}

// SetZone gets a reference to the given InlineResponse20040AppDeployInstance and assigns it to the Zone field.
func (o *ImageBuild) SetZone(v InlineResponse20040AppDeployInstance) {
	o.Zone = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ImageBuild) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuild) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ImageBuild) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ImageBuild) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageBuild) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageBuild) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ImageBuild) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ImageBuild) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ImageBuild) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ImageBuild) UnsetDescription() {
	o.Description.Unset()
}

// GetBootScript returns the BootScript field value if set, zero value otherwise.
func (o *ImageBuild) GetBootScript() ImageBuildsBootScript {
	if o == nil || o.BootScript == nil {
		var ret ImageBuildsBootScript
		return ret
	}
	return *o.BootScript
}

// GetBootScriptOk returns a tuple with the BootScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuild) GetBootScriptOk() (*ImageBuildsBootScript, bool) {
	if o == nil || o.BootScript == nil {
		return nil, false
	}
	return o.BootScript, true
}

// HasBootScript returns a boolean if a field has been set.
func (o *ImageBuild) HasBootScript() bool {
	if o != nil && o.BootScript != nil {
		return true
	}

	return false
}

// SetBootScript gets a reference to the given ImageBuildsBootScript and assigns it to the BootScript field.
func (o *ImageBuild) SetBootScript(v ImageBuildsBootScript) {
	o.BootScript = &v
}

// GetBootCommand returns the BootCommand field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageBuild) GetBootCommand() string {
	if o == nil || o.BootCommand.Get() == nil {
		var ret string
		return ret
	}
	return *o.BootCommand.Get()
}

// GetBootCommandOk returns a tuple with the BootCommand field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageBuild) GetBootCommandOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BootCommand.Get(), o.BootCommand.IsSet()
}

// HasBootCommand returns a boolean if a field has been set.
func (o *ImageBuild) HasBootCommand() bool {
	if o != nil && o.BootCommand.IsSet() {
		return true
	}

	return false
}

// SetBootCommand gets a reference to the given NullableString and assigns it to the BootCommand field.
func (o *ImageBuild) SetBootCommand(v string) {
	o.BootCommand.Set(&v)
}
// SetBootCommandNil sets the value for BootCommand to be an explicit nil
func (o *ImageBuild) SetBootCommandNil() {
	o.BootCommand.Set(nil)
}

// UnsetBootCommand ensures that no value is present for BootCommand, not even an explicit nil
func (o *ImageBuild) UnsetBootCommand() {
	o.BootCommand.Unset()
}

// GetPreseedScript returns the PreseedScript field value if set, zero value otherwise.
func (o *ImageBuild) GetPreseedScript() ImageBuildsBootScript {
	if o == nil || o.PreseedScript == nil {
		var ret ImageBuildsBootScript
		return ret
	}
	return *o.PreseedScript
}

// GetPreseedScriptOk returns a tuple with the PreseedScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuild) GetPreseedScriptOk() (*ImageBuildsBootScript, bool) {
	if o == nil || o.PreseedScript == nil {
		return nil, false
	}
	return o.PreseedScript, true
}

// HasPreseedScript returns a boolean if a field has been set.
func (o *ImageBuild) HasPreseedScript() bool {
	if o != nil && o.PreseedScript != nil {
		return true
	}

	return false
}

// SetPreseedScript gets a reference to the given ImageBuildsBootScript and assigns it to the PreseedScript field.
func (o *ImageBuild) SetPreseedScript(v ImageBuildsBootScript) {
	o.PreseedScript = &v
}

// GetScripts returns the Scripts field value if set, zero value otherwise.
func (o *ImageBuild) GetScripts() []ImageBuildsScripts {
	if o == nil || o.Scripts == nil {
		var ret []ImageBuildsScripts
		return ret
	}
	return *o.Scripts
}

// GetScriptsOk returns a tuple with the Scripts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuild) GetScriptsOk() (*[]ImageBuildsScripts, bool) {
	if o == nil || o.Scripts == nil {
		return nil, false
	}
	return o.Scripts, true
}

// HasScripts returns a boolean if a field has been set.
func (o *ImageBuild) HasScripts() bool {
	if o != nil && o.Scripts != nil {
		return true
	}

	return false
}

// SetScripts gets a reference to the given []ImageBuildsScripts and assigns it to the Scripts field.
func (o *ImageBuild) SetScripts(v []ImageBuildsScripts) {
	o.Scripts = &v
}

// GetSshUsername returns the SshUsername field value if set, zero value otherwise.
func (o *ImageBuild) GetSshUsername() string {
	if o == nil || o.SshUsername == nil {
		var ret string
		return ret
	}
	return *o.SshUsername
}

// GetSshUsernameOk returns a tuple with the SshUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuild) GetSshUsernameOk() (*string, bool) {
	if o == nil || o.SshUsername == nil {
		return nil, false
	}
	return o.SshUsername, true
}

// HasSshUsername returns a boolean if a field has been set.
func (o *ImageBuild) HasSshUsername() bool {
	if o != nil && o.SshUsername != nil {
		return true
	}

	return false
}

// SetSshUsername gets a reference to the given string and assigns it to the SshUsername field.
func (o *ImageBuild) SetSshUsername(v string) {
	o.SshUsername = &v
}

// GetSshPassword returns the SshPassword field value if set, zero value otherwise.
func (o *ImageBuild) GetSshPassword() string {
	if o == nil || o.SshPassword == nil {
		var ret string
		return ret
	}
	return *o.SshPassword
}

// GetSshPasswordOk returns a tuple with the SshPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuild) GetSshPasswordOk() (*string, bool) {
	if o == nil || o.SshPassword == nil {
		return nil, false
	}
	return o.SshPassword, true
}

// HasSshPassword returns a boolean if a field has been set.
func (o *ImageBuild) HasSshPassword() bool {
	if o != nil && o.SshPassword != nil {
		return true
	}

	return false
}

// SetSshPassword gets a reference to the given string and assigns it to the SshPassword field.
func (o *ImageBuild) SetSshPassword(v string) {
	o.SshPassword = &v
}

// GetStorageProvider returns the StorageProvider field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageBuild) GetStorageProvider() string {
	if o == nil || o.StorageProvider.Get() == nil {
		var ret string
		return ret
	}
	return *o.StorageProvider.Get()
}

// GetStorageProviderOk returns a tuple with the StorageProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageBuild) GetStorageProviderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StorageProvider.Get(), o.StorageProvider.IsSet()
}

// HasStorageProvider returns a boolean if a field has been set.
func (o *ImageBuild) HasStorageProvider() bool {
	if o != nil && o.StorageProvider.IsSet() {
		return true
	}

	return false
}

// SetStorageProvider gets a reference to the given NullableString and assigns it to the StorageProvider field.
func (o *ImageBuild) SetStorageProvider(v string) {
	o.StorageProvider.Set(&v)
}
// SetStorageProviderNil sets the value for StorageProvider to be an explicit nil
func (o *ImageBuild) SetStorageProviderNil() {
	o.StorageProvider.Set(nil)
}

// UnsetStorageProvider ensures that no value is present for StorageProvider, not even an explicit nil
func (o *ImageBuild) UnsetStorageProvider() {
	o.StorageProvider.Unset()
}

// GetBuildOutputName returns the BuildOutputName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageBuild) GetBuildOutputName() string {
	if o == nil || o.BuildOutputName.Get() == nil {
		var ret string
		return ret
	}
	return *o.BuildOutputName.Get()
}

// GetBuildOutputNameOk returns a tuple with the BuildOutputName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageBuild) GetBuildOutputNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BuildOutputName.Get(), o.BuildOutputName.IsSet()
}

// HasBuildOutputName returns a boolean if a field has been set.
func (o *ImageBuild) HasBuildOutputName() bool {
	if o != nil && o.BuildOutputName.IsSet() {
		return true
	}

	return false
}

// SetBuildOutputName gets a reference to the given NullableString and assigns it to the BuildOutputName field.
func (o *ImageBuild) SetBuildOutputName(v string) {
	o.BuildOutputName.Set(&v)
}
// SetBuildOutputNameNil sets the value for BuildOutputName to be an explicit nil
func (o *ImageBuild) SetBuildOutputNameNil() {
	o.BuildOutputName.Set(nil)
}

// UnsetBuildOutputName ensures that no value is present for BuildOutputName, not even an explicit nil
func (o *ImageBuild) UnsetBuildOutputName() {
	o.BuildOutputName.Unset()
}

// GetConversionFormats returns the ConversionFormats field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageBuild) GetConversionFormats() string {
	if o == nil || o.ConversionFormats.Get() == nil {
		var ret string
		return ret
	}
	return *o.ConversionFormats.Get()
}

// GetConversionFormatsOk returns a tuple with the ConversionFormats field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageBuild) GetConversionFormatsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ConversionFormats.Get(), o.ConversionFormats.IsSet()
}

// HasConversionFormats returns a boolean if a field has been set.
func (o *ImageBuild) HasConversionFormats() bool {
	if o != nil && o.ConversionFormats.IsSet() {
		return true
	}

	return false
}

// SetConversionFormats gets a reference to the given NullableString and assigns it to the ConversionFormats field.
func (o *ImageBuild) SetConversionFormats(v string) {
	o.ConversionFormats.Set(&v)
}
// SetConversionFormatsNil sets the value for ConversionFormats to be an explicit nil
func (o *ImageBuild) SetConversionFormatsNil() {
	o.ConversionFormats.Set(nil)
}

// UnsetConversionFormats ensures that no value is present for ConversionFormats, not even an explicit nil
func (o *ImageBuild) UnsetConversionFormats() {
	o.ConversionFormats.Unset()
}

// GetIsCloudInit returns the IsCloudInit field value if set, zero value otherwise.
func (o *ImageBuild) GetIsCloudInit() bool {
	if o == nil || o.IsCloudInit == nil {
		var ret bool
		return ret
	}
	return *o.IsCloudInit
}

// GetIsCloudInitOk returns a tuple with the IsCloudInit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuild) GetIsCloudInitOk() (*bool, bool) {
	if o == nil || o.IsCloudInit == nil {
		return nil, false
	}
	return o.IsCloudInit, true
}

// HasIsCloudInit returns a boolean if a field has been set.
func (o *ImageBuild) HasIsCloudInit() bool {
	if o != nil && o.IsCloudInit != nil {
		return true
	}

	return false
}

// SetIsCloudInit gets a reference to the given bool and assigns it to the IsCloudInit field.
func (o *ImageBuild) SetIsCloudInit(v bool) {
	o.IsCloudInit = &v
}

// GetVmToolsInstalled returns the VmToolsInstalled field value if set, zero value otherwise.
func (o *ImageBuild) GetVmToolsInstalled() bool {
	if o == nil || o.VmToolsInstalled == nil {
		var ret bool
		return ret
	}
	return *o.VmToolsInstalled
}

// GetVmToolsInstalledOk returns a tuple with the VmToolsInstalled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuild) GetVmToolsInstalledOk() (*bool, bool) {
	if o == nil || o.VmToolsInstalled == nil {
		return nil, false
	}
	return o.VmToolsInstalled, true
}

// HasVmToolsInstalled returns a boolean if a field has been set.
func (o *ImageBuild) HasVmToolsInstalled() bool {
	if o != nil && o.VmToolsInstalled != nil {
		return true
	}

	return false
}

// SetVmToolsInstalled gets a reference to the given bool and assigns it to the VmToolsInstalled field.
func (o *ImageBuild) SetVmToolsInstalled(v bool) {
	o.VmToolsInstalled = &v
}

// GetKeepResults returns the KeepResults field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageBuild) GetKeepResults() int64 {
	if o == nil || o.KeepResults.Get() == nil {
		var ret int64
		return ret
	}
	return *o.KeepResults.Get()
}

// GetKeepResultsOk returns a tuple with the KeepResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageBuild) GetKeepResultsOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.KeepResults.Get(), o.KeepResults.IsSet()
}

// HasKeepResults returns a boolean if a field has been set.
func (o *ImageBuild) HasKeepResults() bool {
	if o != nil && o.KeepResults.IsSet() {
		return true
	}

	return false
}

// SetKeepResults gets a reference to the given NullableInt64 and assigns it to the KeepResults field.
func (o *ImageBuild) SetKeepResults(v int64) {
	o.KeepResults.Set(&v)
}
// SetKeepResultsNil sets the value for KeepResults to be an explicit nil
func (o *ImageBuild) SetKeepResultsNil() {
	o.KeepResults.Set(nil)
}

// UnsetKeepResults ensures that no value is present for KeepResults, not even an explicit nil
func (o *ImageBuild) UnsetKeepResults() {
	o.KeepResults.Unset()
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *ImageBuild) GetConfig() ImageBuildConfig {
	if o == nil || o.Config == nil {
		var ret ImageBuildConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuild) GetConfigOk() (*ImageBuildConfig, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *ImageBuild) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given ImageBuildConfig and assigns it to the Config field.
func (o *ImageBuild) SetConfig(v ImageBuildConfig) {
	o.Config = &v
}

// GetLastResult returns the LastResult field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ImageBuild) GetLastResult() ImageBuildLastResult {
	if o == nil || o.LastResult.Get() == nil {
		var ret ImageBuildLastResult
		return ret
	}
	return *o.LastResult.Get()
}

// GetLastResultOk returns a tuple with the LastResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ImageBuild) GetLastResultOk() (*ImageBuildLastResult, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LastResult.Get(), o.LastResult.IsSet()
}

// HasLastResult returns a boolean if a field has been set.
func (o *ImageBuild) HasLastResult() bool {
	if o != nil && o.LastResult.IsSet() {
		return true
	}

	return false
}

// SetLastResult gets a reference to the given NullableImageBuildLastResult and assigns it to the LastResult field.
func (o *ImageBuild) SetLastResult(v ImageBuildLastResult) {
	o.LastResult.Set(&v)
}
// SetLastResultNil sets the value for LastResult to be an explicit nil
func (o *ImageBuild) SetLastResultNil() {
	o.LastResult.Set(nil)
}

// UnsetLastResult ensures that no value is present for LastResult, not even an explicit nil
func (o *ImageBuild) UnsetLastResult() {
	o.LastResult.Unset()
}

// GetExecutionCount returns the ExecutionCount field value if set, zero value otherwise.
func (o *ImageBuild) GetExecutionCount() int64 {
	if o == nil || o.ExecutionCount == nil {
		var ret int64
		return ret
	}
	return *o.ExecutionCount
}

// GetExecutionCountOk returns a tuple with the ExecutionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageBuild) GetExecutionCountOk() (*int64, bool) {
	if o == nil || o.ExecutionCount == nil {
		return nil, false
	}
	return o.ExecutionCount, true
}

// HasExecutionCount returns a boolean if a field has been set.
func (o *ImageBuild) HasExecutionCount() bool {
	if o != nil && o.ExecutionCount != nil {
		return true
	}

	return false
}

// SetExecutionCount gets a reference to the given int64 and assigns it to the ExecutionCount field.
func (o *ImageBuild) SetExecutionCount(v int64) {
	o.ExecutionCount = &v
}

func (o ImageBuild) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Account != nil {
		toSerialize["account"] = o.Account
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Site != nil {
		toSerialize["site"] = o.Site
	}
	if o.Zone != nil {
		toSerialize["zone"] = o.Zone
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.BootScript != nil {
		toSerialize["bootScript"] = o.BootScript
	}
	if o.BootCommand.IsSet() {
		toSerialize["bootCommand"] = o.BootCommand.Get()
	}
	if o.PreseedScript != nil {
		toSerialize["preseedScript"] = o.PreseedScript
	}
	if o.Scripts != nil {
		toSerialize["scripts"] = o.Scripts
	}
	if o.SshUsername != nil {
		toSerialize["sshUsername"] = o.SshUsername
	}
	if o.SshPassword != nil {
		toSerialize["sshPassword"] = o.SshPassword
	}
	if o.StorageProvider.IsSet() {
		toSerialize["storageProvider"] = o.StorageProvider.Get()
	}
	if o.BuildOutputName.IsSet() {
		toSerialize["buildOutputName"] = o.BuildOutputName.Get()
	}
	if o.ConversionFormats.IsSet() {
		toSerialize["conversionFormats"] = o.ConversionFormats.Get()
	}
	if o.IsCloudInit != nil {
		toSerialize["isCloudInit"] = o.IsCloudInit
	}
	if o.VmToolsInstalled != nil {
		toSerialize["vmToolsInstalled"] = o.VmToolsInstalled
	}
	if o.KeepResults.IsSet() {
		toSerialize["keepResults"] = o.KeepResults.Get()
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.LastResult.IsSet() {
		toSerialize["lastResult"] = o.LastResult.Get()
	}
	if o.ExecutionCount != nil {
		toSerialize["executionCount"] = o.ExecutionCount
	}
	return json.Marshal(toSerialize)
}

type NullableImageBuild struct {
	value *ImageBuild
	isSet bool
}

func (v NullableImageBuild) Get() *ImageBuild {
	return v.value
}

func (v *NullableImageBuild) Set(val *ImageBuild) {
	v.value = val
	v.isSet = true
}

func (v NullableImageBuild) IsSet() bool {
	return v.isSet
}

func (v *NullableImageBuild) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageBuild(val *ImageBuild) *NullableImageBuild {
	return &NullableImageBuild{value: val, isSet: true}
}

func (v NullableImageBuild) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageBuild) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


