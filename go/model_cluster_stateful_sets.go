/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ClusterStatefulSets struct for ClusterStatefulSets
type ClusterStatefulSets struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Code *string `json:"code,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Category *string `json:"category,omitempty"`
	ResourceLevel NullableString `json:"resourceLevel,omitempty"`
	ResourceType *string `json:"resourceType,omitempty"`
	Managed *bool `json:"managed,omitempty"`
	Status *string `json:"status,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	Owner *ApiBlueprintsIdUpdatePermissionsResourcePermissionSites `json:"owner,omitempty"`
	TotalCpuUsage *int64 `json:"totalCpuUsage,omitempty"`
	Stats *map[string]interface{} `json:"stats,omitempty"`
}

// NewClusterStatefulSets instantiates a new ClusterStatefulSets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterStatefulSets() *ClusterStatefulSets {
	this := ClusterStatefulSets{}
	return &this
}

// NewClusterStatefulSetsWithDefaults instantiates a new ClusterStatefulSets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterStatefulSetsWithDefaults() *ClusterStatefulSets {
	this := ClusterStatefulSets{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClusterStatefulSets) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatefulSets) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClusterStatefulSets) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ClusterStatefulSets) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClusterStatefulSets) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatefulSets) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClusterStatefulSets) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClusterStatefulSets) SetName(v string) {
	o.Name = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ClusterStatefulSets) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatefulSets) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ClusterStatefulSets) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ClusterStatefulSets) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterStatefulSets) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterStatefulSets) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ClusterStatefulSets) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ClusterStatefulSets) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ClusterStatefulSets) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ClusterStatefulSets) UnsetDescription() {
	o.Description.Unset()
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ClusterStatefulSets) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatefulSets) GetCategoryOk() (*string, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *ClusterStatefulSets) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *ClusterStatefulSets) SetCategory(v string) {
	o.Category = &v
}

// GetResourceLevel returns the ResourceLevel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterStatefulSets) GetResourceLevel() string {
	if o == nil || o.ResourceLevel.Get() == nil {
		var ret string
		return ret
	}
	return *o.ResourceLevel.Get()
}

// GetResourceLevelOk returns a tuple with the ResourceLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterStatefulSets) GetResourceLevelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ResourceLevel.Get(), o.ResourceLevel.IsSet()
}

// HasResourceLevel returns a boolean if a field has been set.
func (o *ClusterStatefulSets) HasResourceLevel() bool {
	if o != nil && o.ResourceLevel.IsSet() {
		return true
	}

	return false
}

// SetResourceLevel gets a reference to the given NullableString and assigns it to the ResourceLevel field.
func (o *ClusterStatefulSets) SetResourceLevel(v string) {
	o.ResourceLevel.Set(&v)
}
// SetResourceLevelNil sets the value for ResourceLevel to be an explicit nil
func (o *ClusterStatefulSets) SetResourceLevelNil() {
	o.ResourceLevel.Set(nil)
}

// UnsetResourceLevel ensures that no value is present for ResourceLevel, not even an explicit nil
func (o *ClusterStatefulSets) UnsetResourceLevel() {
	o.ResourceLevel.Unset()
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *ClusterStatefulSets) GetResourceType() string {
	if o == nil || o.ResourceType == nil {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatefulSets) GetResourceTypeOk() (*string, bool) {
	if o == nil || o.ResourceType == nil {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *ClusterStatefulSets) HasResourceType() bool {
	if o != nil && o.ResourceType != nil {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *ClusterStatefulSets) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetManaged returns the Managed field value if set, zero value otherwise.
func (o *ClusterStatefulSets) GetManaged() bool {
	if o == nil || o.Managed == nil {
		var ret bool
		return ret
	}
	return *o.Managed
}

// GetManagedOk returns a tuple with the Managed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatefulSets) GetManagedOk() (*bool, bool) {
	if o == nil || o.Managed == nil {
		return nil, false
	}
	return o.Managed, true
}

// HasManaged returns a boolean if a field has been set.
func (o *ClusterStatefulSets) HasManaged() bool {
	if o != nil && o.Managed != nil {
		return true
	}

	return false
}

// SetManaged gets a reference to the given bool and assigns it to the Managed field.
func (o *ClusterStatefulSets) SetManaged(v bool) {
	o.Managed = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ClusterStatefulSets) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatefulSets) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ClusterStatefulSets) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ClusterStatefulSets) SetStatus(v string) {
	o.Status = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ClusterStatefulSets) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatefulSets) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *ClusterStatefulSets) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *ClusterStatefulSets) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *ClusterStatefulSets) GetOwner() ApiBlueprintsIdUpdatePermissionsResourcePermissionSites {
	if o == nil || o.Owner == nil {
		var ret ApiBlueprintsIdUpdatePermissionsResourcePermissionSites
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatefulSets) GetOwnerOk() (*ApiBlueprintsIdUpdatePermissionsResourcePermissionSites, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *ClusterStatefulSets) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given ApiBlueprintsIdUpdatePermissionsResourcePermissionSites and assigns it to the Owner field.
func (o *ClusterStatefulSets) SetOwner(v ApiBlueprintsIdUpdatePermissionsResourcePermissionSites) {
	o.Owner = &v
}

// GetTotalCpuUsage returns the TotalCpuUsage field value if set, zero value otherwise.
func (o *ClusterStatefulSets) GetTotalCpuUsage() int64 {
	if o == nil || o.TotalCpuUsage == nil {
		var ret int64
		return ret
	}
	return *o.TotalCpuUsage
}

// GetTotalCpuUsageOk returns a tuple with the TotalCpuUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatefulSets) GetTotalCpuUsageOk() (*int64, bool) {
	if o == nil || o.TotalCpuUsage == nil {
		return nil, false
	}
	return o.TotalCpuUsage, true
}

// HasTotalCpuUsage returns a boolean if a field has been set.
func (o *ClusterStatefulSets) HasTotalCpuUsage() bool {
	if o != nil && o.TotalCpuUsage != nil {
		return true
	}

	return false
}

// SetTotalCpuUsage gets a reference to the given int64 and assigns it to the TotalCpuUsage field.
func (o *ClusterStatefulSets) SetTotalCpuUsage(v int64) {
	o.TotalCpuUsage = &v
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *ClusterStatefulSets) GetStats() map[string]interface{} {
	if o == nil || o.Stats == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatefulSets) GetStatsOk() (*map[string]interface{}, bool) {
	if o == nil || o.Stats == nil {
		return nil, false
	}
	return o.Stats, true
}

// HasStats returns a boolean if a field has been set.
func (o *ClusterStatefulSets) HasStats() bool {
	if o != nil && o.Stats != nil {
		return true
	}

	return false
}

// SetStats gets a reference to the given map[string]interface{} and assigns it to the Stats field.
func (o *ClusterStatefulSets) SetStats(v map[string]interface{}) {
	o.Stats = &v
}

func (o ClusterStatefulSets) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.ResourceLevel.IsSet() {
		toSerialize["resourceLevel"] = o.ResourceLevel.Get()
	}
	if o.ResourceType != nil {
		toSerialize["resourceType"] = o.ResourceType
	}
	if o.Managed != nil {
		toSerialize["managed"] = o.Managed
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.TotalCpuUsage != nil {
		toSerialize["totalCpuUsage"] = o.TotalCpuUsage
	}
	if o.Stats != nil {
		toSerialize["stats"] = o.Stats
	}
	return json.Marshal(toSerialize)
}

type NullableClusterStatefulSets struct {
	value *ClusterStatefulSets
	isSet bool
}

func (v NullableClusterStatefulSets) Get() *ClusterStatefulSets {
	return v.value
}

func (v *NullableClusterStatefulSets) Set(val *ClusterStatefulSets) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterStatefulSets) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterStatefulSets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterStatefulSets(val *ClusterStatefulSets) *NullableClusterStatefulSets {
	return &NullableClusterStatefulSets{value: val, isSet: true}
}

func (v NullableClusterStatefulSets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterStatefulSets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


