/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetworkPoolCreateType struct for NetworkPoolCreateType
type NetworkPoolCreateType struct {
	// Pool Type. i.e. 'morpheus', 'phpipam', etc.
	Code interface{} `json:"code,omitempty"`
}

// NewNetworkPoolCreateType instantiates a new NetworkPoolCreateType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkPoolCreateType() *NetworkPoolCreateType {
	this := NetworkPoolCreateType{}
	return &this
}

// NewNetworkPoolCreateTypeWithDefaults instantiates a new NetworkPoolCreateType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkPoolCreateTypeWithDefaults() *NetworkPoolCreateType {
	this := NetworkPoolCreateType{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NetworkPoolCreateType) GetCode() interface{} {
	if o == nil  {
		var ret interface{}
		return ret
	}
	return o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NetworkPoolCreateType) GetCodeOk() (*interface{}, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return &o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *NetworkPoolCreateType) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given interface{} and assigns it to the Code field.
func (o *NetworkPoolCreateType) SetCode(v interface{}) {
	o.Code = v
}

func (o NetworkPoolCreateType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkPoolCreateType struct {
	value *NetworkPoolCreateType
	isSet bool
}

func (v NullableNetworkPoolCreateType) Get() *NetworkPoolCreateType {
	return v.value
}

func (v *NullableNetworkPoolCreateType) Set(val *NetworkPoolCreateType) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkPoolCreateType) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkPoolCreateType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkPoolCreateType(val *NetworkPoolCreateType) *NullableNetworkPoolCreateType {
	return &NullableNetworkPoolCreateType{value: val, isSet: true}
}

func (v NullableNetworkPoolCreateType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkPoolCreateType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


