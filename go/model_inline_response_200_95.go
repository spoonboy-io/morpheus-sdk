/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20095 struct for InlineResponse20095
type InlineResponse20095 struct {
	NetworkRouter *InlineResponse20095NetworkRouter `json:"networkRouter,omitempty"`
}

// NewInlineResponse20095 instantiates a new InlineResponse20095 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20095() *InlineResponse20095 {
	this := InlineResponse20095{}
	return &this
}

// NewInlineResponse20095WithDefaults instantiates a new InlineResponse20095 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20095WithDefaults() *InlineResponse20095 {
	this := InlineResponse20095{}
	return &this
}

// GetNetworkRouter returns the NetworkRouter field value if set, zero value otherwise.
func (o *InlineResponse20095) GetNetworkRouter() InlineResponse20095NetworkRouter {
	if o == nil || o.NetworkRouter == nil {
		var ret InlineResponse20095NetworkRouter
		return ret
	}
	return *o.NetworkRouter
}

// GetNetworkRouterOk returns a tuple with the NetworkRouter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20095) GetNetworkRouterOk() (*InlineResponse20095NetworkRouter, bool) {
	if o == nil || o.NetworkRouter == nil {
		return nil, false
	}
	return o.NetworkRouter, true
}

// HasNetworkRouter returns a boolean if a field has been set.
func (o *InlineResponse20095) HasNetworkRouter() bool {
	if o != nil && o.NetworkRouter != nil {
		return true
	}

	return false
}

// SetNetworkRouter gets a reference to the given InlineResponse20095NetworkRouter and assigns it to the NetworkRouter field.
func (o *InlineResponse20095) SetNetworkRouter(v InlineResponse20095NetworkRouter) {
	o.NetworkRouter = &v
}

func (o InlineResponse20095) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkRouter != nil {
		toSerialize["networkRouter"] = o.NetworkRouter
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20095 struct {
	value *InlineResponse20095
	isSet bool
}

func (v NullableInlineResponse20095) Get() *InlineResponse20095 {
	return v.value
}

func (v *NullableInlineResponse20095) Set(val *InlineResponse20095) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20095) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20095) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20095(val *InlineResponse20095) *NullableInlineResponse20095 {
	return &NullableInlineResponse20095{value: val, isSet: true}
}

func (v NullableInlineResponse20095) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20095) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


