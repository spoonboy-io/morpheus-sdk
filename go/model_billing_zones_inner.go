/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the BillingZonesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingZonesInner{}

// BillingZonesInner struct for BillingZonesInner
type BillingZonesInner struct {
	ZoneName *string `json:"zoneName,omitempty"`
	ZoneId *int64 `json:"zoneId,omitempty"`
	ZoneUUID *string `json:"zoneUUID,omitempty"`
	ZoneCode NullableString `json:"zoneCode,omitempty"`
	StartDate *time.Time `json:"startDate,omitempty"`
	EndDate *time.Time `json:"endDate,omitempty"`
	PriceUnit *string `json:"priceUnit,omitempty"`
	ComputeServers *BillingZonesInnerComputeServers `json:"computeServers,omitempty"`
	Instances *BillingZonesInnerInstances `json:"instances,omitempty"`
	DiscoveredServers *BillingZonesInnerComputeServers `json:"discoveredServers,omitempty"`
	LoadBalancers *BillingZonesInnerLoadBalancers `json:"loadBalancers,omitempty"`
	VirtualImages *BillingZonesInnerVirtualImages `json:"virtualImages,omitempty"`
	Snapshots *BillingZonesInnerSnapshots `json:"snapshots,omitempty"`
	Price *float32 `json:"price,omitempty"`
	Cost *float32 `json:"cost,omitempty"`
}

// NewBillingZonesInner instantiates a new BillingZonesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingZonesInner() *BillingZonesInner {
	this := BillingZonesInner{}
	return &this
}

// NewBillingZonesInnerWithDefaults instantiates a new BillingZonesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingZonesInnerWithDefaults() *BillingZonesInner {
	this := BillingZonesInner{}
	return &this
}

// GetZoneName returns the ZoneName field value if set, zero value otherwise.
func (o *BillingZonesInner) GetZoneName() string {
	if o == nil || IsNil(o.ZoneName) {
		var ret string
		return ret
	}
	return *o.ZoneName
}

// GetZoneNameOk returns a tuple with the ZoneName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingZonesInner) GetZoneNameOk() (*string, bool) {
	if o == nil || IsNil(o.ZoneName) {
		return nil, false
	}
	return o.ZoneName, true
}

// HasZoneName returns a boolean if a field has been set.
func (o *BillingZonesInner) HasZoneName() bool {
	if o != nil && !IsNil(o.ZoneName) {
		return true
	}

	return false
}

// SetZoneName gets a reference to the given string and assigns it to the ZoneName field.
func (o *BillingZonesInner) SetZoneName(v string) {
	o.ZoneName = &v
}

// GetZoneId returns the ZoneId field value if set, zero value otherwise.
func (o *BillingZonesInner) GetZoneId() int64 {
	if o == nil || IsNil(o.ZoneId) {
		var ret int64
		return ret
	}
	return *o.ZoneId
}

// GetZoneIdOk returns a tuple with the ZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingZonesInner) GetZoneIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ZoneId) {
		return nil, false
	}
	return o.ZoneId, true
}

// HasZoneId returns a boolean if a field has been set.
func (o *BillingZonesInner) HasZoneId() bool {
	if o != nil && !IsNil(o.ZoneId) {
		return true
	}

	return false
}

// SetZoneId gets a reference to the given int64 and assigns it to the ZoneId field.
func (o *BillingZonesInner) SetZoneId(v int64) {
	o.ZoneId = &v
}

// GetZoneUUID returns the ZoneUUID field value if set, zero value otherwise.
func (o *BillingZonesInner) GetZoneUUID() string {
	if o == nil || IsNil(o.ZoneUUID) {
		var ret string
		return ret
	}
	return *o.ZoneUUID
}

// GetZoneUUIDOk returns a tuple with the ZoneUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingZonesInner) GetZoneUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.ZoneUUID) {
		return nil, false
	}
	return o.ZoneUUID, true
}

// HasZoneUUID returns a boolean if a field has been set.
func (o *BillingZonesInner) HasZoneUUID() bool {
	if o != nil && !IsNil(o.ZoneUUID) {
		return true
	}

	return false
}

// SetZoneUUID gets a reference to the given string and assigns it to the ZoneUUID field.
func (o *BillingZonesInner) SetZoneUUID(v string) {
	o.ZoneUUID = &v
}

// GetZoneCode returns the ZoneCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BillingZonesInner) GetZoneCode() string {
	if o == nil || IsNil(o.ZoneCode.Get()) {
		var ret string
		return ret
	}
	return *o.ZoneCode.Get()
}

// GetZoneCodeOk returns a tuple with the ZoneCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingZonesInner) GetZoneCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ZoneCode.Get(), o.ZoneCode.IsSet()
}

// HasZoneCode returns a boolean if a field has been set.
func (o *BillingZonesInner) HasZoneCode() bool {
	if o != nil && o.ZoneCode.IsSet() {
		return true
	}

	return false
}

// SetZoneCode gets a reference to the given NullableString and assigns it to the ZoneCode field.
func (o *BillingZonesInner) SetZoneCode(v string) {
	o.ZoneCode.Set(&v)
}
// SetZoneCodeNil sets the value for ZoneCode to be an explicit nil
func (o *BillingZonesInner) SetZoneCodeNil() {
	o.ZoneCode.Set(nil)
}

// UnsetZoneCode ensures that no value is present for ZoneCode, not even an explicit nil
func (o *BillingZonesInner) UnsetZoneCode() {
	o.ZoneCode.Unset()
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *BillingZonesInner) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingZonesInner) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *BillingZonesInner) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *BillingZonesInner) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *BillingZonesInner) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingZonesInner) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *BillingZonesInner) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *BillingZonesInner) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetPriceUnit returns the PriceUnit field value if set, zero value otherwise.
func (o *BillingZonesInner) GetPriceUnit() string {
	if o == nil || IsNil(o.PriceUnit) {
		var ret string
		return ret
	}
	return *o.PriceUnit
}

// GetPriceUnitOk returns a tuple with the PriceUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingZonesInner) GetPriceUnitOk() (*string, bool) {
	if o == nil || IsNil(o.PriceUnit) {
		return nil, false
	}
	return o.PriceUnit, true
}

// HasPriceUnit returns a boolean if a field has been set.
func (o *BillingZonesInner) HasPriceUnit() bool {
	if o != nil && !IsNil(o.PriceUnit) {
		return true
	}

	return false
}

// SetPriceUnit gets a reference to the given string and assigns it to the PriceUnit field.
func (o *BillingZonesInner) SetPriceUnit(v string) {
	o.PriceUnit = &v
}

// GetComputeServers returns the ComputeServers field value if set, zero value otherwise.
func (o *BillingZonesInner) GetComputeServers() BillingZonesInnerComputeServers {
	if o == nil || IsNil(o.ComputeServers) {
		var ret BillingZonesInnerComputeServers
		return ret
	}
	return *o.ComputeServers
}

// GetComputeServersOk returns a tuple with the ComputeServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingZonesInner) GetComputeServersOk() (*BillingZonesInnerComputeServers, bool) {
	if o == nil || IsNil(o.ComputeServers) {
		return nil, false
	}
	return o.ComputeServers, true
}

// HasComputeServers returns a boolean if a field has been set.
func (o *BillingZonesInner) HasComputeServers() bool {
	if o != nil && !IsNil(o.ComputeServers) {
		return true
	}

	return false
}

// SetComputeServers gets a reference to the given BillingZonesInnerComputeServers and assigns it to the ComputeServers field.
func (o *BillingZonesInner) SetComputeServers(v BillingZonesInnerComputeServers) {
	o.ComputeServers = &v
}

// GetInstances returns the Instances field value if set, zero value otherwise.
func (o *BillingZonesInner) GetInstances() BillingZonesInnerInstances {
	if o == nil || IsNil(o.Instances) {
		var ret BillingZonesInnerInstances
		return ret
	}
	return *o.Instances
}

// GetInstancesOk returns a tuple with the Instances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingZonesInner) GetInstancesOk() (*BillingZonesInnerInstances, bool) {
	if o == nil || IsNil(o.Instances) {
		return nil, false
	}
	return o.Instances, true
}

// HasInstances returns a boolean if a field has been set.
func (o *BillingZonesInner) HasInstances() bool {
	if o != nil && !IsNil(o.Instances) {
		return true
	}

	return false
}

// SetInstances gets a reference to the given BillingZonesInnerInstances and assigns it to the Instances field.
func (o *BillingZonesInner) SetInstances(v BillingZonesInnerInstances) {
	o.Instances = &v
}

// GetDiscoveredServers returns the DiscoveredServers field value if set, zero value otherwise.
func (o *BillingZonesInner) GetDiscoveredServers() BillingZonesInnerComputeServers {
	if o == nil || IsNil(o.DiscoveredServers) {
		var ret BillingZonesInnerComputeServers
		return ret
	}
	return *o.DiscoveredServers
}

// GetDiscoveredServersOk returns a tuple with the DiscoveredServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingZonesInner) GetDiscoveredServersOk() (*BillingZonesInnerComputeServers, bool) {
	if o == nil || IsNil(o.DiscoveredServers) {
		return nil, false
	}
	return o.DiscoveredServers, true
}

// HasDiscoveredServers returns a boolean if a field has been set.
func (o *BillingZonesInner) HasDiscoveredServers() bool {
	if o != nil && !IsNil(o.DiscoveredServers) {
		return true
	}

	return false
}

// SetDiscoveredServers gets a reference to the given BillingZonesInnerComputeServers and assigns it to the DiscoveredServers field.
func (o *BillingZonesInner) SetDiscoveredServers(v BillingZonesInnerComputeServers) {
	o.DiscoveredServers = &v
}

// GetLoadBalancers returns the LoadBalancers field value if set, zero value otherwise.
func (o *BillingZonesInner) GetLoadBalancers() BillingZonesInnerLoadBalancers {
	if o == nil || IsNil(o.LoadBalancers) {
		var ret BillingZonesInnerLoadBalancers
		return ret
	}
	return *o.LoadBalancers
}

// GetLoadBalancersOk returns a tuple with the LoadBalancers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingZonesInner) GetLoadBalancersOk() (*BillingZonesInnerLoadBalancers, bool) {
	if o == nil || IsNil(o.LoadBalancers) {
		return nil, false
	}
	return o.LoadBalancers, true
}

// HasLoadBalancers returns a boolean if a field has been set.
func (o *BillingZonesInner) HasLoadBalancers() bool {
	if o != nil && !IsNil(o.LoadBalancers) {
		return true
	}

	return false
}

// SetLoadBalancers gets a reference to the given BillingZonesInnerLoadBalancers and assigns it to the LoadBalancers field.
func (o *BillingZonesInner) SetLoadBalancers(v BillingZonesInnerLoadBalancers) {
	o.LoadBalancers = &v
}

// GetVirtualImages returns the VirtualImages field value if set, zero value otherwise.
func (o *BillingZonesInner) GetVirtualImages() BillingZonesInnerVirtualImages {
	if o == nil || IsNil(o.VirtualImages) {
		var ret BillingZonesInnerVirtualImages
		return ret
	}
	return *o.VirtualImages
}

// GetVirtualImagesOk returns a tuple with the VirtualImages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingZonesInner) GetVirtualImagesOk() (*BillingZonesInnerVirtualImages, bool) {
	if o == nil || IsNil(o.VirtualImages) {
		return nil, false
	}
	return o.VirtualImages, true
}

// HasVirtualImages returns a boolean if a field has been set.
func (o *BillingZonesInner) HasVirtualImages() bool {
	if o != nil && !IsNil(o.VirtualImages) {
		return true
	}

	return false
}

// SetVirtualImages gets a reference to the given BillingZonesInnerVirtualImages and assigns it to the VirtualImages field.
func (o *BillingZonesInner) SetVirtualImages(v BillingZonesInnerVirtualImages) {
	o.VirtualImages = &v
}

// GetSnapshots returns the Snapshots field value if set, zero value otherwise.
func (o *BillingZonesInner) GetSnapshots() BillingZonesInnerSnapshots {
	if o == nil || IsNil(o.Snapshots) {
		var ret BillingZonesInnerSnapshots
		return ret
	}
	return *o.Snapshots
}

// GetSnapshotsOk returns a tuple with the Snapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingZonesInner) GetSnapshotsOk() (*BillingZonesInnerSnapshots, bool) {
	if o == nil || IsNil(o.Snapshots) {
		return nil, false
	}
	return o.Snapshots, true
}

// HasSnapshots returns a boolean if a field has been set.
func (o *BillingZonesInner) HasSnapshots() bool {
	if o != nil && !IsNil(o.Snapshots) {
		return true
	}

	return false
}

// SetSnapshots gets a reference to the given BillingZonesInnerSnapshots and assigns it to the Snapshots field.
func (o *BillingZonesInner) SetSnapshots(v BillingZonesInnerSnapshots) {
	o.Snapshots = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *BillingZonesInner) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingZonesInner) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *BillingZonesInner) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *BillingZonesInner) SetPrice(v float32) {
	o.Price = &v
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *BillingZonesInner) GetCost() float32 {
	if o == nil || IsNil(o.Cost) {
		var ret float32
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingZonesInner) GetCostOk() (*float32, bool) {
	if o == nil || IsNil(o.Cost) {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *BillingZonesInner) HasCost() bool {
	if o != nil && !IsNil(o.Cost) {
		return true
	}

	return false
}

// SetCost gets a reference to the given float32 and assigns it to the Cost field.
func (o *BillingZonesInner) SetCost(v float32) {
	o.Cost = &v
}

func (o BillingZonesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingZonesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ZoneName) {
		toSerialize["zoneName"] = o.ZoneName
	}
	if !IsNil(o.ZoneId) {
		toSerialize["zoneId"] = o.ZoneId
	}
	if !IsNil(o.ZoneUUID) {
		toSerialize["zoneUUID"] = o.ZoneUUID
	}
	if o.ZoneCode.IsSet() {
		toSerialize["zoneCode"] = o.ZoneCode.Get()
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.PriceUnit) {
		toSerialize["priceUnit"] = o.PriceUnit
	}
	if !IsNil(o.ComputeServers) {
		toSerialize["computeServers"] = o.ComputeServers
	}
	if !IsNil(o.Instances) {
		toSerialize["instances"] = o.Instances
	}
	if !IsNil(o.DiscoveredServers) {
		toSerialize["discoveredServers"] = o.DiscoveredServers
	}
	if !IsNil(o.LoadBalancers) {
		toSerialize["loadBalancers"] = o.LoadBalancers
	}
	if !IsNil(o.VirtualImages) {
		toSerialize["virtualImages"] = o.VirtualImages
	}
	if !IsNil(o.Snapshots) {
		toSerialize["snapshots"] = o.Snapshots
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Cost) {
		toSerialize["cost"] = o.Cost
	}
	return toSerialize, nil
}

type NullableBillingZonesInner struct {
	value *BillingZonesInner
	isSet bool
}

func (v NullableBillingZonesInner) Get() *BillingZonesInner {
	return v.value
}

func (v *NullableBillingZonesInner) Set(val *BillingZonesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingZonesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingZonesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingZonesInner(val *BillingZonesInner) *NullableBillingZonesInner {
	return &NullableBillingZonesInner{value: val, isSet: true}
}

func (v NullableBillingZonesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingZonesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


