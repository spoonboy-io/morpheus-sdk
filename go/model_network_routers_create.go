/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetworkRoutersCreate struct for NetworkRoutersCreate
type NetworkRoutersCreate struct {
	// Name
	Name string `json:"name"`
	Type NetworkRoutersCreateType `json:"type"`
	Site NetworkRoutersCreateSite `json:"site"`
	// Can be used to enable / disable the network router (true, false). Default is on
	Enabled *bool `json:"enabled,omitempty"`
	Zone *NetworkRoutersCreateZone `json:"zone,omitempty"`
	NetworkServer *NetworkRoutersCreateNetworkServer `json:"networkServer,omitempty"`
}

// NewNetworkRoutersCreate instantiates a new NetworkRoutersCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkRoutersCreate(name string, type_ NetworkRoutersCreateType, site NetworkRoutersCreateSite, ) *NetworkRoutersCreate {
	this := NetworkRoutersCreate{}
	this.Name = name
	this.Type = type_
	this.Site = site
	return &this
}

// NewNetworkRoutersCreateWithDefaults instantiates a new NetworkRoutersCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkRoutersCreateWithDefaults() *NetworkRoutersCreate {
	this := NetworkRoutersCreate{}
	return &this
}

// GetName returns the Name field value
func (o *NetworkRoutersCreate) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NetworkRoutersCreate) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NetworkRoutersCreate) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *NetworkRoutersCreate) GetType() NetworkRoutersCreateType {
	if o == nil  {
		var ret NetworkRoutersCreateType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *NetworkRoutersCreate) GetTypeOk() (*NetworkRoutersCreateType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *NetworkRoutersCreate) SetType(v NetworkRoutersCreateType) {
	o.Type = v
}

// GetSite returns the Site field value
func (o *NetworkRoutersCreate) GetSite() NetworkRoutersCreateSite {
	if o == nil  {
		var ret NetworkRoutersCreateSite
		return ret
	}

	return o.Site
}

// GetSiteOk returns a tuple with the Site field value
// and a boolean to check if the value has been set.
func (o *NetworkRoutersCreate) GetSiteOk() (*NetworkRoutersCreateSite, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Site, true
}

// SetSite sets field value
func (o *NetworkRoutersCreate) SetSite(v NetworkRoutersCreateSite) {
	o.Site = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *NetworkRoutersCreate) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRoutersCreate) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *NetworkRoutersCreate) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *NetworkRoutersCreate) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *NetworkRoutersCreate) GetZone() NetworkRoutersCreateZone {
	if o == nil || o.Zone == nil {
		var ret NetworkRoutersCreateZone
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRoutersCreate) GetZoneOk() (*NetworkRoutersCreateZone, bool) {
	if o == nil || o.Zone == nil {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *NetworkRoutersCreate) HasZone() bool {
	if o != nil && o.Zone != nil {
		return true
	}

	return false
}

// SetZone gets a reference to the given NetworkRoutersCreateZone and assigns it to the Zone field.
func (o *NetworkRoutersCreate) SetZone(v NetworkRoutersCreateZone) {
	o.Zone = &v
}

// GetNetworkServer returns the NetworkServer field value if set, zero value otherwise.
func (o *NetworkRoutersCreate) GetNetworkServer() NetworkRoutersCreateNetworkServer {
	if o == nil || o.NetworkServer == nil {
		var ret NetworkRoutersCreateNetworkServer
		return ret
	}
	return *o.NetworkServer
}

// GetNetworkServerOk returns a tuple with the NetworkServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkRoutersCreate) GetNetworkServerOk() (*NetworkRoutersCreateNetworkServer, bool) {
	if o == nil || o.NetworkServer == nil {
		return nil, false
	}
	return o.NetworkServer, true
}

// HasNetworkServer returns a boolean if a field has been set.
func (o *NetworkRoutersCreate) HasNetworkServer() bool {
	if o != nil && o.NetworkServer != nil {
		return true
	}

	return false
}

// SetNetworkServer gets a reference to the given NetworkRoutersCreateNetworkServer and assigns it to the NetworkServer field.
func (o *NetworkRoutersCreate) SetNetworkServer(v NetworkRoutersCreateNetworkServer) {
	o.NetworkServer = &v
}

func (o NetworkRoutersCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["site"] = o.Site
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Zone != nil {
		toSerialize["zone"] = o.Zone
	}
	if o.NetworkServer != nil {
		toSerialize["networkServer"] = o.NetworkServer
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkRoutersCreate struct {
	value *NetworkRoutersCreate
	isSet bool
}

func (v NullableNetworkRoutersCreate) Get() *NetworkRoutersCreate {
	return v.value
}

func (v *NullableNetworkRoutersCreate) Set(val *NetworkRoutersCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkRoutersCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkRoutersCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkRoutersCreate(val *NetworkRoutersCreate) *NullableNetworkRoutersCreate {
	return &NullableNetworkRoutersCreate{value: val, isSet: true}
}

func (v NullableNetworkRoutersCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkRoutersCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


