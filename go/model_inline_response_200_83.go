/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20083 struct for InlineResponse20083
type InlineResponse20083 struct {
	LoadBalancerNode *InlineResponse20083LoadBalancerNode `json:"loadBalancerNode,omitempty"`
}

// NewInlineResponse20083 instantiates a new InlineResponse20083 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20083() *InlineResponse20083 {
	this := InlineResponse20083{}
	return &this
}

// NewInlineResponse20083WithDefaults instantiates a new InlineResponse20083 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20083WithDefaults() *InlineResponse20083 {
	this := InlineResponse20083{}
	return &this
}

// GetLoadBalancerNode returns the LoadBalancerNode field value if set, zero value otherwise.
func (o *InlineResponse20083) GetLoadBalancerNode() InlineResponse20083LoadBalancerNode {
	if o == nil || o.LoadBalancerNode == nil {
		var ret InlineResponse20083LoadBalancerNode
		return ret
	}
	return *o.LoadBalancerNode
}

// GetLoadBalancerNodeOk returns a tuple with the LoadBalancerNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20083) GetLoadBalancerNodeOk() (*InlineResponse20083LoadBalancerNode, bool) {
	if o == nil || o.LoadBalancerNode == nil {
		return nil, false
	}
	return o.LoadBalancerNode, true
}

// HasLoadBalancerNode returns a boolean if a field has been set.
func (o *InlineResponse20083) HasLoadBalancerNode() bool {
	if o != nil && o.LoadBalancerNode != nil {
		return true
	}

	return false
}

// SetLoadBalancerNode gets a reference to the given InlineResponse20083LoadBalancerNode and assigns it to the LoadBalancerNode field.
func (o *InlineResponse20083) SetLoadBalancerNode(v InlineResponse20083LoadBalancerNode) {
	o.LoadBalancerNode = &v
}

func (o InlineResponse20083) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LoadBalancerNode != nil {
		toSerialize["loadBalancerNode"] = o.LoadBalancerNode
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20083 struct {
	value *InlineResponse20083
	isSet bool
}

func (v NullableInlineResponse20083) Get() *InlineResponse20083 {
	return v.value
}

func (v *NullableInlineResponse20083) Set(val *InlineResponse20083) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20083) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20083) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20083(val *InlineResponse20083) *NullableInlineResponse20083 {
	return &NullableInlineResponse20083{value: val, isSet: true}
}

func (v NullableInlineResponse20083) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20083) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


