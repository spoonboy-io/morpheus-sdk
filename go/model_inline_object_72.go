/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject72 struct for InlineObject72
type InlineObject72 struct {
	AppDeploy *ApiDeploysIdAppDeploy `json:"appDeploy,omitempty"`
}

// NewInlineObject72 instantiates a new InlineObject72 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject72() *InlineObject72 {
	this := InlineObject72{}
	return &this
}

// NewInlineObject72WithDefaults instantiates a new InlineObject72 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject72WithDefaults() *InlineObject72 {
	this := InlineObject72{}
	return &this
}

// GetAppDeploy returns the AppDeploy field value if set, zero value otherwise.
func (o *InlineObject72) GetAppDeploy() ApiDeploysIdAppDeploy {
	if o == nil || o.AppDeploy == nil {
		var ret ApiDeploysIdAppDeploy
		return ret
	}
	return *o.AppDeploy
}

// GetAppDeployOk returns a tuple with the AppDeploy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject72) GetAppDeployOk() (*ApiDeploysIdAppDeploy, bool) {
	if o == nil || o.AppDeploy == nil {
		return nil, false
	}
	return o.AppDeploy, true
}

// HasAppDeploy returns a boolean if a field has been set.
func (o *InlineObject72) HasAppDeploy() bool {
	if o != nil && o.AppDeploy != nil {
		return true
	}

	return false
}

// SetAppDeploy gets a reference to the given ApiDeploysIdAppDeploy and assigns it to the AppDeploy field.
func (o *InlineObject72) SetAppDeploy(v ApiDeploysIdAppDeploy) {
	o.AppDeploy = &v
}

func (o InlineObject72) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppDeploy != nil {
		toSerialize["appDeploy"] = o.AppDeploy
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject72 struct {
	value *InlineObject72
	isSet bool
}

func (v NullableInlineObject72) Get() *InlineObject72 {
	return v.value
}

func (v *NullableInlineObject72) Set(val *InlineObject72) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject72) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject72) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject72(val *InlineObject72) *NullableInlineObject72 {
	return &NullableInlineObject72{value: val, isSet: true}
}

func (v NullableInlineObject72) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject72) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


