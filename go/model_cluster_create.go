/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterCreate struct for ClusterCreate
type ClusterCreate struct {
	Type OneOfstringobject `json:"type"`
	// Name of the cluster to be created
	Name string `json:"name"`
	// Description of the cluster to be created
	Description *string `json:"description,omitempty"`
	// Array of strings (keywords). This will override labels passed under the `server` object.
	Labels *[]string `json:"labels,omitempty"`
	Group ClusterCreateGroup `json:"group"`
	Cloud ClusterCreateCloud `json:"cloud"`
	Layout ClusterCreateLayout `json:"layout"`
	Server ClusterServerCreate `json:"server"`
}

// NewClusterCreate instantiates a new ClusterCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterCreate(type_ OneOfstringobject, name string, group ClusterCreateGroup, cloud ClusterCreateCloud, layout ClusterCreateLayout, server ClusterServerCreate, ) *ClusterCreate {
	this := ClusterCreate{}
	this.Type = type_
	this.Name = name
	this.Group = group
	this.Cloud = cloud
	this.Layout = layout
	this.Server = server
	return &this
}

// NewClusterCreateWithDefaults instantiates a new ClusterCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterCreateWithDefaults() *ClusterCreate {
	this := ClusterCreate{}
	return &this
}

// GetType returns the Type field value
func (o *ClusterCreate) GetType() OneOfstringobject {
	if o == nil  {
		var ret OneOfstringobject
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ClusterCreate) GetTypeOk() (*OneOfstringobject, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ClusterCreate) SetType(v OneOfstringobject) {
	o.Type = v
}

// GetName returns the Name field value
func (o *ClusterCreate) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ClusterCreate) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ClusterCreate) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ClusterCreate) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ClusterCreate) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ClusterCreate) SetDescription(v string) {
	o.Description = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *ClusterCreate) GetLabels() []string {
	if o == nil || o.Labels == nil {
		var ret []string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterCreate) GetLabelsOk() (*[]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *ClusterCreate) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *ClusterCreate) SetLabels(v []string) {
	o.Labels = &v
}

// GetGroup returns the Group field value
func (o *ClusterCreate) GetGroup() ClusterCreateGroup {
	if o == nil  {
		var ret ClusterCreateGroup
		return ret
	}

	return o.Group
}

// GetGroupOk returns a tuple with the Group field value
// and a boolean to check if the value has been set.
func (o *ClusterCreate) GetGroupOk() (*ClusterCreateGroup, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Group, true
}

// SetGroup sets field value
func (o *ClusterCreate) SetGroup(v ClusterCreateGroup) {
	o.Group = v
}

// GetCloud returns the Cloud field value
func (o *ClusterCreate) GetCloud() ClusterCreateCloud {
	if o == nil  {
		var ret ClusterCreateCloud
		return ret
	}

	return o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value
// and a boolean to check if the value has been set.
func (o *ClusterCreate) GetCloudOk() (*ClusterCreateCloud, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Cloud, true
}

// SetCloud sets field value
func (o *ClusterCreate) SetCloud(v ClusterCreateCloud) {
	o.Cloud = v
}

// GetLayout returns the Layout field value
func (o *ClusterCreate) GetLayout() ClusterCreateLayout {
	if o == nil  {
		var ret ClusterCreateLayout
		return ret
	}

	return o.Layout
}

// GetLayoutOk returns a tuple with the Layout field value
// and a boolean to check if the value has been set.
func (o *ClusterCreate) GetLayoutOk() (*ClusterCreateLayout, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Layout, true
}

// SetLayout sets field value
func (o *ClusterCreate) SetLayout(v ClusterCreateLayout) {
	o.Layout = v
}

// GetServer returns the Server field value
func (o *ClusterCreate) GetServer() ClusterServerCreate {
	if o == nil  {
		var ret ClusterServerCreate
		return ret
	}

	return o.Server
}

// GetServerOk returns a tuple with the Server field value
// and a boolean to check if the value has been set.
func (o *ClusterCreate) GetServerOk() (*ClusterServerCreate, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Server, true
}

// SetServer sets field value
func (o *ClusterCreate) SetServer(v ClusterServerCreate) {
	o.Server = v
}

func (o ClusterCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if true {
		toSerialize["group"] = o.Group
	}
	if true {
		toSerialize["cloud"] = o.Cloud
	}
	if true {
		toSerialize["layout"] = o.Layout
	}
	if true {
		toSerialize["server"] = o.Server
	}
	return json.Marshal(toSerialize)
}

type NullableClusterCreate struct {
	value *ClusterCreate
	isSet bool
}

func (v NullableClusterCreate) Get() *ClusterCreate {
	return v.value
}

func (v *NullableClusterCreate) Set(val *ClusterCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterCreate(val *ClusterCreate) *NullableClusterCreate {
	return &NullableClusterCreate{value: val, isSet: true}
}

func (v NullableClusterCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


