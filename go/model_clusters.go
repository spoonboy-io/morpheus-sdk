/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Clusters struct for Clusters
type Clusters struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Code NullableString `json:"code,omitempty"`
	Category NullableString `json:"category,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Location NullableString `json:"location,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	ServiceUrl NullableString `json:"serviceUrl,omitempty"`
	ServiceHost NullableString `json:"serviceHost,omitempty"`
	ServicePath NullableString `json:"servicePath,omitempty"`
	ServiceHostname NullableString `json:"serviceHostname,omitempty"`
	ServicePort *int64 `json:"servicePort,omitempty"`
	ServiceUsername NullableString `json:"serviceUsername,omitempty"`
	ServicePassword NullableString `json:"servicePassword,omitempty"`
	ServicePasswordHash NullableString `json:"servicePasswordHash,omitempty"`
	ServiceToken *string `json:"serviceToken,omitempty"`
	ServiceTokenHash *string `json:"serviceTokenHash,omitempty"`
	ServiceAccess *string `json:"serviceAccess,omitempty"`
	ServiceAccessHash *string `json:"serviceAccessHash,omitempty"`
	ServiceCert NullableString `json:"serviceCert,omitempty"`
	ServiceCertHash NullableString `json:"serviceCertHash,omitempty"`
	ServiceVersion *string `json:"serviceVersion,omitempty"`
	SearchDomains NullableString `json:"searchDomains,omitempty"`
	EnableInternalDns *bool `json:"enableInternalDns,omitempty"`
	InternalId NullableString `json:"internalId,omitempty"`
	ExternalId NullableString `json:"externalId,omitempty"`
	DatacenterId NullableString `json:"datacenterId,omitempty"`
	Status *string `json:"status,omitempty"`
	StatusDate *time.Time `json:"statusDate,omitempty"`
	StatusMessage *string `json:"statusMessage,omitempty"`
	InventoryLevel *string `json:"inventoryLevel,omitempty"`
	LastSync *time.Time `json:"lastSync,omitempty"`
	NextRunDate *time.Time `json:"nextRunDate,omitempty"`
	LastSyncDuration *int64 `json:"lastSyncDuration,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	Managed *bool `json:"managed,omitempty"`
	Labels *[]string `json:"labels,omitempty"`
	ServiceEntry NullableString `json:"serviceEntry,omitempty"`
	CreatedBy *InlineResponse200107NetworkPoolCreatedBy `json:"createdBy,omitempty"`
	UserGroup NullableString `json:"userGroup,omitempty"`
	Layout *ClustersLayout `json:"layout,omitempty"`
	Owner *InlineResponse20040AppDeployInstance `json:"owner,omitempty"`
	Servers *[]ClustersServers `json:"servers,omitempty"`
	Accounts *[]map[string]interface{} `json:"accounts,omitempty"`
	Integrations *[]map[string]interface{} `json:"integrations,omitempty"`
	Site *InlineResponse20040AppDeployInstance `json:"site,omitempty"`
	Type *InlineResponse20040AppDeployInstance `json:"type,omitempty"`
	Zone *ClustersZone `json:"zone,omitempty"`
	WorkerStats *ClustersWorkerStats `json:"workerStats,omitempty"`
	Config *map[string]interface{} `json:"config,omitempty"`
}

// NewClusters instantiates a new Clusters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusters() *Clusters {
	this := Clusters{}
	return &this
}

// NewClustersWithDefaults instantiates a new Clusters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClustersWithDefaults() *Clusters {
	this := Clusters{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Clusters) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Clusters) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *Clusters) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Clusters) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Clusters) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Clusters) SetName(v string) {
	o.Name = &v
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Clusters) GetCode() string {
	if o == nil || o.Code.Get() == nil {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Clusters) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *Clusters) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *Clusters) SetCode(v string) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *Clusters) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *Clusters) UnsetCode() {
	o.Code.Unset()
}

// GetCategory returns the Category field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Clusters) GetCategory() string {
	if o == nil || o.Category.Get() == nil {
		var ret string
		return ret
	}
	return *o.Category.Get()
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Clusters) GetCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Category.Get(), o.Category.IsSet()
}

// HasCategory returns a boolean if a field has been set.
func (o *Clusters) HasCategory() bool {
	if o != nil && o.Category.IsSet() {
		return true
	}

	return false
}

// SetCategory gets a reference to the given NullableString and assigns it to the Category field.
func (o *Clusters) SetCategory(v string) {
	o.Category.Set(&v)
}
// SetCategoryNil sets the value for Category to be an explicit nil
func (o *Clusters) SetCategoryNil() {
	o.Category.Set(nil)
}

// UnsetCategory ensures that no value is present for Category, not even an explicit nil
func (o *Clusters) UnsetCategory() {
	o.Category.Unset()
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *Clusters) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetVisibilityOk() (*string, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *Clusters) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *Clusters) SetVisibility(v string) {
	o.Visibility = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Clusters) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Clusters) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *Clusters) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *Clusters) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *Clusters) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *Clusters) UnsetDescription() {
	o.Description.Unset()
}

// GetLocation returns the Location field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Clusters) GetLocation() string {
	if o == nil || o.Location.Get() == nil {
		var ret string
		return ret
	}
	return *o.Location.Get()
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Clusters) GetLocationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Location.Get(), o.Location.IsSet()
}

// HasLocation returns a boolean if a field has been set.
func (o *Clusters) HasLocation() bool {
	if o != nil && o.Location.IsSet() {
		return true
	}

	return false
}

// SetLocation gets a reference to the given NullableString and assigns it to the Location field.
func (o *Clusters) SetLocation(v string) {
	o.Location.Set(&v)
}
// SetLocationNil sets the value for Location to be an explicit nil
func (o *Clusters) SetLocationNil() {
	o.Location.Set(nil)
}

// UnsetLocation ensures that no value is present for Location, not even an explicit nil
func (o *Clusters) UnsetLocation() {
	o.Location.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *Clusters) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *Clusters) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *Clusters) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetServiceUrl returns the ServiceUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Clusters) GetServiceUrl() string {
	if o == nil || o.ServiceUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServiceUrl.Get()
}

// GetServiceUrlOk returns a tuple with the ServiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Clusters) GetServiceUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServiceUrl.Get(), o.ServiceUrl.IsSet()
}

// HasServiceUrl returns a boolean if a field has been set.
func (o *Clusters) HasServiceUrl() bool {
	if o != nil && o.ServiceUrl.IsSet() {
		return true
	}

	return false
}

// SetServiceUrl gets a reference to the given NullableString and assigns it to the ServiceUrl field.
func (o *Clusters) SetServiceUrl(v string) {
	o.ServiceUrl.Set(&v)
}
// SetServiceUrlNil sets the value for ServiceUrl to be an explicit nil
func (o *Clusters) SetServiceUrlNil() {
	o.ServiceUrl.Set(nil)
}

// UnsetServiceUrl ensures that no value is present for ServiceUrl, not even an explicit nil
func (o *Clusters) UnsetServiceUrl() {
	o.ServiceUrl.Unset()
}

// GetServiceHost returns the ServiceHost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Clusters) GetServiceHost() string {
	if o == nil || o.ServiceHost.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServiceHost.Get()
}

// GetServiceHostOk returns a tuple with the ServiceHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Clusters) GetServiceHostOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServiceHost.Get(), o.ServiceHost.IsSet()
}

// HasServiceHost returns a boolean if a field has been set.
func (o *Clusters) HasServiceHost() bool {
	if o != nil && o.ServiceHost.IsSet() {
		return true
	}

	return false
}

// SetServiceHost gets a reference to the given NullableString and assigns it to the ServiceHost field.
func (o *Clusters) SetServiceHost(v string) {
	o.ServiceHost.Set(&v)
}
// SetServiceHostNil sets the value for ServiceHost to be an explicit nil
func (o *Clusters) SetServiceHostNil() {
	o.ServiceHost.Set(nil)
}

// UnsetServiceHost ensures that no value is present for ServiceHost, not even an explicit nil
func (o *Clusters) UnsetServiceHost() {
	o.ServiceHost.Unset()
}

// GetServicePath returns the ServicePath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Clusters) GetServicePath() string {
	if o == nil || o.ServicePath.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServicePath.Get()
}

// GetServicePathOk returns a tuple with the ServicePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Clusters) GetServicePathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServicePath.Get(), o.ServicePath.IsSet()
}

// HasServicePath returns a boolean if a field has been set.
func (o *Clusters) HasServicePath() bool {
	if o != nil && o.ServicePath.IsSet() {
		return true
	}

	return false
}

// SetServicePath gets a reference to the given NullableString and assigns it to the ServicePath field.
func (o *Clusters) SetServicePath(v string) {
	o.ServicePath.Set(&v)
}
// SetServicePathNil sets the value for ServicePath to be an explicit nil
func (o *Clusters) SetServicePathNil() {
	o.ServicePath.Set(nil)
}

// UnsetServicePath ensures that no value is present for ServicePath, not even an explicit nil
func (o *Clusters) UnsetServicePath() {
	o.ServicePath.Unset()
}

// GetServiceHostname returns the ServiceHostname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Clusters) GetServiceHostname() string {
	if o == nil || o.ServiceHostname.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServiceHostname.Get()
}

// GetServiceHostnameOk returns a tuple with the ServiceHostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Clusters) GetServiceHostnameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServiceHostname.Get(), o.ServiceHostname.IsSet()
}

// HasServiceHostname returns a boolean if a field has been set.
func (o *Clusters) HasServiceHostname() bool {
	if o != nil && o.ServiceHostname.IsSet() {
		return true
	}

	return false
}

// SetServiceHostname gets a reference to the given NullableString and assigns it to the ServiceHostname field.
func (o *Clusters) SetServiceHostname(v string) {
	o.ServiceHostname.Set(&v)
}
// SetServiceHostnameNil sets the value for ServiceHostname to be an explicit nil
func (o *Clusters) SetServiceHostnameNil() {
	o.ServiceHostname.Set(nil)
}

// UnsetServiceHostname ensures that no value is present for ServiceHostname, not even an explicit nil
func (o *Clusters) UnsetServiceHostname() {
	o.ServiceHostname.Unset()
}

// GetServicePort returns the ServicePort field value if set, zero value otherwise.
func (o *Clusters) GetServicePort() int64 {
	if o == nil || o.ServicePort == nil {
		var ret int64
		return ret
	}
	return *o.ServicePort
}

// GetServicePortOk returns a tuple with the ServicePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetServicePortOk() (*int64, bool) {
	if o == nil || o.ServicePort == nil {
		return nil, false
	}
	return o.ServicePort, true
}

// HasServicePort returns a boolean if a field has been set.
func (o *Clusters) HasServicePort() bool {
	if o != nil && o.ServicePort != nil {
		return true
	}

	return false
}

// SetServicePort gets a reference to the given int64 and assigns it to the ServicePort field.
func (o *Clusters) SetServicePort(v int64) {
	o.ServicePort = &v
}

// GetServiceUsername returns the ServiceUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Clusters) GetServiceUsername() string {
	if o == nil || o.ServiceUsername.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServiceUsername.Get()
}

// GetServiceUsernameOk returns a tuple with the ServiceUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Clusters) GetServiceUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServiceUsername.Get(), o.ServiceUsername.IsSet()
}

// HasServiceUsername returns a boolean if a field has been set.
func (o *Clusters) HasServiceUsername() bool {
	if o != nil && o.ServiceUsername.IsSet() {
		return true
	}

	return false
}

// SetServiceUsername gets a reference to the given NullableString and assigns it to the ServiceUsername field.
func (o *Clusters) SetServiceUsername(v string) {
	o.ServiceUsername.Set(&v)
}
// SetServiceUsernameNil sets the value for ServiceUsername to be an explicit nil
func (o *Clusters) SetServiceUsernameNil() {
	o.ServiceUsername.Set(nil)
}

// UnsetServiceUsername ensures that no value is present for ServiceUsername, not even an explicit nil
func (o *Clusters) UnsetServiceUsername() {
	o.ServiceUsername.Unset()
}

// GetServicePassword returns the ServicePassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Clusters) GetServicePassword() string {
	if o == nil || o.ServicePassword.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServicePassword.Get()
}

// GetServicePasswordOk returns a tuple with the ServicePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Clusters) GetServicePasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServicePassword.Get(), o.ServicePassword.IsSet()
}

// HasServicePassword returns a boolean if a field has been set.
func (o *Clusters) HasServicePassword() bool {
	if o != nil && o.ServicePassword.IsSet() {
		return true
	}

	return false
}

// SetServicePassword gets a reference to the given NullableString and assigns it to the ServicePassword field.
func (o *Clusters) SetServicePassword(v string) {
	o.ServicePassword.Set(&v)
}
// SetServicePasswordNil sets the value for ServicePassword to be an explicit nil
func (o *Clusters) SetServicePasswordNil() {
	o.ServicePassword.Set(nil)
}

// UnsetServicePassword ensures that no value is present for ServicePassword, not even an explicit nil
func (o *Clusters) UnsetServicePassword() {
	o.ServicePassword.Unset()
}

// GetServicePasswordHash returns the ServicePasswordHash field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Clusters) GetServicePasswordHash() string {
	if o == nil || o.ServicePasswordHash.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServicePasswordHash.Get()
}

// GetServicePasswordHashOk returns a tuple with the ServicePasswordHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Clusters) GetServicePasswordHashOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServicePasswordHash.Get(), o.ServicePasswordHash.IsSet()
}

// HasServicePasswordHash returns a boolean if a field has been set.
func (o *Clusters) HasServicePasswordHash() bool {
	if o != nil && o.ServicePasswordHash.IsSet() {
		return true
	}

	return false
}

// SetServicePasswordHash gets a reference to the given NullableString and assigns it to the ServicePasswordHash field.
func (o *Clusters) SetServicePasswordHash(v string) {
	o.ServicePasswordHash.Set(&v)
}
// SetServicePasswordHashNil sets the value for ServicePasswordHash to be an explicit nil
func (o *Clusters) SetServicePasswordHashNil() {
	o.ServicePasswordHash.Set(nil)
}

// UnsetServicePasswordHash ensures that no value is present for ServicePasswordHash, not even an explicit nil
func (o *Clusters) UnsetServicePasswordHash() {
	o.ServicePasswordHash.Unset()
}

// GetServiceToken returns the ServiceToken field value if set, zero value otherwise.
func (o *Clusters) GetServiceToken() string {
	if o == nil || o.ServiceToken == nil {
		var ret string
		return ret
	}
	return *o.ServiceToken
}

// GetServiceTokenOk returns a tuple with the ServiceToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetServiceTokenOk() (*string, bool) {
	if o == nil || o.ServiceToken == nil {
		return nil, false
	}
	return o.ServiceToken, true
}

// HasServiceToken returns a boolean if a field has been set.
func (o *Clusters) HasServiceToken() bool {
	if o != nil && o.ServiceToken != nil {
		return true
	}

	return false
}

// SetServiceToken gets a reference to the given string and assigns it to the ServiceToken field.
func (o *Clusters) SetServiceToken(v string) {
	o.ServiceToken = &v
}

// GetServiceTokenHash returns the ServiceTokenHash field value if set, zero value otherwise.
func (o *Clusters) GetServiceTokenHash() string {
	if o == nil || o.ServiceTokenHash == nil {
		var ret string
		return ret
	}
	return *o.ServiceTokenHash
}

// GetServiceTokenHashOk returns a tuple with the ServiceTokenHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetServiceTokenHashOk() (*string, bool) {
	if o == nil || o.ServiceTokenHash == nil {
		return nil, false
	}
	return o.ServiceTokenHash, true
}

// HasServiceTokenHash returns a boolean if a field has been set.
func (o *Clusters) HasServiceTokenHash() bool {
	if o != nil && o.ServiceTokenHash != nil {
		return true
	}

	return false
}

// SetServiceTokenHash gets a reference to the given string and assigns it to the ServiceTokenHash field.
func (o *Clusters) SetServiceTokenHash(v string) {
	o.ServiceTokenHash = &v
}

// GetServiceAccess returns the ServiceAccess field value if set, zero value otherwise.
func (o *Clusters) GetServiceAccess() string {
	if o == nil || o.ServiceAccess == nil {
		var ret string
		return ret
	}
	return *o.ServiceAccess
}

// GetServiceAccessOk returns a tuple with the ServiceAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetServiceAccessOk() (*string, bool) {
	if o == nil || o.ServiceAccess == nil {
		return nil, false
	}
	return o.ServiceAccess, true
}

// HasServiceAccess returns a boolean if a field has been set.
func (o *Clusters) HasServiceAccess() bool {
	if o != nil && o.ServiceAccess != nil {
		return true
	}

	return false
}

// SetServiceAccess gets a reference to the given string and assigns it to the ServiceAccess field.
func (o *Clusters) SetServiceAccess(v string) {
	o.ServiceAccess = &v
}

// GetServiceAccessHash returns the ServiceAccessHash field value if set, zero value otherwise.
func (o *Clusters) GetServiceAccessHash() string {
	if o == nil || o.ServiceAccessHash == nil {
		var ret string
		return ret
	}
	return *o.ServiceAccessHash
}

// GetServiceAccessHashOk returns a tuple with the ServiceAccessHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetServiceAccessHashOk() (*string, bool) {
	if o == nil || o.ServiceAccessHash == nil {
		return nil, false
	}
	return o.ServiceAccessHash, true
}

// HasServiceAccessHash returns a boolean if a field has been set.
func (o *Clusters) HasServiceAccessHash() bool {
	if o != nil && o.ServiceAccessHash != nil {
		return true
	}

	return false
}

// SetServiceAccessHash gets a reference to the given string and assigns it to the ServiceAccessHash field.
func (o *Clusters) SetServiceAccessHash(v string) {
	o.ServiceAccessHash = &v
}

// GetServiceCert returns the ServiceCert field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Clusters) GetServiceCert() string {
	if o == nil || o.ServiceCert.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServiceCert.Get()
}

// GetServiceCertOk returns a tuple with the ServiceCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Clusters) GetServiceCertOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServiceCert.Get(), o.ServiceCert.IsSet()
}

// HasServiceCert returns a boolean if a field has been set.
func (o *Clusters) HasServiceCert() bool {
	if o != nil && o.ServiceCert.IsSet() {
		return true
	}

	return false
}

// SetServiceCert gets a reference to the given NullableString and assigns it to the ServiceCert field.
func (o *Clusters) SetServiceCert(v string) {
	o.ServiceCert.Set(&v)
}
// SetServiceCertNil sets the value for ServiceCert to be an explicit nil
func (o *Clusters) SetServiceCertNil() {
	o.ServiceCert.Set(nil)
}

// UnsetServiceCert ensures that no value is present for ServiceCert, not even an explicit nil
func (o *Clusters) UnsetServiceCert() {
	o.ServiceCert.Unset()
}

// GetServiceCertHash returns the ServiceCertHash field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Clusters) GetServiceCertHash() string {
	if o == nil || o.ServiceCertHash.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServiceCertHash.Get()
}

// GetServiceCertHashOk returns a tuple with the ServiceCertHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Clusters) GetServiceCertHashOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServiceCertHash.Get(), o.ServiceCertHash.IsSet()
}

// HasServiceCertHash returns a boolean if a field has been set.
func (o *Clusters) HasServiceCertHash() bool {
	if o != nil && o.ServiceCertHash.IsSet() {
		return true
	}

	return false
}

// SetServiceCertHash gets a reference to the given NullableString and assigns it to the ServiceCertHash field.
func (o *Clusters) SetServiceCertHash(v string) {
	o.ServiceCertHash.Set(&v)
}
// SetServiceCertHashNil sets the value for ServiceCertHash to be an explicit nil
func (o *Clusters) SetServiceCertHashNil() {
	o.ServiceCertHash.Set(nil)
}

// UnsetServiceCertHash ensures that no value is present for ServiceCertHash, not even an explicit nil
func (o *Clusters) UnsetServiceCertHash() {
	o.ServiceCertHash.Unset()
}

// GetServiceVersion returns the ServiceVersion field value if set, zero value otherwise.
func (o *Clusters) GetServiceVersion() string {
	if o == nil || o.ServiceVersion == nil {
		var ret string
		return ret
	}
	return *o.ServiceVersion
}

// GetServiceVersionOk returns a tuple with the ServiceVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetServiceVersionOk() (*string, bool) {
	if o == nil || o.ServiceVersion == nil {
		return nil, false
	}
	return o.ServiceVersion, true
}

// HasServiceVersion returns a boolean if a field has been set.
func (o *Clusters) HasServiceVersion() bool {
	if o != nil && o.ServiceVersion != nil {
		return true
	}

	return false
}

// SetServiceVersion gets a reference to the given string and assigns it to the ServiceVersion field.
func (o *Clusters) SetServiceVersion(v string) {
	o.ServiceVersion = &v
}

// GetSearchDomains returns the SearchDomains field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Clusters) GetSearchDomains() string {
	if o == nil || o.SearchDomains.Get() == nil {
		var ret string
		return ret
	}
	return *o.SearchDomains.Get()
}

// GetSearchDomainsOk returns a tuple with the SearchDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Clusters) GetSearchDomainsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SearchDomains.Get(), o.SearchDomains.IsSet()
}

// HasSearchDomains returns a boolean if a field has been set.
func (o *Clusters) HasSearchDomains() bool {
	if o != nil && o.SearchDomains.IsSet() {
		return true
	}

	return false
}

// SetSearchDomains gets a reference to the given NullableString and assigns it to the SearchDomains field.
func (o *Clusters) SetSearchDomains(v string) {
	o.SearchDomains.Set(&v)
}
// SetSearchDomainsNil sets the value for SearchDomains to be an explicit nil
func (o *Clusters) SetSearchDomainsNil() {
	o.SearchDomains.Set(nil)
}

// UnsetSearchDomains ensures that no value is present for SearchDomains, not even an explicit nil
func (o *Clusters) UnsetSearchDomains() {
	o.SearchDomains.Unset()
}

// GetEnableInternalDns returns the EnableInternalDns field value if set, zero value otherwise.
func (o *Clusters) GetEnableInternalDns() bool {
	if o == nil || o.EnableInternalDns == nil {
		var ret bool
		return ret
	}
	return *o.EnableInternalDns
}

// GetEnableInternalDnsOk returns a tuple with the EnableInternalDns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetEnableInternalDnsOk() (*bool, bool) {
	if o == nil || o.EnableInternalDns == nil {
		return nil, false
	}
	return o.EnableInternalDns, true
}

// HasEnableInternalDns returns a boolean if a field has been set.
func (o *Clusters) HasEnableInternalDns() bool {
	if o != nil && o.EnableInternalDns != nil {
		return true
	}

	return false
}

// SetEnableInternalDns gets a reference to the given bool and assigns it to the EnableInternalDns field.
func (o *Clusters) SetEnableInternalDns(v bool) {
	o.EnableInternalDns = &v
}

// GetInternalId returns the InternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Clusters) GetInternalId() string {
	if o == nil || o.InternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.InternalId.Get()
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Clusters) GetInternalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.InternalId.Get(), o.InternalId.IsSet()
}

// HasInternalId returns a boolean if a field has been set.
func (o *Clusters) HasInternalId() bool {
	if o != nil && o.InternalId.IsSet() {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given NullableString and assigns it to the InternalId field.
func (o *Clusters) SetInternalId(v string) {
	o.InternalId.Set(&v)
}
// SetInternalIdNil sets the value for InternalId to be an explicit nil
func (o *Clusters) SetInternalIdNil() {
	o.InternalId.Set(nil)
}

// UnsetInternalId ensures that no value is present for InternalId, not even an explicit nil
func (o *Clusters) UnsetInternalId() {
	o.InternalId.Unset()
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Clusters) GetExternalId() string {
	if o == nil || o.ExternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Clusters) GetExternalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *Clusters) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *Clusters) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}
// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *Clusters) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *Clusters) UnsetExternalId() {
	o.ExternalId.Unset()
}

// GetDatacenterId returns the DatacenterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Clusters) GetDatacenterId() string {
	if o == nil || o.DatacenterId.Get() == nil {
		var ret string
		return ret
	}
	return *o.DatacenterId.Get()
}

// GetDatacenterIdOk returns a tuple with the DatacenterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Clusters) GetDatacenterIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DatacenterId.Get(), o.DatacenterId.IsSet()
}

// HasDatacenterId returns a boolean if a field has been set.
func (o *Clusters) HasDatacenterId() bool {
	if o != nil && o.DatacenterId.IsSet() {
		return true
	}

	return false
}

// SetDatacenterId gets a reference to the given NullableString and assigns it to the DatacenterId field.
func (o *Clusters) SetDatacenterId(v string) {
	o.DatacenterId.Set(&v)
}
// SetDatacenterIdNil sets the value for DatacenterId to be an explicit nil
func (o *Clusters) SetDatacenterIdNil() {
	o.DatacenterId.Set(nil)
}

// UnsetDatacenterId ensures that no value is present for DatacenterId, not even an explicit nil
func (o *Clusters) UnsetDatacenterId() {
	o.DatacenterId.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Clusters) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Clusters) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Clusters) SetStatus(v string) {
	o.Status = &v
}

// GetStatusDate returns the StatusDate field value if set, zero value otherwise.
func (o *Clusters) GetStatusDate() time.Time {
	if o == nil || o.StatusDate == nil {
		var ret time.Time
		return ret
	}
	return *o.StatusDate
}

// GetStatusDateOk returns a tuple with the StatusDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetStatusDateOk() (*time.Time, bool) {
	if o == nil || o.StatusDate == nil {
		return nil, false
	}
	return o.StatusDate, true
}

// HasStatusDate returns a boolean if a field has been set.
func (o *Clusters) HasStatusDate() bool {
	if o != nil && o.StatusDate != nil {
		return true
	}

	return false
}

// SetStatusDate gets a reference to the given time.Time and assigns it to the StatusDate field.
func (o *Clusters) SetStatusDate(v time.Time) {
	o.StatusDate = &v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise.
func (o *Clusters) GetStatusMessage() string {
	if o == nil || o.StatusMessage == nil {
		var ret string
		return ret
	}
	return *o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetStatusMessageOk() (*string, bool) {
	if o == nil || o.StatusMessage == nil {
		return nil, false
	}
	return o.StatusMessage, true
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *Clusters) HasStatusMessage() bool {
	if o != nil && o.StatusMessage != nil {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given string and assigns it to the StatusMessage field.
func (o *Clusters) SetStatusMessage(v string) {
	o.StatusMessage = &v
}

// GetInventoryLevel returns the InventoryLevel field value if set, zero value otherwise.
func (o *Clusters) GetInventoryLevel() string {
	if o == nil || o.InventoryLevel == nil {
		var ret string
		return ret
	}
	return *o.InventoryLevel
}

// GetInventoryLevelOk returns a tuple with the InventoryLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetInventoryLevelOk() (*string, bool) {
	if o == nil || o.InventoryLevel == nil {
		return nil, false
	}
	return o.InventoryLevel, true
}

// HasInventoryLevel returns a boolean if a field has been set.
func (o *Clusters) HasInventoryLevel() bool {
	if o != nil && o.InventoryLevel != nil {
		return true
	}

	return false
}

// SetInventoryLevel gets a reference to the given string and assigns it to the InventoryLevel field.
func (o *Clusters) SetInventoryLevel(v string) {
	o.InventoryLevel = &v
}

// GetLastSync returns the LastSync field value if set, zero value otherwise.
func (o *Clusters) GetLastSync() time.Time {
	if o == nil || o.LastSync == nil {
		var ret time.Time
		return ret
	}
	return *o.LastSync
}

// GetLastSyncOk returns a tuple with the LastSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetLastSyncOk() (*time.Time, bool) {
	if o == nil || o.LastSync == nil {
		return nil, false
	}
	return o.LastSync, true
}

// HasLastSync returns a boolean if a field has been set.
func (o *Clusters) HasLastSync() bool {
	if o != nil && o.LastSync != nil {
		return true
	}

	return false
}

// SetLastSync gets a reference to the given time.Time and assigns it to the LastSync field.
func (o *Clusters) SetLastSync(v time.Time) {
	o.LastSync = &v
}

// GetNextRunDate returns the NextRunDate field value if set, zero value otherwise.
func (o *Clusters) GetNextRunDate() time.Time {
	if o == nil || o.NextRunDate == nil {
		var ret time.Time
		return ret
	}
	return *o.NextRunDate
}

// GetNextRunDateOk returns a tuple with the NextRunDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetNextRunDateOk() (*time.Time, bool) {
	if o == nil || o.NextRunDate == nil {
		return nil, false
	}
	return o.NextRunDate, true
}

// HasNextRunDate returns a boolean if a field has been set.
func (o *Clusters) HasNextRunDate() bool {
	if o != nil && o.NextRunDate != nil {
		return true
	}

	return false
}

// SetNextRunDate gets a reference to the given time.Time and assigns it to the NextRunDate field.
func (o *Clusters) SetNextRunDate(v time.Time) {
	o.NextRunDate = &v
}

// GetLastSyncDuration returns the LastSyncDuration field value if set, zero value otherwise.
func (o *Clusters) GetLastSyncDuration() int64 {
	if o == nil || o.LastSyncDuration == nil {
		var ret int64
		return ret
	}
	return *o.LastSyncDuration
}

// GetLastSyncDurationOk returns a tuple with the LastSyncDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetLastSyncDurationOk() (*int64, bool) {
	if o == nil || o.LastSyncDuration == nil {
		return nil, false
	}
	return o.LastSyncDuration, true
}

// HasLastSyncDuration returns a boolean if a field has been set.
func (o *Clusters) HasLastSyncDuration() bool {
	if o != nil && o.LastSyncDuration != nil {
		return true
	}

	return false
}

// SetLastSyncDuration gets a reference to the given int64 and assigns it to the LastSyncDuration field.
func (o *Clusters) SetLastSyncDuration(v int64) {
	o.LastSyncDuration = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *Clusters) GetDateCreated() time.Time {
	if o == nil || o.DateCreated == nil {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *Clusters) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *Clusters) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *Clusters) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *Clusters) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *Clusters) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetManaged returns the Managed field value if set, zero value otherwise.
func (o *Clusters) GetManaged() bool {
	if o == nil || o.Managed == nil {
		var ret bool
		return ret
	}
	return *o.Managed
}

// GetManagedOk returns a tuple with the Managed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetManagedOk() (*bool, bool) {
	if o == nil || o.Managed == nil {
		return nil, false
	}
	return o.Managed, true
}

// HasManaged returns a boolean if a field has been set.
func (o *Clusters) HasManaged() bool {
	if o != nil && o.Managed != nil {
		return true
	}

	return false
}

// SetManaged gets a reference to the given bool and assigns it to the Managed field.
func (o *Clusters) SetManaged(v bool) {
	o.Managed = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *Clusters) GetLabels() []string {
	if o == nil || o.Labels == nil {
		var ret []string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetLabelsOk() (*[]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *Clusters) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *Clusters) SetLabels(v []string) {
	o.Labels = &v
}

// GetServiceEntry returns the ServiceEntry field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Clusters) GetServiceEntry() string {
	if o == nil || o.ServiceEntry.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServiceEntry.Get()
}

// GetServiceEntryOk returns a tuple with the ServiceEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Clusters) GetServiceEntryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServiceEntry.Get(), o.ServiceEntry.IsSet()
}

// HasServiceEntry returns a boolean if a field has been set.
func (o *Clusters) HasServiceEntry() bool {
	if o != nil && o.ServiceEntry.IsSet() {
		return true
	}

	return false
}

// SetServiceEntry gets a reference to the given NullableString and assigns it to the ServiceEntry field.
func (o *Clusters) SetServiceEntry(v string) {
	o.ServiceEntry.Set(&v)
}
// SetServiceEntryNil sets the value for ServiceEntry to be an explicit nil
func (o *Clusters) SetServiceEntryNil() {
	o.ServiceEntry.Set(nil)
}

// UnsetServiceEntry ensures that no value is present for ServiceEntry, not even an explicit nil
func (o *Clusters) UnsetServiceEntry() {
	o.ServiceEntry.Unset()
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *Clusters) GetCreatedBy() InlineResponse200107NetworkPoolCreatedBy {
	if o == nil || o.CreatedBy == nil {
		var ret InlineResponse200107NetworkPoolCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetCreatedByOk() (*InlineResponse200107NetworkPoolCreatedBy, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *Clusters) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given InlineResponse200107NetworkPoolCreatedBy and assigns it to the CreatedBy field.
func (o *Clusters) SetCreatedBy(v InlineResponse200107NetworkPoolCreatedBy) {
	o.CreatedBy = &v
}

// GetUserGroup returns the UserGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Clusters) GetUserGroup() string {
	if o == nil || o.UserGroup.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserGroup.Get()
}

// GetUserGroupOk returns a tuple with the UserGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Clusters) GetUserGroupOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserGroup.Get(), o.UserGroup.IsSet()
}

// HasUserGroup returns a boolean if a field has been set.
func (o *Clusters) HasUserGroup() bool {
	if o != nil && o.UserGroup.IsSet() {
		return true
	}

	return false
}

// SetUserGroup gets a reference to the given NullableString and assigns it to the UserGroup field.
func (o *Clusters) SetUserGroup(v string) {
	o.UserGroup.Set(&v)
}
// SetUserGroupNil sets the value for UserGroup to be an explicit nil
func (o *Clusters) SetUserGroupNil() {
	o.UserGroup.Set(nil)
}

// UnsetUserGroup ensures that no value is present for UserGroup, not even an explicit nil
func (o *Clusters) UnsetUserGroup() {
	o.UserGroup.Unset()
}

// GetLayout returns the Layout field value if set, zero value otherwise.
func (o *Clusters) GetLayout() ClustersLayout {
	if o == nil || o.Layout == nil {
		var ret ClustersLayout
		return ret
	}
	return *o.Layout
}

// GetLayoutOk returns a tuple with the Layout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetLayoutOk() (*ClustersLayout, bool) {
	if o == nil || o.Layout == nil {
		return nil, false
	}
	return o.Layout, true
}

// HasLayout returns a boolean if a field has been set.
func (o *Clusters) HasLayout() bool {
	if o != nil && o.Layout != nil {
		return true
	}

	return false
}

// SetLayout gets a reference to the given ClustersLayout and assigns it to the Layout field.
func (o *Clusters) SetLayout(v ClustersLayout) {
	o.Layout = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *Clusters) GetOwner() InlineResponse20040AppDeployInstance {
	if o == nil || o.Owner == nil {
		var ret InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetOwnerOk() (*InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *Clusters) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given InlineResponse20040AppDeployInstance and assigns it to the Owner field.
func (o *Clusters) SetOwner(v InlineResponse20040AppDeployInstance) {
	o.Owner = &v
}

// GetServers returns the Servers field value if set, zero value otherwise.
func (o *Clusters) GetServers() []ClustersServers {
	if o == nil || o.Servers == nil {
		var ret []ClustersServers
		return ret
	}
	return *o.Servers
}

// GetServersOk returns a tuple with the Servers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetServersOk() (*[]ClustersServers, bool) {
	if o == nil || o.Servers == nil {
		return nil, false
	}
	return o.Servers, true
}

// HasServers returns a boolean if a field has been set.
func (o *Clusters) HasServers() bool {
	if o != nil && o.Servers != nil {
		return true
	}

	return false
}

// SetServers gets a reference to the given []ClustersServers and assigns it to the Servers field.
func (o *Clusters) SetServers(v []ClustersServers) {
	o.Servers = &v
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *Clusters) GetAccounts() []map[string]interface{} {
	if o == nil || o.Accounts == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetAccountsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Accounts == nil {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *Clusters) HasAccounts() bool {
	if o != nil && o.Accounts != nil {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []map[string]interface{} and assigns it to the Accounts field.
func (o *Clusters) SetAccounts(v []map[string]interface{}) {
	o.Accounts = &v
}

// GetIntegrations returns the Integrations field value if set, zero value otherwise.
func (o *Clusters) GetIntegrations() []map[string]interface{} {
	if o == nil || o.Integrations == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Integrations
}

// GetIntegrationsOk returns a tuple with the Integrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetIntegrationsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Integrations == nil {
		return nil, false
	}
	return o.Integrations, true
}

// HasIntegrations returns a boolean if a field has been set.
func (o *Clusters) HasIntegrations() bool {
	if o != nil && o.Integrations != nil {
		return true
	}

	return false
}

// SetIntegrations gets a reference to the given []map[string]interface{} and assigns it to the Integrations field.
func (o *Clusters) SetIntegrations(v []map[string]interface{}) {
	o.Integrations = &v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *Clusters) GetSite() InlineResponse20040AppDeployInstance {
	if o == nil || o.Site == nil {
		var ret InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetSiteOk() (*InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Site == nil {
		return nil, false
	}
	return o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *Clusters) HasSite() bool {
	if o != nil && o.Site != nil {
		return true
	}

	return false
}

// SetSite gets a reference to the given InlineResponse20040AppDeployInstance and assigns it to the Site field.
func (o *Clusters) SetSite(v InlineResponse20040AppDeployInstance) {
	o.Site = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Clusters) GetType() InlineResponse20040AppDeployInstance {
	if o == nil || o.Type == nil {
		var ret InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetTypeOk() (*InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Clusters) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given InlineResponse20040AppDeployInstance and assigns it to the Type field.
func (o *Clusters) SetType(v InlineResponse20040AppDeployInstance) {
	o.Type = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *Clusters) GetZone() ClustersZone {
	if o == nil || o.Zone == nil {
		var ret ClustersZone
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetZoneOk() (*ClustersZone, bool) {
	if o == nil || o.Zone == nil {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *Clusters) HasZone() bool {
	if o != nil && o.Zone != nil {
		return true
	}

	return false
}

// SetZone gets a reference to the given ClustersZone and assigns it to the Zone field.
func (o *Clusters) SetZone(v ClustersZone) {
	o.Zone = &v
}

// GetWorkerStats returns the WorkerStats field value if set, zero value otherwise.
func (o *Clusters) GetWorkerStats() ClustersWorkerStats {
	if o == nil || o.WorkerStats == nil {
		var ret ClustersWorkerStats
		return ret
	}
	return *o.WorkerStats
}

// GetWorkerStatsOk returns a tuple with the WorkerStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetWorkerStatsOk() (*ClustersWorkerStats, bool) {
	if o == nil || o.WorkerStats == nil {
		return nil, false
	}
	return o.WorkerStats, true
}

// HasWorkerStats returns a boolean if a field has been set.
func (o *Clusters) HasWorkerStats() bool {
	if o != nil && o.WorkerStats != nil {
		return true
	}

	return false
}

// SetWorkerStats gets a reference to the given ClustersWorkerStats and assigns it to the WorkerStats field.
func (o *Clusters) SetWorkerStats(v ClustersWorkerStats) {
	o.WorkerStats = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *Clusters) GetConfig() map[string]interface{} {
	if o == nil || o.Config == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Clusters) GetConfigOk() (*map[string]interface{}, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *Clusters) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *Clusters) SetConfig(v map[string]interface{}) {
	o.Config = &v
}

func (o Clusters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	if o.Category.IsSet() {
		toSerialize["category"] = o.Category.Get()
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Location.IsSet() {
		toSerialize["location"] = o.Location.Get()
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.ServiceUrl.IsSet() {
		toSerialize["serviceUrl"] = o.ServiceUrl.Get()
	}
	if o.ServiceHost.IsSet() {
		toSerialize["serviceHost"] = o.ServiceHost.Get()
	}
	if o.ServicePath.IsSet() {
		toSerialize["servicePath"] = o.ServicePath.Get()
	}
	if o.ServiceHostname.IsSet() {
		toSerialize["serviceHostname"] = o.ServiceHostname.Get()
	}
	if o.ServicePort != nil {
		toSerialize["servicePort"] = o.ServicePort
	}
	if o.ServiceUsername.IsSet() {
		toSerialize["serviceUsername"] = o.ServiceUsername.Get()
	}
	if o.ServicePassword.IsSet() {
		toSerialize["servicePassword"] = o.ServicePassword.Get()
	}
	if o.ServicePasswordHash.IsSet() {
		toSerialize["servicePasswordHash"] = o.ServicePasswordHash.Get()
	}
	if o.ServiceToken != nil {
		toSerialize["serviceToken"] = o.ServiceToken
	}
	if o.ServiceTokenHash != nil {
		toSerialize["serviceTokenHash"] = o.ServiceTokenHash
	}
	if o.ServiceAccess != nil {
		toSerialize["serviceAccess"] = o.ServiceAccess
	}
	if o.ServiceAccessHash != nil {
		toSerialize["serviceAccessHash"] = o.ServiceAccessHash
	}
	if o.ServiceCert.IsSet() {
		toSerialize["serviceCert"] = o.ServiceCert.Get()
	}
	if o.ServiceCertHash.IsSet() {
		toSerialize["serviceCertHash"] = o.ServiceCertHash.Get()
	}
	if o.ServiceVersion != nil {
		toSerialize["serviceVersion"] = o.ServiceVersion
	}
	if o.SearchDomains.IsSet() {
		toSerialize["searchDomains"] = o.SearchDomains.Get()
	}
	if o.EnableInternalDns != nil {
		toSerialize["enableInternalDns"] = o.EnableInternalDns
	}
	if o.InternalId.IsSet() {
		toSerialize["internalId"] = o.InternalId.Get()
	}
	if o.ExternalId.IsSet() {
		toSerialize["externalId"] = o.ExternalId.Get()
	}
	if o.DatacenterId.IsSet() {
		toSerialize["datacenterId"] = o.DatacenterId.Get()
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StatusDate != nil {
		toSerialize["statusDate"] = o.StatusDate
	}
	if o.StatusMessage != nil {
		toSerialize["statusMessage"] = o.StatusMessage
	}
	if o.InventoryLevel != nil {
		toSerialize["inventoryLevel"] = o.InventoryLevel
	}
	if o.LastSync != nil {
		toSerialize["lastSync"] = o.LastSync
	}
	if o.NextRunDate != nil {
		toSerialize["nextRunDate"] = o.NextRunDate
	}
	if o.LastSyncDuration != nil {
		toSerialize["lastSyncDuration"] = o.LastSyncDuration
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if o.Managed != nil {
		toSerialize["managed"] = o.Managed
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.ServiceEntry.IsSet() {
		toSerialize["serviceEntry"] = o.ServiceEntry.Get()
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.UserGroup.IsSet() {
		toSerialize["userGroup"] = o.UserGroup.Get()
	}
	if o.Layout != nil {
		toSerialize["layout"] = o.Layout
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.Servers != nil {
		toSerialize["servers"] = o.Servers
	}
	if o.Accounts != nil {
		toSerialize["accounts"] = o.Accounts
	}
	if o.Integrations != nil {
		toSerialize["integrations"] = o.Integrations
	}
	if o.Site != nil {
		toSerialize["site"] = o.Site
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Zone != nil {
		toSerialize["zone"] = o.Zone
	}
	if o.WorkerStats != nil {
		toSerialize["workerStats"] = o.WorkerStats
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	return json.Marshal(toSerialize)
}

type NullableClusters struct {
	value *Clusters
	isSet bool
}

func (v NullableClusters) Get() *Clusters {
	return v.value
}

func (v *NullableClusters) Set(val *Clusters) {
	v.value = val
	v.isSet = true
}

func (v NullableClusters) IsSet() bool {
	return v.isSet
}

func (v *NullableClusters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusters(val *Clusters) *NullableClusters {
	return &NullableClusters{value: val, isSet: true}
}

func (v NullableClusters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


