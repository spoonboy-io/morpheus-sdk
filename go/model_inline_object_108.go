/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject108 struct for InlineObject108
type InlineObject108 struct {
	ContainerScript *ScriptUpdate `json:"containerScript,omitempty"`
}

// NewInlineObject108 instantiates a new InlineObject108 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject108() *InlineObject108 {
	this := InlineObject108{}
	return &this
}

// NewInlineObject108WithDefaults instantiates a new InlineObject108 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject108WithDefaults() *InlineObject108 {
	this := InlineObject108{}
	return &this
}

// GetContainerScript returns the ContainerScript field value if set, zero value otherwise.
func (o *InlineObject108) GetContainerScript() ScriptUpdate {
	if o == nil || o.ContainerScript == nil {
		var ret ScriptUpdate
		return ret
	}
	return *o.ContainerScript
}

// GetContainerScriptOk returns a tuple with the ContainerScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject108) GetContainerScriptOk() (*ScriptUpdate, bool) {
	if o == nil || o.ContainerScript == nil {
		return nil, false
	}
	return o.ContainerScript, true
}

// HasContainerScript returns a boolean if a field has been set.
func (o *InlineObject108) HasContainerScript() bool {
	if o != nil && o.ContainerScript != nil {
		return true
	}

	return false
}

// SetContainerScript gets a reference to the given ScriptUpdate and assigns it to the ContainerScript field.
func (o *InlineObject108) SetContainerScript(v ScriptUpdate) {
	o.ContainerScript = &v
}

func (o InlineObject108) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContainerScript != nil {
		toSerialize["containerScript"] = o.ContainerScript
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject108 struct {
	value *InlineObject108
	isSet bool
}

func (v NullableInlineObject108) Get() *InlineObject108 {
	return v.value
}

func (v *NullableInlineObject108) Set(val *InlineObject108) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject108) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject108) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject108(val *InlineObject108) *NullableInlineObject108 {
	return &NullableInlineObject108{value: val, isSet: true}
}

func (v NullableInlineObject108) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject108) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


