/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject53 struct for InlineObject53
type InlineObject53 struct {
	Cluster *ClusterUpdate `json:"cluster,omitempty"`
}

// NewInlineObject53 instantiates a new InlineObject53 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject53() *InlineObject53 {
	this := InlineObject53{}
	return &this
}

// NewInlineObject53WithDefaults instantiates a new InlineObject53 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject53WithDefaults() *InlineObject53 {
	this := InlineObject53{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *InlineObject53) GetCluster() ClusterUpdate {
	if o == nil || o.Cluster == nil {
		var ret ClusterUpdate
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject53) GetClusterOk() (*ClusterUpdate, bool) {
	if o == nil || o.Cluster == nil {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *InlineObject53) HasCluster() bool {
	if o != nil && o.Cluster != nil {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterUpdate and assigns it to the Cluster field.
func (o *InlineObject53) SetCluster(v ClusterUpdate) {
	o.Cluster = &v
}

func (o InlineObject53) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cluster != nil {
		toSerialize["cluster"] = o.Cluster
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject53 struct {
	value *InlineObject53
	isSet bool
}

func (v NullableInlineObject53) Get() *InlineObject53 {
	return v.value
}

func (v *NullableInlineObject53) Set(val *InlineObject53) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject53) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject53) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject53(val *InlineObject53) *NullableInlineObject53 {
	return &NullableInlineObject53{value: val, isSet: true}
}

func (v NullableInlineObject53) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject53) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


