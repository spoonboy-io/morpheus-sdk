/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200165 struct for InlineResponse200165
type InlineResponse200165 struct {
	VirtualImage *VirtualImage `json:"virtualImage,omitempty"`
}

// NewInlineResponse200165 instantiates a new InlineResponse200165 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200165() *InlineResponse200165 {
	this := InlineResponse200165{}
	return &this
}

// NewInlineResponse200165WithDefaults instantiates a new InlineResponse200165 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200165WithDefaults() *InlineResponse200165 {
	this := InlineResponse200165{}
	return &this
}

// GetVirtualImage returns the VirtualImage field value if set, zero value otherwise.
func (o *InlineResponse200165) GetVirtualImage() VirtualImage {
	if o == nil || o.VirtualImage == nil {
		var ret VirtualImage
		return ret
	}
	return *o.VirtualImage
}

// GetVirtualImageOk returns a tuple with the VirtualImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200165) GetVirtualImageOk() (*VirtualImage, bool) {
	if o == nil || o.VirtualImage == nil {
		return nil, false
	}
	return o.VirtualImage, true
}

// HasVirtualImage returns a boolean if a field has been set.
func (o *InlineResponse200165) HasVirtualImage() bool {
	if o != nil && o.VirtualImage != nil {
		return true
	}

	return false
}

// SetVirtualImage gets a reference to the given VirtualImage and assigns it to the VirtualImage field.
func (o *InlineResponse200165) SetVirtualImage(v VirtualImage) {
	o.VirtualImage = &v
}

func (o InlineResponse200165) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VirtualImage != nil {
		toSerialize["virtualImage"] = o.VirtualImage
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200165 struct {
	value *InlineResponse200165
	isSet bool
}

func (v NullableInlineResponse200165) Get() *InlineResponse200165 {
	return v.value
}

func (v *NullableInlineResponse200165) Set(val *InlineResponse200165) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200165) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200165) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200165(val *InlineResponse200165) *NullableInlineResponse200165 {
	return &NullableInlineResponse200165{value: val, isSet: true}
}

func (v NullableInlineResponse200165) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200165) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


