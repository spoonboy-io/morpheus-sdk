/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject246 struct for InlineObject246
type InlineObject246 struct {
	Task ApiTasksTask `json:"task"`
}

// NewInlineObject246 instantiates a new InlineObject246 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject246(task ApiTasksTask, ) *InlineObject246 {
	this := InlineObject246{}
	this.Task = task
	return &this
}

// NewInlineObject246WithDefaults instantiates a new InlineObject246 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject246WithDefaults() *InlineObject246 {
	this := InlineObject246{}
	return &this
}

// GetTask returns the Task field value
func (o *InlineObject246) GetTask() ApiTasksTask {
	if o == nil  {
		var ret ApiTasksTask
		return ret
	}

	return o.Task
}

// GetTaskOk returns a tuple with the Task field value
// and a boolean to check if the value has been set.
func (o *InlineObject246) GetTaskOk() (*ApiTasksTask, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Task, true
}

// SetTask sets field value
func (o *InlineObject246) SetTask(v ApiTasksTask) {
	o.Task = v
}

func (o InlineObject246) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["task"] = o.Task
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject246 struct {
	value *InlineObject246
	isSet bool
}

func (v NullableInlineObject246) Get() *InlineObject246 {
	return v.value
}

func (v *NullableInlineObject246) Set(val *InlineObject246) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject246) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject246) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject246(val *InlineObject246) *NullableInlineObject246 {
	return &NullableInlineObject246{value: val, isSet: true}
}

func (v NullableInlineObject246) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject246) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


