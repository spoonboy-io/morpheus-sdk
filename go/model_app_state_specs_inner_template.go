/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AppStateSpecsInnerTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppStateSpecsInnerTemplate{}

// AppStateSpecsInnerTemplate struct for AppStateSpecsInnerTemplate
type AppStateSpecsInnerTemplate struct {
	Name *string `json:"name,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewAppStateSpecsInnerTemplate instantiates a new AppStateSpecsInnerTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppStateSpecsInnerTemplate() *AppStateSpecsInnerTemplate {
	this := AppStateSpecsInnerTemplate{}
	return &this
}

// NewAppStateSpecsInnerTemplateWithDefaults instantiates a new AppStateSpecsInnerTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppStateSpecsInnerTemplateWithDefaults() *AppStateSpecsInnerTemplate {
	this := AppStateSpecsInnerTemplate{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AppStateSpecsInnerTemplate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStateSpecsInnerTemplate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AppStateSpecsInnerTemplate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AppStateSpecsInnerTemplate) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AppStateSpecsInnerTemplate) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppStateSpecsInnerTemplate) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AppStateSpecsInnerTemplate) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AppStateSpecsInnerTemplate) SetType(v string) {
	o.Type = &v
}

func (o AppStateSpecsInnerTemplate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppStateSpecsInnerTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableAppStateSpecsInnerTemplate struct {
	value *AppStateSpecsInnerTemplate
	isSet bool
}

func (v NullableAppStateSpecsInnerTemplate) Get() *AppStateSpecsInnerTemplate {
	return v.value
}

func (v *NullableAppStateSpecsInnerTemplate) Set(val *AppStateSpecsInnerTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableAppStateSpecsInnerTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableAppStateSpecsInnerTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppStateSpecsInnerTemplate(val *AppStateSpecsInnerTemplate) *NullableAppStateSpecsInnerTemplate {
	return &NullableAppStateSpecsInnerTemplate{value: val, isSet: true}
}

func (v NullableAppStateSpecsInnerTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppStateSpecsInnerTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


