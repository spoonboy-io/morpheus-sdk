/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200111 struct for InlineResponse200111
type InlineResponse200111 struct {
	NetworkProxy *map[string]interface{} `json:"networkProxy,omitempty"`
}

// NewInlineResponse200111 instantiates a new InlineResponse200111 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200111() *InlineResponse200111 {
	this := InlineResponse200111{}
	return &this
}

// NewInlineResponse200111WithDefaults instantiates a new InlineResponse200111 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200111WithDefaults() *InlineResponse200111 {
	this := InlineResponse200111{}
	return &this
}

// GetNetworkProxy returns the NetworkProxy field value if set, zero value otherwise.
func (o *InlineResponse200111) GetNetworkProxy() map[string]interface{} {
	if o == nil || o.NetworkProxy == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.NetworkProxy
}

// GetNetworkProxyOk returns a tuple with the NetworkProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200111) GetNetworkProxyOk() (*map[string]interface{}, bool) {
	if o == nil || o.NetworkProxy == nil {
		return nil, false
	}
	return o.NetworkProxy, true
}

// HasNetworkProxy returns a boolean if a field has been set.
func (o *InlineResponse200111) HasNetworkProxy() bool {
	if o != nil && o.NetworkProxy != nil {
		return true
	}

	return false
}

// SetNetworkProxy gets a reference to the given map[string]interface{} and assigns it to the NetworkProxy field.
func (o *InlineResponse200111) SetNetworkProxy(v map[string]interface{}) {
	o.NetworkProxy = &v
}

func (o InlineResponse200111) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkProxy != nil {
		toSerialize["networkProxy"] = o.NetworkProxy
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200111 struct {
	value *InlineResponse200111
	isSet bool
}

func (v NullableInlineResponse200111) Get() *InlineResponse200111 {
	return v.value
}

func (v *NullableInlineResponse200111) Set(val *InlineResponse200111) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200111) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200111) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200111(val *InlineResponse200111) *NullableInlineResponse200111 {
	return &NullableInlineResponse200111{value: val, isSet: true}
}

func (v NullableInlineResponse200111) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200111) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


