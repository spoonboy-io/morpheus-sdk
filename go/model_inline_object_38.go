/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject38 struct for InlineObject38
type InlineObject38 struct {
	CheckGroup ApiMonitoringGroupsIdCheckGroup `json:"checkGroup"`
}

// NewInlineObject38 instantiates a new InlineObject38 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject38(checkGroup ApiMonitoringGroupsIdCheckGroup, ) *InlineObject38 {
	this := InlineObject38{}
	this.CheckGroup = checkGroup
	return &this
}

// NewInlineObject38WithDefaults instantiates a new InlineObject38 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject38WithDefaults() *InlineObject38 {
	this := InlineObject38{}
	return &this
}

// GetCheckGroup returns the CheckGroup field value
func (o *InlineObject38) GetCheckGroup() ApiMonitoringGroupsIdCheckGroup {
	if o == nil  {
		var ret ApiMonitoringGroupsIdCheckGroup
		return ret
	}

	return o.CheckGroup
}

// GetCheckGroupOk returns a tuple with the CheckGroup field value
// and a boolean to check if the value has been set.
func (o *InlineObject38) GetCheckGroupOk() (*ApiMonitoringGroupsIdCheckGroup, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CheckGroup, true
}

// SetCheckGroup sets field value
func (o *InlineObject38) SetCheckGroup(v ApiMonitoringGroupsIdCheckGroup) {
	o.CheckGroup = v
}

func (o InlineObject38) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["checkGroup"] = o.CheckGroup
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject38 struct {
	value *InlineObject38
	isSet bool
}

func (v NullableInlineObject38) Get() *InlineObject38 {
	return v.value
}

func (v *NullableInlineObject38) Set(val *InlineObject38) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject38) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject38) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject38(val *InlineObject38) *NullableInlineObject38 {
	return &NullableInlineObject38{value: val, isSet: true}
}

func (v NullableInlineObject38) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject38) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


