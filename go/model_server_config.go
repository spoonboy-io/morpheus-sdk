/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ServerConfig struct for ServerConfig
type ServerConfig struct {
	PoolProviderType NullableString `json:"poolProviderType,omitempty"`
	IsVpcSelectable *bool `json:"isVpcSelectable,omitempty"`
	SmbiosAssetTag NullableString `json:"smbiosAssetTag,omitempty"`
	IsEC2 *bool `json:"isEC2,omitempty"`
	ResourcePoolId *int64 `json:"resourcePoolId,omitempty"`
	HostId NullableInt64 `json:"hostId,omitempty"`
	CreateUser *bool `json:"createUser,omitempty"`
	NestedVirtualization NullableString `json:"nestedVirtualization,omitempty"`
	VmwareFolderId *string `json:"vmwareFolderId,omitempty"`
	NoAgent *bool `json:"noAgent,omitempty"`
	PowerScheduleType NullableInt64 `json:"powerScheduleType,omitempty"`
}

// NewServerConfig instantiates a new ServerConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerConfig() *ServerConfig {
	this := ServerConfig{}
	return &this
}

// NewServerConfigWithDefaults instantiates a new ServerConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerConfigWithDefaults() *ServerConfig {
	this := ServerConfig{}
	return &this
}

// GetPoolProviderType returns the PoolProviderType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerConfig) GetPoolProviderType() string {
	if o == nil || o.PoolProviderType.Get() == nil {
		var ret string
		return ret
	}
	return *o.PoolProviderType.Get()
}

// GetPoolProviderTypeOk returns a tuple with the PoolProviderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerConfig) GetPoolProviderTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PoolProviderType.Get(), o.PoolProviderType.IsSet()
}

// HasPoolProviderType returns a boolean if a field has been set.
func (o *ServerConfig) HasPoolProviderType() bool {
	if o != nil && o.PoolProviderType.IsSet() {
		return true
	}

	return false
}

// SetPoolProviderType gets a reference to the given NullableString and assigns it to the PoolProviderType field.
func (o *ServerConfig) SetPoolProviderType(v string) {
	o.PoolProviderType.Set(&v)
}
// SetPoolProviderTypeNil sets the value for PoolProviderType to be an explicit nil
func (o *ServerConfig) SetPoolProviderTypeNil() {
	o.PoolProviderType.Set(nil)
}

// UnsetPoolProviderType ensures that no value is present for PoolProviderType, not even an explicit nil
func (o *ServerConfig) UnsetPoolProviderType() {
	o.PoolProviderType.Unset()
}

// GetIsVpcSelectable returns the IsVpcSelectable field value if set, zero value otherwise.
func (o *ServerConfig) GetIsVpcSelectable() bool {
	if o == nil || o.IsVpcSelectable == nil {
		var ret bool
		return ret
	}
	return *o.IsVpcSelectable
}

// GetIsVpcSelectableOk returns a tuple with the IsVpcSelectable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerConfig) GetIsVpcSelectableOk() (*bool, bool) {
	if o == nil || o.IsVpcSelectable == nil {
		return nil, false
	}
	return o.IsVpcSelectable, true
}

// HasIsVpcSelectable returns a boolean if a field has been set.
func (o *ServerConfig) HasIsVpcSelectable() bool {
	if o != nil && o.IsVpcSelectable != nil {
		return true
	}

	return false
}

// SetIsVpcSelectable gets a reference to the given bool and assigns it to the IsVpcSelectable field.
func (o *ServerConfig) SetIsVpcSelectable(v bool) {
	o.IsVpcSelectable = &v
}

// GetSmbiosAssetTag returns the SmbiosAssetTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerConfig) GetSmbiosAssetTag() string {
	if o == nil || o.SmbiosAssetTag.Get() == nil {
		var ret string
		return ret
	}
	return *o.SmbiosAssetTag.Get()
}

// GetSmbiosAssetTagOk returns a tuple with the SmbiosAssetTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerConfig) GetSmbiosAssetTagOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SmbiosAssetTag.Get(), o.SmbiosAssetTag.IsSet()
}

// HasSmbiosAssetTag returns a boolean if a field has been set.
func (o *ServerConfig) HasSmbiosAssetTag() bool {
	if o != nil && o.SmbiosAssetTag.IsSet() {
		return true
	}

	return false
}

// SetSmbiosAssetTag gets a reference to the given NullableString and assigns it to the SmbiosAssetTag field.
func (o *ServerConfig) SetSmbiosAssetTag(v string) {
	o.SmbiosAssetTag.Set(&v)
}
// SetSmbiosAssetTagNil sets the value for SmbiosAssetTag to be an explicit nil
func (o *ServerConfig) SetSmbiosAssetTagNil() {
	o.SmbiosAssetTag.Set(nil)
}

// UnsetSmbiosAssetTag ensures that no value is present for SmbiosAssetTag, not even an explicit nil
func (o *ServerConfig) UnsetSmbiosAssetTag() {
	o.SmbiosAssetTag.Unset()
}

// GetIsEC2 returns the IsEC2 field value if set, zero value otherwise.
func (o *ServerConfig) GetIsEC2() bool {
	if o == nil || o.IsEC2 == nil {
		var ret bool
		return ret
	}
	return *o.IsEC2
}

// GetIsEC2Ok returns a tuple with the IsEC2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerConfig) GetIsEC2Ok() (*bool, bool) {
	if o == nil || o.IsEC2 == nil {
		return nil, false
	}
	return o.IsEC2, true
}

// HasIsEC2 returns a boolean if a field has been set.
func (o *ServerConfig) HasIsEC2() bool {
	if o != nil && o.IsEC2 != nil {
		return true
	}

	return false
}

// SetIsEC2 gets a reference to the given bool and assigns it to the IsEC2 field.
func (o *ServerConfig) SetIsEC2(v bool) {
	o.IsEC2 = &v
}

// GetResourcePoolId returns the ResourcePoolId field value if set, zero value otherwise.
func (o *ServerConfig) GetResourcePoolId() int64 {
	if o == nil || o.ResourcePoolId == nil {
		var ret int64
		return ret
	}
	return *o.ResourcePoolId
}

// GetResourcePoolIdOk returns a tuple with the ResourcePoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerConfig) GetResourcePoolIdOk() (*int64, bool) {
	if o == nil || o.ResourcePoolId == nil {
		return nil, false
	}
	return o.ResourcePoolId, true
}

// HasResourcePoolId returns a boolean if a field has been set.
func (o *ServerConfig) HasResourcePoolId() bool {
	if o != nil && o.ResourcePoolId != nil {
		return true
	}

	return false
}

// SetResourcePoolId gets a reference to the given int64 and assigns it to the ResourcePoolId field.
func (o *ServerConfig) SetResourcePoolId(v int64) {
	o.ResourcePoolId = &v
}

// GetHostId returns the HostId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerConfig) GetHostId() int64 {
	if o == nil || o.HostId.Get() == nil {
		var ret int64
		return ret
	}
	return *o.HostId.Get()
}

// GetHostIdOk returns a tuple with the HostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerConfig) GetHostIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HostId.Get(), o.HostId.IsSet()
}

// HasHostId returns a boolean if a field has been set.
func (o *ServerConfig) HasHostId() bool {
	if o != nil && o.HostId.IsSet() {
		return true
	}

	return false
}

// SetHostId gets a reference to the given NullableInt64 and assigns it to the HostId field.
func (o *ServerConfig) SetHostId(v int64) {
	o.HostId.Set(&v)
}
// SetHostIdNil sets the value for HostId to be an explicit nil
func (o *ServerConfig) SetHostIdNil() {
	o.HostId.Set(nil)
}

// UnsetHostId ensures that no value is present for HostId, not even an explicit nil
func (o *ServerConfig) UnsetHostId() {
	o.HostId.Unset()
}

// GetCreateUser returns the CreateUser field value if set, zero value otherwise.
func (o *ServerConfig) GetCreateUser() bool {
	if o == nil || o.CreateUser == nil {
		var ret bool
		return ret
	}
	return *o.CreateUser
}

// GetCreateUserOk returns a tuple with the CreateUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerConfig) GetCreateUserOk() (*bool, bool) {
	if o == nil || o.CreateUser == nil {
		return nil, false
	}
	return o.CreateUser, true
}

// HasCreateUser returns a boolean if a field has been set.
func (o *ServerConfig) HasCreateUser() bool {
	if o != nil && o.CreateUser != nil {
		return true
	}

	return false
}

// SetCreateUser gets a reference to the given bool and assigns it to the CreateUser field.
func (o *ServerConfig) SetCreateUser(v bool) {
	o.CreateUser = &v
}

// GetNestedVirtualization returns the NestedVirtualization field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerConfig) GetNestedVirtualization() string {
	if o == nil || o.NestedVirtualization.Get() == nil {
		var ret string
		return ret
	}
	return *o.NestedVirtualization.Get()
}

// GetNestedVirtualizationOk returns a tuple with the NestedVirtualization field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerConfig) GetNestedVirtualizationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NestedVirtualization.Get(), o.NestedVirtualization.IsSet()
}

// HasNestedVirtualization returns a boolean if a field has been set.
func (o *ServerConfig) HasNestedVirtualization() bool {
	if o != nil && o.NestedVirtualization.IsSet() {
		return true
	}

	return false
}

// SetNestedVirtualization gets a reference to the given NullableString and assigns it to the NestedVirtualization field.
func (o *ServerConfig) SetNestedVirtualization(v string) {
	o.NestedVirtualization.Set(&v)
}
// SetNestedVirtualizationNil sets the value for NestedVirtualization to be an explicit nil
func (o *ServerConfig) SetNestedVirtualizationNil() {
	o.NestedVirtualization.Set(nil)
}

// UnsetNestedVirtualization ensures that no value is present for NestedVirtualization, not even an explicit nil
func (o *ServerConfig) UnsetNestedVirtualization() {
	o.NestedVirtualization.Unset()
}

// GetVmwareFolderId returns the VmwareFolderId field value if set, zero value otherwise.
func (o *ServerConfig) GetVmwareFolderId() string {
	if o == nil || o.VmwareFolderId == nil {
		var ret string
		return ret
	}
	return *o.VmwareFolderId
}

// GetVmwareFolderIdOk returns a tuple with the VmwareFolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerConfig) GetVmwareFolderIdOk() (*string, bool) {
	if o == nil || o.VmwareFolderId == nil {
		return nil, false
	}
	return o.VmwareFolderId, true
}

// HasVmwareFolderId returns a boolean if a field has been set.
func (o *ServerConfig) HasVmwareFolderId() bool {
	if o != nil && o.VmwareFolderId != nil {
		return true
	}

	return false
}

// SetVmwareFolderId gets a reference to the given string and assigns it to the VmwareFolderId field.
func (o *ServerConfig) SetVmwareFolderId(v string) {
	o.VmwareFolderId = &v
}

// GetNoAgent returns the NoAgent field value if set, zero value otherwise.
func (o *ServerConfig) GetNoAgent() bool {
	if o == nil || o.NoAgent == nil {
		var ret bool
		return ret
	}
	return *o.NoAgent
}

// GetNoAgentOk returns a tuple with the NoAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerConfig) GetNoAgentOk() (*bool, bool) {
	if o == nil || o.NoAgent == nil {
		return nil, false
	}
	return o.NoAgent, true
}

// HasNoAgent returns a boolean if a field has been set.
func (o *ServerConfig) HasNoAgent() bool {
	if o != nil && o.NoAgent != nil {
		return true
	}

	return false
}

// SetNoAgent gets a reference to the given bool and assigns it to the NoAgent field.
func (o *ServerConfig) SetNoAgent(v bool) {
	o.NoAgent = &v
}

// GetPowerScheduleType returns the PowerScheduleType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerConfig) GetPowerScheduleType() int64 {
	if o == nil || o.PowerScheduleType.Get() == nil {
		var ret int64
		return ret
	}
	return *o.PowerScheduleType.Get()
}

// GetPowerScheduleTypeOk returns a tuple with the PowerScheduleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerConfig) GetPowerScheduleTypeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PowerScheduleType.Get(), o.PowerScheduleType.IsSet()
}

// HasPowerScheduleType returns a boolean if a field has been set.
func (o *ServerConfig) HasPowerScheduleType() bool {
	if o != nil && o.PowerScheduleType.IsSet() {
		return true
	}

	return false
}

// SetPowerScheduleType gets a reference to the given NullableInt64 and assigns it to the PowerScheduleType field.
func (o *ServerConfig) SetPowerScheduleType(v int64) {
	o.PowerScheduleType.Set(&v)
}
// SetPowerScheduleTypeNil sets the value for PowerScheduleType to be an explicit nil
func (o *ServerConfig) SetPowerScheduleTypeNil() {
	o.PowerScheduleType.Set(nil)
}

// UnsetPowerScheduleType ensures that no value is present for PowerScheduleType, not even an explicit nil
func (o *ServerConfig) UnsetPowerScheduleType() {
	o.PowerScheduleType.Unset()
}

func (o ServerConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PoolProviderType.IsSet() {
		toSerialize["poolProviderType"] = o.PoolProviderType.Get()
	}
	if o.IsVpcSelectable != nil {
		toSerialize["isVpcSelectable"] = o.IsVpcSelectable
	}
	if o.SmbiosAssetTag.IsSet() {
		toSerialize["smbiosAssetTag"] = o.SmbiosAssetTag.Get()
	}
	if o.IsEC2 != nil {
		toSerialize["isEC2"] = o.IsEC2
	}
	if o.ResourcePoolId != nil {
		toSerialize["resourcePoolId"] = o.ResourcePoolId
	}
	if o.HostId.IsSet() {
		toSerialize["hostId"] = o.HostId.Get()
	}
	if o.CreateUser != nil {
		toSerialize["createUser"] = o.CreateUser
	}
	if o.NestedVirtualization.IsSet() {
		toSerialize["nestedVirtualization"] = o.NestedVirtualization.Get()
	}
	if o.VmwareFolderId != nil {
		toSerialize["vmwareFolderId"] = o.VmwareFolderId
	}
	if o.NoAgent != nil {
		toSerialize["noAgent"] = o.NoAgent
	}
	if o.PowerScheduleType.IsSet() {
		toSerialize["powerScheduleType"] = o.PowerScheduleType.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableServerConfig struct {
	value *ServerConfig
	isSet bool
}

func (v NullableServerConfig) Get() *ServerConfig {
	return v.value
}

func (v *NullableServerConfig) Set(val *ServerConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableServerConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableServerConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerConfig(val *ServerConfig) *NullableServerConfig {
	return &NullableServerConfig{value: val, isSet: true}
}

func (v NullableServerConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


