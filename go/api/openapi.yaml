openapi: 3.0.3
info:
  contact:
    email: dev@morpheusdata.com
  description: |-
    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.

    This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://morpheusdata.com/terms-and-conditions/
  title: Morpheus API
  version: 6.1.1
externalDocs:
  url: https://docs.morpheusdata.com
servers:
- description: Morpheus API
  url: "https://{serverURL}"
  variables:
    serverURL:
      default: CHANGEME
security:
- bearerAuth: []
tags:
- description: All Endpoints Under the Administration Tab
  name: Administration
- description: Manage Appliance Activity Logs
  name: Activity
- description: Manage Alerts
  name: Alerts
- description: Manage Appliance Settings
  name: Appliance Settings
- description: Manage Approvals
  name: Approvals
- description: Manage Apps
  name: Apps
- description: |
    Archives provides a way to store your files and make them available for download by your Scripts and Users.

    Archives are organized by buckets. Each bucket has a unique name that is used to identify it in URLs and Scripts.
  name: Archives
- description: Manage Appliance Authentication
  name: Authentication
- description: Manage Tasks and Workflows
  name: Automation
- description: Manage Backup Settings
  name: Backup Settings
- description: Manage Billing
  name: Billing
- description: Manage Blueprints
  name: Blueprints
- description: Manage Budgets
  name: Budgets
- description: |
    Provides API interfaces for the managing catalog item types. These are the types that become available for order by the Service Catalog persona. This is the adminstrative api for the Library: Catalog Items functionality which was previously located under Tools: Self Service.
  name: Catalog Items
- description: Manage Monitoring Checks
  name: Checks
- description: Manage Clients
  name: Clients
- description: Manage Clouds
  name: Clouds
- description: Manage Cluster Layouts
  name: Cluster Layouts
- description: Manage Kubernetes Clusters
  name: Clusters
- description: Manage Monitoring Contacts
  name: Contacts
- description: Manage Containers
  name: Containers
- description: Manage Credentials
  name: Credentials
- description: |-
    Cypher at its core is a secure Key/Value store. But what makes cypher useful is the ability to securely store or generate credentials to connect to your instances. Not only are these credentials encrypted but by using a cypher you don't have to burn in connection credentials between instances into your apps.
    Cypher keys can be revoked, either through lease timeouts or manually. So even if somebody were to gain access to your keys you could revoke access to the keys and generate new ones for your applications.
  name: Cypher
- description: View Dashboard Details
  name: Dashboard
- description: Manage File Deployments
  name: Deployments
- description: Manage Deploys
  name: Deploys
- description: "View documentation for your [Morpheus Data](https://morpheusdata.com)\
    \ appliance."
  name: Documentation
- description: Manage Environments
  name: Environments
- description: Manage File Templates
  name: File Templates
- description: Manage Groups
  name: Groups
- description: Manage Guidance Recommendations
  name: Guidance
- description: Manage Guidance Settings
  name: Guidance Settings
- description: View Appliance Health Statistics
  name: Health
- description: View History
  name: History
- description: Manage Hosts
  name: Hosts
- description: Manage Identity Sources
  name: Identity Sources
- description: Manage Image Builds
  name: Image Builds
- description: Manage Ticket Incidents
  name: Incidents
- description: All Endpoints Under the Infrastructure Tab
  name: Infrastructure
- description: Manage Inputs (Option Types)
  name: Inputs
- description: Manage Instance Types
  name: Instance Types
- description: Manage Instances
  name: Instances
- description: Manage Integrations
  name: Integrations
- description: Manage Invoices
  name: Invoices
- description: Manage Jobs
  name: Jobs
- description: Manage Key Pairs
  name: Key Pairs
- description: Manage Layouts
  name: Layouts
- description: All Endpoints Under the Library Tab
  name: Library
- description: Manage Appliance License
  name: License
- description: Manage Load Balancers
  name: Load Balancers
- description: Manage Log Settings
  name: Log Settings
- description: View Logs
  name: Logs
- description: All Endpoints Under the Monitoring Tab
  name: Monitoring
- description: Manage Monitoring Settings
  name: Monitoring Settings
- description: All Endpoints Specific to Morpheus API
  name: Morpheus API
- description: Manage Networks
  name: Networks
- description: Manage Node/VM Types
  name: Node Types
- description: All Endpoints Under the Operations Tab
  name: Operations
- description: Manage Option Lists
  name: Option Lists
- description: Manage Options
  name: Options
- description: All Endpoints Pertaining to Personas
  name: Personas
- description: Ping Appliance
  name: Ping
- description: Manage Plugins
  name: Plugins
- description: Manage Policies
  name: Policies
- description: Manage Price Sets
  name: Price Sets
- description: Manage Prices
  name: Prices
- description: Manage Projects
  name: Projects
- description: All Endpoints Under the Provisioning Tab
  name: Provisioning
- description: Manage Provisioning Settings
  name: Provisioning Settings
- description: |
    Provides API interfaces for managing provisioning licenses within Morpheus. This allows configuration of which Windows license keys should be installed when provisioning your virtual images.
  name: Provisioning Licenses
- description: Manage Reports
  name: Reports
- description: Manage Resource Pools
  name: Resource Pools
- description: Manage Roles (Authorities)
  name: Roles
- description: Manage Scripts
  name: Scripts
- description: Global Search Functions
  name: Search
- description: Manage Security Groups
  name: Security Groups
- description: Manage Security Packages
  name: Security Packages
- description: Manage Security Scans
  name: Security Scans
- description: Manage Self Service
  name: Self Service
- description: Manage Service Catalog
  name: Service Catalog
- description: Manage Service Plans
  name: Service Plans
- description: Setup New Appliance
  name: Setup
- description: Manage Spec Templates
  name: Spec Templates
- description: Manage SSL Certificates
  name: SSL Certificates
- description: Manage Storage
  name: Storage
- description: Manage Tenants (Accounts)
  name: Tenants
- description: All Endpoints Under the Tools Tab
  name: Tools
- description: View Usage
  name: Usage
- description: Manage Users
  name: Users
- description: Manage VDI Pools & Desktops
  name: VDI
- description: Manage Virtual Images
  name: Virtual Images
- description: Manage Whitelabelling
  name: Whitelabel Settings
- description: Manage Wiki
  name: Wiki
paths:
  /api/activity:
    get:
      description: |
        Retrieves activity.
      operationId: listActivity
      parameters:
      - description: Maximum number of records to return
        in: query
        name: max
        schema:
          default: 25
          format: int64
          type: integer
      - description: "Offset records, the number of records to skip, for paginating\
          \ requests"
        in: query
        name: offset
        schema:
          default: 0
          format: int64
          type: integer
      - description: "Sort order, the name of the property to sort by"
        in: query
        name: sort
        schema:
          default: name
          type: string
      - description: "Sort direction, use 'desc' to reverse sort"
        in: query
        name: order
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: Search phrase for partial matches on name or description
        in: query
        name: phrase
        schema:
          type: string
      - description: "Filter by name, wildcard may be specified as %, eg. example-%"
        example: example-%
        in: query
        name: name
        schema:
          type: string
      - description: Filter by User ID
        example: 6
        in: query
        name: userId
        schema:
          description: User ID
          format: int64
          type: integer
      - description: Filter by Tenant ID. Only available to the master account.
        example: 3
        in: query
        name: tenantId
        schema:
          type: number
      - description: "Filter by a timeframe (ex - today, yesterday, week, month, 3months)"
        in: query
        name: timeframe
        schema:
          default: month
          type: string
      - description: Filter by activity on or after a date(time). Default is 1 month
          prior
        in: query
        name: start
        schema:
          format: date-time
          type: string
      - description: Filter by activity on or before a date(time). Default is current
          date
        in: query
        name: end
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Search Response:
                  value:
                    $ref: ../components/examples/activity.json
              schema:
                $ref: '#/components/schemas/listActivity_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Retrieves Activity
      tags:
      - Activity
  /api/monitoring/alerts:
    get:
      description: Get a list of monitoring alerts.
      operationId: listAlerts
      parameters:
      - description: Maximum number of records to return
        in: query
        name: max
        schema:
          default: 25
          format: int64
          type: integer
      - description: "Offset records, the number of records to skip, for paginating\
          \ requests"
        in: query
        name: offset
        schema:
          default: 0
          format: int64
          type: integer
      - description: "Date filter, restricts query to only load resources updated\
          \ more recently than the date specified (ISO 8601)"
        example: 2019-03-06T17:52:29+0000
        in: query
        name: lastUpdated
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Alerts Response:
                  value:
                    $ref: ../components/examples/alerts.json
              schema:
                $ref: '#/components/schemas/listAlerts_200_response'
          description: Array of Alerts
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: List All Alerts
      tags:
      - Alerts
    post:
      description: Create a new monitoring alert.
      operationId: addAlerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addAlerts_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Alert Response - Create:
                  value:
                    $ref: ../components/examples/alertSuccess.json
              schema:
                $ref: '#/components/schemas/addAlerts_200_response'
          description: Alert Object
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Create a New Alert
      tags:
      - Alerts
  /api/monitoring/alerts/{id}:
    delete:
      description: Delete an existing monitoring alert.
      operationId: deleteAlerts
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Delete Alert Response:
                  value:
                    $ref: ../components/examples/success.json
              schema:
                $ref: '#/components/schemas/200-success'
          description: Success Object
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Delete a Specific Alert
      tags:
      - Alerts
    get:
      description: Get details about a specific monitoring alert.
      operationId: getAlerts
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Alert Response:
                  value:
                    $ref: ../components/examples/alert.json
              schema:
                $ref: '#/components/schemas/getAlerts_200_response'
          description: Alert Object
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Get a Specific Alert
      tags:
      - Alerts
    put:
      description: Update an existing monitoring alert.
      operationId: updateAlerts
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAlerts_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Alert Response:
                  value:
                    $ref: ../components/examples/alertSuccess.json
              schema:
                $ref: '#/components/schemas/updateAlerts_200_response'
          description: Alert Object
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Update Alert
      tags:
      - Alerts
  /api/appliance-settings:
    get:
      description: This endpoint retrieves appliance settings.
      operationId: listApplianceSettings
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful Response:
                  value:
                    $ref: ../components/examples/applianceSettings.json
              schema:
                $ref: '#/components/schemas/listApplianceSettings_200_response'
          description: Successful Response
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Get Appliance Settings
      tags:
      - Appliance Settings
    put:
      description: Update Appliance Settings
      operationId: updateApplianceSettings
      requestBody:
        content:
          application/json:
            examples:
              Appliance Update Request:
                value:
                  $ref: ../components/examples/applianceSettingsUpdate.json
            schema:
              $ref: '#/components/schemas/updateApplianceSettings_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful Response:
                  value:
                    $ref: ../components/examples/success.json
              schema:
                $ref: '#/components/schemas/200-success'
          description: Successful Response
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Update Appliance Settings
      tags:
      - Appliance Settings
  /api/appliance-settings/maintenance:
    post:
      description: This endpoint allows toggling the appliance maintenance mode.
      operationId: setApplianceSettingsMaintenanceMode
      parameters:
      - description: "Pass true to turn on maintenance mode, or false to turn it off.\
          \ If no value is given then it will be toggled from off to on or vice versa."
        in: query
        name: enabled
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful Response:
                  value:
                    $ref: ../components/examples/success.json
              schema:
                $ref: '#/components/schemas/200-success'
          description: Successful Response
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Toggle Maintenance Mode
      tags:
      - Appliance Settings
  /api/appliance-settings/reindex:
    post:
      description: Reindex all searchable data
      operationId: reindex
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful Response:
                  value:
                    $ref: ../components/examples/success.json
              schema:
                $ref: '#/components/schemas/200-success'
          description: Successful Response
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Reindex Search
      tags:
      - Appliance Settings
  /api/approval-items/{id}:
    get:
      description: |
        Retrieves a specific approval item.
      operationId: getApprovalsItem
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Search Response:
                  $ref: '#/components/examples/approvalItem'
              schema:
                $ref: '#/components/schemas/approvalItem'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Retrieves a Specific Approval Item
      tags:
      - Approvals
  /api/approval-items/{id}/{action}:
    put:
      description: |
        Updates a specific approval item.
      operationId: updateApprovalsItem
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: Approval Action Item
        example: approve
        in: path
        name: action
        required: true
        schema:
          enum:
          - approve
          - deny
          - cancel
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-success'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Updates a Specific Approval Item
      tags:
      - Approvals
  /api/approvals:
    get:
      description: |
        Retrieves all approvals.
      operationId: listApprovals
      parameters:
      - description: Maximum number of records to return
        in: query
        name: max
        schema:
          default: 25
          format: int64
          type: integer
      - description: "Offset records, the number of records to skip, for paginating\
          \ requests"
        in: query
        name: offset
        schema:
          default: 0
          format: int64
          type: integer
      - description: "Sort order, the name of the property to sort by"
        in: query
        name: sort
        schema:
          default: name
          type: string
      - description: "Sort direction, use 'desc' to reverse sort"
        example: asc
        in: query
        name: direction
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: Search phrase for partial matches on name or description
        in: query
        name: phrase
        schema:
          type: string
      - description: "Filter by name, wildcard may be specified as %, eg. example-%"
        example: example-%
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Search Response:
                  $ref: '#/components/examples/approvals'
              schema:
                $ref: '#/components/schemas/listApprovals_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Retrieves all Approvals
      tags:
      - Approvals
  /api/approvals/{id}:
    get:
      description: |
        Retrieves a specific approval.
      operationId: getApprovals
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Search Response:
                  value:
                    $ref: ../components/examples/approval.json
              schema:
                $ref: '#/components/schemas/getApprovals_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Retrieves a Specific Approval
      tags:
      - Approvals
  /api/apps:
    get:
      description: |
        This endpoint retrieves a paginated list of apps.
      operationId: listApps
      parameters:
      - description: Maximum number of records to return
        in: query
        name: max
        schema:
          default: 25
          format: int64
          type: integer
      - description: "Offset records, the number of records to skip, for paginating\
          \ requests"
        in: query
        name: offset
        schema:
          default: 0
          format: int64
          type: integer
      - description: "Filter by name, wildcard may be specified as %, eg. example-%"
        example: example-%
        in: query
        name: name
        schema:
          type: string
      - description: Search phrase for partial matches on name or description
        in: query
        name: phrase
        schema:
          type: string
      - description: The User ID for Filtering
        example: 63
        in: query
        name: createdBy
        schema:
          description: User ID
          format: int64
          type: integer
      - description: "If true, includes instances in pending removal status."
        example: true
        in: query
        name: showDeleted
        schema:
          default: false
          description: Show instances in pending removal status
          type: boolean
      - description: "Filter by label(s), matches records that contain any of the\
          \ specified labels"
        in: query
        name: labels
        schema:
          type: string
      - description: "Filter by label(s), matches records that contain all of the\
          \ specified labels"
        in: query
        name: allLabels
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Apps Response:
                  value:
                    $ref: ../components/examples/apps.json
              schema:
                $ref: '#/components/schemas/listApps_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Get All Apps
      tags:
      - Apps
    post:
      description: Create an App
      operationId: addApps
      requestBody:
        content:
          application/json:
            examples:
              App Request:
                value:
                  $ref: ../components/examples/appRequest.json
            schema:
              $ref: '#/components/schemas/appCreate'
      responses:
        "200":
          content:
            application/json:
              examples:
                Apps Response:
                  value:
                    $ref: ../components/examples/app.json
              schema:
                $ref: '#/components/schemas/addApps_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Create an App
      tags:
      - Apps
  /api/apps/{id}:
    delete:
      description: Will delete an app. Use removeInstances=on to also delete the instances
        in the app and all associated monitors and backups.
      operationId: deleteApp
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: Remove Instances
        example: "on"
        in: query
        name: removeInstances
        schema:
          default: "off"
          type: string
      - description: Preserve Volumes
        example: "on"
        in: query
        name: preserveVolumes
        schema:
          default: "off"
          type: string
      - description: Preserve copy of backups
        example: "on"
        in: query
        name: keepBackups
        schema:
          default: "off"
          type: string
      - description: Release Floating IPs
        example: "off"
        in: query
        name: releaseFloatingIps
        schema:
          default: "on"
          type: string
      - description: Alias for releaseFloatingIps
        example: "off"
        in: query
        name: releaseEIPs
        schema:
          default: "on"
          type: string
      - description: Force Delete
        example: "on"
        in: query
        name: force
        schema:
          default: "off"
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Response:
                  value:
                    $ref: ../components/examples/success.json
              schema:
                $ref: '#/components/schemas/200-success'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Delete an App
      tags:
      - Apps
    get:
      description: This endpoint retrieves a specific app.
      operationId: getApp
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Apps Response:
                  value:
                    $ref: ../components/examples/app.json
              schema:
                $ref: '#/components/schemas/getApp_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Get a Specific App
      tags:
      - Apps
    put:
      description: This endpoint provides updating of some basic app settings.
      operationId: updateApp
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            examples:
              App Update:
                value:
                  $ref: ../components/examples/appUpdate.json
            schema:
              $ref: '#/components/schemas/appUpdate'
      responses:
        "200":
          content:
            application/json:
              examples:
                Apps Response:
                  value:
                    $ref: ../components/examples/app.json
              schema:
                $ref: '#/components/schemas/getApp_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Updating an App
      tags:
      - Apps
  /api/apps/{id}/add-instance:
    post:
      description: Add Existing Instance to App
      operationId: addAppInstance
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            examples:
              App Update:
                value:
                  $ref: ../components/examples/appAddInstance.json
            schema:
              $ref: '#/components/schemas/addAppInstance_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Apps Response:
                  value:
                    $ref: ../components/examples/app.json
              schema:
                $ref: '#/components/schemas/getApp_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Add Existing Instance to App
      tags:
      - Apps
  /api/apps/{id}/apply:
    post:
      description: |
        This endpoint provides a way to apply the state of an app. This action only applies to Terraform, CloudFormation and ARM and will return an HTTP 400 error for other types.
      operationId: applyAppState
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/applyAppState_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful Response:
                  value:
                    $ref: ../components/examples/success.json
              schema:
                $ref: '#/components/schemas/200-success'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Apply State of an App
      tags:
      - Apps
  /api/apps/{id}/cancel-removal:
    put:
      description: This operation will undo the delete of an app that is pending removal.
      operationId: addAppUndoDelete
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Apps Response:
                  value:
                    $ref: ../components/examples/app.json
              schema:
                $ref: '#/components/schemas/getApp_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Undo Delete of an App
      tags:
      - Apps
  /api/apps/{id}/prepare-apply:
    get:
      description: |
        This endpoint provides a way to view the current app configuration and templateParameter variables available to apply. This action only applies to Terraform, CloudFormation and ARM and will return an HTTP 400 error for other types.
      operationId: prepareAppApply
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Apps Apply Response:
                  value:
                    $ref: ../components/examples/appPrepareApply.json
              schema:
                $ref: '#/components/schemas/prepareAppApply_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Prepare To Apply an App
      tags:
      - Apps
  /api/apps/{id}/refresh:
    post:
      description: "This endpoint provides a way to refresh the state of an app. This\
        \ action only applies to Terraform, CloudFormation and ARM and will return\
        \ an HTTP 400 error for other types.  \n"
      operationId: refreshAppState
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          content:
            application/json:
              examples:
                Response:
                  value:
                    $ref: ../components/examples/success.json
              schema:
                $ref: '#/components/schemas/200-success'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Refresh State of an App
      tags:
      - Apps
  /api/apps/{id}/remove-instance:
    post:
      description: Remove Instance from App
      operationId: removeAppInstance
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            examples:
              App Update:
                value:
                  $ref: ../components/examples/appRemoveInstance.json
            schema:
              $ref: '#/components/schemas/removeAppInstance_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Apps Response:
                  value:
                    $ref: ../components/examples/app.json
              schema:
                $ref: '#/components/schemas/getApp_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Remove Instance from App
      tags:
      - Apps
  /api/apps/{id}/security-groups:
    get:
      description: This returns a list of all of the security groups applied to an
        app and whether the firewall is enabled.
      operationId: getAppSecurityGroups
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Apps Security Groups Response:
                  value:
                    $ref: ../components/examples/appSecurityGroups.json
              schema:
                $ref: '#/components/schemas/getAppSecurityGroups_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Get Security Groups for an App
      tags:
      - Apps
    post:
      description: Set Security Groups for an App
      operationId: setAppSecurityGroups
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            examples:
              App Update:
                value:
                  $ref: ../components/examples/appUpdateSecurityGroups.json
            schema:
              $ref: '#/components/schemas/setAppSecurityGroups_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Apps Security Groups Response:
                  value:
                    $ref: ../components/examples/appSecurityGroups.json
              schema:
                $ref: '#/components/schemas/setAppSecurityGroups_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Set Security Groups for an App
      tags:
      - Apps
  /api/apps/{id}/state:
    get:
      description: |
        This endpoint provides a way to view the state of an app. The response includes output and resource planning information from the template provider software such as Terraform. This action only applies to Terraform, CloudFormation and ARM and will return an HTTP 400 error for other types.
      operationId: getAppState
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Apps State Response:
                  value:
                    $ref: ../components/examples/appState.json
              schema:
                $ref: '#/components/schemas/getAppState_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Get State of an App
      tags:
      - Apps
  /api/apps/{id}/validate-apply:
    post:
      description: |
        This endpoint provides a way to validate app configuration and templateParameter variables before executing the apply. This only validates the configuration to see any planned changes and it does not actually apply the changes. This action only applies to Terraform, CloudFormation and ARM and will return an HTTP 400 error for other types.
      operationId: validateAppState
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/applyAppState_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful Response:
                  value:
                    $ref: ../components/examples/appValidateApplyState.json
              schema:
                $ref: '#/components/schemas/validateAppState_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Validate Apply State for an App
      tags:
      - Apps
  /api/archives/buckets:
    get:
      description: This endpoint retrieves all archive buckets associated with the
        account.
      operationId: listArchiveBuckets
      parameters:
      - description: "Filter by name, wildcard may be specified as %, eg. example-%"
        example: example-%
        in: query
        name: name
        schema:
          type: string
      - description: Search phrase for partial matches on name or description
        in: query
        name: phrase
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Archive Buckets Response:
                  value:
                    $ref: ../components/examples/archiveBuckets.json
              schema:
                $ref: '#/components/schemas/listArchiveBuckets_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Get All Archive Buckets
      tags:
      - Archives
    post:
      description: Create an Archive Bucket
      operationId: addArchiveBucket
      requestBody:
        content:
          application/json:
            examples:
              Archive Buckets Request:
                value:
                  $ref: ../components/examples/archiveBucketRequest.json
            schema:
              $ref: '#/components/schemas/addArchiveBucket_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Archive Bucket Response:
                  value:
                    $ref: ../components/examples/archiveBucketCreateResponse.json
              schema:
                $ref: '#/components/schemas/addArchiveBucket_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Create an Archive Bucket
      tags:
      - Archives
  /api/archives/buckets/{id}:
    delete:
      description: Will delete an archive bucket from the system and make it no longer
        usable.
      operationId: deleteArchiveBucket
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Response:
                  value:
                    $ref: ../components/examples/success.json
              schema:
                $ref: '#/components/schemas/200-success'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Delete an Archive Bucket
      tags:
      - Archives
    get:
      description: This endpoint retrieves a specific archive bucket.
      operationId: getArchiveBucket
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Archive Bucket Response:
                  value:
                    $ref: ../components/examples/archiveBucket.json
              schema:
                $ref: '#/components/schemas/getArchiveBucket_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Get a Specific Archive Bucket
      tags:
      - Archives
    put:
      description: Update an Archive Bucket
      operationId: updateArchiveBucket
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            examples:
              Archive Bucket Request:
                value:
                  $ref: ../components/examples/archiveBucketUpdateRequest.json
            schema:
              $ref: '#/components/schemas/updateArchiveBucket_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Archive Bucket Response:
                  value:
                    $ref: ../components/examples/archiveBucketCreateResponse.json
              schema:
                $ref: '#/components/schemas/addArchiveBucket_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Update an Archive Bucket
      tags:
      - Archives
  /api/archives/buckets/{bucket}/files/{filepath}:
    get:
      description: This endpoint retrieves all files in an archive bucket under the
        specified `filePath`.
      operationId: listArchiveFiles
      parameters:
      - description: Bucket name
        in: path
        name: bucket
        required: true
        schema:
          type: string
      - description: The path to to search for files under. Default is the root directory
          /.
        in: path
        name: filepath
        required: true
        schema:
          default: /
          example: /config/environments/
          type: string
      - description: "Filter by name, wildcard may be specified as %, eg. example-%"
        example: example-%
        in: query
        name: name
        schema:
          type: string
      - description: Search phrase for partial matches on name or description
        in: query
        name: phrase
        schema:
          type: string
      - description: Include files under sub directories too. This is always true
          when searching with phrase.
        in: query
        name: fullTree
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              examples:
                Archive Files Response:
                  value:
                    $ref: ../components/examples/archiveBucketFiles.json
              schema:
                $ref: '#/components/schemas/listArchiveFiles_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Get All Archive Files
      tags:
      - Archives
    post:
      description: |
        Upload a file to the specified archive bucket and file path.

        This will overwrite the file if it already exists.
      operationId: addArchiveFile
      parameters:
      - description: Bucket name
        in: path
        name: bucket
        required: true
        schema:
          type: string
      - description: The path to to search for files under. Default is the root directory
          /.
        in: path
        name: filepath
        required: true
        schema:
          default: /
          example: /config/environments/
          type: string
      - description: Specify a filename for archive file. The base filename of the
          uploaded file is the default.
        example: /path/to/file
        in: query
        name: filename
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/addArchiveFile_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Archive File Response:
                  value:
                    $ref: ../components/examples/archiveFileUploadSuccess.json
              schema:
                $ref: '#/components/schemas/addArchiveFile_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Upload Archive File
      tags:
      - Archives
  /api/archives/download/{bucket}/{filepath}:
    get:
      description: |
        Download the file as an authorized user with access to the bucket.

        Downloading a directory will return a .zip file containing all files under it.
      operationId: getArchiveFile
      parameters:
      - description: Bucket name
        in: path
        name: bucket
        required: true
        schema:
          type: string
      - description: The path to to search for files under. Default is the root directory
          /.
        in: path
        name: filepath
        required: true
        schema:
          default: /
          example: /config/environments/
          type: string
      responses:
        "200":
          description: Returns the contents of the specified file as an attachment
            with Content-Type dictated by the file
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Download an Archive File
      tags:
      - Archives
  /api/archives/files/{id}:
    delete:
      description: |
        Permanently delete a file or directory.

        Deleting a directory will also delete all the files under it.
      operationId: deleteArchiveFile
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Response:
                  value:
                    $ref: ../components/examples/success.json
              schema:
                $ref: '#/components/schemas/200-success'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Delete Archive File
      tags:
      - Archives
    get:
      description: Get details about a specific archive file.
      operationId: getArchiveFileDetail
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Archive Files Response:
                  value:
                    $ref: ../components/examples/archiveBucketFile.json
              schema:
                $ref: '#/components/schemas/getArchiveFileDetail_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Get Archive File Details
      tags:
      - Archives
  /api/archives/files/{id}/links:
    get:
      description: This endpoint retrieves the links that have been created for the
        specified file.
      operationId: getArchiveFileLinks
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Archive Files Response:
                  value:
                    $ref: ../components/examples/archiveFileLinks.json
              schema:
                $ref: '#/components/schemas/getArchiveFileLinks_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Get Archive File Links
      tags:
      - Archives
    post:
      description: "This returns a secret token that can be used to download the file\
        \ via a public url, without any other authentication or authorization. File\
        \ links can be set to expire after a certain amount of time."
      operationId: addArchiveFileLink
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: Time to live in seconds. 0 means do not expire.
        example: 600
        in: query
        name: expireSeconds
        schema:
          default: 0
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Archive File Link Response:
                  value:
                    $ref: ../components/examples/archiveFileLinkCreateSuccess.json
              schema:
                $ref: '#/components/schemas/addArchiveFileLink_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Create an Archive File Link
      tags:
      - Archives
  /api/archives/files/{id}/links/{linkId}:
    delete:
      description: "This will delete the link from the system, so it can no longer\
        \ be used."
      operationId: deleteArchiveFileLink
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      - description: The ID of the archive file link.
        in: path
        name: linkId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Response:
                  value:
                    $ref: ../components/examples/success.json
              schema:
                $ref: '#/components/schemas/200-success'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Delete an Archive File Link
      tags:
      - Archives
  /api/forgot/reset-password:
    post:
      description: |
        This endpoint will reset the password for a user, updating it to the specified value. A secret token must be passed to identify the user who is being updated.

        **Note**: You can obtain this token by inspecting the URL of the “Click here to reset” link seen in the email.
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resetPassword_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resetPassword_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      security: []
      summary: Reset user password
      tags:
      - Authentication
  /api/forgot/send-email:
    post:
      description: |
        This endpoint will trigger the Reset your password email to be sent to the specified user.

        The User is identified by `username` and, if they exist, will be notified via their configured email address. The email notification will indicate a Reset Password Request was made and it will include a token.

        Once you obtain the token from the email, it may be used to reset the password of your user.

        **Note**: This is an unauthorized endpoint and the response will always appear successful, it is not possible determine from the response whether the user exists or if an email was sent.
      operationId: forgotPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/forgotPassword_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forgotPassword_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      security: []
      summary: Request a reset password email
      tags:
      - Authentication
  /api/execute-schedules:
    get:
      description: |
        Retrieves all execute schedules.
      operationId: listExecuteSchedules
      parameters:
      - description: Maximum number of records to return
        in: query
        name: max
        schema:
          default: 25
          format: int64
          type: integer
      - description: "Offset records, the number of records to skip, for paginating\
          \ requests"
        in: query
        name: offset
        schema:
          default: 0
          format: int64
          type: integer
      - description: "Sort order, the name of the property to sort by"
        in: query
        name: sort
        schema:
          default: name
          type: string
      - description: "Sort direction, use 'desc' to reverse sort"
        example: asc
        in: query
        name: direction
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: Search phrase for partial matches on name or description
        in: query
        name: phrase
        schema:
          type: string
      - description: "Filter by name, wildcard may be specified as %, eg. example-%"
        example: example-%
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Execute Schedules Response:
                  value:
                    $ref: ../components/examples/executeSchedules.json
              schema:
                $ref: '#/components/schemas/listExecuteSchedules_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Retrieves all Execute Schedules
      tags:
      - Automation
    post:
      description: |
        Creates a execute schedule.
      operationId: addExecuteSchedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addExecuteSchedules_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Execute Schedule Response:
                  value:
                    $ref: ../components/examples/executeScheduleSuccess.json
              schema:
                $ref: '#/components/schemas/addExecuteSchedules_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Creates a Execute Schedule
      tags:
      - Automation
  /api/execute-schedules/{id}:
    delete:
      description: |
        Deletes a specified execute schedule.
      operationId: removeExecuteSchedules
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-success'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Deletes a Execute Schedule
      tags:
      - Automation
    get:
      description: |
        Retrieves a specific execute schedule.
      operationId: getExecuteSchedules
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Execute Schedule Response:
                  value:
                    $ref: ../components/examples/executeSchedule.json
              schema:
                $ref: '#/components/schemas/getExecuteSchedules_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Retrieves a Specific Execute Schedule
      tags:
      - Automation
    put:
      description: |
        Updates a execute schedule.
      operationId: updateExecuteSchedules
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateExecuteSchedules_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Execute Schedule Response:
                  value:
                    $ref: ../components/examples/executeScheduleSuccess.json
              schema:
                $ref: '#/components/schemas/addExecuteSchedules_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Updates a Execute Schedule
      tags:
      - Automation
  /api/execution-request/execute:
    post:
      description: |
        Provides API interfaces for executing an arbitrary script or command on an instance, container or host.
      operationId: executeExecutionRequest
      parameters:
      - description: The Instance ID for Filtering
        example: 94
        in: query
        name: instanceId
        schema:
          description: Instance ID
          format: int64
          type: integer
      - description: The Container ID for Filtering
        example: 135
        in: query
        name: containerId
        schema:
          description: Container ID
          format: int64
          type: integer
      - description: The Server ID for Filtering
        example: 97
        in: query
        name: serverId
        schema:
          description: Server ID
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/executeExecutionRequest_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful Execution Request Response:
                  value:
                    $ref: ../components/examples/executionRequestSuccess.json
              schema:
                $ref: '#/components/schemas/executeExecutionRequest_200_response'
          description: Successful Execution Request Response
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Executes an Execution Request
      tags:
      - Automation
  /api/execution-request/{uniqueId}:
    get:
      description: |
        Retrieves a specific execution request.
      operationId: getExecutionRequest
      parameters:
      - description: The Unique ID of the execution request
        example: c56f75d0-a59a-4566-92e3-4dc716c5d076
        in: path
        name: uniqueId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Execution Request Response:
                  value:
                    $ref: ../components/examples/executionRequest.json
              schema:
                $ref: '#/components/schemas/getExecutionRequest_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Retrieves a Specific Execution Request
      tags:
      - Automation
  /api/backup-settings:
    get:
      description: This endpoint retrieves backup settings.
      operationId: listBackupSettings
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful Response:
                  value:
                    $ref: ../components/examples/backupSettings.json
              schema:
                $ref: '#/components/schemas/listBackupSettings_200_response'
          description: Successful Response
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Get Backup Settings
      tags:
      - Backup Settings
    put:
      description: Update Backup Settings
      operationId: updateBackupSettings
      requestBody:
        content:
          application/json:
            examples:
              Backup Update Request:
                value:
                  $ref: ../components/examples/backupSettingsUpdate.json
            schema:
              $ref: '#/components/schemas/updateBackupSettings_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful Response:
                  value:
                    $ref: ../components/examples/success.json
              schema:
                $ref: '#/components/schemas/200-success'
          description: Successful Response
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Update Backup Settings
      tags:
      - Backup Settings
  /api/billing/account:
    get:
      description: |
        Provides API interfaces for viewing billing usage information by tenant, zone, instance or server.
        By default, usage returned is from the beginning of the current month until now.
        The date range is parameterized but the end date cannot exceed the current date.
      operationId: listBillingAccount
      parameters:
      - description: Filter by startDate greater than or equal to a specified date
        example: 2019-01-01
        in: query
        name: startDate
        schema:
          type: string
      - description: Filter by endDate less than or equal to a specified date
        example: 2020-01-01
        in: query
        name: endDate
        schema:
          type: string
      - description: Optional ability to suppress the usage records
        in: query
        name: includeUsages
        schema:
          default: true
          type: boolean
      - description: Optional ability to limit the usages returned
        in: query
        name: maxUsages
        schema:
          format: int64
          type: integer
      - description: "Optional ability to offset the usages returned, for use with\
          \ maxUsages to paginate"
        in: query
        name: offsetUsages
        schema:
          format: int64
          type: integer
      - description: Optional ability to exclude compute servers
        in: query
        name: includeComputeServers
        schema:
          default: true
          type: boolean
      - description: Optional ability to exclude instances
        in: query
        name: includeInstances
        schema:
          default: true
          type: boolean
      - description: Optional ability to exclude discovered servers
        in: query
        name: includeDiscoveredServers
        schema:
          default: true
          type: boolean
      - description: Optional ability to exclude load balancers
        in: query
        name: includeLoadBalancers
        schema:
          default: true
          type: boolean
      - description: Optional ability to exclude virtual images
        in: query
        name: includeVirtualImages
        schema:
          default: true
          type: boolean
      - description: Optional ability to exclude snapshots
        in: query
        name: includeSnapshots
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              examples:
                Billing Response:
                  value:
                    $ref: ../components/examples/billing.json
              schema:
                $ref: '#/components/schemas/listBillingAccount_200_response'
          description: Array of Billing
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Retrieves billing information for the requesting user's account.
      tags:
      - Billing
  /api/billing/account/{id}:
    get:
      description: |
        Will retrieve billing information for a specific tenant, if it is the current account or a sub account of the requesting user's account.
      operationId: getBillingAccount
      parameters:
      - description: Filter by startDate greater than or equal to a specified date
        example: 2019-01-01
        in: query
        name: startDate
        schema:
          type: string
      - description: Filter by endDate less than or equal to a specified date
        example: 2020-01-01
        in: query
        name: endDate
        schema:
          type: string
      - description: Optional ability to suppress the usage records
        in: query
        name: includeUsages
        schema:
          default: true
          type: boolean
      - description: Optional ability to limit the usages returned
        in: query
        name: maxUsages
        schema:
          format: int64
          type: integer
      - description: "Optional ability to offset the usages returned, for use with\
          \ maxUsages to paginate"
        in: query
        name: offsetUsages
        schema:
          format: int64
          type: integer
      - description: Optional ability to exclude compute servers
        in: query
        name: includeComputeServers
        schema:
          default: true
          type: boolean
      - description: Optional ability to exclude instances
        in: query
        name: includeInstances
        schema:
          default: true
          type: boolean
      - description: Optional ability to exclude discovered servers
        in: query
        name: includeDiscoveredServers
        schema:
          default: true
          type: boolean
      - description: Optional ability to exclude load balancers
        in: query
        name: includeLoadBalancers
        schema:
          default: true
          type: boolean
      - description: Optional ability to exclude virtual images
        in: query
        name: includeVirtualImages
        schema:
          default: true
          type: boolean
      - description: Optional ability to exclude snapshots
        in: query
        name: includeSnapshots
        schema:
          default: true
          type: boolean
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Billing Response:
                  value:
                    $ref: ../components/examples/billing.json
              schema:
                $ref: '#/components/schemas/listBillingAccount_200_response'
          description: Array of Billing
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: This endpoint will retrieve a specific account by id if the user has
        permission to access it
      tags:
      - Billing
  /api/billing/instances:
    get:
      description: |
        Provides API interfaces for viewing billing usage information by tenant, zone, instance or server.
        By default, usage returned is from the beginning of the current month until now.
        The date range is parameterized but the end date cannot exceed the current date.
      operationId: listBillingInstances
      parameters:
      - description: Filter by startDate greater than or equal to a specified date
        example: 2019-01-01
        in: query
        name: startDate
        schema:
          type: string
      - description: Filter by endDate less than or equal to a specified date
        example: 2020-01-01
        in: query
        name: endDate
        schema:
          type: string
      - description: Optional ability to suppress the usage records
        in: query
        name: includeUsages
        schema:
          default: true
          type: boolean
      - description: Optional ability to limit the usages returned
        in: query
        name: maxUsages
        schema:
          format: int64
          type: integer
      - description: "Optional ability to offset the usages returned, for use with\
          \ maxUsages to paginate"
        in: query
        name: offsetUsages
        schema:
          format: int64
          type: integer
      - description: Optional ability to include all subtenant billing information
          when calling from a master tenant user
        in: query
        name: includeTenants
        schema:
          default: false
          type: boolean
      - description: Filter by Tenant ID. This is only available to master tenant
          users with permission to manage tenants and users.
        example: 3
        in: query
        name: accountId
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Billing Response:
                  value:
                    $ref: ../components/examples/billingInstances.json
              schema:
                $ref: '#/components/schemas/listBillingInstances_200_response'
          description: Array of Billing
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Retrieves billing information for all instances on the requestor's
        account.
      tags:
      - Billing
  /api/billing/instances/{identifier}:
    get:
      description: |
        Provides API interfaces for viewing billing usage information by tenant, zone, instance or server.
        By default, usage returned is from the beginning of the current month until now.
        The date range is parameterized but the end date cannot exceed the current date.
      operationId: getBillingInstancesIdentifier
      parameters:
      - description: Filter by startDate greater than or equal to a specified date
        example: 2019-01-01
        in: query
        name: startDate
        schema:
          type: string
      - description: Filter by endDate less than or equal to a specified date
        example: 2020-01-01
        in: query
        name: endDate
        schema:
          type: string
      - description: Optional ability to suppress the usage records
        in: query
        name: includeUsages
        schema:
          default: true
          type: boolean
      - description: Optional ability to limit the usages returned
        in: query
        name: maxUsages
        schema:
          format: int64
          type: integer
      - description: "Optional ability to offset the usages returned, for use with\
          \ maxUsages to paginate"
        in: query
        name: offsetUsages
        schema:
          format: int64
          type: integer
      - description: Optional ability to include all subtenant billing information
          when calling from a master tenant user
        in: query
        name: includeTenants
        schema:
          default: false
          type: boolean
      - description: Filter by Tenant ID. This is only available to master tenant
          users with permission to manage tenants and users.
        example: 3
        in: query
        name: accountId
        schema:
          format: int64
          type: integer
      - description: Morpheus UUID or ID of the Object being created or referenced
        in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Billing Response:
                  value:
                    $ref: ../components/examples/billingInstance.json
              schema:
                $ref: '#/components/schemas/getBillingInstancesIdentifier_200_response'
          description: Array of Billing
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Retrieves billing information for an instance in the requestor's account.
        Use instanceUUID whenever possible.
      tags:
      - Billing
  /api/billing/servers:
    get:
      description: |
        Provides API interfaces for viewing billing usage information by tenant, zone, instance or server.
        By default, usage returned is from the beginning of the current month until now.
        The date range is parameterized but the end date cannot exceed the current date.
      operationId: listBillingServers
      parameters:
      - description: Filter by startDate greater than or equal to a specified date
        example: 2019-01-01
        in: query
        name: startDate
        schema:
          type: string
      - description: Filter by endDate less than or equal to a specified date
        example: 2020-01-01
        in: query
        name: endDate
        schema:
          type: string
      - description: Optional ability to suppress the usage records
        in: query
        name: includeUsages
        schema:
          default: true
          type: boolean
      - description: Optional ability to limit the usages returned
        in: query
        name: maxUsages
        schema:
          format: int64
          type: integer
      - description: "Optional ability to offset the usages returned, for use with\
          \ maxUsages to paginate"
        in: query
        name: offsetUsages
        schema:
          format: int64
          type: integer
      - description: Optional ability to include all subtenant billing information
          when calling from a master tenant user
        in: query
        name: includeTenants
        schema:
          default: false
          type: boolean
      - description: Filter by Tenant ID. This is only available to master tenant
          users with permission to manage tenants and users.
        example: 3
        in: query
        name: accountId
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Billing Response:
                  value:
                    $ref: ../components/examples/billingServers.json
              schema:
                $ref: '#/components/schemas/listBillingServers_200_response'
          description: Array of Billing
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Retrieves billing information for all servers (container hosts) on
        the requestor's account.
      tags:
      - Billing
  /api/billing/servers/{identifier}:
    get:
      description: |
        Provides API interfaces for viewing billing usage information by tenant, zone, instance or server.
        By default, usage returned is from the beginning of the current month until now.
        The date range is parameterized but the end date cannot exceed the current date.
      operationId: getBillingServersIdentifier
      parameters:
      - description: Filter by startDate greater than or equal to a specified date
        example: 2019-01-01
        in: query
        name: startDate
        schema:
          type: string
      - description: Filter by endDate less than or equal to a specified date
        example: 2020-01-01
        in: query
        name: endDate
        schema:
          type: string
      - description: Optional ability to suppress the usage records
        in: query
        name: includeUsages
        schema:
          default: true
          type: boolean
      - description: Optional ability to limit the usages returned
        in: query
        name: maxUsages
        schema:
          format: int64
          type: integer
      - description: "Optional ability to offset the usages returned, for use with\
          \ maxUsages to paginate"
        in: query
        name: offsetUsages
        schema:
          format: int64
          type: integer
      - description: Optional ability to include all subtenant billing information
          when calling from a master tenant user
        in: query
        name: includeTenants
        schema:
          default: false
          type: boolean
      - description: Filter by Tenant ID. This is only available to master tenant
          users with permission to manage tenants and users.
        example: 3
        in: query
        name: accountId
        schema:
          format: int64
          type: integer
      - description: Morpheus UUID or ID of the Object being created or referenced
        in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Billing Response:
                  value:
                    $ref: ../components/examples/billingServer.json
              schema:
                $ref: '#/components/schemas/getBillingServersIdentifier_200_response'
          description: Array of Billing
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Retrieves billing information for a specific server (container host)
        in the requestor's account. Use refUUID whenever possible.
      tags:
      - Billing
  /api/billing/zones:
    get:
      description: |
        Provides API interfaces for viewing billing usage information by tenant, zone, instance or server.
        By default, usage returned is from the beginning of the current month until now.
        The date range is parameterized but the end date cannot exceed the current date.
      operationId: listBillingZone
      parameters:
      - description: Filter by startDate greater than or equal to a specified date
        example: 2019-01-01
        in: query
        name: startDate
        schema:
          type: string
      - description: Filter by endDate less than or equal to a specified date
        example: 2020-01-01
        in: query
        name: endDate
        schema:
          type: string
      - description: Optional ability to suppress the usage records
        in: query
        name: includeUsages
        schema:
          default: true
          type: boolean
      - description: Optional ability to limit the usages returned
        in: query
        name: maxUsages
        schema:
          format: int64
          type: integer
      - description: "Optional ability to offset the usages returned, for use with\
          \ maxUsages to paginate"
        in: query
        name: offsetUsages
        schema:
          format: int64
          type: integer
      - description: Optional ability to exclude compute servers
        in: query
        name: includeComputeServers
        schema:
          default: true
          type: boolean
      - description: Optional ability to exclude instances
        in: query
        name: includeInstances
        schema:
          default: true
          type: boolean
      - description: Optional ability to exclude discovered servers
        in: query
        name: includeDiscoveredServers
        schema:
          default: true
          type: boolean
      - description: Optional ability to exclude load balancers
        in: query
        name: includeLoadBalancers
        schema:
          default: true
          type: boolean
      - description: Optional ability to exclude virtual images
        in: query
        name: includeVirtualImages
        schema:
          default: true
          type: boolean
      - description: Optional ability to exclude snapshots
        in: query
        name: includeSnapshots
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              examples:
                Billing Response:
                  value:
                    $ref: ../components/examples/billingZones.json
              schema:
                $ref: '#/components/schemas/listBillingZone_200_response'
          description: Array of Billing
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Retrieves billing information for all zones on the requestor's account.
      tags:
      - Billing
  /api/billing/zones/{identifier}:
    get:
      description: |
        Provides API interfaces for viewing billing usage information by tenant, zone, instance or server.
        By default, usage returned is from the beginning of the current month until now.
        The date range is parameterized but the end date cannot exceed the current date.
      operationId: getBillingZoneIdentifier
      parameters:
      - description: Filter by startDate greater than or equal to a specified date
        example: 2019-01-01
        in: query
        name: startDate
        schema:
          type: string
      - description: Filter by endDate less than or equal to a specified date
        example: 2020-01-01
        in: query
        name: endDate
        schema:
          type: string
      - description: Optional ability to suppress the usage records
        in: query
        name: includeUsages
        schema:
          default: true
          type: boolean
      - description: Optional ability to limit the usages returned
        in: query
        name: maxUsages
        schema:
          format: int64
          type: integer
      - description: "Optional ability to offset the usages returned, for use with\
          \ maxUsages to paginate"
        in: query
        name: offsetUsages
        schema:
          format: int64
          type: integer
      - description: Optional ability to exclude compute servers
        in: query
        name: includeComputeServers
        schema:
          default: true
          type: boolean
      - description: Optional ability to exclude instances
        in: query
        name: includeInstances
        schema:
          default: true
          type: boolean
      - description: Optional ability to exclude discovered servers
        in: query
        name: includeDiscoveredServers
        schema:
          default: true
          type: boolean
      - description: Optional ability to exclude load balancers
        in: query
        name: includeLoadBalancers
        schema:
          default: true
          type: boolean
      - description: Optional ability to exclude virtual images
        in: query
        name: includeVirtualImages
        schema:
          default: true
          type: boolean
      - description: Optional ability to exclude snapshots
        in: query
        name: includeSnapshots
        schema:
          default: true
          type: boolean
      - description: Morpheus UUID or ID of the Object being created or referenced
        in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Billing Response:
                  value:
                    $ref: ../components/examples/billingZone.json
              schema:
                $ref: '#/components/schemas/getBillingZoneIdentifier_200_response'
          description: Array of Billing
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Retrieves billing information for a specific zone in the requestor's
        account. Use zoneUUID whenever possible.
      tags:
      - Billing
  /api/blueprints:
    get:
      description: This endpoint retrieves all blueprints.
      operationId: listBlueprints
      parameters:
      - description: Maximum number of records to return
        in: query
        name: max
        schema:
          default: 25
          format: int64
          type: integer
      - description: "Offset records, the number of records to skip, for paginating\
          \ requests"
        in: query
        name: offset
        schema:
          default: 0
          format: int64
          type: integer
      - description: "Filter by name, wildcard may be specified as %, eg. example-%"
        example: example-%
        in: query
        name: name
        schema:
          type: string
      - description: Search phrase for partial matches on name or description
        in: query
        name: phrase
        schema:
          type: string
      - description: "Filter by label(s), matches records that contain any of the\
          \ specified labels"
        in: query
        name: labels
        schema:
          type: string
      - description: "Filter by label(s), matches records that contain all of the\
          \ specified labels"
        in: query
        name: allLabels
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Blueprints Response:
                  value:
                    $ref: ../components/examples/blueprints.json
              schema:
                $ref: '#/components/schemas/listBlueprints_200_response'
          description: Successful Response
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Get All Blueprints
      tags:
      - Blueprints
    post:
      description: Create a Blueprint
      operationId: addBlueprint
      requestBody:
        content:
          application/json:
            examples:
              Blueprint Creation Payload - ARM:
                value:
                  $ref: ../components/examples/blueprintARMCreate.json
              Blueprint Creation Payload - CloudFormation:
                value:
                  $ref: ../components/examples/blueprintCFTCreate.json
              Blueprint Creation Payload - Helm:
                value:
                  $ref: ../components/examples/blueprintHelmCreate.json
              Blueprint Creation Payload - Kubernetes:
                value:
                  $ref: ../components/examples/blueprintKubernetesCreate.json
              Blueprint Creation Payload - Morpheus:
                value:
                  $ref: ../components/examples/blueprintMorpheusCreate.json
              Blueprint Creation Payload - Terraform:
                value:
                  $ref: ../components/examples/blueprintTerraformCreate.json
            schema:
              $ref: '#/components/schemas/addBlueprint_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful Blueprint Creation Response - ARM:
                  value:
                    $ref: ../components/examples/blueprintARMCreateSuccess.json
                Successful Blueprint Creation Response - CFT:
                  value:
                    $ref: ../components/examples/blueprintCFTCreateSuccess.json
                Successful Blueprint Creation Response - Helm:
                  value:
                    $ref: ../components/examples/blueprintHelmCreateSuccess.json
                Successful Blueprint Creation Response - Kubernetes:
                  value:
                    $ref: ../components/examples/blueprintKubernetesCreateSuccess.json
                Successful Blueprint Creation Response - Morpheus:
                  value:
                    $ref: ../components/examples/blueprintMorpheusCreateSuccess.json
                Successful Blueprint Creation Response - Terraform:
                  value:
                    $ref: ../components/examples/blueprintTerraformCreateSuccess.json
              schema:
                $ref: '#/components/schemas/addBlueprint_200_response'
          description: Successful Response
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Create a Blueprint
      tags:
      - Blueprints
  /api/blueprints/{id}:
    delete:
      description: Delete a Blueprint
      operationId: deleteBlueprint
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Response:
                  value:
                    $ref: ../components/examples/success.json
              schema:
                $ref: '#/components/schemas/200-success'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Delete a Blueprint
      tags:
      - Blueprints
    get:
      description: This endpoint retrieves a specific blueprint.
      operationId: getBlueprint
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Blueprint Response:
                  value:
                    $ref: ../components/examples/blueprint.json
              schema:
                $ref: '#/components/schemas/getBlueprint_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Get a Specific Blueprint
      tags:
      - Blueprints
    put:
      description: "Update a Blueprint. This overwrites the entire config, so the\
        \ entire blueprint config should be passed."
      operationId: updateBlueprint
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            examples:
              Blueprint Update:
                value:
                  $ref: ../components/examples/blueprintUpdate.json
            schema:
              $ref: '#/components/schemas/addBlueprint_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Blueprint Response:
                  value:
                    $ref: ../components/examples/blueprint.json
              schema:
                $ref: '#/components/schemas/getBlueprint_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Updating a Blueprint
      tags:
      - Blueprints
  /api/blueprints/{id}/image:
    post:
      description: Update Blueprint Image
      operationId: updateBlueprintImage
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/updateBlueprintImage_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Blueprint Response:
                  value:
                    $ref: ../components/examples/blueprint.json
              schema:
                $ref: '#/components/schemas/getBlueprint_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Update Blueprint Image
      tags:
      - Blueprints
  /api/blueprints/{id}/update-permissions:
    put:
      description: Update Blueprint Permissions
      operationId: updateBlueprintPermissions
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            examples:
              Blueprint Request:
                value:
                  $ref: ../components/examples/instanceTypeLayoutPermissionsUpdate.json
            schema:
              $ref: '#/components/schemas/updateBlueprintPermissions_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Blueprint Response:
                  value:
                    $ref: ../components/examples/blueprint.json
              schema:
                $ref: '#/components/schemas/getBlueprint_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Update Blueprint Permissions
      tags:
      - Blueprints
  /api/budgets:
    get:
      description: |
        Retrieves all budgets.
      operationId: listBudgets
      parameters:
      - description: Maximum number of records to return
        in: query
        name: max
        schema:
          default: 25
          format: int64
          type: integer
      - description: "Offset records, the number of records to skip, for paginating\
          \ requests"
        in: query
        name: offset
        schema:
          default: 0
          format: int64
          type: integer
      - description: "Sort order, the name of the property to sort by"
        in: query
        name: sort
        schema:
          default: name
          type: string
      - description: "Sort direction, use 'desc' to reverse sort"
        example: asc
        in: query
        name: direction
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: Search phrase for partial matches on name or description
        in: query
        name: phrase
        schema:
          type: string
      - description: "Filter by name, wildcard may be specified as %, eg. example-%"
        example: example-%
        in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Budgets Response:
                  value:
                    $ref: ../components/examples/budgets.json
              schema:
                $ref: '#/components/schemas/listBudgets_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Retrieves all Budgets
      tags:
      - Budgets
    post:
      description: |
        Creates a budget.
      operationId: addBudgets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addBudgets_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Budget Response:
                  value:
                    $ref: ../components/examples/budgetCreateSuccess.json
              schema:
                $ref: '#/components/schemas/addBudgets_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Creates a Budget
      tags:
      - Budgets
  /api/budgets/{id}:
    delete:
      description: |
        Deletes a specified Budget.
      operationId: removeBudgets
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-success'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Deletes a Budget
      tags:
      - Budgets
    get:
      description: |
        Retrieves a specific budget.
      operationId: getBudgets
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Budget Response:
                  value:
                    $ref: ../components/examples/budget.json
              schema:
                $ref: '#/components/schemas/getBudgets_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Retrieves a Specific Budget
      tags:
      - Budgets
    put:
      description: |
        Updates a budget.
      operationId: updateBudgets
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addBudgets_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Budget Response:
                  value:
                    $ref: ../components/examples/budgetCreateSuccess.json
              schema:
                $ref: '#/components/schemas/addBudgets_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Updates a Budget
      tags:
      - Budgets
  /api/catalog-item-types:
    get:
      description: This endpoint retrieves all catalog item types.
      operationId: listCatalogItemTypes
      parameters:
      - description: Maximum number of records to return
        in: query
        name: max
        schema:
          default: 25
          format: int64
          type: integer
      - description: "Offset records, the number of records to skip, for paginating\
          \ requests"
        in: query
        name: offset
        schema:
          default: 0
          format: int64
          type: integer
      - description: "Sort order, the name of the property to sort by"
        in: query
        name: sort
        schema:
          default: name
          type: string
      - description: "Sort direction, use 'desc' to reverse sort"
        example: asc
        in: query
        name: direction
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: Search phrase for partial matches on name or description
        in: query
        name: phrase
        schema:
          type: string
      - description: "Filter by name, wildcard may be specified as %, eg. example-%"
        example: example-%
        in: query
        name: name
        schema:
          type: string
      - description: "Filter by description, wildcard may be specified as %. eg. `example-%`"
        example: The desription of my cool object
        in: query
        name: description
        schema:
          type: string
      - description: Filter by enabled
        example: false
        in: query
        name: enabled
        schema:
          type: boolean
      - description: Filter by featured
        example: false
        in: query
        name: featured
        schema:
          type: boolean
      - description: "Filter by label(s), matches records that contain any of the\
          \ specified labels"
        in: query
        name: labels
        schema:
          type: string
      - description: "Filter by label(s), matches records that contain all of the\
          \ specified labels"
        in: query
        name: allLabels
        schema:
          type: string
      - description: If specified will return an exact match on code
        example: azr
        in: query
        name: code
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Get Catalog Items Response:
                  value:
                    $ref: ../components/examples/catalogItemTypes.json
              schema:
                $ref: '#/components/schemas/listCatalogItemTypes_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Get All Catalog Item Types
      tags:
      - Catalog Items
    post:
      description: Use this command to create a catalog item type.
      operationId: addCatalogItemType
      requestBody:
        content:
          application/json:
            examples:
              Catalog Item Type Request - Instance:
                value:
                  $ref: ../components/examples/catalogItemTypeInstanceCreate.json
              Catalog Item Type Request - Blueprint:
                value:
                  $ref: ../components/examples/catalogItemTypeBlueprintCreate.json
              Catalog Item Type Request - Workflow:
                value:
                  $ref: ../components/examples/catalogItemTypeWorkflowCreate.json
            schema:
              $ref: '#/components/schemas/addCatalogItemType_request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/addCatalogItemType_request_1'
      responses:
        "200":
          content:
            application/json:
              examples:
                Catalog Item Type Response - Instance:
                  value:
                    $ref: ../components/examples/catalogItemTypeCreateSuccess.json
              schema:
                $ref: '#/components/schemas/addCatalogItemType_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Create a Catalog Item Type
      tags:
      - Catalog Items
  /api/catalog-item-types/{id}:
    delete:
      description: Will delete a catalog item type.
      operationId: removeCatalogItemType
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-success'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Delete a Catalog Item Type
      tags:
      - Catalog Items
    get:
      description: This endpoint retrieves a specific category item type.
      operationId: getCatalogItemType
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Get Catalog Item Response:
                  value:
                    $ref: ../components/examples/catalogItemType.json
              schema:
                $ref: '#/components/schemas/getCatalogItemType_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Get a Specific Catalog Item Type
      tags:
      - Catalog Items
    put:
      description: Use this command to update an existing catalog item type.
      operationId: updateCatalogItemType
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            examples:
              Catalog Item Type Request:
                value:
                  $ref: ../components/examples/catalogItemTypeUpdate.json
            schema:
              $ref: '#/components/schemas/updateCatalogItemType_request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/addCatalogItemType_request_1'
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful Response:
                  value:
                    $ref: ../components/examples/catalogItemTypeUpdateSuccess.json
              schema:
                $ref: '#/components/schemas/updateCatalogItemType_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Update a Catalog Item Type
      tags:
      - Catalog Items
  /api/catalog-item-types/{id}/update-logo:
    put:
      description: "Use this command to update the logo and dark logo images for an\
        \ existing catalog item type. This endpoint expects multipart form data as\
        \ the request format, not JSON."
      operationId: updateCatalogItemTypeLogo
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/addCatalogItemType_request_1'
      responses:
        "200":
          content:
            application/json:
              examples:
                Successful Response:
                  value:
                    $ref: ../components/examples/catalogItemTypeUpdateSuccess.json
              schema:
                $ref: '#/components/schemas/updateCatalogItemType_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Update Logo For Catalog Item Type
      tags:
      - Catalog Items
  /api/clients:
    get:
      description: This endpoint retrieves a paginated list of oauth clients.
      operationId: listClients
      parameters:
      - description: Maximum number of records to return
        in: query
        name: max
        schema:
          default: 25
          format: int64
          type: integer
      - description: "Offset records, the number of records to skip, for paginating\
          \ requests"
        in: query
        name: offset
        schema:
          default: 0
          format: int64
          type: integer
      - description: "Sort order, the name of the property to sort by"
        in: query
        name: sort
        schema:
          default: clientId
          type: string
      - description: "Sort direction, use 'desc' to reverse sort"
        example: asc
        in: query
        name: direction
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
      - description: Search phrase for partial matches on clientId
        in: query
        name: phrase
        schema:
          type: string
      - description: Search phrase for partial matches on clientId
        in: query
        name: clientId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Clients Response:
                  value:
                    $ref: ../components/examples/clients.json
              schema:
                $ref: '#/components/schemas/listClients_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Get All Oauth Clients
      tags:
      - Clients
    post:
      description: Create a new Oauth Client.
      operationId: addClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addClient_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Client Response:
                  value:
                    $ref: ../components/examples/clientSuccess.json
              schema:
                $ref: '#/components/schemas/addClient_200_response'
          description: Client Object
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Create an Oauth Client
      tags:
      - Clients
  /api/clients/{id}:
    delete:
      description: |
        Deletes a specified oauth client.
      operationId: removeClients
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200-success'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Deletes an Oauth Client
      tags:
      - Clients
    get:
      description: |
        Retrieves a specific oauth client.
      operationId: getClients
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              examples:
                Client Response:
                  value:
                    $ref: ../components/examples/client.json
              schema:
                $ref: '#/components/schemas/getClients_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Retrieves a Specific Oauth Client
      tags:
      - Clients
    put:
      description: |
        Updates an oauth client.
      operationId: updateClients
      parameters:
      - description: Morpheus ID of the Object being referenced
        example: 1
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateClients_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Client Response:
                  value:
                    $ref: ../components/examples/clientSuccess.json
              schema:
                $ref: '#/components/schemas/addClient_200_response'
          description: Successful Request
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Updates an Oauth Client
      tags:
      - Clients
  /api/monitoring/apps:
    get:
      description: Get a list of check apps.
      operationId: listCheckApps
      parameters:
      - description: Maximum number of records to return
        in: query
        name: max
        schema:
          default: 25
          format: int64
          type: integer
      - description: "Offset records, the number of records to skip, for paginating\
          \ requests"
        in: query
        name: offset
        schema:
          default: 0
          format: int64
          type: integer
      - description: "Sort order, the name of the property to sort by"
        in: query
        name: sort
        schema:
          default: name
          type: string
      - description: "Filter by name, wildcard may be specified as %, eg. example-%"
        example: example-%
        in: query
        name: name
        schema:
          type: string
      - description: Search phrase for partial matches on name or description
        in: query
        name: phrase
        schema:
          type: string
      - description: The instance status for filtering.
        example: running
        in: query
        name: status
        schema:
          description: Instance status
          type: string
      - description: "Date filter, restricts query to only load resources updated\
          \ more recently than the date specified (ISO 8601)"
        example: 2019-03-06T17:52:29+0000
        in: query
        name: lastUpdated
        schema:
          format: date-time
          type: string
      - description: "If true, only deleted resources or instances in pending removal\
          \ status are returned."
        example: true
        in: query
        name: deleted
        schema:
          description: Show only deleted resources or instances in pending removal
            status
          type: boolean
      responses:
        "200":
          content:
            application/json:
              examples:
                Check Apps Response:
                  value:
                    $ref: ../components/examples/checkApps.json
              schema:
                $ref: '#/components/schemas/listCheckApps_200_response'
          description: Array of Check Apps
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: List All Check Apps
      tags:
      - Checks
    post:
      description: Create a new check app.
      operationId: addCheckApps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addCheckApps_request'
      responses:
        "200":
          content:
            application/json:
              examples:
                Create Check App Response:
                  value:
                    $ref: ../components/examples/checkAppSuccess.json
              schema:
                $ref: '#/components/schemas/addCheckApps_200_response'
          description: Check App Object
        "4XX":
          content:
            application/json:
              examples:
                "400":
                  value:
                    $ref: ../examples/400.json
                "401":
                  value:
                    $ref: ../examples/401.json
                "403":
                  value:
                    $ref: ../examples/403.json
                "404":
                  value:
                    $ref: ../examples/404.json
                "405":
                  value:
                    $ref: ../examples/405.json
                "406":
                  value:
                    $ref: ../examples/406.json
                "410":
                  value:
                    $ref: ../examples/410.json
                "429":
                  value:
                    $ref: ../examples/429.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
        "5XX":
          content:
            application/json:
              examples:
                "500":
                  value:
                    $ref: ../examples/500.json
                "503":
                  value:
                    $ref: ../examples/503.json
              schema:
                $ref: '#/components/schemas/default-error'
          description: Error Codes
      summary: Create a New Check App
      tags:
      - Checks
  /api/monitoring/apps/mute-all:
    $ref: ./paths/api@monitoring@apps@mute-all.yaml
  /api/monitoring/apps/{id}:
    $ref: ./paths/api@monitoring@apps@id.yaml
  /api/monitoring/apps/{id}/mute:
    $ref: ./paths/api@monitoring@apps@id@mute.yaml
  /api/monitoring/checks:
    $ref: ./paths/api@monitoring@checks.yaml
  /api/monitoring/checks/mute-all:
    $ref: ./paths/api@monitoring@checks@mute-all.yaml
  /api/monitoring/checks/{id}:
    $ref: ./paths/api@monitoring@checks@id.yaml
  /api/monitoring/checks/{id}/mute:
    $ref: ./paths/api@monitoring@checks@id@mute.yaml
  /api/monitoring/check-types:
    $ref: ./paths/api@monitoring@check-types.yaml
  /api/monitoring/check-types/{id}:
    $ref: ./paths/api@monitoring@check-types@id.yaml
  /api/monitoring/groups:
    $ref: ./paths/api@monitoring@groups.yaml
  /api/monitoring/groups/{id}:
    $ref: ./paths/api@monitoring@groups@id.yaml
  /api/monitoring/groups/{id}/mute:
    $ref: ./paths/api@monitoring@groups@id@mute.yaml
  /api/monitoring/groups/mute-all:
    $ref: ./paths/api@monitoring@groups@mute-all.yaml
  /api/zone-types:
    $ref: ./paths/api@zone-types.yaml
  /api/zone-types/{id}:
    $ref: ./paths/api@zone-types@id.yaml
  /api/zones:
    $ref: ./paths/api@zones.yaml
  /api/zones/{id}:
    $ref: ./paths/api@zones@id.yaml
  /api/zones/{zoneId}/data-stores:
    $ref: ./paths/api@zones@zoneId@data-stores.yaml
  /api/zones/{zoneId}/data-stores/{id}:
    $ref: ./paths/api@zones@zoneId@data-stores@id.yaml
  /api/zones/{zoneId}/folders:
    $ref: ./paths/api@zones@zoneId@folders.yaml
  /api/zones/{zoneId}/folders/{id}:
    $ref: ./paths/api@zones@zoneId@folders@id.yaml
  /api/zones/{zoneId}/resource-pools:
    $ref: ./paths/api@zones@zoneId@resource-pools.yaml
  /api/zones/{zoneId}/resource-pools/{id}:
    $ref: ./paths/api@zones@zoneId@resource-pools@id.yaml
  /api/zones/{id}/refresh:
    $ref: ./paths/api@zones@id@refresh.yaml
  /api/zones/{id}/update-logo:
    $ref: ./paths/api@zones@id@update-logo.yaml
  /api/zones/{id}/security-groups:
    $ref: ./paths/api@zones@id@security-groups.yaml
  /api/library/cluster-layouts:
    $ref: ./paths/api@library@cluster-layouts.yaml
  /api/library/cluster-layouts/{id}:
    $ref: ./paths/api@library@cluster-layouts@id.yaml
  /api/library/cluster-layouts/{id}/clone:
    $ref: ./paths/api@library@cluster-layouts@id@clone.yaml
  /api/cluster-types:
    $ref: ./paths/api@cluster-types.yaml
  /api/clusters:
    $ref: ./paths/api@clusters.yaml
  /api/clusters/{clusterId}:
    $ref: ./paths/api@clusters@id.yaml
  /api/clusters/{clusterId}/api-config:
    $ref: ./paths/api@clusters@id@api-config.yaml
  /api/clusters/{clusterId}/apply-template:
    $ref: ./paths/api@clusters@id@apply-template.yaml
  /api/clusters/{clusterId}/containers:
    $ref: ./paths/api@clusters@id@containers.yaml
  /api/clusters/{clusterId}/containers/{id}:
    $ref: ./paths/api@clusters@id@containers@id.yaml
  /api/clusters/{clusterId}/containers/{id}/restart:
    $ref: ./paths/api@clusters@id@containers@id@restart.yaml
  /api/clusters/{clusterId}/datastores:
    $ref: ./paths/api@clusters@id@datastores.yaml
  /api/clusters/{clusterId}/datastores/{id}:
    $ref: ./paths/api@clusters@id@datastores@id.yaml
  /api/clusters/{clusterId}/deployments:
    $ref: ./paths/api@clusters@id@deployments.yaml
  /api/clusters/{clusterId}/deployments/{id}:
    $ref: ./paths/api@clusters@id@deployments@id.yaml
  /api/clusters/{clusterId}/deployments/{id}/restart:
    $ref: ./paths/api@clusters@id@deployments@id@restart.yaml
  /api/clusters/{clusterId}/history:
    $ref: ./paths/api@clusters@id@history.yaml
  /api/clusters/{clusterId}/history/{id}:
    $ref: ./paths/api@clusters@id@history@id.yaml
  /api/clusters/{clusterId}/history/events/{id}:
    $ref: ./paths/api@clusters@id@history@events@id.yaml
  /api/clusters/{clusterId}/jobs:
    $ref: ./paths/api@clusters@id@jobs.yaml
  /api/clusters/{clusterId}/jobs/{id}:
    $ref: ./paths/api@clusters@id@jobs@id.yaml
  /api/clusters/{clusterId}/masters:
    $ref: ./paths/api@clusters@id@masters.yaml
  /api/clusters/{clusterId}/namespaces:
    $ref: ./paths/api@clusters@id@namespaces.yaml
  /api/clusters/{clusterId}/namespaces/{id}:
    $ref: ./paths/api@clusters@id@namespaces@id.yaml
  /api/clusters/{clusterId}/permissions:
    $ref: ./paths/api@clusters@id@permissions.yaml
  /api/clusters/{clusterId}/pods:
    $ref: ./paths/api@clusters@id@pods.yaml
  /api/clusters/{clusterId}/pods/{id}/restart:
    $ref: ./paths/api@clusters@id@pods@id@restart.yaml
  /api/clusters/{clusterId}/servers:
    $ref: ./paths/api@clusters@id@servers.yaml
  /api/clusters/{clusterId}/servers/{id}:
    $ref: ./paths/api@clusters@id@servers@id.yaml
  /api/clusters/{clusterId}/services:
    $ref: ./paths/api@clusters@id@services.yaml
  /api/clusters/{clusterId}/services/{id}:
    $ref: ./paths/api@clusters@id@services@id.yaml
  /api/clusters/{clusterId}/statefulsets:
    $ref: ./paths/api@clusters@id@statefulsets.yaml
  /api/clusters/{clusterId}/statefulsets/{id}:
    $ref: ./paths/api@clusters@id@statefulsets@id.yaml
  /api/clusters/{clusterId}/statefulsets/{id}/restart:
    $ref: ./paths/api@clusters@id@statefulsets@id@restart.yaml
  /api/clusters/{clusterId}/upgrade-cluster:
    $ref: ./paths/api@clusters@id@upgrade-cluster.yaml
  /api/clusters/{clusterId}/volumes:
    $ref: ./paths/api@clusters@id@volumes.yaml
  /api/clusters/{clusterId}/volumes/{id}:
    $ref: ./paths/api@clusters@id@volumes@id.yaml
  /api/clusters/{clusterId}/worker-count:
    $ref: ./paths/api@clusters@id@worker-count.yaml
  /api/clusters/{clusterId}/workers:
    $ref: ./paths/api@clusters@id@workers.yaml
  /api/monitoring/contacts:
    $ref: ./paths/api@monitoring@contacts.yaml
  /api/monitoring/contacts/{id}:
    $ref: ./paths/api@monitoring@contacts@id.yaml
  /api/containers/{id}:
    $ref: ./paths/api@containers@id.yaml
  /api/containers/{id}/action:
    $ref: ./paths/api@containers@id@action.yaml
  /api/containers/{id}/actions:
    $ref: ./paths/api@containers@id@actions.yaml
  /api/containers/{id}/clone-image:
    $ref: ./paths/api@containers@id@clone-image.yaml
  /api/containers/{id}/eject:
    $ref: ./paths/api@containers@id@eject.yaml
  /api/containers/{id}/import:
    $ref: ./paths/api@containers@id@import.yaml
  /api/containers/{id}/restart:
    $ref: ./paths/api@containers@id@restart.yaml
  /api/containers/{id}/start:
    $ref: ./paths/api@containers@id@start.yaml
  /api/containers/{id}/stop:
    $ref: ./paths/api@containers@id@stop.yaml
  /api/containers/{id}/suspend:
    $ref: ./paths/api@containers@id@suspend.yaml
  /api/containers/{id}/attach-floating-ip:
    $ref: ./paths/api@containers@id@attach-floating-ip.yaml
  /api/containers/{id}/detach-floating-ip:
    $ref: ./paths/api@containers@id@detach-floating-ip.yaml
  /api/credential-types:
    $ref: ./paths/api@credential-types.yaml
  /api/credential-types/{id}:
    $ref: ./paths/api@credential-types@id.yaml
  /api/credentials:
    $ref: ./paths/api@credentials.yaml
  /api/credentials/{id}:
    $ref: ./paths/api@credentials@id.yaml
  /api/cypher:
    $ref: ./paths/api@cypher.yaml
  /api/cypher/{cypherPath}:
    $ref: ./paths/api@cypher@id.yaml
  /api/dashboard:
    $ref: ./paths/api@dashboard.yaml
  /api/deployments:
    $ref: ./paths/api@deployments.yaml
  /api/deployments/{deploymentId}:
    $ref: ./paths/api@deployments@id.yaml
  /api/deployments/{deploymentId}/versions:
    $ref: ./paths/api@deployments@id@versions.yaml
  /api/deployments/{deploymentId}/versions/{id}:
    $ref: ./paths/api@deployments@id@versions@id.yaml
  /api/deployments/{deploymentId}/versions/{id}/files{filepath}:
    $ref: ./paths/api@deployments@id@versions@id@files.yaml
  /api/deploys:
    $ref: ./paths/api@deploys.yaml
  /api/deploys/{id}:
    $ref: ./paths/api@deploys@id.yaml
  /api/deploys/{id}/deploy:
    $ref: ./paths/api@deploys@id@deploy.yaml
  /api/doc:
    $ref: ./paths/api@doc.yaml
  /api/doc/openapi:
    $ref: ./paths/api@doc@openapi.yaml
  /api/doc/openapi.yaml:
    $ref: ./paths/api@doc@openapi.yaml.yaml
  /api/environments:
    $ref: ./paths/api@environments.yaml
  /api/environments/{id}:
    $ref: ./paths/api@environments@id.yaml
  /api/environments/{id}/toggle-active:
    $ref: ./paths/api@environments@id@toggle-active.yaml
  /api/groups:
    $ref: ./paths/api@groups.yaml
  /api/groups/{id}:
    $ref: ./paths/api@groups@id.yaml
  /api/groups/{id}/update-zones:
    $ref: ./paths/api@groups@id@update-zones.yaml
  /api/guidance:
    $ref: ./paths/api@guidance.yaml
  /api/guidance/{id}:
    $ref: ./paths/api@guidance@id.yaml
  /api/guidance/{id}/execute:
    $ref: ./paths/api@guidance@id@execute.yaml
  /api/guidance/{id}/ignore:
    $ref: ./paths/api@guidance@id@ignore.yaml
  /api/guidance/stats:
    $ref: ./paths/api@guidance@stats.yaml
  /api/guidance/types:
    $ref: ./paths/api@guidance@types.yaml
  /api/guidance-settings:
    $ref: ./paths/api@guidance-settings.yaml
  /api/health:
    $ref: ./paths/api@health.yaml
  /api/health/alarms:
    $ref: ./paths/api@health@alarms.yaml
  /api/health/alarms/acknowledge:
    $ref: ./paths/api@health@alarms@acknowledge.yaml
  /api/health/alarms/{id}:
    $ref: ./paths/api@health@alarms@id.yaml
  /api/health/alarms/{id}/acknowledge:
    $ref: ./paths/api@health@alarms@id@acknowledge.yaml
  /api/health/logs:
    $ref: ./paths/api@health@logs.yaml
  /api/health/logs/export:
    $ref: ./paths/api@health@logs@export.yaml
  /api/processes:
    $ref: ./paths/api@processes.yaml
  /api/processes/{id}:
    $ref: ./paths/api@processes@id.yaml
  /api/processes/events/{id}:
    $ref: ./paths/api@processes@events@id.yaml
  /api/server-types:
    $ref: ./paths/api@server-types.yaml
  /api/server-types/{id}:
    $ref: ./paths/api@server-types@id.yaml
  /api/user-sources:
    $ref: ./paths/api@user-sources.yaml
  /api/user-sources/{id}:
    $ref: ./paths/api@user-sources@id.yaml
  /api/user-sources/{id}/subdomain:
    $ref: ./paths/api@user-sources@id@subdomain.yaml
  /api/boot-scripts:
    $ref: ./paths/api@boot-scripts.yaml
  /api/boot-scripts/{id}:
    $ref: ./paths/api@boot-scripts@id.yaml
  /api/image-builds:
    $ref: ./paths/api@image-builds.yaml
  /api/image-builds/{id}:
    $ref: ./paths/api@image-builds@id.yaml
  /api/image-builds/{id}/list-executions:
    $ref: ./paths/api@image-builds@id@list-executions.yaml
  /api/image-builds/{id}/run:
    $ref: ./paths/api@image-builds@id@run.yaml
  /api/monitoring/incidents:
    $ref: ./paths/api@monitoring@incidents.yaml
  /api/monitoring/incidents/{id}:
    $ref: ./paths/api@monitoring@incidents@id.yaml
  /api/monitoring/incidents/{id}/mute:
    $ref: ./paths/api@monitoring@incidents@id@mute.yaml
  /api/monitoring/incidents/{id}/reopen:
    $ref: ./paths/api@monitoring@incidents@id@reopen.yaml
  /api/monitoring/incidents/mute-all:
    $ref: ./paths/api@monitoring@incidents@mute-all.yaml
  /api/instance-types:
    $ref: ./paths/api@instance-types.yaml
  /api/instance-types/{id}:
    $ref: ./paths/api@instance-types@id.yaml
  /api/instances:
    $ref: ./paths/api@instances.yaml
  /api/instances/{id}:
    $ref: ./paths/api@instances@id.yaml
  /api/instances/{id}/apply:
    $ref: ./paths/api@instances@id@apply.yaml
  /api/instances/{id}/backup:
    $ref: ./paths/api@instances@id@backup.yaml
  /api/instances/{id}/backups:
    $ref: ./paths/api@instances@id@backups.yaml
  /api/instances/{id}/cancel-expiration:
    $ref: ./paths/api@instances@id@cancel-expiration.yaml
  /api/instances/{id}/cancel-removal:
    $ref: ./paths/api@instances@id@cancel-removal.yaml
  /api/instances/{id}/cancel-shutdown:
    $ref: ./paths/api@instances@id@cancel-shutdown.yaml
  /api/instances/{id}/clone-image:
    $ref: ./paths/api@instances@id@clone-image.yaml
  /api/instances/{id}/clone:
    $ref: ./paths/api@instances@id@clone.yaml
  /api/instances/{id}/containers:
    $ref: ./paths/api@instances@id@containers.yaml
  /api/instances/{id}/delete-all-snapshots:
    $ref: ./paths/api@instances@id@delete-all-snapshots.yaml
  /api/instances/{id}/delete-container-snapshots/{containerId}:
    $ref: ./paths/api@instances@id@delete-container-snapshots@id.yaml
  /api/instances/{id}/deploys:
    $ref: ./paths/api@instances@id@deploys.yaml
  /api/instances/{id}/eject:
    $ref: ./paths/api@instances@id@eject.yaml
  /api/instances/{id}/envs:
    $ref: ./paths/api@instances@id@envs.yaml
  /api/instances/{id}/extend-expiration:
    $ref: ./paths/api@instances@id@extend-expiration.yaml
  /api/instances/{id}/extend-shutdown:
    $ref: ./paths/api@instances@id@extend-shutdown.yaml
  /api/instances/{id}/history:
    $ref: ./paths/api@instances@id@history.yaml
  /api/instances/{id}/import-snapshot:
    $ref: ./paths/api@instances@id@import-snapshot.yaml
  /api/instances/{id}/linked-clone/{snapshotId}:
    $ref: ./paths/api@instances@id@linked-clone@id.yaml
  /api/instances/{id}/lock:
    $ref: ./paths/api@instances@id@lock.yaml
  /api/instances/{id}/networkInterfaces/{networkInterfaceId}:
    $ref: ./paths/api@instances@id@networkInterfaces@id.yaml
  /api/instances/{id}/prepare-apply:
    $ref: ./paths/api@instances@id@prepare-apply.yaml
  /api/instances/{id}/refresh:
    $ref: ./paths/api@instances@id@refresh.yaml
  /api/instances/{id}/resize:
    $ref: ./paths/api@instances@id@resize.yaml
  /api/instances/{id}/restart:
    $ref: ./paths/api@instances@id@restart.yaml
  /api/instances/{id}/revert-snapshot/{snapshotId}:
    $ref: ./paths/api@instances@id@revert-snapshot@id.yaml
  /api/instances/{id}/security-groups:
    $ref: ./paths/api@instances@id@security-groups.yaml
  /api/instances/{id}/snapshot:
    $ref: ./paths/api@instances@id@snapshot.yaml
  /api/instances/{id}/snapshots:
    $ref: ./paths/api@instances@id@snapshots.yaml
  /api/instances/{id}/start:
    $ref: ./paths/api@instances@id@start.yaml
  /api/instances/{id}/state:
    $ref: ./paths/api@instances@id@state.yaml
  /api/instances/{id}/stop:
    $ref: ./paths/api@instances@id@stop.yaml
  /api/instances/{id}/suspend:
    $ref: ./paths/api@instances@id@suspend.yaml
  /api/instances/{id}/threshold:
    $ref: ./paths/api@instances@id@threshold.yaml
  /api/instances/{id}/schedules:
    $ref: ./paths/api@instances@id@schedules.yaml
  /api/instances/{id}/schedules/{scheduleId}:
    $ref: ./paths/api@instances@id@schedules@scheduleId.yaml
  /api/instances/{id}/unlock:
    $ref: ./paths/api@instances@id@unlock.yaml
  /api/instances/{id}/validate-apply:
    $ref: ./paths/api@instances@id@validate-apply.yaml
  /api/instances/{id}/workflow:
    $ref: ./paths/api@instances@id@workflow.yaml
  /api/instances/remove-from-control:
    $ref: ./paths/api@instances@remove-from-control.yaml
  /api/instances/service-plans:
    $ref: ./paths/api@instances@service-plans.yaml
  /api/integration-types:
    $ref: ./paths/api@integration-types.yaml
  /api/integration-types/{id}:
    $ref: ./paths/api@integration-types@id.yaml
  /api/integration-types/{id}/option-types:
    $ref: ./paths/api@integration-types@id@option-types.yaml
  /api/integrations:
    $ref: ./paths/api@integrations.yaml
  /api/integrations/{id}:
    $ref: ./paths/api@integrations@id.yaml
  /api/integrations/{id}/refresh:
    $ref: ./paths/api@integrations@id@refresh.yaml
  /api/integrations/{id}/objects:
    $ref: ./paths/api@integrations@id@objects.yaml
  /api/integrations/{id}/objects/{objectId}:
    $ref: ./paths/api@integrations@id@objects@objectId.yaml
  /api/integrations/{id}/inventory:
    $ref: ./paths/api@integrations@id@inventory.yaml
  /api/integrations/{id}/inventory/{inventoryId}:
    $ref: ./paths/api@integrations@id@inventory@inventoryId.yaml
  /api/invoice-line-items:
    $ref: ./paths/api@invoice-line-items.yaml
  /api/invoice-line-items/{id}:
    $ref: ./paths/api@invoice-line-items@id.yaml
  /api/invoices:
    $ref: ./paths/api@invoices.yaml
  /api/invoices/{id}:
    $ref: ./paths/api@invoices@id.yaml
  /api/job-executions:
    $ref: ./paths/api@job-executions.yaml
  /api/job-executions/{id}:
    $ref: ./paths/api@job-executions@id.yaml
  /api/job-executions/{id}/events/{eventId}:
    $ref: ./paths/api@job-executions@id@events@eventId.yaml
  /api/jobs:
    $ref: ./paths/api@jobs.yaml
  /api/jobs/{id}:
    $ref: ./paths/api@jobs@id.yaml
  /api/jobs/{id}/execute:
    $ref: ./paths/api@jobs@id@execute.yaml
  /api/key-pairs:
    $ref: ./paths/api@key-pairs.yaml
  /api/key-pairs/generate:
    $ref: ./paths/api@key-pairs@generate.yaml
  /api/key-pairs/{id}:
    $ref: ./paths/api@key-pairs@id.yaml
  /api/library/container-scripts:
    $ref: ./paths/api@library@container-scripts.yaml
  /api/library/container-scripts/{id}:
    $ref: ./paths/api@library@container-scripts@id.yaml
  /api/library/container-types:
    $ref: ./paths/api@library@container-types.yaml
  /api/library/container-types/{id}:
    $ref: ./paths/api@library@container-types@id.yaml
  /api/library/container-templates:
    $ref: ./paths/api@library@file-templates.yaml
  /api/library/container-templates/{id}:
    $ref: ./paths/api@library@file-templates@id.yaml
  /api/library/instance-types:
    $ref: ./paths/api@library@instance-types.yaml
  /api/library/instance-types/{instanceTypeId}:
    $ref: ./paths/api@library@instance-types@id.yaml
  /api/library/instance-types/{instanceTypeId}/layouts:
    $ref: ./paths/api@library@instance-types@id@layouts.yaml
  /api/library/instance-types/{instanceTypeId}/toggle-featured:
    $ref: ./paths/api@library@instance-types@id@toggle-featured.yaml
  /api/library/instance-types/{instanceTypeId}/update-logo:
    $ref: ./paths/api@library@instance-types@id@update-logo.yaml
  /api/library/layouts:
    $ref: ./paths/api@library@layouts.yaml
  /api/library/layouts/{id}:
    $ref: ./paths/api@library@layouts@id.yaml
  /api/library/layouts/{id}/permissions:
    $ref: ./paths/api@library@layouts@id@permissions.yaml
  /api/library/option-type-lists:
    $ref: ./paths/api@library@option-type-lists.yaml
  /api/library/option-type-lists/{id}:
    $ref: ./paths/api@library@option-type-lists@id.yaml
  /api/library/option-type-lists/{id}/items:
    $ref: ./paths/api@library@option-type-lists@id@items.yaml
  /api/library/option-types:
    $ref: ./paths/api@library@option-types.yaml
  /api/library/option-types/{id}:
    $ref: ./paths/api@library@option-types@id.yaml
  /api/library/spec-templates:
    $ref: ./paths/api@library@spec-templates.yaml
  /api/library/spec-templates/{id}:
    $ref: ./paths/api@library@spec-templates@id.yaml
  /api/license:
    $ref: ./paths/api@license.yaml
  /api/license/test:
    $ref: ./paths/api@license@test.yaml
  /api/load-balancer-types:
    $ref: ./paths/api@load-balancer-types.yaml
  /api/load-balancer-types/{id}:
    $ref: ./paths/api@load-balancer-types@id.yaml
  /api/load-balancers:
    $ref: ./paths/api@load-balancers.yaml
  /api/load-balancers/{loadBalancerId}:
    $ref: ./paths/api@load-balancers@id.yaml
  /api/load-balancers/{loadBalancerId}/monitors:
    $ref: ./paths/api@load-balancers@id@monitors.yaml
  /api/load-balancers/{loadBalancerId}/monitors/{id}:
    $ref: ./paths/api@load-balancers@id@monitors@id.yaml
  /api/load-balancers/{loadBalancerId}/pools:
    $ref: ./paths/api@load-balancers@id@pools.yaml
  /api/load-balancers/{loadBalancerId}/pools/{id}:
    $ref: ./paths/api@load-balancers@id@pools@id.yaml
  /api/load-balancers/{loadBalancerId}/profiles:
    $ref: ./paths/api@load-balancers@id@profiles.yaml
  /api/load-balancers/{loadBalancerId}/profiles/{id}:
    $ref: ./paths/api@load-balancers@id@profiles@id.yaml
  /api/load-balancers/{loadBalancerId}/refresh:
    $ref: ./paths/api@load-balancers@id@refresh.yaml
  /api/load-balancers/{loadBalancerId}/virtual-servers:
    $ref: ./paths/api@load-balancers@id@virtual-servers.yaml
  /api/load-balancers/{loadBalancerId}/virtual-servers/{id}:
    $ref: ./paths/api@load-balancers@id@virtual-servers@id.yaml
  /api/load-balancer-pools/{loadBalancerPoolId}/nodes:
    $ref: ./paths/api@load-balancer-pools@id@nodes.yaml
  /api/load-balancer-pools/{loadBalancerPoolId}/nodes/{id}:
    $ref: ./paths/api@load-balancer-pools@id@nodes@id.yaml
  /api/log-settings:
    $ref: ./paths/api@log-settings.yaml
  /api/log-settings/syslog-rules:
    $ref: ./paths/api@log-settings@syslog-rules.yaml
  /api/log-settings/syslog-rules/{id}:
    $ref: ./paths/api@log-settings@syslog-rules@id.yaml
  /api/logs:
    $ref: ./paths/api@logs.yaml
  /api/monitoring-settings:
    $ref: ./paths/api@monitoring-settings.yaml
  /api/network-types:
    $ref: ./paths/api@network-types.yaml
  /api/network-types/{id}:
    $ref: ./paths/api@network-types@id.yaml
  /api/networks:
    $ref: ./paths/api@networks.yaml
  /api/networks/{id}:
    $ref: ./paths/api@networks@id.yaml
  /api/networks/{id}/routes:
    $ref: ./paths/api@networks@id@routes.yaml
  /api/networks/{id}/routes/{routeId}:
    $ref: ./paths/api@networks@id@routes@id.yaml
  /api/networks/{id}/subnets:
    $ref: ./paths/api@networks@id@subnets.yaml
  /api/networks/groups:
    $ref: ./paths/api@networks@groups.yaml
  /api/networks/groups/{id}:
    $ref: ./paths/api@networks@groups@id.yaml
  /api/network-router-types:
    $ref: ./paths/api@network-router-types.yaml
  /api/network-router-types/{id}:
    $ref: ./paths/api@network-router-types@id.yaml
  /api/networks/routers:
    $ref: ./paths/api@networks@routers.yaml
  /api/networks/routers/{id}:
    $ref: ./paths/api@networks@routers@id.yaml
  /api/networks/routers/{routerId}/bgp-neighbors:
    $ref: ./paths/api@networks@routers@id@bgp-neighbors.yaml
  /api/networks/routers/{routerId}/bgp-neighbors/{id}:
    $ref: ./paths/api@networks@routers@id@bgp-neighbors@id.yaml
  /api/networks/routers/{routerId}/firewall-rules:
    $ref: ./paths/api@networks@routers@id@firewall-rules.yaml
  /api/networks/routers/{routerId}/firewall-rules/{id}:
    $ref: ./paths/api@networks@routers@id@firewall-rules@id.yaml
  /api/networks/routers/{routerId}/firewall-rule-groups:
    $ref: ./paths/api@networks@routers@id@firewall-rule-groups.yaml
  /api/networks/routers/{routerId}/firewall-rule-groups/{id}:
    $ref: ./paths/api@networks@routers@id@firewall-rule-groups@id.yaml
  /api/networks/routers/{routerId}/nats:
    $ref: ./paths/api@networks@routers@id@nats.yaml
  /api/networks/routers/{routerId}/nats/{id}:
    $ref: ./paths/api@networks@routers@id@nats@id.yaml
  /api/networks/routers/{routerId}/permissions:
    $ref: ./paths/api@networks@routers@id@permissions.yaml
  /api/networks/routers/{routerId}/routes:
    $ref: ./paths/api@networks@routers@id@routes.yaml
  /api/networks/routers/{routerId}/routes/{id}:
    $ref: ./paths/api@networks@routers@id@routes@id.yaml
  /api/networks/pools:
    $ref: ./paths/api@networks@pools.yaml
  /api/networks/pools/{id}:
    $ref: ./paths/api@networks@pools@id.yaml
  /api/networks/pools/{id}/ips:
    $ref: ./paths/api@networks@pools@id@ips.yaml
  /api/networks/pools/{networkPoolId}/ips/{id}:
    $ref: ./paths/api@networks@pools@id@ips@id.yaml
  /api/networks/floating-ips:
    $ref: ./paths/api@networks@floating-ips.yaml
  /api/networks/floating-ips/{id}:
    $ref: ./paths/api@networks@floating-ips@id.yaml
  /api/networks/floating-ips/{id}/release:
    $ref: ./paths/api@networks@floating-ips@id@release.yaml
  /api/networks/domains:
    $ref: ./paths/api@networks@domains.yaml
  /api/networks/domains/{id}:
    $ref: ./paths/api@networks@domains@id.yaml
  /api/networks/proxies:
    $ref: ./paths/api@networks@proxies.yaml
  /api/networks/proxies/{id}:
    $ref: ./paths/api@networks@proxies@id.yaml
  /api/networks/servers/{serverId}/dhcp-relays:
    $ref: ./paths/api@networks@servers@id@dhcp-relays.yaml
  /api/networks/servers/{serverId}/dhcp-relays/{id}:
    $ref: ./paths/api@networks@servers@id@dhcp-relays@id.yaml
  /api/networks/servers/{serverId}/dhcp-servers:
    $ref: ./paths/api@networks@servers@id@dhcp-servers.yaml
  /api/networks/servers/{serverId}/dhcp-servers/{id}:
    $ref: ./paths/api@networks@servers@id@dhcp-servers@id.yaml
  /api/networks/servers/{serverId}/edge-clusters:
    $ref: ./paths/api@networks@servers@id@edge-clusters.yaml
  /api/networks/servers/{serverId}/edge-clusters/{id}:
    $ref: ./paths/api@networks@servers@id@edge-clusters@id.yaml
  /api/networks/servers/{serverId}/firewall-rules:
    $ref: ./paths/api@networks@servers@id@firewall-rules.yaml
  /api/networks/servers/{serverId}/firewall-rules/{id}:
    $ref: ./paths/api@networks@servers@id@firewall-rules@id.yaml
  /api/networks/servers/{serverId}/firewall-rule-groups:
    $ref: ./paths/api@networks@servers@id@firewall-rule-groups.yaml
  /api/networks/servers/{serverId}/firewall-rule-groups/{id}:
    $ref: ./paths/api@networks@servers@id@firewall-rule-groups@id.yaml
  /api/networks/servers/{serverId}/scopes:
    $ref: ./paths/api@networks@servers@id@scopes.yaml
  /api/networks/servers/{serverId}/scopes/{id}:
    $ref: ./paths/api@networks@servers@id@scopes@id.yaml
  /api/networks/services:
    $ref: ./paths/api@networks@services.yaml
  /api/networks/pool-servers:
    $ref: ./paths/api@networks@pool-servers.yaml
  /api/networks/pool-servers/{id}:
    $ref: ./paths/api@networks@pool-servers@id.yaml
  /api/networks/pool-server-types:
    $ref: ./paths/api@networks@pool-server-types.yaml
  /api/networks/pool-server-types/{id}:
    $ref: ./paths/api@networks@pool-server-types@id.yaml
  /api/networks/servers/{id}/refresh:
    $ref: ./paths/api@networks@servers@id@refresh.yaml
  /api/options/codeRepositories:
    $ref: ./paths/api@options@codeRepositories.yaml
  /api/options/{optionSource}:
    $ref: ./paths/api@options@optionSource.yaml
  /api/options/list:
    $ref: ./paths/api@options@list.yaml
  /api/options/zoneNetworkOptions:
    $ref: ./paths/api@options@zoneNetworkOptions.yaml
  /api/ping:
    $ref: ./paths/api@ping.yaml
  /api/plugins:
    $ref: ./paths/api@plugins.yaml
  /api/plugins/upload:
    $ref: ./paths/api@plugins@upload.yaml
  /api/plugins/{id}:
    $ref: ./paths/api@plugins@id.yaml
  /api/plugins/check-updates:
    $ref: ./paths/api@plugins@check-updates.yaml
  /api/policies:
    $ref: ./paths/api@policies.yaml
  /api/policies/{id}:
    $ref: ./paths/api@policies@id.yaml
  /api/groups/{groupId}/policies:
    $ref: ./paths/api@groups@id@policies.yaml
  /api/groups/{groupId}/policies/{id}:
    $ref: ./paths/api@groups@id@policies@id.yaml
  /api/zones/{cloudId}/policies:
    $ref: ./paths/api@zones@id@policies.yaml
  /api/zones/{cloudId}/policies/{id}:
    $ref: ./paths/api@zones@id@policies@id.yaml
  /api/policy-types:
    $ref: ./paths/api@policy-types.yaml
  /api/power-schedules:
    $ref: ./paths/api@power-schedules.yaml
  /api/power-schedules/{id}:
    $ref: ./paths/api@power-schedules@id.yaml
  /api/power-schedules/{id}/add-instances:
    $ref: ./paths/api@power-schedules@id@add-instances.yaml
  /api/power-schedules/{id}/add-servers:
    $ref: ./paths/api@power-schedules@id@add-servers.yaml
  /api/power-schedules/{id}/remove-instances:
    $ref: ./paths/api@power-schedules@id@remove-instances.yaml
  /api/power-schedules/{id}/remove-servers:
    $ref: ./paths/api@power-schedules@id@remove-servers.yaml
  /api/preseed-scripts:
    $ref: ./paths/api@preseed-scripts.yaml
  /api/preseed-scripts/{id}:
    $ref: ./paths/api@preseed-scripts@id.yaml
  /api/price-sets:
    $ref: ./paths/api@price-sets.yaml
  /api/price-sets/{id}:
    $ref: ./paths/api@price-sets@id.yaml
  /api/price-sets/{id}/deactivate:
    $ref: ./paths/api@price-sets@id@deactivate.yaml
  /api/prices:
    $ref: ./paths/api@prices.yaml
  /api/prices/{id}:
    $ref: ./paths/api@prices@id.yaml
  /api/prices/{id}/deactivate:
    $ref: ./paths/api@prices@id@deactivate.yaml
  /api/provision-types:
    $ref: ./paths/api@provision-types.yaml
  /api/provision-types/{id}:
    $ref: ./paths/api@provision-types@id.yaml
  /api/provisioning-licenses:
    $ref: ./paths/api@provisioning-licenses.yaml
  /api/provisioning-licenses/{id}:
    $ref: ./paths/api@provisioning-licenses@id.yaml
  /api/provisioning-licenses/{id}/reservations:
    $ref: ./paths/api@provisioning-licenses@id@reservations.yaml
  /api/provisioning-settings:
    $ref: ./paths/api@provisioning-settings.yaml
  /api/public-archives/download/{bucket}/{filepath}:
    $ref: ./paths/api@public-archives@download@id@path.yaml
  /api/public-archives/link:
    $ref: ./paths/api@public-archives@link.yaml
  /api/report-types:
    $ref: ./paths/api@report-types.yaml
  /api/reports:
    $ref: ./paths/api@reports.yaml
  /api/reports/{id}:
    $ref: ./paths/api@reports@id.yaml
  /api/reports/download/{id}{format}:
    $ref: ./paths/api@reports@download@id.yaml
  /api/resource-pools/groups:
    $ref: ./paths/api@resource-pools@groups.yaml
  /api/resource-pools/groups/{id}:
    $ref: ./paths/api@resource-pools@groups@id.yaml
  /api/roles:
    $ref: ./paths/api@roles.yaml
  /api/roles/{id}:
    $ref: ./paths/api@roles@id.yaml
  /api/roles/{id}/update-blueprint:
    $ref: ./paths/api@roles@id@update-blueprint.yaml
  /api/roles/{id}/update-catalog-item-type:
    $ref: ./paths/api@roles@id@update-catalog-item-type.yaml
  /api/roles/{id}/update-cloud:
    $ref: ./paths/api@roles@id@update-cloud.yaml
  /api/roles/{id}/update-group:
    $ref: ./paths/api@roles@id@update-group.yaml
  /api/roles/{id}/update-instance-type:
    $ref: ./paths/api@roles@id@update-instance-type.yaml
  /api/roles/{id}/update-permission:
    $ref: ./paths/api@roles@id@update-permission.yaml
  /api/roles/{id}/update-persona:
    $ref: ./paths/api@roles@id@update-persona.yaml
  /api/roles/{id}/update-report-type:
    $ref: ./paths/api@roles@id@update-report-type.yaml
  /api/roles/{id}/update-task:
    $ref: ./paths/api@roles@id@update-task.yaml
  /api/roles/{id}/update-task-set:
    $ref: ./paths/api@roles@id@update-task-set.yaml
  /api/roles/{id}/update-vdi-pool:
    $ref: ./paths/api@roles@id@update-vdi-pool.yaml
  /api/scale-thresholds:
    $ref: ./paths/api@scale-thresholds.yaml
  /api/scale-thresholds/{id}:
    $ref: ./paths/api@scale-thresholds@id.yaml
  /api/search:
    $ref: ./paths/api@search.yaml
  /api/security-groups:
    $ref: ./paths/api@security-groups.yaml
  /api/security-groups/{id}:
    $ref: ./paths/api@security-groups@id.yaml
  /api/security-groups/{id}/locations:
    $ref: ./paths/api@security-groups@id@locations.yaml
  /api/security-groups/{id}/locations/{locationId}:
    $ref: ./paths/api@security-groups@id@locations@locationId.yaml
  /api/security-groups/{id}/rules:
    $ref: ./paths/api@security-groups@id@rules.yaml
  /api/security-groups/{id}/rules/{sgId}:
    $ref: ./paths/api@security-groups@id@rules@sgId.yaml
  /api/security-packages:
    $ref: ./paths/api@security-packages.yaml
  /api/security-packages/{id}:
    $ref: ./paths/api@security-packages@id.yaml
  /api/security-package-types:
    $ref: ./paths/api@security-package-types.yaml
  /api/security-package-types/{id}:
    $ref: ./paths/api@security-package-types@id.yaml
  /api/security-scans:
    $ref: ./paths/api@security-scans.yaml
  /api/security-scans/{id}:
    $ref: ./paths/api@security-scans@id.yaml
  /api/servers:
    $ref: ./paths/api@servers.yaml
  /api/servers/{id}:
    $ref: ./paths/api@servers@id.yaml
  /api/servers/{id}/assign-account:
    $ref: ./paths/api@servers@id@assign-account.yaml
  /api/servers/{id}/install-agent:
    $ref: ./paths/api@servers@id@install-agent.yaml
  /api/servers/{id}/make-managed:
    $ref: ./paths/api@servers@id@make-managed.yaml
  /api/servers/{id}/resize:
    $ref: ./paths/api@servers@id@resize.yaml
  /api/servers/{id}/snapshots:
    $ref: ./paths/api@servers@id@snapshots.yaml
  /api/servers/{id}/start:
    $ref: ./paths/api@servers@id@start.yaml
  /api/servers/{id}/stop:
    $ref: ./paths/api@servers@id@stop.yaml
  /api/servers/{id}/restart:
    $ref: ./paths/api@servers@id@restart.yaml
  /api/servers/{id}/upgrade:
    $ref: ./paths/api@servers@id@upgrade.yaml
  /api/servers/{id}/workflow:
    $ref: ./paths/api@servers@id@workflow.yaml
  /api/servers/{id}/networkInterfaces/{networkInterfaceId}:
    $ref: ./paths/api@servers@id@networkInterfaces@id.yaml
  /api/servers/change-cloud:
    $ref: ./paths/api@servers@change-cloud.yaml
  /api/catalog/cart:
    $ref: ./paths/api@catalog@cart.yaml
  /api/catalog/cart/items:
    $ref: ./paths/api@catalog@cart@items.yaml
  /api/catalog/cart/items/{id}:
    $ref: ./paths/api@catalog@cart@items@id.yaml
  /api/catalog/checkout:
    $ref: ./paths/api@catalog@checkout.yaml
  /api/catalog/items:
    $ref: ./paths/api@catalog@items.yaml
  /api/catalog/items/{id}:
    $ref: ./paths/api@catalog@items@id.yaml
  /api/catalog/orders:
    $ref: ./paths/api@catalog@orders.yaml
  /api/catalog/types:
    $ref: ./paths/api@catalog@types.yaml
  /api/catalog/types/{id}:
    $ref: ./paths/api@catalog@types@id.yaml
  /api/servers/service-plans:
    $ref: ./paths/api@servers@service-plans.yaml
  /api/service-plans:
    $ref: ./paths/api@service-plans.yaml
  /api/service-plans/{id}:
    $ref: ./paths/api@service-plans@id.yaml
  /api/service-plans/{id}/activate:
    $ref: ./paths/api@service-plans@id@activate.yaml
  /api/service-plans/{id}/deactivate:
    $ref: ./paths/api@service-plans@id@deactivate.yaml
  /api/setup:
    $ref: ./paths/api@setup.yaml
  /api/snapshots/{id}:
    $ref: ./paths/api@snapshots@id.yaml
  /api/certificates:
    $ref: ./paths/api@certificates.yaml
  /api/certificates/{id}:
    $ref: ./paths/api@certificates@id.yaml
  /api/storage-buckets:
    $ref: ./paths/api@storage-buckets.yaml
  /api/storage-buckets/{id}:
    $ref: ./paths/api@storage-buckets@id.yaml
  /api/storage-server-types:
    $ref: ./paths/api@storage-server-types.yaml
  /api/storage-server-types/{id}:
    $ref: ./paths/api@storage-server-types@id.yaml
  /api/storage-servers:
    $ref: ./paths/api@storage-servers.yaml
  /api/storage-servers/{id}:
    $ref: ./paths/api@storage-servers@id.yaml
  /api/storage-volume-types:
    $ref: ./paths/api@storage-volume-types.yaml
  /api/storage-volume-types/{id}:
    $ref: ./paths/api@storage-volume-types@id.yaml
  /api/storage-volumes:
    $ref: ./paths/api@storage-volumes.yaml
  /api/storage-volumes/{id}:
    $ref: ./paths/api@storage-volumes@id.yaml
  /api/accounts:
    $ref: ./paths/api@accounts.yaml
  /api/accounts/available-roles:
    $ref: ./paths/api@accounts@available-roles.yaml
  /api/accounts/{id}:
    $ref: ./paths/api@accounts@id.yaml
  /api/accounts/{accountId}/groups:
    $ref: ./paths/api@accounts@id@groups.yaml
  /api/accounts/{accountId}/groups/{id}:
    $ref: ./paths/api@accounts@id@groups@id.yaml
  /api/accounts/{accountId}/groups/{id}/update-zones:
    $ref: ./paths/api@accounts@id@groups@id@update-zones.yaml
  /api/accounts/{accountId}/users:
    $ref: ./paths/api@accounts@id@users.yaml
  /api/subnet-types:
    $ref: ./paths/api@subnet-types.yaml
  /api/subnets:
    $ref: ./paths/api@subnets.yaml
  /api/subnets/{id}:
    $ref: ./paths/api@subnets@id.yaml
  /api/tasks:
    $ref: ./paths/api@tasks.yaml
  /api/tasks/{id}:
    $ref: ./paths/api@tasks@id.yaml
  /api/tasks/{id}/execute:
    $ref: ./paths/api@tasks@id@execute.yaml
  /api/task-sets:
    $ref: ./paths/api@task-sets.yaml
  /api/task-sets/{id}:
    $ref: ./paths/api@task-sets@id.yaml
  /api/task-sets/{id}/execute:
    $ref: ./paths/api@task-sets@id@execute.yaml
  /api/task-types:
    $ref: ./paths/api@task-types.yaml
  /api/task-types/{id}:
    $ref: ./paths/api@task-types@id.yaml
  /api/usage:
    $ref: ./paths/api@usage.yaml
  /api/user-settings:
    $ref: ./paths/api@user-settings.yaml
  /api/user-settings/api-clients:
    $ref: ./paths/api@user-settings@api-clients.yaml
  /api/user-settings/avatar:
    $ref: ./paths/api@user-settings@avatar.yaml
  /api/user-settings/clear-access-token:
    $ref: ./paths/api@user-settings@clear-access-token.yaml
  /api/user-settings/desktop-background:
    $ref: ./paths/api@user-settings@desktop-background.yaml
  /api/user-settings/regenerate-access-token:
    $ref: ./paths/api@user-settings@regenerate-access-token.yaml
  /api/users:
    $ref: ./paths/api@users.yaml
  /api/users/{id}:
    $ref: ./paths/api@users@id.yaml
  /api/users/{id}/permissions:
    $ref: ./paths/api@users@id@permissions.yaml
  /api/vdi-apps:
    $ref: ./paths/api@vdi-apps.yaml
  /api/vdi-apps/{id}:
    $ref: ./paths/api@vdi-apps@id.yaml
  /api/vdi-gateways:
    $ref: ./paths/api@vdi-gateways.yaml
  /api/vdi-gateways/{id}:
    $ref: ./paths/api@vdi-gateways@id.yaml
  /api/vdi-pools:
    $ref: ./paths/api@vdi-pools.yaml
  /api/vdi-pools/{id}:
    $ref: ./paths/api@vdi-pools@id.yaml
  /api/users/available-roles:
    $ref: ./paths/api@users@available-roles.yaml
  /api/vdi-allocations:
    $ref: ./paths/api@vdi-allocations.yaml
  /api/vdi-allocations/{id}:
    $ref: ./paths/api@vdi-allocations@id.yaml
  /api/vdi:
    $ref: ./paths/api@vdi.yaml
  /api/vdi/{id}:
    $ref: ./paths/api@vdi@id.yaml
  /api/vdi/{id}/allocate:
    $ref: ./paths/api@vdi@id@allocate.yaml
  /api/virtual-images:
    $ref: ./paths/api@virtual-images.yaml
  /api/virtual-images/{virtualImageId}:
    $ref: ./paths/api@virtual-images@id.yaml
  /api/virtual-images/{virtualImageId}/files:
    $ref: ./paths/api@virtual-images@id@files.yaml
  /api/virtual-images/{virtualImageId}/locations:
    $ref: ./paths/api@virtual-images@id@locations.yaml
  /api/virtual-images/{virtualImageId}/locations/{id}:
    $ref: ./paths/api@virtual-images@id@locations@id.yaml
  /api/virtual-images/{virtualImageId}/upload:
    $ref: ./paths/api@virtual-images@id@upload.yaml
  /api/whitelabel-settings:
    $ref: ./paths/api@whitelabel-settings.yaml
  /api/whitelabel-settings/images:
    $ref: ./paths/api@whitelabel-settings@images.yaml
  /api/whitelabel-settings/images/{imageType}:
    $ref: ./paths/api@whitelabel-settings@images@imageType.yaml
  /api/whoami:
    $ref: ./paths/api@whoami.yaml
  /api/apps/{id}/wiki:
    $ref: ./paths/api@apps@id@wiki.yaml
  /api/clusters/{clusterId}/wiki:
    $ref: ./paths/api@clusters@id@wiki.yaml
  /api/groups/{id}/wiki:
    $ref: ./paths/api@groups@id@wiki.yaml
  /api/instances/{id}/wiki:
    $ref: ./paths/api@instances@id@wiki.yaml
  /api/servers/{id}/wiki:
    $ref: ./paths/api@servers@id@wiki.yaml
  /api/wiki/categories:
    $ref: ./paths/api@wiki@categories.yaml
  /api/wiki/pages:
    $ref: ./paths/api@wiki@pages.yaml
  /api/wiki/pages/{id}:
    $ref: ./paths/api@wiki@pages@id.yaml
  /api/zones/{id}/wiki:
    $ref: ./paths/api@zones@id@wiki.yaml
  /oauth/token:
    $ref: ./paths/oauth@token.yaml
components:
  examples:
    approvalItem:
      summary: Approval Items Response
      value:
        approvalItem:
          id: 13
          name: ITEM-0000013
          externalId: null
          externalName: null
          internalId: null
          approvedBy: Aaron Reid
          deniedBy: null
          status: approved
          errorMessage: null
          dateCreated: 2022-01-25T21:43:35Z
          lastUpdated: 2022-01-25T21:44:01Z
          dateApproved: 2022-01-25T21:44:01Z
          dateDenied: null
          approval:
            id: 45
          reference:
            id: 17901
            type: instance
            name: ARDMCEN1280
            displayName: ARDMCEN1280
    approvals:
      summary: Approvals Response
      value:
        approvals:
        - id: 45
          name: APPROVAL-0000045
          internalId: null
          externalId: null
          externalName: null
          requestType: Instance Approval
          account:
            id: 3
            name: Morpheus
          approver:
            id: 3
            name: Morpheus
          accountIntegration: null
          status: 1 approved
          errorMessage: null
          dateCreated: 2022-01-25T21:43:35Z
          lastUpdated: 2022-01-27T00:14:27Z
          requestBy: Aaron Reid
        meta:
          size: 1
          total: 1
          max: 25
          offset: 0
  parameters:
    max:
      description: Maximum number of records to return
      in: query
      name: max
      schema:
        default: 25
        format: int64
        type: integer
    offset:
      description: "Offset records, the number of records to skip, for paginating\
        \ requests"
      in: query
      name: offset
      schema:
        default: 0
        format: int64
        type: integer
    sort:
      description: "Sort order, the name of the property to sort by"
      in: query
      name: sort
      schema:
        default: name
        type: string
    order:
      description: "Sort direction, use 'desc' to reverse sort"
      in: query
      name: order
      schema:
        default: asc
        enum:
        - asc
        - desc
        type: string
    phrase:
      description: Search phrase for partial matches on name or description
      in: query
      name: phrase
      schema:
        type: string
    name:
      description: "Filter by name, wildcard may be specified as %, eg. example-%"
      example: example-%
      in: query
      name: name
      schema:
        type: string
    userId:
      description: Filter by User ID
      example: 6
      in: query
      name: userId
      schema:
        description: User ID
        format: int64
        type: integer
    tenantId:
      description: Filter by Tenant ID. Only available to the master account.
      example: 3
      in: query
      name: tenantId
      schema:
        type: number
    lastUpdated:
      description: "Date filter, restricts query to only load resources updated more\
        \ recently than the date specified (ISO 8601)"
      example: 2019-03-06T17:52:29+0000
      in: query
      name: lastUpdated
      schema:
        format: date-time
        type: string
    id-path:
      description: Morpheus ID of the Object being referenced
      example: 1
      in: path
      name: id
      required: true
      schema:
        format: int64
        type: integer
    enableMaintenance:
      description: "Pass true to turn on maintenance mode, or false to turn it off.\
        \ If no value is given then it will be toggled from off to on or vice versa."
      in: query
      name: enabled
      schema:
        type: boolean
    action-path:
      description: Approval Action Item
      example: approve
      in: path
      name: action
      required: true
      schema:
        enum:
        - approve
        - deny
        - cancel
        type: string
    direction:
      description: "Sort direction, use 'desc' to reverse sort"
      example: asc
      in: query
      name: direction
      schema:
        default: asc
        enum:
        - asc
        - desc
        type: string
    createdBy:
      description: The User ID for Filtering
      example: 63
      in: query
      name: createdBy
      schema:
        description: User ID
        format: int64
        type: integer
    showDeleted:
      description: "If true, includes instances in pending removal status."
      example: true
      in: query
      name: showDeleted
      schema:
        default: false
        description: Show instances in pending removal status
        type: boolean
    labels:
      description: "Filter by label(s), matches records that contain any of the specified\
        \ labels"
      in: query
      name: labels
      schema:
        type: string
    allLabels:
      description: "Filter by label(s), matches records that contain all of the specified\
        \ labels"
      in: query
      name: allLabels
      schema:
        type: string
    removeInstances:
      description: Remove Instances
      example: "on"
      in: query
      name: removeInstances
      schema:
        default: "off"
        type: string
    preserveVolumes:
      description: Preserve Volumes
      example: "on"
      in: query
      name: preserveVolumes
      schema:
        default: "off"
        type: string
    keepBackups:
      description: Preserve copy of backups
      example: "on"
      in: query
      name: keepBackups
      schema:
        default: "off"
        type: string
    releaseFloatingIps:
      description: Release Floating IPs
      example: "off"
      in: query
      name: releaseFloatingIps
      schema:
        default: "on"
        type: string
    releaseEIPs:
      description: Alias for releaseFloatingIps
      example: "off"
      in: query
      name: releaseEIPs
      schema:
        default: "on"
        type: string
    force:
      description: Force Delete
      example: "on"
      in: query
      name: force
      schema:
        default: "off"
        type: string
    bucketName-path:
      description: Bucket name
      in: path
      name: bucket
      required: true
      schema:
        type: string
    filepath-lower-path:
      description: The path to to search for files under. Default is the root directory
        /.
      in: path
      name: filepath
      required: true
      schema:
        default: /
        example: /config/environments/
        type: string
    fullTree:
      description: Include files under sub directories too. This is always true when
        searching with phrase.
      in: query
      name: fullTree
      schema:
        default: false
        type: boolean
    archiveFilename:
      description: Specify a filename for archive file. The base filename of the uploaded
        file is the default.
      example: /path/to/file
      in: query
      name: filename
      schema:
        type: string
    expireSeconds:
      description: Time to live in seconds. 0 means do not expire.
      example: 600
      in: query
      name: expireSeconds
      schema:
        default: 0
        format: int64
        type: integer
    linkId-path:
      description: The ID of the archive file link.
      in: path
      name: linkId
      required: true
      schema:
        format: int64
        type: integer
    instanceId:
      description: The Instance ID for Filtering
      example: 94
      in: query
      name: instanceId
      schema:
        description: Instance ID
        format: int64
        type: integer
    containerId:
      description: The Container ID for Filtering
      example: 135
      in: query
      name: containerId
      schema:
        description: Container ID
        format: int64
        type: integer
    serverId:
      description: The Server ID for Filtering
      example: 97
      in: query
      name: serverId
      schema:
        description: Server ID
        format: int64
        type: integer
    uniqueId-path:
      description: The Unique ID of the execution request
      example: c56f75d0-a59a-4566-92e3-4dc716c5d076
      in: path
      name: uniqueId
      required: true
      schema:
        type: string
    startDate:
      description: Filter by startDate greater than or equal to a specified date
      example: 2019-01-01
      in: query
      name: startDate
      schema:
        type: string
    endDate:
      description: Filter by endDate less than or equal to a specified date
      example: 2020-01-01
      in: query
      name: endDate
      schema:
        type: string
    includeUsages:
      description: Optional ability to suppress the usage records
      in: query
      name: includeUsages
      schema:
        default: true
        type: boolean
    maxUsages:
      description: Optional ability to limit the usages returned
      in: query
      name: maxUsages
      schema:
        format: int64
        type: integer
    offsetUsages:
      description: "Optional ability to offset the usages returned, for use with maxUsages\
        \ to paginate"
      in: query
      name: offsetUsages
      schema:
        format: int64
        type: integer
    includeComputeServers:
      description: Optional ability to exclude compute servers
      in: query
      name: includeComputeServers
      schema:
        default: true
        type: boolean
    includeInstances:
      description: Optional ability to exclude instances
      in: query
      name: includeInstances
      schema:
        default: true
        type: boolean
    includeDiscoveredServers:
      description: Optional ability to exclude discovered servers
      in: query
      name: includeDiscoveredServers
      schema:
        default: true
        type: boolean
    includeLoadBalancers:
      description: Optional ability to exclude load balancers
      in: query
      name: includeLoadBalancers
      schema:
        default: true
        type: boolean
    includeVirtualImages:
      description: Optional ability to exclude virtual images
      in: query
      name: includeVirtualImages
      schema:
        default: true
        type: boolean
    includeSnapshots:
      description: Optional ability to exclude snapshots
      in: query
      name: includeSnapshots
      schema:
        default: true
        type: boolean
    includeTenants:
      description: Optional ability to include all subtenant billing information when
        calling from a master tenant user
      in: query
      name: includeTenants
      schema:
        default: false
        type: boolean
    accountId:
      description: Filter by Tenant ID. This is only available to master tenant users
        with permission to manage tenants and users.
      example: 3
      in: query
      name: accountId
      schema:
        format: int64
        type: integer
    identifier-path:
      description: Morpheus UUID or ID of the Object being created or referenced
      in: path
      name: identifier
      required: true
      schema:
        type: string
    description:
      description: "Filter by description, wildcard may be specified as %. eg. `example-%`"
      example: The desription of my cool object
      in: query
      name: description
      schema:
        type: string
    enabled:
      description: Filter by enabled
      example: false
      in: query
      name: enabled
      schema:
        type: boolean
    featured:
      description: Filter by featured
      example: false
      in: query
      name: featured
      schema:
        type: boolean
    code:
      description: If specified will return an exact match on code
      example: azr
      in: query
      name: code
      schema:
        type: string
    status:
      description: The instance status for filtering.
      example: running
      in: query
      name: status
      schema:
        description: Instance status
        type: string
    deleted:
      description: "If true, only deleted resources or instances in pending removal\
        \ status are returned."
      example: true
      in: query
      name: deleted
      schema:
        description: Show only deleted resources or instances in pending removal status
        type: boolean
  responses:
    "4xx":
      content:
        application/json:
          examples:
            "400":
              value:
                $ref: ../examples/400.json
            "401":
              value:
                $ref: ../examples/401.json
            "403":
              value:
                $ref: ../examples/403.json
            "404":
              value:
                $ref: ../examples/404.json
            "405":
              value:
                $ref: ../examples/405.json
            "406":
              value:
                $ref: ../examples/406.json
            "410":
              value:
                $ref: ../examples/410.json
            "429":
              value:
                $ref: ../examples/429.json
          schema:
            $ref: '#/components/schemas/default-error'
      description: Error Codes
    "5xx":
      content:
        application/json:
          examples:
            "500":
              value:
                $ref: ../examples/500.json
            "503":
              value:
                $ref: ../examples/503.json
          schema:
            $ref: '#/components/schemas/default-error'
      description: Error Codes
  schemas:
    activity:
      properties:
        activity:
          items:
            $ref: '#/components/schemas/activity_activity_inner'
          type: array
      type: object
    meta:
      properties:
        meta:
          $ref: '#/components/schemas/meta_meta'
      type: object
    default-error:
      properties:
        msg:
          type: string
      type: object
    alert:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        allApps:
          type: boolean
        allChecks:
          type: boolean
        allGroups:
          type: boolean
        active:
          type: boolean
        minSeverity:
          type: string
        minDuration:
          format: int64
          type: integer
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
        checks:
          items:
            type: integer
          nullable: true
          type: array
        checkGroups:
          items:
            type: integer
          nullable: true
          type: array
        apps:
          items:
            type: integer
          nullable: true
          type: array
        contacts:
          items:
            $ref: '#/components/schemas/addAlerts_request_alert_contacts_inner'
          type: array
      type: object
    "200-success":
      example:
        success: true
      properties:
        success:
          type: boolean
      type: object
    check:
      properties:
        id:
          format: int64
          type: integer
        account:
          $ref: '#/components/schemas/updateBlueprintPermissions_request_resourcePermission_sites_inner'
        active:
          type: boolean
        apiKey:
          type: string
        availability:
          type: number
        checkAgent:
          nullable: true
          type: string
        checkInterval:
          format: int64
          nullable: true
          type: integer
        checkSpec:
          nullable: true
          type: string
        checkType:
          $ref: '#/components/schemas/check_checkType'
        config:
          $ref: '#/components/schemas/check_config'
        container:
          $ref: '#/components/schemas/check_container'
        createIncident:
          type: boolean
        muted:
          type: boolean
        createdBy:
          $ref: '#/components/schemas/check_createdBy'
        dateCreated:
          format: date-time
          type: string
        description:
          nullable: true
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
        health:
          format: int64
          type: integer
        inUptime:
          type: boolean
        lastBoxStats:
          nullable: true
          type: string
        lastCheckStatus:
          nullable: true
          type: string
        lastError:
          nullable: true
          type: string
        lastErrorDate:
          format: date-time
          nullable: true
          type: string
        lastMessage:
          nullable: true
          type: string
        lastMetric:
          nullable: true
          type: string
        lastRunDate:
          format: date-time
          nullable: true
          type: string
        lastStats:
          nullable: true
          type: string
        lastSuccessDate:
          format: date-time
          nullable: true
          type: string
        lastTimer:
          format: int64
          nullable: true
          type: integer
        lastUpdated:
          format: date-time
          nullable: true
          type: string
        lastWarningDate:
          format: date-time
          nullable: true
          type: string
        name:
          type: string
        nextRunDate:
          format: date-time
          nullable: true
          type: string
        outageTime:
          format: int64
          type: integer
        severity:
          type: string
        startDate:
          format: date-time
          nullable: true
          type: string
        deleted:
          type: boolean
      type: object
    checkGroup:
      properties:
        id:
          format: int64
          type: integer
        account:
          $ref: '#/components/schemas/updateBlueprintPermissions_request_resourcePermission_sites_inner'
        instance:
          $ref: '#/components/schemas/checkGroup_instance'
        name:
          type: string
        description:
          nullable: true
          type: string
        inUptime:
          type: boolean
        lastCheckStatus:
          nullable: true
          type: string
        lastWarningDate:
          format: date-time
          nullable: true
          type: string
        lastErrorDate:
          format: date-time
          nullable: true
          type: string
        lastSuccessDate:
          format: date-time
          nullable: true
          type: string
        lastRunDate:
          format: date-time
          nullable: true
          type: string
        lastError:
          nullable: true
          type: string
        outageTime:
          format: int64
          type: integer
        lastTimer:
          format: int64
          type: integer
        health:
          format: int64
          type: integer
        history:
          nullable: true
          type: string
        minHappy:
          format: int64
          type: integer
        lastMetric:
          nullable: true
          type: string
        severity:
          type: string
        createIncident:
          type: boolean
        muted:
          type: boolean
        createdBy:
          $ref: '#/components/schemas/activity_activity_inner_user'
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
        availability:
          nullable: true
          type: number
        checkType:
          $ref: '#/components/schemas/check_checkType'
        checks:
          items:
            format: int64
            type: integer
          type: array
      type: object
    checkApp:
      properties:
        id:
          format: int64
          type: integer
        account:
          $ref: '#/components/schemas/updateBlueprintPermissions_request_resourcePermission_sites_inner'
        active:
          type: boolean
        app:
          $ref: '#/components/schemas/checkGroup_instance'
        name:
          type: string
        description:
          nullable: true
          type: string
        inUptime:
          type: boolean
        lastCheckStatus:
          nullable: true
          type: string
        lastWarningDate:
          format: date-time
          nullable: true
          type: string
        lastErrorDate:
          format: date-time
          nullable: true
          type: string
        lastSuccessDate:
          format: date-time
          nullable: true
          type: string
        lastRunDate:
          format: date-time
          nullable: true
          type: string
        lastError:
          nullable: true
          type: string
        lastTimer:
          format: int64
          type: integer
        health:
          format: int64
          type: integer
        history:
          nullable: true
          type: string
        severity:
          type: string
        createIncident:
          type: boolean
        muted:
          type: boolean
        createdBy:
          $ref: '#/components/schemas/activity_activity_inner_user'
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
        availability:
          nullable: true
          type: string
        checks:
          items:
            format: int64
            type: integer
          type: array
        checkGroups:
          items:
            format: int64
            type: integer
          type: array
      type: object
    applianceSettings:
      example:
        registrationEnabled: true
        internalApplianceUrl: internalApplianceUrl
        disableAfterAttempts: disableAfterAttempts
        warnUserDaysBefore: warnUserDaysBefore
        smtpTLS: true
        smtpPort: smtpPort
        currencyProvider: currencyProvider
        expirePwdDays: expirePwdDays
        applianceUrl: applianceUrl
        proxyPort: proxyPort
        proxyWorkstation: proxyWorkstation
        disableAfterDaysInactive: disableAfterDaysInactive
        smtpSSL: true
        smtpPassword: smtpPassword
        defaultRoleId: defaultRoleId
        enabledZoneTypes:
        - name: name
          id: 0
        - name: name
          id: 0
        smtpPasswordHash: smtpPasswordHash
        proxyPassword: proxyPassword
        corsAllowed: corsAllowed
        smtpMailFrom: smtpMailFrom
        proxyHost: proxyHost
        smtpUser: smtpUser
        smtpServer: smtpServer
        proxyDomain: proxyDomain
        defaultUserRoleId: defaultUserRoleId
        statsRetainmentPeriod: 6
        proxyPasswordHash: proxyPasswordHash
        proxyUser: proxyUser
        currencyKey: currencyKey
        dockerPrivilegedMode: true
      properties:
        applianceUrl:
          type: string
        internalApplianceUrl:
          type: string
        corsAllowed:
          type: string
        registrationEnabled:
          type: boolean
        defaultRoleId:
          type: string
        defaultUserRoleId:
          nullable: true
          type: string
        dockerPrivilegedMode:
          type: boolean
        expirePwdDays:
          nullable: true
          type: string
        disableAfterAttempts:
          nullable: true
          type: string
        disableAfterDaysInactive:
          nullable: true
          type: string
        warnUserDaysBefore:
          nullable: true
          type: string
        smtpMailFrom:
          nullable: true
          type: string
        smtpServer:
          nullable: true
          type: string
        smtpPort:
          nullable: true
          type: string
        smtpSSL:
          type: boolean
        smtpTLS:
          type: boolean
        smtpUser:
          nullable: true
          type: string
        smtpPassword:
          nullable: true
          type: string
        smtpPasswordHash:
          nullable: true
          type: string
        proxyHost:
          nullable: true
          type: string
        proxyPort:
          nullable: true
          type: string
        proxyUser:
          nullable: true
          type: string
        proxyPassword:
          nullable: true
          type: string
        proxyPasswordHash:
          nullable: true
          type: string
        proxyDomain:
          nullable: true
          type: string
        proxyWorkstation:
          nullable: true
          type: string
        currencyProvider:
          nullable: true
          type: string
        currencyKey:
          nullable: true
          type: string
        enabledZoneTypes:
          items:
            $ref: '#/components/schemas/applianceSettings_enabledZoneTypes_inner'
          nullable: true
          type: array
        statsRetainmentPeriod:
          format: int64
          type: integer
      type: object
    applianceSettingsUpdate:
      properties:
        applianceUrl:
          description: Appliance URL
          type: string
        internalApplianceUrl:
          description: Internal Appliance URL (PXE)
          nullable: true
          type: string
        corsAllowed:
          description: API Allowed Origins
          nullable: true
          type: string
        registrationEnabled:
          description: "Registration enabled (true, false)"
          type: boolean
        defaultRoleId:
          description: Default tenant role ID
          format: int64
          type: integer
        defaultUserRoleId:
          description: Default user role ID
          format: int64
          type: integer
        dockerPrivilegedMode:
          description: "Docker privileged mode (true, false)"
          type: boolean
        passwordMinLength:
          description: Min Password Length
          type: string
        passwordMinUpperCase:
          description: Min Password Uppercase
          type: string
        passwordMinNumbers:
          description: Min Password Numbers
          type: string
        passwordMinSymbols:
          description: Min Password Symbols
          type: string
        userBrowserSessionTimeout:
          description: User Browser Session Timeout (Minutes)
          type: string
        userBrowserSessionWarning:
          description: User Browser Session Warning (Minutes)
          type: string
        expirePwdDays:
          description: Expire password after days. Setting to 0 disabled this feature
          format: int64
          type: integer
        disableAfterAttempts:
          description: Disable user after number of attempts. Set to 0 to disable
            this feature
          format: int64
          type: integer
        disableAfterDaysInactive:
          description: Disable user if inactive for specified days. Set to 0 to disable
            this feature
          format: int64
          type: integer
        warnUserDaysBefore:
          description: Send warning email number of days in advance before deactivating.
            Set to 0 to disable this feature
          format: int64
          type: integer
        smtpMailFrom:
          description: From email address
          type: string
        smtpServer:
          description: SMTP server / host
          type: string
        smtpPort:
          description: SMTP port
          format: int64
          type: integer
        smtpSSL:
          description: Use SSL for SMTP connection
          type: boolean
        smtpTLS:
          description: Use TLS for SMTP connections
          type: boolean
        smtpUser:
          description: SMTP username
          type: string
        smtpPassword:
          description: SMTP password
          type: string
        proxyHost:
          description: Proxy host
          nullable: true
          type: string
        proxyPort:
          description: Proxy port
          nullable: true
          type: string
        proxyUser:
          description: Proxy username
          type: string
        proxyPassword:
          description: Proxy password
          type: string
        proxyDomain:
          description: Proxy domain
          nullable: true
          type: string
        proxyWorkstation:
          description: Proxy workstation
          nullable: true
          type: string
        currencyProvider:
          description: Currency provider
          type: string
        currencyKey:
          description: Currency provider API key
          nullable: true
          type: string
        enableAllZoneTypes:
          description: "Set all cloud types enabled status on, overrides enableZoneTypes\
            \ and disableZoneTypes parameters"
          type: boolean
        enableZoneTypes:
          description: List of cloud type IDs to set enabled status on
          items:
            format: int64
            type: integer
          type: array
        disableZoneTypes:
          description: List of cloud type IDs to set enabled status off
          items:
            format: int64
            type: integer
          type: array
        disableAllZoneTypes:
          description: "Set all cloud types enabled status off, can be used in conjunction\
            \ with enableZoneTypes"
          type: boolean
      type: object
    approvalItem:
      example:
        approvalItem:
          dateDenied: 2000-01-23T04:56:07.000+00:00
          deniedBy: deniedBy
          approval:
            id: 6
          approvedBy: approvedBy
          errorMessage: errorMessage
          externalId: externalId
          reference:
            displayName: displayName
            name: name
            id: 1
            type: type
          internalId: internalId
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          dateApproved: 2000-01-23T04:56:07.000+00:00
          externalName: externalName
          name: name
          id: 0
          status: status
      properties:
        approvalItem:
          $ref: '#/components/schemas/approvalItem_approvalItem'
      type: object
    approvals:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        internalId:
          nullable: true
          type: string
        externalId:
          nullable: true
          type: string
        externalName:
          nullable: true
          type: string
        requestType:
          type: string
        account:
          $ref: '#/components/schemas/applianceSettings_enabledZoneTypes_inner'
        approver:
          $ref: '#/components/schemas/applianceSettings_enabledZoneTypes_inner'
        accountIntegration:
          nullable: true
          type: string
        status:
          type: string
        errorMessage:
          nullable: true
          type: string
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
        requestBy:
          type: string
      type: object
    approval:
      example:
        approver:
          name: name
          id: 0
        requestType: requestType
        accountIntegration: accountIntegration
        approvalItems:
        - dateDenied: 2000-01-23T04:56:07.000+00:00
          deniedBy: deniedBy
          approval:
            id: 6
          approvedBy: approvedBy
          errorMessage: errorMessage
          externalId: externalId
          reference:
            displayName: displayName
            name: name
            id: 1
            type: type
          internalId: internalId
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          dateApproved: 2000-01-23T04:56:07.000+00:00
          externalName: externalName
          name: name
          id: 0
          status: status
        - dateDenied: 2000-01-23T04:56:07.000+00:00
          deniedBy: deniedBy
          approval:
            id: 6
          approvedBy: approvedBy
          errorMessage: errorMessage
          externalId: externalId
          reference:
            displayName: displayName
            name: name
            id: 1
            type: type
          internalId: internalId
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          dateApproved: 2000-01-23T04:56:07.000+00:00
          externalName: externalName
          name: name
          id: 0
          status: status
        errorMessage: errorMessage
        externalId: externalId
        internalId: internalId
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        externalName: externalName
        name: name
        requestBy: requestBy
        id: 0
        account:
          name: name
          id: 0
        status: status
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        internalId:
          nullable: true
          type: string
        externalId:
          nullable: true
          type: string
        externalName:
          nullable: true
          type: string
        requestType:
          type: string
        account:
          $ref: '#/components/schemas/applianceSettings_enabledZoneTypes_inner'
        approver:
          $ref: '#/components/schemas/applianceSettings_enabledZoneTypes_inner'
        accountIntegration:
          nullable: true
          type: string
        status:
          type: string
        errorMessage:
          nullable: true
          type: string
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
        requestBy:
          type: string
        approvalItems:
          items:
            $ref: '#/components/schemas/approvalItem_approvalItem'
          type: array
      type: object
    app:
      example:
        owner:
          id: 1
          username: username
        instances:
        - name: name
          id: 0
        - name: name
          id: 0
        description: description
        appTiers:
        - "{}"
        - "{}"
        type: type
        appStatus: appStatus
        labels:
        - labels
        - labels
        blueprint:
          name: name
          id: 5
          type: type
        accountId: 6
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        environment: environment
        dateCreated: 2000-01-23T04:56:07.000+00:00
        removalDate: 2000-01-23T04:56:07.000+00:00
        stats:
          running: 2
          cpuUsage: 7.386281948385884
          usedMemory: 2
          total: 4
          instanceCount: 1
          instanceDayCount:
          - 1
          - 1
          instanceDayCountTotal: 1
          maxMemory: 7
          maxStorage: 3
          usedStorage: 9
        instanceCount: 5
        name: name
        siteId: 1
        appContext: appContext
        id: 0
        containerCount: 5
        account:
          name: name
          id: 0
        group:
          name: name
          id: 0
        status: status
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        description:
          type: string
        labels:
          items:
            type: string
          type: array
        environment:
          type: string
        accountId:
          format: int64
          type: integer
        account:
          $ref: '#/components/schemas/applianceSettings_enabledZoneTypes_inner'
        owner:
          $ref: '#/components/schemas/activity_activity_inner_user'
        siteId:
          format: int64
          type: integer
        group:
          $ref: '#/components/schemas/applianceSettings_enabledZoneTypes_inner'
        blueprint:
          $ref: '#/components/schemas/app_blueprint'
        type:
          type: string
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
        removalDate:
          format: date-time
          nullable: true
          type: string
        appContext:
          type: string
        status:
          type: string
        appStatus:
          type: string
        instanceCount:
          format: int64
          type: integer
        containerCount:
          format: int64
          type: integer
        appTiers:
          items:
            type: object
          type: array
        instances:
          items:
            $ref: '#/components/schemas/applianceSettings_enabledZoneTypes_inner'
          type: array
        stats:
          $ref: '#/components/schemas/app_stats'
      type: object
    appStats:
      properties:
        stats:
          $ref: '#/components/schemas/app_stats'
      type: object
    appCreate:
      properties:
        templateId:
          format: int64
          type: integer
        blueprintId:
          $ref: '#/components/schemas/appCreate_blueprintId'
        name:
          description: A unique name for the app
          type: string
        description:
          description: Description
          type: string
        labels:
          description: "Array of label strings, can be used for filtering."
          items:
            type: string
          nullable: true
          type: array
        group:
          $ref: '#/components/schemas/appCreate_group'
        defaultCloud:
          $ref: '#/components/schemas/appCreate_defaultCloud'
        environment:
          description: Environment code (appContext)
          type: string
        tiers:
          description: Configuration of app elements
          type: object
      required:
      - blueprintId
      - name
      type: object
    appCreateResponse:
      example:
        owner:
          id: 1
          username: username
        instances:
        - name: name
          id: 0
        - name: name
          id: 0
        description: description
        appTiers:
        - "{}"
        - "{}"
        type: type
        appStatus: appStatus
        labels:
        - labels
        - labels
        blueprint:
          name: name
          id: 5
          type: type
        accountId: 6
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        environment: environment
        dateCreated: 2000-01-23T04:56:07.000+00:00
        removalDate: 2000-01-23T04:56:07.000+00:00
        instanceCount: 2
        name: name
        siteId: 5
        appContext: appContext
        id: 0
        containerCount: 7
        account:
          name: name
          id: 0
        group:
          name: name
          id: 0
        status: status
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        description:
          type: string
        labels:
          items:
            type: string
          type: array
        environment:
          type: string
        accountId:
          format: int64
          type: integer
        account:
          $ref: '#/components/schemas/applianceSettings_enabledZoneTypes_inner'
        owner:
          $ref: '#/components/schemas/activity_activity_inner_user'
        siteId:
          format: int64
          type: integer
        group:
          $ref: '#/components/schemas/applianceSettings_enabledZoneTypes_inner'
        blueprint:
          $ref: '#/components/schemas/app_blueprint'
        type:
          type: string
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
        removalDate:
          format: date-time
          nullable: true
          type: string
        appContext:
          type: string
        status:
          type: string
        appStatus:
          type: string
        instanceCount:
          format: int64
          type: integer
        containerCount:
          format: int64
          type: integer
        appTiers:
          items:
            type: object
          type: array
        instances:
          items:
            $ref: '#/components/schemas/applianceSettings_enabledZoneTypes_inner'
          type: array
      type: object
    appUpdate:
      properties:
        name:
          description: A unique name for the app
          type: string
        description:
          description: Description
          type: string
        labels:
          description: "Array of label strings, can be used for filtering."
          items:
            type: string
          nullable: true
          type: array
        environment:
          description: Environment code (appContext)
          type: string
        ownerId:
          description: "User ID, can be used to change app owner. This also changes\
            \ the owner for each instance in the app."
          format: int64
          type: integer
      type: object
    appPrepareApply:
      properties:
        data:
          $ref: '#/components/schemas/appPrepareApply_data'
      type: object
    appSecurityGroups:
      properties:
        id:
          format: int64
          type: integer
        accountId:
          format: int64
          type: integer
        name:
          type: string
        description:
          type: string
      type: object
    appState:
      properties:
        workloads:
          items:
            $ref: '#/components/schemas/appState_workloads_inner'
          type: array
        iacDrift:
          type: boolean
        planResources:
          items:
            type: object
          type: array
        specs:
          items:
            $ref: '#/components/schemas/appState_specs_inner'
          type: array
        stateData:
          type: string
        planData:
          type: string
        input:
          $ref: '#/components/schemas/appState_input'
        output:
          $ref: '#/components/schemas/appState_output'
      type: object
    archiveBucket:
      example:
        owner:
          name: name
          id: 0
        storageProvider:
          name: name
          id: 0
        code: code
        visibility: visibility
        filePath: filePath
        description: description
        rawSize: 6
        fileCount: 1
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        createdBy:
          username: username
        name: name
        isPublic: true
        id: 0
        accounts:
        - "{}"
        - "{}"
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        description:
          nullable: true
          type: string
        storageProvider:
          $ref: '#/components/schemas/applianceSettings_enabledZoneTypes_inner'
        owner:
          $ref: '#/components/schemas/applianceSettings_enabledZoneTypes_inner'
        createdBy:
          $ref: '#/components/schemas/archiveBucket_createdBy'
        isPublic:
          type: boolean
        visibility:
          type: string
        code:
          type: string
        filePath:
          type: string
        rawSize:
          format: int64
          nullable: true
          type: integer
        fileCount:
          format: int64
          type: integer
        accounts:
          items:
            type: object
          properties:
            id:
              format: int64
              type: integer
            name:
              type: string
          type: array
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
      type: object
    archiveBucketCreate:
      properties:
        name:
          description: A name for the archive bucket. Must be globally unique.
          type: string
        description:
          description: A description for the archive bucket
          type: string
        storageProvider:
          $ref: '#/components/schemas/archiveBucketCreate_storageProvider'
        visibility:
          default: private
          description: Visibility - Set to public to allow all tenants
          enum:
          - public
          - private
          type: string
        isPublic:
          default: false
          description: Public URL - Set to true to allow anonymous access
          type: boolean
        accounts:
          $ref: '#/components/schemas/updateBlueprintPermissions_request_resourcePermission_sites_inner'
      type: object
    archiveBucketFile:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        archiveBucket:
          name: name
          isPublic: true
          id: 5
        createdBy:
          username: username
        filePath: filePath
        name: name
        rawSize: 2
        id: 5
        contentType: contentType
        isDirectory: true
        downloadCount: 7
        status: status
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        filePath:
          type: string
        archiveBucket:
          $ref: '#/components/schemas/archiveBucketFile_archiveBucket'
        createdBy:
          $ref: '#/components/schemas/archiveBucketFile_createdBy'
        isDirectory:
          type: boolean
        status:
          type: string
        rawSize:
          format: int64
          type: integer
        contentType:
          nullable: true
          type: string
        downloadCount:
          format: int64
          type: integer
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
      type: object
    archiveBucketUpdate:
      properties:
        name:
          description: A name for the archive bucket. Must be globally unique.
          type: string
        description:
          description: A description for the archive bucket
          type: string
        visibility:
          default: private
          description: Visibility - Set to public to allow all tenants
          enum:
          - public
          - private
          type: string
        isPublic:
          default: false
          description: Public URL - Set to true to allow anonymous access
          type: boolean
        accounts:
          $ref: '#/components/schemas/updateBlueprintPermissions_request_resourcePermission_sites_inner'
      type: object
    archiveFileLinks:
      properties:
        id:
          format: int64
          type: integer
        secretAccessKey:
          type: string
        archiveFile:
          $ref: '#/components/schemas/archiveFileLinks_archiveFile'
        createdBy:
          $ref: '#/components/schemas/archiveBucketFile_createdBy'
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
        lastAccessDate:
          format: date-time
          nullable: true
          type: string
        expirationDate:
          format: date-time
          nullable: true
          type: string
        downloadCount:
          format: int64
          type: integer
      type: object
    executeSchedule:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        description:
          nullable: true
          type: string
        visibility:
          nullable: true
          type: string
        enabled:
          type: boolean
        scheduleType:
          type: string
        scheduleTimezone:
          nullable: true
          type: string
        cron:
          type: string
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
      type: object
    executionRequest:
      example:
        resourceId: resourceId
        stdOut: stdOut
        errorMessage: errorMessage
        rawData: rawData
        stdErr: stdErr
        serverId: serverId
        expiresAt: 2000-01-23T04:56:07.000+00:00
        statusMessage: statusMessage
        instanceId: 6
        appId: appId
        exitCode: 1
        id: 0
        containerId: containerId
        config: "{}"
        uniqueId: uniqueId
        createdById: 5
        status: status
      properties:
        id:
          format: int64
          type: integer
        uniqueId:
          type: string
        containerId:
          nullable: true
          type: string
        serverId:
          nullable: true
          type: string
        instanceId:
          format: int64
          type: integer
        resourceId:
          nullable: true
          type: string
        appId:
          nullable: true
          type: string
        stdOut:
          type: string
        stdErr:
          type: string
        exitCode:
          format: int64
          type: integer
        status:
          type: string
        expiresAt:
          format: date-time
          type: string
        createdById:
          format: int64
          type: integer
        statusMessage:
          nullable: true
          type: string
        errorMessage:
          nullable: true
          type: string
        config:
          type: object
        rawData:
          nullable: true
          type: string
      type: object
    backupSettings:
      example:
        createBackups: true
        backupAppliance: true
        backupsEnabled: true
        defaultSchedule:
          code: code
          name: name
          id: 0
        retentionCount: 6
        defaultStorageBucket:
          name: name
          id: 0
      properties:
        backupsEnabled:
          type: boolean
        createBackups:
          type: boolean
        backupAppliance:
          type: boolean
        defaultStorageBucket:
          $ref: '#/components/schemas/applianceSettings_enabledZoneTypes_inner'
        defaultSchedule:
          $ref: '#/components/schemas/backupSettings_defaultSchedule'
        retentionCount:
          format: int64
          type: integer
      type: object
    backupSettingsUpdate:
      properties:
        backupsEnabled:
          description: Use this to enable / disable scheduled backups
          type: boolean
        retentionCount:
          description: Maximum number of successful backups to retain
          format: int64
          type: integer
        createBackups:
          description: Use this to enable / disable create backups
          type: boolean
        backupAppliance:
          description: "When enabled, a Backup will be created to backup the Morpheus\
            \ appliance database"
          type: boolean
        updateExisting:
          description: Use this to update existing backups with new settings
          type: boolean
        defaultSchedule:
          $ref: '#/components/schemas/backupSettingsUpdate_defaultSchedule'
        clearDefaultSchedule:
          description: Use this to clear existing default backup schedule
          type: boolean
        defaultStorageBucket:
          $ref: '#/components/schemas/backupSettingsUpdate_defaultStorageBucket'
        clearDefaultStorageBucket:
          description: Use this to clear default store bucket
          type: boolean
      type: object
    billing:
      properties:
        accountId:
          format: int64
          type: integer
        accountUUID:
          type: string
        name:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        priceUnit:
          type: string
        price:
          type: number
        cost:
          type: number
        zones:
          items:
            $ref: '#/components/schemas/billing_zones_inner'
          type: array
      type: object
    billingInstances:
      properties:
        price:
          type: number
        cost:
          type: number
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        instances:
          items:
            $ref: '#/components/schemas/billingInstances_instances_inner'
          type: array
      type: object
    billingInstance:
      properties:
        instanceId:
          format: int64
          nullable: true
          type: integer
        instanceUUID:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        name:
          type: string
        price:
          type: number
        cost:
          type: number
        currency:
          type: string
        containers:
          items:
            $ref: '#/components/schemas/billingInstance_containers_inner'
          type: array
      type: object
    billingServers:
      properties:
        price:
          type: number
        cost:
          type: number
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        servers:
          items:
            $ref: '#/components/schemas/billingServers_servers_inner'
          type: array
      type: object
    billingServer:
      properties:
        refType:
          type: string
        refUUID:
          type: string
        refId:
          nullable: true
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        cost:
          type: number
        price:
          type: number
        numUnits:
          type: number
        unit:
          type: string
        currency:
          type: string
        usages:
          items:
            $ref: '#/components/schemas/billingServer_usages_inner'
          type: array
        numUsages:
          format: int64
          type: integer
        totalUsages:
          format: int64
          type: integer
        hasMoreUsages:
          type: boolean
        foundPricing:
          type: boolean
        name:
          type: string
        serverUUID:
          type: string
        serverUniqueId:
          nullable: true
          type: string
        serverExternalId:
          type: string
        serverInternalId:
          nullable: true
          type: string
        resourcePoolId:
          format: int64
          type: integer
        resourcePoolName:
          type: string
      type: object
    billingZones:
      properties:
        price:
          type: number
        cost:
          type: number
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        zones:
          items:
            $ref: '#/components/schemas/billing_zones_inner'
          type: array
      type: object
    billingZone:
      properties:
        zoneName:
          type: string
        zoneId:
          format: int64
          type: integer
        zoneUUID:
          type: string
        zoneCode:
          nullable: true
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        priceUnit:
          type: string
        computeServers:
          $ref: '#/components/schemas/billing_zones_inner_computeServers'
        instances:
          $ref: '#/components/schemas/billing_zones_inner_instances'
        discoveredServers:
          $ref: '#/components/schemas/billing_zones_inner_computeServers'
        loadBalancers:
          $ref: '#/components/schemas/billing_zones_inner_loadBalancers'
        virtualImages:
          $ref: '#/components/schemas/billing_zones_inner_virtualImages'
        snapshots:
          $ref: '#/components/schemas/billing_zones_inner_snapshots'
        price:
          type: number
        cost:
          type: number
      type: object
    blueprint:
      example:
        owner:
          id: 1
          username: username
        visibility: visibility
        name: name
        description: description
        id: 0
        type: type
        category: category
        config: "{}"
        resourcePermission: "{}"
        tenant:
          name: name
          id: 0
        labels:
        - labels
        - labels
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        labels:
          items:
            type: string
          type: array
        type:
          type: string
        description:
          nullable: true
          type: string
        category:
          nullable: true
          type: string
        config:
          type: object
        visibility:
          type: string
        resourcePermission:
          nullable: true
          type: object
        owner:
          $ref: '#/components/schemas/activity_activity_inner_user'
        tenant:
          $ref: '#/components/schemas/applianceSettings_enabledZoneTypes_inner'
      type: object
    blueprintARMCreate:
      properties:
        name:
          description: A name for the blueprint
          type: string
        image:
          description: Path to display image. Defaults to an internal Morpheus image.
          type: string
        type:
          description: Blueprint Type
          enum:
          - arm
          - cloudFormation
          - helm
          - kubernetes
          - morpheus
          - terraform
          type: string
        labels:
          description: "Array of label strings, can be used for filtering."
          items:
            type: string
          nullable: true
          type: array
        arm:
          $ref: '#/components/schemas/blueprintARMCreate_arm'
      required:
      - arm
      - name
      - type
      type: object
    blueprintCFTCreate:
      properties:
        name:
          description: A name for the blueprint
          type: string
        type:
          description: Blueprint Type
          enum:
          - cloudFormation
          type: string
        labels:
          description: "Array of label strings, can be used for filtering."
          items:
            type: string
          nullable: true
          type: array
        cloudFormation:
          $ref: '#/components/schemas/blueprintCFTCreate_cloudFormation'
      required:
      - cloudFormation
      - name
      - type
      type: object
    blueprintHelmCreate:
      properties:
        name:
          description: A name for the blueprint
          type: string
        image:
          description: Path to display image. Defaults to an internal Morpheus image.
          type: string
        type:
          description: Blueprint Type
          enum:
          - helm
          type: string
        labels:
          description: "Array of label strings, can be used for filtering."
          items:
            type: string
          nullable: true
          type: array
        helm:
          $ref: '#/components/schemas/blueprintHelmCreate_helm'
      required:
      - helm
      - name
      - type
      type: object
    blueprintKubernetesCreate:
      properties:
        name:
          description: A name for the blueprint
          type: string
        image:
          description: Path to display image. Defaults to an internal Morpheus image.
          type: string
        type:
          description: Blueprint Type
          enum:
          - kubernetes
          type: string
        labels:
          description: "Array of label strings, can be used for filtering."
          items:
            type: string
          nullable: true
          type: array
        kubernetes:
          $ref: '#/components/schemas/blueprintKubernetesCreate_kubernetes'
        config:
          $ref: '#/components/schemas/blueprintKubernetesCreate_config'
      required:
      - kubernetes
      - name
      - type
      type: object
    blueprintMorpheusCreate:
      properties:
        name:
          description: A name for the blueprint
          type: string
        type:
          description: Blueprint Type
          enum:
          - morpheus
          type: string
        labels:
          description: "Array of label strings, can be used for filtering."
          items:
            type: string
          nullable: true
          type: array
        tiers:
          description: Tier definitions - Create in UI to view a baseline for object
          type: object
      required:
      - name
      - tiers
      - type
      type: object
    blueprintTerraformCreate:
      properties:
        name:
          description: A name for the blueprint
          type: string
        image:
          description: Path to display image. Defaults to an internal Morpheus image.
          type: string
        type:
          description: Blueprint Type
          enum:
          - terraform
          type: string
        labels:
          description: "Array of label strings, can be used for filtering."
          items:
            type: string
          nullable: true
          type: array
        terraform:
          $ref: '#/components/schemas/blueprintTerraformCreate_terraform'
        config:
          $ref: '#/components/schemas/blueprintTerraformCreate_config'
      required:
      - name
      - terraform
      - type
      type: object
    blueprintCreateSuccess:
      properties:
        id:
          description: Blueprint ID
          format: int64
          type: integer
        name:
          description: A name for the blueprint
          type: string
        description:
          description: A description for the blueprint
          example: Basic Template Description
          nullable: true
          type: string
        labels:
          items:
            type: string
          type: array
        category:
          description: Category
          example: "web, utility, app"
          nullable: true
          type: string
        config:
          $ref: '#/components/schemas/blueprintCreateSuccess_config'
      type: object
    budgets:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        description:
          nullable: true
          type: string
        account:
          $ref: '#/components/schemas/applianceSettings_enabledZoneTypes_inner'
        enabled:
          type: boolean
        refScope:
          type: string
        refType:
          type: string
        refId:
          format: int64
          type: integer
        refName:
          type: string
        period:
          type: string
        year:
          type: string
        resourceType:
          type: string
        timezone:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        interval:
          type: string
        costs:
          items:
            format: int64
            type: integer
          type: array
        isFiscal:
          type: boolean
        averageCost:
          format: int64
          type: integer
        totalCost:
          format: int64
          type: integer
        currency:
          type: string
        rollover:
          type: boolean
        warningLimit:
          nullable: true
          type: string
        overLimit:
          nullable: true
          type: string
        externalId:
          nullable: true
          type: string
        internalId:
          nullable: true
          type: string
        createdById:
          format: int64
          type: integer
        createdByName:
          type: string
        updatedById:
          nullable: true
          type: string
        updatedByName:
          nullable: true
          type: string
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
      type: object
    budget:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        description:
          nullable: true
          type: string
        account:
          $ref: '#/components/schemas/applianceSettings_enabledZoneTypes_inner'
        enabled:
          type: boolean
        refScope:
          type: string
        refType:
          type: string
        refId:
          format: int64
          type: integer
        refName:
          type: string
        period:
          type: string
        year:
          type: string
        resourceType:
          type: string
        timezone:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        interval:
          type: string
        costs:
          items:
            format: int64
            type: integer
          type: array
        isFiscal:
          type: boolean
        averageCost:
          format: int64
          type: integer
        totalCost:
          format: int64
          type: integer
        currency:
          type: string
        rollover:
          type: boolean
        warningLimit:
          nullable: true
          type: string
        overLimit:
          nullable: true
          type: string
        externalId:
          nullable: true
          type: string
        internalId:
          nullable: true
          type: string
        createdById:
          format: int64
          type: integer
        createdByName:
          type: string
        updatedById:
          nullable: true
          type: string
        updatedByName:
          nullable: true
          type: string
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
        stats:
          $ref: '#/components/schemas/budget_stats'
      type: object
    catalogItemType:
      example:
        featured: true
        code: code
        imagePath: imagePath
        description: description
        allowQuantity: true
        type: type
        optionTypes:
        - "{}"
        - "{}"
        enabled: true
        content: content
        appSpec: appSpec
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        id: 0
        owner:
          name: name
          id: 0
        layoutCode: layoutCode
        visibility: visibility
        workflow:
          name: name
          id: 6
        darkImagePath: darkImagePath
        labels:
        - labels
        - labels
        blueprint: "{}"
        createdBy: createdBy
        name: name
        category: category
        iconPath: iconPath
        config: "{}"
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        code:
          description: Useful shortcode for provisioning naming schemes and export
            reference.
          nullable: true
          type: string
        category:
          description: Catalog Item Type category
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        labels:
          items:
            type: string
          type: array
        type:
          type: string
        enabled:
          type: boolean
        featured:
          type: boolean
        allowQuantity:
          description: Can users order more than one of this item at a time.
          type: boolean
        iconPath:
          type: string
        imagePath:
          type: string
        darkImagePath:
          type: string
        visibility:
          type: string
        layoutCode:
          nullable: true
          type: string
        blueprint:
          nullable: true
          type: object
        appSpec:
          nullable: true
          type: string
        config:
          nullable: true
          type: object
        workflow:
          $ref: '#/components/schemas/checkGroup_instance'
        content:
          nullable: true
          type: string
        optionTypes:
          items:
            $ref: ./components/schemas/optionType.yaml
          type: array
        createdBy:
          nullable: true
          type: string
        owner:
          $ref: '#/components/schemas/applianceSettings_enabledZoneTypes_inner'
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
      type: object
    catalogItemTypeInstanceCreate:
      properties:
        name:
          description: Catalog Item Type name
          type: string
        code:
          description: Useful shortcode for provisioning naming schemes and export
            reference.
          nullable: true
          type: string
        category:
          description: Catalog Item Type category
          nullable: true
          type: string
        description:
          description: Catalog Item Type description
          type: string
        labels:
          description: "Array of label strings, can be used for filtering."
          items:
            type: string
          nullable: true
          type: array
        type:
          description: "Type, `instance`, `blueprint` or `workflow`. This determines\
            \ whether an Instance or App will be provisioned. Instance types require\
            \ a config and blueprint requires a blueprint and appSpec, while workflow\
            \ types requires a workflow and context."
          enum:
          - instance
          - blueprint
          - workflow
          type: string
        visibility:
          default: private
          description: Visibility - Set to public to allow all tenants
          type: string
        layoutCode:
          description: Identifier primarily used for Plugin Catalog Item Types
          nullable: true
          type: string
        iconPath:
          description: "Icon Path, relative location of an icon image, eg. /assets/containers-png/nginx.png."
          type: string
        enabled:
          default: true
          description: Can be used to enable / disable the catalog item type.
          type: boolean
        featured:
          default: false
          description: Can be used to feature the catalog item type.
          type: boolean
        allowQuantity:
          default: false
          description: Can users order more than one of this item at a time.
          type: boolean
        config:
          $ref: ./components/schemas/catalogItemTypeInstanceScribe.yaml
        optionTypes:
          description: Array of option type IDs. Only applies to type instance and
            blueprint.
          items:
            format: int64
            type: integer
          type: array
        content:
          description: Documentation content for this Catalog Item. Markdown-formatted
            text is accepted and displayed appropriately when the item is ordered
            from the Service Catalog. A new Catalog Item-type Wiki entry will also
            be added containing this information.
          type: string
      required:
      - config
      type: object
    catalogItemTypeBlueprintCreate:
      properties:
        name:
          description: Catalog Item Type name
          type: string
        code:
          description: Useful shortcode for provisioning naming schemes and export
            reference.
          nullable: true
          type: string
        category:
          description: Catalog Item Type category
          nullable: true
          type: string
        description:
          description: Catalog Item Type description
          type: string
        labels:
          description: "Array of label strings, can be used for filtering."
          items:
            type: string
          nullable: true
          type: array
        type:
          description: "Type, `instance`, `blueprint` or `workflow`. This determines\
            \ whether an Instance or App will be provisioned. Instance types require\
            \ a config and blueprint requires a blueprint and appSpec, while workflow\
            \ types requires a workflow and context."
          enum:
          - blueprint
          type: string
        visibility:
          default: private
          description: Visibility - Set to public to allow all tenants
          type: string
        layoutCode:
          description: Identifier primarily used for Plugin Catalog Item Types
          nullable: true
          type: string
        iconPath:
          description: "Icon Path, relative location of an icon image, eg. /assets/containers-png/nginx.png."
          type: string
        allowQuantity:
          description: Can users order more than one of this item at a time.
          type: boolean
        blueprint:
          $ref: '#/components/schemas/catalogItemTypeBlueprintCreate_blueprint'
        appSpec:
          description: The appSpec for blueprint type catalog items is a string in
            the Scribe YAML format with fields
          type: string
        optionTypes:
          description: "Array of option type IDs, see Inputs. Only applies to type\
            \ instance and blueprint."
          items:
            format: int64
            type: integer
          type: array
      required:
      - blueprint
      type: object
    catalogItemTypeWorkflowCreate:
      properties:
        name:
          description: Catalog Item Type name
          type: string
        code:
          description: Useful shortcode for provisioning naming schemes and export
            reference.
          nullable: true
          type: string
        category:
          description: Catalog Item Type category
          nullable: true
          type: string
        description:
          description: Catalog Item Type description
          type: string
        labels:
          description: "Array of label strings, can be used for filtering."
          items:
            type: string
          nullable: true
          type: array
        type:
          description: "Type, `instance`, `blueprint` or `workflow`. This determines\
            \ whether an Instance or App will be provisioned. Instance types require\
            \ a config and blueprint requires a blueprint and appSpec, while workflow\
            \ types requires a workflow and context."
          enum:
          - workflow
          type: string
        visibility:
          default: private
          description: Visibility - Set to public to allow all tenants
          type: string
        layoutCode:
          description: Identifier primarily used for Plugin Catalog Item Types
          nullable: true
          type: string
        iconPath:
          description: "Icon Path, relative location of an icon image, eg. /assets/containers-png/nginx.png."
          type: string
        enabled:
          default: true
          description: Can be used to enable / disable the catalog item type.
          type: boolean
        featured:
          default: false
          description: Can be used to feature the catalog item type.
          type: boolean
        allowQuantity:
          default: false
          description: Can users order more than one of this item at a time.
          type: boolean
        workflow:
          $ref: '#/components/schemas/updateBlueprintPermissions_request_resourcePermission_sites_inner'
        context:
          description: "Context for running the workflow, determines if a target resource\
            \ must be selected."
          enum:
          - instance
          - server
          - appliance
          type: string
        workflowConfig:
          description: Configuration object that contains settings for the workflow.
          type: string
      required:
      - workflow
      type: object
    catalogItemTypeInstanceUpdate:
      properties:
        name:
          description: Catalog Item Type name
          type: string
        code:
          description: Useful shortcode for provisioning naming schemes and export
            reference.
          nullable: true
          type: string
        category:
          description: Catalog Item Type category
          nullable: true
          type: string
        description:
          description: Catalog Item Type description
          type: string
        labels:
          description: "Array of label strings, can be used for filtering."
          items:
            type: string
          nullable: true
          type: array
        type:
          description: "Type, `instance`, `blueprint` or `workflow`. This determines\
            \ whether an Instance or App will be provisioned. Instance types require\
            \ a config and blueprint requires a blueprint and appSpec, while workflow\
            \ types requires a workflow and context."
          enum:
          - instance
          - blueprint
          - workflow
          type: string
        visibility:
          default: private
          description: Visibility - Set to public to allow all tenants
          type: string
        layoutCode:
          description: Identifier primarily used for Plugin Catalog Item Types
          nullable: true
          type: string
        iconPath:
          description: "Icon Path, relative location of an icon image, eg. /assets/containers-png/nginx.png."
          type: string
        enabled:
          default: true
          description: Can be used to enable / disable the catalog item type.
          type: boolean
        featured:
          default: false
          description: Can be used to feature the catalog item type.
          type: boolean
        allowQuantity:
          default: false
          description: Can users order more than one of this item at a time.
          type: boolean
        config:
          $ref: ./components/schemas/catalogItemTypeInstanceScribe.yaml
        optionTypes:
          description: Array of option type IDs. Only applies to type instance and
            blueprint.
          items:
            format: int64
            type: integer
          type: array
      type: object
    catalogItemTypeBlueprintUpdate:
      properties:
        name:
          description: Catalog Item Type name
          type: string
        code:
          description: Useful shortcode for provisioning naming schemes and export
            reference.
          nullable: true
          type: string
        category:
          description: Catalog Item Type category
          nullable: true
          type: string
        description:
          description: Catalog Item Type description
          type: string
        labels:
          description: "Array of label strings, can be used for filtering."
          items:
            type: string
          nullable: true
          type: array
        type:
          description: "Type, `instance`, `blueprint` or `workflow`. This determines\
            \ whether an Instance or App will be provisioned. Instance types require\
            \ a config and blueprint requires a blueprint and appSpec, while workflow\
            \ types requires a workflow and context."
          enum:
          - blueprint
          type: string
        visibility:
          default: private
          description: Visibility - Set to public to allow all tenants
          type: string
        layoutCode:
          description: Identifier primarily used for Plugin Catalog Item Types
          nullable: true
          type: string
        iconPath:
          description: "Icon Path, relative location of an icon image, eg. /assets/containers-png/nginx.png."
          type: string
        enabled:
          default: true
          description: Can be used to enable / disable the catalog item type.
          type: boolean
        featured:
          default: false
          description: Can be used to feature the catalog item type.
          type: boolean
        allowQuantity:
          default: false
          description: Can users order more than one of this item at a time.
          type: boolean
        blueprint:
          $ref: '#/components/schemas/catalogItemTypeBlueprintCreate_blueprint'
        appSpec:
          description: The appSpec for blueprint type catalog items is a string in
            the Scribe YAML format with fields
          type: string
        optionTypes:
          description: "Array of option type IDs, see Inputs. Only applies to type\
            \ instance and blueprint."
          items:
            format: int64
            type: integer
          type: array
      type: object
    catalogItemTypeWorkflowUpdate:
      properties:
        name:
          description: Catalog Item Type name
          type: string
        code:
          description: Useful shortcode for provisioning naming schemes and export
            reference.
          nullable: true
          type: string
        category:
          description: Catalog Item Type category
          nullable: true
          type: string
        description:
          description: Catalog Item Type description
          type: string
        labels:
          description: "Array of label strings, can be used for filtering."
          items:
            type: string
          nullable: true
          type: array
        type:
          description: "Type, `instance`, `blueprint` or `workflow`. This determines\
            \ whether an Instance or App will be provisioned. Instance types require\
            \ a config and blueprint requires a blueprint and appSpec, while workflow\
            \ types requires a workflow and context."
          enum:
          - workflow
          type: string
        visibility:
          default: private
          description: Visibility - Set to public to allow all tenants
          type: string
        layoutCode:
          description: Identifier primarily used for Plugin Catalog Item Types
          nullable: true
          type: string
        iconPath:
          description: "Icon Path, relative location of an icon image, eg. /assets/containers-png/nginx.png."
          type: string
        enabled:
          default: true
          description: Can be used to enable / disable the catalog item type.
          type: boolean
        featured:
          default: false
          description: Can be used to feature the catalog item type.
          type: boolean
        allowQuantity:
          default: false
          description: Can users order more than one of this item at a time.
          type: boolean
        workflow:
          $ref: '#/components/schemas/updateBlueprintPermissions_request_resourcePermission_sites_inner'
        context:
          type: string
        workflowConfig:
          description: Configuration object that contains settings for the workflow.
          type: string
      type: object
    client:
      properties:
        id:
          format: int64
          type: integer
        clientId:
          type: string
        accessTokenValiditySeconds:
          format: int64
          type: integer
        refreshTokenValiditySeconds:
          format: int64
          type: integer
        authorities:
          items:
            type: string
          type: array
        authorizedGrantTypes:
          items:
            type: string
          type: array
        scopes:
          items:
            type: string
          type: array
      type: object
    clientUpdate:
      properties:
        clientId:
          type: string
        accessTokenValiditySeconds:
          format: int64
          type: integer
        refreshTokenValiditySeconds:
          format: int64
          type: integer
      type: object
    listActivity_200_response:
      allOf:
      - properties:
          activity:
            items:
              $ref: '#/components/schemas/activity'
            type: array
        type: object
      - $ref: '#/components/schemas/meta'
    listAlerts_200_response:
      allOf:
      - properties:
          alerts:
            items:
              $ref: '#/components/schemas/alert'
            type: array
        type: object
      - $ref: '#/components/schemas/meta'
    addAlerts_request_alert_contacts_inner:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        method:
          type: string
        notify:
          type: boolean
        close:
          type: boolean
      type: object
    addAlerts_request_alert:
      description: Payload for creating a new monitoring alert
      properties:
        name:
          description: Unique name scoped to your account for the alert
          example: My Alert
          type: string
        minDuration:
          default: 0
          description: Duration in minutes of the delay before sending notification(s)
          type: integer
        minSeverity:
          default: critical
          description: Severity level threshold for sending notifications.
          enum:
          - info
          - warning
          - critical
          type: string
        active:
          default: true
          description: Set to false to disable notifications
          type: boolean
        allChecks:
          default: false
          description: Trigger for all checks
          type: boolean
        allGroups:
          default: false
          description: Trigger for all check groups
          type: boolean
        allApps:
          default: false
          description: Trigger for all monitor apps
          type: boolean
        checks:
          items:
            type: integer
          type: array
        groups:
          items:
            type: integer
          type: array
        apps:
          items:
            type: integer
          type: array
        contacts:
          items:
            $ref: '#/components/schemas/addAlerts_request_alert_contacts_inner'
          type: array
      required:
      - name
      type: object
    addAlerts_request:
      properties:
        alert:
          $ref: '#/components/schemas/addAlerts_request_alert'
      required:
      - alert
      type: object
    addAlerts_200_response:
      allOf:
      - properties:
          alert:
            $ref: '#/components/schemas/alert'
        type: object
      - $ref: '#/components/schemas/200-success'
    getAlerts_200_response:
      allOf:
      - properties:
          alert:
            $ref: '#/components/schemas/alert'
        type: object
      - properties:
          checks:
            items:
              $ref: '#/components/schemas/check'
            type: array
        type: object
      - properties:
          checkGroups:
            items:
              $ref: '#/components/schemas/checkGroup'
            type: array
        type: object
      - properties:
          apps:
            items:
              $ref: '#/components/schemas/checkApp'
            type: array
        type: object
    updateAlerts_request_alert:
      description: Payload for creating a new monitoring alert
      properties:
        name:
          description: Unique name scoped to your account for the alert
          example: My Alert
          type: string
        minDuration:
          default: 0
          description: Duration in minutes of the delay before sending notification(s)
          type: integer
        minSeverity:
          default: critical
          description: Severity level threshold for sending notifications.
          enum:
          - info
          - warning
          - critical
          type: string
        active:
          default: true
          description: Set to false to disable notifications
          type: boolean
        allChecks:
          default: false
          description: Trigger for all checks
          type: boolean
        allGroups:
          default: false
          description: Trigger for all check groups
          type: boolean
        allApps:
          default: false
          description: Trigger for all monitor apps
          type: boolean
        checks:
          items:
            type: integer
          type: array
        groups:
          items:
            type: integer
          type: array
        apps:
          items:
            type: integer
          type: array
        contacts:
          items:
            $ref: '#/components/schemas/addAlerts_request_alert_contacts_inner'
          type: array
      type: object
    updateAlerts_request:
      properties:
        alert:
          $ref: '#/components/schemas/updateAlerts_request_alert'
      required:
      - alert
      type: object
    updateAlerts_200_response:
      allOf:
      - $ref: '#/components/schemas/200-success'
      - properties:
          alert:
            $ref: '#/components/schemas/alert'
        type: object
    listApplianceSettings_200_response:
      example:
        applianceSettings:
          registrationEnabled: true
          internalApplianceUrl: internalApplianceUrl
          disableAfterAttempts: disableAfterAttempts
          warnUserDaysBefore: warnUserDaysBefore
          smtpTLS: true
          smtpPort: smtpPort
          currencyProvider: currencyProvider
          expirePwdDays: expirePwdDays
          applianceUrl: applianceUrl
          proxyPort: proxyPort
          proxyWorkstation: proxyWorkstation
          disableAfterDaysInactive: disableAfterDaysInactive
          smtpSSL: true
          smtpPassword: smtpPassword
          defaultRoleId: defaultRoleId
          enabledZoneTypes:
          - name: name
            id: 0
          - name: name
            id: 0
          smtpPasswordHash: smtpPasswordHash
          proxyPassword: proxyPassword
          corsAllowed: corsAllowed
          smtpMailFrom: smtpMailFrom
          proxyHost: proxyHost
          smtpUser: smtpUser
          smtpServer: smtpServer
          proxyDomain: proxyDomain
          defaultUserRoleId: defaultUserRoleId
          statsRetainmentPeriod: 6
          proxyPasswordHash: proxyPasswordHash
          proxyUser: proxyUser
          currencyKey: currencyKey
          dockerPrivilegedMode: true
      properties:
        applianceSettings:
          $ref: '#/components/schemas/applianceSettings'
      type: object
    updateApplianceSettings_request:
      properties:
        applianceSettings:
          $ref: '#/components/schemas/applianceSettingsUpdate'
      type: object
    listApprovals_200_response:
      allOf:
      - properties:
          approvals:
            items:
              $ref: '#/components/schemas/approvals'
            type: array
        type: object
      - $ref: '#/components/schemas/meta'
    getApprovals_200_response:
      example:
        approval:
          approver:
            name: name
            id: 0
          requestType: requestType
          accountIntegration: accountIntegration
          approvalItems:
          - dateDenied: 2000-01-23T04:56:07.000+00:00
            deniedBy: deniedBy
            approval:
              id: 6
            approvedBy: approvedBy
            errorMessage: errorMessage
            externalId: externalId
            reference:
              displayName: displayName
              name: name
              id: 1
              type: type
            internalId: internalId
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            dateCreated: 2000-01-23T04:56:07.000+00:00
            dateApproved: 2000-01-23T04:56:07.000+00:00
            externalName: externalName
            name: name
            id: 0
            status: status
          - dateDenied: 2000-01-23T04:56:07.000+00:00
            deniedBy: deniedBy
            approval:
              id: 6
            approvedBy: approvedBy
            errorMessage: errorMessage
            externalId: externalId
            reference:
              displayName: displayName
              name: name
              id: 1
              type: type
            internalId: internalId
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            dateCreated: 2000-01-23T04:56:07.000+00:00
            dateApproved: 2000-01-23T04:56:07.000+00:00
            externalName: externalName
            name: name
            id: 0
            status: status
          errorMessage: errorMessage
          externalId: externalId
          internalId: internalId
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          externalName: externalName
          name: name
          requestBy: requestBy
          id: 0
          account:
            name: name
            id: 0
          status: status
      properties:
        approval:
          $ref: '#/components/schemas/approval'
      type: object
    listApps_200_response:
      allOf:
      - properties:
          apps:
            items:
              $ref: '#/components/schemas/app'
            type: array
        type: object
      - $ref: '#/components/schemas/appStats'
      - $ref: '#/components/schemas/meta'
    addApps_200_response:
      example:
        app:
          owner:
            id: 1
            username: username
          instances:
          - name: name
            id: 0
          - name: name
            id: 0
          description: description
          appTiers:
          - "{}"
          - "{}"
          type: type
          appStatus: appStatus
          labels:
          - labels
          - labels
          blueprint:
            name: name
            id: 5
            type: type
          accountId: 6
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          environment: environment
          dateCreated: 2000-01-23T04:56:07.000+00:00
          removalDate: 2000-01-23T04:56:07.000+00:00
          instanceCount: 2
          name: name
          siteId: 5
          appContext: appContext
          id: 0
          containerCount: 7
          account:
            name: name
            id: 0
          group:
            name: name
            id: 0
          status: status
      properties:
        app:
          $ref: '#/components/schemas/appCreateResponse'
      type: object
    getApp_200_response:
      example:
        app:
          owner:
            id: 1
            username: username
          instances:
          - name: name
            id: 0
          - name: name
            id: 0
          description: description
          appTiers:
          - "{}"
          - "{}"
          type: type
          appStatus: appStatus
          labels:
          - labels
          - labels
          blueprint:
            name: name
            id: 5
            type: type
          accountId: 6
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          environment: environment
          dateCreated: 2000-01-23T04:56:07.000+00:00
          removalDate: 2000-01-23T04:56:07.000+00:00
          stats:
            running: 2
            cpuUsage: 7.386281948385884
            usedMemory: 2
            total: 4
            instanceCount: 1
            instanceDayCount:
            - 1
            - 1
            instanceDayCountTotal: 1
            maxMemory: 7
            maxStorage: 3
            usedStorage: 9
          instanceCount: 5
          name: name
          siteId: 1
          appContext: appContext
          id: 0
          containerCount: 5
          account:
            name: name
            id: 0
          group:
            name: name
            id: 0
          status: status
      properties:
        app:
          $ref: '#/components/schemas/app'
      type: object
    addAppInstance_request:
      properties:
        instanceId:
          description: The ID of the instance being added
          format: int64
          type: integer
        tierName:
          description: The Name of the Tier
          type: string
      required:
      - instanceId
      - tierName
      type: object
    applyAppState_request:
      properties:
        templateParameter:
          description: Template Parameter object. A map of key-value pairs that correspond
            to the template variables i.e. tfvars
          type: object
      type: object
    prepareAppApply_200_response:
      allOf:
      - $ref: '#/components/schemas/appPrepareApply'
      - $ref: '#/components/schemas/200-success'
    removeAppInstance_request:
      properties:
        instanceId:
          description: The ID of the instance being removed
          format: int64
          type: integer
      required:
      - instanceId
      type: object
    getAppSecurityGroups_200_response:
      allOf:
      - properties:
          securityGroups:
            items:
              $ref: '#/components/schemas/appSecurityGroups'
            type: array
        type: object
      - properties:
          firewallEnabled:
            type: boolean
        type: object
      - $ref: '#/components/schemas/200-success'
    setAppSecurityGroups_request:
      allOf:
      - properties:
          securityGroupIds:
            items:
              type: integer
            type: array
        type: object
    setAppSecurityGroups_200_response:
      allOf:
      - properties:
          securityGroups:
            items:
              $ref: '#/components/schemas/appSecurityGroups'
            type: array
        type: object
      - $ref: '#/components/schemas/200-success'
    getAppState_200_response:
      allOf:
      - $ref: '#/components/schemas/appState'
      - $ref: '#/components/schemas/200-success'
    validateAppState_200_response:
      allOf:
      - properties:
          executionId:
            type: string
        type: object
      - $ref: '#/components/schemas/200-success'
    listArchiveBuckets_200_response:
      allOf:
      - properties:
          archiveBuckets:
            items:
              $ref: '#/components/schemas/archiveBucket'
            type: array
          archiveBucketCount:
            format: int64
            type: integer
        type: object
      - $ref: '#/components/schemas/meta'
    addArchiveBucket_request:
      properties:
        archiveBucket:
          $ref: '#/components/schemas/archiveBucketCreate'
      type: object
    addArchiveBucket_200_response:
      allOf:
      - properties:
          archiveBucket:
            $ref: '#/components/schemas/archiveBucket'
        type: object
      - $ref: '#/components/schemas/200-success'
    getArchiveBucket_200_response:
      example:
        archiveBucket:
          owner:
            name: name
            id: 0
          storageProvider:
            name: name
            id: 0
          code: code
          visibility: visibility
          filePath: filePath
          description: description
          rawSize: 6
          fileCount: 1
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          createdBy:
            username: username
          name: name
          isPublic: true
          id: 0
          accounts:
          - "{}"
          - "{}"
        isOwner: true
        parentDirectory: parentDirectory
        archiveFileCount: 9
        archiveFiles:
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          archiveBucket:
            name: name
            isPublic: true
            id: 5
          createdBy:
            username: username
          filePath: filePath
          name: name
          rawSize: 2
          id: 5
          contentType: contentType
          isDirectory: true
          downloadCount: 7
          status: status
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          archiveBucket:
            name: name
            isPublic: true
            id: 5
          createdBy:
            username: username
          filePath: filePath
          name: name
          rawSize: 2
          id: 5
          contentType: contentType
          isDirectory: true
          downloadCount: 7
          status: status
      properties:
        archiveBucket:
          $ref: '#/components/schemas/archiveBucket'
        isOwner:
          type: boolean
        parentDirectory:
          nullable: true
          type: string
        archiveFiles:
          items:
            $ref: '#/components/schemas/archiveBucketFile'
          type: array
        archiveFileCount:
          format: int64
          type: integer
      type: object
    updateArchiveBucket_request:
      properties:
        archiveBucket:
          $ref: '#/components/schemas/archiveBucketUpdate'
      type: object
    listArchiveFiles_200_response:
      allOf:
      - properties:
          archiveBucket:
            $ref: '#/components/schemas/archiveBucket'
          isOwner:
            type: boolean
          parentDirectory:
            nullable: true
            type: string
          archiveFiles:
            items:
              $ref: '#/components/schemas/archiveBucketFile'
            type: array
        type: object
      - $ref: '#/components/schemas/meta'
    addArchiveFile_request:
      properties:
        file:
          format: binary
          type: string
      type: object
    addArchiveFile_200_response:
      allOf:
      - properties:
          archiveFile:
            $ref: '#/components/schemas/archiveBucketFile'
        type: object
      - $ref: '#/components/schemas/200-success'
    getArchiveFileDetail_200_response:
      example:
        isOwner: true
        archiveFile:
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          archiveBucket:
            name: name
            isPublic: true
            id: 5
          createdBy:
            username: username
          filePath: filePath
          name: name
          rawSize: 2
          id: 5
          contentType: contentType
          isDirectory: true
          downloadCount: 7
          status: status
      properties:
        archiveFile:
          $ref: '#/components/schemas/archiveBucketFile'
        isOwner:
          type: boolean
      type: object
    getArchiveFileLinks_200_response:
      allOf:
      - properties:
          archiveFileLinks:
            items:
              $ref: '#/components/schemas/archiveFileLinks'
            type: array
        type: object
    addArchiveFileLink_200_response:
      allOf:
      - $ref: '#/components/schemas/200-success'
      - properties:
          secretAccessKey:
            type: string
        type: object
    resetPassword_request:
      properties:
        token:
          description: The secret Reset Password token that was included in the **Forgot
            Password Email**.
          type: string
        password:
          description: User new password. This is the new password for your user.
          format: password
          type: string
      required:
      - password
      - token
      type: object
    resetPassword_200_response:
      example:
        msg: Password has been updated and account unlocked
        success: true
      properties:
        success:
          example: true
          type: boolean
        msg:
          example: Password has been updated and account unlocked
          type: string
      type: object
    forgotPassword_request:
      properties:
        username:
          description: |
            Specified as "username" or "tenantId\username" with proper HTML encoding and used in conjunction with `password`.
          type: string
      required:
      - username
      type: object
    forgotPassword_200_response:
      example:
        msg: "Reset password instructions have been sent to the user 'jsmith', if\
          \ they exist."
        success: true
      properties:
        success:
          example: true
          type: boolean
        msg:
          example: "Reset password instructions have been sent to the user 'jsmith',\
            \ if they exist."
          type: string
      type: object
    listExecuteSchedules_200_response:
      allOf:
      - properties:
          schedules:
            items:
              $ref: '#/components/schemas/executeSchedule'
            type: array
        type: object
      - $ref: '#/components/schemas/meta'
    addExecuteSchedules_request_schedule:
      properties:
        name:
          description: A name for the execute schedule
          example: Sample Execution
          type: string
        description:
          description: A description for the execute schedule
          type: string
        scheduleType:
          description: Type of schedule
          enum:
          - execute
          type: string
        scheduleTimezone:
          default: UTC
          description: "Time Zone eg. America/New_York, Europe/Amsterdam, etc."
          type: string
        cron:
          default: 0 0 * * *
          description: Cron Expression. The default is daily at midnight
          type: string
        enabled:
          default: true
          description: Is enabled
          type: boolean
      required:
      - name
      type: object
    addExecuteSchedules_request:
      properties:
        schedule:
          $ref: '#/components/schemas/addExecuteSchedules_request_schedule'
      required:
      - schedule
      type: object
    addExecuteSchedules_200_response:
      allOf:
      - properties:
          schedule:
            $ref: '#/components/schemas/executeSchedule'
        type: object
      - $ref: '#/components/schemas/200-success'
    getExecuteSchedules_200_response:
      allOf:
      - properties:
          schedule:
            $ref: '#/components/schemas/executeSchedule'
        type: object
    updateExecuteSchedules_request_schedule:
      properties:
        name:
          description: A name for the execute schedule
          example: Sample Execution
          type: string
        description:
          description: A description for the execute schedule
          type: string
        scheduleType:
          description: Type of schedule
          enum:
          - execute
          type: string
        scheduleTimezone:
          default: UTC
          description: "Time Zone eg. America/New_York, Europe/Amsterdam, etc."
          type: string
        cron:
          default: 0 0 * * *
          description: Cron Expression. The default is daily at midnight
          type: string
        enabled:
          default: true
          description: Is enabled
          type: boolean
      type: object
    updateExecuteSchedules_request:
      properties:
        schedule:
          $ref: '#/components/schemas/updateExecuteSchedules_request_schedule'
      required:
      - schedule
      type: object
    executeExecutionRequest_request:
      properties:
        script:
          description: A script or command to be executed
          example: uname -a
          type: string
      required:
      - script
      type: object
    executeExecutionRequest_200_response:
      example:
        executionRequest:
          resourceId: resourceId
          stdOut: stdOut
          errorMessage: errorMessage
          rawData: rawData
          stdErr: stdErr
          serverId: serverId
          expiresAt: 2000-01-23T04:56:07.000+00:00
          statusMessage: statusMessage
          instanceId: 6
          appId: appId
          exitCode: 1
          id: 0
          containerId: containerId
          config: "{}"
          uniqueId: uniqueId
          createdById: 5
          status: status
      properties:
        executionRequest:
          $ref: '#/components/schemas/executionRequest'
      type: object
    getExecutionRequest_200_response:
      allOf:
      - properties:
          executionRequest:
            $ref: '#/components/schemas/executionRequest'
        type: object
    listBackupSettings_200_response:
      example:
        backupSettings:
          createBackups: true
          backupAppliance: true
          backupsEnabled: true
          defaultSchedule:
            code: code
            name: name
            id: 0
          retentionCount: 6
          defaultStorageBucket:
            name: name
            id: 0
      properties:
        backupSettings:
          $ref: '#/components/schemas/backupSettings'
      type: object
    updateBackupSettings_request:
      properties:
        backupSettings:
          $ref: '#/components/schemas/backupSettingsUpdate'
      type: object
    listBillingAccount_200_response:
      allOf:
      - properties:
          billingInfo:
            $ref: '#/components/schemas/billing'
        type: object
      - $ref: '#/components/schemas/200-success'
    listBillingInstances_200_response:
      allOf:
      - properties:
          billingInfo:
            $ref: '#/components/schemas/billingInstances'
        type: object
      - $ref: '#/components/schemas/200-success'
    getBillingInstancesIdentifier_200_response:
      allOf:
      - properties:
          billingInfo:
            $ref: '#/components/schemas/billingInstance'
        type: object
      - $ref: '#/components/schemas/200-success'
    listBillingServers_200_response:
      allOf:
      - properties:
          billingInfo:
            $ref: '#/components/schemas/billingServers'
        type: object
      - $ref: '#/components/schemas/200-success'
    getBillingServersIdentifier_200_response:
      allOf:
      - properties:
          billingInfo:
            $ref: '#/components/schemas/billingServer'
        type: object
      - $ref: '#/components/schemas/200-success'
    listBillingZone_200_response:
      allOf:
      - properties:
          billingInfo:
            $ref: '#/components/schemas/billingZones'
        type: object
      - $ref: '#/components/schemas/200-success'
    getBillingZoneIdentifier_200_response:
      allOf:
      - properties:
          billingInfo:
            $ref: '#/components/schemas/billingZone'
        type: object
      - $ref: '#/components/schemas/200-success'
    listBlueprints_200_response:
      allOf:
      - properties:
          blueprints:
            items:
              $ref: '#/components/schemas/blueprint'
            type: array
        type: object
      - $ref: '#/components/schemas/meta'
    addBlueprint_request:
      oneOf:
      - $ref: '#/components/schemas/blueprintARMCreate'
      - $ref: '#/components/schemas/blueprintCFTCreate'
      - $ref: '#/components/schemas/blueprintHelmCreate'
      - $ref: '#/components/schemas/blueprintKubernetesCreate'
      - $ref: '#/components/schemas/blueprintMorpheusCreate'
      - $ref: '#/components/schemas/blueprintTerraformCreate'
    addBlueprint_200_response:
      allOf:
      - properties:
          blueprint:
            $ref: '#/components/schemas/blueprintCreateSuccess'
        type: object
      - properties:
          msg:
            nullable: true
            type: string
          errors:
            nullable: true
            type: string
          errorCode:
            nullable: true
            type: string
          inProgress:
            type: boolean
        type: object
      - $ref: '#/components/schemas/200-success'
    getBlueprint_200_response:
      example:
        blueprint:
          owner:
            id: 1
            username: username
          visibility: visibility
          name: name
          description: description
          id: 0
          type: type
          category: category
          config: "{}"
          resourcePermission: "{}"
          tenant:
            name: name
            id: 0
          labels:
          - labels
          - labels
      properties:
        blueprint:
          $ref: '#/components/schemas/blueprint'
      type: object
    updateBlueprintImage_request:
      properties:
        templateImage:
          format: binary
          type: string
      type: object
    updateBlueprintPermissions_request_resourcePermission_sites_inner:
      example:
        id: 6
      properties:
        id:
          format: int64
          type: integer
      type: object
    updateBlueprintPermissions_request_resourcePermission:
      properties:
        all:
          description: Set to true to grant access to all groups
          type: boolean
        sites:
          description: Array of objects identifying groups with access
          items:
            $ref: '#/components/schemas/updateBlueprintPermissions_request_resourcePermission_sites_inner'
          type: array
        ownerId:
          description: "User ID, can be used to change blueprint owner."
          format: int64
          type: integer
      type: object
    updateBlueprintPermissions_request:
      properties:
        resourcePermission:
          $ref: '#/components/schemas/updateBlueprintPermissions_request_resourcePermission'
      type: object
    listBudgets_200_response:
      allOf:
      - properties:
          budgets:
            items:
              $ref: '#/components/schemas/budgets'
            type: array
        type: object
      - $ref: '#/components/schemas/meta'
    addBudgets_request_budget:
      properties:
        name:
          type: string
        description:
          type: string
        scope:
          default: account
          enum:
          - account
          - group
          - cloud
          - user
          type: string
        period:
          default: year
          type: string
        year:
          example: 2020
          format: int64
          type: integer
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        interval:
          default: year
          enum:
          - year
          - quarter
          - month
          type: string
        scopeTenantId:
          description: |
            The Tenant ID to scope to, for use with ``scope``=tenant
          format: int64
          type: integer
        scopeGroupId:
          description: "The Tenant ID to scope to, for use with ``scope``=group \n"
          format: int64
          type: integer
        scopeCloudId:
          description: |
            The Tenant ID to scope to, for use with ``scope``=cloud
          format: int64
          type: integer
        scopeUserId:
          description: |
            The Tenant ID to scope to, for use with ``scope``=user
          format: int64
          type: integer
        costs:
          example:
          - 100
          - 100
          - 110
          - 120
          items:
            format: int64
            type: integer
          type: array
        enabled:
          default: true
          type: boolean
      required:
      - name
      type: object
    addBudgets_request:
      properties:
        budget:
          $ref: '#/components/schemas/addBudgets_request_budget'
      required:
      - budget
      type: object
    addBudgets_200_response:
      allOf:
      - properties:
          budget:
            $ref: '#/components/schemas/budgets'
        type: object
      - $ref: '#/components/schemas/200-success'
    getBudgets_200_response:
      allOf:
      - properties:
          budget:
            $ref: '#/components/schemas/budget'
        type: object
      - $ref: '#/components/schemas/200-success'
    listCatalogItemTypes_200_response:
      allOf:
      - properties:
          catalogItemTypes:
            items:
              $ref: '#/components/schemas/catalogItemType'
            type: array
        type: object
      - $ref: '#/components/schemas/meta'
    addCatalogItemType_request_catalogItemType:
      oneOf:
      - $ref: '#/components/schemas/catalogItemTypeInstanceCreate'
      - $ref: '#/components/schemas/catalogItemTypeBlueprintCreate'
      - $ref: '#/components/schemas/catalogItemTypeWorkflowCreate'
    addCatalogItemType_request:
      properties:
        catalogItemType:
          $ref: '#/components/schemas/addCatalogItemType_request_catalogItemType'
      type: object
    addCatalogItemType_request_1:
      properties:
        catalogItemType.logo:
          description: "Logo File png,jpg,svg"
          format: binary
          type: string
        catalogItemType.darkLogo:
          description: "Dark Logo File png,jpg,svg"
          format: binary
          type: string
      type: object
    addCatalogItemType_200_response:
      allOf:
      - properties:
          catalogItemType:
            $ref: '#/components/schemas/updateBlueprintPermissions_request_resourcePermission_sites_inner'
        type: object
      - $ref: '#/components/schemas/200-success'
    getCatalogItemType_200_response:
      example:
        catalogItemType:
          featured: true
          code: code
          imagePath: imagePath
          description: description
          allowQuantity: true
          type: type
          optionTypes:
          - "{}"
          - "{}"
          enabled: true
          content: content
          appSpec: appSpec
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          dateCreated: 2000-01-23T04:56:07.000+00:00
          id: 0
          owner:
            name: name
            id: 0
          layoutCode: layoutCode
          visibility: visibility
          workflow:
            name: name
            id: 6
          darkImagePath: darkImagePath
          labels:
          - labels
          - labels
          blueprint: "{}"
          createdBy: createdBy
          name: name
          category: category
          iconPath: iconPath
          config: "{}"
      properties:
        catalogItemType:
          $ref: '#/components/schemas/catalogItemType'
      type: object
    updateCatalogItemType_request_catalogItemType:
      anyOf:
      - $ref: '#/components/schemas/catalogItemTypeInstanceUpdate'
      - $ref: '#/components/schemas/catalogItemTypeBlueprintUpdate'
      - $ref: '#/components/schemas/catalogItemTypeWorkflowUpdate'
    updateCatalogItemType_request:
      properties:
        catalogItemType:
          $ref: '#/components/schemas/updateCatalogItemType_request_catalogItemType'
      type: object
    updateCatalogItemType_200_response:
      allOf:
      - properties:
          catalogItemType:
            $ref: '#/components/schemas/catalogItemType'
        type: object
      - $ref: '#/components/schemas/200-success'
    listClients_200_response:
      allOf:
      - properties:
          clients:
            items:
              $ref: '#/components/schemas/client'
            type: array
        type: object
      - $ref: '#/components/schemas/meta'
    addClient_request_client:
      description: Payload for creating a new oauth client
      properties:
        clientId:
          description: ClientId
          example: Test Client
          type: string
        clientSecret:
          description: ClientSecret
          example: thisIsaClientSecretKeyPhrase
          type: string
        accessTokenValiditySeconds:
          description: Length of time accessToken is valid in seconds.
          example: 43200
          nullable: true
          type: integer
        refreshTokenValiditySeconds:
          description: Length of time refreshToken is valid in seconds.
          example: 43200
          nullable: true
          type: integer
      required:
      - accessTokenValiditySeconds
      - clientId
      - refreshTokenValiditySeconds
      type: object
    addClient_request:
      properties:
        client:
          $ref: '#/components/schemas/addClient_request_client'
      required:
      - client
      type: object
    addClient_200_response:
      allOf:
      - properties:
          client:
            $ref: '#/components/schemas/client'
        type: object
      - $ref: '#/components/schemas/200-success'
    getClients_200_response:
      allOf:
      - properties:
          client:
            $ref: '#/components/schemas/client'
        type: object
    updateClients_request:
      properties:
        client:
          $ref: '#/components/schemas/clientUpdate'
      required:
      - client
      type: object
    listCheckApps_200_response:
      allOf:
      - properties:
          monitorApps:
            items:
              $ref: '#/components/schemas/checkApp'
            type: array
        type: object
      - $ref: '#/components/schemas/meta'
    addCheckApps_request_monitorApp:
      description: Payload for creating a new monitoring check app
      properties:
        name:
          description: Unique name scoped to your account for the check app
          example: My Check App
          type: string
        description:
          description: Optional description field
          example: My cool description
          type: string
        inUptime:
          default: true
          description: Used to determine if check should affect account wide availability
            calculations
          type: boolean
        severity:
          default: critical
          description: Severity level of incidents that are created when this check
            fails
          enum:
          - info
          - warning
          - critical
          type: string
        active:
          default: true
          description: Used to determine if check app is active
          type: boolean
        checks:
          items:
            type: integer
          type: array
        checkGroups:
          items:
            type: integer
          type: array
      required:
      - name
      type: object
    addCheckApps_request:
      properties:
        monitorApp:
          $ref: '#/components/schemas/addCheckApps_request_monitorApp'
      required:
      - monitorApp
      type: object
    addCheckApps_200_response:
      allOf:
      - properties:
          checkApp:
            $ref: '#/components/schemas/checkApp'
        type: object
      - $ref: '#/components/schemas/200-success'
    activity_activity_inner_user:
      example:
        id: 1
        username: username
      properties:
        id:
          format: int64
          type: integer
        username:
          type: string
      type: object
    activity_activity_inner:
      properties:
        _id:
          type: string
        success:
          type: boolean
        activityType:
          type: string
        name:
          type: string
        message:
          type: string
        objectType:
          type: string
        objectId:
          format: int64
          type: integer
        user:
          $ref: '#/components/schemas/activity_activity_inner_user'
        ts:
          format: date-time
          type: string
      type: object
    meta_meta:
      properties:
        offset:
          default: 0
          description: "Offset records, the number of records to skip, can be used\
            \ to paginate over results."
          format: int64
          type: integer
        max:
          default: 25
          description: "Max size, the maximum number of records to include in the\
            \ response."
          format: int64
          type: integer
        size:
          default: 0
          description: Number of records returned in the response
          format: int64
          type: integer
        total:
          default: 0
          description: Total number of records found
          format: int64
          type: integer
      type: object
    check_checkType:
      properties:
        id:
          format: int64
          type: integer
        code:
          type: string
        name:
          type: string
        metricName:
          type: string
      type: object
    check_config:
      anyOf:
      - $ref: ./components/schemas/checkWebConfig.yaml
      - $ref: ./components/schemas/checkSqlConfig.yaml
      - $ref: ./components/schemas/checkElasticsearchConfig.yaml
      - $ref: ./components/schemas/checkSocketConfig.yaml
      - $ref: ./components/schemas/checkPushConfig.yaml
      - $ref: ./components/schemas/checkVmConfig.yaml
    check_container:
      nullable: true
      properties:
        id:
          format: int64
          type: integer
      type: object
    check_createdBy:
      nullable: true
      properties:
        id:
          format: int64
          type: integer
        username:
          type: string
      type: object
    checkGroup_instance:
      example:
        name: name
        id: 6
      nullable: true
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
    applianceSettings_enabledZoneTypes_inner:
      example:
        name: name
        id: 0
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
    approvalItem_approvalItem_reference:
      example:
        displayName: displayName
        name: name
        id: 1
        type: type
      properties:
        id:
          format: int64
          type: integer
        type:
          type: string
        name:
          type: string
        displayName:
          type: string
      type: object
    approvalItem_approvalItem:
      example:
        dateDenied: 2000-01-23T04:56:07.000+00:00
        deniedBy: deniedBy
        approval:
          id: 6
        approvedBy: approvedBy
        errorMessage: errorMessage
        externalId: externalId
        reference:
          displayName: displayName
          name: name
          id: 1
          type: type
        internalId: internalId
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        dateCreated: 2000-01-23T04:56:07.000+00:00
        dateApproved: 2000-01-23T04:56:07.000+00:00
        externalName: externalName
        name: name
        id: 0
        status: status
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        externalId:
          nullable: true
          type: string
        externalName:
          nullable: true
          type: string
        internalId:
          nullable: true
          type: string
        approvedBy:
          type: string
        deniedBy:
          nullable: true
          type: string
        status:
          type: string
        errorMessage:
          nullable: true
          type: string
        dateCreated:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
        dateApproved:
          format: date-time
          type: string
        dateDenied:
          format: date-time
          nullable: true
          type: string
        approval:
          $ref: '#/components/schemas/updateBlueprintPermissions_request_resourcePermission_sites_inner'
        reference:
          $ref: '#/components/schemas/approvalItem_approvalItem_reference'
      type: object
    app_blueprint:
      example:
        name: name
        id: 5
        type: type
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        type:
          type: string
      type: object
    app_stats:
      example:
        running: 2
        cpuUsage: 7.386281948385884
        usedMemory: 2
        total: 4
        instanceCount: 1
        instanceDayCount:
        - 1
        - 1
        instanceDayCountTotal: 1
        maxMemory: 7
        maxStorage: 3
        usedStorage: 9
      properties:
        usedMemory:
          format: int64
          type: integer
        maxMemory:
          format: int64
          type: integer
        usedStorage:
          format: int64
          type: integer
        maxStorage:
          format: int64
          type: integer
        running:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
        cpuUsage:
          type: number
        instanceCount:
          format: int64
          type: integer
        instanceDayCount:
          items:
            format: int64
            type: integer
          type: array
        instanceDayCountTotal:
          format: int64
          type: integer
      type: object
    appCreate_blueprintId:
      description: The ID of the Blueprint. Use "existing" to create a blank app.
      oneOf:
      - description: Blueprint ID
        format: int64
        type: integer
      - description: String for `existing` selection
        enum:
        - existing
        type: string
    appCreate_group:
      description: A Map containing the id of the Group
      properties:
        id:
          format: int64
          type: integer
      type: object
    appCreate_defaultCloud:
      description: A Map containing the id of the defaultCloud for the app.
      properties:
        id:
          format: int64
          type: integer
      type: object
    appPrepareApply_data_terraform:
      properties:
        refreshMode:
          type: string
        backendType:
          type: string
        timeoutMode:
          type: string
        configType:
          type: string
      type: object
    appPrepareApply_data_group:
      properties:
        name:
          type: string
        id:
          format: int64
          type: integer
      type: object
    appPrepareApply_data:
      properties:
        image:
          type: string
        name:
          type: string
        autoValidate:
          type: boolean
        terraform:
          $ref: '#/components/schemas/appPrepareApply_data_terraform'
        type:
          type: string
        config:
          type: object
        blueprintName:
          type: string
        description:
          nullable: true
          type: string
        templateId:
          format: int64
          type: integer
        blueprintId:
          format: int64
          type: integer
        group:
          $ref: '#/components/schemas/appPrepareApply_data_group'
      type: object
    appState_workloads_inner:
      properties:
        refType:
          type: string
        refId:
          format: int64
          type: integer
        refName:
          type: string
        subRefName:
          nullable: true
          type: string
        stateDate:
          format: date-time
          type: string
        status:
          type: string
        iacDrift:
          type: boolean
      type: object
    appState_specs_inner_template:
      properties:
        name:
          type: string
        type:
          type: string
      type: object
    appState_specs_inner:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        template:
          $ref: '#/components/schemas/appState_specs_inner_template'
        isolated:
          type: boolean
      type: object
    appState_input_variables_inner:
      properties:
        name:
          type: string
        value:
          nullable: true
          type: string
        sensitive:
          type: boolean
        type:
          type: string
      type: object
    appState_input_providers_inner:
      properties:
        name:
          type: string
      type: object
    appState_input_data_inner_name:
      oneOf:
      - type: string
      - nullable: true
        type: object
    appState_input_data_inner:
      properties:
        key:
          type: string
        name:
          $ref: '#/components/schemas/appState_input_data_inner_name'
        type:
          type: string
      type: object
    appState_input:
      properties:
        variables:
          items:
            $ref: '#/components/schemas/appState_input_variables_inner'
          type: array
        providers:
          items:
            $ref: '#/components/schemas/appState_input_providers_inner'
          type: array
        data:
          items:
            $ref: '#/components/schemas/appState_input_data_inner'
          type: array
      type: object
    appState_output:
      properties:
        outputs:
          items:
            type: object
          type: array
      type: object
    archiveBucket_createdBy:
      example:
        username: username
      nullable: true
      properties:
        username:
          type: string
      type: object
    archiveBucketCreate_storageProvider:
      description: Storage Provider
      properties:
        id:
          format: int64
          type: integer
      type: object
    archiveBucketFile_archiveBucket:
      example:
        name: name
        isPublic: true
        id: 5
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        isPublic:
          type: boolean
      type: object
    archiveBucketFile_createdBy:
      example:
        username: username
      properties:
        username:
          type: string
      type: object
    archiveFileLinks_archiveFile:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        filePath:
          type: string
      type: object
    backupSettings_defaultSchedule:
      example:
        code: code
        name: name
        id: 0
      properties:
        id:
          format: int64
          type: integer
        code:
          type: string
        name:
          type: string
      type: object
    backupSettingsUpdate_defaultSchedule:
      properties:
        id:
          description: ID of default backup schedule type
          format: int64
          type: integer
      type: object
    backupSettingsUpdate_defaultStorageBucket:
      properties:
        id:
          description: ID of default storage bucket
          format: int64
          type: integer
      type: object
    billing_zones_inner_computeServers:
      properties:
        price:
          type: number
        cost:
          type: number
        servers:
          items:
            type: object
          type: array
        count:
          format: int64
          type: integer
      type: object
    billing_zones_inner_instances:
      properties:
        price:
          type: number
        cost:
          type: number
        instances:
          items:
            type: object
          type: array
        count:
          format: int64
          type: integer
      type: object
    billing_zones_inner_loadBalancers:
      properties:
        price:
          type: number
        cost:
          type: number
        loadBalancers:
          items:
            type: object
          type: array
        count:
          format: int64
          type: integer
      type: object
    billing_zones_inner_virtualImages:
      properties:
        price:
          type: number
        cost:
          type: number
        virtualImages:
          items:
            type: object
          type: array
        count:
          format: int64
          type: integer
      type: object
    billing_zones_inner_snapshots:
      properties:
        price:
          type: number
        cost:
          type: number
        snapshots:
          items:
            type: object
          type: array
        count:
          format: int64
          type: integer
      type: object
    billing_zones_inner:
      properties:
        zoneName:
          type: string
        zoneId:
          format: int64
          type: integer
        zoneUUID:
          type: string
        zoneCode:
          nullable: true
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        priceUnit:
          type: string
        computeServers:
          $ref: '#/components/schemas/billing_zones_inner_computeServers'
        instances:
          $ref: '#/components/schemas/billing_zones_inner_instances'
        discoveredServers:
          $ref: '#/components/schemas/billing_zones_inner_computeServers'
        loadBalancers:
          $ref: '#/components/schemas/billing_zones_inner_loadBalancers'
        virtualImages:
          $ref: '#/components/schemas/billing_zones_inner_virtualImages'
        snapshots:
          $ref: '#/components/schemas/billing_zones_inner_snapshots'
        price:
          type: number
        cost:
          type: number
      type: object
    billingInstances_instances_inner_containers_inner_usages_inner_volumes_inner_datastore:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        type:
          type: string
        externalId:
          type: string
        internalId:
          nullable: true
          type: string
        externalPath:
          nullable: true
          type: string
      type: object
    billingInstances_instances_inner_containers_inner_usages_inner_volumes_inner:
      properties:
        size:
          format: int64
          type: integer
        typeCode:
          type: string
        datastore:
          $ref: '#/components/schemas/billingInstances_instances_inner_containers_inner_usages_inner_volumes_inner_datastore'
      type: object
    billingInstances_instances_inner_containers_inner_usages_inner_pricesUsed_inner:
      properties:
        type:
          type: string
        pricePerUnit:
          type: number
        costPerUnit:
          type: number
        quantity:
          format: int64
          type: integer
      type: object
    billingInstances_instances_inner_containers_inner_usages_inner_applicablePrices_inner_prices_inner:
      properties:
        type:
          type: string
        pricePerUnit:
          type: number
        costPerUnit:
          type: number
        cost:
          type: number
        price:
          type: number
        quantity:
          format: int64
          type: integer
      type: object
    billingInstances_instances_inner_containers_inner_usages_inner_applicablePrices_inner:
      properties:
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        numUnits:
          type: number
        cost:
          type: number
        price:
          type: number
        currency:
          type: string
        prices:
          items:
            $ref: '#/components/schemas/billingInstances_instances_inner_containers_inner_usages_inner_applicablePrices_inner_prices_inner'
          type: array
      type: object
    billingInstances_instances_inner_containers_inner_usages_inner:
      properties:
        name:
          type: string
        instanceName:
          type: string
        zoneName:
          type: string
        accountName:
          type: string
        volumes:
          items:
            $ref: '#/components/schemas/billingInstances_instances_inner_containers_inner_usages_inner_volumes_inner'
          type: array
        maxMemory:
          format: int64
          type: integer
        maxCpu:
          nullable: true
          type: string
        maxCores:
          format: int64
          type: integer
        serverExternalId:
          type: string
        serverInternalId:
          type: string
        planName:
          type: string
        hourlyPrice:
          type: number
        hourlyCost:
          type: number
        currency:
          type: string
        pricesUsed:
          items:
            $ref: '#/components/schemas/billingInstances_instances_inner_containers_inner_usages_inner_pricesUsed_inner'
          type: array
        cost:
          type: number
        price:
          type: number
        createdByUser:
          type: string
        createdByUserId:
          format: int64
          type: integer
        siteId:
          format: int64
          type: integer
        siteName:
          type: string
        siteUUID:
          type: string
        siteCode:
          nullable: true
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        status:
          type: string
        tags:
          items:
            type: object
          nullable: true
          type: array
        applicablePrices:
          items:
            $ref: '#/components/schemas/billingInstances_instances_inner_containers_inner_usages_inner_applicablePrices_inner'
          type: array
        servicePlanId:
          format: int64
          type: integer
        servicePlanName:
          type: string
        resourcePoolId:
          format: int64
          type: integer
        resourcePoolName:
          type: string
      type: object
    billingInstances_instances_inner_containers_inner:
      properties:
        refType:
          type: string
        refUUID:
          type: string
        refId:
          format: int64
          type: integer
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        cost:
          type: number
        price:
          type: number
        numUnits:
          type: number
        unit:
          type: string
        currency:
          type: string
        usages:
          items:
            $ref: '#/components/schemas/billingInstances_instances_inner_containers_inner_usages_inner'
          type: array
        numUsages:
          format: int64
          type: integer
        totalUsages:
          format: int64
          type: integer
        hasMoreUsages:
          type: boolean
        foundPricing:
          type: boolean
        name:
          type: string
        serverId:
          format: int64
          type: integer
        serverUUID:
          type: string
        serverUniqueId:
          type: string
        serverExternalId:
          type: string
        serverInternalId:
          type: string
        resourcePoolId:
          format: int64
          type: integer
        resourcePoolName:
          type: string
      type: object
    billingInstances_instances_inner:
      properties:
        instanceId:
          format: int64
          type: integer
        instanceUUID:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        name:
          type: string
        price:
          type: number
        cost:
          type: number
        currency:
          type: string
        containers:
          items:
            $ref: '#/components/schemas/billingInstances_instances_inner_containers_inner'
          type: array
      type: object
    billingInstance_containers_inner_usages_inner_applicablePrices_inner_prices_inner:
      properties:
        type:
          type: string
        pricePerUnit:
          type: number
        costPerUnit:
          type: number
        cost:
          type: number
        price:
          type: number
        quantity:
          format: int64
          nullable: true
          type: integer
      type: object
    billingInstance_containers_inner_usages_inner_applicablePrices_inner:
      properties:
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        numUnits:
          type: number
        cost:
          type: number
        price:
          type: number
        currency:
          type: string
        prices:
          items:
            $ref: '#/components/schemas/billingInstance_containers_inner_usages_inner_applicablePrices_inner_prices_inner'
          type: array
      type: object
    billingInstance_containers_inner_usages_inner:
      properties:
        name:
          type: string
        instanceName:
          type: string
        zoneName:
          type: string
        accountName:
          type: string
        volumes:
          items:
            $ref: '#/components/schemas/billingInstances_instances_inner_containers_inner_usages_inner_volumes_inner'
          type: array
        maxMemory:
          format: int64
          type: integer
        maxCpu:
          nullable: true
          type: string
        maxCores:
          format: int64
          type: integer
        serverExternalId:
          type: string
        serverInternalId:
          type: string
        planName:
          type: string
        hourlyPrice:
          type: number
        hourlyCost:
          type: number
        currency:
          type: string
        pricesUsed:
          items:
            $ref: '#/components/schemas/billingInstances_instances_inner_containers_inner_usages_inner_pricesUsed_inner'
          type: array
        cost:
          type: number
        price:
          type: number
        createdByUser:
          type: string
        createdByUserId:
          format: int64
          type: integer
        siteId:
          format: int64
          type: integer
        siteName:
          type: string
        siteUUID:
          type: string
        siteCode:
          nullable: true
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        status:
          type: string
        tags:
          items:
            type: object
          nullable: true
          type: array
        applicablePrices:
          items:
            $ref: '#/components/schemas/billingInstance_containers_inner_usages_inner_applicablePrices_inner'
          type: array
        servicePlanId:
          format: int64
          type: integer
        servicePlanName:
          type: string
        resourcePoolId:
          format: int64
          type: integer
        resourcePoolName:
          type: string
      type: object
    billingInstance_containers_inner:
      properties:
        refType:
          type: string
        refUUID:
          type: string
        refId:
          format: int64
          type: integer
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        cost:
          type: number
        price:
          type: number
        numUnits:
          type: number
        unit:
          type: string
        currency:
          type: string
        usages:
          items:
            $ref: '#/components/schemas/billingInstance_containers_inner_usages_inner'
          type: array
        numUsages:
          format: int64
          type: integer
        totalUsages:
          format: int64
          type: integer
        hasMoreUsages:
          type: boolean
        foundPricing:
          type: boolean
        name:
          type: string
        serverId:
          format: int64
          type: integer
        serverUUID:
          type: string
        serverUniqueId:
          nullable: true
          type: string
        serverExternalId:
          type: string
        serverInternalId:
          nullable: true
          type: string
        resourcePoolId:
          format: int64
          type: integer
        resourcePoolName:
          type: string
      type: object
    billingServers_servers_inner_usages_inner_volumes_inner:
      properties:
        size:
          format: int64
          type: integer
        typeCode:
          type: string
        datastore:
          nullable: true
          type: string
      type: object
    billingServers_servers_inner_usages_inner_pricesUsed_inner:
      properties:
        type:
          type: string
        pricePerUnit:
          type: number
        costPerUnit:
          type: number
        quantity:
          type: number
      type: object
    billingServers_servers_inner_usages_inner_applicablePrices_inner_prices_inner:
      properties:
        type:
          type: string
        pricePerUnit:
          type: number
        costPerUnit:
          type: number
        cost:
          type: number
        price:
          type: number
        quantity:
          type: number
      type: object
    billingServers_servers_inner_usages_inner_applicablePrices_inner:
      properties:
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        numUnits:
          type: number
        cost:
          type: number
        price:
          type: number
        currency:
          type: string
        prices:
          items:
            $ref: '#/components/schemas/billingServers_servers_inner_usages_inner_applicablePrices_inner_prices_inner'
          type: array
      type: object
    billingServers_servers_inner_usages_inner:
      properties:
        name:
          type: string
        zoneName:
          type: string
        accountName:
          type: string
        volumes:
          items:
            $ref: '#/components/schemas/billingServers_servers_inner_usages_inner_volumes_inner'
          type: array
        maxMemory:
          format: int64
          type: integer
        maxCpu:
          nullable: true
          type: string
        maxCores:
          format: int64
          type: integer
        serverExternalId:
          nullable: true
          type: string
        serverInternalId:
          nullable: true
          type: string
        planName:
          type: string
        hourlyPrice:
          type: number
        hourlyCost:
          type: number
        currency:
          type: string
        pricesUsed:
          items:
            $ref: '#/components/schemas/billingServers_servers_inner_usages_inner_pricesUsed_inner'
          type: array
        cost:
          type: number
        price:
          type: number
        createdByUser:
          type: string
        createdByUserId:
          format: int64
          type: integer
        siteId:
          nullable: true
          type: string
        siteName:
          nullable: true
          type: string
        siteUUID:
          nullable: true
          type: string
        siteCode:
          nullable: true
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        status:
          type: string
        tags:
          items:
            type: object
          type: array
        applicablePrices:
          items:
            $ref: '#/components/schemas/billingServers_servers_inner_usages_inner_applicablePrices_inner'
          type: array
        servicePlanId:
          format: int64
          type: integer
        servicePlanName:
          type: string
        resourcePoolId:
          nullable: true
          type: string
        resourcePoolName:
          nullable: true
          type: string
      type: object
    billingServers_servers_inner:
      properties:
        refType:
          type: string
        refUUID:
          type: string
        refId:
          format: int64
          type: integer
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        cost:
          type: number
        price:
          type: number
        numUnits:
          type: number
        unit:
          type: string
        currency:
          type: string
        usages:
          items:
            $ref: '#/components/schemas/billingServers_servers_inner_usages_inner'
          type: array
        numUsages:
          format: int64
          type: integer
        totalUsages:
          format: int64
          type: integer
        hasMoreUsages:
          type: boolean
        foundPricing:
          type: boolean
        name:
          type: string
        serverUUID:
          type: string
        serverUniqueId:
          nullable: true
          type: string
        serverExternalId:
          nullable: true
          type: string
        serverInternalId:
          nullable: true
          type: string
        resourcePoolId:
          nullable: true
          type: string
        resourcePoolName:
          nullable: true
          type: string
      type: object
    billingServer_usages_inner_applicablePrices_inner_prices_inner:
      properties:
        type:
          type: string
        pricePerUnit:
          type: number
        costPerUnit:
          type: number
        cost:
          type: number
        price:
          type: number
        quantity:
          format: int64
          type: integer
        datastoreId:
          nullable: true
          type: string
        volumeType:
          type: string
        datastore:
          type: string
      type: object
    billingServer_usages_inner_applicablePrices_inner:
      properties:
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        numUnits:
          type: number
        cost:
          type: number
        price:
          type: number
        currency:
          type: string
        prices:
          items:
            $ref: '#/components/schemas/billingServer_usages_inner_applicablePrices_inner_prices_inner'
          type: array
      type: object
    billingServer_usages_inner:
      properties:
        cost:
          type: number
        price:
          type: number
        createdByUser:
          type: string
        createdByUserId:
          format: int64
          type: integer
        siteId:
          nullable: true
          type: string
        siteName:
          nullable: true
          type: string
        siteUUID:
          nullable: true
          type: string
        siteCode:
          nullable: true
          type: string
        currency:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        status:
          type: string
        tags:
          items:
            type: object
          type: array
        applicablePrices:
          items:
            $ref: '#/components/schemas/billingServer_usages_inner_applicablePrices_inner'
          type: array
        servicePlanId:
          format: int64
          type: integer
        servicePlanName:
          type: string
        resourcePoolId:
          format: int64
          type: integer
        resourcePoolName:
          type: string
      type: object
    blueprintARMCreate_arm_git:
      properties:
        repoId:
          description: Morpheus SCM Repository ID
          format: int64
          type: integer
        path:
          description: Path to ARM Files in the Repository
          type: string
        integrationId:
          description: Morpheus SCM Integration ID
          format: int64
          type: integer
        branch:
          description: Branch Name
          type: string
      required:
      - branch
      - integrationId
      - path
      - repoId
      type: object
    blueprintARMCreate_arm_installAgent:
      default: false
      description: Install Morpheus Agent
      oneOf:
      - type: boolean
      - type: string
    blueprintARMCreate_arm_cloudInitEnabled:
      default: false
      description: Cloud Init Enabled
      oneOf:
      - type: boolean
      - type: string
    blueprintARMCreate_arm:
      properties:
        configType:
          description: Configuration Type
          enum:
          - json
          - yaml
          - git
          type: string
        json:
          description: ARM Template in JSON
          type: string
        yaml:
          description: ARM Template in YAML
          type: string
        git:
          $ref: '#/components/schemas/blueprintARMCreate_arm_git'
        osType:
          description: OS Type
          enum:
          - linux
          - windows
          type: string
        installAgent:
          $ref: '#/components/schemas/blueprintARMCreate_arm_installAgent'
        cloudInitEnabled:
          $ref: '#/components/schemas/blueprintARMCreate_arm_cloudInitEnabled'
      required:
      - configType
      type: object
    blueprintCFTCreate_cloudFormation_git:
      properties:
        repoId:
          description: Morpheus SCM Repository ID
          format: int64
          type: integer
        path:
          description: Path to CloudFormation Files in the Repository
          type: string
        integrationId:
          description: Morpheus SCM Integration ID
          format: int64
          type: integer
        branch:
          description: Branch Name
          type: string
      required:
      - branch
      - integrationId
      - path
      - repoId
      type: object
    blueprintCFTCreate_cloudFormation:
      properties:
        configType:
          description: Configuration Type
          enum:
          - json
          - yaml
          - git
          type: string
        json:
          description: CloudFormation Template in JSON
          type: string
        yaml:
          description: CloudFormation Template in YAML
          type: string
        git:
          $ref: '#/components/schemas/blueprintCFTCreate_cloudFormation_git'
        IAM:
          default: false
          description: CloudFormation Attribute CAPABILITY_IAM
          type: boolean
        CAPABILITY_NAMED_IAM:
          default: false
          description: CloudFormation Attribute CAPABILITY_NAMED_IAM
          type: boolean
        CAPABILITY_AUTO_EXPAND:
          default: false
          description: CloudFormation Attribute CAPABILITY_AUTO_EXPAND
          type: boolean
        installAgent:
          default: false
          description: Install Morpheus Agent
          type: boolean
        cloudInitEnabled:
          default: false
          description: Cloud Init Enabled
          type: boolean
      required:
      - configType
      type: object
    blueprintHelmCreate_helm_git:
      properties:
        repoId:
          description: Morpheus SCM Repository ID
          format: int64
          type: integer
        path:
          description: Path to Helm Files in the Repository
          type: string
        integrationId:
          description: Morpheus SCM Integration ID
          format: int64
          type: integer
        branch:
          description: Branch Name
          type: string
      required:
      - branch
      - integrationId
      - path
      - repoId
      type: object
    blueprintHelmCreate_helm:
      properties:
        configType:
          description: Configuration Type
          enum:
          - git
          type: string
        git:
          $ref: '#/components/schemas/blueprintHelmCreate_helm_git'
      required:
      - configType
      type: object
    blueprintKubernetesCreate_kubernetes_git:
      properties:
        repoId:
          description: Morpheus SCM Repository ID
          format: int64
          type: integer
        path:
          description: Path to kubernetes Files in the Repository
          type: string
        integrationId:
          description: Morpheus SCM Integration ID
          format: int64
          type: integer
        branch:
          description: Branch Name
          type: string
      type: object
    blueprintKubernetesCreate_kubernetes:
      properties:
        configType:
          description: Configuration Type
          enum:
          - yaml
          - spec
          - git
          type: string
        yaml:
          description: Kubernetes Spec in YAML
          type: string
        git:
          $ref: '#/components/schemas/blueprintKubernetesCreate_kubernetes_git'
      required:
      - configType
      type: object
    blueprintKubernetesCreate_config_specs_inner:
      properties:
        id:
          format: int64
          type: integer
        value:
          format: int64
          type: integer
        name:
          type: string
      type: object
    blueprintKubernetesCreate_config:
      properties:
        specs:
          description: Array of Kubernetes specs in Morpheus
          items:
            $ref: '#/components/schemas/blueprintKubernetesCreate_config_specs_inner'
          type: array
      type: object
    blueprintTerraformCreate_terraform_git:
      properties:
        repoId:
          description: Morpheus SCM Repository ID
          format: int64
          type: integer
        path:
          description: Path to terraform Files in the Repository
          type: string
        integrationId:
          description: Morpheus SCM Integration ID
          format: int64
          type: integer
        branch:
          description: Branch Name
          type: string
      required:
      - branch
      - integrationId
      - path
      - repoId
      type: object
    blueprintTerraformCreate_terraform:
      properties:
        configType:
          description: Configuration Type
          enum:
          - tf
          - spec
          - git
          - json
          type: string
        json:
          description: Terraform definition in JSON for `configType` `json`
          type: string
        tf:
          description: Terraform definition for `configType` `tf`
          type: string
        git:
          $ref: '#/components/schemas/blueprintTerraformCreate_terraform_git'
        tfvarSecret:
          description: tfvar secret from Morpheus Cypher
          type: string
      required:
      - configType
      type: object
    blueprintTerraformCreate_config:
      properties:
        specs:
          description: Array of Terraform specs in Morpheus
          items:
            $ref: '#/components/schemas/blueprintKubernetesCreate_config_specs_inner'
          type: array
      type: object
    blueprintCreateSuccess_config:
      oneOf:
      - $ref: ./components/schemas/blueprintARMCreateSuccess.yaml
      - $ref: ./components/schemas/blueprintCFTCreateSuccess.yaml
      - $ref: ./components/schemas/blueprintHelmCreateSuccess.yaml
      - $ref: ./components/schemas/blueprintKubernetesCreateSuccess.yaml
      - $ref: ./components/schemas/blueprintMorpheusCreateSuccess.yaml
      - $ref: ./components/schemas/blueprintTerraformCreateSuccess.yaml
    budget_stats_intervals_inner:
      properties:
        index:
          format: int64
          type: integer
        month:
          type: string
        shortName:
          type: string
        chartName:
          type: string
        budget:
          format: int64
          type: integer
        cost:
          type: number
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
      type: object
    budget_stats_current:
      properties:
        estimatedCost:
          nullable: true
          type: string
        lastCost:
          nullable: true
          type: string
      type: object
    budget_stats:
      properties:
        currency:
          type: string
        conversionRate:
          format: int64
          type: integer
        intervals:
          items:
            $ref: '#/components/schemas/budget_stats_intervals_inner'
          type: array
        current:
          $ref: '#/components/schemas/budget_stats_current'
      type: object
    catalogItemTypeBlueprintCreate_blueprint:
      description: "Blueprint object, identified by id or name. Only applies to type\
        \ blueprint"
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
  securitySchemes:
    bearerAuth:
      description: "Populate a bearer token for the Morpheus appliance you are testing.\n\
        This can be generated in the UI under your personal `user settings`\nor\n\
        Additional API methods can be found below.\nhttps://morpheusdata.readme.io/reference/getaccesstoken-3\
        \    \n"
      scheme: bearer
      type: http
    cypherAuth-XCToken:
      description: An access token or an execution lease token.
      in: header
      name: X-Cypher-Token
      type: apiKey
    cypherAuth-XVToken:
      description: An access token or an execution lease token.
      in: header
      name: X-Vault-Token
      type: apiKey
    cypherAuth-XMLease:
      description: An execution lease token.
      in: header
      name: X-Morpheus-Lease
      type: apiKey
x-readme:
  explorer-enabled: true
  metrics-enabled: false
  samples-languages:
  - curl
  - python
  - powershell
  - javascript
  - go
