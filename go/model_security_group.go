/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SecurityGroup struct for SecurityGroup
type SecurityGroup struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	AccountId *int64 `json:"accountId,omitempty"`
	GroupSource NullableString `json:"groupSource,omitempty"`
	ExternalId NullableString `json:"externalId,omitempty"`
	Enabled NullableString `json:"enabled,omitempty"`
	SyncSource *string `json:"syncSource,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	Active *bool `json:"active,omitempty"`
	Zone NullableInlineResponse20082LoadBalancerInstanceSslCert `json:"zone,omitempty"`
	Locations *[]SecurityGroupLocations `json:"locations,omitempty"`
	Rules *[]SecurityGroupRules `json:"rules,omitempty"`
	Tenants *[]SecurityGroupTenants `json:"tenants,omitempty"`
	ResourcePermission *ClusterDatastoresPermissionsResourcePermissions `json:"resourcePermission,omitempty"`
}

// NewSecurityGroup instantiates a new SecurityGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroup() *SecurityGroup {
	this := SecurityGroup{}
	return &this
}

// NewSecurityGroupWithDefaults instantiates a new SecurityGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupWithDefaults() *SecurityGroup {
	this := SecurityGroup{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SecurityGroup) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SecurityGroup) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *SecurityGroup) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SecurityGroup) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SecurityGroup) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SecurityGroup) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroup) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroup) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *SecurityGroup) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *SecurityGroup) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *SecurityGroup) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *SecurityGroup) UnsetDescription() {
	o.Description.Unset()
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *SecurityGroup) GetAccountId() int64 {
	if o == nil || o.AccountId == nil {
		var ret int64
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetAccountIdOk() (*int64, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *SecurityGroup) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int64 and assigns it to the AccountId field.
func (o *SecurityGroup) SetAccountId(v int64) {
	o.AccountId = &v
}

// GetGroupSource returns the GroupSource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroup) GetGroupSource() string {
	if o == nil || o.GroupSource.Get() == nil {
		var ret string
		return ret
	}
	return *o.GroupSource.Get()
}

// GetGroupSourceOk returns a tuple with the GroupSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroup) GetGroupSourceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GroupSource.Get(), o.GroupSource.IsSet()
}

// HasGroupSource returns a boolean if a field has been set.
func (o *SecurityGroup) HasGroupSource() bool {
	if o != nil && o.GroupSource.IsSet() {
		return true
	}

	return false
}

// SetGroupSource gets a reference to the given NullableString and assigns it to the GroupSource field.
func (o *SecurityGroup) SetGroupSource(v string) {
	o.GroupSource.Set(&v)
}
// SetGroupSourceNil sets the value for GroupSource to be an explicit nil
func (o *SecurityGroup) SetGroupSourceNil() {
	o.GroupSource.Set(nil)
}

// UnsetGroupSource ensures that no value is present for GroupSource, not even an explicit nil
func (o *SecurityGroup) UnsetGroupSource() {
	o.GroupSource.Unset()
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroup) GetExternalId() string {
	if o == nil || o.ExternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroup) GetExternalIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *SecurityGroup) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *SecurityGroup) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}
// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *SecurityGroup) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *SecurityGroup) UnsetExternalId() {
	o.ExternalId.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroup) GetEnabled() string {
	if o == nil || o.Enabled.Get() == nil {
		var ret string
		return ret
	}
	return *o.Enabled.Get()
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroup) GetEnabledOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Enabled.Get(), o.Enabled.IsSet()
}

// HasEnabled returns a boolean if a field has been set.
func (o *SecurityGroup) HasEnabled() bool {
	if o != nil && o.Enabled.IsSet() {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given NullableString and assigns it to the Enabled field.
func (o *SecurityGroup) SetEnabled(v string) {
	o.Enabled.Set(&v)
}
// SetEnabledNil sets the value for Enabled to be an explicit nil
func (o *SecurityGroup) SetEnabledNil() {
	o.Enabled.Set(nil)
}

// UnsetEnabled ensures that no value is present for Enabled, not even an explicit nil
func (o *SecurityGroup) UnsetEnabled() {
	o.Enabled.Unset()
}

// GetSyncSource returns the SyncSource field value if set, zero value otherwise.
func (o *SecurityGroup) GetSyncSource() string {
	if o == nil || o.SyncSource == nil {
		var ret string
		return ret
	}
	return *o.SyncSource
}

// GetSyncSourceOk returns a tuple with the SyncSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetSyncSourceOk() (*string, bool) {
	if o == nil || o.SyncSource == nil {
		return nil, false
	}
	return o.SyncSource, true
}

// HasSyncSource returns a boolean if a field has been set.
func (o *SecurityGroup) HasSyncSource() bool {
	if o != nil && o.SyncSource != nil {
		return true
	}

	return false
}

// SetSyncSource gets a reference to the given string and assigns it to the SyncSource field.
func (o *SecurityGroup) SetSyncSource(v string) {
	o.SyncSource = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *SecurityGroup) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetVisibilityOk() (*string, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *SecurityGroup) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *SecurityGroup) SetVisibility(v string) {
	o.Visibility = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *SecurityGroup) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *SecurityGroup) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *SecurityGroup) SetActive(v bool) {
	o.Active = &v
}

// GetZone returns the Zone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SecurityGroup) GetZone() InlineResponse20082LoadBalancerInstanceSslCert {
	if o == nil || o.Zone.Get() == nil {
		var ret InlineResponse20082LoadBalancerInstanceSslCert
		return ret
	}
	return *o.Zone.Get()
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecurityGroup) GetZoneOk() (*InlineResponse20082LoadBalancerInstanceSslCert, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Zone.Get(), o.Zone.IsSet()
}

// HasZone returns a boolean if a field has been set.
func (o *SecurityGroup) HasZone() bool {
	if o != nil && o.Zone.IsSet() {
		return true
	}

	return false
}

// SetZone gets a reference to the given NullableInlineResponse20082LoadBalancerInstanceSslCert and assigns it to the Zone field.
func (o *SecurityGroup) SetZone(v InlineResponse20082LoadBalancerInstanceSslCert) {
	o.Zone.Set(&v)
}
// SetZoneNil sets the value for Zone to be an explicit nil
func (o *SecurityGroup) SetZoneNil() {
	o.Zone.Set(nil)
}

// UnsetZone ensures that no value is present for Zone, not even an explicit nil
func (o *SecurityGroup) UnsetZone() {
	o.Zone.Unset()
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *SecurityGroup) GetLocations() []SecurityGroupLocations {
	if o == nil || o.Locations == nil {
		var ret []SecurityGroupLocations
		return ret
	}
	return *o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetLocationsOk() (*[]SecurityGroupLocations, bool) {
	if o == nil || o.Locations == nil {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *SecurityGroup) HasLocations() bool {
	if o != nil && o.Locations != nil {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []SecurityGroupLocations and assigns it to the Locations field.
func (o *SecurityGroup) SetLocations(v []SecurityGroupLocations) {
	o.Locations = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *SecurityGroup) GetRules() []SecurityGroupRules {
	if o == nil || o.Rules == nil {
		var ret []SecurityGroupRules
		return ret
	}
	return *o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetRulesOk() (*[]SecurityGroupRules, bool) {
	if o == nil || o.Rules == nil {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *SecurityGroup) HasRules() bool {
	if o != nil && o.Rules != nil {
		return true
	}

	return false
}

// SetRules gets a reference to the given []SecurityGroupRules and assigns it to the Rules field.
func (o *SecurityGroup) SetRules(v []SecurityGroupRules) {
	o.Rules = &v
}

// GetTenants returns the Tenants field value if set, zero value otherwise.
func (o *SecurityGroup) GetTenants() []SecurityGroupTenants {
	if o == nil || o.Tenants == nil {
		var ret []SecurityGroupTenants
		return ret
	}
	return *o.Tenants
}

// GetTenantsOk returns a tuple with the Tenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetTenantsOk() (*[]SecurityGroupTenants, bool) {
	if o == nil || o.Tenants == nil {
		return nil, false
	}
	return o.Tenants, true
}

// HasTenants returns a boolean if a field has been set.
func (o *SecurityGroup) HasTenants() bool {
	if o != nil && o.Tenants != nil {
		return true
	}

	return false
}

// SetTenants gets a reference to the given []SecurityGroupTenants and assigns it to the Tenants field.
func (o *SecurityGroup) SetTenants(v []SecurityGroupTenants) {
	o.Tenants = &v
}

// GetResourcePermission returns the ResourcePermission field value if set, zero value otherwise.
func (o *SecurityGroup) GetResourcePermission() ClusterDatastoresPermissionsResourcePermissions {
	if o == nil || o.ResourcePermission == nil {
		var ret ClusterDatastoresPermissionsResourcePermissions
		return ret
	}
	return *o.ResourcePermission
}

// GetResourcePermissionOk returns a tuple with the ResourcePermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroup) GetResourcePermissionOk() (*ClusterDatastoresPermissionsResourcePermissions, bool) {
	if o == nil || o.ResourcePermission == nil {
		return nil, false
	}
	return o.ResourcePermission, true
}

// HasResourcePermission returns a boolean if a field has been set.
func (o *SecurityGroup) HasResourcePermission() bool {
	if o != nil && o.ResourcePermission != nil {
		return true
	}

	return false
}

// SetResourcePermission gets a reference to the given ClusterDatastoresPermissionsResourcePermissions and assigns it to the ResourcePermission field.
func (o *SecurityGroup) SetResourcePermission(v ClusterDatastoresPermissionsResourcePermissions) {
	o.ResourcePermission = &v
}

func (o SecurityGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.AccountId != nil {
		toSerialize["accountId"] = o.AccountId
	}
	if o.GroupSource.IsSet() {
		toSerialize["groupSource"] = o.GroupSource.Get()
	}
	if o.ExternalId.IsSet() {
		toSerialize["externalId"] = o.ExternalId.Get()
	}
	if o.Enabled.IsSet() {
		toSerialize["enabled"] = o.Enabled.Get()
	}
	if o.SyncSource != nil {
		toSerialize["syncSource"] = o.SyncSource
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.Zone.IsSet() {
		toSerialize["zone"] = o.Zone.Get()
	}
	if o.Locations != nil {
		toSerialize["locations"] = o.Locations
	}
	if o.Rules != nil {
		toSerialize["rules"] = o.Rules
	}
	if o.Tenants != nil {
		toSerialize["tenants"] = o.Tenants
	}
	if o.ResourcePermission != nil {
		toSerialize["resourcePermission"] = o.ResourcePermission
	}
	return json.Marshal(toSerialize)
}

type NullableSecurityGroup struct {
	value *SecurityGroup
	isSet bool
}

func (v NullableSecurityGroup) Get() *SecurityGroup {
	return v.value
}

func (v *NullableSecurityGroup) Set(val *SecurityGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroup(val *SecurityGroup) *NullableSecurityGroup {
	return &NullableSecurityGroup{value: val, isSet: true}
}

func (v NullableSecurityGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


