/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GuidanceAzureReservationsConfigServicesAzureVmsTermOptions struct for GuidanceAzureReservationsConfigServicesAzureVmsTermOptions
type GuidanceAzureReservationsConfigServicesAzureVmsTermOptions struct {
	Code *string `json:"code,omitempty"`
	Name *string `json:"name,omitempty"`
	DetailList *[]GuidanceAzureReservationsConfigDetailList `json:"detailList,omitempty"`
	Summary *GuidanceAzureReservationsConfigServicesAzureVmsSummary `json:"summary,omitempty"`
}

// NewGuidanceAzureReservationsConfigServicesAzureVmsTermOptions instantiates a new GuidanceAzureReservationsConfigServicesAzureVmsTermOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGuidanceAzureReservationsConfigServicesAzureVmsTermOptions() *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions {
	this := GuidanceAzureReservationsConfigServicesAzureVmsTermOptions{}
	return &this
}

// NewGuidanceAzureReservationsConfigServicesAzureVmsTermOptionsWithDefaults instantiates a new GuidanceAzureReservationsConfigServicesAzureVmsTermOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGuidanceAzureReservationsConfigServicesAzureVmsTermOptionsWithDefaults() *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions {
	this := GuidanceAzureReservationsConfigServicesAzureVmsTermOptions{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions) SetCode(v string) {
	o.Code = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions) SetName(v string) {
	o.Name = &v
}

// GetDetailList returns the DetailList field value if set, zero value otherwise.
func (o *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions) GetDetailList() []GuidanceAzureReservationsConfigDetailList {
	if o == nil || o.DetailList == nil {
		var ret []GuidanceAzureReservationsConfigDetailList
		return ret
	}
	return *o.DetailList
}

// GetDetailListOk returns a tuple with the DetailList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions) GetDetailListOk() (*[]GuidanceAzureReservationsConfigDetailList, bool) {
	if o == nil || o.DetailList == nil {
		return nil, false
	}
	return o.DetailList, true
}

// HasDetailList returns a boolean if a field has been set.
func (o *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions) HasDetailList() bool {
	if o != nil && o.DetailList != nil {
		return true
	}

	return false
}

// SetDetailList gets a reference to the given []GuidanceAzureReservationsConfigDetailList and assigns it to the DetailList field.
func (o *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions) SetDetailList(v []GuidanceAzureReservationsConfigDetailList) {
	o.DetailList = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions) GetSummary() GuidanceAzureReservationsConfigServicesAzureVmsSummary {
	if o == nil || o.Summary == nil {
		var ret GuidanceAzureReservationsConfigServicesAzureVmsSummary
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions) GetSummaryOk() (*GuidanceAzureReservationsConfigServicesAzureVmsSummary, bool) {
	if o == nil || o.Summary == nil {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions) HasSummary() bool {
	if o != nil && o.Summary != nil {
		return true
	}

	return false
}

// SetSummary gets a reference to the given GuidanceAzureReservationsConfigServicesAzureVmsSummary and assigns it to the Summary field.
func (o *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions) SetSummary(v GuidanceAzureReservationsConfigServicesAzureVmsSummary) {
	o.Summary = &v
}

func (o GuidanceAzureReservationsConfigServicesAzureVmsTermOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.DetailList != nil {
		toSerialize["detailList"] = o.DetailList
	}
	if o.Summary != nil {
		toSerialize["summary"] = o.Summary
	}
	return json.Marshal(toSerialize)
}

type NullableGuidanceAzureReservationsConfigServicesAzureVmsTermOptions struct {
	value *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions
	isSet bool
}

func (v NullableGuidanceAzureReservationsConfigServicesAzureVmsTermOptions) Get() *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions {
	return v.value
}

func (v *NullableGuidanceAzureReservationsConfigServicesAzureVmsTermOptions) Set(val *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableGuidanceAzureReservationsConfigServicesAzureVmsTermOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableGuidanceAzureReservationsConfigServicesAzureVmsTermOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGuidanceAzureReservationsConfigServicesAzureVmsTermOptions(val *GuidanceAzureReservationsConfigServicesAzureVmsTermOptions) *NullableGuidanceAzureReservationsConfigServicesAzureVmsTermOptions {
	return &NullableGuidanceAzureReservationsConfigServicesAzureVmsTermOptions{value: val, isSet: true}
}

func (v NullableGuidanceAzureReservationsConfigServicesAzureVmsTermOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGuidanceAzureReservationsConfigServicesAzureVmsTermOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


