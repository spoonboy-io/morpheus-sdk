/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetApprovals200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetApprovals200Response{}

// GetApprovals200Response struct for GetApprovals200Response
type GetApprovals200Response struct {
	Approval *Approval `json:"approval,omitempty"`
}

// NewGetApprovals200Response instantiates a new GetApprovals200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetApprovals200Response() *GetApprovals200Response {
	this := GetApprovals200Response{}
	return &this
}

// NewGetApprovals200ResponseWithDefaults instantiates a new GetApprovals200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetApprovals200ResponseWithDefaults() *GetApprovals200Response {
	this := GetApprovals200Response{}
	return &this
}

// GetApproval returns the Approval field value if set, zero value otherwise.
func (o *GetApprovals200Response) GetApproval() Approval {
	if o == nil || IsNil(o.Approval) {
		var ret Approval
		return ret
	}
	return *o.Approval
}

// GetApprovalOk returns a tuple with the Approval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApprovals200Response) GetApprovalOk() (*Approval, bool) {
	if o == nil || IsNil(o.Approval) {
		return nil, false
	}
	return o.Approval, true
}

// HasApproval returns a boolean if a field has been set.
func (o *GetApprovals200Response) HasApproval() bool {
	if o != nil && !IsNil(o.Approval) {
		return true
	}

	return false
}

// SetApproval gets a reference to the given Approval and assigns it to the Approval field.
func (o *GetApprovals200Response) SetApproval(v Approval) {
	o.Approval = &v
}

func (o GetApprovals200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetApprovals200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Approval) {
		toSerialize["approval"] = o.Approval
	}
	return toSerialize, nil
}

type NullableGetApprovals200Response struct {
	value *GetApprovals200Response
	isSet bool
}

func (v NullableGetApprovals200Response) Get() *GetApprovals200Response {
	return v.value
}

func (v *NullableGetApprovals200Response) Set(val *GetApprovals200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetApprovals200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetApprovals200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetApprovals200Response(val *GetApprovals200Response) *NullableGetApprovals200Response {
	return &NullableGetApprovals200Response{value: val, isSet: true}
}

func (v NullableGetApprovals200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetApprovals200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


