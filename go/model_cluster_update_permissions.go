/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterUpdatePermissions struct for ClusterUpdatePermissions
type ClusterUpdatePermissions struct {
	ResourcePermissions *ClusterUpdatePermissionsResourcePermissions `json:"resourcePermissions,omitempty"`
	ResourcePool *ClusterUpdatePermissionsResourcePool `json:"resourcePool,omitempty"`
	TenantPermissions *ClusterUpdatePermissionsTenantPermissions `json:"tenantPermissions,omitempty"`
}

// NewClusterUpdatePermissions instantiates a new ClusterUpdatePermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterUpdatePermissions() *ClusterUpdatePermissions {
	this := ClusterUpdatePermissions{}
	return &this
}

// NewClusterUpdatePermissionsWithDefaults instantiates a new ClusterUpdatePermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterUpdatePermissionsWithDefaults() *ClusterUpdatePermissions {
	this := ClusterUpdatePermissions{}
	return &this
}

// GetResourcePermissions returns the ResourcePermissions field value if set, zero value otherwise.
func (o *ClusterUpdatePermissions) GetResourcePermissions() ClusterUpdatePermissionsResourcePermissions {
	if o == nil || o.ResourcePermissions == nil {
		var ret ClusterUpdatePermissionsResourcePermissions
		return ret
	}
	return *o.ResourcePermissions
}

// GetResourcePermissionsOk returns a tuple with the ResourcePermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdatePermissions) GetResourcePermissionsOk() (*ClusterUpdatePermissionsResourcePermissions, bool) {
	if o == nil || o.ResourcePermissions == nil {
		return nil, false
	}
	return o.ResourcePermissions, true
}

// HasResourcePermissions returns a boolean if a field has been set.
func (o *ClusterUpdatePermissions) HasResourcePermissions() bool {
	if o != nil && o.ResourcePermissions != nil {
		return true
	}

	return false
}

// SetResourcePermissions gets a reference to the given ClusterUpdatePermissionsResourcePermissions and assigns it to the ResourcePermissions field.
func (o *ClusterUpdatePermissions) SetResourcePermissions(v ClusterUpdatePermissionsResourcePermissions) {
	o.ResourcePermissions = &v
}

// GetResourcePool returns the ResourcePool field value if set, zero value otherwise.
func (o *ClusterUpdatePermissions) GetResourcePool() ClusterUpdatePermissionsResourcePool {
	if o == nil || o.ResourcePool == nil {
		var ret ClusterUpdatePermissionsResourcePool
		return ret
	}
	return *o.ResourcePool
}

// GetResourcePoolOk returns a tuple with the ResourcePool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdatePermissions) GetResourcePoolOk() (*ClusterUpdatePermissionsResourcePool, bool) {
	if o == nil || o.ResourcePool == nil {
		return nil, false
	}
	return o.ResourcePool, true
}

// HasResourcePool returns a boolean if a field has been set.
func (o *ClusterUpdatePermissions) HasResourcePool() bool {
	if o != nil && o.ResourcePool != nil {
		return true
	}

	return false
}

// SetResourcePool gets a reference to the given ClusterUpdatePermissionsResourcePool and assigns it to the ResourcePool field.
func (o *ClusterUpdatePermissions) SetResourcePool(v ClusterUpdatePermissionsResourcePool) {
	o.ResourcePool = &v
}

// GetTenantPermissions returns the TenantPermissions field value if set, zero value otherwise.
func (o *ClusterUpdatePermissions) GetTenantPermissions() ClusterUpdatePermissionsTenantPermissions {
	if o == nil || o.TenantPermissions == nil {
		var ret ClusterUpdatePermissionsTenantPermissions
		return ret
	}
	return *o.TenantPermissions
}

// GetTenantPermissionsOk returns a tuple with the TenantPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdatePermissions) GetTenantPermissionsOk() (*ClusterUpdatePermissionsTenantPermissions, bool) {
	if o == nil || o.TenantPermissions == nil {
		return nil, false
	}
	return o.TenantPermissions, true
}

// HasTenantPermissions returns a boolean if a field has been set.
func (o *ClusterUpdatePermissions) HasTenantPermissions() bool {
	if o != nil && o.TenantPermissions != nil {
		return true
	}

	return false
}

// SetTenantPermissions gets a reference to the given ClusterUpdatePermissionsTenantPermissions and assigns it to the TenantPermissions field.
func (o *ClusterUpdatePermissions) SetTenantPermissions(v ClusterUpdatePermissionsTenantPermissions) {
	o.TenantPermissions = &v
}

func (o ClusterUpdatePermissions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResourcePermissions != nil {
		toSerialize["resourcePermissions"] = o.ResourcePermissions
	}
	if o.ResourcePool != nil {
		toSerialize["resourcePool"] = o.ResourcePool
	}
	if o.TenantPermissions != nil {
		toSerialize["tenantPermissions"] = o.TenantPermissions
	}
	return json.Marshal(toSerialize)
}

type NullableClusterUpdatePermissions struct {
	value *ClusterUpdatePermissions
	isSet bool
}

func (v NullableClusterUpdatePermissions) Get() *ClusterUpdatePermissions {
	return v.value
}

func (v *NullableClusterUpdatePermissions) Set(val *ClusterUpdatePermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterUpdatePermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterUpdatePermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterUpdatePermissions(val *ClusterUpdatePermissions) *NullableClusterUpdatePermissions {
	return &NullableClusterUpdatePermissions{value: val, isSet: true}
}

func (v NullableClusterUpdatePermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterUpdatePermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


