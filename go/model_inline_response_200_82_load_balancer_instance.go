/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// InlineResponse20082LoadBalancerInstance struct for InlineResponse20082LoadBalancerInstance
type InlineResponse20082LoadBalancerInstance struct {
	Id *int64 `json:"id,omitempty"`
	LoadBalancer *InlineResponse20079LoadBalancerMonitorLoadBalancer `json:"loadBalancer,omitempty"`
	Instance NullableString `json:"instance,omitempty"`
	Description NullableString `json:"description,omitempty"`
	InternalId *string `json:"internalId,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	Active *bool `json:"active,omitempty"`
	Sticky *bool `json:"sticky,omitempty"`
	SslEnabled NullableString `json:"sslEnabled,omitempty"`
	ExternalAddress *bool `json:"externalAddress,omitempty"`
	BackendPort NullableString `json:"backendPort,omitempty"`
	VipType NullableString `json:"vipType,omitempty"`
	VipAddress *string `json:"vipAddress,omitempty"`
	VipHostname NullableString `json:"vipHostname,omitempty"`
	VipProtocol *string `json:"vipProtocol,omitempty"`
	VipScheme NullableString `json:"vipScheme,omitempty"`
	VipMode NullableString `json:"vipMode,omitempty"`
	VipName *string `json:"vipName,omitempty"`
	VipPort *int64 `json:"vipPort,omitempty"`
	VipSticky NullableString `json:"vipSticky,omitempty"`
	VipBalance NullableString `json:"vipBalance,omitempty"`
	ServicePort NullableString `json:"servicePort,omitempty"`
	SourceAddress NullableString `json:"sourceAddress,omitempty"`
	SslCert NullableInlineResponse20082LoadBalancerInstanceSslCert `json:"sslCert,omitempty"`
	SslMode NullableString `json:"sslMode,omitempty"`
	SslRedirectMode NullableString `json:"sslRedirectMode,omitempty"`
	VipShared *bool `json:"vipShared,omitempty"`
	VipDirectAddress NullableString `json:"vipDirectAddress,omitempty"`
	ServerName NullableString `json:"serverName,omitempty"`
	PoolName NullableString `json:"poolName,omitempty"`
	Removing *bool `json:"removing,omitempty"`
	VipSource *string `json:"vipSource,omitempty"`
	ExtraConfig NullableString `json:"extraConfig,omitempty"`
	ServiceAccess NullableString `json:"serviceAccess,omitempty"`
	NetworkId NullableString `json:"networkId,omitempty"`
	SubnetId NullableString `json:"subnetId,omitempty"`
	ExternalPortId NullableString `json:"externalPortId,omitempty"`
	Status *string `json:"status,omitempty"`
	VipStatus *string `json:"vipStatus,omitempty"`
}

// NewInlineResponse20082LoadBalancerInstance instantiates a new InlineResponse20082LoadBalancerInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20082LoadBalancerInstance() *InlineResponse20082LoadBalancerInstance {
	this := InlineResponse20082LoadBalancerInstance{}
	return &this
}

// NewInlineResponse20082LoadBalancerInstanceWithDefaults instantiates a new InlineResponse20082LoadBalancerInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20082LoadBalancerInstanceWithDefaults() *InlineResponse20082LoadBalancerInstance {
	this := InlineResponse20082LoadBalancerInstance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20082LoadBalancerInstance) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20082LoadBalancerInstance) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *InlineResponse20082LoadBalancerInstance) SetId(v int64) {
	o.Id = &v
}

// GetLoadBalancer returns the LoadBalancer field value if set, zero value otherwise.
func (o *InlineResponse20082LoadBalancerInstance) GetLoadBalancer() InlineResponse20079LoadBalancerMonitorLoadBalancer {
	if o == nil || o.LoadBalancer == nil {
		var ret InlineResponse20079LoadBalancerMonitorLoadBalancer
		return ret
	}
	return *o.LoadBalancer
}

// GetLoadBalancerOk returns a tuple with the LoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20082LoadBalancerInstance) GetLoadBalancerOk() (*InlineResponse20079LoadBalancerMonitorLoadBalancer, bool) {
	if o == nil || o.LoadBalancer == nil {
		return nil, false
	}
	return o.LoadBalancer, true
}

// HasLoadBalancer returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasLoadBalancer() bool {
	if o != nil && o.LoadBalancer != nil {
		return true
	}

	return false
}

// SetLoadBalancer gets a reference to the given InlineResponse20079LoadBalancerMonitorLoadBalancer and assigns it to the LoadBalancer field.
func (o *InlineResponse20082LoadBalancerInstance) SetLoadBalancer(v InlineResponse20079LoadBalancerMonitorLoadBalancer) {
	o.LoadBalancer = &v
}

// GetInstance returns the Instance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetInstance() string {
	if o == nil || o.Instance.Get() == nil {
		var ret string
		return ret
	}
	return *o.Instance.Get()
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetInstanceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Instance.Get(), o.Instance.IsSet()
}

// HasInstance returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasInstance() bool {
	if o != nil && o.Instance.IsSet() {
		return true
	}

	return false
}

// SetInstance gets a reference to the given NullableString and assigns it to the Instance field.
func (o *InlineResponse20082LoadBalancerInstance) SetInstance(v string) {
	o.Instance.Set(&v)
}
// SetInstanceNil sets the value for Instance to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetInstanceNil() {
	o.Instance.Set(nil)
}

// UnsetInstance ensures that no value is present for Instance, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetInstance() {
	o.Instance.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *InlineResponse20082LoadBalancerInstance) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetDescription() {
	o.Description.Unset()
}

// GetInternalId returns the InternalId field value if set, zero value otherwise.
func (o *InlineResponse20082LoadBalancerInstance) GetInternalId() string {
	if o == nil || o.InternalId == nil {
		var ret string
		return ret
	}
	return *o.InternalId
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20082LoadBalancerInstance) GetInternalIdOk() (*string, bool) {
	if o == nil || o.InternalId == nil {
		return nil, false
	}
	return o.InternalId, true
}

// HasInternalId returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasInternalId() bool {
	if o != nil && o.InternalId != nil {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given string and assigns it to the InternalId field.
func (o *InlineResponse20082LoadBalancerInstance) SetInternalId(v string) {
	o.InternalId = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *InlineResponse20082LoadBalancerInstance) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20082LoadBalancerInstance) GetExternalIdOk() (*string, bool) {
	if o == nil || o.ExternalId == nil {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasExternalId() bool {
	if o != nil && o.ExternalId != nil {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *InlineResponse20082LoadBalancerInstance) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *InlineResponse20082LoadBalancerInstance) GetDateCreated() time.Time {
	if o == nil || o.DateCreated == nil {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20082LoadBalancerInstance) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *InlineResponse20082LoadBalancerInstance) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *InlineResponse20082LoadBalancerInstance) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20082LoadBalancerInstance) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *InlineResponse20082LoadBalancerInstance) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *InlineResponse20082LoadBalancerInstance) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20082LoadBalancerInstance) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *InlineResponse20082LoadBalancerInstance) SetActive(v bool) {
	o.Active = &v
}

// GetSticky returns the Sticky field value if set, zero value otherwise.
func (o *InlineResponse20082LoadBalancerInstance) GetSticky() bool {
	if o == nil || o.Sticky == nil {
		var ret bool
		return ret
	}
	return *o.Sticky
}

// GetStickyOk returns a tuple with the Sticky field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20082LoadBalancerInstance) GetStickyOk() (*bool, bool) {
	if o == nil || o.Sticky == nil {
		return nil, false
	}
	return o.Sticky, true
}

// HasSticky returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasSticky() bool {
	if o != nil && o.Sticky != nil {
		return true
	}

	return false
}

// SetSticky gets a reference to the given bool and assigns it to the Sticky field.
func (o *InlineResponse20082LoadBalancerInstance) SetSticky(v bool) {
	o.Sticky = &v
}

// GetSslEnabled returns the SslEnabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetSslEnabled() string {
	if o == nil || o.SslEnabled.Get() == nil {
		var ret string
		return ret
	}
	return *o.SslEnabled.Get()
}

// GetSslEnabledOk returns a tuple with the SslEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetSslEnabledOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SslEnabled.Get(), o.SslEnabled.IsSet()
}

// HasSslEnabled returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasSslEnabled() bool {
	if o != nil && o.SslEnabled.IsSet() {
		return true
	}

	return false
}

// SetSslEnabled gets a reference to the given NullableString and assigns it to the SslEnabled field.
func (o *InlineResponse20082LoadBalancerInstance) SetSslEnabled(v string) {
	o.SslEnabled.Set(&v)
}
// SetSslEnabledNil sets the value for SslEnabled to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetSslEnabledNil() {
	o.SslEnabled.Set(nil)
}

// UnsetSslEnabled ensures that no value is present for SslEnabled, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetSslEnabled() {
	o.SslEnabled.Unset()
}

// GetExternalAddress returns the ExternalAddress field value if set, zero value otherwise.
func (o *InlineResponse20082LoadBalancerInstance) GetExternalAddress() bool {
	if o == nil || o.ExternalAddress == nil {
		var ret bool
		return ret
	}
	return *o.ExternalAddress
}

// GetExternalAddressOk returns a tuple with the ExternalAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20082LoadBalancerInstance) GetExternalAddressOk() (*bool, bool) {
	if o == nil || o.ExternalAddress == nil {
		return nil, false
	}
	return o.ExternalAddress, true
}

// HasExternalAddress returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasExternalAddress() bool {
	if o != nil && o.ExternalAddress != nil {
		return true
	}

	return false
}

// SetExternalAddress gets a reference to the given bool and assigns it to the ExternalAddress field.
func (o *InlineResponse20082LoadBalancerInstance) SetExternalAddress(v bool) {
	o.ExternalAddress = &v
}

// GetBackendPort returns the BackendPort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetBackendPort() string {
	if o == nil || o.BackendPort.Get() == nil {
		var ret string
		return ret
	}
	return *o.BackendPort.Get()
}

// GetBackendPortOk returns a tuple with the BackendPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetBackendPortOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BackendPort.Get(), o.BackendPort.IsSet()
}

// HasBackendPort returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasBackendPort() bool {
	if o != nil && o.BackendPort.IsSet() {
		return true
	}

	return false
}

// SetBackendPort gets a reference to the given NullableString and assigns it to the BackendPort field.
func (o *InlineResponse20082LoadBalancerInstance) SetBackendPort(v string) {
	o.BackendPort.Set(&v)
}
// SetBackendPortNil sets the value for BackendPort to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetBackendPortNil() {
	o.BackendPort.Set(nil)
}

// UnsetBackendPort ensures that no value is present for BackendPort, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetBackendPort() {
	o.BackendPort.Unset()
}

// GetVipType returns the VipType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetVipType() string {
	if o == nil || o.VipType.Get() == nil {
		var ret string
		return ret
	}
	return *o.VipType.Get()
}

// GetVipTypeOk returns a tuple with the VipType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetVipTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VipType.Get(), o.VipType.IsSet()
}

// HasVipType returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasVipType() bool {
	if o != nil && o.VipType.IsSet() {
		return true
	}

	return false
}

// SetVipType gets a reference to the given NullableString and assigns it to the VipType field.
func (o *InlineResponse20082LoadBalancerInstance) SetVipType(v string) {
	o.VipType.Set(&v)
}
// SetVipTypeNil sets the value for VipType to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetVipTypeNil() {
	o.VipType.Set(nil)
}

// UnsetVipType ensures that no value is present for VipType, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetVipType() {
	o.VipType.Unset()
}

// GetVipAddress returns the VipAddress field value if set, zero value otherwise.
func (o *InlineResponse20082LoadBalancerInstance) GetVipAddress() string {
	if o == nil || o.VipAddress == nil {
		var ret string
		return ret
	}
	return *o.VipAddress
}

// GetVipAddressOk returns a tuple with the VipAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20082LoadBalancerInstance) GetVipAddressOk() (*string, bool) {
	if o == nil || o.VipAddress == nil {
		return nil, false
	}
	return o.VipAddress, true
}

// HasVipAddress returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasVipAddress() bool {
	if o != nil && o.VipAddress != nil {
		return true
	}

	return false
}

// SetVipAddress gets a reference to the given string and assigns it to the VipAddress field.
func (o *InlineResponse20082LoadBalancerInstance) SetVipAddress(v string) {
	o.VipAddress = &v
}

// GetVipHostname returns the VipHostname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetVipHostname() string {
	if o == nil || o.VipHostname.Get() == nil {
		var ret string
		return ret
	}
	return *o.VipHostname.Get()
}

// GetVipHostnameOk returns a tuple with the VipHostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetVipHostnameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VipHostname.Get(), o.VipHostname.IsSet()
}

// HasVipHostname returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasVipHostname() bool {
	if o != nil && o.VipHostname.IsSet() {
		return true
	}

	return false
}

// SetVipHostname gets a reference to the given NullableString and assigns it to the VipHostname field.
func (o *InlineResponse20082LoadBalancerInstance) SetVipHostname(v string) {
	o.VipHostname.Set(&v)
}
// SetVipHostnameNil sets the value for VipHostname to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetVipHostnameNil() {
	o.VipHostname.Set(nil)
}

// UnsetVipHostname ensures that no value is present for VipHostname, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetVipHostname() {
	o.VipHostname.Unset()
}

// GetVipProtocol returns the VipProtocol field value if set, zero value otherwise.
func (o *InlineResponse20082LoadBalancerInstance) GetVipProtocol() string {
	if o == nil || o.VipProtocol == nil {
		var ret string
		return ret
	}
	return *o.VipProtocol
}

// GetVipProtocolOk returns a tuple with the VipProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20082LoadBalancerInstance) GetVipProtocolOk() (*string, bool) {
	if o == nil || o.VipProtocol == nil {
		return nil, false
	}
	return o.VipProtocol, true
}

// HasVipProtocol returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasVipProtocol() bool {
	if o != nil && o.VipProtocol != nil {
		return true
	}

	return false
}

// SetVipProtocol gets a reference to the given string and assigns it to the VipProtocol field.
func (o *InlineResponse20082LoadBalancerInstance) SetVipProtocol(v string) {
	o.VipProtocol = &v
}

// GetVipScheme returns the VipScheme field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetVipScheme() string {
	if o == nil || o.VipScheme.Get() == nil {
		var ret string
		return ret
	}
	return *o.VipScheme.Get()
}

// GetVipSchemeOk returns a tuple with the VipScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetVipSchemeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VipScheme.Get(), o.VipScheme.IsSet()
}

// HasVipScheme returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasVipScheme() bool {
	if o != nil && o.VipScheme.IsSet() {
		return true
	}

	return false
}

// SetVipScheme gets a reference to the given NullableString and assigns it to the VipScheme field.
func (o *InlineResponse20082LoadBalancerInstance) SetVipScheme(v string) {
	o.VipScheme.Set(&v)
}
// SetVipSchemeNil sets the value for VipScheme to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetVipSchemeNil() {
	o.VipScheme.Set(nil)
}

// UnsetVipScheme ensures that no value is present for VipScheme, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetVipScheme() {
	o.VipScheme.Unset()
}

// GetVipMode returns the VipMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetVipMode() string {
	if o == nil || o.VipMode.Get() == nil {
		var ret string
		return ret
	}
	return *o.VipMode.Get()
}

// GetVipModeOk returns a tuple with the VipMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetVipModeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VipMode.Get(), o.VipMode.IsSet()
}

// HasVipMode returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasVipMode() bool {
	if o != nil && o.VipMode.IsSet() {
		return true
	}

	return false
}

// SetVipMode gets a reference to the given NullableString and assigns it to the VipMode field.
func (o *InlineResponse20082LoadBalancerInstance) SetVipMode(v string) {
	o.VipMode.Set(&v)
}
// SetVipModeNil sets the value for VipMode to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetVipModeNil() {
	o.VipMode.Set(nil)
}

// UnsetVipMode ensures that no value is present for VipMode, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetVipMode() {
	o.VipMode.Unset()
}

// GetVipName returns the VipName field value if set, zero value otherwise.
func (o *InlineResponse20082LoadBalancerInstance) GetVipName() string {
	if o == nil || o.VipName == nil {
		var ret string
		return ret
	}
	return *o.VipName
}

// GetVipNameOk returns a tuple with the VipName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20082LoadBalancerInstance) GetVipNameOk() (*string, bool) {
	if o == nil || o.VipName == nil {
		return nil, false
	}
	return o.VipName, true
}

// HasVipName returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasVipName() bool {
	if o != nil && o.VipName != nil {
		return true
	}

	return false
}

// SetVipName gets a reference to the given string and assigns it to the VipName field.
func (o *InlineResponse20082LoadBalancerInstance) SetVipName(v string) {
	o.VipName = &v
}

// GetVipPort returns the VipPort field value if set, zero value otherwise.
func (o *InlineResponse20082LoadBalancerInstance) GetVipPort() int64 {
	if o == nil || o.VipPort == nil {
		var ret int64
		return ret
	}
	return *o.VipPort
}

// GetVipPortOk returns a tuple with the VipPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20082LoadBalancerInstance) GetVipPortOk() (*int64, bool) {
	if o == nil || o.VipPort == nil {
		return nil, false
	}
	return o.VipPort, true
}

// HasVipPort returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasVipPort() bool {
	if o != nil && o.VipPort != nil {
		return true
	}

	return false
}

// SetVipPort gets a reference to the given int64 and assigns it to the VipPort field.
func (o *InlineResponse20082LoadBalancerInstance) SetVipPort(v int64) {
	o.VipPort = &v
}

// GetVipSticky returns the VipSticky field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetVipSticky() string {
	if o == nil || o.VipSticky.Get() == nil {
		var ret string
		return ret
	}
	return *o.VipSticky.Get()
}

// GetVipStickyOk returns a tuple with the VipSticky field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetVipStickyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VipSticky.Get(), o.VipSticky.IsSet()
}

// HasVipSticky returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasVipSticky() bool {
	if o != nil && o.VipSticky.IsSet() {
		return true
	}

	return false
}

// SetVipSticky gets a reference to the given NullableString and assigns it to the VipSticky field.
func (o *InlineResponse20082LoadBalancerInstance) SetVipSticky(v string) {
	o.VipSticky.Set(&v)
}
// SetVipStickyNil sets the value for VipSticky to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetVipStickyNil() {
	o.VipSticky.Set(nil)
}

// UnsetVipSticky ensures that no value is present for VipSticky, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetVipSticky() {
	o.VipSticky.Unset()
}

// GetVipBalance returns the VipBalance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetVipBalance() string {
	if o == nil || o.VipBalance.Get() == nil {
		var ret string
		return ret
	}
	return *o.VipBalance.Get()
}

// GetVipBalanceOk returns a tuple with the VipBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetVipBalanceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VipBalance.Get(), o.VipBalance.IsSet()
}

// HasVipBalance returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasVipBalance() bool {
	if o != nil && o.VipBalance.IsSet() {
		return true
	}

	return false
}

// SetVipBalance gets a reference to the given NullableString and assigns it to the VipBalance field.
func (o *InlineResponse20082LoadBalancerInstance) SetVipBalance(v string) {
	o.VipBalance.Set(&v)
}
// SetVipBalanceNil sets the value for VipBalance to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetVipBalanceNil() {
	o.VipBalance.Set(nil)
}

// UnsetVipBalance ensures that no value is present for VipBalance, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetVipBalance() {
	o.VipBalance.Unset()
}

// GetServicePort returns the ServicePort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetServicePort() string {
	if o == nil || o.ServicePort.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServicePort.Get()
}

// GetServicePortOk returns a tuple with the ServicePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetServicePortOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServicePort.Get(), o.ServicePort.IsSet()
}

// HasServicePort returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasServicePort() bool {
	if o != nil && o.ServicePort.IsSet() {
		return true
	}

	return false
}

// SetServicePort gets a reference to the given NullableString and assigns it to the ServicePort field.
func (o *InlineResponse20082LoadBalancerInstance) SetServicePort(v string) {
	o.ServicePort.Set(&v)
}
// SetServicePortNil sets the value for ServicePort to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetServicePortNil() {
	o.ServicePort.Set(nil)
}

// UnsetServicePort ensures that no value is present for ServicePort, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetServicePort() {
	o.ServicePort.Unset()
}

// GetSourceAddress returns the SourceAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetSourceAddress() string {
	if o == nil || o.SourceAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceAddress.Get()
}

// GetSourceAddressOk returns a tuple with the SourceAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetSourceAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceAddress.Get(), o.SourceAddress.IsSet()
}

// HasSourceAddress returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasSourceAddress() bool {
	if o != nil && o.SourceAddress.IsSet() {
		return true
	}

	return false
}

// SetSourceAddress gets a reference to the given NullableString and assigns it to the SourceAddress field.
func (o *InlineResponse20082LoadBalancerInstance) SetSourceAddress(v string) {
	o.SourceAddress.Set(&v)
}
// SetSourceAddressNil sets the value for SourceAddress to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetSourceAddressNil() {
	o.SourceAddress.Set(nil)
}

// UnsetSourceAddress ensures that no value is present for SourceAddress, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetSourceAddress() {
	o.SourceAddress.Unset()
}

// GetSslCert returns the SslCert field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetSslCert() InlineResponse20082LoadBalancerInstanceSslCert {
	if o == nil || o.SslCert.Get() == nil {
		var ret InlineResponse20082LoadBalancerInstanceSslCert
		return ret
	}
	return *o.SslCert.Get()
}

// GetSslCertOk returns a tuple with the SslCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetSslCertOk() (*InlineResponse20082LoadBalancerInstanceSslCert, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SslCert.Get(), o.SslCert.IsSet()
}

// HasSslCert returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasSslCert() bool {
	if o != nil && o.SslCert.IsSet() {
		return true
	}

	return false
}

// SetSslCert gets a reference to the given NullableInlineResponse20082LoadBalancerInstanceSslCert and assigns it to the SslCert field.
func (o *InlineResponse20082LoadBalancerInstance) SetSslCert(v InlineResponse20082LoadBalancerInstanceSslCert) {
	o.SslCert.Set(&v)
}
// SetSslCertNil sets the value for SslCert to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetSslCertNil() {
	o.SslCert.Set(nil)
}

// UnsetSslCert ensures that no value is present for SslCert, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetSslCert() {
	o.SslCert.Unset()
}

// GetSslMode returns the SslMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetSslMode() string {
	if o == nil || o.SslMode.Get() == nil {
		var ret string
		return ret
	}
	return *o.SslMode.Get()
}

// GetSslModeOk returns a tuple with the SslMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetSslModeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SslMode.Get(), o.SslMode.IsSet()
}

// HasSslMode returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasSslMode() bool {
	if o != nil && o.SslMode.IsSet() {
		return true
	}

	return false
}

// SetSslMode gets a reference to the given NullableString and assigns it to the SslMode field.
func (o *InlineResponse20082LoadBalancerInstance) SetSslMode(v string) {
	o.SslMode.Set(&v)
}
// SetSslModeNil sets the value for SslMode to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetSslModeNil() {
	o.SslMode.Set(nil)
}

// UnsetSslMode ensures that no value is present for SslMode, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetSslMode() {
	o.SslMode.Unset()
}

// GetSslRedirectMode returns the SslRedirectMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetSslRedirectMode() string {
	if o == nil || o.SslRedirectMode.Get() == nil {
		var ret string
		return ret
	}
	return *o.SslRedirectMode.Get()
}

// GetSslRedirectModeOk returns a tuple with the SslRedirectMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetSslRedirectModeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SslRedirectMode.Get(), o.SslRedirectMode.IsSet()
}

// HasSslRedirectMode returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasSslRedirectMode() bool {
	if o != nil && o.SslRedirectMode.IsSet() {
		return true
	}

	return false
}

// SetSslRedirectMode gets a reference to the given NullableString and assigns it to the SslRedirectMode field.
func (o *InlineResponse20082LoadBalancerInstance) SetSslRedirectMode(v string) {
	o.SslRedirectMode.Set(&v)
}
// SetSslRedirectModeNil sets the value for SslRedirectMode to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetSslRedirectModeNil() {
	o.SslRedirectMode.Set(nil)
}

// UnsetSslRedirectMode ensures that no value is present for SslRedirectMode, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetSslRedirectMode() {
	o.SslRedirectMode.Unset()
}

// GetVipShared returns the VipShared field value if set, zero value otherwise.
func (o *InlineResponse20082LoadBalancerInstance) GetVipShared() bool {
	if o == nil || o.VipShared == nil {
		var ret bool
		return ret
	}
	return *o.VipShared
}

// GetVipSharedOk returns a tuple with the VipShared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20082LoadBalancerInstance) GetVipSharedOk() (*bool, bool) {
	if o == nil || o.VipShared == nil {
		return nil, false
	}
	return o.VipShared, true
}

// HasVipShared returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasVipShared() bool {
	if o != nil && o.VipShared != nil {
		return true
	}

	return false
}

// SetVipShared gets a reference to the given bool and assigns it to the VipShared field.
func (o *InlineResponse20082LoadBalancerInstance) SetVipShared(v bool) {
	o.VipShared = &v
}

// GetVipDirectAddress returns the VipDirectAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetVipDirectAddress() string {
	if o == nil || o.VipDirectAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.VipDirectAddress.Get()
}

// GetVipDirectAddressOk returns a tuple with the VipDirectAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetVipDirectAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.VipDirectAddress.Get(), o.VipDirectAddress.IsSet()
}

// HasVipDirectAddress returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasVipDirectAddress() bool {
	if o != nil && o.VipDirectAddress.IsSet() {
		return true
	}

	return false
}

// SetVipDirectAddress gets a reference to the given NullableString and assigns it to the VipDirectAddress field.
func (o *InlineResponse20082LoadBalancerInstance) SetVipDirectAddress(v string) {
	o.VipDirectAddress.Set(&v)
}
// SetVipDirectAddressNil sets the value for VipDirectAddress to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetVipDirectAddressNil() {
	o.VipDirectAddress.Set(nil)
}

// UnsetVipDirectAddress ensures that no value is present for VipDirectAddress, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetVipDirectAddress() {
	o.VipDirectAddress.Unset()
}

// GetServerName returns the ServerName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetServerName() string {
	if o == nil || o.ServerName.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServerName.Get()
}

// GetServerNameOk returns a tuple with the ServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetServerNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServerName.Get(), o.ServerName.IsSet()
}

// HasServerName returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasServerName() bool {
	if o != nil && o.ServerName.IsSet() {
		return true
	}

	return false
}

// SetServerName gets a reference to the given NullableString and assigns it to the ServerName field.
func (o *InlineResponse20082LoadBalancerInstance) SetServerName(v string) {
	o.ServerName.Set(&v)
}
// SetServerNameNil sets the value for ServerName to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetServerNameNil() {
	o.ServerName.Set(nil)
}

// UnsetServerName ensures that no value is present for ServerName, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetServerName() {
	o.ServerName.Unset()
}

// GetPoolName returns the PoolName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetPoolName() string {
	if o == nil || o.PoolName.Get() == nil {
		var ret string
		return ret
	}
	return *o.PoolName.Get()
}

// GetPoolNameOk returns a tuple with the PoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetPoolNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PoolName.Get(), o.PoolName.IsSet()
}

// HasPoolName returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasPoolName() bool {
	if o != nil && o.PoolName.IsSet() {
		return true
	}

	return false
}

// SetPoolName gets a reference to the given NullableString and assigns it to the PoolName field.
func (o *InlineResponse20082LoadBalancerInstance) SetPoolName(v string) {
	o.PoolName.Set(&v)
}
// SetPoolNameNil sets the value for PoolName to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetPoolNameNil() {
	o.PoolName.Set(nil)
}

// UnsetPoolName ensures that no value is present for PoolName, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetPoolName() {
	o.PoolName.Unset()
}

// GetRemoving returns the Removing field value if set, zero value otherwise.
func (o *InlineResponse20082LoadBalancerInstance) GetRemoving() bool {
	if o == nil || o.Removing == nil {
		var ret bool
		return ret
	}
	return *o.Removing
}

// GetRemovingOk returns a tuple with the Removing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20082LoadBalancerInstance) GetRemovingOk() (*bool, bool) {
	if o == nil || o.Removing == nil {
		return nil, false
	}
	return o.Removing, true
}

// HasRemoving returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasRemoving() bool {
	if o != nil && o.Removing != nil {
		return true
	}

	return false
}

// SetRemoving gets a reference to the given bool and assigns it to the Removing field.
func (o *InlineResponse20082LoadBalancerInstance) SetRemoving(v bool) {
	o.Removing = &v
}

// GetVipSource returns the VipSource field value if set, zero value otherwise.
func (o *InlineResponse20082LoadBalancerInstance) GetVipSource() string {
	if o == nil || o.VipSource == nil {
		var ret string
		return ret
	}
	return *o.VipSource
}

// GetVipSourceOk returns a tuple with the VipSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20082LoadBalancerInstance) GetVipSourceOk() (*string, bool) {
	if o == nil || o.VipSource == nil {
		return nil, false
	}
	return o.VipSource, true
}

// HasVipSource returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasVipSource() bool {
	if o != nil && o.VipSource != nil {
		return true
	}

	return false
}

// SetVipSource gets a reference to the given string and assigns it to the VipSource field.
func (o *InlineResponse20082LoadBalancerInstance) SetVipSource(v string) {
	o.VipSource = &v
}

// GetExtraConfig returns the ExtraConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetExtraConfig() string {
	if o == nil || o.ExtraConfig.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExtraConfig.Get()
}

// GetExtraConfigOk returns a tuple with the ExtraConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetExtraConfigOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExtraConfig.Get(), o.ExtraConfig.IsSet()
}

// HasExtraConfig returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasExtraConfig() bool {
	if o != nil && o.ExtraConfig.IsSet() {
		return true
	}

	return false
}

// SetExtraConfig gets a reference to the given NullableString and assigns it to the ExtraConfig field.
func (o *InlineResponse20082LoadBalancerInstance) SetExtraConfig(v string) {
	o.ExtraConfig.Set(&v)
}
// SetExtraConfigNil sets the value for ExtraConfig to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetExtraConfigNil() {
	o.ExtraConfig.Set(nil)
}

// UnsetExtraConfig ensures that no value is present for ExtraConfig, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetExtraConfig() {
	o.ExtraConfig.Unset()
}

// GetServiceAccess returns the ServiceAccess field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetServiceAccess() string {
	if o == nil || o.ServiceAccess.Get() == nil {
		var ret string
		return ret
	}
	return *o.ServiceAccess.Get()
}

// GetServiceAccessOk returns a tuple with the ServiceAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetServiceAccessOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServiceAccess.Get(), o.ServiceAccess.IsSet()
}

// HasServiceAccess returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasServiceAccess() bool {
	if o != nil && o.ServiceAccess.IsSet() {
		return true
	}

	return false
}

// SetServiceAccess gets a reference to the given NullableString and assigns it to the ServiceAccess field.
func (o *InlineResponse20082LoadBalancerInstance) SetServiceAccess(v string) {
	o.ServiceAccess.Set(&v)
}
// SetServiceAccessNil sets the value for ServiceAccess to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetServiceAccessNil() {
	o.ServiceAccess.Set(nil)
}

// UnsetServiceAccess ensures that no value is present for ServiceAccess, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetServiceAccess() {
	o.ServiceAccess.Unset()
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetNetworkId() string {
	if o == nil || o.NetworkId.Get() == nil {
		var ret string
		return ret
	}
	return *o.NetworkId.Get()
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetNetworkIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NetworkId.Get(), o.NetworkId.IsSet()
}

// HasNetworkId returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasNetworkId() bool {
	if o != nil && o.NetworkId.IsSet() {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given NullableString and assigns it to the NetworkId field.
func (o *InlineResponse20082LoadBalancerInstance) SetNetworkId(v string) {
	o.NetworkId.Set(&v)
}
// SetNetworkIdNil sets the value for NetworkId to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetNetworkIdNil() {
	o.NetworkId.Set(nil)
}

// UnsetNetworkId ensures that no value is present for NetworkId, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetNetworkId() {
	o.NetworkId.Unset()
}

// GetSubnetId returns the SubnetId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetSubnetId() string {
	if o == nil || o.SubnetId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SubnetId.Get()
}

// GetSubnetIdOk returns a tuple with the SubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetSubnetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubnetId.Get(), o.SubnetId.IsSet()
}

// HasSubnetId returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasSubnetId() bool {
	if o != nil && o.SubnetId.IsSet() {
		return true
	}

	return false
}

// SetSubnetId gets a reference to the given NullableString and assigns it to the SubnetId field.
func (o *InlineResponse20082LoadBalancerInstance) SetSubnetId(v string) {
	o.SubnetId.Set(&v)
}
// SetSubnetIdNil sets the value for SubnetId to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetSubnetIdNil() {
	o.SubnetId.Set(nil)
}

// UnsetSubnetId ensures that no value is present for SubnetId, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetSubnetId() {
	o.SubnetId.Unset()
}

// GetExternalPortId returns the ExternalPortId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20082LoadBalancerInstance) GetExternalPortId() string {
	if o == nil || o.ExternalPortId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalPortId.Get()
}

// GetExternalPortIdOk returns a tuple with the ExternalPortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20082LoadBalancerInstance) GetExternalPortIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalPortId.Get(), o.ExternalPortId.IsSet()
}

// HasExternalPortId returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasExternalPortId() bool {
	if o != nil && o.ExternalPortId.IsSet() {
		return true
	}

	return false
}

// SetExternalPortId gets a reference to the given NullableString and assigns it to the ExternalPortId field.
func (o *InlineResponse20082LoadBalancerInstance) SetExternalPortId(v string) {
	o.ExternalPortId.Set(&v)
}
// SetExternalPortIdNil sets the value for ExternalPortId to be an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) SetExternalPortIdNil() {
	o.ExternalPortId.Set(nil)
}

// UnsetExternalPortId ensures that no value is present for ExternalPortId, not even an explicit nil
func (o *InlineResponse20082LoadBalancerInstance) UnsetExternalPortId() {
	o.ExternalPortId.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse20082LoadBalancerInstance) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20082LoadBalancerInstance) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse20082LoadBalancerInstance) SetStatus(v string) {
	o.Status = &v
}

// GetVipStatus returns the VipStatus field value if set, zero value otherwise.
func (o *InlineResponse20082LoadBalancerInstance) GetVipStatus() string {
	if o == nil || o.VipStatus == nil {
		var ret string
		return ret
	}
	return *o.VipStatus
}

// GetVipStatusOk returns a tuple with the VipStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20082LoadBalancerInstance) GetVipStatusOk() (*string, bool) {
	if o == nil || o.VipStatus == nil {
		return nil, false
	}
	return o.VipStatus, true
}

// HasVipStatus returns a boolean if a field has been set.
func (o *InlineResponse20082LoadBalancerInstance) HasVipStatus() bool {
	if o != nil && o.VipStatus != nil {
		return true
	}

	return false
}

// SetVipStatus gets a reference to the given string and assigns it to the VipStatus field.
func (o *InlineResponse20082LoadBalancerInstance) SetVipStatus(v string) {
	o.VipStatus = &v
}

func (o InlineResponse20082LoadBalancerInstance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LoadBalancer != nil {
		toSerialize["loadBalancer"] = o.LoadBalancer
	}
	if o.Instance.IsSet() {
		toSerialize["instance"] = o.Instance.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.InternalId != nil {
		toSerialize["internalId"] = o.InternalId
	}
	if o.ExternalId != nil {
		toSerialize["externalId"] = o.ExternalId
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.Sticky != nil {
		toSerialize["sticky"] = o.Sticky
	}
	if o.SslEnabled.IsSet() {
		toSerialize["sslEnabled"] = o.SslEnabled.Get()
	}
	if o.ExternalAddress != nil {
		toSerialize["externalAddress"] = o.ExternalAddress
	}
	if o.BackendPort.IsSet() {
		toSerialize["backendPort"] = o.BackendPort.Get()
	}
	if o.VipType.IsSet() {
		toSerialize["vipType"] = o.VipType.Get()
	}
	if o.VipAddress != nil {
		toSerialize["vipAddress"] = o.VipAddress
	}
	if o.VipHostname.IsSet() {
		toSerialize["vipHostname"] = o.VipHostname.Get()
	}
	if o.VipProtocol != nil {
		toSerialize["vipProtocol"] = o.VipProtocol
	}
	if o.VipScheme.IsSet() {
		toSerialize["vipScheme"] = o.VipScheme.Get()
	}
	if o.VipMode.IsSet() {
		toSerialize["vipMode"] = o.VipMode.Get()
	}
	if o.VipName != nil {
		toSerialize["vipName"] = o.VipName
	}
	if o.VipPort != nil {
		toSerialize["vipPort"] = o.VipPort
	}
	if o.VipSticky.IsSet() {
		toSerialize["vipSticky"] = o.VipSticky.Get()
	}
	if o.VipBalance.IsSet() {
		toSerialize["vipBalance"] = o.VipBalance.Get()
	}
	if o.ServicePort.IsSet() {
		toSerialize["servicePort"] = o.ServicePort.Get()
	}
	if o.SourceAddress.IsSet() {
		toSerialize["sourceAddress"] = o.SourceAddress.Get()
	}
	if o.SslCert.IsSet() {
		toSerialize["sslCert"] = o.SslCert.Get()
	}
	if o.SslMode.IsSet() {
		toSerialize["sslMode"] = o.SslMode.Get()
	}
	if o.SslRedirectMode.IsSet() {
		toSerialize["sslRedirectMode"] = o.SslRedirectMode.Get()
	}
	if o.VipShared != nil {
		toSerialize["vipShared"] = o.VipShared
	}
	if o.VipDirectAddress.IsSet() {
		toSerialize["vipDirectAddress"] = o.VipDirectAddress.Get()
	}
	if o.ServerName.IsSet() {
		toSerialize["serverName"] = o.ServerName.Get()
	}
	if o.PoolName.IsSet() {
		toSerialize["poolName"] = o.PoolName.Get()
	}
	if o.Removing != nil {
		toSerialize["removing"] = o.Removing
	}
	if o.VipSource != nil {
		toSerialize["vipSource"] = o.VipSource
	}
	if o.ExtraConfig.IsSet() {
		toSerialize["extraConfig"] = o.ExtraConfig.Get()
	}
	if o.ServiceAccess.IsSet() {
		toSerialize["serviceAccess"] = o.ServiceAccess.Get()
	}
	if o.NetworkId.IsSet() {
		toSerialize["networkId"] = o.NetworkId.Get()
	}
	if o.SubnetId.IsSet() {
		toSerialize["subnetId"] = o.SubnetId.Get()
	}
	if o.ExternalPortId.IsSet() {
		toSerialize["externalPortId"] = o.ExternalPortId.Get()
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.VipStatus != nil {
		toSerialize["vipStatus"] = o.VipStatus
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20082LoadBalancerInstance struct {
	value *InlineResponse20082LoadBalancerInstance
	isSet bool
}

func (v NullableInlineResponse20082LoadBalancerInstance) Get() *InlineResponse20082LoadBalancerInstance {
	return v.value
}

func (v *NullableInlineResponse20082LoadBalancerInstance) Set(val *InlineResponse20082LoadBalancerInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20082LoadBalancerInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20082LoadBalancerInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20082LoadBalancerInstance(val *InlineResponse20082LoadBalancerInstance) *NullableInlineResponse20082LoadBalancerInstance {
	return &NullableInlineResponse20082LoadBalancerInstance{value: val, isSet: true}
}

func (v NullableInlineResponse20082LoadBalancerInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20082LoadBalancerInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


