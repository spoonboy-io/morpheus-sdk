/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiExecuteSchedulesIdSchedule struct for ApiExecuteSchedulesIdSchedule
type ApiExecuteSchedulesIdSchedule struct {
	// A name for the execute schedule
	Name *string `json:"name,omitempty"`
	// A description for the execute schedule
	Description *string `json:"description,omitempty"`
	// Type of schedule
	ScheduleType *string `json:"scheduleType,omitempty"`
	// Time Zone eg. America/New_York, Europe/Amsterdam, etc.
	ScheduleTimezone *string `json:"scheduleTimezone,omitempty"`
	// Cron Expression. The default is daily at midnight
	Cron *string `json:"cron,omitempty"`
	// Is enabled
	Enabled *bool `json:"enabled,omitempty"`
}

// NewApiExecuteSchedulesIdSchedule instantiates a new ApiExecuteSchedulesIdSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiExecuteSchedulesIdSchedule() *ApiExecuteSchedulesIdSchedule {
	this := ApiExecuteSchedulesIdSchedule{}
	var scheduleTimezone string = "UTC"
	this.ScheduleTimezone = &scheduleTimezone
	var cron string = "0 0 * * *"
	this.Cron = &cron
	var enabled bool = true
	this.Enabled = &enabled
	return &this
}

// NewApiExecuteSchedulesIdScheduleWithDefaults instantiates a new ApiExecuteSchedulesIdSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiExecuteSchedulesIdScheduleWithDefaults() *ApiExecuteSchedulesIdSchedule {
	this := ApiExecuteSchedulesIdSchedule{}
	var scheduleTimezone string = "UTC"
	this.ScheduleTimezone = &scheduleTimezone
	var cron string = "0 0 * * *"
	this.Cron = &cron
	var enabled bool = true
	this.Enabled = &enabled
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiExecuteSchedulesIdSchedule) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExecuteSchedulesIdSchedule) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiExecuteSchedulesIdSchedule) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiExecuteSchedulesIdSchedule) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiExecuteSchedulesIdSchedule) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExecuteSchedulesIdSchedule) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiExecuteSchedulesIdSchedule) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiExecuteSchedulesIdSchedule) SetDescription(v string) {
	o.Description = &v
}

// GetScheduleType returns the ScheduleType field value if set, zero value otherwise.
func (o *ApiExecuteSchedulesIdSchedule) GetScheduleType() string {
	if o == nil || o.ScheduleType == nil {
		var ret string
		return ret
	}
	return *o.ScheduleType
}

// GetScheduleTypeOk returns a tuple with the ScheduleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExecuteSchedulesIdSchedule) GetScheduleTypeOk() (*string, bool) {
	if o == nil || o.ScheduleType == nil {
		return nil, false
	}
	return o.ScheduleType, true
}

// HasScheduleType returns a boolean if a field has been set.
func (o *ApiExecuteSchedulesIdSchedule) HasScheduleType() bool {
	if o != nil && o.ScheduleType != nil {
		return true
	}

	return false
}

// SetScheduleType gets a reference to the given string and assigns it to the ScheduleType field.
func (o *ApiExecuteSchedulesIdSchedule) SetScheduleType(v string) {
	o.ScheduleType = &v
}

// GetScheduleTimezone returns the ScheduleTimezone field value if set, zero value otherwise.
func (o *ApiExecuteSchedulesIdSchedule) GetScheduleTimezone() string {
	if o == nil || o.ScheduleTimezone == nil {
		var ret string
		return ret
	}
	return *o.ScheduleTimezone
}

// GetScheduleTimezoneOk returns a tuple with the ScheduleTimezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExecuteSchedulesIdSchedule) GetScheduleTimezoneOk() (*string, bool) {
	if o == nil || o.ScheduleTimezone == nil {
		return nil, false
	}
	return o.ScheduleTimezone, true
}

// HasScheduleTimezone returns a boolean if a field has been set.
func (o *ApiExecuteSchedulesIdSchedule) HasScheduleTimezone() bool {
	if o != nil && o.ScheduleTimezone != nil {
		return true
	}

	return false
}

// SetScheduleTimezone gets a reference to the given string and assigns it to the ScheduleTimezone field.
func (o *ApiExecuteSchedulesIdSchedule) SetScheduleTimezone(v string) {
	o.ScheduleTimezone = &v
}

// GetCron returns the Cron field value if set, zero value otherwise.
func (o *ApiExecuteSchedulesIdSchedule) GetCron() string {
	if o == nil || o.Cron == nil {
		var ret string
		return ret
	}
	return *o.Cron
}

// GetCronOk returns a tuple with the Cron field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExecuteSchedulesIdSchedule) GetCronOk() (*string, bool) {
	if o == nil || o.Cron == nil {
		return nil, false
	}
	return o.Cron, true
}

// HasCron returns a boolean if a field has been set.
func (o *ApiExecuteSchedulesIdSchedule) HasCron() bool {
	if o != nil && o.Cron != nil {
		return true
	}

	return false
}

// SetCron gets a reference to the given string and assigns it to the Cron field.
func (o *ApiExecuteSchedulesIdSchedule) SetCron(v string) {
	o.Cron = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ApiExecuteSchedulesIdSchedule) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiExecuteSchedulesIdSchedule) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ApiExecuteSchedulesIdSchedule) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ApiExecuteSchedulesIdSchedule) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o ApiExecuteSchedulesIdSchedule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ScheduleType != nil {
		toSerialize["scheduleType"] = o.ScheduleType
	}
	if o.ScheduleTimezone != nil {
		toSerialize["scheduleTimezone"] = o.ScheduleTimezone
	}
	if o.Cron != nil {
		toSerialize["cron"] = o.Cron
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableApiExecuteSchedulesIdSchedule struct {
	value *ApiExecuteSchedulesIdSchedule
	isSet bool
}

func (v NullableApiExecuteSchedulesIdSchedule) Get() *ApiExecuteSchedulesIdSchedule {
	return v.value
}

func (v *NullableApiExecuteSchedulesIdSchedule) Set(val *ApiExecuteSchedulesIdSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableApiExecuteSchedulesIdSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableApiExecuteSchedulesIdSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiExecuteSchedulesIdSchedule(val *ApiExecuteSchedulesIdSchedule) *NullableApiExecuteSchedulesIdSchedule {
	return &NullableApiExecuteSchedulesIdSchedule{value: val, isSet: true}
}

func (v NullableApiExecuteSchedulesIdSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiExecuteSchedulesIdSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


