/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InstanceCreateNetwork struct for InstanceCreateNetwork
type InstanceCreateNetwork struct {
	Network InstanceCreateNetworkNetwork `json:"network"`
	// The id of type of the network interface.
	NetworkInterfaceTypeId *int64 `json:"networkInterfaceTypeId,omitempty"`
	// The ip address. Not applicable when using DHCP or IP Pools.
	IpAddress *string `json:"ipAddress,omitempty"`
	// The interface id. Applicable when resizing and you want to identify an interface to update that already exists.
	Id *int64 `json:"id,omitempty"`
}

// NewInstanceCreateNetwork instantiates a new InstanceCreateNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceCreateNetwork(network InstanceCreateNetworkNetwork, ) *InstanceCreateNetwork {
	this := InstanceCreateNetwork{}
	this.Network = network
	return &this
}

// NewInstanceCreateNetworkWithDefaults instantiates a new InstanceCreateNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceCreateNetworkWithDefaults() *InstanceCreateNetwork {
	this := InstanceCreateNetwork{}
	return &this
}

// GetNetwork returns the Network field value
func (o *InstanceCreateNetwork) GetNetwork() InstanceCreateNetworkNetwork {
	if o == nil  {
		var ret InstanceCreateNetworkNetwork
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *InstanceCreateNetwork) GetNetworkOk() (*InstanceCreateNetworkNetwork, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *InstanceCreateNetwork) SetNetwork(v InstanceCreateNetworkNetwork) {
	o.Network = v
}

// GetNetworkInterfaceTypeId returns the NetworkInterfaceTypeId field value if set, zero value otherwise.
func (o *InstanceCreateNetwork) GetNetworkInterfaceTypeId() int64 {
	if o == nil || o.NetworkInterfaceTypeId == nil {
		var ret int64
		return ret
	}
	return *o.NetworkInterfaceTypeId
}

// GetNetworkInterfaceTypeIdOk returns a tuple with the NetworkInterfaceTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceCreateNetwork) GetNetworkInterfaceTypeIdOk() (*int64, bool) {
	if o == nil || o.NetworkInterfaceTypeId == nil {
		return nil, false
	}
	return o.NetworkInterfaceTypeId, true
}

// HasNetworkInterfaceTypeId returns a boolean if a field has been set.
func (o *InstanceCreateNetwork) HasNetworkInterfaceTypeId() bool {
	if o != nil && o.NetworkInterfaceTypeId != nil {
		return true
	}

	return false
}

// SetNetworkInterfaceTypeId gets a reference to the given int64 and assigns it to the NetworkInterfaceTypeId field.
func (o *InstanceCreateNetwork) SetNetworkInterfaceTypeId(v int64) {
	o.NetworkInterfaceTypeId = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *InstanceCreateNetwork) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceCreateNetwork) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *InstanceCreateNetwork) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *InstanceCreateNetwork) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InstanceCreateNetwork) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstanceCreateNetwork) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InstanceCreateNetwork) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *InstanceCreateNetwork) SetId(v int64) {
	o.Id = &v
}

func (o InstanceCreateNetwork) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["network"] = o.Network
	}
	if o.NetworkInterfaceTypeId != nil {
		toSerialize["networkInterfaceTypeId"] = o.NetworkInterfaceTypeId
	}
	if o.IpAddress != nil {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableInstanceCreateNetwork struct {
	value *InstanceCreateNetwork
	isSet bool
}

func (v NullableInstanceCreateNetwork) Get() *InstanceCreateNetwork {
	return v.value
}

func (v *NullableInstanceCreateNetwork) Set(val *InstanceCreateNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceCreateNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceCreateNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceCreateNetwork(val *InstanceCreateNetwork) *NullableInstanceCreateNetwork {
	return &NullableInstanceCreateNetwork{value: val, isSet: true}
}

func (v NullableInstanceCreateNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceCreateNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


