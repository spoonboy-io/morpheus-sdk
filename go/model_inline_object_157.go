/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject157 struct for InlineObject157
type InlineObject157 struct {
	NetworkRouterNAT *ApiNetworksRoutersRouterIdNatsIdNetworkRouterNAT `json:"networkRouterNAT,omitempty"`
}

// NewInlineObject157 instantiates a new InlineObject157 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject157() *InlineObject157 {
	this := InlineObject157{}
	return &this
}

// NewInlineObject157WithDefaults instantiates a new InlineObject157 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject157WithDefaults() *InlineObject157 {
	this := InlineObject157{}
	return &this
}

// GetNetworkRouterNAT returns the NetworkRouterNAT field value if set, zero value otherwise.
func (o *InlineObject157) GetNetworkRouterNAT() ApiNetworksRoutersRouterIdNatsIdNetworkRouterNAT {
	if o == nil || o.NetworkRouterNAT == nil {
		var ret ApiNetworksRoutersRouterIdNatsIdNetworkRouterNAT
		return ret
	}
	return *o.NetworkRouterNAT
}

// GetNetworkRouterNATOk returns a tuple with the NetworkRouterNAT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject157) GetNetworkRouterNATOk() (*ApiNetworksRoutersRouterIdNatsIdNetworkRouterNAT, bool) {
	if o == nil || o.NetworkRouterNAT == nil {
		return nil, false
	}
	return o.NetworkRouterNAT, true
}

// HasNetworkRouterNAT returns a boolean if a field has been set.
func (o *InlineObject157) HasNetworkRouterNAT() bool {
	if o != nil && o.NetworkRouterNAT != nil {
		return true
	}

	return false
}

// SetNetworkRouterNAT gets a reference to the given ApiNetworksRoutersRouterIdNatsIdNetworkRouterNAT and assigns it to the NetworkRouterNAT field.
func (o *InlineObject157) SetNetworkRouterNAT(v ApiNetworksRoutersRouterIdNatsIdNetworkRouterNAT) {
	o.NetworkRouterNAT = &v
}

func (o InlineObject157) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkRouterNAT != nil {
		toSerialize["networkRouterNAT"] = o.NetworkRouterNAT
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject157 struct {
	value *InlineObject157
	isSet bool
}

func (v NullableInlineObject157) Get() *InlineObject157 {
	return v.value
}

func (v *NullableInlineObject157) Set(val *InlineObject157) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject157) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject157) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject157(val *InlineObject157) *NullableInlineObject157 {
	return &NullableInlineObject157{value: val, isSet: true}
}

func (v NullableInlineObject157) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject157) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


