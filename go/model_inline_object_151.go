/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject151 struct for InlineObject151
type InlineObject151 struct {
	// For a full list of available BGP Neighbor options, see bgpOptionTypes in the specific Network Router Type
	NetworkRouterBgpNeighbor *map[string]interface{} `json:"networkRouterBgpNeighbor,omitempty"`
}

// NewInlineObject151 instantiates a new InlineObject151 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject151() *InlineObject151 {
	this := InlineObject151{}
	return &this
}

// NewInlineObject151WithDefaults instantiates a new InlineObject151 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject151WithDefaults() *InlineObject151 {
	this := InlineObject151{}
	return &this
}

// GetNetworkRouterBgpNeighbor returns the NetworkRouterBgpNeighbor field value if set, zero value otherwise.
func (o *InlineObject151) GetNetworkRouterBgpNeighbor() map[string]interface{} {
	if o == nil || o.NetworkRouterBgpNeighbor == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.NetworkRouterBgpNeighbor
}

// GetNetworkRouterBgpNeighborOk returns a tuple with the NetworkRouterBgpNeighbor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject151) GetNetworkRouterBgpNeighborOk() (*map[string]interface{}, bool) {
	if o == nil || o.NetworkRouterBgpNeighbor == nil {
		return nil, false
	}
	return o.NetworkRouterBgpNeighbor, true
}

// HasNetworkRouterBgpNeighbor returns a boolean if a field has been set.
func (o *InlineObject151) HasNetworkRouterBgpNeighbor() bool {
	if o != nil && o.NetworkRouterBgpNeighbor != nil {
		return true
	}

	return false
}

// SetNetworkRouterBgpNeighbor gets a reference to the given map[string]interface{} and assigns it to the NetworkRouterBgpNeighbor field.
func (o *InlineObject151) SetNetworkRouterBgpNeighbor(v map[string]interface{}) {
	o.NetworkRouterBgpNeighbor = &v
}

func (o InlineObject151) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkRouterBgpNeighbor != nil {
		toSerialize["networkRouterBgpNeighbor"] = o.NetworkRouterBgpNeighbor
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject151 struct {
	value *InlineObject151
	isSet bool
}

func (v NullableInlineObject151) Get() *InlineObject151 {
	return v.value
}

func (v *NullableInlineObject151) Set(val *InlineObject151) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject151) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject151) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject151(val *InlineObject151) *NullableInlineObject151 {
	return &NullableInlineObject151{value: val, isSet: true}
}

func (v NullableInlineObject151) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject151) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


