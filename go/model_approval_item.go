/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApprovalItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApprovalItem{}

// ApprovalItem struct for ApprovalItem
type ApprovalItem struct {
	ApprovalItem *ApprovalItemApprovalItem `json:"approvalItem,omitempty"`
}

// NewApprovalItem instantiates a new ApprovalItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApprovalItem() *ApprovalItem {
	this := ApprovalItem{}
	return &this
}

// NewApprovalItemWithDefaults instantiates a new ApprovalItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApprovalItemWithDefaults() *ApprovalItem {
	this := ApprovalItem{}
	return &this
}

// GetApprovalItem returns the ApprovalItem field value if set, zero value otherwise.
func (o *ApprovalItem) GetApprovalItem() ApprovalItemApprovalItem {
	if o == nil || IsNil(o.ApprovalItem) {
		var ret ApprovalItemApprovalItem
		return ret
	}
	return *o.ApprovalItem
}

// GetApprovalItemOk returns a tuple with the ApprovalItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalItem) GetApprovalItemOk() (*ApprovalItemApprovalItem, bool) {
	if o == nil || IsNil(o.ApprovalItem) {
		return nil, false
	}
	return o.ApprovalItem, true
}

// HasApprovalItem returns a boolean if a field has been set.
func (o *ApprovalItem) HasApprovalItem() bool {
	if o != nil && !IsNil(o.ApprovalItem) {
		return true
	}

	return false
}

// SetApprovalItem gets a reference to the given ApprovalItemApprovalItem and assigns it to the ApprovalItem field.
func (o *ApprovalItem) SetApprovalItem(v ApprovalItemApprovalItem) {
	o.ApprovalItem = &v
}

func (o ApprovalItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApprovalItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApprovalItem) {
		toSerialize["approvalItem"] = o.ApprovalItem
	}
	return toSerialize, nil
}

type NullableApprovalItem struct {
	value *ApprovalItem
	isSet bool
}

func (v NullableApprovalItem) Get() *ApprovalItem {
	return v.value
}

func (v *NullableApprovalItem) Set(val *ApprovalItem) {
	v.value = val
	v.isSet = true
}

func (v NullableApprovalItem) IsSet() bool {
	return v.isSet
}

func (v *NullableApprovalItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApprovalItem(val *ApprovalItem) *NullableApprovalItem {
	return &NullableApprovalItem{value: val, isSet: true}
}

func (v NullableApprovalItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApprovalItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


