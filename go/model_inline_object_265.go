/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject265 struct for InlineObject265
type InlineObject265 struct {
	WhitelabelSettings *WhitelabelSettingsUpdate `json:"whitelabelSettings,omitempty"`
}

// NewInlineObject265 instantiates a new InlineObject265 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject265() *InlineObject265 {
	this := InlineObject265{}
	return &this
}

// NewInlineObject265WithDefaults instantiates a new InlineObject265 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject265WithDefaults() *InlineObject265 {
	this := InlineObject265{}
	return &this
}

// GetWhitelabelSettings returns the WhitelabelSettings field value if set, zero value otherwise.
func (o *InlineObject265) GetWhitelabelSettings() WhitelabelSettingsUpdate {
	if o == nil || o.WhitelabelSettings == nil {
		var ret WhitelabelSettingsUpdate
		return ret
	}
	return *o.WhitelabelSettings
}

// GetWhitelabelSettingsOk returns a tuple with the WhitelabelSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject265) GetWhitelabelSettingsOk() (*WhitelabelSettingsUpdate, bool) {
	if o == nil || o.WhitelabelSettings == nil {
		return nil, false
	}
	return o.WhitelabelSettings, true
}

// HasWhitelabelSettings returns a boolean if a field has been set.
func (o *InlineObject265) HasWhitelabelSettings() bool {
	if o != nil && o.WhitelabelSettings != nil {
		return true
	}

	return false
}

// SetWhitelabelSettings gets a reference to the given WhitelabelSettingsUpdate and assigns it to the WhitelabelSettings field.
func (o *InlineObject265) SetWhitelabelSettings(v WhitelabelSettingsUpdate) {
	o.WhitelabelSettings = &v
}

func (o InlineObject265) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WhitelabelSettings != nil {
		toSerialize["whitelabelSettings"] = o.WhitelabelSettings
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject265 struct {
	value *InlineObject265
	isSet bool
}

func (v NullableInlineObject265) Get() *InlineObject265 {
	return v.value
}

func (v *NullableInlineObject265) Set(val *InlineObject265) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject265) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject265) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject265(val *InlineObject265) *NullableInlineObject265 {
	return &NullableInlineObject265{value: val, isSet: true}
}

func (v NullableInlineObject265) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject265) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


