/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20069 struct for InlineResponse20069
type InlineResponse20069 struct {
	ContainerType *ContainerType `json:"containerType,omitempty"`
}

// NewInlineResponse20069 instantiates a new InlineResponse20069 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20069() *InlineResponse20069 {
	this := InlineResponse20069{}
	return &this
}

// NewInlineResponse20069WithDefaults instantiates a new InlineResponse20069 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20069WithDefaults() *InlineResponse20069 {
	this := InlineResponse20069{}
	return &this
}

// GetContainerType returns the ContainerType field value if set, zero value otherwise.
func (o *InlineResponse20069) GetContainerType() ContainerType {
	if o == nil || o.ContainerType == nil {
		var ret ContainerType
		return ret
	}
	return *o.ContainerType
}

// GetContainerTypeOk returns a tuple with the ContainerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20069) GetContainerTypeOk() (*ContainerType, bool) {
	if o == nil || o.ContainerType == nil {
		return nil, false
	}
	return o.ContainerType, true
}

// HasContainerType returns a boolean if a field has been set.
func (o *InlineResponse20069) HasContainerType() bool {
	if o != nil && o.ContainerType != nil {
		return true
	}

	return false
}

// SetContainerType gets a reference to the given ContainerType and assigns it to the ContainerType field.
func (o *InlineResponse20069) SetContainerType(v ContainerType) {
	o.ContainerType = &v
}

func (o InlineResponse20069) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContainerType != nil {
		toSerialize["containerType"] = o.ContainerType
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20069 struct {
	value *InlineResponse20069
	isSet bool
}

func (v NullableInlineResponse20069) Get() *InlineResponse20069 {
	return v.value
}

func (v *NullableInlineResponse20069) Set(val *InlineResponse20069) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20069) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20069) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20069(val *InlineResponse20069) *NullableInlineResponse20069 {
	return &NullableInlineResponse20069{value: val, isSet: true}
}

func (v NullableInlineResponse20069) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20069) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


