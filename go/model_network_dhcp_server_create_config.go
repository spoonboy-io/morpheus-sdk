/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetworkDhcpServerCreateConfig Configuration object with parameters that vary by pool type.
type NetworkDhcpServerCreateConfig struct {
	// Edge Cluster
	EdgeCluster *string `json:"edgeCluster,omitempty"`
	// Active Edge Node Options obtained by calling option source with :optionSource = nsxtEdgeNodes and networkServerId param
	PreferredEdgeNode1 *string `json:"preferredEdgeNode1,omitempty"`
	// Standby Edge Node Options obtained by calling option source with optionSource = nsxtEdgeNodes and networkServerId param
	PreferredEdgeNode2 *string `json:"preferredEdgeNode2,omitempty"`
}

// NewNetworkDhcpServerCreateConfig instantiates a new NetworkDhcpServerCreateConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkDhcpServerCreateConfig() *NetworkDhcpServerCreateConfig {
	this := NetworkDhcpServerCreateConfig{}
	return &this
}

// NewNetworkDhcpServerCreateConfigWithDefaults instantiates a new NetworkDhcpServerCreateConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkDhcpServerCreateConfigWithDefaults() *NetworkDhcpServerCreateConfig {
	this := NetworkDhcpServerCreateConfig{}
	return &this
}

// GetEdgeCluster returns the EdgeCluster field value if set, zero value otherwise.
func (o *NetworkDhcpServerCreateConfig) GetEdgeCluster() string {
	if o == nil || o.EdgeCluster == nil {
		var ret string
		return ret
	}
	return *o.EdgeCluster
}

// GetEdgeClusterOk returns a tuple with the EdgeCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDhcpServerCreateConfig) GetEdgeClusterOk() (*string, bool) {
	if o == nil || o.EdgeCluster == nil {
		return nil, false
	}
	return o.EdgeCluster, true
}

// HasEdgeCluster returns a boolean if a field has been set.
func (o *NetworkDhcpServerCreateConfig) HasEdgeCluster() bool {
	if o != nil && o.EdgeCluster != nil {
		return true
	}

	return false
}

// SetEdgeCluster gets a reference to the given string and assigns it to the EdgeCluster field.
func (o *NetworkDhcpServerCreateConfig) SetEdgeCluster(v string) {
	o.EdgeCluster = &v
}

// GetPreferredEdgeNode1 returns the PreferredEdgeNode1 field value if set, zero value otherwise.
func (o *NetworkDhcpServerCreateConfig) GetPreferredEdgeNode1() string {
	if o == nil || o.PreferredEdgeNode1 == nil {
		var ret string
		return ret
	}
	return *o.PreferredEdgeNode1
}

// GetPreferredEdgeNode1Ok returns a tuple with the PreferredEdgeNode1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDhcpServerCreateConfig) GetPreferredEdgeNode1Ok() (*string, bool) {
	if o == nil || o.PreferredEdgeNode1 == nil {
		return nil, false
	}
	return o.PreferredEdgeNode1, true
}

// HasPreferredEdgeNode1 returns a boolean if a field has been set.
func (o *NetworkDhcpServerCreateConfig) HasPreferredEdgeNode1() bool {
	if o != nil && o.PreferredEdgeNode1 != nil {
		return true
	}

	return false
}

// SetPreferredEdgeNode1 gets a reference to the given string and assigns it to the PreferredEdgeNode1 field.
func (o *NetworkDhcpServerCreateConfig) SetPreferredEdgeNode1(v string) {
	o.PreferredEdgeNode1 = &v
}

// GetPreferredEdgeNode2 returns the PreferredEdgeNode2 field value if set, zero value otherwise.
func (o *NetworkDhcpServerCreateConfig) GetPreferredEdgeNode2() string {
	if o == nil || o.PreferredEdgeNode2 == nil {
		var ret string
		return ret
	}
	return *o.PreferredEdgeNode2
}

// GetPreferredEdgeNode2Ok returns a tuple with the PreferredEdgeNode2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDhcpServerCreateConfig) GetPreferredEdgeNode2Ok() (*string, bool) {
	if o == nil || o.PreferredEdgeNode2 == nil {
		return nil, false
	}
	return o.PreferredEdgeNode2, true
}

// HasPreferredEdgeNode2 returns a boolean if a field has been set.
func (o *NetworkDhcpServerCreateConfig) HasPreferredEdgeNode2() bool {
	if o != nil && o.PreferredEdgeNode2 != nil {
		return true
	}

	return false
}

// SetPreferredEdgeNode2 gets a reference to the given string and assigns it to the PreferredEdgeNode2 field.
func (o *NetworkDhcpServerCreateConfig) SetPreferredEdgeNode2(v string) {
	o.PreferredEdgeNode2 = &v
}

func (o NetworkDhcpServerCreateConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EdgeCluster != nil {
		toSerialize["edgeCluster"] = o.EdgeCluster
	}
	if o.PreferredEdgeNode1 != nil {
		toSerialize["preferredEdgeNode1"] = o.PreferredEdgeNode1
	}
	if o.PreferredEdgeNode2 != nil {
		toSerialize["preferredEdgeNode2"] = o.PreferredEdgeNode2
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkDhcpServerCreateConfig struct {
	value *NetworkDhcpServerCreateConfig
	isSet bool
}

func (v NullableNetworkDhcpServerCreateConfig) Get() *NetworkDhcpServerCreateConfig {
	return v.value
}

func (v *NullableNetworkDhcpServerCreateConfig) Set(val *NetworkDhcpServerCreateConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkDhcpServerCreateConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkDhcpServerCreateConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkDhcpServerCreateConfig(val *NetworkDhcpServerCreateConfig) *NullableNetworkDhcpServerCreateConfig {
	return &NullableNetworkDhcpServerCreateConfig{value: val, isSet: true}
}

func (v NullableNetworkDhcpServerCreateConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkDhcpServerCreateConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


