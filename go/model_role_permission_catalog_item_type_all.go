/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RolePermissionCatalogItemTypeAll struct for RolePermissionCatalogItemTypeAll
type RolePermissionCatalogItemTypeAll struct {
	// Apply to all catalog item types
	AllCatalogItemTypes bool `json:"allCatalogItemTypes"`
	// The new access level.
	Access string `json:"access"`
}

// NewRolePermissionCatalogItemTypeAll instantiates a new RolePermissionCatalogItemTypeAll object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRolePermissionCatalogItemTypeAll(allCatalogItemTypes bool, access string, ) *RolePermissionCatalogItemTypeAll {
	this := RolePermissionCatalogItemTypeAll{}
	this.AllCatalogItemTypes = allCatalogItemTypes
	this.Access = access
	return &this
}

// NewRolePermissionCatalogItemTypeAllWithDefaults instantiates a new RolePermissionCatalogItemTypeAll object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolePermissionCatalogItemTypeAllWithDefaults() *RolePermissionCatalogItemTypeAll {
	this := RolePermissionCatalogItemTypeAll{}
	return &this
}

// GetAllCatalogItemTypes returns the AllCatalogItemTypes field value
func (o *RolePermissionCatalogItemTypeAll) GetAllCatalogItemTypes() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.AllCatalogItemTypes
}

// GetAllCatalogItemTypesOk returns a tuple with the AllCatalogItemTypes field value
// and a boolean to check if the value has been set.
func (o *RolePermissionCatalogItemTypeAll) GetAllCatalogItemTypesOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AllCatalogItemTypes, true
}

// SetAllCatalogItemTypes sets field value
func (o *RolePermissionCatalogItemTypeAll) SetAllCatalogItemTypes(v bool) {
	o.AllCatalogItemTypes = v
}

// GetAccess returns the Access field value
func (o *RolePermissionCatalogItemTypeAll) GetAccess() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Access
}

// GetAccessOk returns a tuple with the Access field value
// and a boolean to check if the value has been set.
func (o *RolePermissionCatalogItemTypeAll) GetAccessOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Access, true
}

// SetAccess sets field value
func (o *RolePermissionCatalogItemTypeAll) SetAccess(v string) {
	o.Access = v
}

func (o RolePermissionCatalogItemTypeAll) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["allCatalogItemTypes"] = o.AllCatalogItemTypes
	}
	if true {
		toSerialize["access"] = o.Access
	}
	return json.Marshal(toSerialize)
}

type NullableRolePermissionCatalogItemTypeAll struct {
	value *RolePermissionCatalogItemTypeAll
	isSet bool
}

func (v NullableRolePermissionCatalogItemTypeAll) Get() *RolePermissionCatalogItemTypeAll {
	return v.value
}

func (v *NullableRolePermissionCatalogItemTypeAll) Set(val *RolePermissionCatalogItemTypeAll) {
	v.value = val
	v.isSet = true
}

func (v NullableRolePermissionCatalogItemTypeAll) IsSet() bool {
	return v.isSet
}

func (v *NullableRolePermissionCatalogItemTypeAll) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRolePermissionCatalogItemTypeAll(val *RolePermissionCatalogItemTypeAll) *NullableRolePermissionCatalogItemTypeAll {
	return &NullableRolePermissionCatalogItemTypeAll{value: val, isSet: true}
}

func (v NullableRolePermissionCatalogItemTypeAll) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRolePermissionCatalogItemTypeAll) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


