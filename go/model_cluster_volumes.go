/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClusterVolumes struct for ClusterVolumes
type ClusterVolumes struct {
	Id *int64 `json:"id,omitempty"`
	InternalId *string `json:"internalId,omitempty"`
	DisplayOrder *int64 `json:"displayOrder,omitempty"`
	Active *bool `json:"active,omitempty"`
	UsedStorage *int64 `json:"usedStorage,omitempty"`
	ProvisionType *string `json:"provisionType,omitempty"`
	Resizeable *bool `json:"resizeable,omitempty"`
	Online *bool `json:"online,omitempty"`
	DeviceDisplayName *string `json:"deviceDisplayName,omitempty"`
	RefType *string `json:"refType,omitempty"`
	Name *string `json:"name,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	DatastoreOption *string `json:"datastoreOption,omitempty"`
	ClaimName *string `json:"claimName,omitempty"`
	VolumeType *string `json:"volumeType,omitempty"`
	DeviceName *string `json:"deviceName,omitempty"`
	Removable *bool `json:"removable,omitempty"`
	PoolName *string `json:"poolName,omitempty"`
	ReadOnly *bool `json:"readOnly,omitempty"`
	SourceId *string `json:"sourceId,omitempty"`
	ZoneId *int64 `json:"zoneId,omitempty"`
	RootVolume *bool `json:"rootVolume,omitempty"`
	RefId *int64 `json:"refId,omitempty"`
	Category *string `json:"category,omitempty"`
	Status *string `json:"status,omitempty"`
	RawData *string `json:"rawData,omitempty"`
	MaxStorage *int64 `json:"maxStorage,omitempty"`
	Account *ApiBlueprintsIdUpdatePermissionsResourcePermissionSites `json:"account,omitempty"`
	Type *ApiBlueprintsIdUpdatePermissionsResourcePermissionSites `json:"type,omitempty"`
	Datastore *ApiBlueprintsIdUpdatePermissionsResourcePermissionSites `json:"datastore,omitempty"`
}

// NewClusterVolumes instantiates a new ClusterVolumes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterVolumes() *ClusterVolumes {
	this := ClusterVolumes{}
	return &this
}

// NewClusterVolumesWithDefaults instantiates a new ClusterVolumes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterVolumesWithDefaults() *ClusterVolumes {
	this := ClusterVolumes{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClusterVolumes) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClusterVolumes) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ClusterVolumes) SetId(v int64) {
	o.Id = &v
}

// GetInternalId returns the InternalId field value if set, zero value otherwise.
func (o *ClusterVolumes) GetInternalId() string {
	if o == nil || o.InternalId == nil {
		var ret string
		return ret
	}
	return *o.InternalId
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetInternalIdOk() (*string, bool) {
	if o == nil || o.InternalId == nil {
		return nil, false
	}
	return o.InternalId, true
}

// HasInternalId returns a boolean if a field has been set.
func (o *ClusterVolumes) HasInternalId() bool {
	if o != nil && o.InternalId != nil {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given string and assigns it to the InternalId field.
func (o *ClusterVolumes) SetInternalId(v string) {
	o.InternalId = &v
}

// GetDisplayOrder returns the DisplayOrder field value if set, zero value otherwise.
func (o *ClusterVolumes) GetDisplayOrder() int64 {
	if o == nil || o.DisplayOrder == nil {
		var ret int64
		return ret
	}
	return *o.DisplayOrder
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetDisplayOrderOk() (*int64, bool) {
	if o == nil || o.DisplayOrder == nil {
		return nil, false
	}
	return o.DisplayOrder, true
}

// HasDisplayOrder returns a boolean if a field has been set.
func (o *ClusterVolumes) HasDisplayOrder() bool {
	if o != nil && o.DisplayOrder != nil {
		return true
	}

	return false
}

// SetDisplayOrder gets a reference to the given int64 and assigns it to the DisplayOrder field.
func (o *ClusterVolumes) SetDisplayOrder(v int64) {
	o.DisplayOrder = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ClusterVolumes) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ClusterVolumes) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *ClusterVolumes) SetActive(v bool) {
	o.Active = &v
}

// GetUsedStorage returns the UsedStorage field value if set, zero value otherwise.
func (o *ClusterVolumes) GetUsedStorage() int64 {
	if o == nil || o.UsedStorage == nil {
		var ret int64
		return ret
	}
	return *o.UsedStorage
}

// GetUsedStorageOk returns a tuple with the UsedStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetUsedStorageOk() (*int64, bool) {
	if o == nil || o.UsedStorage == nil {
		return nil, false
	}
	return o.UsedStorage, true
}

// HasUsedStorage returns a boolean if a field has been set.
func (o *ClusterVolumes) HasUsedStorage() bool {
	if o != nil && o.UsedStorage != nil {
		return true
	}

	return false
}

// SetUsedStorage gets a reference to the given int64 and assigns it to the UsedStorage field.
func (o *ClusterVolumes) SetUsedStorage(v int64) {
	o.UsedStorage = &v
}

// GetProvisionType returns the ProvisionType field value if set, zero value otherwise.
func (o *ClusterVolumes) GetProvisionType() string {
	if o == nil || o.ProvisionType == nil {
		var ret string
		return ret
	}
	return *o.ProvisionType
}

// GetProvisionTypeOk returns a tuple with the ProvisionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetProvisionTypeOk() (*string, bool) {
	if o == nil || o.ProvisionType == nil {
		return nil, false
	}
	return o.ProvisionType, true
}

// HasProvisionType returns a boolean if a field has been set.
func (o *ClusterVolumes) HasProvisionType() bool {
	if o != nil && o.ProvisionType != nil {
		return true
	}

	return false
}

// SetProvisionType gets a reference to the given string and assigns it to the ProvisionType field.
func (o *ClusterVolumes) SetProvisionType(v string) {
	o.ProvisionType = &v
}

// GetResizeable returns the Resizeable field value if set, zero value otherwise.
func (o *ClusterVolumes) GetResizeable() bool {
	if o == nil || o.Resizeable == nil {
		var ret bool
		return ret
	}
	return *o.Resizeable
}

// GetResizeableOk returns a tuple with the Resizeable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetResizeableOk() (*bool, bool) {
	if o == nil || o.Resizeable == nil {
		return nil, false
	}
	return o.Resizeable, true
}

// HasResizeable returns a boolean if a field has been set.
func (o *ClusterVolumes) HasResizeable() bool {
	if o != nil && o.Resizeable != nil {
		return true
	}

	return false
}

// SetResizeable gets a reference to the given bool and assigns it to the Resizeable field.
func (o *ClusterVolumes) SetResizeable(v bool) {
	o.Resizeable = &v
}

// GetOnline returns the Online field value if set, zero value otherwise.
func (o *ClusterVolumes) GetOnline() bool {
	if o == nil || o.Online == nil {
		var ret bool
		return ret
	}
	return *o.Online
}

// GetOnlineOk returns a tuple with the Online field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetOnlineOk() (*bool, bool) {
	if o == nil || o.Online == nil {
		return nil, false
	}
	return o.Online, true
}

// HasOnline returns a boolean if a field has been set.
func (o *ClusterVolumes) HasOnline() bool {
	if o != nil && o.Online != nil {
		return true
	}

	return false
}

// SetOnline gets a reference to the given bool and assigns it to the Online field.
func (o *ClusterVolumes) SetOnline(v bool) {
	o.Online = &v
}

// GetDeviceDisplayName returns the DeviceDisplayName field value if set, zero value otherwise.
func (o *ClusterVolumes) GetDeviceDisplayName() string {
	if o == nil || o.DeviceDisplayName == nil {
		var ret string
		return ret
	}
	return *o.DeviceDisplayName
}

// GetDeviceDisplayNameOk returns a tuple with the DeviceDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetDeviceDisplayNameOk() (*string, bool) {
	if o == nil || o.DeviceDisplayName == nil {
		return nil, false
	}
	return o.DeviceDisplayName, true
}

// HasDeviceDisplayName returns a boolean if a field has been set.
func (o *ClusterVolumes) HasDeviceDisplayName() bool {
	if o != nil && o.DeviceDisplayName != nil {
		return true
	}

	return false
}

// SetDeviceDisplayName gets a reference to the given string and assigns it to the DeviceDisplayName field.
func (o *ClusterVolumes) SetDeviceDisplayName(v string) {
	o.DeviceDisplayName = &v
}

// GetRefType returns the RefType field value if set, zero value otherwise.
func (o *ClusterVolumes) GetRefType() string {
	if o == nil || o.RefType == nil {
		var ret string
		return ret
	}
	return *o.RefType
}

// GetRefTypeOk returns a tuple with the RefType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetRefTypeOk() (*string, bool) {
	if o == nil || o.RefType == nil {
		return nil, false
	}
	return o.RefType, true
}

// HasRefType returns a boolean if a field has been set.
func (o *ClusterVolumes) HasRefType() bool {
	if o != nil && o.RefType != nil {
		return true
	}

	return false
}

// SetRefType gets a reference to the given string and assigns it to the RefType field.
func (o *ClusterVolumes) SetRefType(v string) {
	o.RefType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClusterVolumes) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClusterVolumes) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClusterVolumes) SetName(v string) {
	o.Name = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *ClusterVolumes) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetExternalIdOk() (*string, bool) {
	if o == nil || o.ExternalId == nil {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *ClusterVolumes) HasExternalId() bool {
	if o != nil && o.ExternalId != nil {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *ClusterVolumes) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetDatastoreOption returns the DatastoreOption field value if set, zero value otherwise.
func (o *ClusterVolumes) GetDatastoreOption() string {
	if o == nil || o.DatastoreOption == nil {
		var ret string
		return ret
	}
	return *o.DatastoreOption
}

// GetDatastoreOptionOk returns a tuple with the DatastoreOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetDatastoreOptionOk() (*string, bool) {
	if o == nil || o.DatastoreOption == nil {
		return nil, false
	}
	return o.DatastoreOption, true
}

// HasDatastoreOption returns a boolean if a field has been set.
func (o *ClusterVolumes) HasDatastoreOption() bool {
	if o != nil && o.DatastoreOption != nil {
		return true
	}

	return false
}

// SetDatastoreOption gets a reference to the given string and assigns it to the DatastoreOption field.
func (o *ClusterVolumes) SetDatastoreOption(v string) {
	o.DatastoreOption = &v
}

// GetClaimName returns the ClaimName field value if set, zero value otherwise.
func (o *ClusterVolumes) GetClaimName() string {
	if o == nil || o.ClaimName == nil {
		var ret string
		return ret
	}
	return *o.ClaimName
}

// GetClaimNameOk returns a tuple with the ClaimName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetClaimNameOk() (*string, bool) {
	if o == nil || o.ClaimName == nil {
		return nil, false
	}
	return o.ClaimName, true
}

// HasClaimName returns a boolean if a field has been set.
func (o *ClusterVolumes) HasClaimName() bool {
	if o != nil && o.ClaimName != nil {
		return true
	}

	return false
}

// SetClaimName gets a reference to the given string and assigns it to the ClaimName field.
func (o *ClusterVolumes) SetClaimName(v string) {
	o.ClaimName = &v
}

// GetVolumeType returns the VolumeType field value if set, zero value otherwise.
func (o *ClusterVolumes) GetVolumeType() string {
	if o == nil || o.VolumeType == nil {
		var ret string
		return ret
	}
	return *o.VolumeType
}

// GetVolumeTypeOk returns a tuple with the VolumeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetVolumeTypeOk() (*string, bool) {
	if o == nil || o.VolumeType == nil {
		return nil, false
	}
	return o.VolumeType, true
}

// HasVolumeType returns a boolean if a field has been set.
func (o *ClusterVolumes) HasVolumeType() bool {
	if o != nil && o.VolumeType != nil {
		return true
	}

	return false
}

// SetVolumeType gets a reference to the given string and assigns it to the VolumeType field.
func (o *ClusterVolumes) SetVolumeType(v string) {
	o.VolumeType = &v
}

// GetDeviceName returns the DeviceName field value if set, zero value otherwise.
func (o *ClusterVolumes) GetDeviceName() string {
	if o == nil || o.DeviceName == nil {
		var ret string
		return ret
	}
	return *o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetDeviceNameOk() (*string, bool) {
	if o == nil || o.DeviceName == nil {
		return nil, false
	}
	return o.DeviceName, true
}

// HasDeviceName returns a boolean if a field has been set.
func (o *ClusterVolumes) HasDeviceName() bool {
	if o != nil && o.DeviceName != nil {
		return true
	}

	return false
}

// SetDeviceName gets a reference to the given string and assigns it to the DeviceName field.
func (o *ClusterVolumes) SetDeviceName(v string) {
	o.DeviceName = &v
}

// GetRemovable returns the Removable field value if set, zero value otherwise.
func (o *ClusterVolumes) GetRemovable() bool {
	if o == nil || o.Removable == nil {
		var ret bool
		return ret
	}
	return *o.Removable
}

// GetRemovableOk returns a tuple with the Removable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetRemovableOk() (*bool, bool) {
	if o == nil || o.Removable == nil {
		return nil, false
	}
	return o.Removable, true
}

// HasRemovable returns a boolean if a field has been set.
func (o *ClusterVolumes) HasRemovable() bool {
	if o != nil && o.Removable != nil {
		return true
	}

	return false
}

// SetRemovable gets a reference to the given bool and assigns it to the Removable field.
func (o *ClusterVolumes) SetRemovable(v bool) {
	o.Removable = &v
}

// GetPoolName returns the PoolName field value if set, zero value otherwise.
func (o *ClusterVolumes) GetPoolName() string {
	if o == nil || o.PoolName == nil {
		var ret string
		return ret
	}
	return *o.PoolName
}

// GetPoolNameOk returns a tuple with the PoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetPoolNameOk() (*string, bool) {
	if o == nil || o.PoolName == nil {
		return nil, false
	}
	return o.PoolName, true
}

// HasPoolName returns a boolean if a field has been set.
func (o *ClusterVolumes) HasPoolName() bool {
	if o != nil && o.PoolName != nil {
		return true
	}

	return false
}

// SetPoolName gets a reference to the given string and assigns it to the PoolName field.
func (o *ClusterVolumes) SetPoolName(v string) {
	o.PoolName = &v
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *ClusterVolumes) GetReadOnly() bool {
	if o == nil || o.ReadOnly == nil {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetReadOnlyOk() (*bool, bool) {
	if o == nil || o.ReadOnly == nil {
		return nil, false
	}
	return o.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (o *ClusterVolumes) HasReadOnly() bool {
	if o != nil && o.ReadOnly != nil {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *ClusterVolumes) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *ClusterVolumes) GetSourceId() string {
	if o == nil || o.SourceId == nil {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetSourceIdOk() (*string, bool) {
	if o == nil || o.SourceId == nil {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *ClusterVolumes) HasSourceId() bool {
	if o != nil && o.SourceId != nil {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *ClusterVolumes) SetSourceId(v string) {
	o.SourceId = &v
}

// GetZoneId returns the ZoneId field value if set, zero value otherwise.
func (o *ClusterVolumes) GetZoneId() int64 {
	if o == nil || o.ZoneId == nil {
		var ret int64
		return ret
	}
	return *o.ZoneId
}

// GetZoneIdOk returns a tuple with the ZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetZoneIdOk() (*int64, bool) {
	if o == nil || o.ZoneId == nil {
		return nil, false
	}
	return o.ZoneId, true
}

// HasZoneId returns a boolean if a field has been set.
func (o *ClusterVolumes) HasZoneId() bool {
	if o != nil && o.ZoneId != nil {
		return true
	}

	return false
}

// SetZoneId gets a reference to the given int64 and assigns it to the ZoneId field.
func (o *ClusterVolumes) SetZoneId(v int64) {
	o.ZoneId = &v
}

// GetRootVolume returns the RootVolume field value if set, zero value otherwise.
func (o *ClusterVolumes) GetRootVolume() bool {
	if o == nil || o.RootVolume == nil {
		var ret bool
		return ret
	}
	return *o.RootVolume
}

// GetRootVolumeOk returns a tuple with the RootVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetRootVolumeOk() (*bool, bool) {
	if o == nil || o.RootVolume == nil {
		return nil, false
	}
	return o.RootVolume, true
}

// HasRootVolume returns a boolean if a field has been set.
func (o *ClusterVolumes) HasRootVolume() bool {
	if o != nil && o.RootVolume != nil {
		return true
	}

	return false
}

// SetRootVolume gets a reference to the given bool and assigns it to the RootVolume field.
func (o *ClusterVolumes) SetRootVolume(v bool) {
	o.RootVolume = &v
}

// GetRefId returns the RefId field value if set, zero value otherwise.
func (o *ClusterVolumes) GetRefId() int64 {
	if o == nil || o.RefId == nil {
		var ret int64
		return ret
	}
	return *o.RefId
}

// GetRefIdOk returns a tuple with the RefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetRefIdOk() (*int64, bool) {
	if o == nil || o.RefId == nil {
		return nil, false
	}
	return o.RefId, true
}

// HasRefId returns a boolean if a field has been set.
func (o *ClusterVolumes) HasRefId() bool {
	if o != nil && o.RefId != nil {
		return true
	}

	return false
}

// SetRefId gets a reference to the given int64 and assigns it to the RefId field.
func (o *ClusterVolumes) SetRefId(v int64) {
	o.RefId = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ClusterVolumes) GetCategory() string {
	if o == nil || o.Category == nil {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetCategoryOk() (*string, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *ClusterVolumes) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *ClusterVolumes) SetCategory(v string) {
	o.Category = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ClusterVolumes) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ClusterVolumes) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ClusterVolumes) SetStatus(v string) {
	o.Status = &v
}

// GetRawData returns the RawData field value if set, zero value otherwise.
func (o *ClusterVolumes) GetRawData() string {
	if o == nil || o.RawData == nil {
		var ret string
		return ret
	}
	return *o.RawData
}

// GetRawDataOk returns a tuple with the RawData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetRawDataOk() (*string, bool) {
	if o == nil || o.RawData == nil {
		return nil, false
	}
	return o.RawData, true
}

// HasRawData returns a boolean if a field has been set.
func (o *ClusterVolumes) HasRawData() bool {
	if o != nil && o.RawData != nil {
		return true
	}

	return false
}

// SetRawData gets a reference to the given string and assigns it to the RawData field.
func (o *ClusterVolumes) SetRawData(v string) {
	o.RawData = &v
}

// GetMaxStorage returns the MaxStorage field value if set, zero value otherwise.
func (o *ClusterVolumes) GetMaxStorage() int64 {
	if o == nil || o.MaxStorage == nil {
		var ret int64
		return ret
	}
	return *o.MaxStorage
}

// GetMaxStorageOk returns a tuple with the MaxStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetMaxStorageOk() (*int64, bool) {
	if o == nil || o.MaxStorage == nil {
		return nil, false
	}
	return o.MaxStorage, true
}

// HasMaxStorage returns a boolean if a field has been set.
func (o *ClusterVolumes) HasMaxStorage() bool {
	if o != nil && o.MaxStorage != nil {
		return true
	}

	return false
}

// SetMaxStorage gets a reference to the given int64 and assigns it to the MaxStorage field.
func (o *ClusterVolumes) SetMaxStorage(v int64) {
	o.MaxStorage = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *ClusterVolumes) GetAccount() ApiBlueprintsIdUpdatePermissionsResourcePermissionSites {
	if o == nil || o.Account == nil {
		var ret ApiBlueprintsIdUpdatePermissionsResourcePermissionSites
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetAccountOk() (*ApiBlueprintsIdUpdatePermissionsResourcePermissionSites, bool) {
	if o == nil || o.Account == nil {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *ClusterVolumes) HasAccount() bool {
	if o != nil && o.Account != nil {
		return true
	}

	return false
}

// SetAccount gets a reference to the given ApiBlueprintsIdUpdatePermissionsResourcePermissionSites and assigns it to the Account field.
func (o *ClusterVolumes) SetAccount(v ApiBlueprintsIdUpdatePermissionsResourcePermissionSites) {
	o.Account = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ClusterVolumes) GetType() ApiBlueprintsIdUpdatePermissionsResourcePermissionSites {
	if o == nil || o.Type == nil {
		var ret ApiBlueprintsIdUpdatePermissionsResourcePermissionSites
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetTypeOk() (*ApiBlueprintsIdUpdatePermissionsResourcePermissionSites, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ClusterVolumes) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given ApiBlueprintsIdUpdatePermissionsResourcePermissionSites and assigns it to the Type field.
func (o *ClusterVolumes) SetType(v ApiBlueprintsIdUpdatePermissionsResourcePermissionSites) {
	o.Type = &v
}

// GetDatastore returns the Datastore field value if set, zero value otherwise.
func (o *ClusterVolumes) GetDatastore() ApiBlueprintsIdUpdatePermissionsResourcePermissionSites {
	if o == nil || o.Datastore == nil {
		var ret ApiBlueprintsIdUpdatePermissionsResourcePermissionSites
		return ret
	}
	return *o.Datastore
}

// GetDatastoreOk returns a tuple with the Datastore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterVolumes) GetDatastoreOk() (*ApiBlueprintsIdUpdatePermissionsResourcePermissionSites, bool) {
	if o == nil || o.Datastore == nil {
		return nil, false
	}
	return o.Datastore, true
}

// HasDatastore returns a boolean if a field has been set.
func (o *ClusterVolumes) HasDatastore() bool {
	if o != nil && o.Datastore != nil {
		return true
	}

	return false
}

// SetDatastore gets a reference to the given ApiBlueprintsIdUpdatePermissionsResourcePermissionSites and assigns it to the Datastore field.
func (o *ClusterVolumes) SetDatastore(v ApiBlueprintsIdUpdatePermissionsResourcePermissionSites) {
	o.Datastore = &v
}

func (o ClusterVolumes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.InternalId != nil {
		toSerialize["internalId"] = o.InternalId
	}
	if o.DisplayOrder != nil {
		toSerialize["displayOrder"] = o.DisplayOrder
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.UsedStorage != nil {
		toSerialize["usedStorage"] = o.UsedStorage
	}
	if o.ProvisionType != nil {
		toSerialize["provisionType"] = o.ProvisionType
	}
	if o.Resizeable != nil {
		toSerialize["resizeable"] = o.Resizeable
	}
	if o.Online != nil {
		toSerialize["online"] = o.Online
	}
	if o.DeviceDisplayName != nil {
		toSerialize["deviceDisplayName"] = o.DeviceDisplayName
	}
	if o.RefType != nil {
		toSerialize["refType"] = o.RefType
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ExternalId != nil {
		toSerialize["externalId"] = o.ExternalId
	}
	if o.DatastoreOption != nil {
		toSerialize["datastoreOption"] = o.DatastoreOption
	}
	if o.ClaimName != nil {
		toSerialize["claimName"] = o.ClaimName
	}
	if o.VolumeType != nil {
		toSerialize["volumeType"] = o.VolumeType
	}
	if o.DeviceName != nil {
		toSerialize["deviceName"] = o.DeviceName
	}
	if o.Removable != nil {
		toSerialize["removable"] = o.Removable
	}
	if o.PoolName != nil {
		toSerialize["poolName"] = o.PoolName
	}
	if o.ReadOnly != nil {
		toSerialize["readOnly"] = o.ReadOnly
	}
	if o.SourceId != nil {
		toSerialize["sourceId"] = o.SourceId
	}
	if o.ZoneId != nil {
		toSerialize["zoneId"] = o.ZoneId
	}
	if o.RootVolume != nil {
		toSerialize["rootVolume"] = o.RootVolume
	}
	if o.RefId != nil {
		toSerialize["refId"] = o.RefId
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.RawData != nil {
		toSerialize["rawData"] = o.RawData
	}
	if o.MaxStorage != nil {
		toSerialize["maxStorage"] = o.MaxStorage
	}
	if o.Account != nil {
		toSerialize["account"] = o.Account
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Datastore != nil {
		toSerialize["datastore"] = o.Datastore
	}
	return json.Marshal(toSerialize)
}

type NullableClusterVolumes struct {
	value *ClusterVolumes
	isSet bool
}

func (v NullableClusterVolumes) Get() *ClusterVolumes {
	return v.value
}

func (v *NullableClusterVolumes) Set(val *ClusterVolumes) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterVolumes) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterVolumes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterVolumes(val *ClusterVolumes) *NullableClusterVolumes {
	return &NullableClusterVolumes{value: val, isSet: true}
}

func (v NullableClusterVolumes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterVolumes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


