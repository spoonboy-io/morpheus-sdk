/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IntegrationObjectLayout struct for IntegrationObjectLayout
type IntegrationObjectLayout struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Code *string `json:"code,omitempty"`
	ProvisionType *InlineResponse20094Network `json:"provisionType,omitempty"`
	InstanceType *InlineResponse20094Network `json:"instanceType,omitempty"`
	InstanceVersion *string `json:"instanceVersion,omitempty"`
}

// NewIntegrationObjectLayout instantiates a new IntegrationObjectLayout object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationObjectLayout() *IntegrationObjectLayout {
	this := IntegrationObjectLayout{}
	return &this
}

// NewIntegrationObjectLayoutWithDefaults instantiates a new IntegrationObjectLayout object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationObjectLayoutWithDefaults() *IntegrationObjectLayout {
	this := IntegrationObjectLayout{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IntegrationObjectLayout) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationObjectLayout) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IntegrationObjectLayout) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *IntegrationObjectLayout) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IntegrationObjectLayout) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationObjectLayout) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IntegrationObjectLayout) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IntegrationObjectLayout) SetName(v string) {
	o.Name = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *IntegrationObjectLayout) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationObjectLayout) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *IntegrationObjectLayout) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *IntegrationObjectLayout) SetCode(v string) {
	o.Code = &v
}

// GetProvisionType returns the ProvisionType field value if set, zero value otherwise.
func (o *IntegrationObjectLayout) GetProvisionType() InlineResponse20094Network {
	if o == nil || o.ProvisionType == nil {
		var ret InlineResponse20094Network
		return ret
	}
	return *o.ProvisionType
}

// GetProvisionTypeOk returns a tuple with the ProvisionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationObjectLayout) GetProvisionTypeOk() (*InlineResponse20094Network, bool) {
	if o == nil || o.ProvisionType == nil {
		return nil, false
	}
	return o.ProvisionType, true
}

// HasProvisionType returns a boolean if a field has been set.
func (o *IntegrationObjectLayout) HasProvisionType() bool {
	if o != nil && o.ProvisionType != nil {
		return true
	}

	return false
}

// SetProvisionType gets a reference to the given InlineResponse20094Network and assigns it to the ProvisionType field.
func (o *IntegrationObjectLayout) SetProvisionType(v InlineResponse20094Network) {
	o.ProvisionType = &v
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise.
func (o *IntegrationObjectLayout) GetInstanceType() InlineResponse20094Network {
	if o == nil || o.InstanceType == nil {
		var ret InlineResponse20094Network
		return ret
	}
	return *o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationObjectLayout) GetInstanceTypeOk() (*InlineResponse20094Network, bool) {
	if o == nil || o.InstanceType == nil {
		return nil, false
	}
	return o.InstanceType, true
}

// HasInstanceType returns a boolean if a field has been set.
func (o *IntegrationObjectLayout) HasInstanceType() bool {
	if o != nil && o.InstanceType != nil {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given InlineResponse20094Network and assigns it to the InstanceType field.
func (o *IntegrationObjectLayout) SetInstanceType(v InlineResponse20094Network) {
	o.InstanceType = &v
}

// GetInstanceVersion returns the InstanceVersion field value if set, zero value otherwise.
func (o *IntegrationObjectLayout) GetInstanceVersion() string {
	if o == nil || o.InstanceVersion == nil {
		var ret string
		return ret
	}
	return *o.InstanceVersion
}

// GetInstanceVersionOk returns a tuple with the InstanceVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationObjectLayout) GetInstanceVersionOk() (*string, bool) {
	if o == nil || o.InstanceVersion == nil {
		return nil, false
	}
	return o.InstanceVersion, true
}

// HasInstanceVersion returns a boolean if a field has been set.
func (o *IntegrationObjectLayout) HasInstanceVersion() bool {
	if o != nil && o.InstanceVersion != nil {
		return true
	}

	return false
}

// SetInstanceVersion gets a reference to the given string and assigns it to the InstanceVersion field.
func (o *IntegrationObjectLayout) SetInstanceVersion(v string) {
	o.InstanceVersion = &v
}

func (o IntegrationObjectLayout) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.ProvisionType != nil {
		toSerialize["provisionType"] = o.ProvisionType
	}
	if o.InstanceType != nil {
		toSerialize["instanceType"] = o.InstanceType
	}
	if o.InstanceVersion != nil {
		toSerialize["instanceVersion"] = o.InstanceVersion
	}
	return json.Marshal(toSerialize)
}

type NullableIntegrationObjectLayout struct {
	value *IntegrationObjectLayout
	isSet bool
}

func (v NullableIntegrationObjectLayout) Get() *IntegrationObjectLayout {
	return v.value
}

func (v *NullableIntegrationObjectLayout) Set(val *IntegrationObjectLayout) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationObjectLayout) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationObjectLayout) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationObjectLayout(val *IntegrationObjectLayout) *NullableIntegrationObjectLayout {
	return &NullableIntegrationObjectLayout{value: val, isSet: true}
}

func (v NullableIntegrationObjectLayout) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationObjectLayout) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


