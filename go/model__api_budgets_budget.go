/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ApiBudgetsBudget struct for ApiBudgetsBudget
type ApiBudgetsBudget struct {
	Name string `json:"name"`
	Description *string `json:"description,omitempty"`
	Scope *string `json:"scope,omitempty"`
	Period *string `json:"period,omitempty"`
	Year *int64 `json:"year,omitempty"`
	StartDate *time.Time `json:"startDate,omitempty"`
	EndDate *time.Time `json:"endDate,omitempty"`
	Interval *string `json:"interval,omitempty"`
	// The Tenant ID to scope to, for use with ``scope``=tenant 
	ScopeTenantId *int64 `json:"scopeTenantId,omitempty"`
	// The Tenant ID to scope to, for use with ``scope``=group  
	ScopeGroupId *int64 `json:"scopeGroupId,omitempty"`
	// The Tenant ID to scope to, for use with ``scope``=cloud 
	ScopeCloudId *int64 `json:"scopeCloudId,omitempty"`
	// The Tenant ID to scope to, for use with ``scope``=user 
	ScopeUserId *int64 `json:"scopeUserId,omitempty"`
	Costs *[]int64 `json:"costs,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
}

// NewApiBudgetsBudget instantiates a new ApiBudgetsBudget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiBudgetsBudget(name string, ) *ApiBudgetsBudget {
	this := ApiBudgetsBudget{}
	this.Name = name
	var scope string = "account"
	this.Scope = &scope
	var period string = "year"
	this.Period = &period
	var interval string = "year"
	this.Interval = &interval
	var enabled bool = true
	this.Enabled = &enabled
	return &this
}

// NewApiBudgetsBudgetWithDefaults instantiates a new ApiBudgetsBudget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiBudgetsBudgetWithDefaults() *ApiBudgetsBudget {
	this := ApiBudgetsBudget{}
	var scope string = "account"
	this.Scope = &scope
	var period string = "year"
	this.Period = &period
	var interval string = "year"
	this.Interval = &interval
	var enabled bool = true
	this.Enabled = &enabled
	return &this
}

// GetName returns the Name field value
func (o *ApiBudgetsBudget) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApiBudgetsBudget) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApiBudgetsBudget) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiBudgetsBudget) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBudgetsBudget) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiBudgetsBudget) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiBudgetsBudget) SetDescription(v string) {
	o.Description = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *ApiBudgetsBudget) GetScope() string {
	if o == nil || o.Scope == nil {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBudgetsBudget) GetScopeOk() (*string, bool) {
	if o == nil || o.Scope == nil {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *ApiBudgetsBudget) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *ApiBudgetsBudget) SetScope(v string) {
	o.Scope = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *ApiBudgetsBudget) GetPeriod() string {
	if o == nil || o.Period == nil {
		var ret string
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBudgetsBudget) GetPeriodOk() (*string, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *ApiBudgetsBudget) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given string and assigns it to the Period field.
func (o *ApiBudgetsBudget) SetPeriod(v string) {
	o.Period = &v
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *ApiBudgetsBudget) GetYear() int64 {
	if o == nil || o.Year == nil {
		var ret int64
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBudgetsBudget) GetYearOk() (*int64, bool) {
	if o == nil || o.Year == nil {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *ApiBudgetsBudget) HasYear() bool {
	if o != nil && o.Year != nil {
		return true
	}

	return false
}

// SetYear gets a reference to the given int64 and assigns it to the Year field.
func (o *ApiBudgetsBudget) SetYear(v int64) {
	o.Year = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ApiBudgetsBudget) GetStartDate() time.Time {
	if o == nil || o.StartDate == nil {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBudgetsBudget) GetStartDateOk() (*time.Time, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ApiBudgetsBudget) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *ApiBudgetsBudget) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *ApiBudgetsBudget) GetEndDate() time.Time {
	if o == nil || o.EndDate == nil {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBudgetsBudget) GetEndDateOk() (*time.Time, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *ApiBudgetsBudget) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *ApiBudgetsBudget) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *ApiBudgetsBudget) GetInterval() string {
	if o == nil || o.Interval == nil {
		var ret string
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBudgetsBudget) GetIntervalOk() (*string, bool) {
	if o == nil || o.Interval == nil {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *ApiBudgetsBudget) HasInterval() bool {
	if o != nil && o.Interval != nil {
		return true
	}

	return false
}

// SetInterval gets a reference to the given string and assigns it to the Interval field.
func (o *ApiBudgetsBudget) SetInterval(v string) {
	o.Interval = &v
}

// GetScopeTenantId returns the ScopeTenantId field value if set, zero value otherwise.
func (o *ApiBudgetsBudget) GetScopeTenantId() int64 {
	if o == nil || o.ScopeTenantId == nil {
		var ret int64
		return ret
	}
	return *o.ScopeTenantId
}

// GetScopeTenantIdOk returns a tuple with the ScopeTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBudgetsBudget) GetScopeTenantIdOk() (*int64, bool) {
	if o == nil || o.ScopeTenantId == nil {
		return nil, false
	}
	return o.ScopeTenantId, true
}

// HasScopeTenantId returns a boolean if a field has been set.
func (o *ApiBudgetsBudget) HasScopeTenantId() bool {
	if o != nil && o.ScopeTenantId != nil {
		return true
	}

	return false
}

// SetScopeTenantId gets a reference to the given int64 and assigns it to the ScopeTenantId field.
func (o *ApiBudgetsBudget) SetScopeTenantId(v int64) {
	o.ScopeTenantId = &v
}

// GetScopeGroupId returns the ScopeGroupId field value if set, zero value otherwise.
func (o *ApiBudgetsBudget) GetScopeGroupId() int64 {
	if o == nil || o.ScopeGroupId == nil {
		var ret int64
		return ret
	}
	return *o.ScopeGroupId
}

// GetScopeGroupIdOk returns a tuple with the ScopeGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBudgetsBudget) GetScopeGroupIdOk() (*int64, bool) {
	if o == nil || o.ScopeGroupId == nil {
		return nil, false
	}
	return o.ScopeGroupId, true
}

// HasScopeGroupId returns a boolean if a field has been set.
func (o *ApiBudgetsBudget) HasScopeGroupId() bool {
	if o != nil && o.ScopeGroupId != nil {
		return true
	}

	return false
}

// SetScopeGroupId gets a reference to the given int64 and assigns it to the ScopeGroupId field.
func (o *ApiBudgetsBudget) SetScopeGroupId(v int64) {
	o.ScopeGroupId = &v
}

// GetScopeCloudId returns the ScopeCloudId field value if set, zero value otherwise.
func (o *ApiBudgetsBudget) GetScopeCloudId() int64 {
	if o == nil || o.ScopeCloudId == nil {
		var ret int64
		return ret
	}
	return *o.ScopeCloudId
}

// GetScopeCloudIdOk returns a tuple with the ScopeCloudId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBudgetsBudget) GetScopeCloudIdOk() (*int64, bool) {
	if o == nil || o.ScopeCloudId == nil {
		return nil, false
	}
	return o.ScopeCloudId, true
}

// HasScopeCloudId returns a boolean if a field has been set.
func (o *ApiBudgetsBudget) HasScopeCloudId() bool {
	if o != nil && o.ScopeCloudId != nil {
		return true
	}

	return false
}

// SetScopeCloudId gets a reference to the given int64 and assigns it to the ScopeCloudId field.
func (o *ApiBudgetsBudget) SetScopeCloudId(v int64) {
	o.ScopeCloudId = &v
}

// GetScopeUserId returns the ScopeUserId field value if set, zero value otherwise.
func (o *ApiBudgetsBudget) GetScopeUserId() int64 {
	if o == nil || o.ScopeUserId == nil {
		var ret int64
		return ret
	}
	return *o.ScopeUserId
}

// GetScopeUserIdOk returns a tuple with the ScopeUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBudgetsBudget) GetScopeUserIdOk() (*int64, bool) {
	if o == nil || o.ScopeUserId == nil {
		return nil, false
	}
	return o.ScopeUserId, true
}

// HasScopeUserId returns a boolean if a field has been set.
func (o *ApiBudgetsBudget) HasScopeUserId() bool {
	if o != nil && o.ScopeUserId != nil {
		return true
	}

	return false
}

// SetScopeUserId gets a reference to the given int64 and assigns it to the ScopeUserId field.
func (o *ApiBudgetsBudget) SetScopeUserId(v int64) {
	o.ScopeUserId = &v
}

// GetCosts returns the Costs field value if set, zero value otherwise.
func (o *ApiBudgetsBudget) GetCosts() []int64 {
	if o == nil || o.Costs == nil {
		var ret []int64
		return ret
	}
	return *o.Costs
}

// GetCostsOk returns a tuple with the Costs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBudgetsBudget) GetCostsOk() (*[]int64, bool) {
	if o == nil || o.Costs == nil {
		return nil, false
	}
	return o.Costs, true
}

// HasCosts returns a boolean if a field has been set.
func (o *ApiBudgetsBudget) HasCosts() bool {
	if o != nil && o.Costs != nil {
		return true
	}

	return false
}

// SetCosts gets a reference to the given []int64 and assigns it to the Costs field.
func (o *ApiBudgetsBudget) SetCosts(v []int64) {
	o.Costs = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ApiBudgetsBudget) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiBudgetsBudget) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ApiBudgetsBudget) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ApiBudgetsBudget) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o ApiBudgetsBudget) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.Year != nil {
		toSerialize["year"] = o.Year
	}
	if o.StartDate != nil {
		toSerialize["startDate"] = o.StartDate
	}
	if o.EndDate != nil {
		toSerialize["endDate"] = o.EndDate
	}
	if o.Interval != nil {
		toSerialize["interval"] = o.Interval
	}
	if o.ScopeTenantId != nil {
		toSerialize["scopeTenantId"] = o.ScopeTenantId
	}
	if o.ScopeGroupId != nil {
		toSerialize["scopeGroupId"] = o.ScopeGroupId
	}
	if o.ScopeCloudId != nil {
		toSerialize["scopeCloudId"] = o.ScopeCloudId
	}
	if o.ScopeUserId != nil {
		toSerialize["scopeUserId"] = o.ScopeUserId
	}
	if o.Costs != nil {
		toSerialize["costs"] = o.Costs
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableApiBudgetsBudget struct {
	value *ApiBudgetsBudget
	isSet bool
}

func (v NullableApiBudgetsBudget) Get() *ApiBudgetsBudget {
	return v.value
}

func (v *NullableApiBudgetsBudget) Set(val *ApiBudgetsBudget) {
	v.value = val
	v.isSet = true
}

func (v NullableApiBudgetsBudget) IsSet() bool {
	return v.isSet
}

func (v *NullableApiBudgetsBudget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiBudgetsBudget(val *ApiBudgetsBudget) *NullableApiBudgetsBudget {
	return &NullableApiBudgetsBudget{value: val, isSet: true}
}

func (v NullableApiBudgetsBudget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiBudgetsBudget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


