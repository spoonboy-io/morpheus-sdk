/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20019 struct for InlineResponse20019
type InlineResponse20019 struct {
	CheckGroup *CheckGroup `json:"checkGroup,omitempty"`
	Checks *[]Check `json:"checks,omitempty"`
}

// NewInlineResponse20019 instantiates a new InlineResponse20019 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20019() *InlineResponse20019 {
	this := InlineResponse20019{}
	return &this
}

// NewInlineResponse20019WithDefaults instantiates a new InlineResponse20019 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20019WithDefaults() *InlineResponse20019 {
	this := InlineResponse20019{}
	return &this
}

// GetCheckGroup returns the CheckGroup field value if set, zero value otherwise.
func (o *InlineResponse20019) GetCheckGroup() CheckGroup {
	if o == nil || o.CheckGroup == nil {
		var ret CheckGroup
		return ret
	}
	return *o.CheckGroup
}

// GetCheckGroupOk returns a tuple with the CheckGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20019) GetCheckGroupOk() (*CheckGroup, bool) {
	if o == nil || o.CheckGroup == nil {
		return nil, false
	}
	return o.CheckGroup, true
}

// HasCheckGroup returns a boolean if a field has been set.
func (o *InlineResponse20019) HasCheckGroup() bool {
	if o != nil && o.CheckGroup != nil {
		return true
	}

	return false
}

// SetCheckGroup gets a reference to the given CheckGroup and assigns it to the CheckGroup field.
func (o *InlineResponse20019) SetCheckGroup(v CheckGroup) {
	o.CheckGroup = &v
}

// GetChecks returns the Checks field value if set, zero value otherwise.
func (o *InlineResponse20019) GetChecks() []Check {
	if o == nil || o.Checks == nil {
		var ret []Check
		return ret
	}
	return *o.Checks
}

// GetChecksOk returns a tuple with the Checks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20019) GetChecksOk() (*[]Check, bool) {
	if o == nil || o.Checks == nil {
		return nil, false
	}
	return o.Checks, true
}

// HasChecks returns a boolean if a field has been set.
func (o *InlineResponse20019) HasChecks() bool {
	if o != nil && o.Checks != nil {
		return true
	}

	return false
}

// SetChecks gets a reference to the given []Check and assigns it to the Checks field.
func (o *InlineResponse20019) SetChecks(v []Check) {
	o.Checks = &v
}

func (o InlineResponse20019) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CheckGroup != nil {
		toSerialize["checkGroup"] = o.CheckGroup
	}
	if o.Checks != nil {
		toSerialize["checks"] = o.Checks
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20019 struct {
	value *InlineResponse20019
	isSet bool
}

func (v NullableInlineResponse20019) Get() *InlineResponse20019 {
	return v.value
}

func (v *NullableInlineResponse20019) Set(val *InlineResponse20019) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20019) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20019) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20019(val *InlineResponse20019) *NullableInlineResponse20019 {
	return &NullableInlineResponse20019{value: val, isSet: true}
}

func (v NullableInlineResponse20019) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20019) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


