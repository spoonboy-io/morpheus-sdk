/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20034 struct for InlineResponse20034
type InlineResponse20034 struct {
	Container *Container `json:"container,omitempty"`
}

// NewInlineResponse20034 instantiates a new InlineResponse20034 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20034() *InlineResponse20034 {
	this := InlineResponse20034{}
	return &this
}

// NewInlineResponse20034WithDefaults instantiates a new InlineResponse20034 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20034WithDefaults() *InlineResponse20034 {
	this := InlineResponse20034{}
	return &this
}

// GetContainer returns the Container field value if set, zero value otherwise.
func (o *InlineResponse20034) GetContainer() Container {
	if o == nil || o.Container == nil {
		var ret Container
		return ret
	}
	return *o.Container
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20034) GetContainerOk() (*Container, bool) {
	if o == nil || o.Container == nil {
		return nil, false
	}
	return o.Container, true
}

// HasContainer returns a boolean if a field has been set.
func (o *InlineResponse20034) HasContainer() bool {
	if o != nil && o.Container != nil {
		return true
	}

	return false
}

// SetContainer gets a reference to the given Container and assigns it to the Container field.
func (o *InlineResponse20034) SetContainer(v Container) {
	o.Container = &v
}

func (o InlineResponse20034) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Container != nil {
		toSerialize["container"] = o.Container
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20034 struct {
	value *InlineResponse20034
	isSet bool
}

func (v NullableInlineResponse20034) Get() *InlineResponse20034 {
	return v.value
}

func (v *NullableInlineResponse20034) Set(val *InlineResponse20034) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20034) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20034) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20034(val *InlineResponse20034) *NullableInlineResponse20034 {
	return &NullableInlineResponse20034{value: val, isSet: true}
}

func (v NullableInlineResponse20034) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20034) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


