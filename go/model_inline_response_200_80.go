/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20080 struct for InlineResponse20080
type InlineResponse20080 struct {
	LoadBalancerPool *InlineResponse20080LoadBalancerPool `json:"loadBalancerPool,omitempty"`
}

// NewInlineResponse20080 instantiates a new InlineResponse20080 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20080() *InlineResponse20080 {
	this := InlineResponse20080{}
	return &this
}

// NewInlineResponse20080WithDefaults instantiates a new InlineResponse20080 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20080WithDefaults() *InlineResponse20080 {
	this := InlineResponse20080{}
	return &this
}

// GetLoadBalancerPool returns the LoadBalancerPool field value if set, zero value otherwise.
func (o *InlineResponse20080) GetLoadBalancerPool() InlineResponse20080LoadBalancerPool {
	if o == nil || o.LoadBalancerPool == nil {
		var ret InlineResponse20080LoadBalancerPool
		return ret
	}
	return *o.LoadBalancerPool
}

// GetLoadBalancerPoolOk returns a tuple with the LoadBalancerPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20080) GetLoadBalancerPoolOk() (*InlineResponse20080LoadBalancerPool, bool) {
	if o == nil || o.LoadBalancerPool == nil {
		return nil, false
	}
	return o.LoadBalancerPool, true
}

// HasLoadBalancerPool returns a boolean if a field has been set.
func (o *InlineResponse20080) HasLoadBalancerPool() bool {
	if o != nil && o.LoadBalancerPool != nil {
		return true
	}

	return false
}

// SetLoadBalancerPool gets a reference to the given InlineResponse20080LoadBalancerPool and assigns it to the LoadBalancerPool field.
func (o *InlineResponse20080) SetLoadBalancerPool(v InlineResponse20080LoadBalancerPool) {
	o.LoadBalancerPool = &v
}

func (o InlineResponse20080) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LoadBalancerPool != nil {
		toSerialize["loadBalancerPool"] = o.LoadBalancerPool
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20080 struct {
	value *InlineResponse20080
	isSet bool
}

func (v NullableInlineResponse20080) Get() *InlineResponse20080 {
	return v.value
}

func (v *NullableInlineResponse20080) Set(val *InlineResponse20080) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20080) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20080) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20080(val *InlineResponse20080) *NullableInlineResponse20080 {
	return &NullableInlineResponse20080{value: val, isSet: true}
}

func (v NullableInlineResponse20080) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20080) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


