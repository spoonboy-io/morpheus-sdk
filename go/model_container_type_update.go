/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ContainerTypeUpdate struct for ContainerTypeUpdate
type ContainerTypeUpdate struct {
	// Node type name
	Name *string `json:"name,omitempty"`
	Labels *[]string `json:"labels,omitempty"`
	// The short name is a name with no spaces used for display in your container list.
	ShortName *string `json:"shortName,omitempty"`
	// Node type description
	Description *string `json:"description,omitempty"`
	// Version of the node type
	ContainerVersion *string `json:"containerVersion,omitempty"`
	// Provision type code, eg. `amazon`, etc.
	ProvisionTypeCode *string `json:"provisionTypeCode,omitempty"`
	// Array of script IDs.
	Scripts *[]int64 `json:"scripts,omitempty"`
	// Array of file template IDs.
	Templates *[]int64 `json:"templates,omitempty"`
	// Virtual image ID
	VirtualImageId *int64 `json:"virtualImageId,omitempty"`
	// Stat type code.  Varies with node type, see Provision Types (customOptionTypes) for allowed values within selected type.
	StatTypeCode *string `json:"statTypeCode,omitempty"`
	// Log type code.  Varies with node type, see Provision Types (customOptionTypes) for allowed values within selected type.
	LogTypeCode *string `json:"logTypeCode,omitempty"`
	// Server type.  Always pass \"vm\".
	ServerType *string `json:"serverType,omitempty"`
	// List of exposed port definitions in the format NAME=PORT|PROTOCOL
	ContainerPorts *[]ContainerTypeCreateContainerPorts `json:"containerPorts,omitempty"`
	// The environmentVariables parameter is array of env objects.
	EnvironmentVariables *[]ClusterLayoutCreateEnvironmentVariables `json:"environmentVariables,omitempty"`
	// Config object varies with node type.  If using docker, scvmm, ARM, hyperv, or cloudformation, look up provision type details (customOptionTypes) for information.
	Config *map[string]interface{} `json:"config,omitempty"`
}

// NewContainerTypeUpdate instantiates a new ContainerTypeUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerTypeUpdate() *ContainerTypeUpdate {
	this := ContainerTypeUpdate{}
	return &this
}

// NewContainerTypeUpdateWithDefaults instantiates a new ContainerTypeUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerTypeUpdateWithDefaults() *ContainerTypeUpdate {
	this := ContainerTypeUpdate{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ContainerTypeUpdate) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeUpdate) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ContainerTypeUpdate) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ContainerTypeUpdate) SetName(v string) {
	o.Name = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *ContainerTypeUpdate) GetLabels() []string {
	if o == nil || o.Labels == nil {
		var ret []string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeUpdate) GetLabelsOk() (*[]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *ContainerTypeUpdate) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *ContainerTypeUpdate) SetLabels(v []string) {
	o.Labels = &v
}

// GetShortName returns the ShortName field value if set, zero value otherwise.
func (o *ContainerTypeUpdate) GetShortName() string {
	if o == nil || o.ShortName == nil {
		var ret string
		return ret
	}
	return *o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeUpdate) GetShortNameOk() (*string, bool) {
	if o == nil || o.ShortName == nil {
		return nil, false
	}
	return o.ShortName, true
}

// HasShortName returns a boolean if a field has been set.
func (o *ContainerTypeUpdate) HasShortName() bool {
	if o != nil && o.ShortName != nil {
		return true
	}

	return false
}

// SetShortName gets a reference to the given string and assigns it to the ShortName field.
func (o *ContainerTypeUpdate) SetShortName(v string) {
	o.ShortName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ContainerTypeUpdate) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeUpdate) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ContainerTypeUpdate) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ContainerTypeUpdate) SetDescription(v string) {
	o.Description = &v
}

// GetContainerVersion returns the ContainerVersion field value if set, zero value otherwise.
func (o *ContainerTypeUpdate) GetContainerVersion() string {
	if o == nil || o.ContainerVersion == nil {
		var ret string
		return ret
	}
	return *o.ContainerVersion
}

// GetContainerVersionOk returns a tuple with the ContainerVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeUpdate) GetContainerVersionOk() (*string, bool) {
	if o == nil || o.ContainerVersion == nil {
		return nil, false
	}
	return o.ContainerVersion, true
}

// HasContainerVersion returns a boolean if a field has been set.
func (o *ContainerTypeUpdate) HasContainerVersion() bool {
	if o != nil && o.ContainerVersion != nil {
		return true
	}

	return false
}

// SetContainerVersion gets a reference to the given string and assigns it to the ContainerVersion field.
func (o *ContainerTypeUpdate) SetContainerVersion(v string) {
	o.ContainerVersion = &v
}

// GetProvisionTypeCode returns the ProvisionTypeCode field value if set, zero value otherwise.
func (o *ContainerTypeUpdate) GetProvisionTypeCode() string {
	if o == nil || o.ProvisionTypeCode == nil {
		var ret string
		return ret
	}
	return *o.ProvisionTypeCode
}

// GetProvisionTypeCodeOk returns a tuple with the ProvisionTypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeUpdate) GetProvisionTypeCodeOk() (*string, bool) {
	if o == nil || o.ProvisionTypeCode == nil {
		return nil, false
	}
	return o.ProvisionTypeCode, true
}

// HasProvisionTypeCode returns a boolean if a field has been set.
func (o *ContainerTypeUpdate) HasProvisionTypeCode() bool {
	if o != nil && o.ProvisionTypeCode != nil {
		return true
	}

	return false
}

// SetProvisionTypeCode gets a reference to the given string and assigns it to the ProvisionTypeCode field.
func (o *ContainerTypeUpdate) SetProvisionTypeCode(v string) {
	o.ProvisionTypeCode = &v
}

// GetScripts returns the Scripts field value if set, zero value otherwise.
func (o *ContainerTypeUpdate) GetScripts() []int64 {
	if o == nil || o.Scripts == nil {
		var ret []int64
		return ret
	}
	return *o.Scripts
}

// GetScriptsOk returns a tuple with the Scripts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeUpdate) GetScriptsOk() (*[]int64, bool) {
	if o == nil || o.Scripts == nil {
		return nil, false
	}
	return o.Scripts, true
}

// HasScripts returns a boolean if a field has been set.
func (o *ContainerTypeUpdate) HasScripts() bool {
	if o != nil && o.Scripts != nil {
		return true
	}

	return false
}

// SetScripts gets a reference to the given []int64 and assigns it to the Scripts field.
func (o *ContainerTypeUpdate) SetScripts(v []int64) {
	o.Scripts = &v
}

// GetTemplates returns the Templates field value if set, zero value otherwise.
func (o *ContainerTypeUpdate) GetTemplates() []int64 {
	if o == nil || o.Templates == nil {
		var ret []int64
		return ret
	}
	return *o.Templates
}

// GetTemplatesOk returns a tuple with the Templates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeUpdate) GetTemplatesOk() (*[]int64, bool) {
	if o == nil || o.Templates == nil {
		return nil, false
	}
	return o.Templates, true
}

// HasTemplates returns a boolean if a field has been set.
func (o *ContainerTypeUpdate) HasTemplates() bool {
	if o != nil && o.Templates != nil {
		return true
	}

	return false
}

// SetTemplates gets a reference to the given []int64 and assigns it to the Templates field.
func (o *ContainerTypeUpdate) SetTemplates(v []int64) {
	o.Templates = &v
}

// GetVirtualImageId returns the VirtualImageId field value if set, zero value otherwise.
func (o *ContainerTypeUpdate) GetVirtualImageId() int64 {
	if o == nil || o.VirtualImageId == nil {
		var ret int64
		return ret
	}
	return *o.VirtualImageId
}

// GetVirtualImageIdOk returns a tuple with the VirtualImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeUpdate) GetVirtualImageIdOk() (*int64, bool) {
	if o == nil || o.VirtualImageId == nil {
		return nil, false
	}
	return o.VirtualImageId, true
}

// HasVirtualImageId returns a boolean if a field has been set.
func (o *ContainerTypeUpdate) HasVirtualImageId() bool {
	if o != nil && o.VirtualImageId != nil {
		return true
	}

	return false
}

// SetVirtualImageId gets a reference to the given int64 and assigns it to the VirtualImageId field.
func (o *ContainerTypeUpdate) SetVirtualImageId(v int64) {
	o.VirtualImageId = &v
}

// GetStatTypeCode returns the StatTypeCode field value if set, zero value otherwise.
func (o *ContainerTypeUpdate) GetStatTypeCode() string {
	if o == nil || o.StatTypeCode == nil {
		var ret string
		return ret
	}
	return *o.StatTypeCode
}

// GetStatTypeCodeOk returns a tuple with the StatTypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeUpdate) GetStatTypeCodeOk() (*string, bool) {
	if o == nil || o.StatTypeCode == nil {
		return nil, false
	}
	return o.StatTypeCode, true
}

// HasStatTypeCode returns a boolean if a field has been set.
func (o *ContainerTypeUpdate) HasStatTypeCode() bool {
	if o != nil && o.StatTypeCode != nil {
		return true
	}

	return false
}

// SetStatTypeCode gets a reference to the given string and assigns it to the StatTypeCode field.
func (o *ContainerTypeUpdate) SetStatTypeCode(v string) {
	o.StatTypeCode = &v
}

// GetLogTypeCode returns the LogTypeCode field value if set, zero value otherwise.
func (o *ContainerTypeUpdate) GetLogTypeCode() string {
	if o == nil || o.LogTypeCode == nil {
		var ret string
		return ret
	}
	return *o.LogTypeCode
}

// GetLogTypeCodeOk returns a tuple with the LogTypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeUpdate) GetLogTypeCodeOk() (*string, bool) {
	if o == nil || o.LogTypeCode == nil {
		return nil, false
	}
	return o.LogTypeCode, true
}

// HasLogTypeCode returns a boolean if a field has been set.
func (o *ContainerTypeUpdate) HasLogTypeCode() bool {
	if o != nil && o.LogTypeCode != nil {
		return true
	}

	return false
}

// SetLogTypeCode gets a reference to the given string and assigns it to the LogTypeCode field.
func (o *ContainerTypeUpdate) SetLogTypeCode(v string) {
	o.LogTypeCode = &v
}

// GetServerType returns the ServerType field value if set, zero value otherwise.
func (o *ContainerTypeUpdate) GetServerType() string {
	if o == nil || o.ServerType == nil {
		var ret string
		return ret
	}
	return *o.ServerType
}

// GetServerTypeOk returns a tuple with the ServerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeUpdate) GetServerTypeOk() (*string, bool) {
	if o == nil || o.ServerType == nil {
		return nil, false
	}
	return o.ServerType, true
}

// HasServerType returns a boolean if a field has been set.
func (o *ContainerTypeUpdate) HasServerType() bool {
	if o != nil && o.ServerType != nil {
		return true
	}

	return false
}

// SetServerType gets a reference to the given string and assigns it to the ServerType field.
func (o *ContainerTypeUpdate) SetServerType(v string) {
	o.ServerType = &v
}

// GetContainerPorts returns the ContainerPorts field value if set, zero value otherwise.
func (o *ContainerTypeUpdate) GetContainerPorts() []ContainerTypeCreateContainerPorts {
	if o == nil || o.ContainerPorts == nil {
		var ret []ContainerTypeCreateContainerPorts
		return ret
	}
	return *o.ContainerPorts
}

// GetContainerPortsOk returns a tuple with the ContainerPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeUpdate) GetContainerPortsOk() (*[]ContainerTypeCreateContainerPorts, bool) {
	if o == nil || o.ContainerPorts == nil {
		return nil, false
	}
	return o.ContainerPorts, true
}

// HasContainerPorts returns a boolean if a field has been set.
func (o *ContainerTypeUpdate) HasContainerPorts() bool {
	if o != nil && o.ContainerPorts != nil {
		return true
	}

	return false
}

// SetContainerPorts gets a reference to the given []ContainerTypeCreateContainerPorts and assigns it to the ContainerPorts field.
func (o *ContainerTypeUpdate) SetContainerPorts(v []ContainerTypeCreateContainerPorts) {
	o.ContainerPorts = &v
}

// GetEnvironmentVariables returns the EnvironmentVariables field value if set, zero value otherwise.
func (o *ContainerTypeUpdate) GetEnvironmentVariables() []ClusterLayoutCreateEnvironmentVariables {
	if o == nil || o.EnvironmentVariables == nil {
		var ret []ClusterLayoutCreateEnvironmentVariables
		return ret
	}
	return *o.EnvironmentVariables
}

// GetEnvironmentVariablesOk returns a tuple with the EnvironmentVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeUpdate) GetEnvironmentVariablesOk() (*[]ClusterLayoutCreateEnvironmentVariables, bool) {
	if o == nil || o.EnvironmentVariables == nil {
		return nil, false
	}
	return o.EnvironmentVariables, true
}

// HasEnvironmentVariables returns a boolean if a field has been set.
func (o *ContainerTypeUpdate) HasEnvironmentVariables() bool {
	if o != nil && o.EnvironmentVariables != nil {
		return true
	}

	return false
}

// SetEnvironmentVariables gets a reference to the given []ClusterLayoutCreateEnvironmentVariables and assigns it to the EnvironmentVariables field.
func (o *ContainerTypeUpdate) SetEnvironmentVariables(v []ClusterLayoutCreateEnvironmentVariables) {
	o.EnvironmentVariables = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *ContainerTypeUpdate) GetConfig() map[string]interface{} {
	if o == nil || o.Config == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerTypeUpdate) GetConfigOk() (*map[string]interface{}, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *ContainerTypeUpdate) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *ContainerTypeUpdate) SetConfig(v map[string]interface{}) {
	o.Config = &v
}

func (o ContainerTypeUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.ShortName != nil {
		toSerialize["shortName"] = o.ShortName
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ContainerVersion != nil {
		toSerialize["containerVersion"] = o.ContainerVersion
	}
	if o.ProvisionTypeCode != nil {
		toSerialize["provisionTypeCode"] = o.ProvisionTypeCode
	}
	if o.Scripts != nil {
		toSerialize["scripts"] = o.Scripts
	}
	if o.Templates != nil {
		toSerialize["templates"] = o.Templates
	}
	if o.VirtualImageId != nil {
		toSerialize["virtualImageId"] = o.VirtualImageId
	}
	if o.StatTypeCode != nil {
		toSerialize["statTypeCode"] = o.StatTypeCode
	}
	if o.LogTypeCode != nil {
		toSerialize["logTypeCode"] = o.LogTypeCode
	}
	if o.ServerType != nil {
		toSerialize["serverType"] = o.ServerType
	}
	if o.ContainerPorts != nil {
		toSerialize["containerPorts"] = o.ContainerPorts
	}
	if o.EnvironmentVariables != nil {
		toSerialize["environmentVariables"] = o.EnvironmentVariables
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	return json.Marshal(toSerialize)
}

type NullableContainerTypeUpdate struct {
	value *ContainerTypeUpdate
	isSet bool
}

func (v NullableContainerTypeUpdate) Get() *ContainerTypeUpdate {
	return v.value
}

func (v *NullableContainerTypeUpdate) Set(val *ContainerTypeUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerTypeUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerTypeUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerTypeUpdate(val *ContainerTypeUpdate) *NullableContainerTypeUpdate {
	return &NullableContainerTypeUpdate{value: val, isSet: true}
}

func (v NullableContainerTypeUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerTypeUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


