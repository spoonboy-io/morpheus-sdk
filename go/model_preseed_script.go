/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PreseedScript struct for PreseedScript
type PreseedScript struct {
	Id *int64 `json:"id,omitempty"`
	Account *InlineResponse20040AppDeployInstance `json:"account,omitempty"`
	FileName *string `json:"fileName,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Content *string `json:"content,omitempty"`
	CreatedBy *ArchiveBucketFileCreatedBy `json:"createdBy,omitempty"`
}

// NewPreseedScript instantiates a new PreseedScript object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreseedScript() *PreseedScript {
	this := PreseedScript{}
	return &this
}

// NewPreseedScriptWithDefaults instantiates a new PreseedScript object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreseedScriptWithDefaults() *PreseedScript {
	this := PreseedScript{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PreseedScript) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreseedScript) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PreseedScript) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *PreseedScript) SetId(v int64) {
	o.Id = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *PreseedScript) GetAccount() InlineResponse20040AppDeployInstance {
	if o == nil || o.Account == nil {
		var ret InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreseedScript) GetAccountOk() (*InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Account == nil {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *PreseedScript) HasAccount() bool {
	if o != nil && o.Account != nil {
		return true
	}

	return false
}

// SetAccount gets a reference to the given InlineResponse20040AppDeployInstance and assigns it to the Account field.
func (o *PreseedScript) SetAccount(v InlineResponse20040AppDeployInstance) {
	o.Account = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *PreseedScript) GetFileName() string {
	if o == nil || o.FileName == nil {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreseedScript) GetFileNameOk() (*string, bool) {
	if o == nil || o.FileName == nil {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *PreseedScript) HasFileName() bool {
	if o != nil && o.FileName != nil {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *PreseedScript) SetFileName(v string) {
	o.FileName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PreseedScript) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PreseedScript) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *PreseedScript) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *PreseedScript) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *PreseedScript) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *PreseedScript) UnsetDescription() {
	o.Description.Unset()
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *PreseedScript) GetContent() string {
	if o == nil || o.Content == nil {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreseedScript) GetContentOk() (*string, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *PreseedScript) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *PreseedScript) SetContent(v string) {
	o.Content = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *PreseedScript) GetCreatedBy() ArchiveBucketFileCreatedBy {
	if o == nil || o.CreatedBy == nil {
		var ret ArchiveBucketFileCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreseedScript) GetCreatedByOk() (*ArchiveBucketFileCreatedBy, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *PreseedScript) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given ArchiveBucketFileCreatedBy and assigns it to the CreatedBy field.
func (o *PreseedScript) SetCreatedBy(v ArchiveBucketFileCreatedBy) {
	o.CreatedBy = &v
}

func (o PreseedScript) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Account != nil {
		toSerialize["account"] = o.Account
	}
	if o.FileName != nil {
		toSerialize["fileName"] = o.FileName
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	return json.Marshal(toSerialize)
}

type NullablePreseedScript struct {
	value *PreseedScript
	isSet bool
}

func (v NullablePreseedScript) Get() *PreseedScript {
	return v.value
}

func (v *NullablePreseedScript) Set(val *PreseedScript) {
	v.value = val
	v.isSet = true
}

func (v NullablePreseedScript) IsSet() bool {
	return v.isSet
}

func (v *NullablePreseedScript) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreseedScript(val *PreseedScript) *NullablePreseedScript {
	return &NullablePreseedScript{value: val, isSet: true}
}

func (v NullablePreseedScript) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreseedScript) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


