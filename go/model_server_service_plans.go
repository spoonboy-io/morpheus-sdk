/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ServerServicePlans struct for ServerServicePlans
type ServerServicePlans struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Value *int64 `json:"value,omitempty"`
	Code *string `json:"code,omitempty"`
	MaxStorage *int64 `json:"maxStorage,omitempty"`
	MaxMemory *int64 `json:"maxMemory,omitempty"`
	MaxCpu *int64 `json:"maxCpu,omitempty"`
	MaxCores *int64 `json:"maxCores,omitempty"`
	MaxDataStorage *int64 `json:"maxDataStorage,omitempty"`
	CustomCpu *bool `json:"customCpu,omitempty"`
	CustomMaxMemory *bool `json:"customMaxMemory,omitempty"`
	CustomMaxStorage *bool `json:"customMaxStorage,omitempty"`
	CustomMaxDataStorage *bool `json:"customMaxDataStorage,omitempty"`
	CustomCoresPerSocket *bool `json:"customCoresPerSocket,omitempty"`
	CoresPerSocket NullableInt64 `json:"coresPerSocket,omitempty"`
	StorageTypes []map[string]interface{} `json:"storageTypes,omitempty"`
	RootStorageTypes []map[string]interface{} `json:"rootStorageTypes,omitempty"`
	AddVolumes *bool `json:"addVolumes,omitempty"`
	CustomizeVolume *bool `json:"customizeVolume,omitempty"`
	RootDiskCustomizable *bool `json:"rootDiskCustomizable,omitempty"`
	HostDiskMode NullableString `json:"hostDiskMode,omitempty"`
	HasDatastore NullableString `json:"hasDatastore,omitempty"`
	LvmSupported NullableString `json:"lvmSupported,omitempty"`
	MinDisk NullableString `json:"minDisk,omitempty"`
	MaxDisk NullableString `json:"maxDisk,omitempty"`
	Datastores *ServerServicePlansDatastores `json:"datastores,omitempty"`
	SupportsAutoDatastore *bool `json:"supportsAutoDatastore,omitempty"`
	AutoOptions *[]InstanceServicePlanAutoOptions `json:"autoOptions,omitempty"`
	CpuOptions []map[string]interface{} `json:"cpuOptions,omitempty"`
	MemoryOptions []map[string]interface{} `json:"memoryOptions,omitempty"`
	RootCustomSizeOptions *map[string]interface{} `json:"rootCustomSizeOptions,omitempty"`
	CustomSizeOptions *map[string]interface{} `json:"customSizeOptions,omitempty"`
	CustomCores *bool `json:"customCores,omitempty"`
	MaxDisks NullableString `json:"maxDisks,omitempty"`
	MemorySizeType *string `json:"memorySizeType,omitempty"`
}

// NewServerServicePlans instantiates a new ServerServicePlans object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerServicePlans() *ServerServicePlans {
	this := ServerServicePlans{}
	return &this
}

// NewServerServicePlansWithDefaults instantiates a new ServerServicePlans object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerServicePlansWithDefaults() *ServerServicePlans {
	this := ServerServicePlans{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServerServicePlans) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServerServicePlans) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ServerServicePlans) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServerServicePlans) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServerServicePlans) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServerServicePlans) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ServerServicePlans) GetValue() int64 {
	if o == nil || o.Value == nil {
		var ret int64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetValueOk() (*int64, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ServerServicePlans) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given int64 and assigns it to the Value field.
func (o *ServerServicePlans) SetValue(v int64) {
	o.Value = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ServerServicePlans) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ServerServicePlans) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ServerServicePlans) SetCode(v string) {
	o.Code = &v
}

// GetMaxStorage returns the MaxStorage field value if set, zero value otherwise.
func (o *ServerServicePlans) GetMaxStorage() int64 {
	if o == nil || o.MaxStorage == nil {
		var ret int64
		return ret
	}
	return *o.MaxStorage
}

// GetMaxStorageOk returns a tuple with the MaxStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetMaxStorageOk() (*int64, bool) {
	if o == nil || o.MaxStorage == nil {
		return nil, false
	}
	return o.MaxStorage, true
}

// HasMaxStorage returns a boolean if a field has been set.
func (o *ServerServicePlans) HasMaxStorage() bool {
	if o != nil && o.MaxStorage != nil {
		return true
	}

	return false
}

// SetMaxStorage gets a reference to the given int64 and assigns it to the MaxStorage field.
func (o *ServerServicePlans) SetMaxStorage(v int64) {
	o.MaxStorage = &v
}

// GetMaxMemory returns the MaxMemory field value if set, zero value otherwise.
func (o *ServerServicePlans) GetMaxMemory() int64 {
	if o == nil || o.MaxMemory == nil {
		var ret int64
		return ret
	}
	return *o.MaxMemory
}

// GetMaxMemoryOk returns a tuple with the MaxMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetMaxMemoryOk() (*int64, bool) {
	if o == nil || o.MaxMemory == nil {
		return nil, false
	}
	return o.MaxMemory, true
}

// HasMaxMemory returns a boolean if a field has been set.
func (o *ServerServicePlans) HasMaxMemory() bool {
	if o != nil && o.MaxMemory != nil {
		return true
	}

	return false
}

// SetMaxMemory gets a reference to the given int64 and assigns it to the MaxMemory field.
func (o *ServerServicePlans) SetMaxMemory(v int64) {
	o.MaxMemory = &v
}

// GetMaxCpu returns the MaxCpu field value if set, zero value otherwise.
func (o *ServerServicePlans) GetMaxCpu() int64 {
	if o == nil || o.MaxCpu == nil {
		var ret int64
		return ret
	}
	return *o.MaxCpu
}

// GetMaxCpuOk returns a tuple with the MaxCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetMaxCpuOk() (*int64, bool) {
	if o == nil || o.MaxCpu == nil {
		return nil, false
	}
	return o.MaxCpu, true
}

// HasMaxCpu returns a boolean if a field has been set.
func (o *ServerServicePlans) HasMaxCpu() bool {
	if o != nil && o.MaxCpu != nil {
		return true
	}

	return false
}

// SetMaxCpu gets a reference to the given int64 and assigns it to the MaxCpu field.
func (o *ServerServicePlans) SetMaxCpu(v int64) {
	o.MaxCpu = &v
}

// GetMaxCores returns the MaxCores field value if set, zero value otherwise.
func (o *ServerServicePlans) GetMaxCores() int64 {
	if o == nil || o.MaxCores == nil {
		var ret int64
		return ret
	}
	return *o.MaxCores
}

// GetMaxCoresOk returns a tuple with the MaxCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetMaxCoresOk() (*int64, bool) {
	if o == nil || o.MaxCores == nil {
		return nil, false
	}
	return o.MaxCores, true
}

// HasMaxCores returns a boolean if a field has been set.
func (o *ServerServicePlans) HasMaxCores() bool {
	if o != nil && o.MaxCores != nil {
		return true
	}

	return false
}

// SetMaxCores gets a reference to the given int64 and assigns it to the MaxCores field.
func (o *ServerServicePlans) SetMaxCores(v int64) {
	o.MaxCores = &v
}

// GetMaxDataStorage returns the MaxDataStorage field value if set, zero value otherwise.
func (o *ServerServicePlans) GetMaxDataStorage() int64 {
	if o == nil || o.MaxDataStorage == nil {
		var ret int64
		return ret
	}
	return *o.MaxDataStorage
}

// GetMaxDataStorageOk returns a tuple with the MaxDataStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetMaxDataStorageOk() (*int64, bool) {
	if o == nil || o.MaxDataStorage == nil {
		return nil, false
	}
	return o.MaxDataStorage, true
}

// HasMaxDataStorage returns a boolean if a field has been set.
func (o *ServerServicePlans) HasMaxDataStorage() bool {
	if o != nil && o.MaxDataStorage != nil {
		return true
	}

	return false
}

// SetMaxDataStorage gets a reference to the given int64 and assigns it to the MaxDataStorage field.
func (o *ServerServicePlans) SetMaxDataStorage(v int64) {
	o.MaxDataStorage = &v
}

// GetCustomCpu returns the CustomCpu field value if set, zero value otherwise.
func (o *ServerServicePlans) GetCustomCpu() bool {
	if o == nil || o.CustomCpu == nil {
		var ret bool
		return ret
	}
	return *o.CustomCpu
}

// GetCustomCpuOk returns a tuple with the CustomCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetCustomCpuOk() (*bool, bool) {
	if o == nil || o.CustomCpu == nil {
		return nil, false
	}
	return o.CustomCpu, true
}

// HasCustomCpu returns a boolean if a field has been set.
func (o *ServerServicePlans) HasCustomCpu() bool {
	if o != nil && o.CustomCpu != nil {
		return true
	}

	return false
}

// SetCustomCpu gets a reference to the given bool and assigns it to the CustomCpu field.
func (o *ServerServicePlans) SetCustomCpu(v bool) {
	o.CustomCpu = &v
}

// GetCustomMaxMemory returns the CustomMaxMemory field value if set, zero value otherwise.
func (o *ServerServicePlans) GetCustomMaxMemory() bool {
	if o == nil || o.CustomMaxMemory == nil {
		var ret bool
		return ret
	}
	return *o.CustomMaxMemory
}

// GetCustomMaxMemoryOk returns a tuple with the CustomMaxMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetCustomMaxMemoryOk() (*bool, bool) {
	if o == nil || o.CustomMaxMemory == nil {
		return nil, false
	}
	return o.CustomMaxMemory, true
}

// HasCustomMaxMemory returns a boolean if a field has been set.
func (o *ServerServicePlans) HasCustomMaxMemory() bool {
	if o != nil && o.CustomMaxMemory != nil {
		return true
	}

	return false
}

// SetCustomMaxMemory gets a reference to the given bool and assigns it to the CustomMaxMemory field.
func (o *ServerServicePlans) SetCustomMaxMemory(v bool) {
	o.CustomMaxMemory = &v
}

// GetCustomMaxStorage returns the CustomMaxStorage field value if set, zero value otherwise.
func (o *ServerServicePlans) GetCustomMaxStorage() bool {
	if o == nil || o.CustomMaxStorage == nil {
		var ret bool
		return ret
	}
	return *o.CustomMaxStorage
}

// GetCustomMaxStorageOk returns a tuple with the CustomMaxStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetCustomMaxStorageOk() (*bool, bool) {
	if o == nil || o.CustomMaxStorage == nil {
		return nil, false
	}
	return o.CustomMaxStorage, true
}

// HasCustomMaxStorage returns a boolean if a field has been set.
func (o *ServerServicePlans) HasCustomMaxStorage() bool {
	if o != nil && o.CustomMaxStorage != nil {
		return true
	}

	return false
}

// SetCustomMaxStorage gets a reference to the given bool and assigns it to the CustomMaxStorage field.
func (o *ServerServicePlans) SetCustomMaxStorage(v bool) {
	o.CustomMaxStorage = &v
}

// GetCustomMaxDataStorage returns the CustomMaxDataStorage field value if set, zero value otherwise.
func (o *ServerServicePlans) GetCustomMaxDataStorage() bool {
	if o == nil || o.CustomMaxDataStorage == nil {
		var ret bool
		return ret
	}
	return *o.CustomMaxDataStorage
}

// GetCustomMaxDataStorageOk returns a tuple with the CustomMaxDataStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetCustomMaxDataStorageOk() (*bool, bool) {
	if o == nil || o.CustomMaxDataStorage == nil {
		return nil, false
	}
	return o.CustomMaxDataStorage, true
}

// HasCustomMaxDataStorage returns a boolean if a field has been set.
func (o *ServerServicePlans) HasCustomMaxDataStorage() bool {
	if o != nil && o.CustomMaxDataStorage != nil {
		return true
	}

	return false
}

// SetCustomMaxDataStorage gets a reference to the given bool and assigns it to the CustomMaxDataStorage field.
func (o *ServerServicePlans) SetCustomMaxDataStorage(v bool) {
	o.CustomMaxDataStorage = &v
}

// GetCustomCoresPerSocket returns the CustomCoresPerSocket field value if set, zero value otherwise.
func (o *ServerServicePlans) GetCustomCoresPerSocket() bool {
	if o == nil || o.CustomCoresPerSocket == nil {
		var ret bool
		return ret
	}
	return *o.CustomCoresPerSocket
}

// GetCustomCoresPerSocketOk returns a tuple with the CustomCoresPerSocket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetCustomCoresPerSocketOk() (*bool, bool) {
	if o == nil || o.CustomCoresPerSocket == nil {
		return nil, false
	}
	return o.CustomCoresPerSocket, true
}

// HasCustomCoresPerSocket returns a boolean if a field has been set.
func (o *ServerServicePlans) HasCustomCoresPerSocket() bool {
	if o != nil && o.CustomCoresPerSocket != nil {
		return true
	}

	return false
}

// SetCustomCoresPerSocket gets a reference to the given bool and assigns it to the CustomCoresPerSocket field.
func (o *ServerServicePlans) SetCustomCoresPerSocket(v bool) {
	o.CustomCoresPerSocket = &v
}

// GetCoresPerSocket returns the CoresPerSocket field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerServicePlans) GetCoresPerSocket() int64 {
	if o == nil || o.CoresPerSocket.Get() == nil {
		var ret int64
		return ret
	}
	return *o.CoresPerSocket.Get()
}

// GetCoresPerSocketOk returns a tuple with the CoresPerSocket field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerServicePlans) GetCoresPerSocketOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CoresPerSocket.Get(), o.CoresPerSocket.IsSet()
}

// HasCoresPerSocket returns a boolean if a field has been set.
func (o *ServerServicePlans) HasCoresPerSocket() bool {
	if o != nil && o.CoresPerSocket.IsSet() {
		return true
	}

	return false
}

// SetCoresPerSocket gets a reference to the given NullableInt64 and assigns it to the CoresPerSocket field.
func (o *ServerServicePlans) SetCoresPerSocket(v int64) {
	o.CoresPerSocket.Set(&v)
}
// SetCoresPerSocketNil sets the value for CoresPerSocket to be an explicit nil
func (o *ServerServicePlans) SetCoresPerSocketNil() {
	o.CoresPerSocket.Set(nil)
}

// UnsetCoresPerSocket ensures that no value is present for CoresPerSocket, not even an explicit nil
func (o *ServerServicePlans) UnsetCoresPerSocket() {
	o.CoresPerSocket.Unset()
}

// GetStorageTypes returns the StorageTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerServicePlans) GetStorageTypes() []map[string]interface{} {
	if o == nil  {
		var ret []map[string]interface{}
		return ret
	}
	return o.StorageTypes
}

// GetStorageTypesOk returns a tuple with the StorageTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerServicePlans) GetStorageTypesOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.StorageTypes == nil {
		return nil, false
	}
	return &o.StorageTypes, true
}

// HasStorageTypes returns a boolean if a field has been set.
func (o *ServerServicePlans) HasStorageTypes() bool {
	if o != nil && o.StorageTypes != nil {
		return true
	}

	return false
}

// SetStorageTypes gets a reference to the given []map[string]interface{} and assigns it to the StorageTypes field.
func (o *ServerServicePlans) SetStorageTypes(v []map[string]interface{}) {
	o.StorageTypes = v
}

// GetRootStorageTypes returns the RootStorageTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerServicePlans) GetRootStorageTypes() []map[string]interface{} {
	if o == nil  {
		var ret []map[string]interface{}
		return ret
	}
	return o.RootStorageTypes
}

// GetRootStorageTypesOk returns a tuple with the RootStorageTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerServicePlans) GetRootStorageTypesOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.RootStorageTypes == nil {
		return nil, false
	}
	return &o.RootStorageTypes, true
}

// HasRootStorageTypes returns a boolean if a field has been set.
func (o *ServerServicePlans) HasRootStorageTypes() bool {
	if o != nil && o.RootStorageTypes != nil {
		return true
	}

	return false
}

// SetRootStorageTypes gets a reference to the given []map[string]interface{} and assigns it to the RootStorageTypes field.
func (o *ServerServicePlans) SetRootStorageTypes(v []map[string]interface{}) {
	o.RootStorageTypes = v
}

// GetAddVolumes returns the AddVolumes field value if set, zero value otherwise.
func (o *ServerServicePlans) GetAddVolumes() bool {
	if o == nil || o.AddVolumes == nil {
		var ret bool
		return ret
	}
	return *o.AddVolumes
}

// GetAddVolumesOk returns a tuple with the AddVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetAddVolumesOk() (*bool, bool) {
	if o == nil || o.AddVolumes == nil {
		return nil, false
	}
	return o.AddVolumes, true
}

// HasAddVolumes returns a boolean if a field has been set.
func (o *ServerServicePlans) HasAddVolumes() bool {
	if o != nil && o.AddVolumes != nil {
		return true
	}

	return false
}

// SetAddVolumes gets a reference to the given bool and assigns it to the AddVolumes field.
func (o *ServerServicePlans) SetAddVolumes(v bool) {
	o.AddVolumes = &v
}

// GetCustomizeVolume returns the CustomizeVolume field value if set, zero value otherwise.
func (o *ServerServicePlans) GetCustomizeVolume() bool {
	if o == nil || o.CustomizeVolume == nil {
		var ret bool
		return ret
	}
	return *o.CustomizeVolume
}

// GetCustomizeVolumeOk returns a tuple with the CustomizeVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetCustomizeVolumeOk() (*bool, bool) {
	if o == nil || o.CustomizeVolume == nil {
		return nil, false
	}
	return o.CustomizeVolume, true
}

// HasCustomizeVolume returns a boolean if a field has been set.
func (o *ServerServicePlans) HasCustomizeVolume() bool {
	if o != nil && o.CustomizeVolume != nil {
		return true
	}

	return false
}

// SetCustomizeVolume gets a reference to the given bool and assigns it to the CustomizeVolume field.
func (o *ServerServicePlans) SetCustomizeVolume(v bool) {
	o.CustomizeVolume = &v
}

// GetRootDiskCustomizable returns the RootDiskCustomizable field value if set, zero value otherwise.
func (o *ServerServicePlans) GetRootDiskCustomizable() bool {
	if o == nil || o.RootDiskCustomizable == nil {
		var ret bool
		return ret
	}
	return *o.RootDiskCustomizable
}

// GetRootDiskCustomizableOk returns a tuple with the RootDiskCustomizable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetRootDiskCustomizableOk() (*bool, bool) {
	if o == nil || o.RootDiskCustomizable == nil {
		return nil, false
	}
	return o.RootDiskCustomizable, true
}

// HasRootDiskCustomizable returns a boolean if a field has been set.
func (o *ServerServicePlans) HasRootDiskCustomizable() bool {
	if o != nil && o.RootDiskCustomizable != nil {
		return true
	}

	return false
}

// SetRootDiskCustomizable gets a reference to the given bool and assigns it to the RootDiskCustomizable field.
func (o *ServerServicePlans) SetRootDiskCustomizable(v bool) {
	o.RootDiskCustomizable = &v
}

// GetHostDiskMode returns the HostDiskMode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerServicePlans) GetHostDiskMode() string {
	if o == nil || o.HostDiskMode.Get() == nil {
		var ret string
		return ret
	}
	return *o.HostDiskMode.Get()
}

// GetHostDiskModeOk returns a tuple with the HostDiskMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerServicePlans) GetHostDiskModeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HostDiskMode.Get(), o.HostDiskMode.IsSet()
}

// HasHostDiskMode returns a boolean if a field has been set.
func (o *ServerServicePlans) HasHostDiskMode() bool {
	if o != nil && o.HostDiskMode.IsSet() {
		return true
	}

	return false
}

// SetHostDiskMode gets a reference to the given NullableString and assigns it to the HostDiskMode field.
func (o *ServerServicePlans) SetHostDiskMode(v string) {
	o.HostDiskMode.Set(&v)
}
// SetHostDiskModeNil sets the value for HostDiskMode to be an explicit nil
func (o *ServerServicePlans) SetHostDiskModeNil() {
	o.HostDiskMode.Set(nil)
}

// UnsetHostDiskMode ensures that no value is present for HostDiskMode, not even an explicit nil
func (o *ServerServicePlans) UnsetHostDiskMode() {
	o.HostDiskMode.Unset()
}

// GetHasDatastore returns the HasDatastore field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerServicePlans) GetHasDatastore() string {
	if o == nil || o.HasDatastore.Get() == nil {
		var ret string
		return ret
	}
	return *o.HasDatastore.Get()
}

// GetHasDatastoreOk returns a tuple with the HasDatastore field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerServicePlans) GetHasDatastoreOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.HasDatastore.Get(), o.HasDatastore.IsSet()
}

// HasHasDatastore returns a boolean if a field has been set.
func (o *ServerServicePlans) HasHasDatastore() bool {
	if o != nil && o.HasDatastore.IsSet() {
		return true
	}

	return false
}

// SetHasDatastore gets a reference to the given NullableString and assigns it to the HasDatastore field.
func (o *ServerServicePlans) SetHasDatastore(v string) {
	o.HasDatastore.Set(&v)
}
// SetHasDatastoreNil sets the value for HasDatastore to be an explicit nil
func (o *ServerServicePlans) SetHasDatastoreNil() {
	o.HasDatastore.Set(nil)
}

// UnsetHasDatastore ensures that no value is present for HasDatastore, not even an explicit nil
func (o *ServerServicePlans) UnsetHasDatastore() {
	o.HasDatastore.Unset()
}

// GetLvmSupported returns the LvmSupported field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerServicePlans) GetLvmSupported() string {
	if o == nil || o.LvmSupported.Get() == nil {
		var ret string
		return ret
	}
	return *o.LvmSupported.Get()
}

// GetLvmSupportedOk returns a tuple with the LvmSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerServicePlans) GetLvmSupportedOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.LvmSupported.Get(), o.LvmSupported.IsSet()
}

// HasLvmSupported returns a boolean if a field has been set.
func (o *ServerServicePlans) HasLvmSupported() bool {
	if o != nil && o.LvmSupported.IsSet() {
		return true
	}

	return false
}

// SetLvmSupported gets a reference to the given NullableString and assigns it to the LvmSupported field.
func (o *ServerServicePlans) SetLvmSupported(v string) {
	o.LvmSupported.Set(&v)
}
// SetLvmSupportedNil sets the value for LvmSupported to be an explicit nil
func (o *ServerServicePlans) SetLvmSupportedNil() {
	o.LvmSupported.Set(nil)
}

// UnsetLvmSupported ensures that no value is present for LvmSupported, not even an explicit nil
func (o *ServerServicePlans) UnsetLvmSupported() {
	o.LvmSupported.Unset()
}

// GetMinDisk returns the MinDisk field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerServicePlans) GetMinDisk() string {
	if o == nil || o.MinDisk.Get() == nil {
		var ret string
		return ret
	}
	return *o.MinDisk.Get()
}

// GetMinDiskOk returns a tuple with the MinDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerServicePlans) GetMinDiskOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MinDisk.Get(), o.MinDisk.IsSet()
}

// HasMinDisk returns a boolean if a field has been set.
func (o *ServerServicePlans) HasMinDisk() bool {
	if o != nil && o.MinDisk.IsSet() {
		return true
	}

	return false
}

// SetMinDisk gets a reference to the given NullableString and assigns it to the MinDisk field.
func (o *ServerServicePlans) SetMinDisk(v string) {
	o.MinDisk.Set(&v)
}
// SetMinDiskNil sets the value for MinDisk to be an explicit nil
func (o *ServerServicePlans) SetMinDiskNil() {
	o.MinDisk.Set(nil)
}

// UnsetMinDisk ensures that no value is present for MinDisk, not even an explicit nil
func (o *ServerServicePlans) UnsetMinDisk() {
	o.MinDisk.Unset()
}

// GetMaxDisk returns the MaxDisk field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerServicePlans) GetMaxDisk() string {
	if o == nil || o.MaxDisk.Get() == nil {
		var ret string
		return ret
	}
	return *o.MaxDisk.Get()
}

// GetMaxDiskOk returns a tuple with the MaxDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerServicePlans) GetMaxDiskOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxDisk.Get(), o.MaxDisk.IsSet()
}

// HasMaxDisk returns a boolean if a field has been set.
func (o *ServerServicePlans) HasMaxDisk() bool {
	if o != nil && o.MaxDisk.IsSet() {
		return true
	}

	return false
}

// SetMaxDisk gets a reference to the given NullableString and assigns it to the MaxDisk field.
func (o *ServerServicePlans) SetMaxDisk(v string) {
	o.MaxDisk.Set(&v)
}
// SetMaxDiskNil sets the value for MaxDisk to be an explicit nil
func (o *ServerServicePlans) SetMaxDiskNil() {
	o.MaxDisk.Set(nil)
}

// UnsetMaxDisk ensures that no value is present for MaxDisk, not even an explicit nil
func (o *ServerServicePlans) UnsetMaxDisk() {
	o.MaxDisk.Unset()
}

// GetDatastores returns the Datastores field value if set, zero value otherwise.
func (o *ServerServicePlans) GetDatastores() ServerServicePlansDatastores {
	if o == nil || o.Datastores == nil {
		var ret ServerServicePlansDatastores
		return ret
	}
	return *o.Datastores
}

// GetDatastoresOk returns a tuple with the Datastores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetDatastoresOk() (*ServerServicePlansDatastores, bool) {
	if o == nil || o.Datastores == nil {
		return nil, false
	}
	return o.Datastores, true
}

// HasDatastores returns a boolean if a field has been set.
func (o *ServerServicePlans) HasDatastores() bool {
	if o != nil && o.Datastores != nil {
		return true
	}

	return false
}

// SetDatastores gets a reference to the given ServerServicePlansDatastores and assigns it to the Datastores field.
func (o *ServerServicePlans) SetDatastores(v ServerServicePlansDatastores) {
	o.Datastores = &v
}

// GetSupportsAutoDatastore returns the SupportsAutoDatastore field value if set, zero value otherwise.
func (o *ServerServicePlans) GetSupportsAutoDatastore() bool {
	if o == nil || o.SupportsAutoDatastore == nil {
		var ret bool
		return ret
	}
	return *o.SupportsAutoDatastore
}

// GetSupportsAutoDatastoreOk returns a tuple with the SupportsAutoDatastore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetSupportsAutoDatastoreOk() (*bool, bool) {
	if o == nil || o.SupportsAutoDatastore == nil {
		return nil, false
	}
	return o.SupportsAutoDatastore, true
}

// HasSupportsAutoDatastore returns a boolean if a field has been set.
func (o *ServerServicePlans) HasSupportsAutoDatastore() bool {
	if o != nil && o.SupportsAutoDatastore != nil {
		return true
	}

	return false
}

// SetSupportsAutoDatastore gets a reference to the given bool and assigns it to the SupportsAutoDatastore field.
func (o *ServerServicePlans) SetSupportsAutoDatastore(v bool) {
	o.SupportsAutoDatastore = &v
}

// GetAutoOptions returns the AutoOptions field value if set, zero value otherwise.
func (o *ServerServicePlans) GetAutoOptions() []InstanceServicePlanAutoOptions {
	if o == nil || o.AutoOptions == nil {
		var ret []InstanceServicePlanAutoOptions
		return ret
	}
	return *o.AutoOptions
}

// GetAutoOptionsOk returns a tuple with the AutoOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetAutoOptionsOk() (*[]InstanceServicePlanAutoOptions, bool) {
	if o == nil || o.AutoOptions == nil {
		return nil, false
	}
	return o.AutoOptions, true
}

// HasAutoOptions returns a boolean if a field has been set.
func (o *ServerServicePlans) HasAutoOptions() bool {
	if o != nil && o.AutoOptions != nil {
		return true
	}

	return false
}

// SetAutoOptions gets a reference to the given []InstanceServicePlanAutoOptions and assigns it to the AutoOptions field.
func (o *ServerServicePlans) SetAutoOptions(v []InstanceServicePlanAutoOptions) {
	o.AutoOptions = &v
}

// GetCpuOptions returns the CpuOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerServicePlans) GetCpuOptions() []map[string]interface{} {
	if o == nil  {
		var ret []map[string]interface{}
		return ret
	}
	return o.CpuOptions
}

// GetCpuOptionsOk returns a tuple with the CpuOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerServicePlans) GetCpuOptionsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.CpuOptions == nil {
		return nil, false
	}
	return &o.CpuOptions, true
}

// HasCpuOptions returns a boolean if a field has been set.
func (o *ServerServicePlans) HasCpuOptions() bool {
	if o != nil && o.CpuOptions != nil {
		return true
	}

	return false
}

// SetCpuOptions gets a reference to the given []map[string]interface{} and assigns it to the CpuOptions field.
func (o *ServerServicePlans) SetCpuOptions(v []map[string]interface{}) {
	o.CpuOptions = v
}

// GetMemoryOptions returns the MemoryOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerServicePlans) GetMemoryOptions() []map[string]interface{} {
	if o == nil  {
		var ret []map[string]interface{}
		return ret
	}
	return o.MemoryOptions
}

// GetMemoryOptionsOk returns a tuple with the MemoryOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerServicePlans) GetMemoryOptionsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.MemoryOptions == nil {
		return nil, false
	}
	return &o.MemoryOptions, true
}

// HasMemoryOptions returns a boolean if a field has been set.
func (o *ServerServicePlans) HasMemoryOptions() bool {
	if o != nil && o.MemoryOptions != nil {
		return true
	}

	return false
}

// SetMemoryOptions gets a reference to the given []map[string]interface{} and assigns it to the MemoryOptions field.
func (o *ServerServicePlans) SetMemoryOptions(v []map[string]interface{}) {
	o.MemoryOptions = v
}

// GetRootCustomSizeOptions returns the RootCustomSizeOptions field value if set, zero value otherwise.
func (o *ServerServicePlans) GetRootCustomSizeOptions() map[string]interface{} {
	if o == nil || o.RootCustomSizeOptions == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.RootCustomSizeOptions
}

// GetRootCustomSizeOptionsOk returns a tuple with the RootCustomSizeOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetRootCustomSizeOptionsOk() (*map[string]interface{}, bool) {
	if o == nil || o.RootCustomSizeOptions == nil {
		return nil, false
	}
	return o.RootCustomSizeOptions, true
}

// HasRootCustomSizeOptions returns a boolean if a field has been set.
func (o *ServerServicePlans) HasRootCustomSizeOptions() bool {
	if o != nil && o.RootCustomSizeOptions != nil {
		return true
	}

	return false
}

// SetRootCustomSizeOptions gets a reference to the given map[string]interface{} and assigns it to the RootCustomSizeOptions field.
func (o *ServerServicePlans) SetRootCustomSizeOptions(v map[string]interface{}) {
	o.RootCustomSizeOptions = &v
}

// GetCustomSizeOptions returns the CustomSizeOptions field value if set, zero value otherwise.
func (o *ServerServicePlans) GetCustomSizeOptions() map[string]interface{} {
	if o == nil || o.CustomSizeOptions == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.CustomSizeOptions
}

// GetCustomSizeOptionsOk returns a tuple with the CustomSizeOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetCustomSizeOptionsOk() (*map[string]interface{}, bool) {
	if o == nil || o.CustomSizeOptions == nil {
		return nil, false
	}
	return o.CustomSizeOptions, true
}

// HasCustomSizeOptions returns a boolean if a field has been set.
func (o *ServerServicePlans) HasCustomSizeOptions() bool {
	if o != nil && o.CustomSizeOptions != nil {
		return true
	}

	return false
}

// SetCustomSizeOptions gets a reference to the given map[string]interface{} and assigns it to the CustomSizeOptions field.
func (o *ServerServicePlans) SetCustomSizeOptions(v map[string]interface{}) {
	o.CustomSizeOptions = &v
}

// GetCustomCores returns the CustomCores field value if set, zero value otherwise.
func (o *ServerServicePlans) GetCustomCores() bool {
	if o == nil || o.CustomCores == nil {
		var ret bool
		return ret
	}
	return *o.CustomCores
}

// GetCustomCoresOk returns a tuple with the CustomCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetCustomCoresOk() (*bool, bool) {
	if o == nil || o.CustomCores == nil {
		return nil, false
	}
	return o.CustomCores, true
}

// HasCustomCores returns a boolean if a field has been set.
func (o *ServerServicePlans) HasCustomCores() bool {
	if o != nil && o.CustomCores != nil {
		return true
	}

	return false
}

// SetCustomCores gets a reference to the given bool and assigns it to the CustomCores field.
func (o *ServerServicePlans) SetCustomCores(v bool) {
	o.CustomCores = &v
}

// GetMaxDisks returns the MaxDisks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServerServicePlans) GetMaxDisks() string {
	if o == nil || o.MaxDisks.Get() == nil {
		var ret string
		return ret
	}
	return *o.MaxDisks.Get()
}

// GetMaxDisksOk returns a tuple with the MaxDisks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServerServicePlans) GetMaxDisksOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MaxDisks.Get(), o.MaxDisks.IsSet()
}

// HasMaxDisks returns a boolean if a field has been set.
func (o *ServerServicePlans) HasMaxDisks() bool {
	if o != nil && o.MaxDisks.IsSet() {
		return true
	}

	return false
}

// SetMaxDisks gets a reference to the given NullableString and assigns it to the MaxDisks field.
func (o *ServerServicePlans) SetMaxDisks(v string) {
	o.MaxDisks.Set(&v)
}
// SetMaxDisksNil sets the value for MaxDisks to be an explicit nil
func (o *ServerServicePlans) SetMaxDisksNil() {
	o.MaxDisks.Set(nil)
}

// UnsetMaxDisks ensures that no value is present for MaxDisks, not even an explicit nil
func (o *ServerServicePlans) UnsetMaxDisks() {
	o.MaxDisks.Unset()
}

// GetMemorySizeType returns the MemorySizeType field value if set, zero value otherwise.
func (o *ServerServicePlans) GetMemorySizeType() string {
	if o == nil || o.MemorySizeType == nil {
		var ret string
		return ret
	}
	return *o.MemorySizeType
}

// GetMemorySizeTypeOk returns a tuple with the MemorySizeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerServicePlans) GetMemorySizeTypeOk() (*string, bool) {
	if o == nil || o.MemorySizeType == nil {
		return nil, false
	}
	return o.MemorySizeType, true
}

// HasMemorySizeType returns a boolean if a field has been set.
func (o *ServerServicePlans) HasMemorySizeType() bool {
	if o != nil && o.MemorySizeType != nil {
		return true
	}

	return false
}

// SetMemorySizeType gets a reference to the given string and assigns it to the MemorySizeType field.
func (o *ServerServicePlans) SetMemorySizeType(v string) {
	o.MemorySizeType = &v
}

func (o ServerServicePlans) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.MaxStorage != nil {
		toSerialize["maxStorage"] = o.MaxStorage
	}
	if o.MaxMemory != nil {
		toSerialize["maxMemory"] = o.MaxMemory
	}
	if o.MaxCpu != nil {
		toSerialize["maxCpu"] = o.MaxCpu
	}
	if o.MaxCores != nil {
		toSerialize["maxCores"] = o.MaxCores
	}
	if o.MaxDataStorage != nil {
		toSerialize["maxDataStorage"] = o.MaxDataStorage
	}
	if o.CustomCpu != nil {
		toSerialize["customCpu"] = o.CustomCpu
	}
	if o.CustomMaxMemory != nil {
		toSerialize["customMaxMemory"] = o.CustomMaxMemory
	}
	if o.CustomMaxStorage != nil {
		toSerialize["customMaxStorage"] = o.CustomMaxStorage
	}
	if o.CustomMaxDataStorage != nil {
		toSerialize["customMaxDataStorage"] = o.CustomMaxDataStorage
	}
	if o.CustomCoresPerSocket != nil {
		toSerialize["customCoresPerSocket"] = o.CustomCoresPerSocket
	}
	if o.CoresPerSocket.IsSet() {
		toSerialize["coresPerSocket"] = o.CoresPerSocket.Get()
	}
	if o.StorageTypes != nil {
		toSerialize["storageTypes"] = o.StorageTypes
	}
	if o.RootStorageTypes != nil {
		toSerialize["rootStorageTypes"] = o.RootStorageTypes
	}
	if o.AddVolumes != nil {
		toSerialize["addVolumes"] = o.AddVolumes
	}
	if o.CustomizeVolume != nil {
		toSerialize["customizeVolume"] = o.CustomizeVolume
	}
	if o.RootDiskCustomizable != nil {
		toSerialize["rootDiskCustomizable"] = o.RootDiskCustomizable
	}
	if o.HostDiskMode.IsSet() {
		toSerialize["hostDiskMode"] = o.HostDiskMode.Get()
	}
	if o.HasDatastore.IsSet() {
		toSerialize["hasDatastore"] = o.HasDatastore.Get()
	}
	if o.LvmSupported.IsSet() {
		toSerialize["lvmSupported"] = o.LvmSupported.Get()
	}
	if o.MinDisk.IsSet() {
		toSerialize["minDisk"] = o.MinDisk.Get()
	}
	if o.MaxDisk.IsSet() {
		toSerialize["maxDisk"] = o.MaxDisk.Get()
	}
	if o.Datastores != nil {
		toSerialize["datastores"] = o.Datastores
	}
	if o.SupportsAutoDatastore != nil {
		toSerialize["supportsAutoDatastore"] = o.SupportsAutoDatastore
	}
	if o.AutoOptions != nil {
		toSerialize["autoOptions"] = o.AutoOptions
	}
	if o.CpuOptions != nil {
		toSerialize["cpuOptions"] = o.CpuOptions
	}
	if o.MemoryOptions != nil {
		toSerialize["memoryOptions"] = o.MemoryOptions
	}
	if o.RootCustomSizeOptions != nil {
		toSerialize["rootCustomSizeOptions"] = o.RootCustomSizeOptions
	}
	if o.CustomSizeOptions != nil {
		toSerialize["customSizeOptions"] = o.CustomSizeOptions
	}
	if o.CustomCores != nil {
		toSerialize["customCores"] = o.CustomCores
	}
	if o.MaxDisks.IsSet() {
		toSerialize["maxDisks"] = o.MaxDisks.Get()
	}
	if o.MemorySizeType != nil {
		toSerialize["memorySizeType"] = o.MemorySizeType
	}
	return json.Marshal(toSerialize)
}

type NullableServerServicePlans struct {
	value *ServerServicePlans
	isSet bool
}

func (v NullableServerServicePlans) Get() *ServerServicePlans {
	return v.value
}

func (v *NullableServerServicePlans) Set(val *ServerServicePlans) {
	v.value = val
	v.isSet = true
}

func (v NullableServerServicePlans) IsSet() bool {
	return v.isSet
}

func (v *NullableServerServicePlans) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerServicePlans(val *ServerServicePlans) *NullableServerServicePlans {
	return &NullableServerServicePlans{value: val, isSet: true}
}

func (v NullableServerServicePlans) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerServicePlans) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


