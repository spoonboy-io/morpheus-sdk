/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IdentitySourcesAzureADConfigConfig struct for IdentitySourcesAzureADConfigConfig
type IdentitySourcesAzureADConfigConfig struct {
	Url *string `json:"url,omitempty"`
	LogoutUrl *string `json:"logoutUrl,omitempty"`
	DoNotIncludeSAMLRequest *bool `json:"doNotIncludeSAMLRequest,omitempty"`
	SAMLSignatureMode *string `json:"SAMLSignatureMode,omitempty"`
	DoNotValidateSignature *bool `json:"doNotValidateSignature,omitempty"`
	DoNotValidateStatusCode *bool `json:"doNotValidateStatusCode,omitempty"`
	DoNotValidateDestination *bool `json:"doNotValidateDestination,omitempty"`
	DoNotValidateIssueInstants *bool `json:"doNotValidateIssueInstants,omitempty"`
	DoNotValidateAssertions *bool `json:"doNotValidateAssertions,omitempty"`
	GivenNameAttribute *string `json:"givenNameAttribute,omitempty"`
	SurnameAttribute *string `json:"surnameAttribute,omitempty"`
	EmailAttribute *string `json:"emailAttribute,omitempty"`
	RequiredAttributeValue *string `json:"requiredAttributeValue,omitempty"`
	RoleAttributeName *string `json:"roleAttributeName,omitempty"`
	AzureTenantId *string `json:"azureTenantId,omitempty"`
	AzureAppId *string `json:"azureAppId,omitempty"`
	AzureAppSecret NullableString `json:"azureAppSecret,omitempty"`
	RoleLinkAttributeName *string `json:"roleLinkAttributeName,omitempty"`
	PublicKey *string `json:"publicKey,omitempty"`
	AzureAppSecretHash NullableString `json:"azureAppSecretHash,omitempty"`
}

// NewIdentitySourcesAzureADConfigConfig instantiates a new IdentitySourcesAzureADConfigConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentitySourcesAzureADConfigConfig() *IdentitySourcesAzureADConfigConfig {
	this := IdentitySourcesAzureADConfigConfig{}
	return &this
}

// NewIdentitySourcesAzureADConfigConfigWithDefaults instantiates a new IdentitySourcesAzureADConfigConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentitySourcesAzureADConfigConfigWithDefaults() *IdentitySourcesAzureADConfigConfig {
	this := IdentitySourcesAzureADConfigConfig{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *IdentitySourcesAzureADConfigConfig) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesAzureADConfigConfig) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *IdentitySourcesAzureADConfigConfig) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *IdentitySourcesAzureADConfigConfig) SetUrl(v string) {
	o.Url = &v
}

// GetLogoutUrl returns the LogoutUrl field value if set, zero value otherwise.
func (o *IdentitySourcesAzureADConfigConfig) GetLogoutUrl() string {
	if o == nil || o.LogoutUrl == nil {
		var ret string
		return ret
	}
	return *o.LogoutUrl
}

// GetLogoutUrlOk returns a tuple with the LogoutUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesAzureADConfigConfig) GetLogoutUrlOk() (*string, bool) {
	if o == nil || o.LogoutUrl == nil {
		return nil, false
	}
	return o.LogoutUrl, true
}

// HasLogoutUrl returns a boolean if a field has been set.
func (o *IdentitySourcesAzureADConfigConfig) HasLogoutUrl() bool {
	if o != nil && o.LogoutUrl != nil {
		return true
	}

	return false
}

// SetLogoutUrl gets a reference to the given string and assigns it to the LogoutUrl field.
func (o *IdentitySourcesAzureADConfigConfig) SetLogoutUrl(v string) {
	o.LogoutUrl = &v
}

// GetDoNotIncludeSAMLRequest returns the DoNotIncludeSAMLRequest field value if set, zero value otherwise.
func (o *IdentitySourcesAzureADConfigConfig) GetDoNotIncludeSAMLRequest() bool {
	if o == nil || o.DoNotIncludeSAMLRequest == nil {
		var ret bool
		return ret
	}
	return *o.DoNotIncludeSAMLRequest
}

// GetDoNotIncludeSAMLRequestOk returns a tuple with the DoNotIncludeSAMLRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesAzureADConfigConfig) GetDoNotIncludeSAMLRequestOk() (*bool, bool) {
	if o == nil || o.DoNotIncludeSAMLRequest == nil {
		return nil, false
	}
	return o.DoNotIncludeSAMLRequest, true
}

// HasDoNotIncludeSAMLRequest returns a boolean if a field has been set.
func (o *IdentitySourcesAzureADConfigConfig) HasDoNotIncludeSAMLRequest() bool {
	if o != nil && o.DoNotIncludeSAMLRequest != nil {
		return true
	}

	return false
}

// SetDoNotIncludeSAMLRequest gets a reference to the given bool and assigns it to the DoNotIncludeSAMLRequest field.
func (o *IdentitySourcesAzureADConfigConfig) SetDoNotIncludeSAMLRequest(v bool) {
	o.DoNotIncludeSAMLRequest = &v
}

// GetSAMLSignatureMode returns the SAMLSignatureMode field value if set, zero value otherwise.
func (o *IdentitySourcesAzureADConfigConfig) GetSAMLSignatureMode() string {
	if o == nil || o.SAMLSignatureMode == nil {
		var ret string
		return ret
	}
	return *o.SAMLSignatureMode
}

// GetSAMLSignatureModeOk returns a tuple with the SAMLSignatureMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesAzureADConfigConfig) GetSAMLSignatureModeOk() (*string, bool) {
	if o == nil || o.SAMLSignatureMode == nil {
		return nil, false
	}
	return o.SAMLSignatureMode, true
}

// HasSAMLSignatureMode returns a boolean if a field has been set.
func (o *IdentitySourcesAzureADConfigConfig) HasSAMLSignatureMode() bool {
	if o != nil && o.SAMLSignatureMode != nil {
		return true
	}

	return false
}

// SetSAMLSignatureMode gets a reference to the given string and assigns it to the SAMLSignatureMode field.
func (o *IdentitySourcesAzureADConfigConfig) SetSAMLSignatureMode(v string) {
	o.SAMLSignatureMode = &v
}

// GetDoNotValidateSignature returns the DoNotValidateSignature field value if set, zero value otherwise.
func (o *IdentitySourcesAzureADConfigConfig) GetDoNotValidateSignature() bool {
	if o == nil || o.DoNotValidateSignature == nil {
		var ret bool
		return ret
	}
	return *o.DoNotValidateSignature
}

// GetDoNotValidateSignatureOk returns a tuple with the DoNotValidateSignature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesAzureADConfigConfig) GetDoNotValidateSignatureOk() (*bool, bool) {
	if o == nil || o.DoNotValidateSignature == nil {
		return nil, false
	}
	return o.DoNotValidateSignature, true
}

// HasDoNotValidateSignature returns a boolean if a field has been set.
func (o *IdentitySourcesAzureADConfigConfig) HasDoNotValidateSignature() bool {
	if o != nil && o.DoNotValidateSignature != nil {
		return true
	}

	return false
}

// SetDoNotValidateSignature gets a reference to the given bool and assigns it to the DoNotValidateSignature field.
func (o *IdentitySourcesAzureADConfigConfig) SetDoNotValidateSignature(v bool) {
	o.DoNotValidateSignature = &v
}

// GetDoNotValidateStatusCode returns the DoNotValidateStatusCode field value if set, zero value otherwise.
func (o *IdentitySourcesAzureADConfigConfig) GetDoNotValidateStatusCode() bool {
	if o == nil || o.DoNotValidateStatusCode == nil {
		var ret bool
		return ret
	}
	return *o.DoNotValidateStatusCode
}

// GetDoNotValidateStatusCodeOk returns a tuple with the DoNotValidateStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesAzureADConfigConfig) GetDoNotValidateStatusCodeOk() (*bool, bool) {
	if o == nil || o.DoNotValidateStatusCode == nil {
		return nil, false
	}
	return o.DoNotValidateStatusCode, true
}

// HasDoNotValidateStatusCode returns a boolean if a field has been set.
func (o *IdentitySourcesAzureADConfigConfig) HasDoNotValidateStatusCode() bool {
	if o != nil && o.DoNotValidateStatusCode != nil {
		return true
	}

	return false
}

// SetDoNotValidateStatusCode gets a reference to the given bool and assigns it to the DoNotValidateStatusCode field.
func (o *IdentitySourcesAzureADConfigConfig) SetDoNotValidateStatusCode(v bool) {
	o.DoNotValidateStatusCode = &v
}

// GetDoNotValidateDestination returns the DoNotValidateDestination field value if set, zero value otherwise.
func (o *IdentitySourcesAzureADConfigConfig) GetDoNotValidateDestination() bool {
	if o == nil || o.DoNotValidateDestination == nil {
		var ret bool
		return ret
	}
	return *o.DoNotValidateDestination
}

// GetDoNotValidateDestinationOk returns a tuple with the DoNotValidateDestination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesAzureADConfigConfig) GetDoNotValidateDestinationOk() (*bool, bool) {
	if o == nil || o.DoNotValidateDestination == nil {
		return nil, false
	}
	return o.DoNotValidateDestination, true
}

// HasDoNotValidateDestination returns a boolean if a field has been set.
func (o *IdentitySourcesAzureADConfigConfig) HasDoNotValidateDestination() bool {
	if o != nil && o.DoNotValidateDestination != nil {
		return true
	}

	return false
}

// SetDoNotValidateDestination gets a reference to the given bool and assigns it to the DoNotValidateDestination field.
func (o *IdentitySourcesAzureADConfigConfig) SetDoNotValidateDestination(v bool) {
	o.DoNotValidateDestination = &v
}

// GetDoNotValidateIssueInstants returns the DoNotValidateIssueInstants field value if set, zero value otherwise.
func (o *IdentitySourcesAzureADConfigConfig) GetDoNotValidateIssueInstants() bool {
	if o == nil || o.DoNotValidateIssueInstants == nil {
		var ret bool
		return ret
	}
	return *o.DoNotValidateIssueInstants
}

// GetDoNotValidateIssueInstantsOk returns a tuple with the DoNotValidateIssueInstants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesAzureADConfigConfig) GetDoNotValidateIssueInstantsOk() (*bool, bool) {
	if o == nil || o.DoNotValidateIssueInstants == nil {
		return nil, false
	}
	return o.DoNotValidateIssueInstants, true
}

// HasDoNotValidateIssueInstants returns a boolean if a field has been set.
func (o *IdentitySourcesAzureADConfigConfig) HasDoNotValidateIssueInstants() bool {
	if o != nil && o.DoNotValidateIssueInstants != nil {
		return true
	}

	return false
}

// SetDoNotValidateIssueInstants gets a reference to the given bool and assigns it to the DoNotValidateIssueInstants field.
func (o *IdentitySourcesAzureADConfigConfig) SetDoNotValidateIssueInstants(v bool) {
	o.DoNotValidateIssueInstants = &v
}

// GetDoNotValidateAssertions returns the DoNotValidateAssertions field value if set, zero value otherwise.
func (o *IdentitySourcesAzureADConfigConfig) GetDoNotValidateAssertions() bool {
	if o == nil || o.DoNotValidateAssertions == nil {
		var ret bool
		return ret
	}
	return *o.DoNotValidateAssertions
}

// GetDoNotValidateAssertionsOk returns a tuple with the DoNotValidateAssertions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesAzureADConfigConfig) GetDoNotValidateAssertionsOk() (*bool, bool) {
	if o == nil || o.DoNotValidateAssertions == nil {
		return nil, false
	}
	return o.DoNotValidateAssertions, true
}

// HasDoNotValidateAssertions returns a boolean if a field has been set.
func (o *IdentitySourcesAzureADConfigConfig) HasDoNotValidateAssertions() bool {
	if o != nil && o.DoNotValidateAssertions != nil {
		return true
	}

	return false
}

// SetDoNotValidateAssertions gets a reference to the given bool and assigns it to the DoNotValidateAssertions field.
func (o *IdentitySourcesAzureADConfigConfig) SetDoNotValidateAssertions(v bool) {
	o.DoNotValidateAssertions = &v
}

// GetGivenNameAttribute returns the GivenNameAttribute field value if set, zero value otherwise.
func (o *IdentitySourcesAzureADConfigConfig) GetGivenNameAttribute() string {
	if o == nil || o.GivenNameAttribute == nil {
		var ret string
		return ret
	}
	return *o.GivenNameAttribute
}

// GetGivenNameAttributeOk returns a tuple with the GivenNameAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesAzureADConfigConfig) GetGivenNameAttributeOk() (*string, bool) {
	if o == nil || o.GivenNameAttribute == nil {
		return nil, false
	}
	return o.GivenNameAttribute, true
}

// HasGivenNameAttribute returns a boolean if a field has been set.
func (o *IdentitySourcesAzureADConfigConfig) HasGivenNameAttribute() bool {
	if o != nil && o.GivenNameAttribute != nil {
		return true
	}

	return false
}

// SetGivenNameAttribute gets a reference to the given string and assigns it to the GivenNameAttribute field.
func (o *IdentitySourcesAzureADConfigConfig) SetGivenNameAttribute(v string) {
	o.GivenNameAttribute = &v
}

// GetSurnameAttribute returns the SurnameAttribute field value if set, zero value otherwise.
func (o *IdentitySourcesAzureADConfigConfig) GetSurnameAttribute() string {
	if o == nil || o.SurnameAttribute == nil {
		var ret string
		return ret
	}
	return *o.SurnameAttribute
}

// GetSurnameAttributeOk returns a tuple with the SurnameAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesAzureADConfigConfig) GetSurnameAttributeOk() (*string, bool) {
	if o == nil || o.SurnameAttribute == nil {
		return nil, false
	}
	return o.SurnameAttribute, true
}

// HasSurnameAttribute returns a boolean if a field has been set.
func (o *IdentitySourcesAzureADConfigConfig) HasSurnameAttribute() bool {
	if o != nil && o.SurnameAttribute != nil {
		return true
	}

	return false
}

// SetSurnameAttribute gets a reference to the given string and assigns it to the SurnameAttribute field.
func (o *IdentitySourcesAzureADConfigConfig) SetSurnameAttribute(v string) {
	o.SurnameAttribute = &v
}

// GetEmailAttribute returns the EmailAttribute field value if set, zero value otherwise.
func (o *IdentitySourcesAzureADConfigConfig) GetEmailAttribute() string {
	if o == nil || o.EmailAttribute == nil {
		var ret string
		return ret
	}
	return *o.EmailAttribute
}

// GetEmailAttributeOk returns a tuple with the EmailAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesAzureADConfigConfig) GetEmailAttributeOk() (*string, bool) {
	if o == nil || o.EmailAttribute == nil {
		return nil, false
	}
	return o.EmailAttribute, true
}

// HasEmailAttribute returns a boolean if a field has been set.
func (o *IdentitySourcesAzureADConfigConfig) HasEmailAttribute() bool {
	if o != nil && o.EmailAttribute != nil {
		return true
	}

	return false
}

// SetEmailAttribute gets a reference to the given string and assigns it to the EmailAttribute field.
func (o *IdentitySourcesAzureADConfigConfig) SetEmailAttribute(v string) {
	o.EmailAttribute = &v
}

// GetRequiredAttributeValue returns the RequiredAttributeValue field value if set, zero value otherwise.
func (o *IdentitySourcesAzureADConfigConfig) GetRequiredAttributeValue() string {
	if o == nil || o.RequiredAttributeValue == nil {
		var ret string
		return ret
	}
	return *o.RequiredAttributeValue
}

// GetRequiredAttributeValueOk returns a tuple with the RequiredAttributeValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesAzureADConfigConfig) GetRequiredAttributeValueOk() (*string, bool) {
	if o == nil || o.RequiredAttributeValue == nil {
		return nil, false
	}
	return o.RequiredAttributeValue, true
}

// HasRequiredAttributeValue returns a boolean if a field has been set.
func (o *IdentitySourcesAzureADConfigConfig) HasRequiredAttributeValue() bool {
	if o != nil && o.RequiredAttributeValue != nil {
		return true
	}

	return false
}

// SetRequiredAttributeValue gets a reference to the given string and assigns it to the RequiredAttributeValue field.
func (o *IdentitySourcesAzureADConfigConfig) SetRequiredAttributeValue(v string) {
	o.RequiredAttributeValue = &v
}

// GetRoleAttributeName returns the RoleAttributeName field value if set, zero value otherwise.
func (o *IdentitySourcesAzureADConfigConfig) GetRoleAttributeName() string {
	if o == nil || o.RoleAttributeName == nil {
		var ret string
		return ret
	}
	return *o.RoleAttributeName
}

// GetRoleAttributeNameOk returns a tuple with the RoleAttributeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesAzureADConfigConfig) GetRoleAttributeNameOk() (*string, bool) {
	if o == nil || o.RoleAttributeName == nil {
		return nil, false
	}
	return o.RoleAttributeName, true
}

// HasRoleAttributeName returns a boolean if a field has been set.
func (o *IdentitySourcesAzureADConfigConfig) HasRoleAttributeName() bool {
	if o != nil && o.RoleAttributeName != nil {
		return true
	}

	return false
}

// SetRoleAttributeName gets a reference to the given string and assigns it to the RoleAttributeName field.
func (o *IdentitySourcesAzureADConfigConfig) SetRoleAttributeName(v string) {
	o.RoleAttributeName = &v
}

// GetAzureTenantId returns the AzureTenantId field value if set, zero value otherwise.
func (o *IdentitySourcesAzureADConfigConfig) GetAzureTenantId() string {
	if o == nil || o.AzureTenantId == nil {
		var ret string
		return ret
	}
	return *o.AzureTenantId
}

// GetAzureTenantIdOk returns a tuple with the AzureTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesAzureADConfigConfig) GetAzureTenantIdOk() (*string, bool) {
	if o == nil || o.AzureTenantId == nil {
		return nil, false
	}
	return o.AzureTenantId, true
}

// HasAzureTenantId returns a boolean if a field has been set.
func (o *IdentitySourcesAzureADConfigConfig) HasAzureTenantId() bool {
	if o != nil && o.AzureTenantId != nil {
		return true
	}

	return false
}

// SetAzureTenantId gets a reference to the given string and assigns it to the AzureTenantId field.
func (o *IdentitySourcesAzureADConfigConfig) SetAzureTenantId(v string) {
	o.AzureTenantId = &v
}

// GetAzureAppId returns the AzureAppId field value if set, zero value otherwise.
func (o *IdentitySourcesAzureADConfigConfig) GetAzureAppId() string {
	if o == nil || o.AzureAppId == nil {
		var ret string
		return ret
	}
	return *o.AzureAppId
}

// GetAzureAppIdOk returns a tuple with the AzureAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesAzureADConfigConfig) GetAzureAppIdOk() (*string, bool) {
	if o == nil || o.AzureAppId == nil {
		return nil, false
	}
	return o.AzureAppId, true
}

// HasAzureAppId returns a boolean if a field has been set.
func (o *IdentitySourcesAzureADConfigConfig) HasAzureAppId() bool {
	if o != nil && o.AzureAppId != nil {
		return true
	}

	return false
}

// SetAzureAppId gets a reference to the given string and assigns it to the AzureAppId field.
func (o *IdentitySourcesAzureADConfigConfig) SetAzureAppId(v string) {
	o.AzureAppId = &v
}

// GetAzureAppSecret returns the AzureAppSecret field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentitySourcesAzureADConfigConfig) GetAzureAppSecret() string {
	if o == nil || o.AzureAppSecret.Get() == nil {
		var ret string
		return ret
	}
	return *o.AzureAppSecret.Get()
}

// GetAzureAppSecretOk returns a tuple with the AzureAppSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentitySourcesAzureADConfigConfig) GetAzureAppSecretOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AzureAppSecret.Get(), o.AzureAppSecret.IsSet()
}

// HasAzureAppSecret returns a boolean if a field has been set.
func (o *IdentitySourcesAzureADConfigConfig) HasAzureAppSecret() bool {
	if o != nil && o.AzureAppSecret.IsSet() {
		return true
	}

	return false
}

// SetAzureAppSecret gets a reference to the given NullableString and assigns it to the AzureAppSecret field.
func (o *IdentitySourcesAzureADConfigConfig) SetAzureAppSecret(v string) {
	o.AzureAppSecret.Set(&v)
}
// SetAzureAppSecretNil sets the value for AzureAppSecret to be an explicit nil
func (o *IdentitySourcesAzureADConfigConfig) SetAzureAppSecretNil() {
	o.AzureAppSecret.Set(nil)
}

// UnsetAzureAppSecret ensures that no value is present for AzureAppSecret, not even an explicit nil
func (o *IdentitySourcesAzureADConfigConfig) UnsetAzureAppSecret() {
	o.AzureAppSecret.Unset()
}

// GetRoleLinkAttributeName returns the RoleLinkAttributeName field value if set, zero value otherwise.
func (o *IdentitySourcesAzureADConfigConfig) GetRoleLinkAttributeName() string {
	if o == nil || o.RoleLinkAttributeName == nil {
		var ret string
		return ret
	}
	return *o.RoleLinkAttributeName
}

// GetRoleLinkAttributeNameOk returns a tuple with the RoleLinkAttributeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesAzureADConfigConfig) GetRoleLinkAttributeNameOk() (*string, bool) {
	if o == nil || o.RoleLinkAttributeName == nil {
		return nil, false
	}
	return o.RoleLinkAttributeName, true
}

// HasRoleLinkAttributeName returns a boolean if a field has been set.
func (o *IdentitySourcesAzureADConfigConfig) HasRoleLinkAttributeName() bool {
	if o != nil && o.RoleLinkAttributeName != nil {
		return true
	}

	return false
}

// SetRoleLinkAttributeName gets a reference to the given string and assigns it to the RoleLinkAttributeName field.
func (o *IdentitySourcesAzureADConfigConfig) SetRoleLinkAttributeName(v string) {
	o.RoleLinkAttributeName = &v
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *IdentitySourcesAzureADConfigConfig) GetPublicKey() string {
	if o == nil || o.PublicKey == nil {
		var ret string
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentitySourcesAzureADConfigConfig) GetPublicKeyOk() (*string, bool) {
	if o == nil || o.PublicKey == nil {
		return nil, false
	}
	return o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *IdentitySourcesAzureADConfigConfig) HasPublicKey() bool {
	if o != nil && o.PublicKey != nil {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *IdentitySourcesAzureADConfigConfig) SetPublicKey(v string) {
	o.PublicKey = &v
}

// GetAzureAppSecretHash returns the AzureAppSecretHash field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IdentitySourcesAzureADConfigConfig) GetAzureAppSecretHash() string {
	if o == nil || o.AzureAppSecretHash.Get() == nil {
		var ret string
		return ret
	}
	return *o.AzureAppSecretHash.Get()
}

// GetAzureAppSecretHashOk returns a tuple with the AzureAppSecretHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IdentitySourcesAzureADConfigConfig) GetAzureAppSecretHashOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AzureAppSecretHash.Get(), o.AzureAppSecretHash.IsSet()
}

// HasAzureAppSecretHash returns a boolean if a field has been set.
func (o *IdentitySourcesAzureADConfigConfig) HasAzureAppSecretHash() bool {
	if o != nil && o.AzureAppSecretHash.IsSet() {
		return true
	}

	return false
}

// SetAzureAppSecretHash gets a reference to the given NullableString and assigns it to the AzureAppSecretHash field.
func (o *IdentitySourcesAzureADConfigConfig) SetAzureAppSecretHash(v string) {
	o.AzureAppSecretHash.Set(&v)
}
// SetAzureAppSecretHashNil sets the value for AzureAppSecretHash to be an explicit nil
func (o *IdentitySourcesAzureADConfigConfig) SetAzureAppSecretHashNil() {
	o.AzureAppSecretHash.Set(nil)
}

// UnsetAzureAppSecretHash ensures that no value is present for AzureAppSecretHash, not even an explicit nil
func (o *IdentitySourcesAzureADConfigConfig) UnsetAzureAppSecretHash() {
	o.AzureAppSecretHash.Unset()
}

func (o IdentitySourcesAzureADConfigConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.LogoutUrl != nil {
		toSerialize["logoutUrl"] = o.LogoutUrl
	}
	if o.DoNotIncludeSAMLRequest != nil {
		toSerialize["doNotIncludeSAMLRequest"] = o.DoNotIncludeSAMLRequest
	}
	if o.SAMLSignatureMode != nil {
		toSerialize["SAMLSignatureMode"] = o.SAMLSignatureMode
	}
	if o.DoNotValidateSignature != nil {
		toSerialize["doNotValidateSignature"] = o.DoNotValidateSignature
	}
	if o.DoNotValidateStatusCode != nil {
		toSerialize["doNotValidateStatusCode"] = o.DoNotValidateStatusCode
	}
	if o.DoNotValidateDestination != nil {
		toSerialize["doNotValidateDestination"] = o.DoNotValidateDestination
	}
	if o.DoNotValidateIssueInstants != nil {
		toSerialize["doNotValidateIssueInstants"] = o.DoNotValidateIssueInstants
	}
	if o.DoNotValidateAssertions != nil {
		toSerialize["doNotValidateAssertions"] = o.DoNotValidateAssertions
	}
	if o.GivenNameAttribute != nil {
		toSerialize["givenNameAttribute"] = o.GivenNameAttribute
	}
	if o.SurnameAttribute != nil {
		toSerialize["surnameAttribute"] = o.SurnameAttribute
	}
	if o.EmailAttribute != nil {
		toSerialize["emailAttribute"] = o.EmailAttribute
	}
	if o.RequiredAttributeValue != nil {
		toSerialize["requiredAttributeValue"] = o.RequiredAttributeValue
	}
	if o.RoleAttributeName != nil {
		toSerialize["roleAttributeName"] = o.RoleAttributeName
	}
	if o.AzureTenantId != nil {
		toSerialize["azureTenantId"] = o.AzureTenantId
	}
	if o.AzureAppId != nil {
		toSerialize["azureAppId"] = o.AzureAppId
	}
	if o.AzureAppSecret.IsSet() {
		toSerialize["azureAppSecret"] = o.AzureAppSecret.Get()
	}
	if o.RoleLinkAttributeName != nil {
		toSerialize["roleLinkAttributeName"] = o.RoleLinkAttributeName
	}
	if o.PublicKey != nil {
		toSerialize["publicKey"] = o.PublicKey
	}
	if o.AzureAppSecretHash.IsSet() {
		toSerialize["azureAppSecretHash"] = o.AzureAppSecretHash.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableIdentitySourcesAzureADConfigConfig struct {
	value *IdentitySourcesAzureADConfigConfig
	isSet bool
}

func (v NullableIdentitySourcesAzureADConfigConfig) Get() *IdentitySourcesAzureADConfigConfig {
	return v.value
}

func (v *NullableIdentitySourcesAzureADConfigConfig) Set(val *IdentitySourcesAzureADConfigConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentitySourcesAzureADConfigConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentitySourcesAzureADConfigConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentitySourcesAzureADConfigConfig(val *IdentitySourcesAzureADConfigConfig) *NullableIdentitySourcesAzureADConfigConfig {
	return &NullableIdentitySourcesAzureADConfigConfig{value: val, isSet: true}
}

func (v NullableIdentitySourcesAzureADConfigConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentitySourcesAzureADConfigConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


