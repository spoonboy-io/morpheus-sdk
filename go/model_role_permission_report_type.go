/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RolePermissionReportType struct for RolePermissionReportType
type RolePermissionReportType struct {
	// `id` of the report type
	ReportTypeId int32 `json:"reportTypeId"`
	// The new access level.
	Access string `json:"access"`
}

// NewRolePermissionReportType instantiates a new RolePermissionReportType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRolePermissionReportType(reportTypeId int32, access string, ) *RolePermissionReportType {
	this := RolePermissionReportType{}
	this.ReportTypeId = reportTypeId
	this.Access = access
	return &this
}

// NewRolePermissionReportTypeWithDefaults instantiates a new RolePermissionReportType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolePermissionReportTypeWithDefaults() *RolePermissionReportType {
	this := RolePermissionReportType{}
	return &this
}

// GetReportTypeId returns the ReportTypeId field value
func (o *RolePermissionReportType) GetReportTypeId() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.ReportTypeId
}

// GetReportTypeIdOk returns a tuple with the ReportTypeId field value
// and a boolean to check if the value has been set.
func (o *RolePermissionReportType) GetReportTypeIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReportTypeId, true
}

// SetReportTypeId sets field value
func (o *RolePermissionReportType) SetReportTypeId(v int32) {
	o.ReportTypeId = v
}

// GetAccess returns the Access field value
func (o *RolePermissionReportType) GetAccess() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Access
}

// GetAccessOk returns a tuple with the Access field value
// and a boolean to check if the value has been set.
func (o *RolePermissionReportType) GetAccessOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Access, true
}

// SetAccess sets field value
func (o *RolePermissionReportType) SetAccess(v string) {
	o.Access = v
}

func (o RolePermissionReportType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["reportTypeId"] = o.ReportTypeId
	}
	if true {
		toSerialize["access"] = o.Access
	}
	return json.Marshal(toSerialize)
}

type NullableRolePermissionReportType struct {
	value *RolePermissionReportType
	isSet bool
}

func (v NullableRolePermissionReportType) Get() *RolePermissionReportType {
	return v.value
}

func (v *NullableRolePermissionReportType) Set(val *RolePermissionReportType) {
	v.value = val
	v.isSet = true
}

func (v NullableRolePermissionReportType) IsSet() bool {
	return v.isSet
}

func (v *NullableRolePermissionReportType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRolePermissionReportType(val *RolePermissionReportType) *NullableRolePermissionReportType {
	return &NullableRolePermissionReportType{value: val, isSet: true}
}

func (v NullableRolePermissionReportType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRolePermissionReportType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


