/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20042 struct for InlineResponse20042
type InlineResponse20042 struct {
	Group *Group `json:"group,omitempty"`
}

// NewInlineResponse20042 instantiates a new InlineResponse20042 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20042() *InlineResponse20042 {
	this := InlineResponse20042{}
	return &this
}

// NewInlineResponse20042WithDefaults instantiates a new InlineResponse20042 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20042WithDefaults() *InlineResponse20042 {
	this := InlineResponse20042{}
	return &this
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *InlineResponse20042) GetGroup() Group {
	if o == nil || o.Group == nil {
		var ret Group
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20042) GetGroupOk() (*Group, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *InlineResponse20042) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given Group and assigns it to the Group field.
func (o *InlineResponse20042) SetGroup(v Group) {
	o.Group = &v
}

func (o InlineResponse20042) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20042 struct {
	value *InlineResponse20042
	isSet bool
}

func (v NullableInlineResponse20042) Get() *InlineResponse20042 {
	return v.value
}

func (v *NullableInlineResponse20042) Set(val *InlineResponse20042) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20042) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20042) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20042(val *InlineResponse20042) *NullableInlineResponse20042 {
	return &NullableInlineResponse20042{value: val, isSet: true}
}

func (v NullableInlineResponse20042) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20042) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


