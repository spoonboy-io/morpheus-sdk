/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiRolesIdRole Payload for updating an existing role
type ApiRolesIdRole struct {
	// Authority (Name)
	Authority *string `json:"authority,omitempty"`
	// Description
	Description NullableString `json:"description,omitempty"`
	// Set the default persona by code.
	DefaultPersona NullableString `json:"defaultPersona,omitempty"`
	// Set the access level for the specified permissions.
	Permissions *[]ApiRolesRolePermissions `json:"permissions,omitempty"`
	// Set the default access level for for groups (sites). Only applies to user roles.
	GlobalSiteAccess *string `json:"globalSiteAccess,omitempty"`
	// Set the access level for the specified groups (sites). Only applies to user roles.
	Sites *[]ApiRolesRoleSites `json:"sites,omitempty"`
	// Set the default access level for for clouds (zones). Only applies to base account (tenant) roles.
	GlobalZoneAccess *string `json:"globalZoneAccess,omitempty"`
	// Set the access level for the specified clouds (zones). Only applies to base account (tenant) roles.
	Zones *[]ApiRolesRoleZones `json:"zones,omitempty"`
	// Set the default access level for for instance types
	GlobalInstanceTypeAccess *string `json:"globalInstanceTypeAccess,omitempty"`
	// Set the access level for the specified instance types
	InstanceTypes *[]ApiRolesRoleInstanceTypes `json:"instanceTypes,omitempty"`
	// Set the default access level for blueprints
	GlobalAppTemplateAccess *string `json:"globalAppTemplateAccess,omitempty"`
	// Set the access level for the specified blueprints (appTemplates)
	AppTemplates *[]ApiRolesRoleAppTemplates `json:"appTemplates,omitempty"`
	// Set the default access level for catalog item types
	GlobalCatalogItemTypeAccess *string `json:"globalCatalogItemTypeAccess,omitempty"`
	// Set the access level for the specified catalog item types
	CatalogItemTypes *[]ApiRolesRoleCatalogItemTypes `json:"catalogItemTypes,omitempty"`
	// Set the default access level for personas
	GlobalPersonaAccess *string `json:"globalPersonaAccess,omitempty"`
	// Set the access level for the specified personas
	Personas *[]ApiRolesRolePersonas `json:"personas,omitempty"`
	// Set the default access level for VDI pools
	GlobalVdiPoolAccess *string `json:"globalVdiPoolAccess,omitempty"`
	// Set the access level for the specified VDI pools
	VdiPools *[]ApiRolesRoleVdiPools `json:"vdiPools,omitempty"`
	// Set the default access level for report types
	GlobalReportTypeAccess *string `json:"globalReportTypeAccess,omitempty"`
	// Set the access level for the specified report types
	ReportTypes *[]ApiRolesRoleReportTypes `json:"reportTypes,omitempty"`
	// Set the default access level for tasks
	GlobalTaskAccess *string `json:"globalTaskAccess,omitempty"`
	// Set the access level for the specified tasks
	Tasks *[]ApiRolesRoleTasks `json:"tasks,omitempty"`
	// Set the default access level for workflows (taskSets)
	GlobalTaskSetAccess *string `json:"globalTaskSetAccess,omitempty"`
	// Set the access level for the specified workflows (taskSets)
	TaskSets *[]ApiRolesRoleTaskSets `json:"taskSets,omitempty"`
}

// NewApiRolesIdRole instantiates a new ApiRolesIdRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiRolesIdRole() *ApiRolesIdRole {
	this := ApiRolesIdRole{}
	return &this
}

// NewApiRolesIdRoleWithDefaults instantiates a new ApiRolesIdRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiRolesIdRoleWithDefaults() *ApiRolesIdRole {
	this := ApiRolesIdRole{}
	return &this
}

// GetAuthority returns the Authority field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetAuthority() string {
	if o == nil || o.Authority == nil {
		var ret string
		return ret
	}
	return *o.Authority
}

// GetAuthorityOk returns a tuple with the Authority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetAuthorityOk() (*string, bool) {
	if o == nil || o.Authority == nil {
		return nil, false
	}
	return o.Authority, true
}

// HasAuthority returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasAuthority() bool {
	if o != nil && o.Authority != nil {
		return true
	}

	return false
}

// SetAuthority gets a reference to the given string and assigns it to the Authority field.
func (o *ApiRolesIdRole) SetAuthority(v string) {
	o.Authority = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiRolesIdRole) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiRolesIdRole) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ApiRolesIdRole) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ApiRolesIdRole) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ApiRolesIdRole) UnsetDescription() {
	o.Description.Unset()
}

// GetDefaultPersona returns the DefaultPersona field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiRolesIdRole) GetDefaultPersona() string {
	if o == nil || o.DefaultPersona.Get() == nil {
		var ret string
		return ret
	}
	return *o.DefaultPersona.Get()
}

// GetDefaultPersonaOk returns a tuple with the DefaultPersona field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiRolesIdRole) GetDefaultPersonaOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DefaultPersona.Get(), o.DefaultPersona.IsSet()
}

// HasDefaultPersona returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasDefaultPersona() bool {
	if o != nil && o.DefaultPersona.IsSet() {
		return true
	}

	return false
}

// SetDefaultPersona gets a reference to the given NullableString and assigns it to the DefaultPersona field.
func (o *ApiRolesIdRole) SetDefaultPersona(v string) {
	o.DefaultPersona.Set(&v)
}
// SetDefaultPersonaNil sets the value for DefaultPersona to be an explicit nil
func (o *ApiRolesIdRole) SetDefaultPersonaNil() {
	o.DefaultPersona.Set(nil)
}

// UnsetDefaultPersona ensures that no value is present for DefaultPersona, not even an explicit nil
func (o *ApiRolesIdRole) UnsetDefaultPersona() {
	o.DefaultPersona.Unset()
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetPermissions() []ApiRolesRolePermissions {
	if o == nil || o.Permissions == nil {
		var ret []ApiRolesRolePermissions
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetPermissionsOk() (*[]ApiRolesRolePermissions, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []ApiRolesRolePermissions and assigns it to the Permissions field.
func (o *ApiRolesIdRole) SetPermissions(v []ApiRolesRolePermissions) {
	o.Permissions = &v
}

// GetGlobalSiteAccess returns the GlobalSiteAccess field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetGlobalSiteAccess() string {
	if o == nil || o.GlobalSiteAccess == nil {
		var ret string
		return ret
	}
	return *o.GlobalSiteAccess
}

// GetGlobalSiteAccessOk returns a tuple with the GlobalSiteAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetGlobalSiteAccessOk() (*string, bool) {
	if o == nil || o.GlobalSiteAccess == nil {
		return nil, false
	}
	return o.GlobalSiteAccess, true
}

// HasGlobalSiteAccess returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasGlobalSiteAccess() bool {
	if o != nil && o.GlobalSiteAccess != nil {
		return true
	}

	return false
}

// SetGlobalSiteAccess gets a reference to the given string and assigns it to the GlobalSiteAccess field.
func (o *ApiRolesIdRole) SetGlobalSiteAccess(v string) {
	o.GlobalSiteAccess = &v
}

// GetSites returns the Sites field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetSites() []ApiRolesRoleSites {
	if o == nil || o.Sites == nil {
		var ret []ApiRolesRoleSites
		return ret
	}
	return *o.Sites
}

// GetSitesOk returns a tuple with the Sites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetSitesOk() (*[]ApiRolesRoleSites, bool) {
	if o == nil || o.Sites == nil {
		return nil, false
	}
	return o.Sites, true
}

// HasSites returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasSites() bool {
	if o != nil && o.Sites != nil {
		return true
	}

	return false
}

// SetSites gets a reference to the given []ApiRolesRoleSites and assigns it to the Sites field.
func (o *ApiRolesIdRole) SetSites(v []ApiRolesRoleSites) {
	o.Sites = &v
}

// GetGlobalZoneAccess returns the GlobalZoneAccess field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetGlobalZoneAccess() string {
	if o == nil || o.GlobalZoneAccess == nil {
		var ret string
		return ret
	}
	return *o.GlobalZoneAccess
}

// GetGlobalZoneAccessOk returns a tuple with the GlobalZoneAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetGlobalZoneAccessOk() (*string, bool) {
	if o == nil || o.GlobalZoneAccess == nil {
		return nil, false
	}
	return o.GlobalZoneAccess, true
}

// HasGlobalZoneAccess returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasGlobalZoneAccess() bool {
	if o != nil && o.GlobalZoneAccess != nil {
		return true
	}

	return false
}

// SetGlobalZoneAccess gets a reference to the given string and assigns it to the GlobalZoneAccess field.
func (o *ApiRolesIdRole) SetGlobalZoneAccess(v string) {
	o.GlobalZoneAccess = &v
}

// GetZones returns the Zones field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetZones() []ApiRolesRoleZones {
	if o == nil || o.Zones == nil {
		var ret []ApiRolesRoleZones
		return ret
	}
	return *o.Zones
}

// GetZonesOk returns a tuple with the Zones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetZonesOk() (*[]ApiRolesRoleZones, bool) {
	if o == nil || o.Zones == nil {
		return nil, false
	}
	return o.Zones, true
}

// HasZones returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasZones() bool {
	if o != nil && o.Zones != nil {
		return true
	}

	return false
}

// SetZones gets a reference to the given []ApiRolesRoleZones and assigns it to the Zones field.
func (o *ApiRolesIdRole) SetZones(v []ApiRolesRoleZones) {
	o.Zones = &v
}

// GetGlobalInstanceTypeAccess returns the GlobalInstanceTypeAccess field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetGlobalInstanceTypeAccess() string {
	if o == nil || o.GlobalInstanceTypeAccess == nil {
		var ret string
		return ret
	}
	return *o.GlobalInstanceTypeAccess
}

// GetGlobalInstanceTypeAccessOk returns a tuple with the GlobalInstanceTypeAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetGlobalInstanceTypeAccessOk() (*string, bool) {
	if o == nil || o.GlobalInstanceTypeAccess == nil {
		return nil, false
	}
	return o.GlobalInstanceTypeAccess, true
}

// HasGlobalInstanceTypeAccess returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasGlobalInstanceTypeAccess() bool {
	if o != nil && o.GlobalInstanceTypeAccess != nil {
		return true
	}

	return false
}

// SetGlobalInstanceTypeAccess gets a reference to the given string and assigns it to the GlobalInstanceTypeAccess field.
func (o *ApiRolesIdRole) SetGlobalInstanceTypeAccess(v string) {
	o.GlobalInstanceTypeAccess = &v
}

// GetInstanceTypes returns the InstanceTypes field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetInstanceTypes() []ApiRolesRoleInstanceTypes {
	if o == nil || o.InstanceTypes == nil {
		var ret []ApiRolesRoleInstanceTypes
		return ret
	}
	return *o.InstanceTypes
}

// GetInstanceTypesOk returns a tuple with the InstanceTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetInstanceTypesOk() (*[]ApiRolesRoleInstanceTypes, bool) {
	if o == nil || o.InstanceTypes == nil {
		return nil, false
	}
	return o.InstanceTypes, true
}

// HasInstanceTypes returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasInstanceTypes() bool {
	if o != nil && o.InstanceTypes != nil {
		return true
	}

	return false
}

// SetInstanceTypes gets a reference to the given []ApiRolesRoleInstanceTypes and assigns it to the InstanceTypes field.
func (o *ApiRolesIdRole) SetInstanceTypes(v []ApiRolesRoleInstanceTypes) {
	o.InstanceTypes = &v
}

// GetGlobalAppTemplateAccess returns the GlobalAppTemplateAccess field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetGlobalAppTemplateAccess() string {
	if o == nil || o.GlobalAppTemplateAccess == nil {
		var ret string
		return ret
	}
	return *o.GlobalAppTemplateAccess
}

// GetGlobalAppTemplateAccessOk returns a tuple with the GlobalAppTemplateAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetGlobalAppTemplateAccessOk() (*string, bool) {
	if o == nil || o.GlobalAppTemplateAccess == nil {
		return nil, false
	}
	return o.GlobalAppTemplateAccess, true
}

// HasGlobalAppTemplateAccess returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasGlobalAppTemplateAccess() bool {
	if o != nil && o.GlobalAppTemplateAccess != nil {
		return true
	}

	return false
}

// SetGlobalAppTemplateAccess gets a reference to the given string and assigns it to the GlobalAppTemplateAccess field.
func (o *ApiRolesIdRole) SetGlobalAppTemplateAccess(v string) {
	o.GlobalAppTemplateAccess = &v
}

// GetAppTemplates returns the AppTemplates field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetAppTemplates() []ApiRolesRoleAppTemplates {
	if o == nil || o.AppTemplates == nil {
		var ret []ApiRolesRoleAppTemplates
		return ret
	}
	return *o.AppTemplates
}

// GetAppTemplatesOk returns a tuple with the AppTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetAppTemplatesOk() (*[]ApiRolesRoleAppTemplates, bool) {
	if o == nil || o.AppTemplates == nil {
		return nil, false
	}
	return o.AppTemplates, true
}

// HasAppTemplates returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasAppTemplates() bool {
	if o != nil && o.AppTemplates != nil {
		return true
	}

	return false
}

// SetAppTemplates gets a reference to the given []ApiRolesRoleAppTemplates and assigns it to the AppTemplates field.
func (o *ApiRolesIdRole) SetAppTemplates(v []ApiRolesRoleAppTemplates) {
	o.AppTemplates = &v
}

// GetGlobalCatalogItemTypeAccess returns the GlobalCatalogItemTypeAccess field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetGlobalCatalogItemTypeAccess() string {
	if o == nil || o.GlobalCatalogItemTypeAccess == nil {
		var ret string
		return ret
	}
	return *o.GlobalCatalogItemTypeAccess
}

// GetGlobalCatalogItemTypeAccessOk returns a tuple with the GlobalCatalogItemTypeAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetGlobalCatalogItemTypeAccessOk() (*string, bool) {
	if o == nil || o.GlobalCatalogItemTypeAccess == nil {
		return nil, false
	}
	return o.GlobalCatalogItemTypeAccess, true
}

// HasGlobalCatalogItemTypeAccess returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasGlobalCatalogItemTypeAccess() bool {
	if o != nil && o.GlobalCatalogItemTypeAccess != nil {
		return true
	}

	return false
}

// SetGlobalCatalogItemTypeAccess gets a reference to the given string and assigns it to the GlobalCatalogItemTypeAccess field.
func (o *ApiRolesIdRole) SetGlobalCatalogItemTypeAccess(v string) {
	o.GlobalCatalogItemTypeAccess = &v
}

// GetCatalogItemTypes returns the CatalogItemTypes field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetCatalogItemTypes() []ApiRolesRoleCatalogItemTypes {
	if o == nil || o.CatalogItemTypes == nil {
		var ret []ApiRolesRoleCatalogItemTypes
		return ret
	}
	return *o.CatalogItemTypes
}

// GetCatalogItemTypesOk returns a tuple with the CatalogItemTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetCatalogItemTypesOk() (*[]ApiRolesRoleCatalogItemTypes, bool) {
	if o == nil || o.CatalogItemTypes == nil {
		return nil, false
	}
	return o.CatalogItemTypes, true
}

// HasCatalogItemTypes returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasCatalogItemTypes() bool {
	if o != nil && o.CatalogItemTypes != nil {
		return true
	}

	return false
}

// SetCatalogItemTypes gets a reference to the given []ApiRolesRoleCatalogItemTypes and assigns it to the CatalogItemTypes field.
func (o *ApiRolesIdRole) SetCatalogItemTypes(v []ApiRolesRoleCatalogItemTypes) {
	o.CatalogItemTypes = &v
}

// GetGlobalPersonaAccess returns the GlobalPersonaAccess field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetGlobalPersonaAccess() string {
	if o == nil || o.GlobalPersonaAccess == nil {
		var ret string
		return ret
	}
	return *o.GlobalPersonaAccess
}

// GetGlobalPersonaAccessOk returns a tuple with the GlobalPersonaAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetGlobalPersonaAccessOk() (*string, bool) {
	if o == nil || o.GlobalPersonaAccess == nil {
		return nil, false
	}
	return o.GlobalPersonaAccess, true
}

// HasGlobalPersonaAccess returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasGlobalPersonaAccess() bool {
	if o != nil && o.GlobalPersonaAccess != nil {
		return true
	}

	return false
}

// SetGlobalPersonaAccess gets a reference to the given string and assigns it to the GlobalPersonaAccess field.
func (o *ApiRolesIdRole) SetGlobalPersonaAccess(v string) {
	o.GlobalPersonaAccess = &v
}

// GetPersonas returns the Personas field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetPersonas() []ApiRolesRolePersonas {
	if o == nil || o.Personas == nil {
		var ret []ApiRolesRolePersonas
		return ret
	}
	return *o.Personas
}

// GetPersonasOk returns a tuple with the Personas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetPersonasOk() (*[]ApiRolesRolePersonas, bool) {
	if o == nil || o.Personas == nil {
		return nil, false
	}
	return o.Personas, true
}

// HasPersonas returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasPersonas() bool {
	if o != nil && o.Personas != nil {
		return true
	}

	return false
}

// SetPersonas gets a reference to the given []ApiRolesRolePersonas and assigns it to the Personas field.
func (o *ApiRolesIdRole) SetPersonas(v []ApiRolesRolePersonas) {
	o.Personas = &v
}

// GetGlobalVdiPoolAccess returns the GlobalVdiPoolAccess field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetGlobalVdiPoolAccess() string {
	if o == nil || o.GlobalVdiPoolAccess == nil {
		var ret string
		return ret
	}
	return *o.GlobalVdiPoolAccess
}

// GetGlobalVdiPoolAccessOk returns a tuple with the GlobalVdiPoolAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetGlobalVdiPoolAccessOk() (*string, bool) {
	if o == nil || o.GlobalVdiPoolAccess == nil {
		return nil, false
	}
	return o.GlobalVdiPoolAccess, true
}

// HasGlobalVdiPoolAccess returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasGlobalVdiPoolAccess() bool {
	if o != nil && o.GlobalVdiPoolAccess != nil {
		return true
	}

	return false
}

// SetGlobalVdiPoolAccess gets a reference to the given string and assigns it to the GlobalVdiPoolAccess field.
func (o *ApiRolesIdRole) SetGlobalVdiPoolAccess(v string) {
	o.GlobalVdiPoolAccess = &v
}

// GetVdiPools returns the VdiPools field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetVdiPools() []ApiRolesRoleVdiPools {
	if o == nil || o.VdiPools == nil {
		var ret []ApiRolesRoleVdiPools
		return ret
	}
	return *o.VdiPools
}

// GetVdiPoolsOk returns a tuple with the VdiPools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetVdiPoolsOk() (*[]ApiRolesRoleVdiPools, bool) {
	if o == nil || o.VdiPools == nil {
		return nil, false
	}
	return o.VdiPools, true
}

// HasVdiPools returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasVdiPools() bool {
	if o != nil && o.VdiPools != nil {
		return true
	}

	return false
}

// SetVdiPools gets a reference to the given []ApiRolesRoleVdiPools and assigns it to the VdiPools field.
func (o *ApiRolesIdRole) SetVdiPools(v []ApiRolesRoleVdiPools) {
	o.VdiPools = &v
}

// GetGlobalReportTypeAccess returns the GlobalReportTypeAccess field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetGlobalReportTypeAccess() string {
	if o == nil || o.GlobalReportTypeAccess == nil {
		var ret string
		return ret
	}
	return *o.GlobalReportTypeAccess
}

// GetGlobalReportTypeAccessOk returns a tuple with the GlobalReportTypeAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetGlobalReportTypeAccessOk() (*string, bool) {
	if o == nil || o.GlobalReportTypeAccess == nil {
		return nil, false
	}
	return o.GlobalReportTypeAccess, true
}

// HasGlobalReportTypeAccess returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasGlobalReportTypeAccess() bool {
	if o != nil && o.GlobalReportTypeAccess != nil {
		return true
	}

	return false
}

// SetGlobalReportTypeAccess gets a reference to the given string and assigns it to the GlobalReportTypeAccess field.
func (o *ApiRolesIdRole) SetGlobalReportTypeAccess(v string) {
	o.GlobalReportTypeAccess = &v
}

// GetReportTypes returns the ReportTypes field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetReportTypes() []ApiRolesRoleReportTypes {
	if o == nil || o.ReportTypes == nil {
		var ret []ApiRolesRoleReportTypes
		return ret
	}
	return *o.ReportTypes
}

// GetReportTypesOk returns a tuple with the ReportTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetReportTypesOk() (*[]ApiRolesRoleReportTypes, bool) {
	if o == nil || o.ReportTypes == nil {
		return nil, false
	}
	return o.ReportTypes, true
}

// HasReportTypes returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasReportTypes() bool {
	if o != nil && o.ReportTypes != nil {
		return true
	}

	return false
}

// SetReportTypes gets a reference to the given []ApiRolesRoleReportTypes and assigns it to the ReportTypes field.
func (o *ApiRolesIdRole) SetReportTypes(v []ApiRolesRoleReportTypes) {
	o.ReportTypes = &v
}

// GetGlobalTaskAccess returns the GlobalTaskAccess field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetGlobalTaskAccess() string {
	if o == nil || o.GlobalTaskAccess == nil {
		var ret string
		return ret
	}
	return *o.GlobalTaskAccess
}

// GetGlobalTaskAccessOk returns a tuple with the GlobalTaskAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetGlobalTaskAccessOk() (*string, bool) {
	if o == nil || o.GlobalTaskAccess == nil {
		return nil, false
	}
	return o.GlobalTaskAccess, true
}

// HasGlobalTaskAccess returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasGlobalTaskAccess() bool {
	if o != nil && o.GlobalTaskAccess != nil {
		return true
	}

	return false
}

// SetGlobalTaskAccess gets a reference to the given string and assigns it to the GlobalTaskAccess field.
func (o *ApiRolesIdRole) SetGlobalTaskAccess(v string) {
	o.GlobalTaskAccess = &v
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetTasks() []ApiRolesRoleTasks {
	if o == nil || o.Tasks == nil {
		var ret []ApiRolesRoleTasks
		return ret
	}
	return *o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetTasksOk() (*[]ApiRolesRoleTasks, bool) {
	if o == nil || o.Tasks == nil {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasTasks() bool {
	if o != nil && o.Tasks != nil {
		return true
	}

	return false
}

// SetTasks gets a reference to the given []ApiRolesRoleTasks and assigns it to the Tasks field.
func (o *ApiRolesIdRole) SetTasks(v []ApiRolesRoleTasks) {
	o.Tasks = &v
}

// GetGlobalTaskSetAccess returns the GlobalTaskSetAccess field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetGlobalTaskSetAccess() string {
	if o == nil || o.GlobalTaskSetAccess == nil {
		var ret string
		return ret
	}
	return *o.GlobalTaskSetAccess
}

// GetGlobalTaskSetAccessOk returns a tuple with the GlobalTaskSetAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetGlobalTaskSetAccessOk() (*string, bool) {
	if o == nil || o.GlobalTaskSetAccess == nil {
		return nil, false
	}
	return o.GlobalTaskSetAccess, true
}

// HasGlobalTaskSetAccess returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasGlobalTaskSetAccess() bool {
	if o != nil && o.GlobalTaskSetAccess != nil {
		return true
	}

	return false
}

// SetGlobalTaskSetAccess gets a reference to the given string and assigns it to the GlobalTaskSetAccess field.
func (o *ApiRolesIdRole) SetGlobalTaskSetAccess(v string) {
	o.GlobalTaskSetAccess = &v
}

// GetTaskSets returns the TaskSets field value if set, zero value otherwise.
func (o *ApiRolesIdRole) GetTaskSets() []ApiRolesRoleTaskSets {
	if o == nil || o.TaskSets == nil {
		var ret []ApiRolesRoleTaskSets
		return ret
	}
	return *o.TaskSets
}

// GetTaskSetsOk returns a tuple with the TaskSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRolesIdRole) GetTaskSetsOk() (*[]ApiRolesRoleTaskSets, bool) {
	if o == nil || o.TaskSets == nil {
		return nil, false
	}
	return o.TaskSets, true
}

// HasTaskSets returns a boolean if a field has been set.
func (o *ApiRolesIdRole) HasTaskSets() bool {
	if o != nil && o.TaskSets != nil {
		return true
	}

	return false
}

// SetTaskSets gets a reference to the given []ApiRolesRoleTaskSets and assigns it to the TaskSets field.
func (o *ApiRolesIdRole) SetTaskSets(v []ApiRolesRoleTaskSets) {
	o.TaskSets = &v
}

func (o ApiRolesIdRole) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Authority != nil {
		toSerialize["authority"] = o.Authority
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.DefaultPersona.IsSet() {
		toSerialize["defaultPersona"] = o.DefaultPersona.Get()
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.GlobalSiteAccess != nil {
		toSerialize["globalSiteAccess"] = o.GlobalSiteAccess
	}
	if o.Sites != nil {
		toSerialize["sites"] = o.Sites
	}
	if o.GlobalZoneAccess != nil {
		toSerialize["globalZoneAccess"] = o.GlobalZoneAccess
	}
	if o.Zones != nil {
		toSerialize["zones"] = o.Zones
	}
	if o.GlobalInstanceTypeAccess != nil {
		toSerialize["globalInstanceTypeAccess"] = o.GlobalInstanceTypeAccess
	}
	if o.InstanceTypes != nil {
		toSerialize["instanceTypes"] = o.InstanceTypes
	}
	if o.GlobalAppTemplateAccess != nil {
		toSerialize["globalAppTemplateAccess"] = o.GlobalAppTemplateAccess
	}
	if o.AppTemplates != nil {
		toSerialize["appTemplates"] = o.AppTemplates
	}
	if o.GlobalCatalogItemTypeAccess != nil {
		toSerialize["globalCatalogItemTypeAccess"] = o.GlobalCatalogItemTypeAccess
	}
	if o.CatalogItemTypes != nil {
		toSerialize["catalogItemTypes"] = o.CatalogItemTypes
	}
	if o.GlobalPersonaAccess != nil {
		toSerialize["globalPersonaAccess"] = o.GlobalPersonaAccess
	}
	if o.Personas != nil {
		toSerialize["personas"] = o.Personas
	}
	if o.GlobalVdiPoolAccess != nil {
		toSerialize["globalVdiPoolAccess"] = o.GlobalVdiPoolAccess
	}
	if o.VdiPools != nil {
		toSerialize["vdiPools"] = o.VdiPools
	}
	if o.GlobalReportTypeAccess != nil {
		toSerialize["globalReportTypeAccess"] = o.GlobalReportTypeAccess
	}
	if o.ReportTypes != nil {
		toSerialize["reportTypes"] = o.ReportTypes
	}
	if o.GlobalTaskAccess != nil {
		toSerialize["globalTaskAccess"] = o.GlobalTaskAccess
	}
	if o.Tasks != nil {
		toSerialize["tasks"] = o.Tasks
	}
	if o.GlobalTaskSetAccess != nil {
		toSerialize["globalTaskSetAccess"] = o.GlobalTaskSetAccess
	}
	if o.TaskSets != nil {
		toSerialize["taskSets"] = o.TaskSets
	}
	return json.Marshal(toSerialize)
}

type NullableApiRolesIdRole struct {
	value *ApiRolesIdRole
	isSet bool
}

func (v NullableApiRolesIdRole) Get() *ApiRolesIdRole {
	return v.value
}

func (v *NullableApiRolesIdRole) Set(val *ApiRolesIdRole) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRolesIdRole) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRolesIdRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRolesIdRole(val *ApiRolesIdRole) *NullableApiRolesIdRole {
	return &NullableApiRolesIdRole{value: val, isSet: true}
}

func (v NullableApiRolesIdRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRolesIdRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


