/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject107 struct for InlineObject107
type InlineObject107 struct {
	ContainerScript *ScriptCreate `json:"containerScript,omitempty"`
}

// NewInlineObject107 instantiates a new InlineObject107 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject107() *InlineObject107 {
	this := InlineObject107{}
	return &this
}

// NewInlineObject107WithDefaults instantiates a new InlineObject107 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject107WithDefaults() *InlineObject107 {
	this := InlineObject107{}
	return &this
}

// GetContainerScript returns the ContainerScript field value if set, zero value otherwise.
func (o *InlineObject107) GetContainerScript() ScriptCreate {
	if o == nil || o.ContainerScript == nil {
		var ret ScriptCreate
		return ret
	}
	return *o.ContainerScript
}

// GetContainerScriptOk returns a tuple with the ContainerScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject107) GetContainerScriptOk() (*ScriptCreate, bool) {
	if o == nil || o.ContainerScript == nil {
		return nil, false
	}
	return o.ContainerScript, true
}

// HasContainerScript returns a boolean if a field has been set.
func (o *InlineObject107) HasContainerScript() bool {
	if o != nil && o.ContainerScript != nil {
		return true
	}

	return false
}

// SetContainerScript gets a reference to the given ScriptCreate and assigns it to the ContainerScript field.
func (o *InlineObject107) SetContainerScript(v ScriptCreate) {
	o.ContainerScript = &v
}

func (o InlineObject107) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContainerScript != nil {
		toSerialize["containerScript"] = o.ContainerScript
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject107 struct {
	value *InlineObject107
	isSet bool
}

func (v NullableInlineObject107) Get() *InlineObject107 {
	return v.value
}

func (v *NullableInlineObject107) Set(val *InlineObject107) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject107) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject107) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject107(val *InlineObject107) *NullableInlineObject107 {
	return &NullableInlineObject107{value: val, isSet: true}
}

func (v NullableInlineObject107) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject107) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


