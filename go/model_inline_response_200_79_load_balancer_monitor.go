/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// InlineResponse20079LoadBalancerMonitor struct for InlineResponse20079LoadBalancerMonitor
type InlineResponse20079LoadBalancerMonitor struct {
	Id *int64 `json:"id,omitempty"`
	LoadBalancer *InlineResponse20079LoadBalancerMonitorLoadBalancer `json:"loadBalancer,omitempty"`
	Name *string `json:"name,omitempty"`
	Code NullableString `json:"code,omitempty"`
	Category NullableString `json:"category,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	Description *string `json:"description,omitempty"`
	MonitorType *string `json:"monitorType,omitempty"`
	MonitorInterval *int64 `json:"monitorInterval,omitempty"`
	MonitorTimeout *int64 `json:"monitorTimeout,omitempty"`
	SendData NullableString `json:"sendData,omitempty"`
	SendVersion *string `json:"sendVersion,omitempty"`
	SendType *string `json:"sendType,omitempty"`
	ReceiveData NullableString `json:"receiveData,omitempty"`
	ReceiveCode *string `json:"receiveCode,omitempty"`
	DisabledData NullableString `json:"disabledData,omitempty"`
	MonitorUsername NullableString `json:"monitorUsername,omitempty"`
	MonitorPassword NullableString `json:"monitorPassword,omitempty"`
	MonitorDestination *string `json:"monitorDestination,omitempty"`
	MonitorReverse *bool `json:"monitorReverse,omitempty"`
	MonitorTransparent *bool `json:"monitorTransparent,omitempty"`
	MonitorAdaptive *bool `json:"monitorAdaptive,omitempty"`
	AliasAddress NullableString `json:"aliasAddress,omitempty"`
	AliasPort *int64 `json:"aliasPort,omitempty"`
	InternalId *string `json:"internalId,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	MonitorSource *string `json:"monitorSource,omitempty"`
	Status *string `json:"status,omitempty"`
	StatusMessage NullableString `json:"statusMessage,omitempty"`
	StatusDate NullableTime `json:"statusDate,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	MaxRetry *int64 `json:"maxRetry,omitempty"`
	FallCount *int64 `json:"fallCount,omitempty"`
	RiseCount *int64 `json:"riseCount,omitempty"`
	DataLength NullableString `json:"dataLength,omitempty"`
	Config *map[string]interface{} `json:"config,omitempty"`
	CreatedBy NullableString `json:"createdBy,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
}

// NewInlineResponse20079LoadBalancerMonitor instantiates a new InlineResponse20079LoadBalancerMonitor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20079LoadBalancerMonitor() *InlineResponse20079LoadBalancerMonitor {
	this := InlineResponse20079LoadBalancerMonitor{}
	return &this
}

// NewInlineResponse20079LoadBalancerMonitorWithDefaults instantiates a new InlineResponse20079LoadBalancerMonitor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20079LoadBalancerMonitorWithDefaults() *InlineResponse20079LoadBalancerMonitor {
	this := InlineResponse20079LoadBalancerMonitor{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *InlineResponse20079LoadBalancerMonitor) SetId(v int64) {
	o.Id = &v
}

// GetLoadBalancer returns the LoadBalancer field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetLoadBalancer() InlineResponse20079LoadBalancerMonitorLoadBalancer {
	if o == nil || o.LoadBalancer == nil {
		var ret InlineResponse20079LoadBalancerMonitorLoadBalancer
		return ret
	}
	return *o.LoadBalancer
}

// GetLoadBalancerOk returns a tuple with the LoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetLoadBalancerOk() (*InlineResponse20079LoadBalancerMonitorLoadBalancer, bool) {
	if o == nil || o.LoadBalancer == nil {
		return nil, false
	}
	return o.LoadBalancer, true
}

// HasLoadBalancer returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasLoadBalancer() bool {
	if o != nil && o.LoadBalancer != nil {
		return true
	}

	return false
}

// SetLoadBalancer gets a reference to the given InlineResponse20079LoadBalancerMonitorLoadBalancer and assigns it to the LoadBalancer field.
func (o *InlineResponse20079LoadBalancerMonitor) SetLoadBalancer(v InlineResponse20079LoadBalancerMonitorLoadBalancer) {
	o.LoadBalancer = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse20079LoadBalancerMonitor) SetName(v string) {
	o.Name = &v
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20079LoadBalancerMonitor) GetCode() string {
	if o == nil || o.Code.Get() == nil {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20079LoadBalancerMonitor) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *InlineResponse20079LoadBalancerMonitor) SetCode(v string) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) UnsetCode() {
	o.Code.Unset()
}

// GetCategory returns the Category field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20079LoadBalancerMonitor) GetCategory() string {
	if o == nil || o.Category.Get() == nil {
		var ret string
		return ret
	}
	return *o.Category.Get()
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20079LoadBalancerMonitor) GetCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Category.Get(), o.Category.IsSet()
}

// HasCategory returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasCategory() bool {
	if o != nil && o.Category.IsSet() {
		return true
	}

	return false
}

// SetCategory gets a reference to the given NullableString and assigns it to the Category field.
func (o *InlineResponse20079LoadBalancerMonitor) SetCategory(v string) {
	o.Category.Set(&v)
}
// SetCategoryNil sets the value for Category to be an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) SetCategoryNil() {
	o.Category.Set(nil)
}

// UnsetCategory ensures that no value is present for Category, not even an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) UnsetCategory() {
	o.Category.Unset()
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetVisibilityOk() (*string, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *InlineResponse20079LoadBalancerMonitor) SetVisibility(v string) {
	o.Visibility = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InlineResponse20079LoadBalancerMonitor) SetDescription(v string) {
	o.Description = &v
}

// GetMonitorType returns the MonitorType field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetMonitorType() string {
	if o == nil || o.MonitorType == nil {
		var ret string
		return ret
	}
	return *o.MonitorType
}

// GetMonitorTypeOk returns a tuple with the MonitorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetMonitorTypeOk() (*string, bool) {
	if o == nil || o.MonitorType == nil {
		return nil, false
	}
	return o.MonitorType, true
}

// HasMonitorType returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasMonitorType() bool {
	if o != nil && o.MonitorType != nil {
		return true
	}

	return false
}

// SetMonitorType gets a reference to the given string and assigns it to the MonitorType field.
func (o *InlineResponse20079LoadBalancerMonitor) SetMonitorType(v string) {
	o.MonitorType = &v
}

// GetMonitorInterval returns the MonitorInterval field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetMonitorInterval() int64 {
	if o == nil || o.MonitorInterval == nil {
		var ret int64
		return ret
	}
	return *o.MonitorInterval
}

// GetMonitorIntervalOk returns a tuple with the MonitorInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetMonitorIntervalOk() (*int64, bool) {
	if o == nil || o.MonitorInterval == nil {
		return nil, false
	}
	return o.MonitorInterval, true
}

// HasMonitorInterval returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasMonitorInterval() bool {
	if o != nil && o.MonitorInterval != nil {
		return true
	}

	return false
}

// SetMonitorInterval gets a reference to the given int64 and assigns it to the MonitorInterval field.
func (o *InlineResponse20079LoadBalancerMonitor) SetMonitorInterval(v int64) {
	o.MonitorInterval = &v
}

// GetMonitorTimeout returns the MonitorTimeout field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetMonitorTimeout() int64 {
	if o == nil || o.MonitorTimeout == nil {
		var ret int64
		return ret
	}
	return *o.MonitorTimeout
}

// GetMonitorTimeoutOk returns a tuple with the MonitorTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetMonitorTimeoutOk() (*int64, bool) {
	if o == nil || o.MonitorTimeout == nil {
		return nil, false
	}
	return o.MonitorTimeout, true
}

// HasMonitorTimeout returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasMonitorTimeout() bool {
	if o != nil && o.MonitorTimeout != nil {
		return true
	}

	return false
}

// SetMonitorTimeout gets a reference to the given int64 and assigns it to the MonitorTimeout field.
func (o *InlineResponse20079LoadBalancerMonitor) SetMonitorTimeout(v int64) {
	o.MonitorTimeout = &v
}

// GetSendData returns the SendData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20079LoadBalancerMonitor) GetSendData() string {
	if o == nil || o.SendData.Get() == nil {
		var ret string
		return ret
	}
	return *o.SendData.Get()
}

// GetSendDataOk returns a tuple with the SendData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20079LoadBalancerMonitor) GetSendDataOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SendData.Get(), o.SendData.IsSet()
}

// HasSendData returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasSendData() bool {
	if o != nil && o.SendData.IsSet() {
		return true
	}

	return false
}

// SetSendData gets a reference to the given NullableString and assigns it to the SendData field.
func (o *InlineResponse20079LoadBalancerMonitor) SetSendData(v string) {
	o.SendData.Set(&v)
}
// SetSendDataNil sets the value for SendData to be an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) SetSendDataNil() {
	o.SendData.Set(nil)
}

// UnsetSendData ensures that no value is present for SendData, not even an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) UnsetSendData() {
	o.SendData.Unset()
}

// GetSendVersion returns the SendVersion field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetSendVersion() string {
	if o == nil || o.SendVersion == nil {
		var ret string
		return ret
	}
	return *o.SendVersion
}

// GetSendVersionOk returns a tuple with the SendVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetSendVersionOk() (*string, bool) {
	if o == nil || o.SendVersion == nil {
		return nil, false
	}
	return o.SendVersion, true
}

// HasSendVersion returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasSendVersion() bool {
	if o != nil && o.SendVersion != nil {
		return true
	}

	return false
}

// SetSendVersion gets a reference to the given string and assigns it to the SendVersion field.
func (o *InlineResponse20079LoadBalancerMonitor) SetSendVersion(v string) {
	o.SendVersion = &v
}

// GetSendType returns the SendType field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetSendType() string {
	if o == nil || o.SendType == nil {
		var ret string
		return ret
	}
	return *o.SendType
}

// GetSendTypeOk returns a tuple with the SendType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetSendTypeOk() (*string, bool) {
	if o == nil || o.SendType == nil {
		return nil, false
	}
	return o.SendType, true
}

// HasSendType returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasSendType() bool {
	if o != nil && o.SendType != nil {
		return true
	}

	return false
}

// SetSendType gets a reference to the given string and assigns it to the SendType field.
func (o *InlineResponse20079LoadBalancerMonitor) SetSendType(v string) {
	o.SendType = &v
}

// GetReceiveData returns the ReceiveData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20079LoadBalancerMonitor) GetReceiveData() string {
	if o == nil || o.ReceiveData.Get() == nil {
		var ret string
		return ret
	}
	return *o.ReceiveData.Get()
}

// GetReceiveDataOk returns a tuple with the ReceiveData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20079LoadBalancerMonitor) GetReceiveDataOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReceiveData.Get(), o.ReceiveData.IsSet()
}

// HasReceiveData returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasReceiveData() bool {
	if o != nil && o.ReceiveData.IsSet() {
		return true
	}

	return false
}

// SetReceiveData gets a reference to the given NullableString and assigns it to the ReceiveData field.
func (o *InlineResponse20079LoadBalancerMonitor) SetReceiveData(v string) {
	o.ReceiveData.Set(&v)
}
// SetReceiveDataNil sets the value for ReceiveData to be an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) SetReceiveDataNil() {
	o.ReceiveData.Set(nil)
}

// UnsetReceiveData ensures that no value is present for ReceiveData, not even an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) UnsetReceiveData() {
	o.ReceiveData.Unset()
}

// GetReceiveCode returns the ReceiveCode field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetReceiveCode() string {
	if o == nil || o.ReceiveCode == nil {
		var ret string
		return ret
	}
	return *o.ReceiveCode
}

// GetReceiveCodeOk returns a tuple with the ReceiveCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetReceiveCodeOk() (*string, bool) {
	if o == nil || o.ReceiveCode == nil {
		return nil, false
	}
	return o.ReceiveCode, true
}

// HasReceiveCode returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasReceiveCode() bool {
	if o != nil && o.ReceiveCode != nil {
		return true
	}

	return false
}

// SetReceiveCode gets a reference to the given string and assigns it to the ReceiveCode field.
func (o *InlineResponse20079LoadBalancerMonitor) SetReceiveCode(v string) {
	o.ReceiveCode = &v
}

// GetDisabledData returns the DisabledData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20079LoadBalancerMonitor) GetDisabledData() string {
	if o == nil || o.DisabledData.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisabledData.Get()
}

// GetDisabledDataOk returns a tuple with the DisabledData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20079LoadBalancerMonitor) GetDisabledDataOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisabledData.Get(), o.DisabledData.IsSet()
}

// HasDisabledData returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasDisabledData() bool {
	if o != nil && o.DisabledData.IsSet() {
		return true
	}

	return false
}

// SetDisabledData gets a reference to the given NullableString and assigns it to the DisabledData field.
func (o *InlineResponse20079LoadBalancerMonitor) SetDisabledData(v string) {
	o.DisabledData.Set(&v)
}
// SetDisabledDataNil sets the value for DisabledData to be an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) SetDisabledDataNil() {
	o.DisabledData.Set(nil)
}

// UnsetDisabledData ensures that no value is present for DisabledData, not even an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) UnsetDisabledData() {
	o.DisabledData.Unset()
}

// GetMonitorUsername returns the MonitorUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20079LoadBalancerMonitor) GetMonitorUsername() string {
	if o == nil || o.MonitorUsername.Get() == nil {
		var ret string
		return ret
	}
	return *o.MonitorUsername.Get()
}

// GetMonitorUsernameOk returns a tuple with the MonitorUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20079LoadBalancerMonitor) GetMonitorUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MonitorUsername.Get(), o.MonitorUsername.IsSet()
}

// HasMonitorUsername returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasMonitorUsername() bool {
	if o != nil && o.MonitorUsername.IsSet() {
		return true
	}

	return false
}

// SetMonitorUsername gets a reference to the given NullableString and assigns it to the MonitorUsername field.
func (o *InlineResponse20079LoadBalancerMonitor) SetMonitorUsername(v string) {
	o.MonitorUsername.Set(&v)
}
// SetMonitorUsernameNil sets the value for MonitorUsername to be an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) SetMonitorUsernameNil() {
	o.MonitorUsername.Set(nil)
}

// UnsetMonitorUsername ensures that no value is present for MonitorUsername, not even an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) UnsetMonitorUsername() {
	o.MonitorUsername.Unset()
}

// GetMonitorPassword returns the MonitorPassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20079LoadBalancerMonitor) GetMonitorPassword() string {
	if o == nil || o.MonitorPassword.Get() == nil {
		var ret string
		return ret
	}
	return *o.MonitorPassword.Get()
}

// GetMonitorPasswordOk returns a tuple with the MonitorPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20079LoadBalancerMonitor) GetMonitorPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MonitorPassword.Get(), o.MonitorPassword.IsSet()
}

// HasMonitorPassword returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasMonitorPassword() bool {
	if o != nil && o.MonitorPassword.IsSet() {
		return true
	}

	return false
}

// SetMonitorPassword gets a reference to the given NullableString and assigns it to the MonitorPassword field.
func (o *InlineResponse20079LoadBalancerMonitor) SetMonitorPassword(v string) {
	o.MonitorPassword.Set(&v)
}
// SetMonitorPasswordNil sets the value for MonitorPassword to be an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) SetMonitorPasswordNil() {
	o.MonitorPassword.Set(nil)
}

// UnsetMonitorPassword ensures that no value is present for MonitorPassword, not even an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) UnsetMonitorPassword() {
	o.MonitorPassword.Unset()
}

// GetMonitorDestination returns the MonitorDestination field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetMonitorDestination() string {
	if o == nil || o.MonitorDestination == nil {
		var ret string
		return ret
	}
	return *o.MonitorDestination
}

// GetMonitorDestinationOk returns a tuple with the MonitorDestination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetMonitorDestinationOk() (*string, bool) {
	if o == nil || o.MonitorDestination == nil {
		return nil, false
	}
	return o.MonitorDestination, true
}

// HasMonitorDestination returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasMonitorDestination() bool {
	if o != nil && o.MonitorDestination != nil {
		return true
	}

	return false
}

// SetMonitorDestination gets a reference to the given string and assigns it to the MonitorDestination field.
func (o *InlineResponse20079LoadBalancerMonitor) SetMonitorDestination(v string) {
	o.MonitorDestination = &v
}

// GetMonitorReverse returns the MonitorReverse field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetMonitorReverse() bool {
	if o == nil || o.MonitorReverse == nil {
		var ret bool
		return ret
	}
	return *o.MonitorReverse
}

// GetMonitorReverseOk returns a tuple with the MonitorReverse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetMonitorReverseOk() (*bool, bool) {
	if o == nil || o.MonitorReverse == nil {
		return nil, false
	}
	return o.MonitorReverse, true
}

// HasMonitorReverse returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasMonitorReverse() bool {
	if o != nil && o.MonitorReverse != nil {
		return true
	}

	return false
}

// SetMonitorReverse gets a reference to the given bool and assigns it to the MonitorReverse field.
func (o *InlineResponse20079LoadBalancerMonitor) SetMonitorReverse(v bool) {
	o.MonitorReverse = &v
}

// GetMonitorTransparent returns the MonitorTransparent field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetMonitorTransparent() bool {
	if o == nil || o.MonitorTransparent == nil {
		var ret bool
		return ret
	}
	return *o.MonitorTransparent
}

// GetMonitorTransparentOk returns a tuple with the MonitorTransparent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetMonitorTransparentOk() (*bool, bool) {
	if o == nil || o.MonitorTransparent == nil {
		return nil, false
	}
	return o.MonitorTransparent, true
}

// HasMonitorTransparent returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasMonitorTransparent() bool {
	if o != nil && o.MonitorTransparent != nil {
		return true
	}

	return false
}

// SetMonitorTransparent gets a reference to the given bool and assigns it to the MonitorTransparent field.
func (o *InlineResponse20079LoadBalancerMonitor) SetMonitorTransparent(v bool) {
	o.MonitorTransparent = &v
}

// GetMonitorAdaptive returns the MonitorAdaptive field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetMonitorAdaptive() bool {
	if o == nil || o.MonitorAdaptive == nil {
		var ret bool
		return ret
	}
	return *o.MonitorAdaptive
}

// GetMonitorAdaptiveOk returns a tuple with the MonitorAdaptive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetMonitorAdaptiveOk() (*bool, bool) {
	if o == nil || o.MonitorAdaptive == nil {
		return nil, false
	}
	return o.MonitorAdaptive, true
}

// HasMonitorAdaptive returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasMonitorAdaptive() bool {
	if o != nil && o.MonitorAdaptive != nil {
		return true
	}

	return false
}

// SetMonitorAdaptive gets a reference to the given bool and assigns it to the MonitorAdaptive field.
func (o *InlineResponse20079LoadBalancerMonitor) SetMonitorAdaptive(v bool) {
	o.MonitorAdaptive = &v
}

// GetAliasAddress returns the AliasAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20079LoadBalancerMonitor) GetAliasAddress() string {
	if o == nil || o.AliasAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.AliasAddress.Get()
}

// GetAliasAddressOk returns a tuple with the AliasAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20079LoadBalancerMonitor) GetAliasAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AliasAddress.Get(), o.AliasAddress.IsSet()
}

// HasAliasAddress returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasAliasAddress() bool {
	if o != nil && o.AliasAddress.IsSet() {
		return true
	}

	return false
}

// SetAliasAddress gets a reference to the given NullableString and assigns it to the AliasAddress field.
func (o *InlineResponse20079LoadBalancerMonitor) SetAliasAddress(v string) {
	o.AliasAddress.Set(&v)
}
// SetAliasAddressNil sets the value for AliasAddress to be an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) SetAliasAddressNil() {
	o.AliasAddress.Set(nil)
}

// UnsetAliasAddress ensures that no value is present for AliasAddress, not even an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) UnsetAliasAddress() {
	o.AliasAddress.Unset()
}

// GetAliasPort returns the AliasPort field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetAliasPort() int64 {
	if o == nil || o.AliasPort == nil {
		var ret int64
		return ret
	}
	return *o.AliasPort
}

// GetAliasPortOk returns a tuple with the AliasPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetAliasPortOk() (*int64, bool) {
	if o == nil || o.AliasPort == nil {
		return nil, false
	}
	return o.AliasPort, true
}

// HasAliasPort returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasAliasPort() bool {
	if o != nil && o.AliasPort != nil {
		return true
	}

	return false
}

// SetAliasPort gets a reference to the given int64 and assigns it to the AliasPort field.
func (o *InlineResponse20079LoadBalancerMonitor) SetAliasPort(v int64) {
	o.AliasPort = &v
}

// GetInternalId returns the InternalId field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetInternalId() string {
	if o == nil || o.InternalId == nil {
		var ret string
		return ret
	}
	return *o.InternalId
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetInternalIdOk() (*string, bool) {
	if o == nil || o.InternalId == nil {
		return nil, false
	}
	return o.InternalId, true
}

// HasInternalId returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasInternalId() bool {
	if o != nil && o.InternalId != nil {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given string and assigns it to the InternalId field.
func (o *InlineResponse20079LoadBalancerMonitor) SetInternalId(v string) {
	o.InternalId = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetExternalIdOk() (*string, bool) {
	if o == nil || o.ExternalId == nil {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasExternalId() bool {
	if o != nil && o.ExternalId != nil {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *InlineResponse20079LoadBalancerMonitor) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetMonitorSource returns the MonitorSource field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetMonitorSource() string {
	if o == nil || o.MonitorSource == nil {
		var ret string
		return ret
	}
	return *o.MonitorSource
}

// GetMonitorSourceOk returns a tuple with the MonitorSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetMonitorSourceOk() (*string, bool) {
	if o == nil || o.MonitorSource == nil {
		return nil, false
	}
	return o.MonitorSource, true
}

// HasMonitorSource returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasMonitorSource() bool {
	if o != nil && o.MonitorSource != nil {
		return true
	}

	return false
}

// SetMonitorSource gets a reference to the given string and assigns it to the MonitorSource field.
func (o *InlineResponse20079LoadBalancerMonitor) SetMonitorSource(v string) {
	o.MonitorSource = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse20079LoadBalancerMonitor) SetStatus(v string) {
	o.Status = &v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20079LoadBalancerMonitor) GetStatusMessage() string {
	if o == nil || o.StatusMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.StatusMessage.Get()
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20079LoadBalancerMonitor) GetStatusMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StatusMessage.Get(), o.StatusMessage.IsSet()
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasStatusMessage() bool {
	if o != nil && o.StatusMessage.IsSet() {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given NullableString and assigns it to the StatusMessage field.
func (o *InlineResponse20079LoadBalancerMonitor) SetStatusMessage(v string) {
	o.StatusMessage.Set(&v)
}
// SetStatusMessageNil sets the value for StatusMessage to be an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) SetStatusMessageNil() {
	o.StatusMessage.Set(nil)
}

// UnsetStatusMessage ensures that no value is present for StatusMessage, not even an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) UnsetStatusMessage() {
	o.StatusMessage.Unset()
}

// GetStatusDate returns the StatusDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20079LoadBalancerMonitor) GetStatusDate() time.Time {
	if o == nil || o.StatusDate.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.StatusDate.Get()
}

// GetStatusDateOk returns a tuple with the StatusDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20079LoadBalancerMonitor) GetStatusDateOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StatusDate.Get(), o.StatusDate.IsSet()
}

// HasStatusDate returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasStatusDate() bool {
	if o != nil && o.StatusDate.IsSet() {
		return true
	}

	return false
}

// SetStatusDate gets a reference to the given NullableTime and assigns it to the StatusDate field.
func (o *InlineResponse20079LoadBalancerMonitor) SetStatusDate(v time.Time) {
	o.StatusDate.Set(&v)
}
// SetStatusDateNil sets the value for StatusDate to be an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) SetStatusDateNil() {
	o.StatusDate.Set(nil)
}

// UnsetStatusDate ensures that no value is present for StatusDate, not even an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) UnsetStatusDate() {
	o.StatusDate.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *InlineResponse20079LoadBalancerMonitor) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetMaxRetry returns the MaxRetry field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetMaxRetry() int64 {
	if o == nil || o.MaxRetry == nil {
		var ret int64
		return ret
	}
	return *o.MaxRetry
}

// GetMaxRetryOk returns a tuple with the MaxRetry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetMaxRetryOk() (*int64, bool) {
	if o == nil || o.MaxRetry == nil {
		return nil, false
	}
	return o.MaxRetry, true
}

// HasMaxRetry returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasMaxRetry() bool {
	if o != nil && o.MaxRetry != nil {
		return true
	}

	return false
}

// SetMaxRetry gets a reference to the given int64 and assigns it to the MaxRetry field.
func (o *InlineResponse20079LoadBalancerMonitor) SetMaxRetry(v int64) {
	o.MaxRetry = &v
}

// GetFallCount returns the FallCount field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetFallCount() int64 {
	if o == nil || o.FallCount == nil {
		var ret int64
		return ret
	}
	return *o.FallCount
}

// GetFallCountOk returns a tuple with the FallCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetFallCountOk() (*int64, bool) {
	if o == nil || o.FallCount == nil {
		return nil, false
	}
	return o.FallCount, true
}

// HasFallCount returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasFallCount() bool {
	if o != nil && o.FallCount != nil {
		return true
	}

	return false
}

// SetFallCount gets a reference to the given int64 and assigns it to the FallCount field.
func (o *InlineResponse20079LoadBalancerMonitor) SetFallCount(v int64) {
	o.FallCount = &v
}

// GetRiseCount returns the RiseCount field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetRiseCount() int64 {
	if o == nil || o.RiseCount == nil {
		var ret int64
		return ret
	}
	return *o.RiseCount
}

// GetRiseCountOk returns a tuple with the RiseCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetRiseCountOk() (*int64, bool) {
	if o == nil || o.RiseCount == nil {
		return nil, false
	}
	return o.RiseCount, true
}

// HasRiseCount returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasRiseCount() bool {
	if o != nil && o.RiseCount != nil {
		return true
	}

	return false
}

// SetRiseCount gets a reference to the given int64 and assigns it to the RiseCount field.
func (o *InlineResponse20079LoadBalancerMonitor) SetRiseCount(v int64) {
	o.RiseCount = &v
}

// GetDataLength returns the DataLength field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20079LoadBalancerMonitor) GetDataLength() string {
	if o == nil || o.DataLength.Get() == nil {
		var ret string
		return ret
	}
	return *o.DataLength.Get()
}

// GetDataLengthOk returns a tuple with the DataLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20079LoadBalancerMonitor) GetDataLengthOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DataLength.Get(), o.DataLength.IsSet()
}

// HasDataLength returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasDataLength() bool {
	if o != nil && o.DataLength.IsSet() {
		return true
	}

	return false
}

// SetDataLength gets a reference to the given NullableString and assigns it to the DataLength field.
func (o *InlineResponse20079LoadBalancerMonitor) SetDataLength(v string) {
	o.DataLength.Set(&v)
}
// SetDataLengthNil sets the value for DataLength to be an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) SetDataLengthNil() {
	o.DataLength.Set(nil)
}

// UnsetDataLength ensures that no value is present for DataLength, not even an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) UnsetDataLength() {
	o.DataLength.Unset()
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetConfig() map[string]interface{} {
	if o == nil || o.Config == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetConfigOk() (*map[string]interface{}, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *InlineResponse20079LoadBalancerMonitor) SetConfig(v map[string]interface{}) {
	o.Config = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponse20079LoadBalancerMonitor) GetCreatedBy() string {
	if o == nil || o.CreatedBy.Get() == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy.Get()
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponse20079LoadBalancerMonitor) GetCreatedByOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatedBy.Get(), o.CreatedBy.IsSet()
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasCreatedBy() bool {
	if o != nil && o.CreatedBy.IsSet() {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given NullableString and assigns it to the CreatedBy field.
func (o *InlineResponse20079LoadBalancerMonitor) SetCreatedBy(v string) {
	o.CreatedBy.Set(&v)
}
// SetCreatedByNil sets the value for CreatedBy to be an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) SetCreatedByNil() {
	o.CreatedBy.Set(nil)
}

// UnsetCreatedBy ensures that no value is present for CreatedBy, not even an explicit nil
func (o *InlineResponse20079LoadBalancerMonitor) UnsetCreatedBy() {
	o.CreatedBy.Unset()
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetDateCreated() time.Time {
	if o == nil || o.DateCreated == nil {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *InlineResponse20079LoadBalancerMonitor) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *InlineResponse20079LoadBalancerMonitor) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079LoadBalancerMonitor) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *InlineResponse20079LoadBalancerMonitor) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *InlineResponse20079LoadBalancerMonitor) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

func (o InlineResponse20079LoadBalancerMonitor) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LoadBalancer != nil {
		toSerialize["loadBalancer"] = o.LoadBalancer
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	if o.Category.IsSet() {
		toSerialize["category"] = o.Category.Get()
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.MonitorType != nil {
		toSerialize["monitorType"] = o.MonitorType
	}
	if o.MonitorInterval != nil {
		toSerialize["monitorInterval"] = o.MonitorInterval
	}
	if o.MonitorTimeout != nil {
		toSerialize["monitorTimeout"] = o.MonitorTimeout
	}
	if o.SendData.IsSet() {
		toSerialize["sendData"] = o.SendData.Get()
	}
	if o.SendVersion != nil {
		toSerialize["sendVersion"] = o.SendVersion
	}
	if o.SendType != nil {
		toSerialize["sendType"] = o.SendType
	}
	if o.ReceiveData.IsSet() {
		toSerialize["receiveData"] = o.ReceiveData.Get()
	}
	if o.ReceiveCode != nil {
		toSerialize["receiveCode"] = o.ReceiveCode
	}
	if o.DisabledData.IsSet() {
		toSerialize["disabledData"] = o.DisabledData.Get()
	}
	if o.MonitorUsername.IsSet() {
		toSerialize["monitorUsername"] = o.MonitorUsername.Get()
	}
	if o.MonitorPassword.IsSet() {
		toSerialize["monitorPassword"] = o.MonitorPassword.Get()
	}
	if o.MonitorDestination != nil {
		toSerialize["monitorDestination"] = o.MonitorDestination
	}
	if o.MonitorReverse != nil {
		toSerialize["monitorReverse"] = o.MonitorReverse
	}
	if o.MonitorTransparent != nil {
		toSerialize["monitorTransparent"] = o.MonitorTransparent
	}
	if o.MonitorAdaptive != nil {
		toSerialize["monitorAdaptive"] = o.MonitorAdaptive
	}
	if o.AliasAddress.IsSet() {
		toSerialize["aliasAddress"] = o.AliasAddress.Get()
	}
	if o.AliasPort != nil {
		toSerialize["aliasPort"] = o.AliasPort
	}
	if o.InternalId != nil {
		toSerialize["internalId"] = o.InternalId
	}
	if o.ExternalId != nil {
		toSerialize["externalId"] = o.ExternalId
	}
	if o.MonitorSource != nil {
		toSerialize["monitorSource"] = o.MonitorSource
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StatusMessage.IsSet() {
		toSerialize["statusMessage"] = o.StatusMessage.Get()
	}
	if o.StatusDate.IsSet() {
		toSerialize["statusDate"] = o.StatusDate.Get()
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.MaxRetry != nil {
		toSerialize["maxRetry"] = o.MaxRetry
	}
	if o.FallCount != nil {
		toSerialize["fallCount"] = o.FallCount
	}
	if o.RiseCount != nil {
		toSerialize["riseCount"] = o.RiseCount
	}
	if o.DataLength.IsSet() {
		toSerialize["dataLength"] = o.DataLength.Get()
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.CreatedBy.IsSet() {
		toSerialize["createdBy"] = o.CreatedBy.Get()
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20079LoadBalancerMonitor struct {
	value *InlineResponse20079LoadBalancerMonitor
	isSet bool
}

func (v NullableInlineResponse20079LoadBalancerMonitor) Get() *InlineResponse20079LoadBalancerMonitor {
	return v.value
}

func (v *NullableInlineResponse20079LoadBalancerMonitor) Set(val *InlineResponse20079LoadBalancerMonitor) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20079LoadBalancerMonitor) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20079LoadBalancerMonitor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20079LoadBalancerMonitor(val *InlineResponse20079LoadBalancerMonitor) *NullableInlineResponse20079LoadBalancerMonitor {
	return &NullableInlineResponse20079LoadBalancerMonitor{value: val, isSet: true}
}

func (v NullableInlineResponse20079LoadBalancerMonitor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20079LoadBalancerMonitor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


