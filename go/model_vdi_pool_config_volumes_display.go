/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VdiPoolConfigVolumesDisplay struct for VdiPoolConfigVolumesDisplay
type VdiPoolConfigVolumesDisplay struct {
	Storage *string `json:"storage,omitempty"`
	Name *string `json:"name,omitempty"`
	Controller NullableString `json:"controller,omitempty"`
	Datastore *string `json:"datastore,omitempty"`
	DisplayOrder NullableString `json:"displayOrder,omitempty"`
	Size *int64 `json:"size,omitempty"`
	MountPoint NullableString `json:"mountPoint,omitempty"`
}

// NewVdiPoolConfigVolumesDisplay instantiates a new VdiPoolConfigVolumesDisplay object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVdiPoolConfigVolumesDisplay() *VdiPoolConfigVolumesDisplay {
	this := VdiPoolConfigVolumesDisplay{}
	return &this
}

// NewVdiPoolConfigVolumesDisplayWithDefaults instantiates a new VdiPoolConfigVolumesDisplay object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVdiPoolConfigVolumesDisplayWithDefaults() *VdiPoolConfigVolumesDisplay {
	this := VdiPoolConfigVolumesDisplay{}
	return &this
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *VdiPoolConfigVolumesDisplay) GetStorage() string {
	if o == nil || o.Storage == nil {
		var ret string
		return ret
	}
	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfigVolumesDisplay) GetStorageOk() (*string, bool) {
	if o == nil || o.Storage == nil {
		return nil, false
	}
	return o.Storage, true
}

// HasStorage returns a boolean if a field has been set.
func (o *VdiPoolConfigVolumesDisplay) HasStorage() bool {
	if o != nil && o.Storage != nil {
		return true
	}

	return false
}

// SetStorage gets a reference to the given string and assigns it to the Storage field.
func (o *VdiPoolConfigVolumesDisplay) SetStorage(v string) {
	o.Storage = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VdiPoolConfigVolumesDisplay) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfigVolumesDisplay) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VdiPoolConfigVolumesDisplay) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VdiPoolConfigVolumesDisplay) SetName(v string) {
	o.Name = &v
}

// GetController returns the Controller field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPoolConfigVolumesDisplay) GetController() string {
	if o == nil || o.Controller.Get() == nil {
		var ret string
		return ret
	}
	return *o.Controller.Get()
}

// GetControllerOk returns a tuple with the Controller field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPoolConfigVolumesDisplay) GetControllerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Controller.Get(), o.Controller.IsSet()
}

// HasController returns a boolean if a field has been set.
func (o *VdiPoolConfigVolumesDisplay) HasController() bool {
	if o != nil && o.Controller.IsSet() {
		return true
	}

	return false
}

// SetController gets a reference to the given NullableString and assigns it to the Controller field.
func (o *VdiPoolConfigVolumesDisplay) SetController(v string) {
	o.Controller.Set(&v)
}
// SetControllerNil sets the value for Controller to be an explicit nil
func (o *VdiPoolConfigVolumesDisplay) SetControllerNil() {
	o.Controller.Set(nil)
}

// UnsetController ensures that no value is present for Controller, not even an explicit nil
func (o *VdiPoolConfigVolumesDisplay) UnsetController() {
	o.Controller.Unset()
}

// GetDatastore returns the Datastore field value if set, zero value otherwise.
func (o *VdiPoolConfigVolumesDisplay) GetDatastore() string {
	if o == nil || o.Datastore == nil {
		var ret string
		return ret
	}
	return *o.Datastore
}

// GetDatastoreOk returns a tuple with the Datastore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfigVolumesDisplay) GetDatastoreOk() (*string, bool) {
	if o == nil || o.Datastore == nil {
		return nil, false
	}
	return o.Datastore, true
}

// HasDatastore returns a boolean if a field has been set.
func (o *VdiPoolConfigVolumesDisplay) HasDatastore() bool {
	if o != nil && o.Datastore != nil {
		return true
	}

	return false
}

// SetDatastore gets a reference to the given string and assigns it to the Datastore field.
func (o *VdiPoolConfigVolumesDisplay) SetDatastore(v string) {
	o.Datastore = &v
}

// GetDisplayOrder returns the DisplayOrder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPoolConfigVolumesDisplay) GetDisplayOrder() string {
	if o == nil || o.DisplayOrder.Get() == nil {
		var ret string
		return ret
	}
	return *o.DisplayOrder.Get()
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPoolConfigVolumesDisplay) GetDisplayOrderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayOrder.Get(), o.DisplayOrder.IsSet()
}

// HasDisplayOrder returns a boolean if a field has been set.
func (o *VdiPoolConfigVolumesDisplay) HasDisplayOrder() bool {
	if o != nil && o.DisplayOrder.IsSet() {
		return true
	}

	return false
}

// SetDisplayOrder gets a reference to the given NullableString and assigns it to the DisplayOrder field.
func (o *VdiPoolConfigVolumesDisplay) SetDisplayOrder(v string) {
	o.DisplayOrder.Set(&v)
}
// SetDisplayOrderNil sets the value for DisplayOrder to be an explicit nil
func (o *VdiPoolConfigVolumesDisplay) SetDisplayOrderNil() {
	o.DisplayOrder.Set(nil)
}

// UnsetDisplayOrder ensures that no value is present for DisplayOrder, not even an explicit nil
func (o *VdiPoolConfigVolumesDisplay) UnsetDisplayOrder() {
	o.DisplayOrder.Unset()
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *VdiPoolConfigVolumesDisplay) GetSize() int64 {
	if o == nil || o.Size == nil {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfigVolumesDisplay) GetSizeOk() (*int64, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *VdiPoolConfigVolumesDisplay) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *VdiPoolConfigVolumesDisplay) SetSize(v int64) {
	o.Size = &v
}

// GetMountPoint returns the MountPoint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPoolConfigVolumesDisplay) GetMountPoint() string {
	if o == nil || o.MountPoint.Get() == nil {
		var ret string
		return ret
	}
	return *o.MountPoint.Get()
}

// GetMountPointOk returns a tuple with the MountPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPoolConfigVolumesDisplay) GetMountPointOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MountPoint.Get(), o.MountPoint.IsSet()
}

// HasMountPoint returns a boolean if a field has been set.
func (o *VdiPoolConfigVolumesDisplay) HasMountPoint() bool {
	if o != nil && o.MountPoint.IsSet() {
		return true
	}

	return false
}

// SetMountPoint gets a reference to the given NullableString and assigns it to the MountPoint field.
func (o *VdiPoolConfigVolumesDisplay) SetMountPoint(v string) {
	o.MountPoint.Set(&v)
}
// SetMountPointNil sets the value for MountPoint to be an explicit nil
func (o *VdiPoolConfigVolumesDisplay) SetMountPointNil() {
	o.MountPoint.Set(nil)
}

// UnsetMountPoint ensures that no value is present for MountPoint, not even an explicit nil
func (o *VdiPoolConfigVolumesDisplay) UnsetMountPoint() {
	o.MountPoint.Unset()
}

func (o VdiPoolConfigVolumesDisplay) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Storage != nil {
		toSerialize["storage"] = o.Storage
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Controller.IsSet() {
		toSerialize["controller"] = o.Controller.Get()
	}
	if o.Datastore != nil {
		toSerialize["datastore"] = o.Datastore
	}
	if o.DisplayOrder.IsSet() {
		toSerialize["displayOrder"] = o.DisplayOrder.Get()
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.MountPoint.IsSet() {
		toSerialize["mountPoint"] = o.MountPoint.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableVdiPoolConfigVolumesDisplay struct {
	value *VdiPoolConfigVolumesDisplay
	isSet bool
}

func (v NullableVdiPoolConfigVolumesDisplay) Get() *VdiPoolConfigVolumesDisplay {
	return v.value
}

func (v *NullableVdiPoolConfigVolumesDisplay) Set(val *VdiPoolConfigVolumesDisplay) {
	v.value = val
	v.isSet = true
}

func (v NullableVdiPoolConfigVolumesDisplay) IsSet() bool {
	return v.isSet
}

func (v *NullableVdiPoolConfigVolumesDisplay) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVdiPoolConfigVolumesDisplay(val *VdiPoolConfigVolumesDisplay) *NullableVdiPoolConfigVolumesDisplay {
	return &NullableVdiPoolConfigVolumesDisplay{value: val, isSet: true}
}

func (v NullableVdiPoolConfigVolumesDisplay) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVdiPoolConfigVolumesDisplay) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


