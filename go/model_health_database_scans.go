/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// HealthDatabaseScans struct for HealthDatabaseScans
type HealthDatabaseScans struct {
	HandlerReadFirst *string `json:"Handler_read_first,omitempty"`
	HandlerReadKey *string `json:"Handler_read_key,omitempty"`
	HandlerReadLast *string `json:"Handler_read_last,omitempty"`
	HandlerReadNext *string `json:"Handler_read_next,omitempty"`
	HandlerReadPrev *string `json:"Handler_read_prev,omitempty"`
	HandlerReadRnd *string `json:"Handler_read_rnd,omitempty"`
	HandlerReadRndNext *string `json:"Handler_read_rnd_next,omitempty"`
}

// NewHealthDatabaseScans instantiates a new HealthDatabaseScans object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHealthDatabaseScans() *HealthDatabaseScans {
	this := HealthDatabaseScans{}
	return &this
}

// NewHealthDatabaseScansWithDefaults instantiates a new HealthDatabaseScans object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHealthDatabaseScansWithDefaults() *HealthDatabaseScans {
	this := HealthDatabaseScans{}
	return &this
}

// GetHandlerReadFirst returns the HandlerReadFirst field value if set, zero value otherwise.
func (o *HealthDatabaseScans) GetHandlerReadFirst() string {
	if o == nil || o.HandlerReadFirst == nil {
		var ret string
		return ret
	}
	return *o.HandlerReadFirst
}

// GetHandlerReadFirstOk returns a tuple with the HandlerReadFirst field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthDatabaseScans) GetHandlerReadFirstOk() (*string, bool) {
	if o == nil || o.HandlerReadFirst == nil {
		return nil, false
	}
	return o.HandlerReadFirst, true
}

// HasHandlerReadFirst returns a boolean if a field has been set.
func (o *HealthDatabaseScans) HasHandlerReadFirst() bool {
	if o != nil && o.HandlerReadFirst != nil {
		return true
	}

	return false
}

// SetHandlerReadFirst gets a reference to the given string and assigns it to the HandlerReadFirst field.
func (o *HealthDatabaseScans) SetHandlerReadFirst(v string) {
	o.HandlerReadFirst = &v
}

// GetHandlerReadKey returns the HandlerReadKey field value if set, zero value otherwise.
func (o *HealthDatabaseScans) GetHandlerReadKey() string {
	if o == nil || o.HandlerReadKey == nil {
		var ret string
		return ret
	}
	return *o.HandlerReadKey
}

// GetHandlerReadKeyOk returns a tuple with the HandlerReadKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthDatabaseScans) GetHandlerReadKeyOk() (*string, bool) {
	if o == nil || o.HandlerReadKey == nil {
		return nil, false
	}
	return o.HandlerReadKey, true
}

// HasHandlerReadKey returns a boolean if a field has been set.
func (o *HealthDatabaseScans) HasHandlerReadKey() bool {
	if o != nil && o.HandlerReadKey != nil {
		return true
	}

	return false
}

// SetHandlerReadKey gets a reference to the given string and assigns it to the HandlerReadKey field.
func (o *HealthDatabaseScans) SetHandlerReadKey(v string) {
	o.HandlerReadKey = &v
}

// GetHandlerReadLast returns the HandlerReadLast field value if set, zero value otherwise.
func (o *HealthDatabaseScans) GetHandlerReadLast() string {
	if o == nil || o.HandlerReadLast == nil {
		var ret string
		return ret
	}
	return *o.HandlerReadLast
}

// GetHandlerReadLastOk returns a tuple with the HandlerReadLast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthDatabaseScans) GetHandlerReadLastOk() (*string, bool) {
	if o == nil || o.HandlerReadLast == nil {
		return nil, false
	}
	return o.HandlerReadLast, true
}

// HasHandlerReadLast returns a boolean if a field has been set.
func (o *HealthDatabaseScans) HasHandlerReadLast() bool {
	if o != nil && o.HandlerReadLast != nil {
		return true
	}

	return false
}

// SetHandlerReadLast gets a reference to the given string and assigns it to the HandlerReadLast field.
func (o *HealthDatabaseScans) SetHandlerReadLast(v string) {
	o.HandlerReadLast = &v
}

// GetHandlerReadNext returns the HandlerReadNext field value if set, zero value otherwise.
func (o *HealthDatabaseScans) GetHandlerReadNext() string {
	if o == nil || o.HandlerReadNext == nil {
		var ret string
		return ret
	}
	return *o.HandlerReadNext
}

// GetHandlerReadNextOk returns a tuple with the HandlerReadNext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthDatabaseScans) GetHandlerReadNextOk() (*string, bool) {
	if o == nil || o.HandlerReadNext == nil {
		return nil, false
	}
	return o.HandlerReadNext, true
}

// HasHandlerReadNext returns a boolean if a field has been set.
func (o *HealthDatabaseScans) HasHandlerReadNext() bool {
	if o != nil && o.HandlerReadNext != nil {
		return true
	}

	return false
}

// SetHandlerReadNext gets a reference to the given string and assigns it to the HandlerReadNext field.
func (o *HealthDatabaseScans) SetHandlerReadNext(v string) {
	o.HandlerReadNext = &v
}

// GetHandlerReadPrev returns the HandlerReadPrev field value if set, zero value otherwise.
func (o *HealthDatabaseScans) GetHandlerReadPrev() string {
	if o == nil || o.HandlerReadPrev == nil {
		var ret string
		return ret
	}
	return *o.HandlerReadPrev
}

// GetHandlerReadPrevOk returns a tuple with the HandlerReadPrev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthDatabaseScans) GetHandlerReadPrevOk() (*string, bool) {
	if o == nil || o.HandlerReadPrev == nil {
		return nil, false
	}
	return o.HandlerReadPrev, true
}

// HasHandlerReadPrev returns a boolean if a field has been set.
func (o *HealthDatabaseScans) HasHandlerReadPrev() bool {
	if o != nil && o.HandlerReadPrev != nil {
		return true
	}

	return false
}

// SetHandlerReadPrev gets a reference to the given string and assigns it to the HandlerReadPrev field.
func (o *HealthDatabaseScans) SetHandlerReadPrev(v string) {
	o.HandlerReadPrev = &v
}

// GetHandlerReadRnd returns the HandlerReadRnd field value if set, zero value otherwise.
func (o *HealthDatabaseScans) GetHandlerReadRnd() string {
	if o == nil || o.HandlerReadRnd == nil {
		var ret string
		return ret
	}
	return *o.HandlerReadRnd
}

// GetHandlerReadRndOk returns a tuple with the HandlerReadRnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthDatabaseScans) GetHandlerReadRndOk() (*string, bool) {
	if o == nil || o.HandlerReadRnd == nil {
		return nil, false
	}
	return o.HandlerReadRnd, true
}

// HasHandlerReadRnd returns a boolean if a field has been set.
func (o *HealthDatabaseScans) HasHandlerReadRnd() bool {
	if o != nil && o.HandlerReadRnd != nil {
		return true
	}

	return false
}

// SetHandlerReadRnd gets a reference to the given string and assigns it to the HandlerReadRnd field.
func (o *HealthDatabaseScans) SetHandlerReadRnd(v string) {
	o.HandlerReadRnd = &v
}

// GetHandlerReadRndNext returns the HandlerReadRndNext field value if set, zero value otherwise.
func (o *HealthDatabaseScans) GetHandlerReadRndNext() string {
	if o == nil || o.HandlerReadRndNext == nil {
		var ret string
		return ret
	}
	return *o.HandlerReadRndNext
}

// GetHandlerReadRndNextOk returns a tuple with the HandlerReadRndNext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthDatabaseScans) GetHandlerReadRndNextOk() (*string, bool) {
	if o == nil || o.HandlerReadRndNext == nil {
		return nil, false
	}
	return o.HandlerReadRndNext, true
}

// HasHandlerReadRndNext returns a boolean if a field has been set.
func (o *HealthDatabaseScans) HasHandlerReadRndNext() bool {
	if o != nil && o.HandlerReadRndNext != nil {
		return true
	}

	return false
}

// SetHandlerReadRndNext gets a reference to the given string and assigns it to the HandlerReadRndNext field.
func (o *HealthDatabaseScans) SetHandlerReadRndNext(v string) {
	o.HandlerReadRndNext = &v
}

func (o HealthDatabaseScans) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HandlerReadFirst != nil {
		toSerialize["Handler_read_first"] = o.HandlerReadFirst
	}
	if o.HandlerReadKey != nil {
		toSerialize["Handler_read_key"] = o.HandlerReadKey
	}
	if o.HandlerReadLast != nil {
		toSerialize["Handler_read_last"] = o.HandlerReadLast
	}
	if o.HandlerReadNext != nil {
		toSerialize["Handler_read_next"] = o.HandlerReadNext
	}
	if o.HandlerReadPrev != nil {
		toSerialize["Handler_read_prev"] = o.HandlerReadPrev
	}
	if o.HandlerReadRnd != nil {
		toSerialize["Handler_read_rnd"] = o.HandlerReadRnd
	}
	if o.HandlerReadRndNext != nil {
		toSerialize["Handler_read_rnd_next"] = o.HandlerReadRndNext
	}
	return json.Marshal(toSerialize)
}

type NullableHealthDatabaseScans struct {
	value *HealthDatabaseScans
	isSet bool
}

func (v NullableHealthDatabaseScans) Get() *HealthDatabaseScans {
	return v.value
}

func (v *NullableHealthDatabaseScans) Set(val *HealthDatabaseScans) {
	v.value = val
	v.isSet = true
}

func (v NullableHealthDatabaseScans) IsSet() bool {
	return v.isSet
}

func (v *NullableHealthDatabaseScans) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHealthDatabaseScans(val *HealthDatabaseScans) *NullableHealthDatabaseScans {
	return &NullableHealthDatabaseScans{value: val, isSet: true}
}

func (v NullableHealthDatabaseScans) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHealthDatabaseScans) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


