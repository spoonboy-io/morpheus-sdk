/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiHealthAlarmsIdAcknowledgeAlarm struct for ApiHealthAlarmsIdAcknowledgeAlarm
type ApiHealthAlarmsIdAcknowledgeAlarm struct {
	// Pass `true` to ackowledge an alarm, or pass `false` to unacknowledge it.
	Acknowledged bool `json:"acknowledged"`
}

// NewApiHealthAlarmsIdAcknowledgeAlarm instantiates a new ApiHealthAlarmsIdAcknowledgeAlarm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiHealthAlarmsIdAcknowledgeAlarm(acknowledged bool, ) *ApiHealthAlarmsIdAcknowledgeAlarm {
	this := ApiHealthAlarmsIdAcknowledgeAlarm{}
	this.Acknowledged = acknowledged
	return &this
}

// NewApiHealthAlarmsIdAcknowledgeAlarmWithDefaults instantiates a new ApiHealthAlarmsIdAcknowledgeAlarm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiHealthAlarmsIdAcknowledgeAlarmWithDefaults() *ApiHealthAlarmsIdAcknowledgeAlarm {
	this := ApiHealthAlarmsIdAcknowledgeAlarm{}
	return &this
}

// GetAcknowledged returns the Acknowledged field value
func (o *ApiHealthAlarmsIdAcknowledgeAlarm) GetAcknowledged() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.Acknowledged
}

// GetAcknowledgedOk returns a tuple with the Acknowledged field value
// and a boolean to check if the value has been set.
func (o *ApiHealthAlarmsIdAcknowledgeAlarm) GetAcknowledgedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Acknowledged, true
}

// SetAcknowledged sets field value
func (o *ApiHealthAlarmsIdAcknowledgeAlarm) SetAcknowledged(v bool) {
	o.Acknowledged = v
}

func (o ApiHealthAlarmsIdAcknowledgeAlarm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["acknowledged"] = o.Acknowledged
	}
	return json.Marshal(toSerialize)
}

type NullableApiHealthAlarmsIdAcknowledgeAlarm struct {
	value *ApiHealthAlarmsIdAcknowledgeAlarm
	isSet bool
}

func (v NullableApiHealthAlarmsIdAcknowledgeAlarm) Get() *ApiHealthAlarmsIdAcknowledgeAlarm {
	return v.value
}

func (v *NullableApiHealthAlarmsIdAcknowledgeAlarm) Set(val *ApiHealthAlarmsIdAcknowledgeAlarm) {
	v.value = val
	v.isSet = true
}

func (v NullableApiHealthAlarmsIdAcknowledgeAlarm) IsSet() bool {
	return v.isSet
}

func (v *NullableApiHealthAlarmsIdAcknowledgeAlarm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiHealthAlarmsIdAcknowledgeAlarm(val *ApiHealthAlarmsIdAcknowledgeAlarm) *NullableApiHealthAlarmsIdAcknowledgeAlarm {
	return &NullableApiHealthAlarmsIdAcknowledgeAlarm{value: val, isSet: true}
}

func (v NullableApiHealthAlarmsIdAcknowledgeAlarm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiHealthAlarmsIdAcknowledgeAlarm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


