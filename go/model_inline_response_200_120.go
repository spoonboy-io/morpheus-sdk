/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200120 struct for InlineResponse200120
type InlineResponse200120 struct {
	NetworkPoolServer *NetworkPoolServer `json:"networkPoolServer,omitempty"`
}

// NewInlineResponse200120 instantiates a new InlineResponse200120 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200120() *InlineResponse200120 {
	this := InlineResponse200120{}
	return &this
}

// NewInlineResponse200120WithDefaults instantiates a new InlineResponse200120 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200120WithDefaults() *InlineResponse200120 {
	this := InlineResponse200120{}
	return &this
}

// GetNetworkPoolServer returns the NetworkPoolServer field value if set, zero value otherwise.
func (o *InlineResponse200120) GetNetworkPoolServer() NetworkPoolServer {
	if o == nil || o.NetworkPoolServer == nil {
		var ret NetworkPoolServer
		return ret
	}
	return *o.NetworkPoolServer
}

// GetNetworkPoolServerOk returns a tuple with the NetworkPoolServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200120) GetNetworkPoolServerOk() (*NetworkPoolServer, bool) {
	if o == nil || o.NetworkPoolServer == nil {
		return nil, false
	}
	return o.NetworkPoolServer, true
}

// HasNetworkPoolServer returns a boolean if a field has been set.
func (o *InlineResponse200120) HasNetworkPoolServer() bool {
	if o != nil && o.NetworkPoolServer != nil {
		return true
	}

	return false
}

// SetNetworkPoolServer gets a reference to the given NetworkPoolServer and assigns it to the NetworkPoolServer field.
func (o *InlineResponse200120) SetNetworkPoolServer(v NetworkPoolServer) {
	o.NetworkPoolServer = &v
}

func (o InlineResponse200120) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkPoolServer != nil {
		toSerialize["networkPoolServer"] = o.NetworkPoolServer
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200120 struct {
	value *InlineResponse200120
	isSet bool
}

func (v NullableInlineResponse200120) Get() *InlineResponse200120 {
	return v.value
}

func (v *NullableInlineResponse200120) Set(val *InlineResponse200120) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200120) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200120) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200120(val *InlineResponse200120) *NullableInlineResponse200120 {
	return &NullableInlineResponse200120{value: val, isSet: true}
}

func (v NullableInlineResponse200120) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200120) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


