/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject91 struct for InlineObject91
type InlineObject91 struct {
	// Template Parameter object. A map of key-value pairs that correspond to the template variables i.e. tfvars
	TemplateParameter *map[string]interface{} `json:"templateParameter,omitempty"`
}

// NewInlineObject91 instantiates a new InlineObject91 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject91() *InlineObject91 {
	this := InlineObject91{}
	return &this
}

// NewInlineObject91WithDefaults instantiates a new InlineObject91 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject91WithDefaults() *InlineObject91 {
	this := InlineObject91{}
	return &this
}

// GetTemplateParameter returns the TemplateParameter field value if set, zero value otherwise.
func (o *InlineObject91) GetTemplateParameter() map[string]interface{} {
	if o == nil || o.TemplateParameter == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.TemplateParameter
}

// GetTemplateParameterOk returns a tuple with the TemplateParameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject91) GetTemplateParameterOk() (*map[string]interface{}, bool) {
	if o == nil || o.TemplateParameter == nil {
		return nil, false
	}
	return o.TemplateParameter, true
}

// HasTemplateParameter returns a boolean if a field has been set.
func (o *InlineObject91) HasTemplateParameter() bool {
	if o != nil && o.TemplateParameter != nil {
		return true
	}

	return false
}

// SetTemplateParameter gets a reference to the given map[string]interface{} and assigns it to the TemplateParameter field.
func (o *InlineObject91) SetTemplateParameter(v map[string]interface{}) {
	o.TemplateParameter = &v
}

func (o InlineObject91) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TemplateParameter != nil {
		toSerialize["templateParameter"] = o.TemplateParameter
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject91 struct {
	value *InlineObject91
	isSet bool
}

func (v NullableInlineObject91) Get() *InlineObject91 {
	return v.value
}

func (v *NullableInlineObject91) Set(val *InlineObject91) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject91) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject91) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject91(val *InlineObject91) *NullableInlineObject91 {
	return &NullableInlineObject91{value: val, isSet: true}
}

func (v NullableInlineObject91) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject91) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


