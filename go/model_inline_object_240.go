/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject240 struct for InlineObject240
type InlineObject240 struct {
	Group ApiAccountsAccountIdGroupsGroup `json:"group"`
}

// NewInlineObject240 instantiates a new InlineObject240 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject240(group ApiAccountsAccountIdGroupsGroup, ) *InlineObject240 {
	this := InlineObject240{}
	this.Group = group
	return &this
}

// NewInlineObject240WithDefaults instantiates a new InlineObject240 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject240WithDefaults() *InlineObject240 {
	this := InlineObject240{}
	return &this
}

// GetGroup returns the Group field value
func (o *InlineObject240) GetGroup() ApiAccountsAccountIdGroupsGroup {
	if o == nil  {
		var ret ApiAccountsAccountIdGroupsGroup
		return ret
	}

	return o.Group
}

// GetGroupOk returns a tuple with the Group field value
// and a boolean to check if the value has been set.
func (o *InlineObject240) GetGroupOk() (*ApiAccountsAccountIdGroupsGroup, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Group, true
}

// SetGroup sets field value
func (o *InlineObject240) SetGroup(v ApiAccountsAccountIdGroupsGroup) {
	o.Group = v
}

func (o InlineObject240) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["group"] = o.Group
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject240 struct {
	value *InlineObject240
	isSet bool
}

func (v NullableInlineObject240) Get() *InlineObject240 {
	return v.value
}

func (v *NullableInlineObject240) Set(val *InlineObject240) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject240) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject240) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject240(val *InlineObject240) *NullableInlineObject240 {
	return &NullableInlineObject240{value: val, isSet: true}
}

func (v NullableInlineObject240) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject240) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


