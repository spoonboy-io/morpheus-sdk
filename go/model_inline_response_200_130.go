/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200130 struct for InlineResponse200130
type InlineResponse200130 struct {
	ReportResult *Report `json:"reportResult,omitempty"`
}

// NewInlineResponse200130 instantiates a new InlineResponse200130 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200130() *InlineResponse200130 {
	this := InlineResponse200130{}
	return &this
}

// NewInlineResponse200130WithDefaults instantiates a new InlineResponse200130 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200130WithDefaults() *InlineResponse200130 {
	this := InlineResponse200130{}
	return &this
}

// GetReportResult returns the ReportResult field value if set, zero value otherwise.
func (o *InlineResponse200130) GetReportResult() Report {
	if o == nil || o.ReportResult == nil {
		var ret Report
		return ret
	}
	return *o.ReportResult
}

// GetReportResultOk returns a tuple with the ReportResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200130) GetReportResultOk() (*Report, bool) {
	if o == nil || o.ReportResult == nil {
		return nil, false
	}
	return o.ReportResult, true
}

// HasReportResult returns a boolean if a field has been set.
func (o *InlineResponse200130) HasReportResult() bool {
	if o != nil && o.ReportResult != nil {
		return true
	}

	return false
}

// SetReportResult gets a reference to the given Report and assigns it to the ReportResult field.
func (o *InlineResponse200130) SetReportResult(v Report) {
	o.ReportResult = &v
}

func (o InlineResponse200130) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ReportResult != nil {
		toSerialize["reportResult"] = o.ReportResult
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200130 struct {
	value *InlineResponse200130
	isSet bool
}

func (v NullableInlineResponse200130) Get() *InlineResponse200130 {
	return v.value
}

func (v *NullableInlineResponse200130) Set(val *InlineResponse200130) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200130) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200130) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200130(val *InlineResponse200130) *NullableInlineResponse200130 {
	return &NullableInlineResponse200130{value: val, isSet: true}
}

func (v NullableInlineResponse200130) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200130) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


