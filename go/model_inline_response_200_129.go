/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse200129 struct for InlineResponse200129
type InlineResponse200129 struct {
	ReportTypes *[]map[string]interface{} `json:"reportTypes,omitempty"`
}

// NewInlineResponse200129 instantiates a new InlineResponse200129 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200129() *InlineResponse200129 {
	this := InlineResponse200129{}
	return &this
}

// NewInlineResponse200129WithDefaults instantiates a new InlineResponse200129 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200129WithDefaults() *InlineResponse200129 {
	this := InlineResponse200129{}
	return &this
}

// GetReportTypes returns the ReportTypes field value if set, zero value otherwise.
func (o *InlineResponse200129) GetReportTypes() []map[string]interface{} {
	if o == nil || o.ReportTypes == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.ReportTypes
}

// GetReportTypesOk returns a tuple with the ReportTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200129) GetReportTypesOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.ReportTypes == nil {
		return nil, false
	}
	return o.ReportTypes, true
}

// HasReportTypes returns a boolean if a field has been set.
func (o *InlineResponse200129) HasReportTypes() bool {
	if o != nil && o.ReportTypes != nil {
		return true
	}

	return false
}

// SetReportTypes gets a reference to the given []map[string]interface{} and assigns it to the ReportTypes field.
func (o *InlineResponse200129) SetReportTypes(v []map[string]interface{}) {
	o.ReportTypes = &v
}

func (o InlineResponse200129) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ReportTypes != nil {
		toSerialize["reportTypes"] = o.ReportTypes
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200129 struct {
	value *InlineResponse200129
	isSet bool
}

func (v NullableInlineResponse200129) Get() *InlineResponse200129 {
	return v.value
}

func (v *NullableInlineResponse200129) Set(val *InlineResponse200129) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200129) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200129) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200129(val *InlineResponse200129) *NullableInlineResponse200129 {
	return &NullableInlineResponse200129{value: val, isSet: true}
}

func (v NullableInlineResponse200129) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200129) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


