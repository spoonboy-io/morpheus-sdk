/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CheckWebConfig struct for CheckWebConfig
type CheckWebConfig struct {
	// HTTP method to use for testing
	WebMethod string `json:"webMethod"`
	// Web URL you wish to use to run a check on
	WebUrl string `json:"webUrl"`
	// Ignore SSL Errors
	IgnoreSSL *bool `json:"ignoreSSL,omitempty"`
	// If you want to use HTTP Basic Authentication, populate this field with the username
	CheckUser *string `json:"checkUser,omitempty"`
	// If you want to use HTTP basic Authentication, populate this field with the password
	CheckPassword *string `json:"checkPassword,omitempty"`
	// Set value to `on` if you want to turn on text matching
	TextCheckOn *string `json:"textCheckOn,omitempty"`
	// Set the string you want to look for in the page source
	WebTextMatch *string `json:"webTextMatch,omitempty"`
	// Set to on to turn on tunneling
	TunnelOn *string `json:"tunnelOn,omitempty"`
	// Hostname or IP address of the proxy host
	SshHost *string `json:"sshHost,omitempty"`
	// Port for SSH on the proxy host, defaults to 22
	SshPort *int64 `json:"sshPort,omitempty"`
	// SSH user on the proxy host to login as
	SshUser *string `json:"sshUser,omitempty"`
	// Password for user, if not using key based authentication
	SshPassword *string `json:"sshPassword,omitempty"`
}

// NewCheckWebConfig instantiates a new CheckWebConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckWebConfig(webMethod string, webUrl string, ) *CheckWebConfig {
	this := CheckWebConfig{}
	this.WebMethod = webMethod
	this.WebUrl = webUrl
	var ignoreSSL bool = false
	this.IgnoreSSL = &ignoreSSL
	return &this
}

// NewCheckWebConfigWithDefaults instantiates a new CheckWebConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckWebConfigWithDefaults() *CheckWebConfig {
	this := CheckWebConfig{}
	var ignoreSSL bool = false
	this.IgnoreSSL = &ignoreSSL
	return &this
}

// GetWebMethod returns the WebMethod field value
func (o *CheckWebConfig) GetWebMethod() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.WebMethod
}

// GetWebMethodOk returns a tuple with the WebMethod field value
// and a boolean to check if the value has been set.
func (o *CheckWebConfig) GetWebMethodOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WebMethod, true
}

// SetWebMethod sets field value
func (o *CheckWebConfig) SetWebMethod(v string) {
	o.WebMethod = v
}

// GetWebUrl returns the WebUrl field value
func (o *CheckWebConfig) GetWebUrl() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.WebUrl
}

// GetWebUrlOk returns a tuple with the WebUrl field value
// and a boolean to check if the value has been set.
func (o *CheckWebConfig) GetWebUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WebUrl, true
}

// SetWebUrl sets field value
func (o *CheckWebConfig) SetWebUrl(v string) {
	o.WebUrl = v
}

// GetIgnoreSSL returns the IgnoreSSL field value if set, zero value otherwise.
func (o *CheckWebConfig) GetIgnoreSSL() bool {
	if o == nil || o.IgnoreSSL == nil {
		var ret bool
		return ret
	}
	return *o.IgnoreSSL
}

// GetIgnoreSSLOk returns a tuple with the IgnoreSSL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckWebConfig) GetIgnoreSSLOk() (*bool, bool) {
	if o == nil || o.IgnoreSSL == nil {
		return nil, false
	}
	return o.IgnoreSSL, true
}

// HasIgnoreSSL returns a boolean if a field has been set.
func (o *CheckWebConfig) HasIgnoreSSL() bool {
	if o != nil && o.IgnoreSSL != nil {
		return true
	}

	return false
}

// SetIgnoreSSL gets a reference to the given bool and assigns it to the IgnoreSSL field.
func (o *CheckWebConfig) SetIgnoreSSL(v bool) {
	o.IgnoreSSL = &v
}

// GetCheckUser returns the CheckUser field value if set, zero value otherwise.
func (o *CheckWebConfig) GetCheckUser() string {
	if o == nil || o.CheckUser == nil {
		var ret string
		return ret
	}
	return *o.CheckUser
}

// GetCheckUserOk returns a tuple with the CheckUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckWebConfig) GetCheckUserOk() (*string, bool) {
	if o == nil || o.CheckUser == nil {
		return nil, false
	}
	return o.CheckUser, true
}

// HasCheckUser returns a boolean if a field has been set.
func (o *CheckWebConfig) HasCheckUser() bool {
	if o != nil && o.CheckUser != nil {
		return true
	}

	return false
}

// SetCheckUser gets a reference to the given string and assigns it to the CheckUser field.
func (o *CheckWebConfig) SetCheckUser(v string) {
	o.CheckUser = &v
}

// GetCheckPassword returns the CheckPassword field value if set, zero value otherwise.
func (o *CheckWebConfig) GetCheckPassword() string {
	if o == nil || o.CheckPassword == nil {
		var ret string
		return ret
	}
	return *o.CheckPassword
}

// GetCheckPasswordOk returns a tuple with the CheckPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckWebConfig) GetCheckPasswordOk() (*string, bool) {
	if o == nil || o.CheckPassword == nil {
		return nil, false
	}
	return o.CheckPassword, true
}

// HasCheckPassword returns a boolean if a field has been set.
func (o *CheckWebConfig) HasCheckPassword() bool {
	if o != nil && o.CheckPassword != nil {
		return true
	}

	return false
}

// SetCheckPassword gets a reference to the given string and assigns it to the CheckPassword field.
func (o *CheckWebConfig) SetCheckPassword(v string) {
	o.CheckPassword = &v
}

// GetTextCheckOn returns the TextCheckOn field value if set, zero value otherwise.
func (o *CheckWebConfig) GetTextCheckOn() string {
	if o == nil || o.TextCheckOn == nil {
		var ret string
		return ret
	}
	return *o.TextCheckOn
}

// GetTextCheckOnOk returns a tuple with the TextCheckOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckWebConfig) GetTextCheckOnOk() (*string, bool) {
	if o == nil || o.TextCheckOn == nil {
		return nil, false
	}
	return o.TextCheckOn, true
}

// HasTextCheckOn returns a boolean if a field has been set.
func (o *CheckWebConfig) HasTextCheckOn() bool {
	if o != nil && o.TextCheckOn != nil {
		return true
	}

	return false
}

// SetTextCheckOn gets a reference to the given string and assigns it to the TextCheckOn field.
func (o *CheckWebConfig) SetTextCheckOn(v string) {
	o.TextCheckOn = &v
}

// GetWebTextMatch returns the WebTextMatch field value if set, zero value otherwise.
func (o *CheckWebConfig) GetWebTextMatch() string {
	if o == nil || o.WebTextMatch == nil {
		var ret string
		return ret
	}
	return *o.WebTextMatch
}

// GetWebTextMatchOk returns a tuple with the WebTextMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckWebConfig) GetWebTextMatchOk() (*string, bool) {
	if o == nil || o.WebTextMatch == nil {
		return nil, false
	}
	return o.WebTextMatch, true
}

// HasWebTextMatch returns a boolean if a field has been set.
func (o *CheckWebConfig) HasWebTextMatch() bool {
	if o != nil && o.WebTextMatch != nil {
		return true
	}

	return false
}

// SetWebTextMatch gets a reference to the given string and assigns it to the WebTextMatch field.
func (o *CheckWebConfig) SetWebTextMatch(v string) {
	o.WebTextMatch = &v
}

// GetTunnelOn returns the TunnelOn field value if set, zero value otherwise.
func (o *CheckWebConfig) GetTunnelOn() string {
	if o == nil || o.TunnelOn == nil {
		var ret string
		return ret
	}
	return *o.TunnelOn
}

// GetTunnelOnOk returns a tuple with the TunnelOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckWebConfig) GetTunnelOnOk() (*string, bool) {
	if o == nil || o.TunnelOn == nil {
		return nil, false
	}
	return o.TunnelOn, true
}

// HasTunnelOn returns a boolean if a field has been set.
func (o *CheckWebConfig) HasTunnelOn() bool {
	if o != nil && o.TunnelOn != nil {
		return true
	}

	return false
}

// SetTunnelOn gets a reference to the given string and assigns it to the TunnelOn field.
func (o *CheckWebConfig) SetTunnelOn(v string) {
	o.TunnelOn = &v
}

// GetSshHost returns the SshHost field value if set, zero value otherwise.
func (o *CheckWebConfig) GetSshHost() string {
	if o == nil || o.SshHost == nil {
		var ret string
		return ret
	}
	return *o.SshHost
}

// GetSshHostOk returns a tuple with the SshHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckWebConfig) GetSshHostOk() (*string, bool) {
	if o == nil || o.SshHost == nil {
		return nil, false
	}
	return o.SshHost, true
}

// HasSshHost returns a boolean if a field has been set.
func (o *CheckWebConfig) HasSshHost() bool {
	if o != nil && o.SshHost != nil {
		return true
	}

	return false
}

// SetSshHost gets a reference to the given string and assigns it to the SshHost field.
func (o *CheckWebConfig) SetSshHost(v string) {
	o.SshHost = &v
}

// GetSshPort returns the SshPort field value if set, zero value otherwise.
func (o *CheckWebConfig) GetSshPort() int64 {
	if o == nil || o.SshPort == nil {
		var ret int64
		return ret
	}
	return *o.SshPort
}

// GetSshPortOk returns a tuple with the SshPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckWebConfig) GetSshPortOk() (*int64, bool) {
	if o == nil || o.SshPort == nil {
		return nil, false
	}
	return o.SshPort, true
}

// HasSshPort returns a boolean if a field has been set.
func (o *CheckWebConfig) HasSshPort() bool {
	if o != nil && o.SshPort != nil {
		return true
	}

	return false
}

// SetSshPort gets a reference to the given int64 and assigns it to the SshPort field.
func (o *CheckWebConfig) SetSshPort(v int64) {
	o.SshPort = &v
}

// GetSshUser returns the SshUser field value if set, zero value otherwise.
func (o *CheckWebConfig) GetSshUser() string {
	if o == nil || o.SshUser == nil {
		var ret string
		return ret
	}
	return *o.SshUser
}

// GetSshUserOk returns a tuple with the SshUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckWebConfig) GetSshUserOk() (*string, bool) {
	if o == nil || o.SshUser == nil {
		return nil, false
	}
	return o.SshUser, true
}

// HasSshUser returns a boolean if a field has been set.
func (o *CheckWebConfig) HasSshUser() bool {
	if o != nil && o.SshUser != nil {
		return true
	}

	return false
}

// SetSshUser gets a reference to the given string and assigns it to the SshUser field.
func (o *CheckWebConfig) SetSshUser(v string) {
	o.SshUser = &v
}

// GetSshPassword returns the SshPassword field value if set, zero value otherwise.
func (o *CheckWebConfig) GetSshPassword() string {
	if o == nil || o.SshPassword == nil {
		var ret string
		return ret
	}
	return *o.SshPassword
}

// GetSshPasswordOk returns a tuple with the SshPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckWebConfig) GetSshPasswordOk() (*string, bool) {
	if o == nil || o.SshPassword == nil {
		return nil, false
	}
	return o.SshPassword, true
}

// HasSshPassword returns a boolean if a field has been set.
func (o *CheckWebConfig) HasSshPassword() bool {
	if o != nil && o.SshPassword != nil {
		return true
	}

	return false
}

// SetSshPassword gets a reference to the given string and assigns it to the SshPassword field.
func (o *CheckWebConfig) SetSshPassword(v string) {
	o.SshPassword = &v
}

func (o CheckWebConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["webMethod"] = o.WebMethod
	}
	if true {
		toSerialize["webUrl"] = o.WebUrl
	}
	if o.IgnoreSSL != nil {
		toSerialize["ignoreSSL"] = o.IgnoreSSL
	}
	if o.CheckUser != nil {
		toSerialize["checkUser"] = o.CheckUser
	}
	if o.CheckPassword != nil {
		toSerialize["checkPassword"] = o.CheckPassword
	}
	if o.TextCheckOn != nil {
		toSerialize["textCheckOn"] = o.TextCheckOn
	}
	if o.WebTextMatch != nil {
		toSerialize["webTextMatch"] = o.WebTextMatch
	}
	if o.TunnelOn != nil {
		toSerialize["tunnelOn"] = o.TunnelOn
	}
	if o.SshHost != nil {
		toSerialize["sshHost"] = o.SshHost
	}
	if o.SshPort != nil {
		toSerialize["sshPort"] = o.SshPort
	}
	if o.SshUser != nil {
		toSerialize["sshUser"] = o.SshUser
	}
	if o.SshPassword != nil {
		toSerialize["sshPassword"] = o.SshPassword
	}
	return json.Marshal(toSerialize)
}

type NullableCheckWebConfig struct {
	value *CheckWebConfig
	isSet bool
}

func (v NullableCheckWebConfig) Get() *CheckWebConfig {
	return v.value
}

func (v *NullableCheckWebConfig) Set(val *CheckWebConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckWebConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckWebConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckWebConfig(val *CheckWebConfig) *NullableCheckWebConfig {
	return &NullableCheckWebConfig{value: val, isSet: true}
}

func (v NullableCheckWebConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckWebConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


