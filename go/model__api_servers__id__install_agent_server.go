/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ApiServersIdInstallAgentServer Object containing server configuration parameters
type ApiServersIdInstallAgentServer struct {
	// SSH username to use when provisioning
	SshUsername *string `json:"sshUsername,omitempty"`
	// SSH password to use, if not specified the account public key can be used
	SshPassword *string `json:"sshPassword,omitempty"`
	ServerOs *ApiServersIdInstallAgentServerServerOs `json:"serverOs,omitempty"`
}

// NewApiServersIdInstallAgentServer instantiates a new ApiServersIdInstallAgentServer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiServersIdInstallAgentServer() *ApiServersIdInstallAgentServer {
	this := ApiServersIdInstallAgentServer{}
	return &this
}

// NewApiServersIdInstallAgentServerWithDefaults instantiates a new ApiServersIdInstallAgentServer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiServersIdInstallAgentServerWithDefaults() *ApiServersIdInstallAgentServer {
	this := ApiServersIdInstallAgentServer{}
	return &this
}

// GetSshUsername returns the SshUsername field value if set, zero value otherwise.
func (o *ApiServersIdInstallAgentServer) GetSshUsername() string {
	if o == nil || o.SshUsername == nil {
		var ret string
		return ret
	}
	return *o.SshUsername
}

// GetSshUsernameOk returns a tuple with the SshUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServersIdInstallAgentServer) GetSshUsernameOk() (*string, bool) {
	if o == nil || o.SshUsername == nil {
		return nil, false
	}
	return o.SshUsername, true
}

// HasSshUsername returns a boolean if a field has been set.
func (o *ApiServersIdInstallAgentServer) HasSshUsername() bool {
	if o != nil && o.SshUsername != nil {
		return true
	}

	return false
}

// SetSshUsername gets a reference to the given string and assigns it to the SshUsername field.
func (o *ApiServersIdInstallAgentServer) SetSshUsername(v string) {
	o.SshUsername = &v
}

// GetSshPassword returns the SshPassword field value if set, zero value otherwise.
func (o *ApiServersIdInstallAgentServer) GetSshPassword() string {
	if o == nil || o.SshPassword == nil {
		var ret string
		return ret
	}
	return *o.SshPassword
}

// GetSshPasswordOk returns a tuple with the SshPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServersIdInstallAgentServer) GetSshPasswordOk() (*string, bool) {
	if o == nil || o.SshPassword == nil {
		return nil, false
	}
	return o.SshPassword, true
}

// HasSshPassword returns a boolean if a field has been set.
func (o *ApiServersIdInstallAgentServer) HasSshPassword() bool {
	if o != nil && o.SshPassword != nil {
		return true
	}

	return false
}

// SetSshPassword gets a reference to the given string and assigns it to the SshPassword field.
func (o *ApiServersIdInstallAgentServer) SetSshPassword(v string) {
	o.SshPassword = &v
}

// GetServerOs returns the ServerOs field value if set, zero value otherwise.
func (o *ApiServersIdInstallAgentServer) GetServerOs() ApiServersIdInstallAgentServerServerOs {
	if o == nil || o.ServerOs == nil {
		var ret ApiServersIdInstallAgentServerServerOs
		return ret
	}
	return *o.ServerOs
}

// GetServerOsOk returns a tuple with the ServerOs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiServersIdInstallAgentServer) GetServerOsOk() (*ApiServersIdInstallAgentServerServerOs, bool) {
	if o == nil || o.ServerOs == nil {
		return nil, false
	}
	return o.ServerOs, true
}

// HasServerOs returns a boolean if a field has been set.
func (o *ApiServersIdInstallAgentServer) HasServerOs() bool {
	if o != nil && o.ServerOs != nil {
		return true
	}

	return false
}

// SetServerOs gets a reference to the given ApiServersIdInstallAgentServerServerOs and assigns it to the ServerOs field.
func (o *ApiServersIdInstallAgentServer) SetServerOs(v ApiServersIdInstallAgentServerServerOs) {
	o.ServerOs = &v
}

func (o ApiServersIdInstallAgentServer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SshUsername != nil {
		toSerialize["sshUsername"] = o.SshUsername
	}
	if o.SshPassword != nil {
		toSerialize["sshPassword"] = o.SshPassword
	}
	if o.ServerOs != nil {
		toSerialize["serverOs"] = o.ServerOs
	}
	return json.Marshal(toSerialize)
}

type NullableApiServersIdInstallAgentServer struct {
	value *ApiServersIdInstallAgentServer
	isSet bool
}

func (v NullableApiServersIdInstallAgentServer) Get() *ApiServersIdInstallAgentServer {
	return v.value
}

func (v *NullableApiServersIdInstallAgentServer) Set(val *ApiServersIdInstallAgentServer) {
	v.value = val
	v.isSet = true
}

func (v NullableApiServersIdInstallAgentServer) IsSet() bool {
	return v.isSet
}

func (v *NullableApiServersIdInstallAgentServer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiServersIdInstallAgentServer(val *ApiServersIdInstallAgentServer) *NullableApiServersIdInstallAgentServer {
	return &NullableApiServersIdInstallAgentServer{value: val, isSet: true}
}

func (v NullableApiServersIdInstallAgentServer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiServersIdInstallAgentServer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


