/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GuidanceStatsType struct for GuidanceStatsType
type GuidanceStatsType struct {
	Size *int64 `json:"size,omitempty"`
	Shutdown *int64 `json:"shutdown,omitempty"`
	Move *int64 `json:"move,omitempty"`
	Schedule *int64 `json:"schedule,omitempty"`
}

// NewGuidanceStatsType instantiates a new GuidanceStatsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGuidanceStatsType() *GuidanceStatsType {
	this := GuidanceStatsType{}
	return &this
}

// NewGuidanceStatsTypeWithDefaults instantiates a new GuidanceStatsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGuidanceStatsTypeWithDefaults() *GuidanceStatsType {
	this := GuidanceStatsType{}
	return &this
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *GuidanceStatsType) GetSize() int64 {
	if o == nil || o.Size == nil {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceStatsType) GetSizeOk() (*int64, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *GuidanceStatsType) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *GuidanceStatsType) SetSize(v int64) {
	o.Size = &v
}

// GetShutdown returns the Shutdown field value if set, zero value otherwise.
func (o *GuidanceStatsType) GetShutdown() int64 {
	if o == nil || o.Shutdown == nil {
		var ret int64
		return ret
	}
	return *o.Shutdown
}

// GetShutdownOk returns a tuple with the Shutdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceStatsType) GetShutdownOk() (*int64, bool) {
	if o == nil || o.Shutdown == nil {
		return nil, false
	}
	return o.Shutdown, true
}

// HasShutdown returns a boolean if a field has been set.
func (o *GuidanceStatsType) HasShutdown() bool {
	if o != nil && o.Shutdown != nil {
		return true
	}

	return false
}

// SetShutdown gets a reference to the given int64 and assigns it to the Shutdown field.
func (o *GuidanceStatsType) SetShutdown(v int64) {
	o.Shutdown = &v
}

// GetMove returns the Move field value if set, zero value otherwise.
func (o *GuidanceStatsType) GetMove() int64 {
	if o == nil || o.Move == nil {
		var ret int64
		return ret
	}
	return *o.Move
}

// GetMoveOk returns a tuple with the Move field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceStatsType) GetMoveOk() (*int64, bool) {
	if o == nil || o.Move == nil {
		return nil, false
	}
	return o.Move, true
}

// HasMove returns a boolean if a field has been set.
func (o *GuidanceStatsType) HasMove() bool {
	if o != nil && o.Move != nil {
		return true
	}

	return false
}

// SetMove gets a reference to the given int64 and assigns it to the Move field.
func (o *GuidanceStatsType) SetMove(v int64) {
	o.Move = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *GuidanceStatsType) GetSchedule() int64 {
	if o == nil || o.Schedule == nil {
		var ret int64
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GuidanceStatsType) GetScheduleOk() (*int64, bool) {
	if o == nil || o.Schedule == nil {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *GuidanceStatsType) HasSchedule() bool {
	if o != nil && o.Schedule != nil {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given int64 and assigns it to the Schedule field.
func (o *GuidanceStatsType) SetSchedule(v int64) {
	o.Schedule = &v
}

func (o GuidanceStatsType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.Shutdown != nil {
		toSerialize["shutdown"] = o.Shutdown
	}
	if o.Move != nil {
		toSerialize["move"] = o.Move
	}
	if o.Schedule != nil {
		toSerialize["schedule"] = o.Schedule
	}
	return json.Marshal(toSerialize)
}

type NullableGuidanceStatsType struct {
	value *GuidanceStatsType
	isSet bool
}

func (v NullableGuidanceStatsType) Get() *GuidanceStatsType {
	return v.value
}

func (v *NullableGuidanceStatsType) Set(val *GuidanceStatsType) {
	v.value = val
	v.isSet = true
}

func (v NullableGuidanceStatsType) IsSet() bool {
	return v.isSet
}

func (v *NullableGuidanceStatsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGuidanceStatsType(val *GuidanceStatsType) *NullableGuidanceStatsType {
	return &NullableGuidanceStatsType{value: val, isSet: true}
}

func (v NullableGuidanceStatsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGuidanceStatsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


