/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VdiPoolConfig struct for VdiPoolConfig
type VdiPoolConfig struct {
	Group *InstanceServicePlanAutoOptions `json:"group,omitempty"`
	Cloud *InlineResponse20040AppDeployInstance `json:"cloud,omitempty"`
	Type *string `json:"type,omitempty"`
	Instance *VdiPoolConfigInstance `json:"instance,omitempty"`
	Name *string `json:"name,omitempty"`
	Environment *string `json:"environment,omitempty"`
	Config *VdiPoolConfigConfig `json:"config,omitempty"`
	Volumes *[]VdiPoolConfigVolumes `json:"volumes,omitempty"`
	HostName *string `json:"hostName,omitempty"`
	Layout *InstanceConfigLayout `json:"layout,omitempty"`
	StorageControllers []VdiPoolConfigStorageControllers `json:"storageControllers,omitempty"`
	Plan *InstanceConfigLayout `json:"plan,omitempty"`
	Version *string `json:"version,omitempty"`
	NetworkInterfaces *[]VdiPoolConfigNetworkInterfaces `json:"networkInterfaces,omitempty"`
	ExecutionId *string `json:"executionId,omitempty"`
	Backup *InstanceConfigBackup `json:"backup,omitempty"`
	LoadBalancer []map[string]interface{} `json:"loadBalancer,omitempty"`
	HideLock *bool `json:"hideLock,omitempty"`
	HasNetworks *bool `json:"hasNetworks,omitempty"`
	DisplayNetworks *[]VdiPoolConfigDisplayNetworks `json:"displayNetworks,omitempty"`
	Copies *int64 `json:"copies,omitempty"`
	ShowScale *bool `json:"showScale,omitempty"`
	HasPreview *bool `json:"hasPreview,omitempty"`
	VolumesDisplay *[]VdiPoolConfigVolumesDisplay `json:"volumesDisplay,omitempty"`
}

// NewVdiPoolConfig instantiates a new VdiPoolConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVdiPoolConfig() *VdiPoolConfig {
	this := VdiPoolConfig{}
	return &this
}

// NewVdiPoolConfigWithDefaults instantiates a new VdiPoolConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVdiPoolConfigWithDefaults() *VdiPoolConfig {
	this := VdiPoolConfig{}
	return &this
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetGroup() InstanceServicePlanAutoOptions {
	if o == nil || o.Group == nil {
		var ret InstanceServicePlanAutoOptions
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetGroupOk() (*InstanceServicePlanAutoOptions, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given InstanceServicePlanAutoOptions and assigns it to the Group field.
func (o *VdiPoolConfig) SetGroup(v InstanceServicePlanAutoOptions) {
	o.Group = &v
}

// GetCloud returns the Cloud field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetCloud() InlineResponse20040AppDeployInstance {
	if o == nil || o.Cloud == nil {
		var ret InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetCloudOk() (*InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Cloud == nil {
		return nil, false
	}
	return o.Cloud, true
}

// HasCloud returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasCloud() bool {
	if o != nil && o.Cloud != nil {
		return true
	}

	return false
}

// SetCloud gets a reference to the given InlineResponse20040AppDeployInstance and assigns it to the Cloud field.
func (o *VdiPoolConfig) SetCloud(v InlineResponse20040AppDeployInstance) {
	o.Cloud = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *VdiPoolConfig) SetType(v string) {
	o.Type = &v
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetInstance() VdiPoolConfigInstance {
	if o == nil || o.Instance == nil {
		var ret VdiPoolConfigInstance
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetInstanceOk() (*VdiPoolConfigInstance, bool) {
	if o == nil || o.Instance == nil {
		return nil, false
	}
	return o.Instance, true
}

// HasInstance returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasInstance() bool {
	if o != nil && o.Instance != nil {
		return true
	}

	return false
}

// SetInstance gets a reference to the given VdiPoolConfigInstance and assigns it to the Instance field.
func (o *VdiPoolConfig) SetInstance(v VdiPoolConfigInstance) {
	o.Instance = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VdiPoolConfig) SetName(v string) {
	o.Name = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetEnvironment() string {
	if o == nil || o.Environment == nil {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetEnvironmentOk() (*string, bool) {
	if o == nil || o.Environment == nil {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasEnvironment() bool {
	if o != nil && o.Environment != nil {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *VdiPoolConfig) SetEnvironment(v string) {
	o.Environment = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetConfig() VdiPoolConfigConfig {
	if o == nil || o.Config == nil {
		var ret VdiPoolConfigConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetConfigOk() (*VdiPoolConfigConfig, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given VdiPoolConfigConfig and assigns it to the Config field.
func (o *VdiPoolConfig) SetConfig(v VdiPoolConfigConfig) {
	o.Config = &v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetVolumes() []VdiPoolConfigVolumes {
	if o == nil || o.Volumes == nil {
		var ret []VdiPoolConfigVolumes
		return ret
	}
	return *o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetVolumesOk() (*[]VdiPoolConfigVolumes, bool) {
	if o == nil || o.Volumes == nil {
		return nil, false
	}
	return o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasVolumes() bool {
	if o != nil && o.Volumes != nil {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []VdiPoolConfigVolumes and assigns it to the Volumes field.
func (o *VdiPoolConfig) SetVolumes(v []VdiPoolConfigVolumes) {
	o.Volumes = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetHostName() string {
	if o == nil || o.HostName == nil {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetHostNameOk() (*string, bool) {
	if o == nil || o.HostName == nil {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasHostName() bool {
	if o != nil && o.HostName != nil {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *VdiPoolConfig) SetHostName(v string) {
	o.HostName = &v
}

// GetLayout returns the Layout field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetLayout() InstanceConfigLayout {
	if o == nil || o.Layout == nil {
		var ret InstanceConfigLayout
		return ret
	}
	return *o.Layout
}

// GetLayoutOk returns a tuple with the Layout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetLayoutOk() (*InstanceConfigLayout, bool) {
	if o == nil || o.Layout == nil {
		return nil, false
	}
	return o.Layout, true
}

// HasLayout returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasLayout() bool {
	if o != nil && o.Layout != nil {
		return true
	}

	return false
}

// SetLayout gets a reference to the given InstanceConfigLayout and assigns it to the Layout field.
func (o *VdiPoolConfig) SetLayout(v InstanceConfigLayout) {
	o.Layout = &v
}

// GetStorageControllers returns the StorageControllers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPoolConfig) GetStorageControllers() []VdiPoolConfigStorageControllers {
	if o == nil  {
		var ret []VdiPoolConfigStorageControllers
		return ret
	}
	return o.StorageControllers
}

// GetStorageControllersOk returns a tuple with the StorageControllers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPoolConfig) GetStorageControllersOk() (*[]VdiPoolConfigStorageControllers, bool) {
	if o == nil || o.StorageControllers == nil {
		return nil, false
	}
	return &o.StorageControllers, true
}

// HasStorageControllers returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasStorageControllers() bool {
	if o != nil && o.StorageControllers != nil {
		return true
	}

	return false
}

// SetStorageControllers gets a reference to the given []VdiPoolConfigStorageControllers and assigns it to the StorageControllers field.
func (o *VdiPoolConfig) SetStorageControllers(v []VdiPoolConfigStorageControllers) {
	o.StorageControllers = v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetPlan() InstanceConfigLayout {
	if o == nil || o.Plan == nil {
		var ret InstanceConfigLayout
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetPlanOk() (*InstanceConfigLayout, bool) {
	if o == nil || o.Plan == nil {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasPlan() bool {
	if o != nil && o.Plan != nil {
		return true
	}

	return false
}

// SetPlan gets a reference to the given InstanceConfigLayout and assigns it to the Plan field.
func (o *VdiPoolConfig) SetPlan(v InstanceConfigLayout) {
	o.Plan = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *VdiPoolConfig) SetVersion(v string) {
	o.Version = &v
}

// GetNetworkInterfaces returns the NetworkInterfaces field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetNetworkInterfaces() []VdiPoolConfigNetworkInterfaces {
	if o == nil || o.NetworkInterfaces == nil {
		var ret []VdiPoolConfigNetworkInterfaces
		return ret
	}
	return *o.NetworkInterfaces
}

// GetNetworkInterfacesOk returns a tuple with the NetworkInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetNetworkInterfacesOk() (*[]VdiPoolConfigNetworkInterfaces, bool) {
	if o == nil || o.NetworkInterfaces == nil {
		return nil, false
	}
	return o.NetworkInterfaces, true
}

// HasNetworkInterfaces returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasNetworkInterfaces() bool {
	if o != nil && o.NetworkInterfaces != nil {
		return true
	}

	return false
}

// SetNetworkInterfaces gets a reference to the given []VdiPoolConfigNetworkInterfaces and assigns it to the NetworkInterfaces field.
func (o *VdiPoolConfig) SetNetworkInterfaces(v []VdiPoolConfigNetworkInterfaces) {
	o.NetworkInterfaces = &v
}

// GetExecutionId returns the ExecutionId field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetExecutionId() string {
	if o == nil || o.ExecutionId == nil {
		var ret string
		return ret
	}
	return *o.ExecutionId
}

// GetExecutionIdOk returns a tuple with the ExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetExecutionIdOk() (*string, bool) {
	if o == nil || o.ExecutionId == nil {
		return nil, false
	}
	return o.ExecutionId, true
}

// HasExecutionId returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasExecutionId() bool {
	if o != nil && o.ExecutionId != nil {
		return true
	}

	return false
}

// SetExecutionId gets a reference to the given string and assigns it to the ExecutionId field.
func (o *VdiPoolConfig) SetExecutionId(v string) {
	o.ExecutionId = &v
}

// GetBackup returns the Backup field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetBackup() InstanceConfigBackup {
	if o == nil || o.Backup == nil {
		var ret InstanceConfigBackup
		return ret
	}
	return *o.Backup
}

// GetBackupOk returns a tuple with the Backup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetBackupOk() (*InstanceConfigBackup, bool) {
	if o == nil || o.Backup == nil {
		return nil, false
	}
	return o.Backup, true
}

// HasBackup returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasBackup() bool {
	if o != nil && o.Backup != nil {
		return true
	}

	return false
}

// SetBackup gets a reference to the given InstanceConfigBackup and assigns it to the Backup field.
func (o *VdiPoolConfig) SetBackup(v InstanceConfigBackup) {
	o.Backup = &v
}

// GetLoadBalancer returns the LoadBalancer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPoolConfig) GetLoadBalancer() []map[string]interface{} {
	if o == nil  {
		var ret []map[string]interface{}
		return ret
	}
	return o.LoadBalancer
}

// GetLoadBalancerOk returns a tuple with the LoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPoolConfig) GetLoadBalancerOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.LoadBalancer == nil {
		return nil, false
	}
	return &o.LoadBalancer, true
}

// HasLoadBalancer returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasLoadBalancer() bool {
	if o != nil && o.LoadBalancer != nil {
		return true
	}

	return false
}

// SetLoadBalancer gets a reference to the given []map[string]interface{} and assigns it to the LoadBalancer field.
func (o *VdiPoolConfig) SetLoadBalancer(v []map[string]interface{}) {
	o.LoadBalancer = v
}

// GetHideLock returns the HideLock field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetHideLock() bool {
	if o == nil || o.HideLock == nil {
		var ret bool
		return ret
	}
	return *o.HideLock
}

// GetHideLockOk returns a tuple with the HideLock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetHideLockOk() (*bool, bool) {
	if o == nil || o.HideLock == nil {
		return nil, false
	}
	return o.HideLock, true
}

// HasHideLock returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasHideLock() bool {
	if o != nil && o.HideLock != nil {
		return true
	}

	return false
}

// SetHideLock gets a reference to the given bool and assigns it to the HideLock field.
func (o *VdiPoolConfig) SetHideLock(v bool) {
	o.HideLock = &v
}

// GetHasNetworks returns the HasNetworks field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetHasNetworks() bool {
	if o == nil || o.HasNetworks == nil {
		var ret bool
		return ret
	}
	return *o.HasNetworks
}

// GetHasNetworksOk returns a tuple with the HasNetworks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetHasNetworksOk() (*bool, bool) {
	if o == nil || o.HasNetworks == nil {
		return nil, false
	}
	return o.HasNetworks, true
}

// HasHasNetworks returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasHasNetworks() bool {
	if o != nil && o.HasNetworks != nil {
		return true
	}

	return false
}

// SetHasNetworks gets a reference to the given bool and assigns it to the HasNetworks field.
func (o *VdiPoolConfig) SetHasNetworks(v bool) {
	o.HasNetworks = &v
}

// GetDisplayNetworks returns the DisplayNetworks field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetDisplayNetworks() []VdiPoolConfigDisplayNetworks {
	if o == nil || o.DisplayNetworks == nil {
		var ret []VdiPoolConfigDisplayNetworks
		return ret
	}
	return *o.DisplayNetworks
}

// GetDisplayNetworksOk returns a tuple with the DisplayNetworks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetDisplayNetworksOk() (*[]VdiPoolConfigDisplayNetworks, bool) {
	if o == nil || o.DisplayNetworks == nil {
		return nil, false
	}
	return o.DisplayNetworks, true
}

// HasDisplayNetworks returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasDisplayNetworks() bool {
	if o != nil && o.DisplayNetworks != nil {
		return true
	}

	return false
}

// SetDisplayNetworks gets a reference to the given []VdiPoolConfigDisplayNetworks and assigns it to the DisplayNetworks field.
func (o *VdiPoolConfig) SetDisplayNetworks(v []VdiPoolConfigDisplayNetworks) {
	o.DisplayNetworks = &v
}

// GetCopies returns the Copies field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetCopies() int64 {
	if o == nil || o.Copies == nil {
		var ret int64
		return ret
	}
	return *o.Copies
}

// GetCopiesOk returns a tuple with the Copies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetCopiesOk() (*int64, bool) {
	if o == nil || o.Copies == nil {
		return nil, false
	}
	return o.Copies, true
}

// HasCopies returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasCopies() bool {
	if o != nil && o.Copies != nil {
		return true
	}

	return false
}

// SetCopies gets a reference to the given int64 and assigns it to the Copies field.
func (o *VdiPoolConfig) SetCopies(v int64) {
	o.Copies = &v
}

// GetShowScale returns the ShowScale field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetShowScale() bool {
	if o == nil || o.ShowScale == nil {
		var ret bool
		return ret
	}
	return *o.ShowScale
}

// GetShowScaleOk returns a tuple with the ShowScale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetShowScaleOk() (*bool, bool) {
	if o == nil || o.ShowScale == nil {
		return nil, false
	}
	return o.ShowScale, true
}

// HasShowScale returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasShowScale() bool {
	if o != nil && o.ShowScale != nil {
		return true
	}

	return false
}

// SetShowScale gets a reference to the given bool and assigns it to the ShowScale field.
func (o *VdiPoolConfig) SetShowScale(v bool) {
	o.ShowScale = &v
}

// GetHasPreview returns the HasPreview field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetHasPreview() bool {
	if o == nil || o.HasPreview == nil {
		var ret bool
		return ret
	}
	return *o.HasPreview
}

// GetHasPreviewOk returns a tuple with the HasPreview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetHasPreviewOk() (*bool, bool) {
	if o == nil || o.HasPreview == nil {
		return nil, false
	}
	return o.HasPreview, true
}

// HasHasPreview returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasHasPreview() bool {
	if o != nil && o.HasPreview != nil {
		return true
	}

	return false
}

// SetHasPreview gets a reference to the given bool and assigns it to the HasPreview field.
func (o *VdiPoolConfig) SetHasPreview(v bool) {
	o.HasPreview = &v
}

// GetVolumesDisplay returns the VolumesDisplay field value if set, zero value otherwise.
func (o *VdiPoolConfig) GetVolumesDisplay() []VdiPoolConfigVolumesDisplay {
	if o == nil || o.VolumesDisplay == nil {
		var ret []VdiPoolConfigVolumesDisplay
		return ret
	}
	return *o.VolumesDisplay
}

// GetVolumesDisplayOk returns a tuple with the VolumesDisplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPoolConfig) GetVolumesDisplayOk() (*[]VdiPoolConfigVolumesDisplay, bool) {
	if o == nil || o.VolumesDisplay == nil {
		return nil, false
	}
	return o.VolumesDisplay, true
}

// HasVolumesDisplay returns a boolean if a field has been set.
func (o *VdiPoolConfig) HasVolumesDisplay() bool {
	if o != nil && o.VolumesDisplay != nil {
		return true
	}

	return false
}

// SetVolumesDisplay gets a reference to the given []VdiPoolConfigVolumesDisplay and assigns it to the VolumesDisplay field.
func (o *VdiPoolConfig) SetVolumesDisplay(v []VdiPoolConfigVolumesDisplay) {
	o.VolumesDisplay = &v
}

func (o VdiPoolConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	if o.Cloud != nil {
		toSerialize["cloud"] = o.Cloud
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Instance != nil {
		toSerialize["instance"] = o.Instance
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Environment != nil {
		toSerialize["environment"] = o.Environment
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.Volumes != nil {
		toSerialize["volumes"] = o.Volumes
	}
	if o.HostName != nil {
		toSerialize["hostName"] = o.HostName
	}
	if o.Layout != nil {
		toSerialize["layout"] = o.Layout
	}
	if o.StorageControllers != nil {
		toSerialize["storageControllers"] = o.StorageControllers
	}
	if o.Plan != nil {
		toSerialize["plan"] = o.Plan
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.NetworkInterfaces != nil {
		toSerialize["networkInterfaces"] = o.NetworkInterfaces
	}
	if o.ExecutionId != nil {
		toSerialize["executionId"] = o.ExecutionId
	}
	if o.Backup != nil {
		toSerialize["backup"] = o.Backup
	}
	if o.LoadBalancer != nil {
		toSerialize["loadBalancer"] = o.LoadBalancer
	}
	if o.HideLock != nil {
		toSerialize["hideLock"] = o.HideLock
	}
	if o.HasNetworks != nil {
		toSerialize["hasNetworks"] = o.HasNetworks
	}
	if o.DisplayNetworks != nil {
		toSerialize["displayNetworks"] = o.DisplayNetworks
	}
	if o.Copies != nil {
		toSerialize["copies"] = o.Copies
	}
	if o.ShowScale != nil {
		toSerialize["showScale"] = o.ShowScale
	}
	if o.HasPreview != nil {
		toSerialize["hasPreview"] = o.HasPreview
	}
	if o.VolumesDisplay != nil {
		toSerialize["volumesDisplay"] = o.VolumesDisplay
	}
	return json.Marshal(toSerialize)
}

type NullableVdiPoolConfig struct {
	value *VdiPoolConfig
	isSet bool
}

func (v NullableVdiPoolConfig) Get() *VdiPoolConfig {
	return v.value
}

func (v *NullableVdiPoolConfig) Set(val *VdiPoolConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableVdiPoolConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableVdiPoolConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVdiPoolConfig(val *VdiPoolConfig) *NullableVdiPoolConfig {
	return &NullableVdiPoolConfig{value: val, isSet: true}
}

func (v NullableVdiPoolConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVdiPoolConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


