/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20060 struct for InlineResponse20060
type InlineResponse20060 struct {
	Plans *[]InstanceServicePlan `json:"plans,omitempty"`
}

// NewInlineResponse20060 instantiates a new InlineResponse20060 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20060() *InlineResponse20060 {
	this := InlineResponse20060{}
	return &this
}

// NewInlineResponse20060WithDefaults instantiates a new InlineResponse20060 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20060WithDefaults() *InlineResponse20060 {
	this := InlineResponse20060{}
	return &this
}

// GetPlans returns the Plans field value if set, zero value otherwise.
func (o *InlineResponse20060) GetPlans() []InstanceServicePlan {
	if o == nil || o.Plans == nil {
		var ret []InstanceServicePlan
		return ret
	}
	return *o.Plans
}

// GetPlansOk returns a tuple with the Plans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20060) GetPlansOk() (*[]InstanceServicePlan, bool) {
	if o == nil || o.Plans == nil {
		return nil, false
	}
	return o.Plans, true
}

// HasPlans returns a boolean if a field has been set.
func (o *InlineResponse20060) HasPlans() bool {
	if o != nil && o.Plans != nil {
		return true
	}

	return false
}

// SetPlans gets a reference to the given []InstanceServicePlan and assigns it to the Plans field.
func (o *InlineResponse20060) SetPlans(v []InstanceServicePlan) {
	o.Plans = &v
}

func (o InlineResponse20060) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Plans != nil {
		toSerialize["plans"] = o.Plans
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20060 struct {
	value *InlineResponse20060
	isSet bool
}

func (v NullableInlineResponse20060) Get() *InlineResponse20060 {
	return v.value
}

func (v *NullableInlineResponse20060) Set(val *InlineResponse20060) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20060) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20060) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20060(val *InlineResponse20060) *NullableInlineResponse20060 {
	return &NullableInlineResponse20060{value: val, isSet: true}
}

func (v NullableInlineResponse20060) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20060) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


