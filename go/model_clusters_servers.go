/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClustersServers struct for ClustersServers
type ClustersServers struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	TypeSet *InlineResponse20079LoadBalancerMonitorLoadBalancerType `json:"typeSet,omitempty"`
	ComputeServerType *ClustersComputeServerType `json:"computeServerType,omitempty"`
}

// NewClustersServers instantiates a new ClustersServers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClustersServers() *ClustersServers {
	this := ClustersServers{}
	return &this
}

// NewClustersServersWithDefaults instantiates a new ClustersServers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClustersServersWithDefaults() *ClustersServers {
	this := ClustersServers{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClustersServers) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClustersServers) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClustersServers) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ClustersServers) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClustersServers) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClustersServers) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClustersServers) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClustersServers) SetName(v string) {
	o.Name = &v
}

// GetTypeSet returns the TypeSet field value if set, zero value otherwise.
func (o *ClustersServers) GetTypeSet() InlineResponse20079LoadBalancerMonitorLoadBalancerType {
	if o == nil || o.TypeSet == nil {
		var ret InlineResponse20079LoadBalancerMonitorLoadBalancerType
		return ret
	}
	return *o.TypeSet
}

// GetTypeSetOk returns a tuple with the TypeSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClustersServers) GetTypeSetOk() (*InlineResponse20079LoadBalancerMonitorLoadBalancerType, bool) {
	if o == nil || o.TypeSet == nil {
		return nil, false
	}
	return o.TypeSet, true
}

// HasTypeSet returns a boolean if a field has been set.
func (o *ClustersServers) HasTypeSet() bool {
	if o != nil && o.TypeSet != nil {
		return true
	}

	return false
}

// SetTypeSet gets a reference to the given InlineResponse20079LoadBalancerMonitorLoadBalancerType and assigns it to the TypeSet field.
func (o *ClustersServers) SetTypeSet(v InlineResponse20079LoadBalancerMonitorLoadBalancerType) {
	o.TypeSet = &v
}

// GetComputeServerType returns the ComputeServerType field value if set, zero value otherwise.
func (o *ClustersServers) GetComputeServerType() ClustersComputeServerType {
	if o == nil || o.ComputeServerType == nil {
		var ret ClustersComputeServerType
		return ret
	}
	return *o.ComputeServerType
}

// GetComputeServerTypeOk returns a tuple with the ComputeServerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClustersServers) GetComputeServerTypeOk() (*ClustersComputeServerType, bool) {
	if o == nil || o.ComputeServerType == nil {
		return nil, false
	}
	return o.ComputeServerType, true
}

// HasComputeServerType returns a boolean if a field has been set.
func (o *ClustersServers) HasComputeServerType() bool {
	if o != nil && o.ComputeServerType != nil {
		return true
	}

	return false
}

// SetComputeServerType gets a reference to the given ClustersComputeServerType and assigns it to the ComputeServerType field.
func (o *ClustersServers) SetComputeServerType(v ClustersComputeServerType) {
	o.ComputeServerType = &v
}

func (o ClustersServers) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.TypeSet != nil {
		toSerialize["typeSet"] = o.TypeSet
	}
	if o.ComputeServerType != nil {
		toSerialize["computeServerType"] = o.ComputeServerType
	}
	return json.Marshal(toSerialize)
}

type NullableClustersServers struct {
	value *ClustersServers
	isSet bool
}

func (v NullableClustersServers) Get() *ClustersServers {
	return v.value
}

func (v *NullableClustersServers) Set(val *ClustersServers) {
	v.value = val
	v.isSet = true
}

func (v NullableClustersServers) IsSet() bool {
	return v.isSet
}

func (v *NullableClustersServers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClustersServers(val *ClustersServers) *NullableClustersServers {
	return &NullableClustersServers{value: val, isSet: true}
}

func (v NullableClustersServers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClustersServers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


