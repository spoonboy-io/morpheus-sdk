/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AwsResourcePoolConfig struct for AwsResourcePoolConfig
type AwsResourcePoolConfig struct {
	// Provide the base CIDR Block to use for this VPC (must be between a /16 and /28 Block)
	CidrBlock *string `json:"cidrBlock,omitempty"`
	// default or dedicated
	Tenancy *string `json:"tenancy,omitempty"`
}

// NewAwsResourcePoolConfig instantiates a new AwsResourcePoolConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsResourcePoolConfig() *AwsResourcePoolConfig {
	this := AwsResourcePoolConfig{}
	var tenancy string = "default"
	this.Tenancy = &tenancy
	return &this
}

// NewAwsResourcePoolConfigWithDefaults instantiates a new AwsResourcePoolConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsResourcePoolConfigWithDefaults() *AwsResourcePoolConfig {
	this := AwsResourcePoolConfig{}
	var tenancy string = "default"
	this.Tenancy = &tenancy
	return &this
}

// GetCidrBlock returns the CidrBlock field value if set, zero value otherwise.
func (o *AwsResourcePoolConfig) GetCidrBlock() string {
	if o == nil || o.CidrBlock == nil {
		var ret string
		return ret
	}
	return *o.CidrBlock
}

// GetCidrBlockOk returns a tuple with the CidrBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsResourcePoolConfig) GetCidrBlockOk() (*string, bool) {
	if o == nil || o.CidrBlock == nil {
		return nil, false
	}
	return o.CidrBlock, true
}

// HasCidrBlock returns a boolean if a field has been set.
func (o *AwsResourcePoolConfig) HasCidrBlock() bool {
	if o != nil && o.CidrBlock != nil {
		return true
	}

	return false
}

// SetCidrBlock gets a reference to the given string and assigns it to the CidrBlock field.
func (o *AwsResourcePoolConfig) SetCidrBlock(v string) {
	o.CidrBlock = &v
}

// GetTenancy returns the Tenancy field value if set, zero value otherwise.
func (o *AwsResourcePoolConfig) GetTenancy() string {
	if o == nil || o.Tenancy == nil {
		var ret string
		return ret
	}
	return *o.Tenancy
}

// GetTenancyOk returns a tuple with the Tenancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsResourcePoolConfig) GetTenancyOk() (*string, bool) {
	if o == nil || o.Tenancy == nil {
		return nil, false
	}
	return o.Tenancy, true
}

// HasTenancy returns a boolean if a field has been set.
func (o *AwsResourcePoolConfig) HasTenancy() bool {
	if o != nil && o.Tenancy != nil {
		return true
	}

	return false
}

// SetTenancy gets a reference to the given string and assigns it to the Tenancy field.
func (o *AwsResourcePoolConfig) SetTenancy(v string) {
	o.Tenancy = &v
}

func (o AwsResourcePoolConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CidrBlock != nil {
		toSerialize["cidrBlock"] = o.CidrBlock
	}
	if o.Tenancy != nil {
		toSerialize["tenancy"] = o.Tenancy
	}
	return json.Marshal(toSerialize)
}

type NullableAwsResourcePoolConfig struct {
	value *AwsResourcePoolConfig
	isSet bool
}

func (v NullableAwsResourcePoolConfig) Get() *AwsResourcePoolConfig {
	return v.value
}

func (v *NullableAwsResourcePoolConfig) Set(val *AwsResourcePoolConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsResourcePoolConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsResourcePoolConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsResourcePoolConfig(val *AwsResourcePoolConfig) *NullableAwsResourcePoolConfig {
	return &NullableAwsResourcePoolConfig{value: val, isSet: true}
}

func (v NullableAwsResourcePoolConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsResourcePoolConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


