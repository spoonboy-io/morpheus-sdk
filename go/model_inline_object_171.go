/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject171 The parameters for update a network Edge Cluster is type dependent. The following lists the common parameters. See get a specific type to list available options for the network server type. 
type InlineObject171 struct {
	NetworkEdgeCluster *map[string]interface{} `json:"networkEdgeCluster,omitempty"`
}

// NewInlineObject171 instantiates a new InlineObject171 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject171() *InlineObject171 {
	this := InlineObject171{}
	return &this
}

// NewInlineObject171WithDefaults instantiates a new InlineObject171 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject171WithDefaults() *InlineObject171 {
	this := InlineObject171{}
	return &this
}

// GetNetworkEdgeCluster returns the NetworkEdgeCluster field value if set, zero value otherwise.
func (o *InlineObject171) GetNetworkEdgeCluster() map[string]interface{} {
	if o == nil || o.NetworkEdgeCluster == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.NetworkEdgeCluster
}

// GetNetworkEdgeClusterOk returns a tuple with the NetworkEdgeCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject171) GetNetworkEdgeClusterOk() (*map[string]interface{}, bool) {
	if o == nil || o.NetworkEdgeCluster == nil {
		return nil, false
	}
	return o.NetworkEdgeCluster, true
}

// HasNetworkEdgeCluster returns a boolean if a field has been set.
func (o *InlineObject171) HasNetworkEdgeCluster() bool {
	if o != nil && o.NetworkEdgeCluster != nil {
		return true
	}

	return false
}

// SetNetworkEdgeCluster gets a reference to the given map[string]interface{} and assigns it to the NetworkEdgeCluster field.
func (o *InlineObject171) SetNetworkEdgeCluster(v map[string]interface{}) {
	o.NetworkEdgeCluster = &v
}

func (o InlineObject171) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NetworkEdgeCluster != nil {
		toSerialize["networkEdgeCluster"] = o.NetworkEdgeCluster
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject171 struct {
	value *InlineObject171
	isSet bool
}

func (v NullableInlineObject171) Get() *InlineObject171 {
	return v.value
}

func (v *NullableInlineObject171) Set(val *InlineObject171) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject171) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject171) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject171(val *InlineObject171) *NullableInlineObject171 {
	return &NullableInlineObject171{value: val, isSet: true}
}

func (v NullableInlineObject171) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject171) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


