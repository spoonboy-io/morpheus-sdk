/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetworkDomainCreate struct for NetworkDomainCreate
type NetworkDomainCreate struct {
	// Name
	Name *string `json:"name,omitempty"`
	// Description
	Description *string `json:"description,omitempty"`
	// Overrides displayed name in domain selection components. Useful if using many OU Paths.
	DisplayName *string `json:"displayName,omitempty"`
	// Public Zone
	PublicZone *bool `json:"publicZone,omitempty"`
	// Workflow ID. Workflows can be applied to an instance when associated with a domain. Useful for custom domain related scripting. (Important if wanting to ensure the computer is removed from the domain using teardown phased workflows.) 
	TaskSetId *int64 `json:"taskSetId,omitempty"`
	// Active
	Active *bool `json:"active,omitempty"`
	// Join Domain Controller
	DomainController *bool `json:"domainController,omitempty"`
	// Domain Username
	DomainUsername *string `json:"domainUsername,omitempty"`
	// Domain Password
	DomainPassword *string `json:"domainPassword,omitempty"`
	// DC Server. If specified, must be the server name and not an IP Address
	DcServer *string `json:"dcServer,omitempty"`
	// OU Path. (i.e. 'OU=staging,DC=ad,DC=yourdomain,DC=com')
	OuPath *string `json:"ouPath,omitempty"`
	// Guest Username. If set, will change the instances RPC Service User after joining a Domain.
	GuestUsername *string `json:"guestUsername,omitempty"`
	// Guest Password
	GuestPassword *string `json:"guestPassword,omitempty"`
}

// NewNetworkDomainCreate instantiates a new NetworkDomainCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkDomainCreate() *NetworkDomainCreate {
	this := NetworkDomainCreate{}
	var publicZone bool = false
	this.PublicZone = &publicZone
	var domainController bool = true
	this.DomainController = &domainController
	return &this
}

// NewNetworkDomainCreateWithDefaults instantiates a new NetworkDomainCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkDomainCreateWithDefaults() *NetworkDomainCreate {
	this := NetworkDomainCreate{}
	var publicZone bool = false
	this.PublicZone = &publicZone
	var domainController bool = true
	this.DomainController = &domainController
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NetworkDomainCreate) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDomainCreate) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NetworkDomainCreate) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NetworkDomainCreate) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *NetworkDomainCreate) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDomainCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *NetworkDomainCreate) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *NetworkDomainCreate) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *NetworkDomainCreate) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDomainCreate) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *NetworkDomainCreate) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *NetworkDomainCreate) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetPublicZone returns the PublicZone field value if set, zero value otherwise.
func (o *NetworkDomainCreate) GetPublicZone() bool {
	if o == nil || o.PublicZone == nil {
		var ret bool
		return ret
	}
	return *o.PublicZone
}

// GetPublicZoneOk returns a tuple with the PublicZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDomainCreate) GetPublicZoneOk() (*bool, bool) {
	if o == nil || o.PublicZone == nil {
		return nil, false
	}
	return o.PublicZone, true
}

// HasPublicZone returns a boolean if a field has been set.
func (o *NetworkDomainCreate) HasPublicZone() bool {
	if o != nil && o.PublicZone != nil {
		return true
	}

	return false
}

// SetPublicZone gets a reference to the given bool and assigns it to the PublicZone field.
func (o *NetworkDomainCreate) SetPublicZone(v bool) {
	o.PublicZone = &v
}

// GetTaskSetId returns the TaskSetId field value if set, zero value otherwise.
func (o *NetworkDomainCreate) GetTaskSetId() int64 {
	if o == nil || o.TaskSetId == nil {
		var ret int64
		return ret
	}
	return *o.TaskSetId
}

// GetTaskSetIdOk returns a tuple with the TaskSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDomainCreate) GetTaskSetIdOk() (*int64, bool) {
	if o == nil || o.TaskSetId == nil {
		return nil, false
	}
	return o.TaskSetId, true
}

// HasTaskSetId returns a boolean if a field has been set.
func (o *NetworkDomainCreate) HasTaskSetId() bool {
	if o != nil && o.TaskSetId != nil {
		return true
	}

	return false
}

// SetTaskSetId gets a reference to the given int64 and assigns it to the TaskSetId field.
func (o *NetworkDomainCreate) SetTaskSetId(v int64) {
	o.TaskSetId = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *NetworkDomainCreate) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDomainCreate) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *NetworkDomainCreate) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *NetworkDomainCreate) SetActive(v bool) {
	o.Active = &v
}

// GetDomainController returns the DomainController field value if set, zero value otherwise.
func (o *NetworkDomainCreate) GetDomainController() bool {
	if o == nil || o.DomainController == nil {
		var ret bool
		return ret
	}
	return *o.DomainController
}

// GetDomainControllerOk returns a tuple with the DomainController field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDomainCreate) GetDomainControllerOk() (*bool, bool) {
	if o == nil || o.DomainController == nil {
		return nil, false
	}
	return o.DomainController, true
}

// HasDomainController returns a boolean if a field has been set.
func (o *NetworkDomainCreate) HasDomainController() bool {
	if o != nil && o.DomainController != nil {
		return true
	}

	return false
}

// SetDomainController gets a reference to the given bool and assigns it to the DomainController field.
func (o *NetworkDomainCreate) SetDomainController(v bool) {
	o.DomainController = &v
}

// GetDomainUsername returns the DomainUsername field value if set, zero value otherwise.
func (o *NetworkDomainCreate) GetDomainUsername() string {
	if o == nil || o.DomainUsername == nil {
		var ret string
		return ret
	}
	return *o.DomainUsername
}

// GetDomainUsernameOk returns a tuple with the DomainUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDomainCreate) GetDomainUsernameOk() (*string, bool) {
	if o == nil || o.DomainUsername == nil {
		return nil, false
	}
	return o.DomainUsername, true
}

// HasDomainUsername returns a boolean if a field has been set.
func (o *NetworkDomainCreate) HasDomainUsername() bool {
	if o != nil && o.DomainUsername != nil {
		return true
	}

	return false
}

// SetDomainUsername gets a reference to the given string and assigns it to the DomainUsername field.
func (o *NetworkDomainCreate) SetDomainUsername(v string) {
	o.DomainUsername = &v
}

// GetDomainPassword returns the DomainPassword field value if set, zero value otherwise.
func (o *NetworkDomainCreate) GetDomainPassword() string {
	if o == nil || o.DomainPassword == nil {
		var ret string
		return ret
	}
	return *o.DomainPassword
}

// GetDomainPasswordOk returns a tuple with the DomainPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDomainCreate) GetDomainPasswordOk() (*string, bool) {
	if o == nil || o.DomainPassword == nil {
		return nil, false
	}
	return o.DomainPassword, true
}

// HasDomainPassword returns a boolean if a field has been set.
func (o *NetworkDomainCreate) HasDomainPassword() bool {
	if o != nil && o.DomainPassword != nil {
		return true
	}

	return false
}

// SetDomainPassword gets a reference to the given string and assigns it to the DomainPassword field.
func (o *NetworkDomainCreate) SetDomainPassword(v string) {
	o.DomainPassword = &v
}

// GetDcServer returns the DcServer field value if set, zero value otherwise.
func (o *NetworkDomainCreate) GetDcServer() string {
	if o == nil || o.DcServer == nil {
		var ret string
		return ret
	}
	return *o.DcServer
}

// GetDcServerOk returns a tuple with the DcServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDomainCreate) GetDcServerOk() (*string, bool) {
	if o == nil || o.DcServer == nil {
		return nil, false
	}
	return o.DcServer, true
}

// HasDcServer returns a boolean if a field has been set.
func (o *NetworkDomainCreate) HasDcServer() bool {
	if o != nil && o.DcServer != nil {
		return true
	}

	return false
}

// SetDcServer gets a reference to the given string and assigns it to the DcServer field.
func (o *NetworkDomainCreate) SetDcServer(v string) {
	o.DcServer = &v
}

// GetOuPath returns the OuPath field value if set, zero value otherwise.
func (o *NetworkDomainCreate) GetOuPath() string {
	if o == nil || o.OuPath == nil {
		var ret string
		return ret
	}
	return *o.OuPath
}

// GetOuPathOk returns a tuple with the OuPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDomainCreate) GetOuPathOk() (*string, bool) {
	if o == nil || o.OuPath == nil {
		return nil, false
	}
	return o.OuPath, true
}

// HasOuPath returns a boolean if a field has been set.
func (o *NetworkDomainCreate) HasOuPath() bool {
	if o != nil && o.OuPath != nil {
		return true
	}

	return false
}

// SetOuPath gets a reference to the given string and assigns it to the OuPath field.
func (o *NetworkDomainCreate) SetOuPath(v string) {
	o.OuPath = &v
}

// GetGuestUsername returns the GuestUsername field value if set, zero value otherwise.
func (o *NetworkDomainCreate) GetGuestUsername() string {
	if o == nil || o.GuestUsername == nil {
		var ret string
		return ret
	}
	return *o.GuestUsername
}

// GetGuestUsernameOk returns a tuple with the GuestUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDomainCreate) GetGuestUsernameOk() (*string, bool) {
	if o == nil || o.GuestUsername == nil {
		return nil, false
	}
	return o.GuestUsername, true
}

// HasGuestUsername returns a boolean if a field has been set.
func (o *NetworkDomainCreate) HasGuestUsername() bool {
	if o != nil && o.GuestUsername != nil {
		return true
	}

	return false
}

// SetGuestUsername gets a reference to the given string and assigns it to the GuestUsername field.
func (o *NetworkDomainCreate) SetGuestUsername(v string) {
	o.GuestUsername = &v
}

// GetGuestPassword returns the GuestPassword field value if set, zero value otherwise.
func (o *NetworkDomainCreate) GetGuestPassword() string {
	if o == nil || o.GuestPassword == nil {
		var ret string
		return ret
	}
	return *o.GuestPassword
}

// GetGuestPasswordOk returns a tuple with the GuestPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDomainCreate) GetGuestPasswordOk() (*string, bool) {
	if o == nil || o.GuestPassword == nil {
		return nil, false
	}
	return o.GuestPassword, true
}

// HasGuestPassword returns a boolean if a field has been set.
func (o *NetworkDomainCreate) HasGuestPassword() bool {
	if o != nil && o.GuestPassword != nil {
		return true
	}

	return false
}

// SetGuestPassword gets a reference to the given string and assigns it to the GuestPassword field.
func (o *NetworkDomainCreate) SetGuestPassword(v string) {
	o.GuestPassword = &v
}

func (o NetworkDomainCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.PublicZone != nil {
		toSerialize["publicZone"] = o.PublicZone
	}
	if o.TaskSetId != nil {
		toSerialize["taskSetId"] = o.TaskSetId
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.DomainController != nil {
		toSerialize["domainController"] = o.DomainController
	}
	if o.DomainUsername != nil {
		toSerialize["domainUsername"] = o.DomainUsername
	}
	if o.DomainPassword != nil {
		toSerialize["domainPassword"] = o.DomainPassword
	}
	if o.DcServer != nil {
		toSerialize["dcServer"] = o.DcServer
	}
	if o.OuPath != nil {
		toSerialize["ouPath"] = o.OuPath
	}
	if o.GuestUsername != nil {
		toSerialize["guestUsername"] = o.GuestUsername
	}
	if o.GuestPassword != nil {
		toSerialize["guestPassword"] = o.GuestPassword
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkDomainCreate struct {
	value *NetworkDomainCreate
	isSet bool
}

func (v NullableNetworkDomainCreate) Get() *NetworkDomainCreate {
	return v.value
}

func (v *NullableNetworkDomainCreate) Set(val *NetworkDomainCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkDomainCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkDomainCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkDomainCreate(val *NetworkDomainCreate) *NullableNetworkDomainCreate {
	return &NullableNetworkDomainCreate{value: val, isSet: true}
}

func (v NullableNetworkDomainCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkDomainCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


