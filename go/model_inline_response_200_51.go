/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20051 struct for InlineResponse20051
type InlineResponse20051 struct {
	UserSource *AnyOfidentitySourcesLDAPConfigidentitySourcesJumpCloudConfigidentitySourcesADConfigidentitySourcesOktaConfigidentitySourcesOneLoginConfigidentitySourcesSAMLConfigidentitySourcesAzureADConfigidentitySourcesCustomSSOConfig `json:"userSource,omitempty"`
}

// NewInlineResponse20051 instantiates a new InlineResponse20051 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20051() *InlineResponse20051 {
	this := InlineResponse20051{}
	return &this
}

// NewInlineResponse20051WithDefaults instantiates a new InlineResponse20051 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20051WithDefaults() *InlineResponse20051 {
	this := InlineResponse20051{}
	return &this
}

// GetUserSource returns the UserSource field value if set, zero value otherwise.
func (o *InlineResponse20051) GetUserSource() AnyOfidentitySourcesLDAPConfigidentitySourcesJumpCloudConfigidentitySourcesADConfigidentitySourcesOktaConfigidentitySourcesOneLoginConfigidentitySourcesSAMLConfigidentitySourcesAzureADConfigidentitySourcesCustomSSOConfig {
	if o == nil || o.UserSource == nil {
		var ret AnyOfidentitySourcesLDAPConfigidentitySourcesJumpCloudConfigidentitySourcesADConfigidentitySourcesOktaConfigidentitySourcesOneLoginConfigidentitySourcesSAMLConfigidentitySourcesAzureADConfigidentitySourcesCustomSSOConfig
		return ret
	}
	return *o.UserSource
}

// GetUserSourceOk returns a tuple with the UserSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20051) GetUserSourceOk() (*AnyOfidentitySourcesLDAPConfigidentitySourcesJumpCloudConfigidentitySourcesADConfigidentitySourcesOktaConfigidentitySourcesOneLoginConfigidentitySourcesSAMLConfigidentitySourcesAzureADConfigidentitySourcesCustomSSOConfig, bool) {
	if o == nil || o.UserSource == nil {
		return nil, false
	}
	return o.UserSource, true
}

// HasUserSource returns a boolean if a field has been set.
func (o *InlineResponse20051) HasUserSource() bool {
	if o != nil && o.UserSource != nil {
		return true
	}

	return false
}

// SetUserSource gets a reference to the given AnyOfidentitySourcesLDAPConfigidentitySourcesJumpCloudConfigidentitySourcesADConfigidentitySourcesOktaConfigidentitySourcesOneLoginConfigidentitySourcesSAMLConfigidentitySourcesAzureADConfigidentitySourcesCustomSSOConfig and assigns it to the UserSource field.
func (o *InlineResponse20051) SetUserSource(v AnyOfidentitySourcesLDAPConfigidentitySourcesJumpCloudConfigidentitySourcesADConfigidentitySourcesOktaConfigidentitySourcesOneLoginConfigidentitySourcesSAMLConfigidentitySourcesAzureADConfigidentitySourcesCustomSSOConfig) {
	o.UserSource = &v
}

func (o InlineResponse20051) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserSource != nil {
		toSerialize["userSource"] = o.UserSource
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20051 struct {
	value *InlineResponse20051
	isSet bool
}

func (v NullableInlineResponse20051) Get() *InlineResponse20051 {
	return v.value
}

func (v *NullableInlineResponse20051) Set(val *InlineResponse20051) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20051) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20051) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20051(val *InlineResponse20051) *NullableInlineResponse20051 {
	return &NullableInlineResponse20051{value: val, isSet: true}
}

func (v NullableInlineResponse20051) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20051) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


