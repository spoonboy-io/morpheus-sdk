/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InstancesConfigVMWare struct for InstancesConfigVMWare
type InstancesConfigVMWare struct {
	// Skipping Agent installation will result in a lack of logging and guest operating system statistics. Automation scripts may also be adversely affected.
	NoAgent NullableBool `json:"noAgent,omitempty"`
	// id of the resource group to be used, can be prefixed with `pool-`. A resource pool group can be specified instead by prefixing its ID with `poolGroup-`.
	ResourcePoolId *string `json:"resourcePoolId,omitempty"`
	// Specific host to deploy to if so desired.
	HostId *string `json:"hostId,omitempty"`
	// Sets the asset tag on the SMBIOS for use by the guest operating system. If left blank, the virtual machine name will be used.
	SmbiosAssetTag *string `json:"smbiosAssetTag,omitempty"`
	// Enable Nested Virtualization
	NestedVirtualization *string `json:"nestedVirtualization,omitempty"`
	// VMWare Folder External ID (as a String) or ID (as an Integer or String)
	VmwareFolderId *string `json:"vmwareFolderId,omitempty"`
}

// NewInstancesConfigVMWare instantiates a new InstancesConfigVMWare object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstancesConfigVMWare() *InstancesConfigVMWare {
	this := InstancesConfigVMWare{}
	var noAgent bool = false
	this.NoAgent = *NewNullableBool(&noAgent)
	var nestedVirtualization string = "off"
	this.NestedVirtualization = &nestedVirtualization
	return &this
}

// NewInstancesConfigVMWareWithDefaults instantiates a new InstancesConfigVMWare object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstancesConfigVMWareWithDefaults() *InstancesConfigVMWare {
	this := InstancesConfigVMWare{}
	var noAgent bool = false
	this.NoAgent = *NewNullableBool(&noAgent)
	var nestedVirtualization string = "off"
	this.NestedVirtualization = &nestedVirtualization
	return &this
}

// GetNoAgent returns the NoAgent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InstancesConfigVMWare) GetNoAgent() bool {
	if o == nil || o.NoAgent.Get() == nil {
		var ret bool
		return ret
	}
	return *o.NoAgent.Get()
}

// GetNoAgentOk returns a tuple with the NoAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InstancesConfigVMWare) GetNoAgentOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.NoAgent.Get(), o.NoAgent.IsSet()
}

// HasNoAgent returns a boolean if a field has been set.
func (o *InstancesConfigVMWare) HasNoAgent() bool {
	if o != nil && o.NoAgent.IsSet() {
		return true
	}

	return false
}

// SetNoAgent gets a reference to the given NullableBool and assigns it to the NoAgent field.
func (o *InstancesConfigVMWare) SetNoAgent(v bool) {
	o.NoAgent.Set(&v)
}
// SetNoAgentNil sets the value for NoAgent to be an explicit nil
func (o *InstancesConfigVMWare) SetNoAgentNil() {
	o.NoAgent.Set(nil)
}

// UnsetNoAgent ensures that no value is present for NoAgent, not even an explicit nil
func (o *InstancesConfigVMWare) UnsetNoAgent() {
	o.NoAgent.Unset()
}

// GetResourcePoolId returns the ResourcePoolId field value if set, zero value otherwise.
func (o *InstancesConfigVMWare) GetResourcePoolId() string {
	if o == nil || o.ResourcePoolId == nil {
		var ret string
		return ret
	}
	return *o.ResourcePoolId
}

// GetResourcePoolIdOk returns a tuple with the ResourcePoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesConfigVMWare) GetResourcePoolIdOk() (*string, bool) {
	if o == nil || o.ResourcePoolId == nil {
		return nil, false
	}
	return o.ResourcePoolId, true
}

// HasResourcePoolId returns a boolean if a field has been set.
func (o *InstancesConfigVMWare) HasResourcePoolId() bool {
	if o != nil && o.ResourcePoolId != nil {
		return true
	}

	return false
}

// SetResourcePoolId gets a reference to the given string and assigns it to the ResourcePoolId field.
func (o *InstancesConfigVMWare) SetResourcePoolId(v string) {
	o.ResourcePoolId = &v
}

// GetHostId returns the HostId field value if set, zero value otherwise.
func (o *InstancesConfigVMWare) GetHostId() string {
	if o == nil || o.HostId == nil {
		var ret string
		return ret
	}
	return *o.HostId
}

// GetHostIdOk returns a tuple with the HostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesConfigVMWare) GetHostIdOk() (*string, bool) {
	if o == nil || o.HostId == nil {
		return nil, false
	}
	return o.HostId, true
}

// HasHostId returns a boolean if a field has been set.
func (o *InstancesConfigVMWare) HasHostId() bool {
	if o != nil && o.HostId != nil {
		return true
	}

	return false
}

// SetHostId gets a reference to the given string and assigns it to the HostId field.
func (o *InstancesConfigVMWare) SetHostId(v string) {
	o.HostId = &v
}

// GetSmbiosAssetTag returns the SmbiosAssetTag field value if set, zero value otherwise.
func (o *InstancesConfigVMWare) GetSmbiosAssetTag() string {
	if o == nil || o.SmbiosAssetTag == nil {
		var ret string
		return ret
	}
	return *o.SmbiosAssetTag
}

// GetSmbiosAssetTagOk returns a tuple with the SmbiosAssetTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesConfigVMWare) GetSmbiosAssetTagOk() (*string, bool) {
	if o == nil || o.SmbiosAssetTag == nil {
		return nil, false
	}
	return o.SmbiosAssetTag, true
}

// HasSmbiosAssetTag returns a boolean if a field has been set.
func (o *InstancesConfigVMWare) HasSmbiosAssetTag() bool {
	if o != nil && o.SmbiosAssetTag != nil {
		return true
	}

	return false
}

// SetSmbiosAssetTag gets a reference to the given string and assigns it to the SmbiosAssetTag field.
func (o *InstancesConfigVMWare) SetSmbiosAssetTag(v string) {
	o.SmbiosAssetTag = &v
}

// GetNestedVirtualization returns the NestedVirtualization field value if set, zero value otherwise.
func (o *InstancesConfigVMWare) GetNestedVirtualization() string {
	if o == nil || o.NestedVirtualization == nil {
		var ret string
		return ret
	}
	return *o.NestedVirtualization
}

// GetNestedVirtualizationOk returns a tuple with the NestedVirtualization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesConfigVMWare) GetNestedVirtualizationOk() (*string, bool) {
	if o == nil || o.NestedVirtualization == nil {
		return nil, false
	}
	return o.NestedVirtualization, true
}

// HasNestedVirtualization returns a boolean if a field has been set.
func (o *InstancesConfigVMWare) HasNestedVirtualization() bool {
	if o != nil && o.NestedVirtualization != nil {
		return true
	}

	return false
}

// SetNestedVirtualization gets a reference to the given string and assigns it to the NestedVirtualization field.
func (o *InstancesConfigVMWare) SetNestedVirtualization(v string) {
	o.NestedVirtualization = &v
}

// GetVmwareFolderId returns the VmwareFolderId field value if set, zero value otherwise.
func (o *InstancesConfigVMWare) GetVmwareFolderId() string {
	if o == nil || o.VmwareFolderId == nil {
		var ret string
		return ret
	}
	return *o.VmwareFolderId
}

// GetVmwareFolderIdOk returns a tuple with the VmwareFolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InstancesConfigVMWare) GetVmwareFolderIdOk() (*string, bool) {
	if o == nil || o.VmwareFolderId == nil {
		return nil, false
	}
	return o.VmwareFolderId, true
}

// HasVmwareFolderId returns a boolean if a field has been set.
func (o *InstancesConfigVMWare) HasVmwareFolderId() bool {
	if o != nil && o.VmwareFolderId != nil {
		return true
	}

	return false
}

// SetVmwareFolderId gets a reference to the given string and assigns it to the VmwareFolderId field.
func (o *InstancesConfigVMWare) SetVmwareFolderId(v string) {
	o.VmwareFolderId = &v
}

func (o InstancesConfigVMWare) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NoAgent.IsSet() {
		toSerialize["noAgent"] = o.NoAgent.Get()
	}
	if o.ResourcePoolId != nil {
		toSerialize["resourcePoolId"] = o.ResourcePoolId
	}
	if o.HostId != nil {
		toSerialize["hostId"] = o.HostId
	}
	if o.SmbiosAssetTag != nil {
		toSerialize["smbiosAssetTag"] = o.SmbiosAssetTag
	}
	if o.NestedVirtualization != nil {
		toSerialize["nestedVirtualization"] = o.NestedVirtualization
	}
	if o.VmwareFolderId != nil {
		toSerialize["vmwareFolderId"] = o.VmwareFolderId
	}
	return json.Marshal(toSerialize)
}

type NullableInstancesConfigVMWare struct {
	value *InstancesConfigVMWare
	isSet bool
}

func (v NullableInstancesConfigVMWare) Get() *InstancesConfigVMWare {
	return v.value
}

func (v *NullableInstancesConfigVMWare) Set(val *InstancesConfigVMWare) {
	v.value = val
	v.isSet = true
}

func (v NullableInstancesConfigVMWare) IsSet() bool {
	return v.isSet
}

func (v *NullableInstancesConfigVMWare) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstancesConfigVMWare(val *InstancesConfigVMWare) *NullableInstancesConfigVMWare {
	return &NullableInstancesConfigVMWare{value: val, isSet: true}
}

func (v NullableInstancesConfigVMWare) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstancesConfigVMWare) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


