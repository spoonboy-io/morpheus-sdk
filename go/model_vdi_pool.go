/*
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * API version: 6.2.1
 * Contact: dev@morpheusdata.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// VdiPool struct for VdiPool
type VdiPool struct {
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	MinIdle *int64 `json:"minIdle,omitempty"`
	MaxIdle *int64 `json:"maxIdle,omitempty"`
	InitialPoolSize *int64 `json:"initialPoolSize,omitempty"`
	MaxPoolSize *int64 `json:"maxPoolSize,omitempty"`
	AllocationTimeoutMinutes *int64 `json:"allocationTimeoutMinutes,omitempty"`
	PersistentUser NullableBool `json:"persistentUser,omitempty"`
	Recyclable NullableBool `json:"recyclable,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	AutoCreateLocalUserOnReservation *bool `json:"autoCreateLocalUserOnReservation,omitempty"`
	AllowHypervisorConsole NullableBool `json:"allowHypervisorConsole,omitempty"`
	AllowCopy NullableBool `json:"allowCopy,omitempty"`
	AllowPrinter NullableBool `json:"allowPrinter,omitempty"`
	AllowFileshare NullableBool `json:"allowFileshare,omitempty"`
	GuestConsoleJumpHost NullableString `json:"guestConsoleJumpHost,omitempty"`
	GuestConsoleJumpPort NullableString `json:"guestConsoleJumpPort,omitempty"`
	GuestConsoleJumpUsername NullableString `json:"guestConsoleJumpUsername,omitempty"`
	GuestConsoleJumpPassword NullableString `json:"guestConsoleJumpPassword,omitempty"`
	GuestConsoleJumpKeypair NullableString `json:"guestConsoleJumpKeypair,omitempty"`
	Gateway NullableInlineResponse20082LoadBalancerInstanceSslCert `json:"gateway,omitempty"`
	IconPath *string `json:"iconPath,omitempty"`
	Logo *string `json:"logo,omitempty"`
	Apps *[]InlineResponse20040AppDeployInstance `json:"apps,omitempty"`
	Owner *VdiPoolOwner `json:"owner,omitempty"`
	Config NullableVdiPoolConfig `json:"config,omitempty"`
	Group NullableInlineResponse20082LoadBalancerInstanceSslCert `json:"group,omitempty"`
	Cloud NullableInlineResponse20082LoadBalancerInstanceSslCert `json:"cloud,omitempty"`
	UsedCount *int64 `json:"usedCount,omitempty"`
	ReservedCount *int64 `json:"reservedCount,omitempty"`
	PreparingCount *int64 `json:"preparingCount,omitempty"`
	IdleCount *int64 `json:"idleCount,omitempty"`
	Status *string `json:"status,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
}

// NewVdiPool instantiates a new VdiPool object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVdiPool() *VdiPool {
	this := VdiPool{}
	return &this
}

// NewVdiPoolWithDefaults instantiates a new VdiPool object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVdiPoolWithDefaults() *VdiPool {
	this := VdiPool{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VdiPool) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VdiPool) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *VdiPool) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VdiPool) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VdiPool) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VdiPool) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPool) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPool) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *VdiPool) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *VdiPool) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *VdiPool) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *VdiPool) UnsetDescription() {
	o.Description.Unset()
}

// GetMinIdle returns the MinIdle field value if set, zero value otherwise.
func (o *VdiPool) GetMinIdle() int64 {
	if o == nil || o.MinIdle == nil {
		var ret int64
		return ret
	}
	return *o.MinIdle
}

// GetMinIdleOk returns a tuple with the MinIdle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetMinIdleOk() (*int64, bool) {
	if o == nil || o.MinIdle == nil {
		return nil, false
	}
	return o.MinIdle, true
}

// HasMinIdle returns a boolean if a field has been set.
func (o *VdiPool) HasMinIdle() bool {
	if o != nil && o.MinIdle != nil {
		return true
	}

	return false
}

// SetMinIdle gets a reference to the given int64 and assigns it to the MinIdle field.
func (o *VdiPool) SetMinIdle(v int64) {
	o.MinIdle = &v
}

// GetMaxIdle returns the MaxIdle field value if set, zero value otherwise.
func (o *VdiPool) GetMaxIdle() int64 {
	if o == nil || o.MaxIdle == nil {
		var ret int64
		return ret
	}
	return *o.MaxIdle
}

// GetMaxIdleOk returns a tuple with the MaxIdle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetMaxIdleOk() (*int64, bool) {
	if o == nil || o.MaxIdle == nil {
		return nil, false
	}
	return o.MaxIdle, true
}

// HasMaxIdle returns a boolean if a field has been set.
func (o *VdiPool) HasMaxIdle() bool {
	if o != nil && o.MaxIdle != nil {
		return true
	}

	return false
}

// SetMaxIdle gets a reference to the given int64 and assigns it to the MaxIdle field.
func (o *VdiPool) SetMaxIdle(v int64) {
	o.MaxIdle = &v
}

// GetInitialPoolSize returns the InitialPoolSize field value if set, zero value otherwise.
func (o *VdiPool) GetInitialPoolSize() int64 {
	if o == nil || o.InitialPoolSize == nil {
		var ret int64
		return ret
	}
	return *o.InitialPoolSize
}

// GetInitialPoolSizeOk returns a tuple with the InitialPoolSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetInitialPoolSizeOk() (*int64, bool) {
	if o == nil || o.InitialPoolSize == nil {
		return nil, false
	}
	return o.InitialPoolSize, true
}

// HasInitialPoolSize returns a boolean if a field has been set.
func (o *VdiPool) HasInitialPoolSize() bool {
	if o != nil && o.InitialPoolSize != nil {
		return true
	}

	return false
}

// SetInitialPoolSize gets a reference to the given int64 and assigns it to the InitialPoolSize field.
func (o *VdiPool) SetInitialPoolSize(v int64) {
	o.InitialPoolSize = &v
}

// GetMaxPoolSize returns the MaxPoolSize field value if set, zero value otherwise.
func (o *VdiPool) GetMaxPoolSize() int64 {
	if o == nil || o.MaxPoolSize == nil {
		var ret int64
		return ret
	}
	return *o.MaxPoolSize
}

// GetMaxPoolSizeOk returns a tuple with the MaxPoolSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetMaxPoolSizeOk() (*int64, bool) {
	if o == nil || o.MaxPoolSize == nil {
		return nil, false
	}
	return o.MaxPoolSize, true
}

// HasMaxPoolSize returns a boolean if a field has been set.
func (o *VdiPool) HasMaxPoolSize() bool {
	if o != nil && o.MaxPoolSize != nil {
		return true
	}

	return false
}

// SetMaxPoolSize gets a reference to the given int64 and assigns it to the MaxPoolSize field.
func (o *VdiPool) SetMaxPoolSize(v int64) {
	o.MaxPoolSize = &v
}

// GetAllocationTimeoutMinutes returns the AllocationTimeoutMinutes field value if set, zero value otherwise.
func (o *VdiPool) GetAllocationTimeoutMinutes() int64 {
	if o == nil || o.AllocationTimeoutMinutes == nil {
		var ret int64
		return ret
	}
	return *o.AllocationTimeoutMinutes
}

// GetAllocationTimeoutMinutesOk returns a tuple with the AllocationTimeoutMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetAllocationTimeoutMinutesOk() (*int64, bool) {
	if o == nil || o.AllocationTimeoutMinutes == nil {
		return nil, false
	}
	return o.AllocationTimeoutMinutes, true
}

// HasAllocationTimeoutMinutes returns a boolean if a field has been set.
func (o *VdiPool) HasAllocationTimeoutMinutes() bool {
	if o != nil && o.AllocationTimeoutMinutes != nil {
		return true
	}

	return false
}

// SetAllocationTimeoutMinutes gets a reference to the given int64 and assigns it to the AllocationTimeoutMinutes field.
func (o *VdiPool) SetAllocationTimeoutMinutes(v int64) {
	o.AllocationTimeoutMinutes = &v
}

// GetPersistentUser returns the PersistentUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPool) GetPersistentUser() bool {
	if o == nil || o.PersistentUser.Get() == nil {
		var ret bool
		return ret
	}
	return *o.PersistentUser.Get()
}

// GetPersistentUserOk returns a tuple with the PersistentUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPool) GetPersistentUserOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PersistentUser.Get(), o.PersistentUser.IsSet()
}

// HasPersistentUser returns a boolean if a field has been set.
func (o *VdiPool) HasPersistentUser() bool {
	if o != nil && o.PersistentUser.IsSet() {
		return true
	}

	return false
}

// SetPersistentUser gets a reference to the given NullableBool and assigns it to the PersistentUser field.
func (o *VdiPool) SetPersistentUser(v bool) {
	o.PersistentUser.Set(&v)
}
// SetPersistentUserNil sets the value for PersistentUser to be an explicit nil
func (o *VdiPool) SetPersistentUserNil() {
	o.PersistentUser.Set(nil)
}

// UnsetPersistentUser ensures that no value is present for PersistentUser, not even an explicit nil
func (o *VdiPool) UnsetPersistentUser() {
	o.PersistentUser.Unset()
}

// GetRecyclable returns the Recyclable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPool) GetRecyclable() bool {
	if o == nil || o.Recyclable.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Recyclable.Get()
}

// GetRecyclableOk returns a tuple with the Recyclable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPool) GetRecyclableOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Recyclable.Get(), o.Recyclable.IsSet()
}

// HasRecyclable returns a boolean if a field has been set.
func (o *VdiPool) HasRecyclable() bool {
	if o != nil && o.Recyclable.IsSet() {
		return true
	}

	return false
}

// SetRecyclable gets a reference to the given NullableBool and assigns it to the Recyclable field.
func (o *VdiPool) SetRecyclable(v bool) {
	o.Recyclable.Set(&v)
}
// SetRecyclableNil sets the value for Recyclable to be an explicit nil
func (o *VdiPool) SetRecyclableNil() {
	o.Recyclable.Set(nil)
}

// UnsetRecyclable ensures that no value is present for Recyclable, not even an explicit nil
func (o *VdiPool) UnsetRecyclable() {
	o.Recyclable.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *VdiPool) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *VdiPool) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *VdiPool) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetAutoCreateLocalUserOnReservation returns the AutoCreateLocalUserOnReservation field value if set, zero value otherwise.
func (o *VdiPool) GetAutoCreateLocalUserOnReservation() bool {
	if o == nil || o.AutoCreateLocalUserOnReservation == nil {
		var ret bool
		return ret
	}
	return *o.AutoCreateLocalUserOnReservation
}

// GetAutoCreateLocalUserOnReservationOk returns a tuple with the AutoCreateLocalUserOnReservation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetAutoCreateLocalUserOnReservationOk() (*bool, bool) {
	if o == nil || o.AutoCreateLocalUserOnReservation == nil {
		return nil, false
	}
	return o.AutoCreateLocalUserOnReservation, true
}

// HasAutoCreateLocalUserOnReservation returns a boolean if a field has been set.
func (o *VdiPool) HasAutoCreateLocalUserOnReservation() bool {
	if o != nil && o.AutoCreateLocalUserOnReservation != nil {
		return true
	}

	return false
}

// SetAutoCreateLocalUserOnReservation gets a reference to the given bool and assigns it to the AutoCreateLocalUserOnReservation field.
func (o *VdiPool) SetAutoCreateLocalUserOnReservation(v bool) {
	o.AutoCreateLocalUserOnReservation = &v
}

// GetAllowHypervisorConsole returns the AllowHypervisorConsole field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPool) GetAllowHypervisorConsole() bool {
	if o == nil || o.AllowHypervisorConsole.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AllowHypervisorConsole.Get()
}

// GetAllowHypervisorConsoleOk returns a tuple with the AllowHypervisorConsole field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPool) GetAllowHypervisorConsoleOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AllowHypervisorConsole.Get(), o.AllowHypervisorConsole.IsSet()
}

// HasAllowHypervisorConsole returns a boolean if a field has been set.
func (o *VdiPool) HasAllowHypervisorConsole() bool {
	if o != nil && o.AllowHypervisorConsole.IsSet() {
		return true
	}

	return false
}

// SetAllowHypervisorConsole gets a reference to the given NullableBool and assigns it to the AllowHypervisorConsole field.
func (o *VdiPool) SetAllowHypervisorConsole(v bool) {
	o.AllowHypervisorConsole.Set(&v)
}
// SetAllowHypervisorConsoleNil sets the value for AllowHypervisorConsole to be an explicit nil
func (o *VdiPool) SetAllowHypervisorConsoleNil() {
	o.AllowHypervisorConsole.Set(nil)
}

// UnsetAllowHypervisorConsole ensures that no value is present for AllowHypervisorConsole, not even an explicit nil
func (o *VdiPool) UnsetAllowHypervisorConsole() {
	o.AllowHypervisorConsole.Unset()
}

// GetAllowCopy returns the AllowCopy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPool) GetAllowCopy() bool {
	if o == nil || o.AllowCopy.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AllowCopy.Get()
}

// GetAllowCopyOk returns a tuple with the AllowCopy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPool) GetAllowCopyOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AllowCopy.Get(), o.AllowCopy.IsSet()
}

// HasAllowCopy returns a boolean if a field has been set.
func (o *VdiPool) HasAllowCopy() bool {
	if o != nil && o.AllowCopy.IsSet() {
		return true
	}

	return false
}

// SetAllowCopy gets a reference to the given NullableBool and assigns it to the AllowCopy field.
func (o *VdiPool) SetAllowCopy(v bool) {
	o.AllowCopy.Set(&v)
}
// SetAllowCopyNil sets the value for AllowCopy to be an explicit nil
func (o *VdiPool) SetAllowCopyNil() {
	o.AllowCopy.Set(nil)
}

// UnsetAllowCopy ensures that no value is present for AllowCopy, not even an explicit nil
func (o *VdiPool) UnsetAllowCopy() {
	o.AllowCopy.Unset()
}

// GetAllowPrinter returns the AllowPrinter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPool) GetAllowPrinter() bool {
	if o == nil || o.AllowPrinter.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AllowPrinter.Get()
}

// GetAllowPrinterOk returns a tuple with the AllowPrinter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPool) GetAllowPrinterOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AllowPrinter.Get(), o.AllowPrinter.IsSet()
}

// HasAllowPrinter returns a boolean if a field has been set.
func (o *VdiPool) HasAllowPrinter() bool {
	if o != nil && o.AllowPrinter.IsSet() {
		return true
	}

	return false
}

// SetAllowPrinter gets a reference to the given NullableBool and assigns it to the AllowPrinter field.
func (o *VdiPool) SetAllowPrinter(v bool) {
	o.AllowPrinter.Set(&v)
}
// SetAllowPrinterNil sets the value for AllowPrinter to be an explicit nil
func (o *VdiPool) SetAllowPrinterNil() {
	o.AllowPrinter.Set(nil)
}

// UnsetAllowPrinter ensures that no value is present for AllowPrinter, not even an explicit nil
func (o *VdiPool) UnsetAllowPrinter() {
	o.AllowPrinter.Unset()
}

// GetAllowFileshare returns the AllowFileshare field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPool) GetAllowFileshare() bool {
	if o == nil || o.AllowFileshare.Get() == nil {
		var ret bool
		return ret
	}
	return *o.AllowFileshare.Get()
}

// GetAllowFileshareOk returns a tuple with the AllowFileshare field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPool) GetAllowFileshareOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AllowFileshare.Get(), o.AllowFileshare.IsSet()
}

// HasAllowFileshare returns a boolean if a field has been set.
func (o *VdiPool) HasAllowFileshare() bool {
	if o != nil && o.AllowFileshare.IsSet() {
		return true
	}

	return false
}

// SetAllowFileshare gets a reference to the given NullableBool and assigns it to the AllowFileshare field.
func (o *VdiPool) SetAllowFileshare(v bool) {
	o.AllowFileshare.Set(&v)
}
// SetAllowFileshareNil sets the value for AllowFileshare to be an explicit nil
func (o *VdiPool) SetAllowFileshareNil() {
	o.AllowFileshare.Set(nil)
}

// UnsetAllowFileshare ensures that no value is present for AllowFileshare, not even an explicit nil
func (o *VdiPool) UnsetAllowFileshare() {
	o.AllowFileshare.Unset()
}

// GetGuestConsoleJumpHost returns the GuestConsoleJumpHost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPool) GetGuestConsoleJumpHost() string {
	if o == nil || o.GuestConsoleJumpHost.Get() == nil {
		var ret string
		return ret
	}
	return *o.GuestConsoleJumpHost.Get()
}

// GetGuestConsoleJumpHostOk returns a tuple with the GuestConsoleJumpHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPool) GetGuestConsoleJumpHostOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GuestConsoleJumpHost.Get(), o.GuestConsoleJumpHost.IsSet()
}

// HasGuestConsoleJumpHost returns a boolean if a field has been set.
func (o *VdiPool) HasGuestConsoleJumpHost() bool {
	if o != nil && o.GuestConsoleJumpHost.IsSet() {
		return true
	}

	return false
}

// SetGuestConsoleJumpHost gets a reference to the given NullableString and assigns it to the GuestConsoleJumpHost field.
func (o *VdiPool) SetGuestConsoleJumpHost(v string) {
	o.GuestConsoleJumpHost.Set(&v)
}
// SetGuestConsoleJumpHostNil sets the value for GuestConsoleJumpHost to be an explicit nil
func (o *VdiPool) SetGuestConsoleJumpHostNil() {
	o.GuestConsoleJumpHost.Set(nil)
}

// UnsetGuestConsoleJumpHost ensures that no value is present for GuestConsoleJumpHost, not even an explicit nil
func (o *VdiPool) UnsetGuestConsoleJumpHost() {
	o.GuestConsoleJumpHost.Unset()
}

// GetGuestConsoleJumpPort returns the GuestConsoleJumpPort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPool) GetGuestConsoleJumpPort() string {
	if o == nil || o.GuestConsoleJumpPort.Get() == nil {
		var ret string
		return ret
	}
	return *o.GuestConsoleJumpPort.Get()
}

// GetGuestConsoleJumpPortOk returns a tuple with the GuestConsoleJumpPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPool) GetGuestConsoleJumpPortOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GuestConsoleJumpPort.Get(), o.GuestConsoleJumpPort.IsSet()
}

// HasGuestConsoleJumpPort returns a boolean if a field has been set.
func (o *VdiPool) HasGuestConsoleJumpPort() bool {
	if o != nil && o.GuestConsoleJumpPort.IsSet() {
		return true
	}

	return false
}

// SetGuestConsoleJumpPort gets a reference to the given NullableString and assigns it to the GuestConsoleJumpPort field.
func (o *VdiPool) SetGuestConsoleJumpPort(v string) {
	o.GuestConsoleJumpPort.Set(&v)
}
// SetGuestConsoleJumpPortNil sets the value for GuestConsoleJumpPort to be an explicit nil
func (o *VdiPool) SetGuestConsoleJumpPortNil() {
	o.GuestConsoleJumpPort.Set(nil)
}

// UnsetGuestConsoleJumpPort ensures that no value is present for GuestConsoleJumpPort, not even an explicit nil
func (o *VdiPool) UnsetGuestConsoleJumpPort() {
	o.GuestConsoleJumpPort.Unset()
}

// GetGuestConsoleJumpUsername returns the GuestConsoleJumpUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPool) GetGuestConsoleJumpUsername() string {
	if o == nil || o.GuestConsoleJumpUsername.Get() == nil {
		var ret string
		return ret
	}
	return *o.GuestConsoleJumpUsername.Get()
}

// GetGuestConsoleJumpUsernameOk returns a tuple with the GuestConsoleJumpUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPool) GetGuestConsoleJumpUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GuestConsoleJumpUsername.Get(), o.GuestConsoleJumpUsername.IsSet()
}

// HasGuestConsoleJumpUsername returns a boolean if a field has been set.
func (o *VdiPool) HasGuestConsoleJumpUsername() bool {
	if o != nil && o.GuestConsoleJumpUsername.IsSet() {
		return true
	}

	return false
}

// SetGuestConsoleJumpUsername gets a reference to the given NullableString and assigns it to the GuestConsoleJumpUsername field.
func (o *VdiPool) SetGuestConsoleJumpUsername(v string) {
	o.GuestConsoleJumpUsername.Set(&v)
}
// SetGuestConsoleJumpUsernameNil sets the value for GuestConsoleJumpUsername to be an explicit nil
func (o *VdiPool) SetGuestConsoleJumpUsernameNil() {
	o.GuestConsoleJumpUsername.Set(nil)
}

// UnsetGuestConsoleJumpUsername ensures that no value is present for GuestConsoleJumpUsername, not even an explicit nil
func (o *VdiPool) UnsetGuestConsoleJumpUsername() {
	o.GuestConsoleJumpUsername.Unset()
}

// GetGuestConsoleJumpPassword returns the GuestConsoleJumpPassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPool) GetGuestConsoleJumpPassword() string {
	if o == nil || o.GuestConsoleJumpPassword.Get() == nil {
		var ret string
		return ret
	}
	return *o.GuestConsoleJumpPassword.Get()
}

// GetGuestConsoleJumpPasswordOk returns a tuple with the GuestConsoleJumpPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPool) GetGuestConsoleJumpPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GuestConsoleJumpPassword.Get(), o.GuestConsoleJumpPassword.IsSet()
}

// HasGuestConsoleJumpPassword returns a boolean if a field has been set.
func (o *VdiPool) HasGuestConsoleJumpPassword() bool {
	if o != nil && o.GuestConsoleJumpPassword.IsSet() {
		return true
	}

	return false
}

// SetGuestConsoleJumpPassword gets a reference to the given NullableString and assigns it to the GuestConsoleJumpPassword field.
func (o *VdiPool) SetGuestConsoleJumpPassword(v string) {
	o.GuestConsoleJumpPassword.Set(&v)
}
// SetGuestConsoleJumpPasswordNil sets the value for GuestConsoleJumpPassword to be an explicit nil
func (o *VdiPool) SetGuestConsoleJumpPasswordNil() {
	o.GuestConsoleJumpPassword.Set(nil)
}

// UnsetGuestConsoleJumpPassword ensures that no value is present for GuestConsoleJumpPassword, not even an explicit nil
func (o *VdiPool) UnsetGuestConsoleJumpPassword() {
	o.GuestConsoleJumpPassword.Unset()
}

// GetGuestConsoleJumpKeypair returns the GuestConsoleJumpKeypair field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPool) GetGuestConsoleJumpKeypair() string {
	if o == nil || o.GuestConsoleJumpKeypair.Get() == nil {
		var ret string
		return ret
	}
	return *o.GuestConsoleJumpKeypair.Get()
}

// GetGuestConsoleJumpKeypairOk returns a tuple with the GuestConsoleJumpKeypair field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPool) GetGuestConsoleJumpKeypairOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GuestConsoleJumpKeypair.Get(), o.GuestConsoleJumpKeypair.IsSet()
}

// HasGuestConsoleJumpKeypair returns a boolean if a field has been set.
func (o *VdiPool) HasGuestConsoleJumpKeypair() bool {
	if o != nil && o.GuestConsoleJumpKeypair.IsSet() {
		return true
	}

	return false
}

// SetGuestConsoleJumpKeypair gets a reference to the given NullableString and assigns it to the GuestConsoleJumpKeypair field.
func (o *VdiPool) SetGuestConsoleJumpKeypair(v string) {
	o.GuestConsoleJumpKeypair.Set(&v)
}
// SetGuestConsoleJumpKeypairNil sets the value for GuestConsoleJumpKeypair to be an explicit nil
func (o *VdiPool) SetGuestConsoleJumpKeypairNil() {
	o.GuestConsoleJumpKeypair.Set(nil)
}

// UnsetGuestConsoleJumpKeypair ensures that no value is present for GuestConsoleJumpKeypair, not even an explicit nil
func (o *VdiPool) UnsetGuestConsoleJumpKeypair() {
	o.GuestConsoleJumpKeypair.Unset()
}

// GetGateway returns the Gateway field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPool) GetGateway() InlineResponse20082LoadBalancerInstanceSslCert {
	if o == nil || o.Gateway.Get() == nil {
		var ret InlineResponse20082LoadBalancerInstanceSslCert
		return ret
	}
	return *o.Gateway.Get()
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPool) GetGatewayOk() (*InlineResponse20082LoadBalancerInstanceSslCert, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Gateway.Get(), o.Gateway.IsSet()
}

// HasGateway returns a boolean if a field has been set.
func (o *VdiPool) HasGateway() bool {
	if o != nil && o.Gateway.IsSet() {
		return true
	}

	return false
}

// SetGateway gets a reference to the given NullableInlineResponse20082LoadBalancerInstanceSslCert and assigns it to the Gateway field.
func (o *VdiPool) SetGateway(v InlineResponse20082LoadBalancerInstanceSslCert) {
	o.Gateway.Set(&v)
}
// SetGatewayNil sets the value for Gateway to be an explicit nil
func (o *VdiPool) SetGatewayNil() {
	o.Gateway.Set(nil)
}

// UnsetGateway ensures that no value is present for Gateway, not even an explicit nil
func (o *VdiPool) UnsetGateway() {
	o.Gateway.Unset()
}

// GetIconPath returns the IconPath field value if set, zero value otherwise.
func (o *VdiPool) GetIconPath() string {
	if o == nil || o.IconPath == nil {
		var ret string
		return ret
	}
	return *o.IconPath
}

// GetIconPathOk returns a tuple with the IconPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetIconPathOk() (*string, bool) {
	if o == nil || o.IconPath == nil {
		return nil, false
	}
	return o.IconPath, true
}

// HasIconPath returns a boolean if a field has been set.
func (o *VdiPool) HasIconPath() bool {
	if o != nil && o.IconPath != nil {
		return true
	}

	return false
}

// SetIconPath gets a reference to the given string and assigns it to the IconPath field.
func (o *VdiPool) SetIconPath(v string) {
	o.IconPath = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *VdiPool) GetLogo() string {
	if o == nil || o.Logo == nil {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetLogoOk() (*string, bool) {
	if o == nil || o.Logo == nil {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *VdiPool) HasLogo() bool {
	if o != nil && o.Logo != nil {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *VdiPool) SetLogo(v string) {
	o.Logo = &v
}

// GetApps returns the Apps field value if set, zero value otherwise.
func (o *VdiPool) GetApps() []InlineResponse20040AppDeployInstance {
	if o == nil || o.Apps == nil {
		var ret []InlineResponse20040AppDeployInstance
		return ret
	}
	return *o.Apps
}

// GetAppsOk returns a tuple with the Apps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetAppsOk() (*[]InlineResponse20040AppDeployInstance, bool) {
	if o == nil || o.Apps == nil {
		return nil, false
	}
	return o.Apps, true
}

// HasApps returns a boolean if a field has been set.
func (o *VdiPool) HasApps() bool {
	if o != nil && o.Apps != nil {
		return true
	}

	return false
}

// SetApps gets a reference to the given []InlineResponse20040AppDeployInstance and assigns it to the Apps field.
func (o *VdiPool) SetApps(v []InlineResponse20040AppDeployInstance) {
	o.Apps = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *VdiPool) GetOwner() VdiPoolOwner {
	if o == nil || o.Owner == nil {
		var ret VdiPoolOwner
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetOwnerOk() (*VdiPoolOwner, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *VdiPool) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given VdiPoolOwner and assigns it to the Owner field.
func (o *VdiPool) SetOwner(v VdiPoolOwner) {
	o.Owner = &v
}

// GetConfig returns the Config field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPool) GetConfig() VdiPoolConfig {
	if o == nil || o.Config.Get() == nil {
		var ret VdiPoolConfig
		return ret
	}
	return *o.Config.Get()
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPool) GetConfigOk() (*VdiPoolConfig, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Config.Get(), o.Config.IsSet()
}

// HasConfig returns a boolean if a field has been set.
func (o *VdiPool) HasConfig() bool {
	if o != nil && o.Config.IsSet() {
		return true
	}

	return false
}

// SetConfig gets a reference to the given NullableVdiPoolConfig and assigns it to the Config field.
func (o *VdiPool) SetConfig(v VdiPoolConfig) {
	o.Config.Set(&v)
}
// SetConfigNil sets the value for Config to be an explicit nil
func (o *VdiPool) SetConfigNil() {
	o.Config.Set(nil)
}

// UnsetConfig ensures that no value is present for Config, not even an explicit nil
func (o *VdiPool) UnsetConfig() {
	o.Config.Unset()
}

// GetGroup returns the Group field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPool) GetGroup() InlineResponse20082LoadBalancerInstanceSslCert {
	if o == nil || o.Group.Get() == nil {
		var ret InlineResponse20082LoadBalancerInstanceSslCert
		return ret
	}
	return *o.Group.Get()
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPool) GetGroupOk() (*InlineResponse20082LoadBalancerInstanceSslCert, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Group.Get(), o.Group.IsSet()
}

// HasGroup returns a boolean if a field has been set.
func (o *VdiPool) HasGroup() bool {
	if o != nil && o.Group.IsSet() {
		return true
	}

	return false
}

// SetGroup gets a reference to the given NullableInlineResponse20082LoadBalancerInstanceSslCert and assigns it to the Group field.
func (o *VdiPool) SetGroup(v InlineResponse20082LoadBalancerInstanceSslCert) {
	o.Group.Set(&v)
}
// SetGroupNil sets the value for Group to be an explicit nil
func (o *VdiPool) SetGroupNil() {
	o.Group.Set(nil)
}

// UnsetGroup ensures that no value is present for Group, not even an explicit nil
func (o *VdiPool) UnsetGroup() {
	o.Group.Unset()
}

// GetCloud returns the Cloud field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VdiPool) GetCloud() InlineResponse20082LoadBalancerInstanceSslCert {
	if o == nil || o.Cloud.Get() == nil {
		var ret InlineResponse20082LoadBalancerInstanceSslCert
		return ret
	}
	return *o.Cloud.Get()
}

// GetCloudOk returns a tuple with the Cloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VdiPool) GetCloudOk() (*InlineResponse20082LoadBalancerInstanceSslCert, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Cloud.Get(), o.Cloud.IsSet()
}

// HasCloud returns a boolean if a field has been set.
func (o *VdiPool) HasCloud() bool {
	if o != nil && o.Cloud.IsSet() {
		return true
	}

	return false
}

// SetCloud gets a reference to the given NullableInlineResponse20082LoadBalancerInstanceSslCert and assigns it to the Cloud field.
func (o *VdiPool) SetCloud(v InlineResponse20082LoadBalancerInstanceSslCert) {
	o.Cloud.Set(&v)
}
// SetCloudNil sets the value for Cloud to be an explicit nil
func (o *VdiPool) SetCloudNil() {
	o.Cloud.Set(nil)
}

// UnsetCloud ensures that no value is present for Cloud, not even an explicit nil
func (o *VdiPool) UnsetCloud() {
	o.Cloud.Unset()
}

// GetUsedCount returns the UsedCount field value if set, zero value otherwise.
func (o *VdiPool) GetUsedCount() int64 {
	if o == nil || o.UsedCount == nil {
		var ret int64
		return ret
	}
	return *o.UsedCount
}

// GetUsedCountOk returns a tuple with the UsedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetUsedCountOk() (*int64, bool) {
	if o == nil || o.UsedCount == nil {
		return nil, false
	}
	return o.UsedCount, true
}

// HasUsedCount returns a boolean if a field has been set.
func (o *VdiPool) HasUsedCount() bool {
	if o != nil && o.UsedCount != nil {
		return true
	}

	return false
}

// SetUsedCount gets a reference to the given int64 and assigns it to the UsedCount field.
func (o *VdiPool) SetUsedCount(v int64) {
	o.UsedCount = &v
}

// GetReservedCount returns the ReservedCount field value if set, zero value otherwise.
func (o *VdiPool) GetReservedCount() int64 {
	if o == nil || o.ReservedCount == nil {
		var ret int64
		return ret
	}
	return *o.ReservedCount
}

// GetReservedCountOk returns a tuple with the ReservedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetReservedCountOk() (*int64, bool) {
	if o == nil || o.ReservedCount == nil {
		return nil, false
	}
	return o.ReservedCount, true
}

// HasReservedCount returns a boolean if a field has been set.
func (o *VdiPool) HasReservedCount() bool {
	if o != nil && o.ReservedCount != nil {
		return true
	}

	return false
}

// SetReservedCount gets a reference to the given int64 and assigns it to the ReservedCount field.
func (o *VdiPool) SetReservedCount(v int64) {
	o.ReservedCount = &v
}

// GetPreparingCount returns the PreparingCount field value if set, zero value otherwise.
func (o *VdiPool) GetPreparingCount() int64 {
	if o == nil || o.PreparingCount == nil {
		var ret int64
		return ret
	}
	return *o.PreparingCount
}

// GetPreparingCountOk returns a tuple with the PreparingCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetPreparingCountOk() (*int64, bool) {
	if o == nil || o.PreparingCount == nil {
		return nil, false
	}
	return o.PreparingCount, true
}

// HasPreparingCount returns a boolean if a field has been set.
func (o *VdiPool) HasPreparingCount() bool {
	if o != nil && o.PreparingCount != nil {
		return true
	}

	return false
}

// SetPreparingCount gets a reference to the given int64 and assigns it to the PreparingCount field.
func (o *VdiPool) SetPreparingCount(v int64) {
	o.PreparingCount = &v
}

// GetIdleCount returns the IdleCount field value if set, zero value otherwise.
func (o *VdiPool) GetIdleCount() int64 {
	if o == nil || o.IdleCount == nil {
		var ret int64
		return ret
	}
	return *o.IdleCount
}

// GetIdleCountOk returns a tuple with the IdleCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetIdleCountOk() (*int64, bool) {
	if o == nil || o.IdleCount == nil {
		return nil, false
	}
	return o.IdleCount, true
}

// HasIdleCount returns a boolean if a field has been set.
func (o *VdiPool) HasIdleCount() bool {
	if o != nil && o.IdleCount != nil {
		return true
	}

	return false
}

// SetIdleCount gets a reference to the given int64 and assigns it to the IdleCount field.
func (o *VdiPool) SetIdleCount(v int64) {
	o.IdleCount = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *VdiPool) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *VdiPool) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *VdiPool) SetStatus(v string) {
	o.Status = &v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *VdiPool) GetDateCreated() time.Time {
	if o == nil || o.DateCreated == nil {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *VdiPool) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *VdiPool) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *VdiPool) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VdiPool) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *VdiPool) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *VdiPool) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

func (o VdiPool) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.MinIdle != nil {
		toSerialize["minIdle"] = o.MinIdle
	}
	if o.MaxIdle != nil {
		toSerialize["maxIdle"] = o.MaxIdle
	}
	if o.InitialPoolSize != nil {
		toSerialize["initialPoolSize"] = o.InitialPoolSize
	}
	if o.MaxPoolSize != nil {
		toSerialize["maxPoolSize"] = o.MaxPoolSize
	}
	if o.AllocationTimeoutMinutes != nil {
		toSerialize["allocationTimeoutMinutes"] = o.AllocationTimeoutMinutes
	}
	if o.PersistentUser.IsSet() {
		toSerialize["persistentUser"] = o.PersistentUser.Get()
	}
	if o.Recyclable.IsSet() {
		toSerialize["recyclable"] = o.Recyclable.Get()
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.AutoCreateLocalUserOnReservation != nil {
		toSerialize["autoCreateLocalUserOnReservation"] = o.AutoCreateLocalUserOnReservation
	}
	if o.AllowHypervisorConsole.IsSet() {
		toSerialize["allowHypervisorConsole"] = o.AllowHypervisorConsole.Get()
	}
	if o.AllowCopy.IsSet() {
		toSerialize["allowCopy"] = o.AllowCopy.Get()
	}
	if o.AllowPrinter.IsSet() {
		toSerialize["allowPrinter"] = o.AllowPrinter.Get()
	}
	if o.AllowFileshare.IsSet() {
		toSerialize["allowFileshare"] = o.AllowFileshare.Get()
	}
	if o.GuestConsoleJumpHost.IsSet() {
		toSerialize["guestConsoleJumpHost"] = o.GuestConsoleJumpHost.Get()
	}
	if o.GuestConsoleJumpPort.IsSet() {
		toSerialize["guestConsoleJumpPort"] = o.GuestConsoleJumpPort.Get()
	}
	if o.GuestConsoleJumpUsername.IsSet() {
		toSerialize["guestConsoleJumpUsername"] = o.GuestConsoleJumpUsername.Get()
	}
	if o.GuestConsoleJumpPassword.IsSet() {
		toSerialize["guestConsoleJumpPassword"] = o.GuestConsoleJumpPassword.Get()
	}
	if o.GuestConsoleJumpKeypair.IsSet() {
		toSerialize["guestConsoleJumpKeypair"] = o.GuestConsoleJumpKeypair.Get()
	}
	if o.Gateway.IsSet() {
		toSerialize["gateway"] = o.Gateway.Get()
	}
	if o.IconPath != nil {
		toSerialize["iconPath"] = o.IconPath
	}
	if o.Logo != nil {
		toSerialize["logo"] = o.Logo
	}
	if o.Apps != nil {
		toSerialize["apps"] = o.Apps
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.Config.IsSet() {
		toSerialize["config"] = o.Config.Get()
	}
	if o.Group.IsSet() {
		toSerialize["group"] = o.Group.Get()
	}
	if o.Cloud.IsSet() {
		toSerialize["cloud"] = o.Cloud.Get()
	}
	if o.UsedCount != nil {
		toSerialize["usedCount"] = o.UsedCount
	}
	if o.ReservedCount != nil {
		toSerialize["reservedCount"] = o.ReservedCount
	}
	if o.PreparingCount != nil {
		toSerialize["preparingCount"] = o.PreparingCount
	}
	if o.IdleCount != nil {
		toSerialize["idleCount"] = o.IdleCount
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	return json.Marshal(toSerialize)
}

type NullableVdiPool struct {
	value *VdiPool
	isSet bool
}

func (v NullableVdiPool) Get() *VdiPool {
	return v.value
}

func (v *NullableVdiPool) Set(val *VdiPool) {
	v.value = val
	v.isSet = true
}

func (v NullableVdiPool) IsSet() bool {
	return v.isSet
}

func (v *NullableVdiPool) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVdiPool(val *VdiPool) *NullableVdiPool {
	return &NullableVdiPool{value: val, isSet: true}
}

func (v NullableVdiPool) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVdiPool) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


