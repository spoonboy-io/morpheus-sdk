/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 6.1.1
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListCheckApps200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListCheckApps200Response{}

// ListCheckApps200Response struct for ListCheckApps200Response
type ListCheckApps200Response struct {
	Meta *MetaMeta `json:"meta,omitempty"`
	MonitorApps []CheckApp `json:"monitorApps,omitempty"`
}

// NewListCheckApps200Response instantiates a new ListCheckApps200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListCheckApps200Response() *ListCheckApps200Response {
	this := ListCheckApps200Response{}
	return &this
}

// NewListCheckApps200ResponseWithDefaults instantiates a new ListCheckApps200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListCheckApps200ResponseWithDefaults() *ListCheckApps200Response {
	this := ListCheckApps200Response{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ListCheckApps200Response) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCheckApps200Response) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ListCheckApps200Response) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *ListCheckApps200Response) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetMonitorApps returns the MonitorApps field value if set, zero value otherwise.
func (o *ListCheckApps200Response) GetMonitorApps() []CheckApp {
	if o == nil || IsNil(o.MonitorApps) {
		var ret []CheckApp
		return ret
	}
	return o.MonitorApps
}

// GetMonitorAppsOk returns a tuple with the MonitorApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCheckApps200Response) GetMonitorAppsOk() ([]CheckApp, bool) {
	if o == nil || IsNil(o.MonitorApps) {
		return nil, false
	}
	return o.MonitorApps, true
}

// HasMonitorApps returns a boolean if a field has been set.
func (o *ListCheckApps200Response) HasMonitorApps() bool {
	if o != nil && !IsNil(o.MonitorApps) {
		return true
	}

	return false
}

// SetMonitorApps gets a reference to the given []CheckApp and assigns it to the MonitorApps field.
func (o *ListCheckApps200Response) SetMonitorApps(v []CheckApp) {
	o.MonitorApps = v
}

func (o ListCheckApps200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListCheckApps200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.MonitorApps) {
		toSerialize["monitorApps"] = o.MonitorApps
	}
	return toSerialize, nil
}

type NullableListCheckApps200Response struct {
	value *ListCheckApps200Response
	isSet bool
}

func (v NullableListCheckApps200Response) Get() *ListCheckApps200Response {
	return v.value
}

func (v *NullableListCheckApps200Response) Set(val *ListCheckApps200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListCheckApps200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListCheckApps200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListCheckApps200Response(val *ListCheckApps200Response) *NullableListCheckApps200Response {
	return &NullableListCheckApps200Response{value: val, isSet: true}
}

func (v NullableListCheckApps200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListCheckApps200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


