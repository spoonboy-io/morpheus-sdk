#
# Morpheus API
# Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
# Version: 6.2.1
# Contact: dev@morpheusdata.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER AbortedClients
No description available.
.PARAMETER AbortedConnects
No description available.
.PARAMETER BinlogSnapshotFile
No description available.
.PARAMETER BinlogSnapshotPosition
No description available.
.PARAMETER BinlogCacheDiskUse
No description available.
.PARAMETER BinlogCacheUse
No description available.
.PARAMETER BinlogSnapshotGtidExecuted
No description available.
.PARAMETER BinlogStmtCacheDiskUse
No description available.
.PARAMETER BinlogStmtCacheUse
No description available.
.PARAMETER BytesReceived
No description available.
.PARAMETER BytesSent
No description available.
.PARAMETER ComAdminCommands
No description available.
.PARAMETER ComAssignToKeycache
No description available.
.PARAMETER ComAlterDb
No description available.
.PARAMETER ComAlterDbUpgrade
No description available.
.PARAMETER ComAlterEvent
No description available.
.PARAMETER ComAlterFunction
No description available.
.PARAMETER ComAlterInstance
No description available.
.PARAMETER ComAlterProcedure
No description available.
.PARAMETER ComAlterServer
No description available.
.PARAMETER ComAlterTable
No description available.
.PARAMETER ComAlterTablespace
No description available.
.PARAMETER ComAlterUser
No description available.
.PARAMETER ComAnalyze
No description available.
.PARAMETER ComBegin
No description available.
.PARAMETER ComBinlog
No description available.
.PARAMETER ComCallProcedure
No description available.
.PARAMETER ComChangeDb
No description available.
.PARAMETER ComChangeMaster
No description available.
.PARAMETER ComChangeReplFilter
No description available.
.PARAMETER ComCheck
No description available.
.PARAMETER ComChecksum
No description available.
.PARAMETER ComCommit
No description available.
.PARAMETER ComCreateCompressionDictionary
No description available.
.PARAMETER ComCreateDb
No description available.
.PARAMETER ComCreateEvent
No description available.
.PARAMETER ComCreateFunction
No description available.
.PARAMETER ComCreateIndex
No description available.
.PARAMETER ComCreateProcedure
No description available.
.PARAMETER ComCreateServer
No description available.
.PARAMETER ComCreateTable
No description available.
.PARAMETER ComCreateTrigger
No description available.
.PARAMETER ComCreateUdf
No description available.
.PARAMETER ComCreateUser
No description available.
.PARAMETER ComCreateView
No description available.
.PARAMETER ComDeallocSql
No description available.
.PARAMETER ComDelete
No description available.
.PARAMETER ComDeleteMulti
No description available.
.PARAMETER ComDo
No description available.
.PARAMETER ComDropCompressionDictionary
No description available.
.PARAMETER ComDropDb
No description available.
.PARAMETER ComDropEvent
No description available.
.PARAMETER ComDropFunction
No description available.
.PARAMETER ComDropIndex
No description available.
.PARAMETER ComDropProcedure
No description available.
.PARAMETER ComDropServer
No description available.
.PARAMETER ComDropTable
No description available.
.PARAMETER ComDropTrigger
No description available.
.PARAMETER ComDropUser
No description available.
.PARAMETER ComDropView
No description available.
.PARAMETER ComEmptyQuery
No description available.
.PARAMETER ComExecuteSql
No description available.
.PARAMETER ComExplainOther
No description available.
.PARAMETER ComFlush
No description available.
.PARAMETER ComGetDiagnostics
No description available.
.PARAMETER ComGrant
No description available.
.PARAMETER ComHaClose
No description available.
.PARAMETER ComHaOpen
No description available.
.PARAMETER ComHaRead
No description available.
.PARAMETER ComHelp
No description available.
.PARAMETER ComInsert
No description available.
.PARAMETER ComInsertSelect
No description available.
.PARAMETER ComInstallPlugin
No description available.
.PARAMETER ComKill
No description available.
.PARAMETER ComLoad
No description available.
.PARAMETER ComLockTables
No description available.
.PARAMETER ComLockTablesForBackup
No description available.
.PARAMETER ComLockBinlogForBackup
No description available.
.PARAMETER ComOptimize
No description available.
.PARAMETER ComPreloadKeys
No description available.
.PARAMETER ComPrepareSql
No description available.
.PARAMETER ComPurge
No description available.
.PARAMETER ComPurgeBeforeDate
No description available.
.PARAMETER ComReleaseSavepoint
No description available.
.PARAMETER ComRenameTable
No description available.
.PARAMETER ComRenameUser
No description available.
.PARAMETER ComRepair
No description available.
.PARAMETER ComReplace
No description available.
.PARAMETER ComReplaceSelect
No description available.
.PARAMETER ComReset
No description available.
.PARAMETER ComResignal
No description available.
.PARAMETER ComRevoke
No description available.
.PARAMETER ComRevokeAll
No description available.
.PARAMETER ComRollback
No description available.
.PARAMETER ComRollbackToSavepoint
No description available.
.PARAMETER ComSavepoint
No description available.
.PARAMETER ComSelect
No description available.
.PARAMETER ComSetOption
No description available.
.PARAMETER ComSignal
No description available.
.PARAMETER ComShowBinlogEvents
No description available.
.PARAMETER ComShowBinlogs
No description available.
.PARAMETER ComShowCharsets
No description available.
.PARAMETER ComShowClientStatistics
No description available.
.PARAMETER ComShowCollations
No description available.
.PARAMETER ComShowCreateDb
No description available.
.PARAMETER ComShowCreateEvent
No description available.
.PARAMETER ComShowCreateFunc
No description available.
.PARAMETER ComShowCreateProc
No description available.
.PARAMETER ComShowCreateTable
No description available.
.PARAMETER ComShowCreateTrigger
No description available.
.PARAMETER ComShowDatabases
No description available.
.PARAMETER ComShowEngineLogs
No description available.
.PARAMETER ComShowEngineMutex
No description available.
.PARAMETER ComShowEngineStatus
No description available.
.PARAMETER ComShowEvents
No description available.
.PARAMETER ComShowErrors
No description available.
.PARAMETER ComShowFields
No description available.
.PARAMETER ComShowFunctionCode
No description available.
.PARAMETER ComShowFunctionStatus
No description available.
.PARAMETER ComShowGrants
No description available.
.PARAMETER ComShowIndexStatistics
No description available.
.PARAMETER ComShowKeys
No description available.
.PARAMETER ComShowMasterStatus
No description available.
.PARAMETER ComShowOpenTables
No description available.
.PARAMETER ComShowPlugins
No description available.
.PARAMETER ComShowPrivileges
No description available.
.PARAMETER ComShowProcedureCode
No description available.
.PARAMETER ComShowProcedureStatus
No description available.
.PARAMETER ComShowProcesslist
No description available.
.PARAMETER ComShowProfile
No description available.
.PARAMETER ComShowProfiles
No description available.
.PARAMETER ComShowRelaylogEvents
No description available.
.PARAMETER ComShowSlaveHosts
No description available.
.PARAMETER ComShowSlaveStatus
No description available.
.PARAMETER ComShowStatus
No description available.
.PARAMETER ComShowStorageEngines
No description available.
.PARAMETER ComShowTableStatistics
No description available.
.PARAMETER ComShowTableStatus
No description available.
.PARAMETER ComShowTables
No description available.
.PARAMETER ComShowThreadStatistics
No description available.
.PARAMETER ComShowTriggers
No description available.
.PARAMETER ComShowUserStatistics
No description available.
.PARAMETER ComShowVariables
No description available.
.PARAMETER ComShowWarnings
No description available.
.PARAMETER ComShowCreateUser
No description available.
.PARAMETER ComShutdown
No description available.
.PARAMETER ComSlaveStart
No description available.
.PARAMETER ComSlaveStop
No description available.
.PARAMETER ComGroupReplicationStart
No description available.
.PARAMETER ComGroupReplicationStop
No description available.
.PARAMETER ComStmtExecute
No description available.
.PARAMETER ComStmtClose
No description available.
.PARAMETER ComStmtFetch
No description available.
.PARAMETER ComStmtPrepare
No description available.
.PARAMETER ComStmtReset
No description available.
.PARAMETER ComStmtSendLongData
No description available.
.PARAMETER ComTruncate
No description available.
.PARAMETER ComUninstallPlugin
No description available.
.PARAMETER ComUnlockBinlog
No description available.
.PARAMETER ComUnlockTables
No description available.
.PARAMETER ComUpdate
No description available.
.PARAMETER ComUpdateMulti
No description available.
.PARAMETER ComXaCommit
No description available.
.PARAMETER ComXaEnd
No description available.
.PARAMETER ComXaPrepare
No description available.
.PARAMETER ComXaRecover
No description available.
.PARAMETER ComXaRollback
No description available.
.PARAMETER ComXaStart
No description available.
.PARAMETER ComStmtReprepare
No description available.
.PARAMETER Compression
No description available.
.PARAMETER ConnectionErrorsAccept
No description available.
.PARAMETER ConnectionErrorsInternal
No description available.
.PARAMETER ConnectionErrorsMaxConnections
No description available.
.PARAMETER ConnectionErrorsPeerAddress
No description available.
.PARAMETER ConnectionErrorsSelect
No description available.
.PARAMETER ConnectionErrorsTcpwrap
No description available.
.PARAMETER Connections
No description available.
.PARAMETER CreatedTmpDiskTables
No description available.
.PARAMETER CreatedTmpFiles
No description available.
.PARAMETER CreatedTmpTables
No description available.
.PARAMETER DelayedErrors
No description available.
.PARAMETER DelayedInsertThreads
No description available.
.PARAMETER DelayedWrites
No description available.
.PARAMETER FlushCommands
No description available.
.PARAMETER HandlerCommit
No description available.
.PARAMETER HandlerDelete
No description available.
.PARAMETER HandlerDiscover
No description available.
.PARAMETER HandlerExternalLock
No description available.
.PARAMETER HandlerMrrInit
No description available.
.PARAMETER HandlerPrepare
No description available.
.PARAMETER HandlerReadFirst
No description available.
.PARAMETER HandlerReadKey
No description available.
.PARAMETER HandlerReadLast
No description available.
.PARAMETER HandlerReadNext
No description available.
.PARAMETER HandlerReadPrev
No description available.
.PARAMETER HandlerReadRnd
No description available.
.PARAMETER HandlerReadRndNext
No description available.
.PARAMETER HandlerRollback
No description available.
.PARAMETER HandlerSavepoint
No description available.
.PARAMETER HandlerSavepointRollback
No description available.
.PARAMETER HandlerUpdate
No description available.
.PARAMETER HandlerWrite
No description available.
.PARAMETER InnodbBackgroundLogSync
No description available.
.PARAMETER InnodbBufferPoolDumpStatus
No description available.
.PARAMETER InnodbBufferPoolLoadStatus
No description available.
.PARAMETER InnodbBufferPoolResizeStatus
No description available.
.PARAMETER InnodbBufferPoolPagesData
No description available.
.PARAMETER InnodbBufferPoolBytesData
No description available.
.PARAMETER InnodbBufferPoolPagesDirty
No description available.
.PARAMETER InnodbBufferPoolBytesDirty
No description available.
.PARAMETER InnodbBufferPoolPagesFlushed
No description available.
.PARAMETER InnodbBufferPoolPagesFree
No description available.
.PARAMETER InnodbBufferPoolPagesLRUFlushed
No description available.
.PARAMETER InnodbBufferPoolPagesMadeNotYoung
No description available.
.PARAMETER InnodbBufferPoolPagesMadeYoung
No description available.
.PARAMETER InnodbBufferPoolPagesMisc
No description available.
.PARAMETER InnodbBufferPoolPagesOld
No description available.
.PARAMETER InnodbBufferPoolPagesTotal
No description available.
.PARAMETER InnodbBufferPoolReadAheadRnd
No description available.
.PARAMETER InnodbBufferPoolReadAhead
No description available.
.PARAMETER InnodbBufferPoolReadAheadEvicted
No description available.
.PARAMETER InnodbBufferPoolReadRequests
No description available.
.PARAMETER InnodbBufferPoolReads
No description available.
.PARAMETER InnodbBufferPoolWaitFree
No description available.
.PARAMETER InnodbBufferPoolWriteRequests
No description available.
.PARAMETER InnodbCheckpointAge
No description available.
.PARAMETER InnodbCheckpointMaxAge
No description available.
.PARAMETER InnodbDataFsyncs
No description available.
.PARAMETER InnodbDataPendingFsyncs
No description available.
.PARAMETER InnodbDataPendingReads
No description available.
.PARAMETER InnodbDataPendingWrites
No description available.
.PARAMETER InnodbDataRead
No description available.
.PARAMETER InnodbDataReads
No description available.
.PARAMETER InnodbDataWrites
No description available.
.PARAMETER InnodbDataWritten
No description available.
.PARAMETER InnodbDblwrPagesWritten
No description available.
.PARAMETER InnodbDblwrWrites
No description available.
.PARAMETER InnodbIbufFreeList
No description available.
.PARAMETER InnodbIbufSegmentSize
No description available.
.PARAMETER InnodbLogWaits
No description available.
.PARAMETER InnodbLogWriteRequests
No description available.
.PARAMETER InnodbLogWrites
No description available.
.PARAMETER InnodbLsnCurrent
No description available.
.PARAMETER InnodbLsnFlushed
No description available.
.PARAMETER InnodbLsnLastCheckpoint
No description available.
.PARAMETER InnodbMasterThreadActiveLoops
No description available.
.PARAMETER InnodbMasterThreadIdleLoops
No description available.
.PARAMETER InnodbMaxTrxId
No description available.
.PARAMETER InnodbMemAdaptiveHash
No description available.
.PARAMETER InnodbMemDictionary
No description available.
.PARAMETER InnodbOldestViewLowLimitTrxId
No description available.
.PARAMETER InnodbOsLogFsyncs
No description available.
.PARAMETER InnodbOsLogPendingFsyncs
No description available.
.PARAMETER InnodbOsLogPendingWrites
No description available.
.PARAMETER InnodbOsLogWritten
No description available.
.PARAMETER InnodbPageSize
No description available.
.PARAMETER InnodbPagesCreated
No description available.
.PARAMETER InnodbPagesRead
No description available.
.PARAMETER InnodbPages0Read
No description available.
.PARAMETER InnodbPagesWritten
No description available.
.PARAMETER InnodbPurgeTrxId
No description available.
.PARAMETER InnodbPurgeUndoNo
No description available.
.PARAMETER InnodbRowLockCurrentWaits
No description available.
.PARAMETER InnodbRowLockTime
No description available.
.PARAMETER InnodbRowLockTimeAvg
No description available.
.PARAMETER InnodbRowLockTimeMax
No description available.
.PARAMETER InnodbRowLockWaits
No description available.
.PARAMETER InnodbRowsDeleted
No description available.
.PARAMETER InnodbRowsInserted
No description available.
.PARAMETER InnodbRowsRead
No description available.
.PARAMETER InnodbRowsUpdated
No description available.
.PARAMETER InnodbNumOpenFiles
No description available.
.PARAMETER InnodbTruncatedStatusWrites
No description available.
.PARAMETER InnodbAvailableUndoLogs
No description available.
.PARAMETER InnodbSecondaryIndexTriggeredClusterReads
No description available.
.PARAMETER InnodbSecondaryIndexTriggeredClusterReadsAvoided
No description available.
.PARAMETER InnodbBufferedAioSubmitted
No description available.
.PARAMETER InnodbScanPagesContiguous
No description available.
.PARAMETER InnodbScanPagesDisjointed
No description available.
.PARAMETER InnodbScanPagesTotalSeekDistance
No description available.
.PARAMETER InnodbScanDataSize
No description available.
.PARAMETER InnodbScanDeletedRecsSize
No description available.
.PARAMETER InnodbScrubBackgroundPageReorganizations
No description available.
.PARAMETER InnodbScrubBackgroundPageSplits
No description available.
.PARAMETER InnodbScrubBackgroundPageSplitFailuresUnderflow
No description available.
.PARAMETER InnodbScrubBackgroundPageSplitFailuresOutOfFilespace
No description available.
.PARAMETER InnodbScrubBackgroundPageSplitFailuresMissingIndex
No description available.
.PARAMETER InnodbScrubBackgroundPageSplitFailuresUnknown
No description available.
.PARAMETER InnodbScrubLog
No description available.
.PARAMETER InnodbEncryptionRotationPagesReadFromCache
No description available.
.PARAMETER InnodbEncryptionRotationPagesReadFromDisk
No description available.
.PARAMETER InnodbEncryptionRotationPagesModified
No description available.
.PARAMETER InnodbEncryptionRotationPagesFlushed
No description available.
.PARAMETER InnodbEncryptionRotationEstimatedIops
No description available.
.PARAMETER InnodbEncryptionKeyRotationListLength
No description available.
.PARAMETER InnodbEncryptionNMergeBlocksEncrypted
No description available.
.PARAMETER InnodbEncryptionNMergeBlocksDecrypted
No description available.
.PARAMETER InnodbEncryptionNRowlogBlocksEncrypted
No description available.
.PARAMETER InnodbEncryptionNRowlogBlocksDecrypted
No description available.
.PARAMETER InnodbNumPagesEncrypted
No description available.
.PARAMETER InnodbNumPagesDecrypted
No description available.
.PARAMETER InnodbEncryptionRedoKeyVersion
No description available.
.PARAMETER KeyBlocksNotFlushed
No description available.
.PARAMETER KeyBlocksUnused
No description available.
.PARAMETER KeyBlocksUsed
No description available.
.PARAMETER KeyReadRequests
No description available.
.PARAMETER KeyReads
No description available.
.PARAMETER KeyWriteRequests
No description available.
.PARAMETER KeyWrites
No description available.
.PARAMETER LastQueryCost
No description available.
.PARAMETER LastQueryPartialPlans
No description available.
.PARAMETER LockedConnects
No description available.
.PARAMETER MaxExecutionTimeExceeded
No description available.
.PARAMETER MaxExecutionTimeSet
No description available.
.PARAMETER MaxExecutionTimeSetFailed
No description available.
.PARAMETER MaxUsedConnections
No description available.
.PARAMETER MaxUsedConnectionsTime
No description available.
.PARAMETER NotFlushedDelayedRows
No description available.
.PARAMETER OngoingAnonymousTransactionCount
No description available.
.PARAMETER OpenFiles
No description available.
.PARAMETER OpenStreams
No description available.
.PARAMETER OpenTableDefinitions
No description available.
.PARAMETER OpenTables
No description available.
.PARAMETER OpenedFiles
No description available.
.PARAMETER OpenedTableDefinitions
No description available.
.PARAMETER OpenedTables
No description available.
.PARAMETER PerformanceSchemaAccountsLost
No description available.
.PARAMETER PerformanceSchemaCondClassesLost
No description available.
.PARAMETER PerformanceSchemaCondInstancesLost
No description available.
.PARAMETER PerformanceSchemaDigestLost
No description available.
.PARAMETER PerformanceSchemaFileClassesLost
No description available.
.PARAMETER PerformanceSchemaFileHandlesLost
No description available.
.PARAMETER PerformanceSchemaFileInstancesLost
No description available.
.PARAMETER PerformanceSchemaHostsLost
No description available.
.PARAMETER PerformanceSchemaIndexStatLost
No description available.
.PARAMETER PerformanceSchemaLockerLost
No description available.
.PARAMETER PerformanceSchemaMemoryClassesLost
No description available.
.PARAMETER PerformanceSchemaMetadataLockLost
No description available.
.PARAMETER PerformanceSchemaMutexClassesLost
No description available.
.PARAMETER PerformanceSchemaMutexInstancesLost
No description available.
.PARAMETER PerformanceSchemaNestedStatementLost
No description available.
.PARAMETER PerformanceSchemaPreparedStatementsLost
No description available.
.PARAMETER PerformanceSchemaProgramLost
No description available.
.PARAMETER PerformanceSchemaRwlockClassesLost
No description available.
.PARAMETER PerformanceSchemaRwlockInstancesLost
No description available.
.PARAMETER PerformanceSchemaSessionConnectAttrsLost
No description available.
.PARAMETER PerformanceSchemaSocketClassesLost
No description available.
.PARAMETER PerformanceSchemaSocketInstancesLost
No description available.
.PARAMETER PerformanceSchemaStageClassesLost
No description available.
.PARAMETER PerformanceSchemaStatementClassesLost
No description available.
.PARAMETER PerformanceSchemaTableHandlesLost
No description available.
.PARAMETER PerformanceSchemaTableInstancesLost
No description available.
.PARAMETER PerformanceSchemaTableLockStatLost
No description available.
.PARAMETER PerformanceSchemaThreadClassesLost
No description available.
.PARAMETER PerformanceSchemaThreadInstancesLost
No description available.
.PARAMETER PerformanceSchemaUsersLost
No description available.
.PARAMETER PreparedStmtCount
No description available.
.PARAMETER QcacheFreeBlocks
No description available.
.PARAMETER QcacheFreeMemory
No description available.
.PARAMETER QcacheHits
No description available.
.PARAMETER QcacheInserts
No description available.
.PARAMETER QcacheLowmemPrunes
No description available.
.PARAMETER QcacheNotCached
No description available.
.PARAMETER QcacheQueriesInCache
No description available.
.PARAMETER QcacheTotalBlocks
No description available.
.PARAMETER Queries
No description available.
.PARAMETER Questions
No description available.
.PARAMETER RsaPublicKey
No description available.
.PARAMETER SelectFullJoin
No description available.
.PARAMETER SelectFullRangeJoin
No description available.
.PARAMETER SelectRange
No description available.
.PARAMETER SelectRangeCheck
No description available.
.PARAMETER SelectScan
No description available.
.PARAMETER SlaveOpenTempTables
No description available.
.PARAMETER SlowLaunchThreads
No description available.
.PARAMETER SlowQueries
No description available.
.PARAMETER SortMergePasses
No description available.
.PARAMETER SortRange
No description available.
.PARAMETER SortRows
No description available.
.PARAMETER SortScan
No description available.
.PARAMETER SslAcceptRenegotiates
No description available.
.PARAMETER SslAccepts
No description available.
.PARAMETER SslCallbackCacheHits
No description available.
.PARAMETER SslCipher
No description available.
.PARAMETER SslCipherList
No description available.
.PARAMETER SslClientConnects
No description available.
.PARAMETER SslConnectRenegotiates
No description available.
.PARAMETER SslCtxVerifyDepth
No description available.
.PARAMETER SslCtxVerifyMode
No description available.
.PARAMETER SslDefaultTimeout
No description available.
.PARAMETER SslFinishedAccepts
No description available.
.PARAMETER SslFinishedConnects
No description available.
.PARAMETER SslServerNotAfter
No description available.
.PARAMETER SslServerNotBefore
No description available.
.PARAMETER SslSessionCacheHits
No description available.
.PARAMETER SslSessionCacheMisses
No description available.
.PARAMETER SslSessionCacheMode
No description available.
.PARAMETER SslSessionCacheOverflows
No description available.
.PARAMETER SslSessionCacheSize
No description available.
.PARAMETER SslSessionCacheTimeouts
No description available.
.PARAMETER SslSessionsReused
No description available.
.PARAMETER SslUsedSessionCacheEntries
No description available.
.PARAMETER SslVerifyDepth
No description available.
.PARAMETER SslVerifyMode
No description available.
.PARAMETER SslVersion
No description available.
.PARAMETER TableLocksImmediate
No description available.
.PARAMETER TableLocksWaited
No description available.
.PARAMETER TableOpenCacheHits
No description available.
.PARAMETER TableOpenCacheMisses
No description available.
.PARAMETER TableOpenCacheOverflows
No description available.
.PARAMETER TcLogMaxPagesUsed
No description available.
.PARAMETER TcLogPageSize
No description available.
.PARAMETER TcLogPageWaits
No description available.
.PARAMETER ThreadpoolIdleThreads
No description available.
.PARAMETER ThreadpoolThreads
No description available.
.PARAMETER ThreadsCached
No description available.
.PARAMETER ThreadsConnected
No description available.
.PARAMETER ThreadsCreated
No description available.
.PARAMETER ThreadsRunning
No description available.
.PARAMETER Uptime
No description available.
.PARAMETER UptimeSinceFlushStatus
No description available.
.PARAMETER WsrepLocalStateUuid
No description available.
.PARAMETER WsrepProtocolVersion
No description available.
.PARAMETER WsrepLastApplied
No description available.
.PARAMETER WsrepLastCommitted
No description available.
.PARAMETER WsrepReplicated
No description available.
.PARAMETER WsrepReplicatedBytes
No description available.
.PARAMETER WsrepReplKeys
No description available.
.PARAMETER WsrepReplKeysBytes
No description available.
.PARAMETER WsrepReplDataBytes
No description available.
.PARAMETER WsrepReplOtherBytes
No description available.
.PARAMETER WsrepReceived
No description available.
.PARAMETER WsrepReceivedBytes
No description available.
.PARAMETER WsrepLocalCommits
No description available.
.PARAMETER WsrepLocalCertFailures
No description available.
.PARAMETER WsrepLocalReplays
No description available.
.PARAMETER WsrepLocalSendQueue
No description available.
.PARAMETER WsrepLocalSendQueueMax
No description available.
.PARAMETER WsrepLocalSendQueueMin
No description available.
.PARAMETER WsrepLocalSendQueueAvg
No description available.
.PARAMETER WsrepLocalRecvQueue
No description available.
.PARAMETER WsrepLocalRecvQueueMax
No description available.
.PARAMETER WsrepLocalRecvQueueMin
No description available.
.PARAMETER WsrepLocalRecvQueueAvg
No description available.
.PARAMETER WsrepLocalCachedDownto
No description available.
.PARAMETER WsrepFlowControlPausedNs
No description available.
.PARAMETER WsrepFlowControlPaused
No description available.
.PARAMETER WsrepFlowControlSent
No description available.
.PARAMETER WsrepFlowControlRecv
No description available.
.PARAMETER WsrepFlowControlInterval
No description available.
.PARAMETER WsrepFlowControlIntervalLow
No description available.
.PARAMETER WsrepFlowControlIntervalHigh
No description available.
.PARAMETER WsrepFlowControlStatus
No description available.
.PARAMETER WsrepFlowControlActive
No description available.
.PARAMETER WsrepFlowControlRequested
No description available.
.PARAMETER WsrepCertDepsDistance
No description available.
.PARAMETER WsrepApplyOooe
No description available.
.PARAMETER WsrepApplyOool
No description available.
.PARAMETER WsrepApplyWindow
No description available.
.PARAMETER WsrepCommitOooe
No description available.
.PARAMETER WsrepCommitOool
No description available.
.PARAMETER WsrepCommitWindow
No description available.
.PARAMETER WsrepLocalState
No description available.
.PARAMETER WsrepLocalStateComment
No description available.
.PARAMETER WsrepCertIndexSize
No description available.
.PARAMETER WsrepCertBucketCount
No description available.
.PARAMETER WsrepGcachePoolSize
No description available.
.PARAMETER WsrepCausalReads
No description available.
.PARAMETER WsrepCertInterval
No description available.
.PARAMETER WsrepOpenTransactions
No description available.
.PARAMETER WsrepOpenConnections
No description available.
.PARAMETER WsrepIstReceiveStatus
No description available.
.PARAMETER WsrepIstReceiveSeqnoStart
No description available.
.PARAMETER WsrepIstReceiveSeqnoCurrent
No description available.
.PARAMETER WsrepIstReceiveSeqnoEnd
No description available.
.PARAMETER WsrepIncomingAddresses
No description available.
.PARAMETER WsrepClusterWeight
No description available.
.PARAMETER WsrepDesyncCount
No description available.
.PARAMETER WsrepEvsDelayed
No description available.
.PARAMETER WsrepEvsEvictList
No description available.
.PARAMETER WsrepEvsReplLatency
No description available.
.PARAMETER WsrepEvsState
No description available.
.PARAMETER WsrepGcommUuid
No description available.
.PARAMETER WsrepGmcastSegment
No description available.
.PARAMETER WsrepClusterConfId
No description available.
.PARAMETER WsrepClusterSize
No description available.
.PARAMETER WsrepClusterStateUuid
No description available.
.PARAMETER WsrepClusterStatus
No description available.
.PARAMETER WsrepConnected
No description available.
.PARAMETER WsrepLocalBfAborts
No description available.
.PARAMETER WsrepLocalIndex
No description available.
.PARAMETER WsrepProviderName
No description available.
.PARAMETER WsrepProviderVendor
No description available.
.PARAMETER WsrepProviderVersion
No description available.
.PARAMETER WsrepReady
No description available.
.OUTPUTS

HealthDatabaseStats<PSCustomObject>
#>

function Initialize-HealthDatabaseStats {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AbortedClients},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AbortedConnects},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BinlogSnapshotFile},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BinlogSnapshotPosition},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BinlogCacheDiskUse},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BinlogCacheUse},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BinlogSnapshotGtidExecuted},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BinlogStmtCacheDiskUse},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BinlogStmtCacheUse},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BytesReceived},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BytesSent},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComAdminCommands},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComAssignToKeycache},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComAlterDb},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComAlterDbUpgrade},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComAlterEvent},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComAlterFunction},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComAlterInstance},
        [Parameter(Position = 18, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComAlterProcedure},
        [Parameter(Position = 19, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComAlterServer},
        [Parameter(Position = 20, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComAlterTable},
        [Parameter(Position = 21, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComAlterTablespace},
        [Parameter(Position = 22, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComAlterUser},
        [Parameter(Position = 23, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComAnalyze},
        [Parameter(Position = 24, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComBegin},
        [Parameter(Position = 25, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComBinlog},
        [Parameter(Position = 26, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComCallProcedure},
        [Parameter(Position = 27, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComChangeDb},
        [Parameter(Position = 28, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComChangeMaster},
        [Parameter(Position = 29, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComChangeReplFilter},
        [Parameter(Position = 30, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComCheck},
        [Parameter(Position = 31, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComChecksum},
        [Parameter(Position = 32, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComCommit},
        [Parameter(Position = 33, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComCreateCompressionDictionary},
        [Parameter(Position = 34, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComCreateDb},
        [Parameter(Position = 35, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComCreateEvent},
        [Parameter(Position = 36, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComCreateFunction},
        [Parameter(Position = 37, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComCreateIndex},
        [Parameter(Position = 38, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComCreateProcedure},
        [Parameter(Position = 39, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComCreateServer},
        [Parameter(Position = 40, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComCreateTable},
        [Parameter(Position = 41, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComCreateTrigger},
        [Parameter(Position = 42, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComCreateUdf},
        [Parameter(Position = 43, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComCreateUser},
        [Parameter(Position = 44, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComCreateView},
        [Parameter(Position = 45, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComDeallocSql},
        [Parameter(Position = 46, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComDelete},
        [Parameter(Position = 47, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComDeleteMulti},
        [Parameter(Position = 48, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComDo},
        [Parameter(Position = 49, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComDropCompressionDictionary},
        [Parameter(Position = 50, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComDropDb},
        [Parameter(Position = 51, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComDropEvent},
        [Parameter(Position = 52, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComDropFunction},
        [Parameter(Position = 53, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComDropIndex},
        [Parameter(Position = 54, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComDropProcedure},
        [Parameter(Position = 55, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComDropServer},
        [Parameter(Position = 56, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComDropTable},
        [Parameter(Position = 57, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComDropTrigger},
        [Parameter(Position = 58, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComDropUser},
        [Parameter(Position = 59, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComDropView},
        [Parameter(Position = 60, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComEmptyQuery},
        [Parameter(Position = 61, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComExecuteSql},
        [Parameter(Position = 62, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComExplainOther},
        [Parameter(Position = 63, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComFlush},
        [Parameter(Position = 64, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComGetDiagnostics},
        [Parameter(Position = 65, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComGrant},
        [Parameter(Position = 66, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComHaClose},
        [Parameter(Position = 67, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComHaOpen},
        [Parameter(Position = 68, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComHaRead},
        [Parameter(Position = 69, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComHelp},
        [Parameter(Position = 70, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComInsert},
        [Parameter(Position = 71, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComInsertSelect},
        [Parameter(Position = 72, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComInstallPlugin},
        [Parameter(Position = 73, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComKill},
        [Parameter(Position = 74, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComLoad},
        [Parameter(Position = 75, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComLockTables},
        [Parameter(Position = 76, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComLockTablesForBackup},
        [Parameter(Position = 77, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComLockBinlogForBackup},
        [Parameter(Position = 78, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComOptimize},
        [Parameter(Position = 79, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComPreloadKeys},
        [Parameter(Position = 80, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComPrepareSql},
        [Parameter(Position = 81, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComPurge},
        [Parameter(Position = 82, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComPurgeBeforeDate},
        [Parameter(Position = 83, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComReleaseSavepoint},
        [Parameter(Position = 84, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComRenameTable},
        [Parameter(Position = 85, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComRenameUser},
        [Parameter(Position = 86, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComRepair},
        [Parameter(Position = 87, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComReplace},
        [Parameter(Position = 88, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComReplaceSelect},
        [Parameter(Position = 89, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComReset},
        [Parameter(Position = 90, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComResignal},
        [Parameter(Position = 91, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComRevoke},
        [Parameter(Position = 92, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComRevokeAll},
        [Parameter(Position = 93, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComRollback},
        [Parameter(Position = 94, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComRollbackToSavepoint},
        [Parameter(Position = 95, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComSavepoint},
        [Parameter(Position = 96, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComSelect},
        [Parameter(Position = 97, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComSetOption},
        [Parameter(Position = 98, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComSignal},
        [Parameter(Position = 99, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowBinlogEvents},
        [Parameter(Position = 100, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowBinlogs},
        [Parameter(Position = 101, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowCharsets},
        [Parameter(Position = 102, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowClientStatistics},
        [Parameter(Position = 103, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowCollations},
        [Parameter(Position = 104, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowCreateDb},
        [Parameter(Position = 105, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowCreateEvent},
        [Parameter(Position = 106, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowCreateFunc},
        [Parameter(Position = 107, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowCreateProc},
        [Parameter(Position = 108, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowCreateTable},
        [Parameter(Position = 109, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowCreateTrigger},
        [Parameter(Position = 110, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowDatabases},
        [Parameter(Position = 111, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowEngineLogs},
        [Parameter(Position = 112, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowEngineMutex},
        [Parameter(Position = 113, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowEngineStatus},
        [Parameter(Position = 114, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowEvents},
        [Parameter(Position = 115, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowErrors},
        [Parameter(Position = 116, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowFields},
        [Parameter(Position = 117, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowFunctionCode},
        [Parameter(Position = 118, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowFunctionStatus},
        [Parameter(Position = 119, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowGrants},
        [Parameter(Position = 120, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowIndexStatistics},
        [Parameter(Position = 121, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowKeys},
        [Parameter(Position = 122, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowMasterStatus},
        [Parameter(Position = 123, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowOpenTables},
        [Parameter(Position = 124, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowPlugins},
        [Parameter(Position = 125, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowPrivileges},
        [Parameter(Position = 126, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowProcedureCode},
        [Parameter(Position = 127, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowProcedureStatus},
        [Parameter(Position = 128, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowProcesslist},
        [Parameter(Position = 129, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowProfile},
        [Parameter(Position = 130, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowProfiles},
        [Parameter(Position = 131, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowRelaylogEvents},
        [Parameter(Position = 132, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowSlaveHosts},
        [Parameter(Position = 133, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowSlaveStatus},
        [Parameter(Position = 134, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowStatus},
        [Parameter(Position = 135, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowStorageEngines},
        [Parameter(Position = 136, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowTableStatistics},
        [Parameter(Position = 137, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowTableStatus},
        [Parameter(Position = 138, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowTables},
        [Parameter(Position = 139, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowThreadStatistics},
        [Parameter(Position = 140, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowTriggers},
        [Parameter(Position = 141, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowUserStatistics},
        [Parameter(Position = 142, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowVariables},
        [Parameter(Position = 143, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowWarnings},
        [Parameter(Position = 144, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShowCreateUser},
        [Parameter(Position = 145, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComShutdown},
        [Parameter(Position = 146, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComSlaveStart},
        [Parameter(Position = 147, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComSlaveStop},
        [Parameter(Position = 148, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComGroupReplicationStart},
        [Parameter(Position = 149, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComGroupReplicationStop},
        [Parameter(Position = 150, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComStmtExecute},
        [Parameter(Position = 151, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComStmtClose},
        [Parameter(Position = 152, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComStmtFetch},
        [Parameter(Position = 153, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComStmtPrepare},
        [Parameter(Position = 154, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComStmtReset},
        [Parameter(Position = 155, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComStmtSendLongData},
        [Parameter(Position = 156, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComTruncate},
        [Parameter(Position = 157, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComUninstallPlugin},
        [Parameter(Position = 158, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComUnlockBinlog},
        [Parameter(Position = 159, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComUnlockTables},
        [Parameter(Position = 160, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComUpdate},
        [Parameter(Position = 161, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComUpdateMulti},
        [Parameter(Position = 162, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComXaCommit},
        [Parameter(Position = 163, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComXaEnd},
        [Parameter(Position = 164, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComXaPrepare},
        [Parameter(Position = 165, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComXaRecover},
        [Parameter(Position = 166, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComXaRollback},
        [Parameter(Position = 167, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComXaStart},
        [Parameter(Position = 168, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ComStmtReprepare},
        [Parameter(Position = 169, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Compression},
        [Parameter(Position = 170, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ConnectionErrorsAccept},
        [Parameter(Position = 171, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ConnectionErrorsInternal},
        [Parameter(Position = 172, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ConnectionErrorsMaxConnections},
        [Parameter(Position = 173, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ConnectionErrorsPeerAddress},
        [Parameter(Position = 174, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ConnectionErrorsSelect},
        [Parameter(Position = 175, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ConnectionErrorsTcpwrap},
        [Parameter(Position = 176, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Connections},
        [Parameter(Position = 177, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CreatedTmpDiskTables},
        [Parameter(Position = 178, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CreatedTmpFiles},
        [Parameter(Position = 179, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CreatedTmpTables},
        [Parameter(Position = 180, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DelayedErrors},
        [Parameter(Position = 181, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DelayedInsertThreads},
        [Parameter(Position = 182, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DelayedWrites},
        [Parameter(Position = 183, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FlushCommands},
        [Parameter(Position = 184, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HandlerCommit},
        [Parameter(Position = 185, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HandlerDelete},
        [Parameter(Position = 186, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HandlerDiscover},
        [Parameter(Position = 187, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HandlerExternalLock},
        [Parameter(Position = 188, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HandlerMrrInit},
        [Parameter(Position = 189, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HandlerPrepare},
        [Parameter(Position = 190, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HandlerReadFirst},
        [Parameter(Position = 191, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HandlerReadKey},
        [Parameter(Position = 192, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HandlerReadLast},
        [Parameter(Position = 193, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HandlerReadNext},
        [Parameter(Position = 194, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HandlerReadPrev},
        [Parameter(Position = 195, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HandlerReadRnd},
        [Parameter(Position = 196, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HandlerReadRndNext},
        [Parameter(Position = 197, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HandlerRollback},
        [Parameter(Position = 198, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HandlerSavepoint},
        [Parameter(Position = 199, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HandlerSavepointRollback},
        [Parameter(Position = 200, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HandlerUpdate},
        [Parameter(Position = 201, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${HandlerWrite},
        [Parameter(Position = 202, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBackgroundLogSync},
        [Parameter(Position = 203, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolDumpStatus},
        [Parameter(Position = 204, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolLoadStatus},
        [Parameter(Position = 205, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolResizeStatus},
        [Parameter(Position = 206, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolPagesData},
        [Parameter(Position = 207, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolBytesData},
        [Parameter(Position = 208, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolPagesDirty},
        [Parameter(Position = 209, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolBytesDirty},
        [Parameter(Position = 210, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolPagesFlushed},
        [Parameter(Position = 211, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolPagesFree},
        [Parameter(Position = 212, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolPagesLRUFlushed},
        [Parameter(Position = 213, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolPagesMadeNotYoung},
        [Parameter(Position = 214, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolPagesMadeYoung},
        [Parameter(Position = 215, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolPagesMisc},
        [Parameter(Position = 216, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolPagesOld},
        [Parameter(Position = 217, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolPagesTotal},
        [Parameter(Position = 218, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolReadAheadRnd},
        [Parameter(Position = 219, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolReadAhead},
        [Parameter(Position = 220, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolReadAheadEvicted},
        [Parameter(Position = 221, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolReadRequests},
        [Parameter(Position = 222, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolReads},
        [Parameter(Position = 223, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolWaitFree},
        [Parameter(Position = 224, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferPoolWriteRequests},
        [Parameter(Position = 225, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbCheckpointAge},
        [Parameter(Position = 226, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbCheckpointMaxAge},
        [Parameter(Position = 227, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbDataFsyncs},
        [Parameter(Position = 228, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbDataPendingFsyncs},
        [Parameter(Position = 229, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbDataPendingReads},
        [Parameter(Position = 230, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbDataPendingWrites},
        [Parameter(Position = 231, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbDataRead},
        [Parameter(Position = 232, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbDataReads},
        [Parameter(Position = 233, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbDataWrites},
        [Parameter(Position = 234, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbDataWritten},
        [Parameter(Position = 235, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbDblwrPagesWritten},
        [Parameter(Position = 236, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbDblwrWrites},
        [Parameter(Position = 237, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbIbufFreeList},
        [Parameter(Position = 238, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbIbufSegmentSize},
        [Parameter(Position = 239, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbLogWaits},
        [Parameter(Position = 240, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbLogWriteRequests},
        [Parameter(Position = 241, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbLogWrites},
        [Parameter(Position = 242, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbLsnCurrent},
        [Parameter(Position = 243, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbLsnFlushed},
        [Parameter(Position = 244, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbLsnLastCheckpoint},
        [Parameter(Position = 245, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbMasterThreadActiveLoops},
        [Parameter(Position = 246, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbMasterThreadIdleLoops},
        [Parameter(Position = 247, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbMaxTrxId},
        [Parameter(Position = 248, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbMemAdaptiveHash},
        [Parameter(Position = 249, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbMemDictionary},
        [Parameter(Position = 250, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbOldestViewLowLimitTrxId},
        [Parameter(Position = 251, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbOsLogFsyncs},
        [Parameter(Position = 252, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbOsLogPendingFsyncs},
        [Parameter(Position = 253, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbOsLogPendingWrites},
        [Parameter(Position = 254, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbOsLogWritten},
        [Parameter(Position = 255, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbPageSize},
        [Parameter(Position = 256, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbPagesCreated},
        [Parameter(Position = 257, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbPagesRead},
        [Parameter(Position = 258, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbPages0Read},
        [Parameter(Position = 259, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbPagesWritten},
        [Parameter(Position = 260, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbPurgeTrxId},
        [Parameter(Position = 261, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbPurgeUndoNo},
        [Parameter(Position = 262, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbRowLockCurrentWaits},
        [Parameter(Position = 263, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbRowLockTime},
        [Parameter(Position = 264, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbRowLockTimeAvg},
        [Parameter(Position = 265, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbRowLockTimeMax},
        [Parameter(Position = 266, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbRowLockWaits},
        [Parameter(Position = 267, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbRowsDeleted},
        [Parameter(Position = 268, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbRowsInserted},
        [Parameter(Position = 269, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbRowsRead},
        [Parameter(Position = 270, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbRowsUpdated},
        [Parameter(Position = 271, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbNumOpenFiles},
        [Parameter(Position = 272, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbTruncatedStatusWrites},
        [Parameter(Position = 273, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbAvailableUndoLogs},
        [Parameter(Position = 274, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbSecondaryIndexTriggeredClusterReads},
        [Parameter(Position = 275, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbSecondaryIndexTriggeredClusterReadsAvoided},
        [Parameter(Position = 276, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbBufferedAioSubmitted},
        [Parameter(Position = 277, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbScanPagesContiguous},
        [Parameter(Position = 278, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbScanPagesDisjointed},
        [Parameter(Position = 279, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbScanPagesTotalSeekDistance},
        [Parameter(Position = 280, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbScanDataSize},
        [Parameter(Position = 281, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbScanDeletedRecsSize},
        [Parameter(Position = 282, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbScrubBackgroundPageReorganizations},
        [Parameter(Position = 283, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbScrubBackgroundPageSplits},
        [Parameter(Position = 284, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbScrubBackgroundPageSplitFailuresUnderflow},
        [Parameter(Position = 285, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbScrubBackgroundPageSplitFailuresOutOfFilespace},
        [Parameter(Position = 286, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbScrubBackgroundPageSplitFailuresMissingIndex},
        [Parameter(Position = 287, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbScrubBackgroundPageSplitFailuresUnknown},
        [Parameter(Position = 288, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbScrubLog},
        [Parameter(Position = 289, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbEncryptionRotationPagesReadFromCache},
        [Parameter(Position = 290, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbEncryptionRotationPagesReadFromDisk},
        [Parameter(Position = 291, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbEncryptionRotationPagesModified},
        [Parameter(Position = 292, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbEncryptionRotationPagesFlushed},
        [Parameter(Position = 293, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbEncryptionRotationEstimatedIops},
        [Parameter(Position = 294, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbEncryptionKeyRotationListLength},
        [Parameter(Position = 295, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbEncryptionNMergeBlocksEncrypted},
        [Parameter(Position = 296, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbEncryptionNMergeBlocksDecrypted},
        [Parameter(Position = 297, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbEncryptionNRowlogBlocksEncrypted},
        [Parameter(Position = 298, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbEncryptionNRowlogBlocksDecrypted},
        [Parameter(Position = 299, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbNumPagesEncrypted},
        [Parameter(Position = 300, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbNumPagesDecrypted},
        [Parameter(Position = 301, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InnodbEncryptionRedoKeyVersion},
        [Parameter(Position = 302, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${KeyBlocksNotFlushed},
        [Parameter(Position = 303, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${KeyBlocksUnused},
        [Parameter(Position = 304, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${KeyBlocksUsed},
        [Parameter(Position = 305, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${KeyReadRequests},
        [Parameter(Position = 306, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${KeyReads},
        [Parameter(Position = 307, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${KeyWriteRequests},
        [Parameter(Position = 308, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${KeyWrites},
        [Parameter(Position = 309, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LastQueryCost},
        [Parameter(Position = 310, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LastQueryPartialPlans},
        [Parameter(Position = 311, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LockedConnects},
        [Parameter(Position = 312, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MaxExecutionTimeExceeded},
        [Parameter(Position = 313, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MaxExecutionTimeSet},
        [Parameter(Position = 314, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MaxExecutionTimeSetFailed},
        [Parameter(Position = 315, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MaxUsedConnections},
        [Parameter(Position = 316, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MaxUsedConnectionsTime},
        [Parameter(Position = 317, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${NotFlushedDelayedRows},
        [Parameter(Position = 318, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${OngoingAnonymousTransactionCount},
        [Parameter(Position = 319, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${OpenFiles},
        [Parameter(Position = 320, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${OpenStreams},
        [Parameter(Position = 321, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${OpenTableDefinitions},
        [Parameter(Position = 322, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${OpenTables},
        [Parameter(Position = 323, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${OpenedFiles},
        [Parameter(Position = 324, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${OpenedTableDefinitions},
        [Parameter(Position = 325, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${OpenedTables},
        [Parameter(Position = 326, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaAccountsLost},
        [Parameter(Position = 327, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaCondClassesLost},
        [Parameter(Position = 328, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaCondInstancesLost},
        [Parameter(Position = 329, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaDigestLost},
        [Parameter(Position = 330, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaFileClassesLost},
        [Parameter(Position = 331, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaFileHandlesLost},
        [Parameter(Position = 332, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaFileInstancesLost},
        [Parameter(Position = 333, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaHostsLost},
        [Parameter(Position = 334, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaIndexStatLost},
        [Parameter(Position = 335, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaLockerLost},
        [Parameter(Position = 336, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaMemoryClassesLost},
        [Parameter(Position = 337, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaMetadataLockLost},
        [Parameter(Position = 338, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaMutexClassesLost},
        [Parameter(Position = 339, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaMutexInstancesLost},
        [Parameter(Position = 340, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaNestedStatementLost},
        [Parameter(Position = 341, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaPreparedStatementsLost},
        [Parameter(Position = 342, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaProgramLost},
        [Parameter(Position = 343, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaRwlockClassesLost},
        [Parameter(Position = 344, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaRwlockInstancesLost},
        [Parameter(Position = 345, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaSessionConnectAttrsLost},
        [Parameter(Position = 346, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaSocketClassesLost},
        [Parameter(Position = 347, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaSocketInstancesLost},
        [Parameter(Position = 348, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaStageClassesLost},
        [Parameter(Position = 349, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaStatementClassesLost},
        [Parameter(Position = 350, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaTableHandlesLost},
        [Parameter(Position = 351, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaTableInstancesLost},
        [Parameter(Position = 352, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaTableLockStatLost},
        [Parameter(Position = 353, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaThreadClassesLost},
        [Parameter(Position = 354, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaThreadInstancesLost},
        [Parameter(Position = 355, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PerformanceSchemaUsersLost},
        [Parameter(Position = 356, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PreparedStmtCount},
        [Parameter(Position = 357, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${QcacheFreeBlocks},
        [Parameter(Position = 358, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${QcacheFreeMemory},
        [Parameter(Position = 359, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${QcacheHits},
        [Parameter(Position = 360, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${QcacheInserts},
        [Parameter(Position = 361, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${QcacheLowmemPrunes},
        [Parameter(Position = 362, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${QcacheNotCached},
        [Parameter(Position = 363, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${QcacheQueriesInCache},
        [Parameter(Position = 364, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${QcacheTotalBlocks},
        [Parameter(Position = 365, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Queries},
        [Parameter(Position = 366, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Questions},
        [Parameter(Position = 367, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RsaPublicKey},
        [Parameter(Position = 368, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SelectFullJoin},
        [Parameter(Position = 369, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SelectFullRangeJoin},
        [Parameter(Position = 370, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SelectRange},
        [Parameter(Position = 371, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SelectRangeCheck},
        [Parameter(Position = 372, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SelectScan},
        [Parameter(Position = 373, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SlaveOpenTempTables},
        [Parameter(Position = 374, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SlowLaunchThreads},
        [Parameter(Position = 375, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SlowQueries},
        [Parameter(Position = 376, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SortMergePasses},
        [Parameter(Position = 377, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SortRange},
        [Parameter(Position = 378, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SortRows},
        [Parameter(Position = 379, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SortScan},
        [Parameter(Position = 380, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslAcceptRenegotiates},
        [Parameter(Position = 381, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslAccepts},
        [Parameter(Position = 382, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslCallbackCacheHits},
        [Parameter(Position = 383, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslCipher},
        [Parameter(Position = 384, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslCipherList},
        [Parameter(Position = 385, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslClientConnects},
        [Parameter(Position = 386, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslConnectRenegotiates},
        [Parameter(Position = 387, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslCtxVerifyDepth},
        [Parameter(Position = 388, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslCtxVerifyMode},
        [Parameter(Position = 389, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslDefaultTimeout},
        [Parameter(Position = 390, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslFinishedAccepts},
        [Parameter(Position = 391, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslFinishedConnects},
        [Parameter(Position = 392, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslServerNotAfter},
        [Parameter(Position = 393, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslServerNotBefore},
        [Parameter(Position = 394, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslSessionCacheHits},
        [Parameter(Position = 395, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslSessionCacheMisses},
        [Parameter(Position = 396, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslSessionCacheMode},
        [Parameter(Position = 397, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslSessionCacheOverflows},
        [Parameter(Position = 398, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslSessionCacheSize},
        [Parameter(Position = 399, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslSessionCacheTimeouts},
        [Parameter(Position = 400, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslSessionsReused},
        [Parameter(Position = 401, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslUsedSessionCacheEntries},
        [Parameter(Position = 402, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslVerifyDepth},
        [Parameter(Position = 403, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslVerifyMode},
        [Parameter(Position = 404, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SslVersion},
        [Parameter(Position = 405, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TableLocksImmediate},
        [Parameter(Position = 406, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TableLocksWaited},
        [Parameter(Position = 407, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TableOpenCacheHits},
        [Parameter(Position = 408, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TableOpenCacheMisses},
        [Parameter(Position = 409, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TableOpenCacheOverflows},
        [Parameter(Position = 410, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TcLogMaxPagesUsed},
        [Parameter(Position = 411, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TcLogPageSize},
        [Parameter(Position = 412, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TcLogPageWaits},
        [Parameter(Position = 413, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ThreadpoolIdleThreads},
        [Parameter(Position = 414, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ThreadpoolThreads},
        [Parameter(Position = 415, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ThreadsCached},
        [Parameter(Position = 416, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ThreadsConnected},
        [Parameter(Position = 417, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ThreadsCreated},
        [Parameter(Position = 418, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ThreadsRunning},
        [Parameter(Position = 419, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Uptime},
        [Parameter(Position = 420, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${UptimeSinceFlushStatus},
        [Parameter(Position = 421, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepLocalStateUuid},
        [Parameter(Position = 422, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepProtocolVersion},
        [Parameter(Position = 423, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepLastApplied},
        [Parameter(Position = 424, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepLastCommitted},
        [Parameter(Position = 425, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepReplicated},
        [Parameter(Position = 426, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepReplicatedBytes},
        [Parameter(Position = 427, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepReplKeys},
        [Parameter(Position = 428, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepReplKeysBytes},
        [Parameter(Position = 429, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepReplDataBytes},
        [Parameter(Position = 430, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepReplOtherBytes},
        [Parameter(Position = 431, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepReceived},
        [Parameter(Position = 432, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepReceivedBytes},
        [Parameter(Position = 433, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepLocalCommits},
        [Parameter(Position = 434, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepLocalCertFailures},
        [Parameter(Position = 435, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepLocalReplays},
        [Parameter(Position = 436, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepLocalSendQueue},
        [Parameter(Position = 437, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepLocalSendQueueMax},
        [Parameter(Position = 438, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepLocalSendQueueMin},
        [Parameter(Position = 439, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepLocalSendQueueAvg},
        [Parameter(Position = 440, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepLocalRecvQueue},
        [Parameter(Position = 441, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepLocalRecvQueueMax},
        [Parameter(Position = 442, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepLocalRecvQueueMin},
        [Parameter(Position = 443, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepLocalRecvQueueAvg},
        [Parameter(Position = 444, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepLocalCachedDownto},
        [Parameter(Position = 445, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepFlowControlPausedNs},
        [Parameter(Position = 446, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepFlowControlPaused},
        [Parameter(Position = 447, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepFlowControlSent},
        [Parameter(Position = 448, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepFlowControlRecv},
        [Parameter(Position = 449, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepFlowControlInterval},
        [Parameter(Position = 450, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepFlowControlIntervalLow},
        [Parameter(Position = 451, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepFlowControlIntervalHigh},
        [Parameter(Position = 452, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepFlowControlStatus},
        [Parameter(Position = 453, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepFlowControlActive},
        [Parameter(Position = 454, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepFlowControlRequested},
        [Parameter(Position = 455, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepCertDepsDistance},
        [Parameter(Position = 456, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepApplyOooe},
        [Parameter(Position = 457, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepApplyOool},
        [Parameter(Position = 458, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepApplyWindow},
        [Parameter(Position = 459, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepCommitOooe},
        [Parameter(Position = 460, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepCommitOool},
        [Parameter(Position = 461, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepCommitWindow},
        [Parameter(Position = 462, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepLocalState},
        [Parameter(Position = 463, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepLocalStateComment},
        [Parameter(Position = 464, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepCertIndexSize},
        [Parameter(Position = 465, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepCertBucketCount},
        [Parameter(Position = 466, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepGcachePoolSize},
        [Parameter(Position = 467, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepCausalReads},
        [Parameter(Position = 468, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepCertInterval},
        [Parameter(Position = 469, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepOpenTransactions},
        [Parameter(Position = 470, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepOpenConnections},
        [Parameter(Position = 471, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepIstReceiveStatus},
        [Parameter(Position = 472, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepIstReceiveSeqnoStart},
        [Parameter(Position = 473, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepIstReceiveSeqnoCurrent},
        [Parameter(Position = 474, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepIstReceiveSeqnoEnd},
        [Parameter(Position = 475, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepIncomingAddresses},
        [Parameter(Position = 476, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepClusterWeight},
        [Parameter(Position = 477, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepDesyncCount},
        [Parameter(Position = 478, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepEvsDelayed},
        [Parameter(Position = 479, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepEvsEvictList},
        [Parameter(Position = 480, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepEvsReplLatency},
        [Parameter(Position = 481, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepEvsState},
        [Parameter(Position = 482, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepGcommUuid},
        [Parameter(Position = 483, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepGmcastSegment},
        [Parameter(Position = 484, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepClusterConfId},
        [Parameter(Position = 485, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepClusterSize},
        [Parameter(Position = 486, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepClusterStateUuid},
        [Parameter(Position = 487, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepClusterStatus},
        [Parameter(Position = 488, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepConnected},
        [Parameter(Position = 489, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepLocalBfAborts},
        [Parameter(Position = 490, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepLocalIndex},
        [Parameter(Position = 491, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepProviderName},
        [Parameter(Position = 492, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepProviderVendor},
        [Parameter(Position = 493, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepProviderVersion},
        [Parameter(Position = 494, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WsrepReady}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => HealthDatabaseStats' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "Aborted_clients" = ${AbortedClients}
            "Aborted_connects" = ${AbortedConnects}
            "Binlog_snapshot_file" = ${BinlogSnapshotFile}
            "Binlog_snapshot_position" = ${BinlogSnapshotPosition}
            "Binlog_cache_disk_use" = ${BinlogCacheDiskUse}
            "Binlog_cache_use" = ${BinlogCacheUse}
            "Binlog_snapshot_gtid_executed" = ${BinlogSnapshotGtidExecuted}
            "Binlog_stmt_cache_disk_use" = ${BinlogStmtCacheDiskUse}
            "Binlog_stmt_cache_use" = ${BinlogStmtCacheUse}
            "Bytes_received" = ${BytesReceived}
            "Bytes_sent" = ${BytesSent}
            "Com_admin_commands" = ${ComAdminCommands}
            "Com_assign_to_keycache" = ${ComAssignToKeycache}
            "Com_alter_db" = ${ComAlterDb}
            "Com_alter_db_upgrade" = ${ComAlterDbUpgrade}
            "Com_alter_event" = ${ComAlterEvent}
            "Com_alter_function" = ${ComAlterFunction}
            "Com_alter_instance" = ${ComAlterInstance}
            "Com_alter_procedure" = ${ComAlterProcedure}
            "Com_alter_server" = ${ComAlterServer}
            "Com_alter_table" = ${ComAlterTable}
            "Com_alter_tablespace" = ${ComAlterTablespace}
            "Com_alter_user" = ${ComAlterUser}
            "Com_analyze" = ${ComAnalyze}
            "Com_begin" = ${ComBegin}
            "Com_binlog" = ${ComBinlog}
            "Com_call_procedure" = ${ComCallProcedure}
            "Com_change_db" = ${ComChangeDb}
            "Com_change_master" = ${ComChangeMaster}
            "Com_change_repl_filter" = ${ComChangeReplFilter}
            "Com_check" = ${ComCheck}
            "Com_checksum" = ${ComChecksum}
            "Com_commit" = ${ComCommit}
            "Com_create_compression_dictionary" = ${ComCreateCompressionDictionary}
            "Com_create_db" = ${ComCreateDb}
            "Com_create_event" = ${ComCreateEvent}
            "Com_create_function" = ${ComCreateFunction}
            "Com_create_index" = ${ComCreateIndex}
            "Com_create_procedure" = ${ComCreateProcedure}
            "Com_create_server" = ${ComCreateServer}
            "Com_create_table" = ${ComCreateTable}
            "Com_create_trigger" = ${ComCreateTrigger}
            "Com_create_udf" = ${ComCreateUdf}
            "Com_create_user" = ${ComCreateUser}
            "Com_create_view" = ${ComCreateView}
            "Com_dealloc_sql" = ${ComDeallocSql}
            "Com_delete" = ${ComDelete}
            "Com_delete_multi" = ${ComDeleteMulti}
            "Com_do" = ${ComDo}
            "Com_drop_compression_dictionary" = ${ComDropCompressionDictionary}
            "Com_drop_db" = ${ComDropDb}
            "Com_drop_event" = ${ComDropEvent}
            "Com_drop_function" = ${ComDropFunction}
            "Com_drop_index" = ${ComDropIndex}
            "Com_drop_procedure" = ${ComDropProcedure}
            "Com_drop_server" = ${ComDropServer}
            "Com_drop_table" = ${ComDropTable}
            "Com_drop_trigger" = ${ComDropTrigger}
            "Com_drop_user" = ${ComDropUser}
            "Com_drop_view" = ${ComDropView}
            "Com_empty_query" = ${ComEmptyQuery}
            "Com_execute_sql" = ${ComExecuteSql}
            "Com_explain_other" = ${ComExplainOther}
            "Com_flush" = ${ComFlush}
            "Com_get_diagnostics" = ${ComGetDiagnostics}
            "Com_grant" = ${ComGrant}
            "Com_ha_close" = ${ComHaClose}
            "Com_ha_open" = ${ComHaOpen}
            "Com_ha_read" = ${ComHaRead}
            "Com_help" = ${ComHelp}
            "Com_insert" = ${ComInsert}
            "Com_insert_select" = ${ComInsertSelect}
            "Com_install_plugin" = ${ComInstallPlugin}
            "Com_kill" = ${ComKill}
            "Com_load" = ${ComLoad}
            "Com_lock_tables" = ${ComLockTables}
            "Com_lock_tables_for_backup" = ${ComLockTablesForBackup}
            "Com_lock_binlog_for_backup" = ${ComLockBinlogForBackup}
            "Com_optimize" = ${ComOptimize}
            "Com_preload_keys" = ${ComPreloadKeys}
            "Com_prepare_sql" = ${ComPrepareSql}
            "Com_purge" = ${ComPurge}
            "Com_purge_before_date" = ${ComPurgeBeforeDate}
            "Com_release_savepoint" = ${ComReleaseSavepoint}
            "Com_rename_table" = ${ComRenameTable}
            "Com_rename_user" = ${ComRenameUser}
            "Com_repair" = ${ComRepair}
            "Com_replace" = ${ComReplace}
            "Com_replace_select" = ${ComReplaceSelect}
            "Com_reset" = ${ComReset}
            "Com_resignal" = ${ComResignal}
            "Com_revoke" = ${ComRevoke}
            "Com_revoke_all" = ${ComRevokeAll}
            "Com_rollback" = ${ComRollback}
            "Com_rollback_to_savepoint" = ${ComRollbackToSavepoint}
            "Com_savepoint" = ${ComSavepoint}
            "Com_select" = ${ComSelect}
            "Com_set_option" = ${ComSetOption}
            "Com_signal" = ${ComSignal}
            "Com_show_binlog_events" = ${ComShowBinlogEvents}
            "Com_show_binlogs" = ${ComShowBinlogs}
            "Com_show_charsets" = ${ComShowCharsets}
            "Com_show_client_statistics" = ${ComShowClientStatistics}
            "Com_show_collations" = ${ComShowCollations}
            "Com_show_create_db" = ${ComShowCreateDb}
            "Com_show_create_event" = ${ComShowCreateEvent}
            "Com_show_create_func" = ${ComShowCreateFunc}
            "Com_show_create_proc" = ${ComShowCreateProc}
            "Com_show_create_table" = ${ComShowCreateTable}
            "Com_show_create_trigger" = ${ComShowCreateTrigger}
            "Com_show_databases" = ${ComShowDatabases}
            "Com_show_engine_logs" = ${ComShowEngineLogs}
            "Com_show_engine_mutex" = ${ComShowEngineMutex}
            "Com_show_engine_status" = ${ComShowEngineStatus}
            "Com_show_events" = ${ComShowEvents}
            "Com_show_errors" = ${ComShowErrors}
            "Com_show_fields" = ${ComShowFields}
            "Com_show_function_code" = ${ComShowFunctionCode}
            "Com_show_function_status" = ${ComShowFunctionStatus}
            "Com_show_grants" = ${ComShowGrants}
            "Com_show_index_statistics" = ${ComShowIndexStatistics}
            "Com_show_keys" = ${ComShowKeys}
            "Com_show_master_status" = ${ComShowMasterStatus}
            "Com_show_open_tables" = ${ComShowOpenTables}
            "Com_show_plugins" = ${ComShowPlugins}
            "Com_show_privileges" = ${ComShowPrivileges}
            "Com_show_procedure_code" = ${ComShowProcedureCode}
            "Com_show_procedure_status" = ${ComShowProcedureStatus}
            "Com_show_processlist" = ${ComShowProcesslist}
            "Com_show_profile" = ${ComShowProfile}
            "Com_show_profiles" = ${ComShowProfiles}
            "Com_show_relaylog_events" = ${ComShowRelaylogEvents}
            "Com_show_slave_hosts" = ${ComShowSlaveHosts}
            "Com_show_slave_status" = ${ComShowSlaveStatus}
            "Com_show_status" = ${ComShowStatus}
            "Com_show_storage_engines" = ${ComShowStorageEngines}
            "Com_show_table_statistics" = ${ComShowTableStatistics}
            "Com_show_table_status" = ${ComShowTableStatus}
            "Com_show_tables" = ${ComShowTables}
            "Com_show_thread_statistics" = ${ComShowThreadStatistics}
            "Com_show_triggers" = ${ComShowTriggers}
            "Com_show_user_statistics" = ${ComShowUserStatistics}
            "Com_show_variables" = ${ComShowVariables}
            "Com_show_warnings" = ${ComShowWarnings}
            "Com_show_create_user" = ${ComShowCreateUser}
            "Com_shutdown" = ${ComShutdown}
            "Com_slave_start" = ${ComSlaveStart}
            "Com_slave_stop" = ${ComSlaveStop}
            "Com_group_replication_start" = ${ComGroupReplicationStart}
            "Com_group_replication_stop" = ${ComGroupReplicationStop}
            "Com_stmt_execute" = ${ComStmtExecute}
            "Com_stmt_close" = ${ComStmtClose}
            "Com_stmt_fetch" = ${ComStmtFetch}
            "Com_stmt_prepare" = ${ComStmtPrepare}
            "Com_stmt_reset" = ${ComStmtReset}
            "Com_stmt_send_long_data" = ${ComStmtSendLongData}
            "Com_truncate" = ${ComTruncate}
            "Com_uninstall_plugin" = ${ComUninstallPlugin}
            "Com_unlock_binlog" = ${ComUnlockBinlog}
            "Com_unlock_tables" = ${ComUnlockTables}
            "Com_update" = ${ComUpdate}
            "Com_update_multi" = ${ComUpdateMulti}
            "Com_xa_commit" = ${ComXaCommit}
            "Com_xa_end" = ${ComXaEnd}
            "Com_xa_prepare" = ${ComXaPrepare}
            "Com_xa_recover" = ${ComXaRecover}
            "Com_xa_rollback" = ${ComXaRollback}
            "Com_xa_start" = ${ComXaStart}
            "Com_stmt_reprepare" = ${ComStmtReprepare}
            "Compression" = ${Compression}
            "Connection_errors_accept" = ${ConnectionErrorsAccept}
            "Connection_errors_internal" = ${ConnectionErrorsInternal}
            "Connection_errors_max_connections" = ${ConnectionErrorsMaxConnections}
            "Connection_errors_peer_address" = ${ConnectionErrorsPeerAddress}
            "Connection_errors_select" = ${ConnectionErrorsSelect}
            "Connection_errors_tcpwrap" = ${ConnectionErrorsTcpwrap}
            "Connections" = ${Connections}
            "Created_tmp_disk_tables" = ${CreatedTmpDiskTables}
            "Created_tmp_files" = ${CreatedTmpFiles}
            "Created_tmp_tables" = ${CreatedTmpTables}
            "Delayed_errors" = ${DelayedErrors}
            "Delayed_insert_threads" = ${DelayedInsertThreads}
            "Delayed_writes" = ${DelayedWrites}
            "Flush_commands" = ${FlushCommands}
            "Handler_commit" = ${HandlerCommit}
            "Handler_delete" = ${HandlerDelete}
            "Handler_discover" = ${HandlerDiscover}
            "Handler_external_lock" = ${HandlerExternalLock}
            "Handler_mrr_init" = ${HandlerMrrInit}
            "Handler_prepare" = ${HandlerPrepare}
            "Handler_read_first" = ${HandlerReadFirst}
            "Handler_read_key" = ${HandlerReadKey}
            "Handler_read_last" = ${HandlerReadLast}
            "Handler_read_next" = ${HandlerReadNext}
            "Handler_read_prev" = ${HandlerReadPrev}
            "Handler_read_rnd" = ${HandlerReadRnd}
            "Handler_read_rnd_next" = ${HandlerReadRndNext}
            "Handler_rollback" = ${HandlerRollback}
            "Handler_savepoint" = ${HandlerSavepoint}
            "Handler_savepoint_rollback" = ${HandlerSavepointRollback}
            "Handler_update" = ${HandlerUpdate}
            "Handler_write" = ${HandlerWrite}
            "Innodb_background_log_sync" = ${InnodbBackgroundLogSync}
            "Innodb_buffer_pool_dump_status" = ${InnodbBufferPoolDumpStatus}
            "Innodb_buffer_pool_load_status" = ${InnodbBufferPoolLoadStatus}
            "Innodb_buffer_pool_resize_status" = ${InnodbBufferPoolResizeStatus}
            "Innodb_buffer_pool_pages_data" = ${InnodbBufferPoolPagesData}
            "Innodb_buffer_pool_bytes_data" = ${InnodbBufferPoolBytesData}
            "Innodb_buffer_pool_pages_dirty" = ${InnodbBufferPoolPagesDirty}
            "Innodb_buffer_pool_bytes_dirty" = ${InnodbBufferPoolBytesDirty}
            "Innodb_buffer_pool_pages_flushed" = ${InnodbBufferPoolPagesFlushed}
            "Innodb_buffer_pool_pages_free" = ${InnodbBufferPoolPagesFree}
            "Innodb_buffer_pool_pages_LRU_flushed" = ${InnodbBufferPoolPagesLRUFlushed}
            "Innodb_buffer_pool_pages_made_not_young" = ${InnodbBufferPoolPagesMadeNotYoung}
            "Innodb_buffer_pool_pages_made_young" = ${InnodbBufferPoolPagesMadeYoung}
            "Innodb_buffer_pool_pages_misc" = ${InnodbBufferPoolPagesMisc}
            "Innodb_buffer_pool_pages_old" = ${InnodbBufferPoolPagesOld}
            "Innodb_buffer_pool_pages_total" = ${InnodbBufferPoolPagesTotal}
            "Innodb_buffer_pool_read_ahead_rnd" = ${InnodbBufferPoolReadAheadRnd}
            "Innodb_buffer_pool_read_ahead" = ${InnodbBufferPoolReadAhead}
            "Innodb_buffer_pool_read_ahead_evicted" = ${InnodbBufferPoolReadAheadEvicted}
            "Innodb_buffer_pool_read_requests" = ${InnodbBufferPoolReadRequests}
            "Innodb_buffer_pool_reads" = ${InnodbBufferPoolReads}
            "Innodb_buffer_pool_wait_free" = ${InnodbBufferPoolWaitFree}
            "Innodb_buffer_pool_write_requests" = ${InnodbBufferPoolWriteRequests}
            "Innodb_checkpoint_age" = ${InnodbCheckpointAge}
            "Innodb_checkpoint_max_age" = ${InnodbCheckpointMaxAge}
            "Innodb_data_fsyncs" = ${InnodbDataFsyncs}
            "Innodb_data_pending_fsyncs" = ${InnodbDataPendingFsyncs}
            "Innodb_data_pending_reads" = ${InnodbDataPendingReads}
            "Innodb_data_pending_writes" = ${InnodbDataPendingWrites}
            "Innodb_data_read" = ${InnodbDataRead}
            "Innodb_data_reads" = ${InnodbDataReads}
            "Innodb_data_writes" = ${InnodbDataWrites}
            "Innodb_data_written" = ${InnodbDataWritten}
            "Innodb_dblwr_pages_written" = ${InnodbDblwrPagesWritten}
            "Innodb_dblwr_writes" = ${InnodbDblwrWrites}
            "Innodb_ibuf_free_list" = ${InnodbIbufFreeList}
            "Innodb_ibuf_segment_size" = ${InnodbIbufSegmentSize}
            "Innodb_log_waits" = ${InnodbLogWaits}
            "Innodb_log_write_requests" = ${InnodbLogWriteRequests}
            "Innodb_log_writes" = ${InnodbLogWrites}
            "Innodb_lsn_current" = ${InnodbLsnCurrent}
            "Innodb_lsn_flushed" = ${InnodbLsnFlushed}
            "Innodb_lsn_last_checkpoint" = ${InnodbLsnLastCheckpoint}
            "Innodb_master_thread_active_loops" = ${InnodbMasterThreadActiveLoops}
            "Innodb_master_thread_idle_loops" = ${InnodbMasterThreadIdleLoops}
            "Innodb_max_trx_id" = ${InnodbMaxTrxId}
            "Innodb_mem_adaptive_hash" = ${InnodbMemAdaptiveHash}
            "Innodb_mem_dictionary" = ${InnodbMemDictionary}
            "Innodb_oldest_view_low_limit_trx_id" = ${InnodbOldestViewLowLimitTrxId}
            "Innodb_os_log_fsyncs" = ${InnodbOsLogFsyncs}
            "Innodb_os_log_pending_fsyncs" = ${InnodbOsLogPendingFsyncs}
            "Innodb_os_log_pending_writes" = ${InnodbOsLogPendingWrites}
            "Innodb_os_log_written" = ${InnodbOsLogWritten}
            "Innodb_page_size" = ${InnodbPageSize}
            "Innodb_pages_created" = ${InnodbPagesCreated}
            "Innodb_pages_read" = ${InnodbPagesRead}
            "Innodb_pages0_read" = ${InnodbPages0Read}
            "Innodb_pages_written" = ${InnodbPagesWritten}
            "Innodb_purge_trx_id" = ${InnodbPurgeTrxId}
            "Innodb_purge_undo_no" = ${InnodbPurgeUndoNo}
            "Innodb_row_lock_current_waits" = ${InnodbRowLockCurrentWaits}
            "Innodb_row_lock_time" = ${InnodbRowLockTime}
            "Innodb_row_lock_time_avg" = ${InnodbRowLockTimeAvg}
            "Innodb_row_lock_time_max" = ${InnodbRowLockTimeMax}
            "Innodb_row_lock_waits" = ${InnodbRowLockWaits}
            "Innodb_rows_deleted" = ${InnodbRowsDeleted}
            "Innodb_rows_inserted" = ${InnodbRowsInserted}
            "Innodb_rows_read" = ${InnodbRowsRead}
            "Innodb_rows_updated" = ${InnodbRowsUpdated}
            "Innodb_num_open_files" = ${InnodbNumOpenFiles}
            "Innodb_truncated_status_writes" = ${InnodbTruncatedStatusWrites}
            "Innodb_available_undo_logs" = ${InnodbAvailableUndoLogs}
            "Innodb_secondary_index_triggered_cluster_reads" = ${InnodbSecondaryIndexTriggeredClusterReads}
            "Innodb_secondary_index_triggered_cluster_reads_avoided" = ${InnodbSecondaryIndexTriggeredClusterReadsAvoided}
            "Innodb_buffered_aio_submitted" = ${InnodbBufferedAioSubmitted}
            "Innodb_scan_pages_contiguous" = ${InnodbScanPagesContiguous}
            "Innodb_scan_pages_disjointed" = ${InnodbScanPagesDisjointed}
            "Innodb_scan_pages_total_seek_distance" = ${InnodbScanPagesTotalSeekDistance}
            "Innodb_scan_data_size" = ${InnodbScanDataSize}
            "Innodb_scan_deleted_recs_size" = ${InnodbScanDeletedRecsSize}
            "Innodb_scrub_background_page_reorganizations" = ${InnodbScrubBackgroundPageReorganizations}
            "Innodb_scrub_background_page_splits" = ${InnodbScrubBackgroundPageSplits}
            "Innodb_scrub_background_page_split_failures_underflow" = ${InnodbScrubBackgroundPageSplitFailuresUnderflow}
            "Innodb_scrub_background_page_split_failures_out_of_filespace" = ${InnodbScrubBackgroundPageSplitFailuresOutOfFilespace}
            "Innodb_scrub_background_page_split_failures_missing_index" = ${InnodbScrubBackgroundPageSplitFailuresMissingIndex}
            "Innodb_scrub_background_page_split_failures_unknown" = ${InnodbScrubBackgroundPageSplitFailuresUnknown}
            "Innodb_scrub_log" = ${InnodbScrubLog}
            "Innodb_encryption_rotation_pages_read_from_cache" = ${InnodbEncryptionRotationPagesReadFromCache}
            "Innodb_encryption_rotation_pages_read_from_disk" = ${InnodbEncryptionRotationPagesReadFromDisk}
            "Innodb_encryption_rotation_pages_modified" = ${InnodbEncryptionRotationPagesModified}
            "Innodb_encryption_rotation_pages_flushed" = ${InnodbEncryptionRotationPagesFlushed}
            "Innodb_encryption_rotation_estimated_iops" = ${InnodbEncryptionRotationEstimatedIops}
            "Innodb_encryption_key_rotation_list_length" = ${InnodbEncryptionKeyRotationListLength}
            "Innodb_encryption_n_merge_blocks_encrypted" = ${InnodbEncryptionNMergeBlocksEncrypted}
            "Innodb_encryption_n_merge_blocks_decrypted" = ${InnodbEncryptionNMergeBlocksDecrypted}
            "Innodb_encryption_n_rowlog_blocks_encrypted" = ${InnodbEncryptionNRowlogBlocksEncrypted}
            "Innodb_encryption_n_rowlog_blocks_decrypted" = ${InnodbEncryptionNRowlogBlocksDecrypted}
            "Innodb_num_pages_encrypted" = ${InnodbNumPagesEncrypted}
            "Innodb_num_pages_decrypted" = ${InnodbNumPagesDecrypted}
            "Innodb_encryption_redo_key_version" = ${InnodbEncryptionRedoKeyVersion}
            "Key_blocks_not_flushed" = ${KeyBlocksNotFlushed}
            "Key_blocks_unused" = ${KeyBlocksUnused}
            "Key_blocks_used" = ${KeyBlocksUsed}
            "Key_read_requests" = ${KeyReadRequests}
            "Key_reads" = ${KeyReads}
            "Key_write_requests" = ${KeyWriteRequests}
            "Key_writes" = ${KeyWrites}
            "Last_query_cost" = ${LastQueryCost}
            "Last_query_partial_plans" = ${LastQueryPartialPlans}
            "Locked_connects" = ${LockedConnects}
            "Max_execution_time_exceeded" = ${MaxExecutionTimeExceeded}
            "Max_execution_time_set" = ${MaxExecutionTimeSet}
            "Max_execution_time_set_failed" = ${MaxExecutionTimeSetFailed}
            "Max_used_connections" = ${MaxUsedConnections}
            "Max_used_connections_time" = ${MaxUsedConnectionsTime}
            "Not_flushed_delayed_rows" = ${NotFlushedDelayedRows}
            "Ongoing_anonymous_transaction_count" = ${OngoingAnonymousTransactionCount}
            "Open_files" = ${OpenFiles}
            "Open_streams" = ${OpenStreams}
            "Open_table_definitions" = ${OpenTableDefinitions}
            "Open_tables" = ${OpenTables}
            "Opened_files" = ${OpenedFiles}
            "Opened_table_definitions" = ${OpenedTableDefinitions}
            "Opened_tables" = ${OpenedTables}
            "Performance_schema_accounts_lost" = ${PerformanceSchemaAccountsLost}
            "Performance_schema_cond_classes_lost" = ${PerformanceSchemaCondClassesLost}
            "Performance_schema_cond_instances_lost" = ${PerformanceSchemaCondInstancesLost}
            "Performance_schema_digest_lost" = ${PerformanceSchemaDigestLost}
            "Performance_schema_file_classes_lost" = ${PerformanceSchemaFileClassesLost}
            "Performance_schema_file_handles_lost" = ${PerformanceSchemaFileHandlesLost}
            "Performance_schema_file_instances_lost" = ${PerformanceSchemaFileInstancesLost}
            "Performance_schema_hosts_lost" = ${PerformanceSchemaHostsLost}
            "Performance_schema_index_stat_lost" = ${PerformanceSchemaIndexStatLost}
            "Performance_schema_locker_lost" = ${PerformanceSchemaLockerLost}
            "Performance_schema_memory_classes_lost" = ${PerformanceSchemaMemoryClassesLost}
            "Performance_schema_metadata_lock_lost" = ${PerformanceSchemaMetadataLockLost}
            "Performance_schema_mutex_classes_lost" = ${PerformanceSchemaMutexClassesLost}
            "Performance_schema_mutex_instances_lost" = ${PerformanceSchemaMutexInstancesLost}
            "Performance_schema_nested_statement_lost" = ${PerformanceSchemaNestedStatementLost}
            "Performance_schema_prepared_statements_lost" = ${PerformanceSchemaPreparedStatementsLost}
            "Performance_schema_program_lost" = ${PerformanceSchemaProgramLost}
            "Performance_schema_rwlock_classes_lost" = ${PerformanceSchemaRwlockClassesLost}
            "Performance_schema_rwlock_instances_lost" = ${PerformanceSchemaRwlockInstancesLost}
            "Performance_schema_session_connect_attrs_lost" = ${PerformanceSchemaSessionConnectAttrsLost}
            "Performance_schema_socket_classes_lost" = ${PerformanceSchemaSocketClassesLost}
            "Performance_schema_socket_instances_lost" = ${PerformanceSchemaSocketInstancesLost}
            "Performance_schema_stage_classes_lost" = ${PerformanceSchemaStageClassesLost}
            "Performance_schema_statement_classes_lost" = ${PerformanceSchemaStatementClassesLost}
            "Performance_schema_table_handles_lost" = ${PerformanceSchemaTableHandlesLost}
            "Performance_schema_table_instances_lost" = ${PerformanceSchemaTableInstancesLost}
            "Performance_schema_table_lock_stat_lost" = ${PerformanceSchemaTableLockStatLost}
            "Performance_schema_thread_classes_lost" = ${PerformanceSchemaThreadClassesLost}
            "Performance_schema_thread_instances_lost" = ${PerformanceSchemaThreadInstancesLost}
            "Performance_schema_users_lost" = ${PerformanceSchemaUsersLost}
            "Prepared_stmt_count" = ${PreparedStmtCount}
            "Qcache_free_blocks" = ${QcacheFreeBlocks}
            "Qcache_free_memory" = ${QcacheFreeMemory}
            "Qcache_hits" = ${QcacheHits}
            "Qcache_inserts" = ${QcacheInserts}
            "Qcache_lowmem_prunes" = ${QcacheLowmemPrunes}
            "Qcache_not_cached" = ${QcacheNotCached}
            "Qcache_queries_in_cache" = ${QcacheQueriesInCache}
            "Qcache_total_blocks" = ${QcacheTotalBlocks}
            "Queries" = ${Queries}
            "Questions" = ${Questions}
            "Rsa_public_key" = ${RsaPublicKey}
            "Select_full_join" = ${SelectFullJoin}
            "Select_full_range_join" = ${SelectFullRangeJoin}
            "Select_range" = ${SelectRange}
            "Select_range_check" = ${SelectRangeCheck}
            "Select_scan" = ${SelectScan}
            "Slave_open_temp_tables" = ${SlaveOpenTempTables}
            "Slow_launch_threads" = ${SlowLaunchThreads}
            "Slow_queries" = ${SlowQueries}
            "Sort_merge_passes" = ${SortMergePasses}
            "Sort_range" = ${SortRange}
            "Sort_rows" = ${SortRows}
            "Sort_scan" = ${SortScan}
            "Ssl_accept_renegotiates" = ${SslAcceptRenegotiates}
            "Ssl_accepts" = ${SslAccepts}
            "Ssl_callback_cache_hits" = ${SslCallbackCacheHits}
            "Ssl_cipher" = ${SslCipher}
            "Ssl_cipher_list" = ${SslCipherList}
            "Ssl_client_connects" = ${SslClientConnects}
            "Ssl_connect_renegotiates" = ${SslConnectRenegotiates}
            "Ssl_ctx_verify_depth" = ${SslCtxVerifyDepth}
            "Ssl_ctx_verify_mode" = ${SslCtxVerifyMode}
            "Ssl_default_timeout" = ${SslDefaultTimeout}
            "Ssl_finished_accepts" = ${SslFinishedAccepts}
            "Ssl_finished_connects" = ${SslFinishedConnects}
            "Ssl_server_not_after" = ${SslServerNotAfter}
            "Ssl_server_not_before" = ${SslServerNotBefore}
            "Ssl_session_cache_hits" = ${SslSessionCacheHits}
            "Ssl_session_cache_misses" = ${SslSessionCacheMisses}
            "Ssl_session_cache_mode" = ${SslSessionCacheMode}
            "Ssl_session_cache_overflows" = ${SslSessionCacheOverflows}
            "Ssl_session_cache_size" = ${SslSessionCacheSize}
            "Ssl_session_cache_timeouts" = ${SslSessionCacheTimeouts}
            "Ssl_sessions_reused" = ${SslSessionsReused}
            "Ssl_used_session_cache_entries" = ${SslUsedSessionCacheEntries}
            "Ssl_verify_depth" = ${SslVerifyDepth}
            "Ssl_verify_mode" = ${SslVerifyMode}
            "Ssl_version" = ${SslVersion}
            "Table_locks_immediate" = ${TableLocksImmediate}
            "Table_locks_waited" = ${TableLocksWaited}
            "Table_open_cache_hits" = ${TableOpenCacheHits}
            "Table_open_cache_misses" = ${TableOpenCacheMisses}
            "Table_open_cache_overflows" = ${TableOpenCacheOverflows}
            "Tc_log_max_pages_used" = ${TcLogMaxPagesUsed}
            "Tc_log_page_size" = ${TcLogPageSize}
            "Tc_log_page_waits" = ${TcLogPageWaits}
            "Threadpool_idle_threads" = ${ThreadpoolIdleThreads}
            "Threadpool_threads" = ${ThreadpoolThreads}
            "Threads_cached" = ${ThreadsCached}
            "Threads_connected" = ${ThreadsConnected}
            "Threads_created" = ${ThreadsCreated}
            "Threads_running" = ${ThreadsRunning}
            "Uptime" = ${Uptime}
            "Uptime_since_flush_status" = ${UptimeSinceFlushStatus}
            "wsrep_local_state_uuid" = ${WsrepLocalStateUuid}
            "wsrep_protocol_version" = ${WsrepProtocolVersion}
            "wsrep_last_applied" = ${WsrepLastApplied}
            "wsrep_last_committed" = ${WsrepLastCommitted}
            "wsrep_replicated" = ${WsrepReplicated}
            "wsrep_replicated_bytes" = ${WsrepReplicatedBytes}
            "wsrep_repl_keys" = ${WsrepReplKeys}
            "wsrep_repl_keys_bytes" = ${WsrepReplKeysBytes}
            "wsrep_repl_data_bytes" = ${WsrepReplDataBytes}
            "wsrep_repl_other_bytes" = ${WsrepReplOtherBytes}
            "wsrep_received" = ${WsrepReceived}
            "wsrep_received_bytes" = ${WsrepReceivedBytes}
            "wsrep_local_commits" = ${WsrepLocalCommits}
            "wsrep_local_cert_failures" = ${WsrepLocalCertFailures}
            "wsrep_local_replays" = ${WsrepLocalReplays}
            "wsrep_local_send_queue" = ${WsrepLocalSendQueue}
            "wsrep_local_send_queue_max" = ${WsrepLocalSendQueueMax}
            "wsrep_local_send_queue_min" = ${WsrepLocalSendQueueMin}
            "wsrep_local_send_queue_avg" = ${WsrepLocalSendQueueAvg}
            "wsrep_local_recv_queue" = ${WsrepLocalRecvQueue}
            "wsrep_local_recv_queue_max" = ${WsrepLocalRecvQueueMax}
            "wsrep_local_recv_queue_min" = ${WsrepLocalRecvQueueMin}
            "wsrep_local_recv_queue_avg" = ${WsrepLocalRecvQueueAvg}
            "wsrep_local_cached_downto" = ${WsrepLocalCachedDownto}
            "wsrep_flow_control_paused_ns" = ${WsrepFlowControlPausedNs}
            "wsrep_flow_control_paused" = ${WsrepFlowControlPaused}
            "wsrep_flow_control_sent" = ${WsrepFlowControlSent}
            "wsrep_flow_control_recv" = ${WsrepFlowControlRecv}
            "wsrep_flow_control_interval" = ${WsrepFlowControlInterval}
            "wsrep_flow_control_interval_low" = ${WsrepFlowControlIntervalLow}
            "wsrep_flow_control_interval_high" = ${WsrepFlowControlIntervalHigh}
            "wsrep_flow_control_status" = ${WsrepFlowControlStatus}
            "wsrep_flow_control_active" = ${WsrepFlowControlActive}
            "wsrep_flow_control_requested" = ${WsrepFlowControlRequested}
            "wsrep_cert_deps_distance" = ${WsrepCertDepsDistance}
            "wsrep_apply_oooe" = ${WsrepApplyOooe}
            "wsrep_apply_oool" = ${WsrepApplyOool}
            "wsrep_apply_window" = ${WsrepApplyWindow}
            "wsrep_commit_oooe" = ${WsrepCommitOooe}
            "wsrep_commit_oool" = ${WsrepCommitOool}
            "wsrep_commit_window" = ${WsrepCommitWindow}
            "wsrep_local_state" = ${WsrepLocalState}
            "wsrep_local_state_comment" = ${WsrepLocalStateComment}
            "wsrep_cert_index_size" = ${WsrepCertIndexSize}
            "wsrep_cert_bucket_count" = ${WsrepCertBucketCount}
            "wsrep_gcache_pool_size" = ${WsrepGcachePoolSize}
            "wsrep_causal_reads" = ${WsrepCausalReads}
            "wsrep_cert_interval" = ${WsrepCertInterval}
            "wsrep_open_transactions" = ${WsrepOpenTransactions}
            "wsrep_open_connections" = ${WsrepOpenConnections}
            "wsrep_ist_receive_status" = ${WsrepIstReceiveStatus}
            "wsrep_ist_receive_seqno_start" = ${WsrepIstReceiveSeqnoStart}
            "wsrep_ist_receive_seqno_current" = ${WsrepIstReceiveSeqnoCurrent}
            "wsrep_ist_receive_seqno_end" = ${WsrepIstReceiveSeqnoEnd}
            "wsrep_incoming_addresses" = ${WsrepIncomingAddresses}
            "wsrep_cluster_weight" = ${WsrepClusterWeight}
            "wsrep_desync_count" = ${WsrepDesyncCount}
            "wsrep_evs_delayed" = ${WsrepEvsDelayed}
            "wsrep_evs_evict_list" = ${WsrepEvsEvictList}
            "wsrep_evs_repl_latency" = ${WsrepEvsReplLatency}
            "wsrep_evs_state" = ${WsrepEvsState}
            "wsrep_gcomm_uuid" = ${WsrepGcommUuid}
            "wsrep_gmcast_segment" = ${WsrepGmcastSegment}
            "wsrep_cluster_conf_id" = ${WsrepClusterConfId}
            "wsrep_cluster_size" = ${WsrepClusterSize}
            "wsrep_cluster_state_uuid" = ${WsrepClusterStateUuid}
            "wsrep_cluster_status" = ${WsrepClusterStatus}
            "wsrep_connected" = ${WsrepConnected}
            "wsrep_local_bf_aborts" = ${WsrepLocalBfAborts}
            "wsrep_local_index" = ${WsrepLocalIndex}
            "wsrep_provider_name" = ${WsrepProviderName}
            "wsrep_provider_vendor" = ${WsrepProviderVendor}
            "wsrep_provider_version" = ${WsrepProviderVersion}
            "wsrep_ready" = ${WsrepReady}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to HealthDatabaseStats<PSCustomObject>

.DESCRIPTION

Convert from JSON to HealthDatabaseStats<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

HealthDatabaseStats<PSCustomObject>
#>
function ConvertFrom-JsonToHealthDatabaseStats {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => HealthDatabaseStats' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in HealthDatabaseStats
        $AllProperties = ("Aborted_clients", "Aborted_connects", "Binlog_snapshot_file", "Binlog_snapshot_position", "Binlog_cache_disk_use", "Binlog_cache_use", "Binlog_snapshot_gtid_executed", "Binlog_stmt_cache_disk_use", "Binlog_stmt_cache_use", "Bytes_received", "Bytes_sent", "Com_admin_commands", "Com_assign_to_keycache", "Com_alter_db", "Com_alter_db_upgrade", "Com_alter_event", "Com_alter_function", "Com_alter_instance", "Com_alter_procedure", "Com_alter_server", "Com_alter_table", "Com_alter_tablespace", "Com_alter_user", "Com_analyze", "Com_begin", "Com_binlog", "Com_call_procedure", "Com_change_db", "Com_change_master", "Com_change_repl_filter", "Com_check", "Com_checksum", "Com_commit", "Com_create_compression_dictionary", "Com_create_db", "Com_create_event", "Com_create_function", "Com_create_index", "Com_create_procedure", "Com_create_server", "Com_create_table", "Com_create_trigger", "Com_create_udf", "Com_create_user", "Com_create_view", "Com_dealloc_sql", "Com_delete", "Com_delete_multi", "Com_do", "Com_drop_compression_dictionary", "Com_drop_db", "Com_drop_event", "Com_drop_function", "Com_drop_index", "Com_drop_procedure", "Com_drop_server", "Com_drop_table", "Com_drop_trigger", "Com_drop_user", "Com_drop_view", "Com_empty_query", "Com_execute_sql", "Com_explain_other", "Com_flush", "Com_get_diagnostics", "Com_grant", "Com_ha_close", "Com_ha_open", "Com_ha_read", "Com_help", "Com_insert", "Com_insert_select", "Com_install_plugin", "Com_kill", "Com_load", "Com_lock_tables", "Com_lock_tables_for_backup", "Com_lock_binlog_for_backup", "Com_optimize", "Com_preload_keys", "Com_prepare_sql", "Com_purge", "Com_purge_before_date", "Com_release_savepoint", "Com_rename_table", "Com_rename_user", "Com_repair", "Com_replace", "Com_replace_select", "Com_reset", "Com_resignal", "Com_revoke", "Com_revoke_all", "Com_rollback", "Com_rollback_to_savepoint", "Com_savepoint", "Com_select", "Com_set_option", "Com_signal", "Com_show_binlog_events", "Com_show_binlogs", "Com_show_charsets", "Com_show_client_statistics", "Com_show_collations", "Com_show_create_db", "Com_show_create_event", "Com_show_create_func", "Com_show_create_proc", "Com_show_create_table", "Com_show_create_trigger", "Com_show_databases", "Com_show_engine_logs", "Com_show_engine_mutex", "Com_show_engine_status", "Com_show_events", "Com_show_errors", "Com_show_fields", "Com_show_function_code", "Com_show_function_status", "Com_show_grants", "Com_show_index_statistics", "Com_show_keys", "Com_show_master_status", "Com_show_open_tables", "Com_show_plugins", "Com_show_privileges", "Com_show_procedure_code", "Com_show_procedure_status", "Com_show_processlist", "Com_show_profile", "Com_show_profiles", "Com_show_relaylog_events", "Com_show_slave_hosts", "Com_show_slave_status", "Com_show_status", "Com_show_storage_engines", "Com_show_table_statistics", "Com_show_table_status", "Com_show_tables", "Com_show_thread_statistics", "Com_show_triggers", "Com_show_user_statistics", "Com_show_variables", "Com_show_warnings", "Com_show_create_user", "Com_shutdown", "Com_slave_start", "Com_slave_stop", "Com_group_replication_start", "Com_group_replication_stop", "Com_stmt_execute", "Com_stmt_close", "Com_stmt_fetch", "Com_stmt_prepare", "Com_stmt_reset", "Com_stmt_send_long_data", "Com_truncate", "Com_uninstall_plugin", "Com_unlock_binlog", "Com_unlock_tables", "Com_update", "Com_update_multi", "Com_xa_commit", "Com_xa_end", "Com_xa_prepare", "Com_xa_recover", "Com_xa_rollback", "Com_xa_start", "Com_stmt_reprepare", "Compression", "Connection_errors_accept", "Connection_errors_internal", "Connection_errors_max_connections", "Connection_errors_peer_address", "Connection_errors_select", "Connection_errors_tcpwrap", "Connections", "Created_tmp_disk_tables", "Created_tmp_files", "Created_tmp_tables", "Delayed_errors", "Delayed_insert_threads", "Delayed_writes", "Flush_commands", "Handler_commit", "Handler_delete", "Handler_discover", "Handler_external_lock", "Handler_mrr_init", "Handler_prepare", "Handler_read_first", "Handler_read_key", "Handler_read_last", "Handler_read_next", "Handler_read_prev", "Handler_read_rnd", "Handler_read_rnd_next", "Handler_rollback", "Handler_savepoint", "Handler_savepoint_rollback", "Handler_update", "Handler_write", "Innodb_background_log_sync", "Innodb_buffer_pool_dump_status", "Innodb_buffer_pool_load_status", "Innodb_buffer_pool_resize_status", "Innodb_buffer_pool_pages_data", "Innodb_buffer_pool_bytes_data", "Innodb_buffer_pool_pages_dirty", "Innodb_buffer_pool_bytes_dirty", "Innodb_buffer_pool_pages_flushed", "Innodb_buffer_pool_pages_free", "Innodb_buffer_pool_pages_LRU_flushed", "Innodb_buffer_pool_pages_made_not_young", "Innodb_buffer_pool_pages_made_young", "Innodb_buffer_pool_pages_misc", "Innodb_buffer_pool_pages_old", "Innodb_buffer_pool_pages_total", "Innodb_buffer_pool_read_ahead_rnd", "Innodb_buffer_pool_read_ahead", "Innodb_buffer_pool_read_ahead_evicted", "Innodb_buffer_pool_read_requests", "Innodb_buffer_pool_reads", "Innodb_buffer_pool_wait_free", "Innodb_buffer_pool_write_requests", "Innodb_checkpoint_age", "Innodb_checkpoint_max_age", "Innodb_data_fsyncs", "Innodb_data_pending_fsyncs", "Innodb_data_pending_reads", "Innodb_data_pending_writes", "Innodb_data_read", "Innodb_data_reads", "Innodb_data_writes", "Innodb_data_written", "Innodb_dblwr_pages_written", "Innodb_dblwr_writes", "Innodb_ibuf_free_list", "Innodb_ibuf_segment_size", "Innodb_log_waits", "Innodb_log_write_requests", "Innodb_log_writes", "Innodb_lsn_current", "Innodb_lsn_flushed", "Innodb_lsn_last_checkpoint", "Innodb_master_thread_active_loops", "Innodb_master_thread_idle_loops", "Innodb_max_trx_id", "Innodb_mem_adaptive_hash", "Innodb_mem_dictionary", "Innodb_oldest_view_low_limit_trx_id", "Innodb_os_log_fsyncs", "Innodb_os_log_pending_fsyncs", "Innodb_os_log_pending_writes", "Innodb_os_log_written", "Innodb_page_size", "Innodb_pages_created", "Innodb_pages_read", "Innodb_pages0_read", "Innodb_pages_written", "Innodb_purge_trx_id", "Innodb_purge_undo_no", "Innodb_row_lock_current_waits", "Innodb_row_lock_time", "Innodb_row_lock_time_avg", "Innodb_row_lock_time_max", "Innodb_row_lock_waits", "Innodb_rows_deleted", "Innodb_rows_inserted", "Innodb_rows_read", "Innodb_rows_updated", "Innodb_num_open_files", "Innodb_truncated_status_writes", "Innodb_available_undo_logs", "Innodb_secondary_index_triggered_cluster_reads", "Innodb_secondary_index_triggered_cluster_reads_avoided", "Innodb_buffered_aio_submitted", "Innodb_scan_pages_contiguous", "Innodb_scan_pages_disjointed", "Innodb_scan_pages_total_seek_distance", "Innodb_scan_data_size", "Innodb_scan_deleted_recs_size", "Innodb_scrub_background_page_reorganizations", "Innodb_scrub_background_page_splits", "Innodb_scrub_background_page_split_failures_underflow", "Innodb_scrub_background_page_split_failures_out_of_filespace", "Innodb_scrub_background_page_split_failures_missing_index", "Innodb_scrub_background_page_split_failures_unknown", "Innodb_scrub_log", "Innodb_encryption_rotation_pages_read_from_cache", "Innodb_encryption_rotation_pages_read_from_disk", "Innodb_encryption_rotation_pages_modified", "Innodb_encryption_rotation_pages_flushed", "Innodb_encryption_rotation_estimated_iops", "Innodb_encryption_key_rotation_list_length", "Innodb_encryption_n_merge_blocks_encrypted", "Innodb_encryption_n_merge_blocks_decrypted", "Innodb_encryption_n_rowlog_blocks_encrypted", "Innodb_encryption_n_rowlog_blocks_decrypted", "Innodb_num_pages_encrypted", "Innodb_num_pages_decrypted", "Innodb_encryption_redo_key_version", "Key_blocks_not_flushed", "Key_blocks_unused", "Key_blocks_used", "Key_read_requests", "Key_reads", "Key_write_requests", "Key_writes", "Last_query_cost", "Last_query_partial_plans", "Locked_connects", "Max_execution_time_exceeded", "Max_execution_time_set", "Max_execution_time_set_failed", "Max_used_connections", "Max_used_connections_time", "Not_flushed_delayed_rows", "Ongoing_anonymous_transaction_count", "Open_files", "Open_streams", "Open_table_definitions", "Open_tables", "Opened_files", "Opened_table_definitions", "Opened_tables", "Performance_schema_accounts_lost", "Performance_schema_cond_classes_lost", "Performance_schema_cond_instances_lost", "Performance_schema_digest_lost", "Performance_schema_file_classes_lost", "Performance_schema_file_handles_lost", "Performance_schema_file_instances_lost", "Performance_schema_hosts_lost", "Performance_schema_index_stat_lost", "Performance_schema_locker_lost", "Performance_schema_memory_classes_lost", "Performance_schema_metadata_lock_lost", "Performance_schema_mutex_classes_lost", "Performance_schema_mutex_instances_lost", "Performance_schema_nested_statement_lost", "Performance_schema_prepared_statements_lost", "Performance_schema_program_lost", "Performance_schema_rwlock_classes_lost", "Performance_schema_rwlock_instances_lost", "Performance_schema_session_connect_attrs_lost", "Performance_schema_socket_classes_lost", "Performance_schema_socket_instances_lost", "Performance_schema_stage_classes_lost", "Performance_schema_statement_classes_lost", "Performance_schema_table_handles_lost", "Performance_schema_table_instances_lost", "Performance_schema_table_lock_stat_lost", "Performance_schema_thread_classes_lost", "Performance_schema_thread_instances_lost", "Performance_schema_users_lost", "Prepared_stmt_count", "Qcache_free_blocks", "Qcache_free_memory", "Qcache_hits", "Qcache_inserts", "Qcache_lowmem_prunes", "Qcache_not_cached", "Qcache_queries_in_cache", "Qcache_total_blocks", "Queries", "Questions", "Rsa_public_key", "Select_full_join", "Select_full_range_join", "Select_range", "Select_range_check", "Select_scan", "Slave_open_temp_tables", "Slow_launch_threads", "Slow_queries", "Sort_merge_passes", "Sort_range", "Sort_rows", "Sort_scan", "Ssl_accept_renegotiates", "Ssl_accepts", "Ssl_callback_cache_hits", "Ssl_cipher", "Ssl_cipher_list", "Ssl_client_connects", "Ssl_connect_renegotiates", "Ssl_ctx_verify_depth", "Ssl_ctx_verify_mode", "Ssl_default_timeout", "Ssl_finished_accepts", "Ssl_finished_connects", "Ssl_server_not_after", "Ssl_server_not_before", "Ssl_session_cache_hits", "Ssl_session_cache_misses", "Ssl_session_cache_mode", "Ssl_session_cache_overflows", "Ssl_session_cache_size", "Ssl_session_cache_timeouts", "Ssl_sessions_reused", "Ssl_used_session_cache_entries", "Ssl_verify_depth", "Ssl_verify_mode", "Ssl_version", "Table_locks_immediate", "Table_locks_waited", "Table_open_cache_hits", "Table_open_cache_misses", "Table_open_cache_overflows", "Tc_log_max_pages_used", "Tc_log_page_size", "Tc_log_page_waits", "Threadpool_idle_threads", "Threadpool_threads", "Threads_cached", "Threads_connected", "Threads_created", "Threads_running", "Uptime", "Uptime_since_flush_status", "wsrep_local_state_uuid", "wsrep_protocol_version", "wsrep_last_applied", "wsrep_last_committed", "wsrep_replicated", "wsrep_replicated_bytes", "wsrep_repl_keys", "wsrep_repl_keys_bytes", "wsrep_repl_data_bytes", "wsrep_repl_other_bytes", "wsrep_received", "wsrep_received_bytes", "wsrep_local_commits", "wsrep_local_cert_failures", "wsrep_local_replays", "wsrep_local_send_queue", "wsrep_local_send_queue_max", "wsrep_local_send_queue_min", "wsrep_local_send_queue_avg", "wsrep_local_recv_queue", "wsrep_local_recv_queue_max", "wsrep_local_recv_queue_min", "wsrep_local_recv_queue_avg", "wsrep_local_cached_downto", "wsrep_flow_control_paused_ns", "wsrep_flow_control_paused", "wsrep_flow_control_sent", "wsrep_flow_control_recv", "wsrep_flow_control_interval", "wsrep_flow_control_interval_low", "wsrep_flow_control_interval_high", "wsrep_flow_control_status", "wsrep_flow_control_active", "wsrep_flow_control_requested", "wsrep_cert_deps_distance", "wsrep_apply_oooe", "wsrep_apply_oool", "wsrep_apply_window", "wsrep_commit_oooe", "wsrep_commit_oool", "wsrep_commit_window", "wsrep_local_state", "wsrep_local_state_comment", "wsrep_cert_index_size", "wsrep_cert_bucket_count", "wsrep_gcache_pool_size", "wsrep_causal_reads", "wsrep_cert_interval", "wsrep_open_transactions", "wsrep_open_connections", "wsrep_ist_receive_status", "wsrep_ist_receive_seqno_start", "wsrep_ist_receive_seqno_current", "wsrep_ist_receive_seqno_end", "wsrep_incoming_addresses", "wsrep_cluster_weight", "wsrep_desync_count", "wsrep_evs_delayed", "wsrep_evs_evict_list", "wsrep_evs_repl_latency", "wsrep_evs_state", "wsrep_gcomm_uuid", "wsrep_gmcast_segment", "wsrep_cluster_conf_id", "wsrep_cluster_size", "wsrep_cluster_state_uuid", "wsrep_cluster_status", "wsrep_connected", "wsrep_local_bf_aborts", "wsrep_local_index", "wsrep_provider_name", "wsrep_provider_vendor", "wsrep_provider_version", "wsrep_ready")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Aborted_clients"))) { #optional property not found
            $AbortedClients = $null
        } else {
            $AbortedClients = $JsonParameters.PSobject.Properties["Aborted_clients"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Aborted_connects"))) { #optional property not found
            $AbortedConnects = $null
        } else {
            $AbortedConnects = $JsonParameters.PSobject.Properties["Aborted_connects"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Binlog_snapshot_file"))) { #optional property not found
            $BinlogSnapshotFile = $null
        } else {
            $BinlogSnapshotFile = $JsonParameters.PSobject.Properties["Binlog_snapshot_file"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Binlog_snapshot_position"))) { #optional property not found
            $BinlogSnapshotPosition = $null
        } else {
            $BinlogSnapshotPosition = $JsonParameters.PSobject.Properties["Binlog_snapshot_position"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Binlog_cache_disk_use"))) { #optional property not found
            $BinlogCacheDiskUse = $null
        } else {
            $BinlogCacheDiskUse = $JsonParameters.PSobject.Properties["Binlog_cache_disk_use"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Binlog_cache_use"))) { #optional property not found
            $BinlogCacheUse = $null
        } else {
            $BinlogCacheUse = $JsonParameters.PSobject.Properties["Binlog_cache_use"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Binlog_snapshot_gtid_executed"))) { #optional property not found
            $BinlogSnapshotGtidExecuted = $null
        } else {
            $BinlogSnapshotGtidExecuted = $JsonParameters.PSobject.Properties["Binlog_snapshot_gtid_executed"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Binlog_stmt_cache_disk_use"))) { #optional property not found
            $BinlogStmtCacheDiskUse = $null
        } else {
            $BinlogStmtCacheDiskUse = $JsonParameters.PSobject.Properties["Binlog_stmt_cache_disk_use"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Binlog_stmt_cache_use"))) { #optional property not found
            $BinlogStmtCacheUse = $null
        } else {
            $BinlogStmtCacheUse = $JsonParameters.PSobject.Properties["Binlog_stmt_cache_use"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Bytes_received"))) { #optional property not found
            $BytesReceived = $null
        } else {
            $BytesReceived = $JsonParameters.PSobject.Properties["Bytes_received"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Bytes_sent"))) { #optional property not found
            $BytesSent = $null
        } else {
            $BytesSent = $JsonParameters.PSobject.Properties["Bytes_sent"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_admin_commands"))) { #optional property not found
            $ComAdminCommands = $null
        } else {
            $ComAdminCommands = $JsonParameters.PSobject.Properties["Com_admin_commands"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_assign_to_keycache"))) { #optional property not found
            $ComAssignToKeycache = $null
        } else {
            $ComAssignToKeycache = $JsonParameters.PSobject.Properties["Com_assign_to_keycache"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_alter_db"))) { #optional property not found
            $ComAlterDb = $null
        } else {
            $ComAlterDb = $JsonParameters.PSobject.Properties["Com_alter_db"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_alter_db_upgrade"))) { #optional property not found
            $ComAlterDbUpgrade = $null
        } else {
            $ComAlterDbUpgrade = $JsonParameters.PSobject.Properties["Com_alter_db_upgrade"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_alter_event"))) { #optional property not found
            $ComAlterEvent = $null
        } else {
            $ComAlterEvent = $JsonParameters.PSobject.Properties["Com_alter_event"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_alter_function"))) { #optional property not found
            $ComAlterFunction = $null
        } else {
            $ComAlterFunction = $JsonParameters.PSobject.Properties["Com_alter_function"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_alter_instance"))) { #optional property not found
            $ComAlterInstance = $null
        } else {
            $ComAlterInstance = $JsonParameters.PSobject.Properties["Com_alter_instance"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_alter_procedure"))) { #optional property not found
            $ComAlterProcedure = $null
        } else {
            $ComAlterProcedure = $JsonParameters.PSobject.Properties["Com_alter_procedure"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_alter_server"))) { #optional property not found
            $ComAlterServer = $null
        } else {
            $ComAlterServer = $JsonParameters.PSobject.Properties["Com_alter_server"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_alter_table"))) { #optional property not found
            $ComAlterTable = $null
        } else {
            $ComAlterTable = $JsonParameters.PSobject.Properties["Com_alter_table"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_alter_tablespace"))) { #optional property not found
            $ComAlterTablespace = $null
        } else {
            $ComAlterTablespace = $JsonParameters.PSobject.Properties["Com_alter_tablespace"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_alter_user"))) { #optional property not found
            $ComAlterUser = $null
        } else {
            $ComAlterUser = $JsonParameters.PSobject.Properties["Com_alter_user"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_analyze"))) { #optional property not found
            $ComAnalyze = $null
        } else {
            $ComAnalyze = $JsonParameters.PSobject.Properties["Com_analyze"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_begin"))) { #optional property not found
            $ComBegin = $null
        } else {
            $ComBegin = $JsonParameters.PSobject.Properties["Com_begin"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_binlog"))) { #optional property not found
            $ComBinlog = $null
        } else {
            $ComBinlog = $JsonParameters.PSobject.Properties["Com_binlog"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_call_procedure"))) { #optional property not found
            $ComCallProcedure = $null
        } else {
            $ComCallProcedure = $JsonParameters.PSobject.Properties["Com_call_procedure"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_change_db"))) { #optional property not found
            $ComChangeDb = $null
        } else {
            $ComChangeDb = $JsonParameters.PSobject.Properties["Com_change_db"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_change_master"))) { #optional property not found
            $ComChangeMaster = $null
        } else {
            $ComChangeMaster = $JsonParameters.PSobject.Properties["Com_change_master"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_change_repl_filter"))) { #optional property not found
            $ComChangeReplFilter = $null
        } else {
            $ComChangeReplFilter = $JsonParameters.PSobject.Properties["Com_change_repl_filter"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_check"))) { #optional property not found
            $ComCheck = $null
        } else {
            $ComCheck = $JsonParameters.PSobject.Properties["Com_check"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_checksum"))) { #optional property not found
            $ComChecksum = $null
        } else {
            $ComChecksum = $JsonParameters.PSobject.Properties["Com_checksum"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_commit"))) { #optional property not found
            $ComCommit = $null
        } else {
            $ComCommit = $JsonParameters.PSobject.Properties["Com_commit"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_create_compression_dictionary"))) { #optional property not found
            $ComCreateCompressionDictionary = $null
        } else {
            $ComCreateCompressionDictionary = $JsonParameters.PSobject.Properties["Com_create_compression_dictionary"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_create_db"))) { #optional property not found
            $ComCreateDb = $null
        } else {
            $ComCreateDb = $JsonParameters.PSobject.Properties["Com_create_db"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_create_event"))) { #optional property not found
            $ComCreateEvent = $null
        } else {
            $ComCreateEvent = $JsonParameters.PSobject.Properties["Com_create_event"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_create_function"))) { #optional property not found
            $ComCreateFunction = $null
        } else {
            $ComCreateFunction = $JsonParameters.PSobject.Properties["Com_create_function"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_create_index"))) { #optional property not found
            $ComCreateIndex = $null
        } else {
            $ComCreateIndex = $JsonParameters.PSobject.Properties["Com_create_index"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_create_procedure"))) { #optional property not found
            $ComCreateProcedure = $null
        } else {
            $ComCreateProcedure = $JsonParameters.PSobject.Properties["Com_create_procedure"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_create_server"))) { #optional property not found
            $ComCreateServer = $null
        } else {
            $ComCreateServer = $JsonParameters.PSobject.Properties["Com_create_server"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_create_table"))) { #optional property not found
            $ComCreateTable = $null
        } else {
            $ComCreateTable = $JsonParameters.PSobject.Properties["Com_create_table"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_create_trigger"))) { #optional property not found
            $ComCreateTrigger = $null
        } else {
            $ComCreateTrigger = $JsonParameters.PSobject.Properties["Com_create_trigger"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_create_udf"))) { #optional property not found
            $ComCreateUdf = $null
        } else {
            $ComCreateUdf = $JsonParameters.PSobject.Properties["Com_create_udf"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_create_user"))) { #optional property not found
            $ComCreateUser = $null
        } else {
            $ComCreateUser = $JsonParameters.PSobject.Properties["Com_create_user"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_create_view"))) { #optional property not found
            $ComCreateView = $null
        } else {
            $ComCreateView = $JsonParameters.PSobject.Properties["Com_create_view"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_dealloc_sql"))) { #optional property not found
            $ComDeallocSql = $null
        } else {
            $ComDeallocSql = $JsonParameters.PSobject.Properties["Com_dealloc_sql"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_delete"))) { #optional property not found
            $ComDelete = $null
        } else {
            $ComDelete = $JsonParameters.PSobject.Properties["Com_delete"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_delete_multi"))) { #optional property not found
            $ComDeleteMulti = $null
        } else {
            $ComDeleteMulti = $JsonParameters.PSobject.Properties["Com_delete_multi"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_do"))) { #optional property not found
            $ComDo = $null
        } else {
            $ComDo = $JsonParameters.PSobject.Properties["Com_do"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_drop_compression_dictionary"))) { #optional property not found
            $ComDropCompressionDictionary = $null
        } else {
            $ComDropCompressionDictionary = $JsonParameters.PSobject.Properties["Com_drop_compression_dictionary"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_drop_db"))) { #optional property not found
            $ComDropDb = $null
        } else {
            $ComDropDb = $JsonParameters.PSobject.Properties["Com_drop_db"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_drop_event"))) { #optional property not found
            $ComDropEvent = $null
        } else {
            $ComDropEvent = $JsonParameters.PSobject.Properties["Com_drop_event"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_drop_function"))) { #optional property not found
            $ComDropFunction = $null
        } else {
            $ComDropFunction = $JsonParameters.PSobject.Properties["Com_drop_function"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_drop_index"))) { #optional property not found
            $ComDropIndex = $null
        } else {
            $ComDropIndex = $JsonParameters.PSobject.Properties["Com_drop_index"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_drop_procedure"))) { #optional property not found
            $ComDropProcedure = $null
        } else {
            $ComDropProcedure = $JsonParameters.PSobject.Properties["Com_drop_procedure"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_drop_server"))) { #optional property not found
            $ComDropServer = $null
        } else {
            $ComDropServer = $JsonParameters.PSobject.Properties["Com_drop_server"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_drop_table"))) { #optional property not found
            $ComDropTable = $null
        } else {
            $ComDropTable = $JsonParameters.PSobject.Properties["Com_drop_table"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_drop_trigger"))) { #optional property not found
            $ComDropTrigger = $null
        } else {
            $ComDropTrigger = $JsonParameters.PSobject.Properties["Com_drop_trigger"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_drop_user"))) { #optional property not found
            $ComDropUser = $null
        } else {
            $ComDropUser = $JsonParameters.PSobject.Properties["Com_drop_user"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_drop_view"))) { #optional property not found
            $ComDropView = $null
        } else {
            $ComDropView = $JsonParameters.PSobject.Properties["Com_drop_view"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_empty_query"))) { #optional property not found
            $ComEmptyQuery = $null
        } else {
            $ComEmptyQuery = $JsonParameters.PSobject.Properties["Com_empty_query"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_execute_sql"))) { #optional property not found
            $ComExecuteSql = $null
        } else {
            $ComExecuteSql = $JsonParameters.PSobject.Properties["Com_execute_sql"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_explain_other"))) { #optional property not found
            $ComExplainOther = $null
        } else {
            $ComExplainOther = $JsonParameters.PSobject.Properties["Com_explain_other"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_flush"))) { #optional property not found
            $ComFlush = $null
        } else {
            $ComFlush = $JsonParameters.PSobject.Properties["Com_flush"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_get_diagnostics"))) { #optional property not found
            $ComGetDiagnostics = $null
        } else {
            $ComGetDiagnostics = $JsonParameters.PSobject.Properties["Com_get_diagnostics"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_grant"))) { #optional property not found
            $ComGrant = $null
        } else {
            $ComGrant = $JsonParameters.PSobject.Properties["Com_grant"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_ha_close"))) { #optional property not found
            $ComHaClose = $null
        } else {
            $ComHaClose = $JsonParameters.PSobject.Properties["Com_ha_close"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_ha_open"))) { #optional property not found
            $ComHaOpen = $null
        } else {
            $ComHaOpen = $JsonParameters.PSobject.Properties["Com_ha_open"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_ha_read"))) { #optional property not found
            $ComHaRead = $null
        } else {
            $ComHaRead = $JsonParameters.PSobject.Properties["Com_ha_read"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_help"))) { #optional property not found
            $ComHelp = $null
        } else {
            $ComHelp = $JsonParameters.PSobject.Properties["Com_help"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_insert"))) { #optional property not found
            $ComInsert = $null
        } else {
            $ComInsert = $JsonParameters.PSobject.Properties["Com_insert"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_insert_select"))) { #optional property not found
            $ComInsertSelect = $null
        } else {
            $ComInsertSelect = $JsonParameters.PSobject.Properties["Com_insert_select"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_install_plugin"))) { #optional property not found
            $ComInstallPlugin = $null
        } else {
            $ComInstallPlugin = $JsonParameters.PSobject.Properties["Com_install_plugin"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_kill"))) { #optional property not found
            $ComKill = $null
        } else {
            $ComKill = $JsonParameters.PSobject.Properties["Com_kill"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_load"))) { #optional property not found
            $ComLoad = $null
        } else {
            $ComLoad = $JsonParameters.PSobject.Properties["Com_load"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_lock_tables"))) { #optional property not found
            $ComLockTables = $null
        } else {
            $ComLockTables = $JsonParameters.PSobject.Properties["Com_lock_tables"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_lock_tables_for_backup"))) { #optional property not found
            $ComLockTablesForBackup = $null
        } else {
            $ComLockTablesForBackup = $JsonParameters.PSobject.Properties["Com_lock_tables_for_backup"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_lock_binlog_for_backup"))) { #optional property not found
            $ComLockBinlogForBackup = $null
        } else {
            $ComLockBinlogForBackup = $JsonParameters.PSobject.Properties["Com_lock_binlog_for_backup"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_optimize"))) { #optional property not found
            $ComOptimize = $null
        } else {
            $ComOptimize = $JsonParameters.PSobject.Properties["Com_optimize"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_preload_keys"))) { #optional property not found
            $ComPreloadKeys = $null
        } else {
            $ComPreloadKeys = $JsonParameters.PSobject.Properties["Com_preload_keys"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_prepare_sql"))) { #optional property not found
            $ComPrepareSql = $null
        } else {
            $ComPrepareSql = $JsonParameters.PSobject.Properties["Com_prepare_sql"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_purge"))) { #optional property not found
            $ComPurge = $null
        } else {
            $ComPurge = $JsonParameters.PSobject.Properties["Com_purge"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_purge_before_date"))) { #optional property not found
            $ComPurgeBeforeDate = $null
        } else {
            $ComPurgeBeforeDate = $JsonParameters.PSobject.Properties["Com_purge_before_date"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_release_savepoint"))) { #optional property not found
            $ComReleaseSavepoint = $null
        } else {
            $ComReleaseSavepoint = $JsonParameters.PSobject.Properties["Com_release_savepoint"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_rename_table"))) { #optional property not found
            $ComRenameTable = $null
        } else {
            $ComRenameTable = $JsonParameters.PSobject.Properties["Com_rename_table"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_rename_user"))) { #optional property not found
            $ComRenameUser = $null
        } else {
            $ComRenameUser = $JsonParameters.PSobject.Properties["Com_rename_user"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_repair"))) { #optional property not found
            $ComRepair = $null
        } else {
            $ComRepair = $JsonParameters.PSobject.Properties["Com_repair"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_replace"))) { #optional property not found
            $ComReplace = $null
        } else {
            $ComReplace = $JsonParameters.PSobject.Properties["Com_replace"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_replace_select"))) { #optional property not found
            $ComReplaceSelect = $null
        } else {
            $ComReplaceSelect = $JsonParameters.PSobject.Properties["Com_replace_select"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_reset"))) { #optional property not found
            $ComReset = $null
        } else {
            $ComReset = $JsonParameters.PSobject.Properties["Com_reset"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_resignal"))) { #optional property not found
            $ComResignal = $null
        } else {
            $ComResignal = $JsonParameters.PSobject.Properties["Com_resignal"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_revoke"))) { #optional property not found
            $ComRevoke = $null
        } else {
            $ComRevoke = $JsonParameters.PSobject.Properties["Com_revoke"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_revoke_all"))) { #optional property not found
            $ComRevokeAll = $null
        } else {
            $ComRevokeAll = $JsonParameters.PSobject.Properties["Com_revoke_all"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_rollback"))) { #optional property not found
            $ComRollback = $null
        } else {
            $ComRollback = $JsonParameters.PSobject.Properties["Com_rollback"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_rollback_to_savepoint"))) { #optional property not found
            $ComRollbackToSavepoint = $null
        } else {
            $ComRollbackToSavepoint = $JsonParameters.PSobject.Properties["Com_rollback_to_savepoint"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_savepoint"))) { #optional property not found
            $ComSavepoint = $null
        } else {
            $ComSavepoint = $JsonParameters.PSobject.Properties["Com_savepoint"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_select"))) { #optional property not found
            $ComSelect = $null
        } else {
            $ComSelect = $JsonParameters.PSobject.Properties["Com_select"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_set_option"))) { #optional property not found
            $ComSetOption = $null
        } else {
            $ComSetOption = $JsonParameters.PSobject.Properties["Com_set_option"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_signal"))) { #optional property not found
            $ComSignal = $null
        } else {
            $ComSignal = $JsonParameters.PSobject.Properties["Com_signal"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_binlog_events"))) { #optional property not found
            $ComShowBinlogEvents = $null
        } else {
            $ComShowBinlogEvents = $JsonParameters.PSobject.Properties["Com_show_binlog_events"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_binlogs"))) { #optional property not found
            $ComShowBinlogs = $null
        } else {
            $ComShowBinlogs = $JsonParameters.PSobject.Properties["Com_show_binlogs"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_charsets"))) { #optional property not found
            $ComShowCharsets = $null
        } else {
            $ComShowCharsets = $JsonParameters.PSobject.Properties["Com_show_charsets"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_client_statistics"))) { #optional property not found
            $ComShowClientStatistics = $null
        } else {
            $ComShowClientStatistics = $JsonParameters.PSobject.Properties["Com_show_client_statistics"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_collations"))) { #optional property not found
            $ComShowCollations = $null
        } else {
            $ComShowCollations = $JsonParameters.PSobject.Properties["Com_show_collations"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_create_db"))) { #optional property not found
            $ComShowCreateDb = $null
        } else {
            $ComShowCreateDb = $JsonParameters.PSobject.Properties["Com_show_create_db"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_create_event"))) { #optional property not found
            $ComShowCreateEvent = $null
        } else {
            $ComShowCreateEvent = $JsonParameters.PSobject.Properties["Com_show_create_event"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_create_func"))) { #optional property not found
            $ComShowCreateFunc = $null
        } else {
            $ComShowCreateFunc = $JsonParameters.PSobject.Properties["Com_show_create_func"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_create_proc"))) { #optional property not found
            $ComShowCreateProc = $null
        } else {
            $ComShowCreateProc = $JsonParameters.PSobject.Properties["Com_show_create_proc"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_create_table"))) { #optional property not found
            $ComShowCreateTable = $null
        } else {
            $ComShowCreateTable = $JsonParameters.PSobject.Properties["Com_show_create_table"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_create_trigger"))) { #optional property not found
            $ComShowCreateTrigger = $null
        } else {
            $ComShowCreateTrigger = $JsonParameters.PSobject.Properties["Com_show_create_trigger"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_databases"))) { #optional property not found
            $ComShowDatabases = $null
        } else {
            $ComShowDatabases = $JsonParameters.PSobject.Properties["Com_show_databases"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_engine_logs"))) { #optional property not found
            $ComShowEngineLogs = $null
        } else {
            $ComShowEngineLogs = $JsonParameters.PSobject.Properties["Com_show_engine_logs"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_engine_mutex"))) { #optional property not found
            $ComShowEngineMutex = $null
        } else {
            $ComShowEngineMutex = $JsonParameters.PSobject.Properties["Com_show_engine_mutex"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_engine_status"))) { #optional property not found
            $ComShowEngineStatus = $null
        } else {
            $ComShowEngineStatus = $JsonParameters.PSobject.Properties["Com_show_engine_status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_events"))) { #optional property not found
            $ComShowEvents = $null
        } else {
            $ComShowEvents = $JsonParameters.PSobject.Properties["Com_show_events"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_errors"))) { #optional property not found
            $ComShowErrors = $null
        } else {
            $ComShowErrors = $JsonParameters.PSobject.Properties["Com_show_errors"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_fields"))) { #optional property not found
            $ComShowFields = $null
        } else {
            $ComShowFields = $JsonParameters.PSobject.Properties["Com_show_fields"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_function_code"))) { #optional property not found
            $ComShowFunctionCode = $null
        } else {
            $ComShowFunctionCode = $JsonParameters.PSobject.Properties["Com_show_function_code"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_function_status"))) { #optional property not found
            $ComShowFunctionStatus = $null
        } else {
            $ComShowFunctionStatus = $JsonParameters.PSobject.Properties["Com_show_function_status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_grants"))) { #optional property not found
            $ComShowGrants = $null
        } else {
            $ComShowGrants = $JsonParameters.PSobject.Properties["Com_show_grants"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_index_statistics"))) { #optional property not found
            $ComShowIndexStatistics = $null
        } else {
            $ComShowIndexStatistics = $JsonParameters.PSobject.Properties["Com_show_index_statistics"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_keys"))) { #optional property not found
            $ComShowKeys = $null
        } else {
            $ComShowKeys = $JsonParameters.PSobject.Properties["Com_show_keys"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_master_status"))) { #optional property not found
            $ComShowMasterStatus = $null
        } else {
            $ComShowMasterStatus = $JsonParameters.PSobject.Properties["Com_show_master_status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_open_tables"))) { #optional property not found
            $ComShowOpenTables = $null
        } else {
            $ComShowOpenTables = $JsonParameters.PSobject.Properties["Com_show_open_tables"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_plugins"))) { #optional property not found
            $ComShowPlugins = $null
        } else {
            $ComShowPlugins = $JsonParameters.PSobject.Properties["Com_show_plugins"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_privileges"))) { #optional property not found
            $ComShowPrivileges = $null
        } else {
            $ComShowPrivileges = $JsonParameters.PSobject.Properties["Com_show_privileges"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_procedure_code"))) { #optional property not found
            $ComShowProcedureCode = $null
        } else {
            $ComShowProcedureCode = $JsonParameters.PSobject.Properties["Com_show_procedure_code"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_procedure_status"))) { #optional property not found
            $ComShowProcedureStatus = $null
        } else {
            $ComShowProcedureStatus = $JsonParameters.PSobject.Properties["Com_show_procedure_status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_processlist"))) { #optional property not found
            $ComShowProcesslist = $null
        } else {
            $ComShowProcesslist = $JsonParameters.PSobject.Properties["Com_show_processlist"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_profile"))) { #optional property not found
            $ComShowProfile = $null
        } else {
            $ComShowProfile = $JsonParameters.PSobject.Properties["Com_show_profile"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_profiles"))) { #optional property not found
            $ComShowProfiles = $null
        } else {
            $ComShowProfiles = $JsonParameters.PSobject.Properties["Com_show_profiles"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_relaylog_events"))) { #optional property not found
            $ComShowRelaylogEvents = $null
        } else {
            $ComShowRelaylogEvents = $JsonParameters.PSobject.Properties["Com_show_relaylog_events"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_slave_hosts"))) { #optional property not found
            $ComShowSlaveHosts = $null
        } else {
            $ComShowSlaveHosts = $JsonParameters.PSobject.Properties["Com_show_slave_hosts"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_slave_status"))) { #optional property not found
            $ComShowSlaveStatus = $null
        } else {
            $ComShowSlaveStatus = $JsonParameters.PSobject.Properties["Com_show_slave_status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_status"))) { #optional property not found
            $ComShowStatus = $null
        } else {
            $ComShowStatus = $JsonParameters.PSobject.Properties["Com_show_status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_storage_engines"))) { #optional property not found
            $ComShowStorageEngines = $null
        } else {
            $ComShowStorageEngines = $JsonParameters.PSobject.Properties["Com_show_storage_engines"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_table_statistics"))) { #optional property not found
            $ComShowTableStatistics = $null
        } else {
            $ComShowTableStatistics = $JsonParameters.PSobject.Properties["Com_show_table_statistics"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_table_status"))) { #optional property not found
            $ComShowTableStatus = $null
        } else {
            $ComShowTableStatus = $JsonParameters.PSobject.Properties["Com_show_table_status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_tables"))) { #optional property not found
            $ComShowTables = $null
        } else {
            $ComShowTables = $JsonParameters.PSobject.Properties["Com_show_tables"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_thread_statistics"))) { #optional property not found
            $ComShowThreadStatistics = $null
        } else {
            $ComShowThreadStatistics = $JsonParameters.PSobject.Properties["Com_show_thread_statistics"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_triggers"))) { #optional property not found
            $ComShowTriggers = $null
        } else {
            $ComShowTriggers = $JsonParameters.PSobject.Properties["Com_show_triggers"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_user_statistics"))) { #optional property not found
            $ComShowUserStatistics = $null
        } else {
            $ComShowUserStatistics = $JsonParameters.PSobject.Properties["Com_show_user_statistics"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_variables"))) { #optional property not found
            $ComShowVariables = $null
        } else {
            $ComShowVariables = $JsonParameters.PSobject.Properties["Com_show_variables"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_warnings"))) { #optional property not found
            $ComShowWarnings = $null
        } else {
            $ComShowWarnings = $JsonParameters.PSobject.Properties["Com_show_warnings"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_show_create_user"))) { #optional property not found
            $ComShowCreateUser = $null
        } else {
            $ComShowCreateUser = $JsonParameters.PSobject.Properties["Com_show_create_user"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_shutdown"))) { #optional property not found
            $ComShutdown = $null
        } else {
            $ComShutdown = $JsonParameters.PSobject.Properties["Com_shutdown"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_slave_start"))) { #optional property not found
            $ComSlaveStart = $null
        } else {
            $ComSlaveStart = $JsonParameters.PSobject.Properties["Com_slave_start"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_slave_stop"))) { #optional property not found
            $ComSlaveStop = $null
        } else {
            $ComSlaveStop = $JsonParameters.PSobject.Properties["Com_slave_stop"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_group_replication_start"))) { #optional property not found
            $ComGroupReplicationStart = $null
        } else {
            $ComGroupReplicationStart = $JsonParameters.PSobject.Properties["Com_group_replication_start"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_group_replication_stop"))) { #optional property not found
            $ComGroupReplicationStop = $null
        } else {
            $ComGroupReplicationStop = $JsonParameters.PSobject.Properties["Com_group_replication_stop"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_stmt_execute"))) { #optional property not found
            $ComStmtExecute = $null
        } else {
            $ComStmtExecute = $JsonParameters.PSobject.Properties["Com_stmt_execute"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_stmt_close"))) { #optional property not found
            $ComStmtClose = $null
        } else {
            $ComStmtClose = $JsonParameters.PSobject.Properties["Com_stmt_close"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_stmt_fetch"))) { #optional property not found
            $ComStmtFetch = $null
        } else {
            $ComStmtFetch = $JsonParameters.PSobject.Properties["Com_stmt_fetch"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_stmt_prepare"))) { #optional property not found
            $ComStmtPrepare = $null
        } else {
            $ComStmtPrepare = $JsonParameters.PSobject.Properties["Com_stmt_prepare"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_stmt_reset"))) { #optional property not found
            $ComStmtReset = $null
        } else {
            $ComStmtReset = $JsonParameters.PSobject.Properties["Com_stmt_reset"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_stmt_send_long_data"))) { #optional property not found
            $ComStmtSendLongData = $null
        } else {
            $ComStmtSendLongData = $JsonParameters.PSobject.Properties["Com_stmt_send_long_data"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_truncate"))) { #optional property not found
            $ComTruncate = $null
        } else {
            $ComTruncate = $JsonParameters.PSobject.Properties["Com_truncate"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_uninstall_plugin"))) { #optional property not found
            $ComUninstallPlugin = $null
        } else {
            $ComUninstallPlugin = $JsonParameters.PSobject.Properties["Com_uninstall_plugin"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_unlock_binlog"))) { #optional property not found
            $ComUnlockBinlog = $null
        } else {
            $ComUnlockBinlog = $JsonParameters.PSobject.Properties["Com_unlock_binlog"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_unlock_tables"))) { #optional property not found
            $ComUnlockTables = $null
        } else {
            $ComUnlockTables = $JsonParameters.PSobject.Properties["Com_unlock_tables"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_update"))) { #optional property not found
            $ComUpdate = $null
        } else {
            $ComUpdate = $JsonParameters.PSobject.Properties["Com_update"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_update_multi"))) { #optional property not found
            $ComUpdateMulti = $null
        } else {
            $ComUpdateMulti = $JsonParameters.PSobject.Properties["Com_update_multi"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_xa_commit"))) { #optional property not found
            $ComXaCommit = $null
        } else {
            $ComXaCommit = $JsonParameters.PSobject.Properties["Com_xa_commit"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_xa_end"))) { #optional property not found
            $ComXaEnd = $null
        } else {
            $ComXaEnd = $JsonParameters.PSobject.Properties["Com_xa_end"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_xa_prepare"))) { #optional property not found
            $ComXaPrepare = $null
        } else {
            $ComXaPrepare = $JsonParameters.PSobject.Properties["Com_xa_prepare"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_xa_recover"))) { #optional property not found
            $ComXaRecover = $null
        } else {
            $ComXaRecover = $JsonParameters.PSobject.Properties["Com_xa_recover"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_xa_rollback"))) { #optional property not found
            $ComXaRollback = $null
        } else {
            $ComXaRollback = $JsonParameters.PSobject.Properties["Com_xa_rollback"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_xa_start"))) { #optional property not found
            $ComXaStart = $null
        } else {
            $ComXaStart = $JsonParameters.PSobject.Properties["Com_xa_start"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Com_stmt_reprepare"))) { #optional property not found
            $ComStmtReprepare = $null
        } else {
            $ComStmtReprepare = $JsonParameters.PSobject.Properties["Com_stmt_reprepare"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Compression"))) { #optional property not found
            $Compression = $null
        } else {
            $Compression = $JsonParameters.PSobject.Properties["Compression"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Connection_errors_accept"))) { #optional property not found
            $ConnectionErrorsAccept = $null
        } else {
            $ConnectionErrorsAccept = $JsonParameters.PSobject.Properties["Connection_errors_accept"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Connection_errors_internal"))) { #optional property not found
            $ConnectionErrorsInternal = $null
        } else {
            $ConnectionErrorsInternal = $JsonParameters.PSobject.Properties["Connection_errors_internal"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Connection_errors_max_connections"))) { #optional property not found
            $ConnectionErrorsMaxConnections = $null
        } else {
            $ConnectionErrorsMaxConnections = $JsonParameters.PSobject.Properties["Connection_errors_max_connections"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Connection_errors_peer_address"))) { #optional property not found
            $ConnectionErrorsPeerAddress = $null
        } else {
            $ConnectionErrorsPeerAddress = $JsonParameters.PSobject.Properties["Connection_errors_peer_address"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Connection_errors_select"))) { #optional property not found
            $ConnectionErrorsSelect = $null
        } else {
            $ConnectionErrorsSelect = $JsonParameters.PSobject.Properties["Connection_errors_select"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Connection_errors_tcpwrap"))) { #optional property not found
            $ConnectionErrorsTcpwrap = $null
        } else {
            $ConnectionErrorsTcpwrap = $JsonParameters.PSobject.Properties["Connection_errors_tcpwrap"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Connections"))) { #optional property not found
            $Connections = $null
        } else {
            $Connections = $JsonParameters.PSobject.Properties["Connections"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Created_tmp_disk_tables"))) { #optional property not found
            $CreatedTmpDiskTables = $null
        } else {
            $CreatedTmpDiskTables = $JsonParameters.PSobject.Properties["Created_tmp_disk_tables"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Created_tmp_files"))) { #optional property not found
            $CreatedTmpFiles = $null
        } else {
            $CreatedTmpFiles = $JsonParameters.PSobject.Properties["Created_tmp_files"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Created_tmp_tables"))) { #optional property not found
            $CreatedTmpTables = $null
        } else {
            $CreatedTmpTables = $JsonParameters.PSobject.Properties["Created_tmp_tables"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Delayed_errors"))) { #optional property not found
            $DelayedErrors = $null
        } else {
            $DelayedErrors = $JsonParameters.PSobject.Properties["Delayed_errors"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Delayed_insert_threads"))) { #optional property not found
            $DelayedInsertThreads = $null
        } else {
            $DelayedInsertThreads = $JsonParameters.PSobject.Properties["Delayed_insert_threads"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Delayed_writes"))) { #optional property not found
            $DelayedWrites = $null
        } else {
            $DelayedWrites = $JsonParameters.PSobject.Properties["Delayed_writes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Flush_commands"))) { #optional property not found
            $FlushCommands = $null
        } else {
            $FlushCommands = $JsonParameters.PSobject.Properties["Flush_commands"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Handler_commit"))) { #optional property not found
            $HandlerCommit = $null
        } else {
            $HandlerCommit = $JsonParameters.PSobject.Properties["Handler_commit"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Handler_delete"))) { #optional property not found
            $HandlerDelete = $null
        } else {
            $HandlerDelete = $JsonParameters.PSobject.Properties["Handler_delete"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Handler_discover"))) { #optional property not found
            $HandlerDiscover = $null
        } else {
            $HandlerDiscover = $JsonParameters.PSobject.Properties["Handler_discover"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Handler_external_lock"))) { #optional property not found
            $HandlerExternalLock = $null
        } else {
            $HandlerExternalLock = $JsonParameters.PSobject.Properties["Handler_external_lock"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Handler_mrr_init"))) { #optional property not found
            $HandlerMrrInit = $null
        } else {
            $HandlerMrrInit = $JsonParameters.PSobject.Properties["Handler_mrr_init"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Handler_prepare"))) { #optional property not found
            $HandlerPrepare = $null
        } else {
            $HandlerPrepare = $JsonParameters.PSobject.Properties["Handler_prepare"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Handler_read_first"))) { #optional property not found
            $HandlerReadFirst = $null
        } else {
            $HandlerReadFirst = $JsonParameters.PSobject.Properties["Handler_read_first"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Handler_read_key"))) { #optional property not found
            $HandlerReadKey = $null
        } else {
            $HandlerReadKey = $JsonParameters.PSobject.Properties["Handler_read_key"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Handler_read_last"))) { #optional property not found
            $HandlerReadLast = $null
        } else {
            $HandlerReadLast = $JsonParameters.PSobject.Properties["Handler_read_last"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Handler_read_next"))) { #optional property not found
            $HandlerReadNext = $null
        } else {
            $HandlerReadNext = $JsonParameters.PSobject.Properties["Handler_read_next"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Handler_read_prev"))) { #optional property not found
            $HandlerReadPrev = $null
        } else {
            $HandlerReadPrev = $JsonParameters.PSobject.Properties["Handler_read_prev"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Handler_read_rnd"))) { #optional property not found
            $HandlerReadRnd = $null
        } else {
            $HandlerReadRnd = $JsonParameters.PSobject.Properties["Handler_read_rnd"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Handler_read_rnd_next"))) { #optional property not found
            $HandlerReadRndNext = $null
        } else {
            $HandlerReadRndNext = $JsonParameters.PSobject.Properties["Handler_read_rnd_next"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Handler_rollback"))) { #optional property not found
            $HandlerRollback = $null
        } else {
            $HandlerRollback = $JsonParameters.PSobject.Properties["Handler_rollback"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Handler_savepoint"))) { #optional property not found
            $HandlerSavepoint = $null
        } else {
            $HandlerSavepoint = $JsonParameters.PSobject.Properties["Handler_savepoint"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Handler_savepoint_rollback"))) { #optional property not found
            $HandlerSavepointRollback = $null
        } else {
            $HandlerSavepointRollback = $JsonParameters.PSobject.Properties["Handler_savepoint_rollback"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Handler_update"))) { #optional property not found
            $HandlerUpdate = $null
        } else {
            $HandlerUpdate = $JsonParameters.PSobject.Properties["Handler_update"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Handler_write"))) { #optional property not found
            $HandlerWrite = $null
        } else {
            $HandlerWrite = $JsonParameters.PSobject.Properties["Handler_write"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_background_log_sync"))) { #optional property not found
            $InnodbBackgroundLogSync = $null
        } else {
            $InnodbBackgroundLogSync = $JsonParameters.PSobject.Properties["Innodb_background_log_sync"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_dump_status"))) { #optional property not found
            $InnodbBufferPoolDumpStatus = $null
        } else {
            $InnodbBufferPoolDumpStatus = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_dump_status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_load_status"))) { #optional property not found
            $InnodbBufferPoolLoadStatus = $null
        } else {
            $InnodbBufferPoolLoadStatus = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_load_status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_resize_status"))) { #optional property not found
            $InnodbBufferPoolResizeStatus = $null
        } else {
            $InnodbBufferPoolResizeStatus = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_resize_status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_pages_data"))) { #optional property not found
            $InnodbBufferPoolPagesData = $null
        } else {
            $InnodbBufferPoolPagesData = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_pages_data"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_bytes_data"))) { #optional property not found
            $InnodbBufferPoolBytesData = $null
        } else {
            $InnodbBufferPoolBytesData = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_bytes_data"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_pages_dirty"))) { #optional property not found
            $InnodbBufferPoolPagesDirty = $null
        } else {
            $InnodbBufferPoolPagesDirty = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_pages_dirty"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_bytes_dirty"))) { #optional property not found
            $InnodbBufferPoolBytesDirty = $null
        } else {
            $InnodbBufferPoolBytesDirty = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_bytes_dirty"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_pages_flushed"))) { #optional property not found
            $InnodbBufferPoolPagesFlushed = $null
        } else {
            $InnodbBufferPoolPagesFlushed = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_pages_flushed"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_pages_free"))) { #optional property not found
            $InnodbBufferPoolPagesFree = $null
        } else {
            $InnodbBufferPoolPagesFree = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_pages_free"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_pages_LRU_flushed"))) { #optional property not found
            $InnodbBufferPoolPagesLRUFlushed = $null
        } else {
            $InnodbBufferPoolPagesLRUFlushed = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_pages_LRU_flushed"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_pages_made_not_young"))) { #optional property not found
            $InnodbBufferPoolPagesMadeNotYoung = $null
        } else {
            $InnodbBufferPoolPagesMadeNotYoung = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_pages_made_not_young"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_pages_made_young"))) { #optional property not found
            $InnodbBufferPoolPagesMadeYoung = $null
        } else {
            $InnodbBufferPoolPagesMadeYoung = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_pages_made_young"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_pages_misc"))) { #optional property not found
            $InnodbBufferPoolPagesMisc = $null
        } else {
            $InnodbBufferPoolPagesMisc = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_pages_misc"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_pages_old"))) { #optional property not found
            $InnodbBufferPoolPagesOld = $null
        } else {
            $InnodbBufferPoolPagesOld = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_pages_old"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_pages_total"))) { #optional property not found
            $InnodbBufferPoolPagesTotal = $null
        } else {
            $InnodbBufferPoolPagesTotal = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_pages_total"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_read_ahead_rnd"))) { #optional property not found
            $InnodbBufferPoolReadAheadRnd = $null
        } else {
            $InnodbBufferPoolReadAheadRnd = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_read_ahead_rnd"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_read_ahead"))) { #optional property not found
            $InnodbBufferPoolReadAhead = $null
        } else {
            $InnodbBufferPoolReadAhead = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_read_ahead"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_read_ahead_evicted"))) { #optional property not found
            $InnodbBufferPoolReadAheadEvicted = $null
        } else {
            $InnodbBufferPoolReadAheadEvicted = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_read_ahead_evicted"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_read_requests"))) { #optional property not found
            $InnodbBufferPoolReadRequests = $null
        } else {
            $InnodbBufferPoolReadRequests = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_read_requests"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_reads"))) { #optional property not found
            $InnodbBufferPoolReads = $null
        } else {
            $InnodbBufferPoolReads = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_reads"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_wait_free"))) { #optional property not found
            $InnodbBufferPoolWaitFree = $null
        } else {
            $InnodbBufferPoolWaitFree = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_wait_free"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffer_pool_write_requests"))) { #optional property not found
            $InnodbBufferPoolWriteRequests = $null
        } else {
            $InnodbBufferPoolWriteRequests = $JsonParameters.PSobject.Properties["Innodb_buffer_pool_write_requests"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_checkpoint_age"))) { #optional property not found
            $InnodbCheckpointAge = $null
        } else {
            $InnodbCheckpointAge = $JsonParameters.PSobject.Properties["Innodb_checkpoint_age"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_checkpoint_max_age"))) { #optional property not found
            $InnodbCheckpointMaxAge = $null
        } else {
            $InnodbCheckpointMaxAge = $JsonParameters.PSobject.Properties["Innodb_checkpoint_max_age"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_data_fsyncs"))) { #optional property not found
            $InnodbDataFsyncs = $null
        } else {
            $InnodbDataFsyncs = $JsonParameters.PSobject.Properties["Innodb_data_fsyncs"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_data_pending_fsyncs"))) { #optional property not found
            $InnodbDataPendingFsyncs = $null
        } else {
            $InnodbDataPendingFsyncs = $JsonParameters.PSobject.Properties["Innodb_data_pending_fsyncs"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_data_pending_reads"))) { #optional property not found
            $InnodbDataPendingReads = $null
        } else {
            $InnodbDataPendingReads = $JsonParameters.PSobject.Properties["Innodb_data_pending_reads"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_data_pending_writes"))) { #optional property not found
            $InnodbDataPendingWrites = $null
        } else {
            $InnodbDataPendingWrites = $JsonParameters.PSobject.Properties["Innodb_data_pending_writes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_data_read"))) { #optional property not found
            $InnodbDataRead = $null
        } else {
            $InnodbDataRead = $JsonParameters.PSobject.Properties["Innodb_data_read"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_data_reads"))) { #optional property not found
            $InnodbDataReads = $null
        } else {
            $InnodbDataReads = $JsonParameters.PSobject.Properties["Innodb_data_reads"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_data_writes"))) { #optional property not found
            $InnodbDataWrites = $null
        } else {
            $InnodbDataWrites = $JsonParameters.PSobject.Properties["Innodb_data_writes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_data_written"))) { #optional property not found
            $InnodbDataWritten = $null
        } else {
            $InnodbDataWritten = $JsonParameters.PSobject.Properties["Innodb_data_written"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_dblwr_pages_written"))) { #optional property not found
            $InnodbDblwrPagesWritten = $null
        } else {
            $InnodbDblwrPagesWritten = $JsonParameters.PSobject.Properties["Innodb_dblwr_pages_written"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_dblwr_writes"))) { #optional property not found
            $InnodbDblwrWrites = $null
        } else {
            $InnodbDblwrWrites = $JsonParameters.PSobject.Properties["Innodb_dblwr_writes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_ibuf_free_list"))) { #optional property not found
            $InnodbIbufFreeList = $null
        } else {
            $InnodbIbufFreeList = $JsonParameters.PSobject.Properties["Innodb_ibuf_free_list"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_ibuf_segment_size"))) { #optional property not found
            $InnodbIbufSegmentSize = $null
        } else {
            $InnodbIbufSegmentSize = $JsonParameters.PSobject.Properties["Innodb_ibuf_segment_size"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_log_waits"))) { #optional property not found
            $InnodbLogWaits = $null
        } else {
            $InnodbLogWaits = $JsonParameters.PSobject.Properties["Innodb_log_waits"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_log_write_requests"))) { #optional property not found
            $InnodbLogWriteRequests = $null
        } else {
            $InnodbLogWriteRequests = $JsonParameters.PSobject.Properties["Innodb_log_write_requests"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_log_writes"))) { #optional property not found
            $InnodbLogWrites = $null
        } else {
            $InnodbLogWrites = $JsonParameters.PSobject.Properties["Innodb_log_writes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_lsn_current"))) { #optional property not found
            $InnodbLsnCurrent = $null
        } else {
            $InnodbLsnCurrent = $JsonParameters.PSobject.Properties["Innodb_lsn_current"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_lsn_flushed"))) { #optional property not found
            $InnodbLsnFlushed = $null
        } else {
            $InnodbLsnFlushed = $JsonParameters.PSobject.Properties["Innodb_lsn_flushed"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_lsn_last_checkpoint"))) { #optional property not found
            $InnodbLsnLastCheckpoint = $null
        } else {
            $InnodbLsnLastCheckpoint = $JsonParameters.PSobject.Properties["Innodb_lsn_last_checkpoint"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_master_thread_active_loops"))) { #optional property not found
            $InnodbMasterThreadActiveLoops = $null
        } else {
            $InnodbMasterThreadActiveLoops = $JsonParameters.PSobject.Properties["Innodb_master_thread_active_loops"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_master_thread_idle_loops"))) { #optional property not found
            $InnodbMasterThreadIdleLoops = $null
        } else {
            $InnodbMasterThreadIdleLoops = $JsonParameters.PSobject.Properties["Innodb_master_thread_idle_loops"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_max_trx_id"))) { #optional property not found
            $InnodbMaxTrxId = $null
        } else {
            $InnodbMaxTrxId = $JsonParameters.PSobject.Properties["Innodb_max_trx_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_mem_adaptive_hash"))) { #optional property not found
            $InnodbMemAdaptiveHash = $null
        } else {
            $InnodbMemAdaptiveHash = $JsonParameters.PSobject.Properties["Innodb_mem_adaptive_hash"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_mem_dictionary"))) { #optional property not found
            $InnodbMemDictionary = $null
        } else {
            $InnodbMemDictionary = $JsonParameters.PSobject.Properties["Innodb_mem_dictionary"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_oldest_view_low_limit_trx_id"))) { #optional property not found
            $InnodbOldestViewLowLimitTrxId = $null
        } else {
            $InnodbOldestViewLowLimitTrxId = $JsonParameters.PSobject.Properties["Innodb_oldest_view_low_limit_trx_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_os_log_fsyncs"))) { #optional property not found
            $InnodbOsLogFsyncs = $null
        } else {
            $InnodbOsLogFsyncs = $JsonParameters.PSobject.Properties["Innodb_os_log_fsyncs"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_os_log_pending_fsyncs"))) { #optional property not found
            $InnodbOsLogPendingFsyncs = $null
        } else {
            $InnodbOsLogPendingFsyncs = $JsonParameters.PSobject.Properties["Innodb_os_log_pending_fsyncs"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_os_log_pending_writes"))) { #optional property not found
            $InnodbOsLogPendingWrites = $null
        } else {
            $InnodbOsLogPendingWrites = $JsonParameters.PSobject.Properties["Innodb_os_log_pending_writes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_os_log_written"))) { #optional property not found
            $InnodbOsLogWritten = $null
        } else {
            $InnodbOsLogWritten = $JsonParameters.PSobject.Properties["Innodb_os_log_written"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_page_size"))) { #optional property not found
            $InnodbPageSize = $null
        } else {
            $InnodbPageSize = $JsonParameters.PSobject.Properties["Innodb_page_size"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_pages_created"))) { #optional property not found
            $InnodbPagesCreated = $null
        } else {
            $InnodbPagesCreated = $JsonParameters.PSobject.Properties["Innodb_pages_created"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_pages_read"))) { #optional property not found
            $InnodbPagesRead = $null
        } else {
            $InnodbPagesRead = $JsonParameters.PSobject.Properties["Innodb_pages_read"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_pages0_read"))) { #optional property not found
            $InnodbPages0Read = $null
        } else {
            $InnodbPages0Read = $JsonParameters.PSobject.Properties["Innodb_pages0_read"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_pages_written"))) { #optional property not found
            $InnodbPagesWritten = $null
        } else {
            $InnodbPagesWritten = $JsonParameters.PSobject.Properties["Innodb_pages_written"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_purge_trx_id"))) { #optional property not found
            $InnodbPurgeTrxId = $null
        } else {
            $InnodbPurgeTrxId = $JsonParameters.PSobject.Properties["Innodb_purge_trx_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_purge_undo_no"))) { #optional property not found
            $InnodbPurgeUndoNo = $null
        } else {
            $InnodbPurgeUndoNo = $JsonParameters.PSobject.Properties["Innodb_purge_undo_no"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_row_lock_current_waits"))) { #optional property not found
            $InnodbRowLockCurrentWaits = $null
        } else {
            $InnodbRowLockCurrentWaits = $JsonParameters.PSobject.Properties["Innodb_row_lock_current_waits"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_row_lock_time"))) { #optional property not found
            $InnodbRowLockTime = $null
        } else {
            $InnodbRowLockTime = $JsonParameters.PSobject.Properties["Innodb_row_lock_time"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_row_lock_time_avg"))) { #optional property not found
            $InnodbRowLockTimeAvg = $null
        } else {
            $InnodbRowLockTimeAvg = $JsonParameters.PSobject.Properties["Innodb_row_lock_time_avg"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_row_lock_time_max"))) { #optional property not found
            $InnodbRowLockTimeMax = $null
        } else {
            $InnodbRowLockTimeMax = $JsonParameters.PSobject.Properties["Innodb_row_lock_time_max"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_row_lock_waits"))) { #optional property not found
            $InnodbRowLockWaits = $null
        } else {
            $InnodbRowLockWaits = $JsonParameters.PSobject.Properties["Innodb_row_lock_waits"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_rows_deleted"))) { #optional property not found
            $InnodbRowsDeleted = $null
        } else {
            $InnodbRowsDeleted = $JsonParameters.PSobject.Properties["Innodb_rows_deleted"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_rows_inserted"))) { #optional property not found
            $InnodbRowsInserted = $null
        } else {
            $InnodbRowsInserted = $JsonParameters.PSobject.Properties["Innodb_rows_inserted"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_rows_read"))) { #optional property not found
            $InnodbRowsRead = $null
        } else {
            $InnodbRowsRead = $JsonParameters.PSobject.Properties["Innodb_rows_read"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_rows_updated"))) { #optional property not found
            $InnodbRowsUpdated = $null
        } else {
            $InnodbRowsUpdated = $JsonParameters.PSobject.Properties["Innodb_rows_updated"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_num_open_files"))) { #optional property not found
            $InnodbNumOpenFiles = $null
        } else {
            $InnodbNumOpenFiles = $JsonParameters.PSobject.Properties["Innodb_num_open_files"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_truncated_status_writes"))) { #optional property not found
            $InnodbTruncatedStatusWrites = $null
        } else {
            $InnodbTruncatedStatusWrites = $JsonParameters.PSobject.Properties["Innodb_truncated_status_writes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_available_undo_logs"))) { #optional property not found
            $InnodbAvailableUndoLogs = $null
        } else {
            $InnodbAvailableUndoLogs = $JsonParameters.PSobject.Properties["Innodb_available_undo_logs"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_secondary_index_triggered_cluster_reads"))) { #optional property not found
            $InnodbSecondaryIndexTriggeredClusterReads = $null
        } else {
            $InnodbSecondaryIndexTriggeredClusterReads = $JsonParameters.PSobject.Properties["Innodb_secondary_index_triggered_cluster_reads"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_secondary_index_triggered_cluster_reads_avoided"))) { #optional property not found
            $InnodbSecondaryIndexTriggeredClusterReadsAvoided = $null
        } else {
            $InnodbSecondaryIndexTriggeredClusterReadsAvoided = $JsonParameters.PSobject.Properties["Innodb_secondary_index_triggered_cluster_reads_avoided"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_buffered_aio_submitted"))) { #optional property not found
            $InnodbBufferedAioSubmitted = $null
        } else {
            $InnodbBufferedAioSubmitted = $JsonParameters.PSobject.Properties["Innodb_buffered_aio_submitted"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_scan_pages_contiguous"))) { #optional property not found
            $InnodbScanPagesContiguous = $null
        } else {
            $InnodbScanPagesContiguous = $JsonParameters.PSobject.Properties["Innodb_scan_pages_contiguous"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_scan_pages_disjointed"))) { #optional property not found
            $InnodbScanPagesDisjointed = $null
        } else {
            $InnodbScanPagesDisjointed = $JsonParameters.PSobject.Properties["Innodb_scan_pages_disjointed"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_scan_pages_total_seek_distance"))) { #optional property not found
            $InnodbScanPagesTotalSeekDistance = $null
        } else {
            $InnodbScanPagesTotalSeekDistance = $JsonParameters.PSobject.Properties["Innodb_scan_pages_total_seek_distance"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_scan_data_size"))) { #optional property not found
            $InnodbScanDataSize = $null
        } else {
            $InnodbScanDataSize = $JsonParameters.PSobject.Properties["Innodb_scan_data_size"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_scan_deleted_recs_size"))) { #optional property not found
            $InnodbScanDeletedRecsSize = $null
        } else {
            $InnodbScanDeletedRecsSize = $JsonParameters.PSobject.Properties["Innodb_scan_deleted_recs_size"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_scrub_background_page_reorganizations"))) { #optional property not found
            $InnodbScrubBackgroundPageReorganizations = $null
        } else {
            $InnodbScrubBackgroundPageReorganizations = $JsonParameters.PSobject.Properties["Innodb_scrub_background_page_reorganizations"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_scrub_background_page_splits"))) { #optional property not found
            $InnodbScrubBackgroundPageSplits = $null
        } else {
            $InnodbScrubBackgroundPageSplits = $JsonParameters.PSobject.Properties["Innodb_scrub_background_page_splits"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_scrub_background_page_split_failures_underflow"))) { #optional property not found
            $InnodbScrubBackgroundPageSplitFailuresUnderflow = $null
        } else {
            $InnodbScrubBackgroundPageSplitFailuresUnderflow = $JsonParameters.PSobject.Properties["Innodb_scrub_background_page_split_failures_underflow"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_scrub_background_page_split_failures_out_of_filespace"))) { #optional property not found
            $InnodbScrubBackgroundPageSplitFailuresOutOfFilespace = $null
        } else {
            $InnodbScrubBackgroundPageSplitFailuresOutOfFilespace = $JsonParameters.PSobject.Properties["Innodb_scrub_background_page_split_failures_out_of_filespace"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_scrub_background_page_split_failures_missing_index"))) { #optional property not found
            $InnodbScrubBackgroundPageSplitFailuresMissingIndex = $null
        } else {
            $InnodbScrubBackgroundPageSplitFailuresMissingIndex = $JsonParameters.PSobject.Properties["Innodb_scrub_background_page_split_failures_missing_index"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_scrub_background_page_split_failures_unknown"))) { #optional property not found
            $InnodbScrubBackgroundPageSplitFailuresUnknown = $null
        } else {
            $InnodbScrubBackgroundPageSplitFailuresUnknown = $JsonParameters.PSobject.Properties["Innodb_scrub_background_page_split_failures_unknown"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_scrub_log"))) { #optional property not found
            $InnodbScrubLog = $null
        } else {
            $InnodbScrubLog = $JsonParameters.PSobject.Properties["Innodb_scrub_log"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_encryption_rotation_pages_read_from_cache"))) { #optional property not found
            $InnodbEncryptionRotationPagesReadFromCache = $null
        } else {
            $InnodbEncryptionRotationPagesReadFromCache = $JsonParameters.PSobject.Properties["Innodb_encryption_rotation_pages_read_from_cache"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_encryption_rotation_pages_read_from_disk"))) { #optional property not found
            $InnodbEncryptionRotationPagesReadFromDisk = $null
        } else {
            $InnodbEncryptionRotationPagesReadFromDisk = $JsonParameters.PSobject.Properties["Innodb_encryption_rotation_pages_read_from_disk"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_encryption_rotation_pages_modified"))) { #optional property not found
            $InnodbEncryptionRotationPagesModified = $null
        } else {
            $InnodbEncryptionRotationPagesModified = $JsonParameters.PSobject.Properties["Innodb_encryption_rotation_pages_modified"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_encryption_rotation_pages_flushed"))) { #optional property not found
            $InnodbEncryptionRotationPagesFlushed = $null
        } else {
            $InnodbEncryptionRotationPagesFlushed = $JsonParameters.PSobject.Properties["Innodb_encryption_rotation_pages_flushed"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_encryption_rotation_estimated_iops"))) { #optional property not found
            $InnodbEncryptionRotationEstimatedIops = $null
        } else {
            $InnodbEncryptionRotationEstimatedIops = $JsonParameters.PSobject.Properties["Innodb_encryption_rotation_estimated_iops"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_encryption_key_rotation_list_length"))) { #optional property not found
            $InnodbEncryptionKeyRotationListLength = $null
        } else {
            $InnodbEncryptionKeyRotationListLength = $JsonParameters.PSobject.Properties["Innodb_encryption_key_rotation_list_length"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_encryption_n_merge_blocks_encrypted"))) { #optional property not found
            $InnodbEncryptionNMergeBlocksEncrypted = $null
        } else {
            $InnodbEncryptionNMergeBlocksEncrypted = $JsonParameters.PSobject.Properties["Innodb_encryption_n_merge_blocks_encrypted"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_encryption_n_merge_blocks_decrypted"))) { #optional property not found
            $InnodbEncryptionNMergeBlocksDecrypted = $null
        } else {
            $InnodbEncryptionNMergeBlocksDecrypted = $JsonParameters.PSobject.Properties["Innodb_encryption_n_merge_blocks_decrypted"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_encryption_n_rowlog_blocks_encrypted"))) { #optional property not found
            $InnodbEncryptionNRowlogBlocksEncrypted = $null
        } else {
            $InnodbEncryptionNRowlogBlocksEncrypted = $JsonParameters.PSobject.Properties["Innodb_encryption_n_rowlog_blocks_encrypted"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_encryption_n_rowlog_blocks_decrypted"))) { #optional property not found
            $InnodbEncryptionNRowlogBlocksDecrypted = $null
        } else {
            $InnodbEncryptionNRowlogBlocksDecrypted = $JsonParameters.PSobject.Properties["Innodb_encryption_n_rowlog_blocks_decrypted"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_num_pages_encrypted"))) { #optional property not found
            $InnodbNumPagesEncrypted = $null
        } else {
            $InnodbNumPagesEncrypted = $JsonParameters.PSobject.Properties["Innodb_num_pages_encrypted"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_num_pages_decrypted"))) { #optional property not found
            $InnodbNumPagesDecrypted = $null
        } else {
            $InnodbNumPagesDecrypted = $JsonParameters.PSobject.Properties["Innodb_num_pages_decrypted"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Innodb_encryption_redo_key_version"))) { #optional property not found
            $InnodbEncryptionRedoKeyVersion = $null
        } else {
            $InnodbEncryptionRedoKeyVersion = $JsonParameters.PSobject.Properties["Innodb_encryption_redo_key_version"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Key_blocks_not_flushed"))) { #optional property not found
            $KeyBlocksNotFlushed = $null
        } else {
            $KeyBlocksNotFlushed = $JsonParameters.PSobject.Properties["Key_blocks_not_flushed"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Key_blocks_unused"))) { #optional property not found
            $KeyBlocksUnused = $null
        } else {
            $KeyBlocksUnused = $JsonParameters.PSobject.Properties["Key_blocks_unused"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Key_blocks_used"))) { #optional property not found
            $KeyBlocksUsed = $null
        } else {
            $KeyBlocksUsed = $JsonParameters.PSobject.Properties["Key_blocks_used"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Key_read_requests"))) { #optional property not found
            $KeyReadRequests = $null
        } else {
            $KeyReadRequests = $JsonParameters.PSobject.Properties["Key_read_requests"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Key_reads"))) { #optional property not found
            $KeyReads = $null
        } else {
            $KeyReads = $JsonParameters.PSobject.Properties["Key_reads"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Key_write_requests"))) { #optional property not found
            $KeyWriteRequests = $null
        } else {
            $KeyWriteRequests = $JsonParameters.PSobject.Properties["Key_write_requests"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Key_writes"))) { #optional property not found
            $KeyWrites = $null
        } else {
            $KeyWrites = $JsonParameters.PSobject.Properties["Key_writes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Last_query_cost"))) { #optional property not found
            $LastQueryCost = $null
        } else {
            $LastQueryCost = $JsonParameters.PSobject.Properties["Last_query_cost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Last_query_partial_plans"))) { #optional property not found
            $LastQueryPartialPlans = $null
        } else {
            $LastQueryPartialPlans = $JsonParameters.PSobject.Properties["Last_query_partial_plans"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Locked_connects"))) { #optional property not found
            $LockedConnects = $null
        } else {
            $LockedConnects = $JsonParameters.PSobject.Properties["Locked_connects"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Max_execution_time_exceeded"))) { #optional property not found
            $MaxExecutionTimeExceeded = $null
        } else {
            $MaxExecutionTimeExceeded = $JsonParameters.PSobject.Properties["Max_execution_time_exceeded"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Max_execution_time_set"))) { #optional property not found
            $MaxExecutionTimeSet = $null
        } else {
            $MaxExecutionTimeSet = $JsonParameters.PSobject.Properties["Max_execution_time_set"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Max_execution_time_set_failed"))) { #optional property not found
            $MaxExecutionTimeSetFailed = $null
        } else {
            $MaxExecutionTimeSetFailed = $JsonParameters.PSobject.Properties["Max_execution_time_set_failed"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Max_used_connections"))) { #optional property not found
            $MaxUsedConnections = $null
        } else {
            $MaxUsedConnections = $JsonParameters.PSobject.Properties["Max_used_connections"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Max_used_connections_time"))) { #optional property not found
            $MaxUsedConnectionsTime = $null
        } else {
            $MaxUsedConnectionsTime = $JsonParameters.PSobject.Properties["Max_used_connections_time"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Not_flushed_delayed_rows"))) { #optional property not found
            $NotFlushedDelayedRows = $null
        } else {
            $NotFlushedDelayedRows = $JsonParameters.PSobject.Properties["Not_flushed_delayed_rows"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ongoing_anonymous_transaction_count"))) { #optional property not found
            $OngoingAnonymousTransactionCount = $null
        } else {
            $OngoingAnonymousTransactionCount = $JsonParameters.PSobject.Properties["Ongoing_anonymous_transaction_count"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Open_files"))) { #optional property not found
            $OpenFiles = $null
        } else {
            $OpenFiles = $JsonParameters.PSobject.Properties["Open_files"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Open_streams"))) { #optional property not found
            $OpenStreams = $null
        } else {
            $OpenStreams = $JsonParameters.PSobject.Properties["Open_streams"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Open_table_definitions"))) { #optional property not found
            $OpenTableDefinitions = $null
        } else {
            $OpenTableDefinitions = $JsonParameters.PSobject.Properties["Open_table_definitions"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Open_tables"))) { #optional property not found
            $OpenTables = $null
        } else {
            $OpenTables = $JsonParameters.PSobject.Properties["Open_tables"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Opened_files"))) { #optional property not found
            $OpenedFiles = $null
        } else {
            $OpenedFiles = $JsonParameters.PSobject.Properties["Opened_files"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Opened_table_definitions"))) { #optional property not found
            $OpenedTableDefinitions = $null
        } else {
            $OpenedTableDefinitions = $JsonParameters.PSobject.Properties["Opened_table_definitions"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Opened_tables"))) { #optional property not found
            $OpenedTables = $null
        } else {
            $OpenedTables = $JsonParameters.PSobject.Properties["Opened_tables"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_accounts_lost"))) { #optional property not found
            $PerformanceSchemaAccountsLost = $null
        } else {
            $PerformanceSchemaAccountsLost = $JsonParameters.PSobject.Properties["Performance_schema_accounts_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_cond_classes_lost"))) { #optional property not found
            $PerformanceSchemaCondClassesLost = $null
        } else {
            $PerformanceSchemaCondClassesLost = $JsonParameters.PSobject.Properties["Performance_schema_cond_classes_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_cond_instances_lost"))) { #optional property not found
            $PerformanceSchemaCondInstancesLost = $null
        } else {
            $PerformanceSchemaCondInstancesLost = $JsonParameters.PSobject.Properties["Performance_schema_cond_instances_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_digest_lost"))) { #optional property not found
            $PerformanceSchemaDigestLost = $null
        } else {
            $PerformanceSchemaDigestLost = $JsonParameters.PSobject.Properties["Performance_schema_digest_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_file_classes_lost"))) { #optional property not found
            $PerformanceSchemaFileClassesLost = $null
        } else {
            $PerformanceSchemaFileClassesLost = $JsonParameters.PSobject.Properties["Performance_schema_file_classes_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_file_handles_lost"))) { #optional property not found
            $PerformanceSchemaFileHandlesLost = $null
        } else {
            $PerformanceSchemaFileHandlesLost = $JsonParameters.PSobject.Properties["Performance_schema_file_handles_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_file_instances_lost"))) { #optional property not found
            $PerformanceSchemaFileInstancesLost = $null
        } else {
            $PerformanceSchemaFileInstancesLost = $JsonParameters.PSobject.Properties["Performance_schema_file_instances_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_hosts_lost"))) { #optional property not found
            $PerformanceSchemaHostsLost = $null
        } else {
            $PerformanceSchemaHostsLost = $JsonParameters.PSobject.Properties["Performance_schema_hosts_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_index_stat_lost"))) { #optional property not found
            $PerformanceSchemaIndexStatLost = $null
        } else {
            $PerformanceSchemaIndexStatLost = $JsonParameters.PSobject.Properties["Performance_schema_index_stat_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_locker_lost"))) { #optional property not found
            $PerformanceSchemaLockerLost = $null
        } else {
            $PerformanceSchemaLockerLost = $JsonParameters.PSobject.Properties["Performance_schema_locker_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_memory_classes_lost"))) { #optional property not found
            $PerformanceSchemaMemoryClassesLost = $null
        } else {
            $PerformanceSchemaMemoryClassesLost = $JsonParameters.PSobject.Properties["Performance_schema_memory_classes_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_metadata_lock_lost"))) { #optional property not found
            $PerformanceSchemaMetadataLockLost = $null
        } else {
            $PerformanceSchemaMetadataLockLost = $JsonParameters.PSobject.Properties["Performance_schema_metadata_lock_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_mutex_classes_lost"))) { #optional property not found
            $PerformanceSchemaMutexClassesLost = $null
        } else {
            $PerformanceSchemaMutexClassesLost = $JsonParameters.PSobject.Properties["Performance_schema_mutex_classes_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_mutex_instances_lost"))) { #optional property not found
            $PerformanceSchemaMutexInstancesLost = $null
        } else {
            $PerformanceSchemaMutexInstancesLost = $JsonParameters.PSobject.Properties["Performance_schema_mutex_instances_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_nested_statement_lost"))) { #optional property not found
            $PerformanceSchemaNestedStatementLost = $null
        } else {
            $PerformanceSchemaNestedStatementLost = $JsonParameters.PSobject.Properties["Performance_schema_nested_statement_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_prepared_statements_lost"))) { #optional property not found
            $PerformanceSchemaPreparedStatementsLost = $null
        } else {
            $PerformanceSchemaPreparedStatementsLost = $JsonParameters.PSobject.Properties["Performance_schema_prepared_statements_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_program_lost"))) { #optional property not found
            $PerformanceSchemaProgramLost = $null
        } else {
            $PerformanceSchemaProgramLost = $JsonParameters.PSobject.Properties["Performance_schema_program_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_rwlock_classes_lost"))) { #optional property not found
            $PerformanceSchemaRwlockClassesLost = $null
        } else {
            $PerformanceSchemaRwlockClassesLost = $JsonParameters.PSobject.Properties["Performance_schema_rwlock_classes_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_rwlock_instances_lost"))) { #optional property not found
            $PerformanceSchemaRwlockInstancesLost = $null
        } else {
            $PerformanceSchemaRwlockInstancesLost = $JsonParameters.PSobject.Properties["Performance_schema_rwlock_instances_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_session_connect_attrs_lost"))) { #optional property not found
            $PerformanceSchemaSessionConnectAttrsLost = $null
        } else {
            $PerformanceSchemaSessionConnectAttrsLost = $JsonParameters.PSobject.Properties["Performance_schema_session_connect_attrs_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_socket_classes_lost"))) { #optional property not found
            $PerformanceSchemaSocketClassesLost = $null
        } else {
            $PerformanceSchemaSocketClassesLost = $JsonParameters.PSobject.Properties["Performance_schema_socket_classes_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_socket_instances_lost"))) { #optional property not found
            $PerformanceSchemaSocketInstancesLost = $null
        } else {
            $PerformanceSchemaSocketInstancesLost = $JsonParameters.PSobject.Properties["Performance_schema_socket_instances_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_stage_classes_lost"))) { #optional property not found
            $PerformanceSchemaStageClassesLost = $null
        } else {
            $PerformanceSchemaStageClassesLost = $JsonParameters.PSobject.Properties["Performance_schema_stage_classes_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_statement_classes_lost"))) { #optional property not found
            $PerformanceSchemaStatementClassesLost = $null
        } else {
            $PerformanceSchemaStatementClassesLost = $JsonParameters.PSobject.Properties["Performance_schema_statement_classes_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_table_handles_lost"))) { #optional property not found
            $PerformanceSchemaTableHandlesLost = $null
        } else {
            $PerformanceSchemaTableHandlesLost = $JsonParameters.PSobject.Properties["Performance_schema_table_handles_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_table_instances_lost"))) { #optional property not found
            $PerformanceSchemaTableInstancesLost = $null
        } else {
            $PerformanceSchemaTableInstancesLost = $JsonParameters.PSobject.Properties["Performance_schema_table_instances_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_table_lock_stat_lost"))) { #optional property not found
            $PerformanceSchemaTableLockStatLost = $null
        } else {
            $PerformanceSchemaTableLockStatLost = $JsonParameters.PSobject.Properties["Performance_schema_table_lock_stat_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_thread_classes_lost"))) { #optional property not found
            $PerformanceSchemaThreadClassesLost = $null
        } else {
            $PerformanceSchemaThreadClassesLost = $JsonParameters.PSobject.Properties["Performance_schema_thread_classes_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_thread_instances_lost"))) { #optional property not found
            $PerformanceSchemaThreadInstancesLost = $null
        } else {
            $PerformanceSchemaThreadInstancesLost = $JsonParameters.PSobject.Properties["Performance_schema_thread_instances_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Performance_schema_users_lost"))) { #optional property not found
            $PerformanceSchemaUsersLost = $null
        } else {
            $PerformanceSchemaUsersLost = $JsonParameters.PSobject.Properties["Performance_schema_users_lost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Prepared_stmt_count"))) { #optional property not found
            $PreparedStmtCount = $null
        } else {
            $PreparedStmtCount = $JsonParameters.PSobject.Properties["Prepared_stmt_count"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Qcache_free_blocks"))) { #optional property not found
            $QcacheFreeBlocks = $null
        } else {
            $QcacheFreeBlocks = $JsonParameters.PSobject.Properties["Qcache_free_blocks"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Qcache_free_memory"))) { #optional property not found
            $QcacheFreeMemory = $null
        } else {
            $QcacheFreeMemory = $JsonParameters.PSobject.Properties["Qcache_free_memory"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Qcache_hits"))) { #optional property not found
            $QcacheHits = $null
        } else {
            $QcacheHits = $JsonParameters.PSobject.Properties["Qcache_hits"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Qcache_inserts"))) { #optional property not found
            $QcacheInserts = $null
        } else {
            $QcacheInserts = $JsonParameters.PSobject.Properties["Qcache_inserts"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Qcache_lowmem_prunes"))) { #optional property not found
            $QcacheLowmemPrunes = $null
        } else {
            $QcacheLowmemPrunes = $JsonParameters.PSobject.Properties["Qcache_lowmem_prunes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Qcache_not_cached"))) { #optional property not found
            $QcacheNotCached = $null
        } else {
            $QcacheNotCached = $JsonParameters.PSobject.Properties["Qcache_not_cached"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Qcache_queries_in_cache"))) { #optional property not found
            $QcacheQueriesInCache = $null
        } else {
            $QcacheQueriesInCache = $JsonParameters.PSobject.Properties["Qcache_queries_in_cache"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Qcache_total_blocks"))) { #optional property not found
            $QcacheTotalBlocks = $null
        } else {
            $QcacheTotalBlocks = $JsonParameters.PSobject.Properties["Qcache_total_blocks"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Queries"))) { #optional property not found
            $Queries = $null
        } else {
            $Queries = $JsonParameters.PSobject.Properties["Queries"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Questions"))) { #optional property not found
            $Questions = $null
        } else {
            $Questions = $JsonParameters.PSobject.Properties["Questions"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Rsa_public_key"))) { #optional property not found
            $RsaPublicKey = $null
        } else {
            $RsaPublicKey = $JsonParameters.PSobject.Properties["Rsa_public_key"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Select_full_join"))) { #optional property not found
            $SelectFullJoin = $null
        } else {
            $SelectFullJoin = $JsonParameters.PSobject.Properties["Select_full_join"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Select_full_range_join"))) { #optional property not found
            $SelectFullRangeJoin = $null
        } else {
            $SelectFullRangeJoin = $JsonParameters.PSobject.Properties["Select_full_range_join"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Select_range"))) { #optional property not found
            $SelectRange = $null
        } else {
            $SelectRange = $JsonParameters.PSobject.Properties["Select_range"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Select_range_check"))) { #optional property not found
            $SelectRangeCheck = $null
        } else {
            $SelectRangeCheck = $JsonParameters.PSobject.Properties["Select_range_check"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Select_scan"))) { #optional property not found
            $SelectScan = $null
        } else {
            $SelectScan = $JsonParameters.PSobject.Properties["Select_scan"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Slave_open_temp_tables"))) { #optional property not found
            $SlaveOpenTempTables = $null
        } else {
            $SlaveOpenTempTables = $JsonParameters.PSobject.Properties["Slave_open_temp_tables"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Slow_launch_threads"))) { #optional property not found
            $SlowLaunchThreads = $null
        } else {
            $SlowLaunchThreads = $JsonParameters.PSobject.Properties["Slow_launch_threads"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Slow_queries"))) { #optional property not found
            $SlowQueries = $null
        } else {
            $SlowQueries = $JsonParameters.PSobject.Properties["Slow_queries"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Sort_merge_passes"))) { #optional property not found
            $SortMergePasses = $null
        } else {
            $SortMergePasses = $JsonParameters.PSobject.Properties["Sort_merge_passes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Sort_range"))) { #optional property not found
            $SortRange = $null
        } else {
            $SortRange = $JsonParameters.PSobject.Properties["Sort_range"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Sort_rows"))) { #optional property not found
            $SortRows = $null
        } else {
            $SortRows = $JsonParameters.PSobject.Properties["Sort_rows"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Sort_scan"))) { #optional property not found
            $SortScan = $null
        } else {
            $SortScan = $JsonParameters.PSobject.Properties["Sort_scan"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_accept_renegotiates"))) { #optional property not found
            $SslAcceptRenegotiates = $null
        } else {
            $SslAcceptRenegotiates = $JsonParameters.PSobject.Properties["Ssl_accept_renegotiates"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_accepts"))) { #optional property not found
            $SslAccepts = $null
        } else {
            $SslAccepts = $JsonParameters.PSobject.Properties["Ssl_accepts"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_callback_cache_hits"))) { #optional property not found
            $SslCallbackCacheHits = $null
        } else {
            $SslCallbackCacheHits = $JsonParameters.PSobject.Properties["Ssl_callback_cache_hits"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_cipher"))) { #optional property not found
            $SslCipher = $null
        } else {
            $SslCipher = $JsonParameters.PSobject.Properties["Ssl_cipher"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_cipher_list"))) { #optional property not found
            $SslCipherList = $null
        } else {
            $SslCipherList = $JsonParameters.PSobject.Properties["Ssl_cipher_list"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_client_connects"))) { #optional property not found
            $SslClientConnects = $null
        } else {
            $SslClientConnects = $JsonParameters.PSobject.Properties["Ssl_client_connects"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_connect_renegotiates"))) { #optional property not found
            $SslConnectRenegotiates = $null
        } else {
            $SslConnectRenegotiates = $JsonParameters.PSobject.Properties["Ssl_connect_renegotiates"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_ctx_verify_depth"))) { #optional property not found
            $SslCtxVerifyDepth = $null
        } else {
            $SslCtxVerifyDepth = $JsonParameters.PSobject.Properties["Ssl_ctx_verify_depth"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_ctx_verify_mode"))) { #optional property not found
            $SslCtxVerifyMode = $null
        } else {
            $SslCtxVerifyMode = $JsonParameters.PSobject.Properties["Ssl_ctx_verify_mode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_default_timeout"))) { #optional property not found
            $SslDefaultTimeout = $null
        } else {
            $SslDefaultTimeout = $JsonParameters.PSobject.Properties["Ssl_default_timeout"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_finished_accepts"))) { #optional property not found
            $SslFinishedAccepts = $null
        } else {
            $SslFinishedAccepts = $JsonParameters.PSobject.Properties["Ssl_finished_accepts"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_finished_connects"))) { #optional property not found
            $SslFinishedConnects = $null
        } else {
            $SslFinishedConnects = $JsonParameters.PSobject.Properties["Ssl_finished_connects"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_server_not_after"))) { #optional property not found
            $SslServerNotAfter = $null
        } else {
            $SslServerNotAfter = $JsonParameters.PSobject.Properties["Ssl_server_not_after"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_server_not_before"))) { #optional property not found
            $SslServerNotBefore = $null
        } else {
            $SslServerNotBefore = $JsonParameters.PSobject.Properties["Ssl_server_not_before"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_session_cache_hits"))) { #optional property not found
            $SslSessionCacheHits = $null
        } else {
            $SslSessionCacheHits = $JsonParameters.PSobject.Properties["Ssl_session_cache_hits"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_session_cache_misses"))) { #optional property not found
            $SslSessionCacheMisses = $null
        } else {
            $SslSessionCacheMisses = $JsonParameters.PSobject.Properties["Ssl_session_cache_misses"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_session_cache_mode"))) { #optional property not found
            $SslSessionCacheMode = $null
        } else {
            $SslSessionCacheMode = $JsonParameters.PSobject.Properties["Ssl_session_cache_mode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_session_cache_overflows"))) { #optional property not found
            $SslSessionCacheOverflows = $null
        } else {
            $SslSessionCacheOverflows = $JsonParameters.PSobject.Properties["Ssl_session_cache_overflows"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_session_cache_size"))) { #optional property not found
            $SslSessionCacheSize = $null
        } else {
            $SslSessionCacheSize = $JsonParameters.PSobject.Properties["Ssl_session_cache_size"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_session_cache_timeouts"))) { #optional property not found
            $SslSessionCacheTimeouts = $null
        } else {
            $SslSessionCacheTimeouts = $JsonParameters.PSobject.Properties["Ssl_session_cache_timeouts"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_sessions_reused"))) { #optional property not found
            $SslSessionsReused = $null
        } else {
            $SslSessionsReused = $JsonParameters.PSobject.Properties["Ssl_sessions_reused"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_used_session_cache_entries"))) { #optional property not found
            $SslUsedSessionCacheEntries = $null
        } else {
            $SslUsedSessionCacheEntries = $JsonParameters.PSobject.Properties["Ssl_used_session_cache_entries"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_verify_depth"))) { #optional property not found
            $SslVerifyDepth = $null
        } else {
            $SslVerifyDepth = $JsonParameters.PSobject.Properties["Ssl_verify_depth"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_verify_mode"))) { #optional property not found
            $SslVerifyMode = $null
        } else {
            $SslVerifyMode = $JsonParameters.PSobject.Properties["Ssl_verify_mode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Ssl_version"))) { #optional property not found
            $SslVersion = $null
        } else {
            $SslVersion = $JsonParameters.PSobject.Properties["Ssl_version"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Table_locks_immediate"))) { #optional property not found
            $TableLocksImmediate = $null
        } else {
            $TableLocksImmediate = $JsonParameters.PSobject.Properties["Table_locks_immediate"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Table_locks_waited"))) { #optional property not found
            $TableLocksWaited = $null
        } else {
            $TableLocksWaited = $JsonParameters.PSobject.Properties["Table_locks_waited"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Table_open_cache_hits"))) { #optional property not found
            $TableOpenCacheHits = $null
        } else {
            $TableOpenCacheHits = $JsonParameters.PSobject.Properties["Table_open_cache_hits"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Table_open_cache_misses"))) { #optional property not found
            $TableOpenCacheMisses = $null
        } else {
            $TableOpenCacheMisses = $JsonParameters.PSobject.Properties["Table_open_cache_misses"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Table_open_cache_overflows"))) { #optional property not found
            $TableOpenCacheOverflows = $null
        } else {
            $TableOpenCacheOverflows = $JsonParameters.PSobject.Properties["Table_open_cache_overflows"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Tc_log_max_pages_used"))) { #optional property not found
            $TcLogMaxPagesUsed = $null
        } else {
            $TcLogMaxPagesUsed = $JsonParameters.PSobject.Properties["Tc_log_max_pages_used"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Tc_log_page_size"))) { #optional property not found
            $TcLogPageSize = $null
        } else {
            $TcLogPageSize = $JsonParameters.PSobject.Properties["Tc_log_page_size"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Tc_log_page_waits"))) { #optional property not found
            $TcLogPageWaits = $null
        } else {
            $TcLogPageWaits = $JsonParameters.PSobject.Properties["Tc_log_page_waits"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Threadpool_idle_threads"))) { #optional property not found
            $ThreadpoolIdleThreads = $null
        } else {
            $ThreadpoolIdleThreads = $JsonParameters.PSobject.Properties["Threadpool_idle_threads"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Threadpool_threads"))) { #optional property not found
            $ThreadpoolThreads = $null
        } else {
            $ThreadpoolThreads = $JsonParameters.PSobject.Properties["Threadpool_threads"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Threads_cached"))) { #optional property not found
            $ThreadsCached = $null
        } else {
            $ThreadsCached = $JsonParameters.PSobject.Properties["Threads_cached"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Threads_connected"))) { #optional property not found
            $ThreadsConnected = $null
        } else {
            $ThreadsConnected = $JsonParameters.PSobject.Properties["Threads_connected"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Threads_created"))) { #optional property not found
            $ThreadsCreated = $null
        } else {
            $ThreadsCreated = $JsonParameters.PSobject.Properties["Threads_created"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Threads_running"))) { #optional property not found
            $ThreadsRunning = $null
        } else {
            $ThreadsRunning = $JsonParameters.PSobject.Properties["Threads_running"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Uptime"))) { #optional property not found
            $Uptime = $null
        } else {
            $Uptime = $JsonParameters.PSobject.Properties["Uptime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Uptime_since_flush_status"))) { #optional property not found
            $UptimeSinceFlushStatus = $null
        } else {
            $UptimeSinceFlushStatus = $JsonParameters.PSobject.Properties["Uptime_since_flush_status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_local_state_uuid"))) { #optional property not found
            $WsrepLocalStateUuid = $null
        } else {
            $WsrepLocalStateUuid = $JsonParameters.PSobject.Properties["wsrep_local_state_uuid"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_protocol_version"))) { #optional property not found
            $WsrepProtocolVersion = $null
        } else {
            $WsrepProtocolVersion = $JsonParameters.PSobject.Properties["wsrep_protocol_version"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_last_applied"))) { #optional property not found
            $WsrepLastApplied = $null
        } else {
            $WsrepLastApplied = $JsonParameters.PSobject.Properties["wsrep_last_applied"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_last_committed"))) { #optional property not found
            $WsrepLastCommitted = $null
        } else {
            $WsrepLastCommitted = $JsonParameters.PSobject.Properties["wsrep_last_committed"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_replicated"))) { #optional property not found
            $WsrepReplicated = $null
        } else {
            $WsrepReplicated = $JsonParameters.PSobject.Properties["wsrep_replicated"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_replicated_bytes"))) { #optional property not found
            $WsrepReplicatedBytes = $null
        } else {
            $WsrepReplicatedBytes = $JsonParameters.PSobject.Properties["wsrep_replicated_bytes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_repl_keys"))) { #optional property not found
            $WsrepReplKeys = $null
        } else {
            $WsrepReplKeys = $JsonParameters.PSobject.Properties["wsrep_repl_keys"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_repl_keys_bytes"))) { #optional property not found
            $WsrepReplKeysBytes = $null
        } else {
            $WsrepReplKeysBytes = $JsonParameters.PSobject.Properties["wsrep_repl_keys_bytes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_repl_data_bytes"))) { #optional property not found
            $WsrepReplDataBytes = $null
        } else {
            $WsrepReplDataBytes = $JsonParameters.PSobject.Properties["wsrep_repl_data_bytes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_repl_other_bytes"))) { #optional property not found
            $WsrepReplOtherBytes = $null
        } else {
            $WsrepReplOtherBytes = $JsonParameters.PSobject.Properties["wsrep_repl_other_bytes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_received"))) { #optional property not found
            $WsrepReceived = $null
        } else {
            $WsrepReceived = $JsonParameters.PSobject.Properties["wsrep_received"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_received_bytes"))) { #optional property not found
            $WsrepReceivedBytes = $null
        } else {
            $WsrepReceivedBytes = $JsonParameters.PSobject.Properties["wsrep_received_bytes"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_local_commits"))) { #optional property not found
            $WsrepLocalCommits = $null
        } else {
            $WsrepLocalCommits = $JsonParameters.PSobject.Properties["wsrep_local_commits"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_local_cert_failures"))) { #optional property not found
            $WsrepLocalCertFailures = $null
        } else {
            $WsrepLocalCertFailures = $JsonParameters.PSobject.Properties["wsrep_local_cert_failures"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_local_replays"))) { #optional property not found
            $WsrepLocalReplays = $null
        } else {
            $WsrepLocalReplays = $JsonParameters.PSobject.Properties["wsrep_local_replays"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_local_send_queue"))) { #optional property not found
            $WsrepLocalSendQueue = $null
        } else {
            $WsrepLocalSendQueue = $JsonParameters.PSobject.Properties["wsrep_local_send_queue"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_local_send_queue_max"))) { #optional property not found
            $WsrepLocalSendQueueMax = $null
        } else {
            $WsrepLocalSendQueueMax = $JsonParameters.PSobject.Properties["wsrep_local_send_queue_max"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_local_send_queue_min"))) { #optional property not found
            $WsrepLocalSendQueueMin = $null
        } else {
            $WsrepLocalSendQueueMin = $JsonParameters.PSobject.Properties["wsrep_local_send_queue_min"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_local_send_queue_avg"))) { #optional property not found
            $WsrepLocalSendQueueAvg = $null
        } else {
            $WsrepLocalSendQueueAvg = $JsonParameters.PSobject.Properties["wsrep_local_send_queue_avg"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_local_recv_queue"))) { #optional property not found
            $WsrepLocalRecvQueue = $null
        } else {
            $WsrepLocalRecvQueue = $JsonParameters.PSobject.Properties["wsrep_local_recv_queue"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_local_recv_queue_max"))) { #optional property not found
            $WsrepLocalRecvQueueMax = $null
        } else {
            $WsrepLocalRecvQueueMax = $JsonParameters.PSobject.Properties["wsrep_local_recv_queue_max"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_local_recv_queue_min"))) { #optional property not found
            $WsrepLocalRecvQueueMin = $null
        } else {
            $WsrepLocalRecvQueueMin = $JsonParameters.PSobject.Properties["wsrep_local_recv_queue_min"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_local_recv_queue_avg"))) { #optional property not found
            $WsrepLocalRecvQueueAvg = $null
        } else {
            $WsrepLocalRecvQueueAvg = $JsonParameters.PSobject.Properties["wsrep_local_recv_queue_avg"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_local_cached_downto"))) { #optional property not found
            $WsrepLocalCachedDownto = $null
        } else {
            $WsrepLocalCachedDownto = $JsonParameters.PSobject.Properties["wsrep_local_cached_downto"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_flow_control_paused_ns"))) { #optional property not found
            $WsrepFlowControlPausedNs = $null
        } else {
            $WsrepFlowControlPausedNs = $JsonParameters.PSobject.Properties["wsrep_flow_control_paused_ns"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_flow_control_paused"))) { #optional property not found
            $WsrepFlowControlPaused = $null
        } else {
            $WsrepFlowControlPaused = $JsonParameters.PSobject.Properties["wsrep_flow_control_paused"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_flow_control_sent"))) { #optional property not found
            $WsrepFlowControlSent = $null
        } else {
            $WsrepFlowControlSent = $JsonParameters.PSobject.Properties["wsrep_flow_control_sent"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_flow_control_recv"))) { #optional property not found
            $WsrepFlowControlRecv = $null
        } else {
            $WsrepFlowControlRecv = $JsonParameters.PSobject.Properties["wsrep_flow_control_recv"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_flow_control_interval"))) { #optional property not found
            $WsrepFlowControlInterval = $null
        } else {
            $WsrepFlowControlInterval = $JsonParameters.PSobject.Properties["wsrep_flow_control_interval"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_flow_control_interval_low"))) { #optional property not found
            $WsrepFlowControlIntervalLow = $null
        } else {
            $WsrepFlowControlIntervalLow = $JsonParameters.PSobject.Properties["wsrep_flow_control_interval_low"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_flow_control_interval_high"))) { #optional property not found
            $WsrepFlowControlIntervalHigh = $null
        } else {
            $WsrepFlowControlIntervalHigh = $JsonParameters.PSobject.Properties["wsrep_flow_control_interval_high"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_flow_control_status"))) { #optional property not found
            $WsrepFlowControlStatus = $null
        } else {
            $WsrepFlowControlStatus = $JsonParameters.PSobject.Properties["wsrep_flow_control_status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_flow_control_active"))) { #optional property not found
            $WsrepFlowControlActive = $null
        } else {
            $WsrepFlowControlActive = $JsonParameters.PSobject.Properties["wsrep_flow_control_active"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_flow_control_requested"))) { #optional property not found
            $WsrepFlowControlRequested = $null
        } else {
            $WsrepFlowControlRequested = $JsonParameters.PSobject.Properties["wsrep_flow_control_requested"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_cert_deps_distance"))) { #optional property not found
            $WsrepCertDepsDistance = $null
        } else {
            $WsrepCertDepsDistance = $JsonParameters.PSobject.Properties["wsrep_cert_deps_distance"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_apply_oooe"))) { #optional property not found
            $WsrepApplyOooe = $null
        } else {
            $WsrepApplyOooe = $JsonParameters.PSobject.Properties["wsrep_apply_oooe"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_apply_oool"))) { #optional property not found
            $WsrepApplyOool = $null
        } else {
            $WsrepApplyOool = $JsonParameters.PSobject.Properties["wsrep_apply_oool"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_apply_window"))) { #optional property not found
            $WsrepApplyWindow = $null
        } else {
            $WsrepApplyWindow = $JsonParameters.PSobject.Properties["wsrep_apply_window"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_commit_oooe"))) { #optional property not found
            $WsrepCommitOooe = $null
        } else {
            $WsrepCommitOooe = $JsonParameters.PSobject.Properties["wsrep_commit_oooe"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_commit_oool"))) { #optional property not found
            $WsrepCommitOool = $null
        } else {
            $WsrepCommitOool = $JsonParameters.PSobject.Properties["wsrep_commit_oool"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_commit_window"))) { #optional property not found
            $WsrepCommitWindow = $null
        } else {
            $WsrepCommitWindow = $JsonParameters.PSobject.Properties["wsrep_commit_window"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_local_state"))) { #optional property not found
            $WsrepLocalState = $null
        } else {
            $WsrepLocalState = $JsonParameters.PSobject.Properties["wsrep_local_state"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_local_state_comment"))) { #optional property not found
            $WsrepLocalStateComment = $null
        } else {
            $WsrepLocalStateComment = $JsonParameters.PSobject.Properties["wsrep_local_state_comment"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_cert_index_size"))) { #optional property not found
            $WsrepCertIndexSize = $null
        } else {
            $WsrepCertIndexSize = $JsonParameters.PSobject.Properties["wsrep_cert_index_size"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_cert_bucket_count"))) { #optional property not found
            $WsrepCertBucketCount = $null
        } else {
            $WsrepCertBucketCount = $JsonParameters.PSobject.Properties["wsrep_cert_bucket_count"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_gcache_pool_size"))) { #optional property not found
            $WsrepGcachePoolSize = $null
        } else {
            $WsrepGcachePoolSize = $JsonParameters.PSobject.Properties["wsrep_gcache_pool_size"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_causal_reads"))) { #optional property not found
            $WsrepCausalReads = $null
        } else {
            $WsrepCausalReads = $JsonParameters.PSobject.Properties["wsrep_causal_reads"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_cert_interval"))) { #optional property not found
            $WsrepCertInterval = $null
        } else {
            $WsrepCertInterval = $JsonParameters.PSobject.Properties["wsrep_cert_interval"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_open_transactions"))) { #optional property not found
            $WsrepOpenTransactions = $null
        } else {
            $WsrepOpenTransactions = $JsonParameters.PSobject.Properties["wsrep_open_transactions"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_open_connections"))) { #optional property not found
            $WsrepOpenConnections = $null
        } else {
            $WsrepOpenConnections = $JsonParameters.PSobject.Properties["wsrep_open_connections"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_ist_receive_status"))) { #optional property not found
            $WsrepIstReceiveStatus = $null
        } else {
            $WsrepIstReceiveStatus = $JsonParameters.PSobject.Properties["wsrep_ist_receive_status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_ist_receive_seqno_start"))) { #optional property not found
            $WsrepIstReceiveSeqnoStart = $null
        } else {
            $WsrepIstReceiveSeqnoStart = $JsonParameters.PSobject.Properties["wsrep_ist_receive_seqno_start"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_ist_receive_seqno_current"))) { #optional property not found
            $WsrepIstReceiveSeqnoCurrent = $null
        } else {
            $WsrepIstReceiveSeqnoCurrent = $JsonParameters.PSobject.Properties["wsrep_ist_receive_seqno_current"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_ist_receive_seqno_end"))) { #optional property not found
            $WsrepIstReceiveSeqnoEnd = $null
        } else {
            $WsrepIstReceiveSeqnoEnd = $JsonParameters.PSobject.Properties["wsrep_ist_receive_seqno_end"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_incoming_addresses"))) { #optional property not found
            $WsrepIncomingAddresses = $null
        } else {
            $WsrepIncomingAddresses = $JsonParameters.PSobject.Properties["wsrep_incoming_addresses"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_cluster_weight"))) { #optional property not found
            $WsrepClusterWeight = $null
        } else {
            $WsrepClusterWeight = $JsonParameters.PSobject.Properties["wsrep_cluster_weight"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_desync_count"))) { #optional property not found
            $WsrepDesyncCount = $null
        } else {
            $WsrepDesyncCount = $JsonParameters.PSobject.Properties["wsrep_desync_count"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_evs_delayed"))) { #optional property not found
            $WsrepEvsDelayed = $null
        } else {
            $WsrepEvsDelayed = $JsonParameters.PSobject.Properties["wsrep_evs_delayed"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_evs_evict_list"))) { #optional property not found
            $WsrepEvsEvictList = $null
        } else {
            $WsrepEvsEvictList = $JsonParameters.PSobject.Properties["wsrep_evs_evict_list"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_evs_repl_latency"))) { #optional property not found
            $WsrepEvsReplLatency = $null
        } else {
            $WsrepEvsReplLatency = $JsonParameters.PSobject.Properties["wsrep_evs_repl_latency"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_evs_state"))) { #optional property not found
            $WsrepEvsState = $null
        } else {
            $WsrepEvsState = $JsonParameters.PSobject.Properties["wsrep_evs_state"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_gcomm_uuid"))) { #optional property not found
            $WsrepGcommUuid = $null
        } else {
            $WsrepGcommUuid = $JsonParameters.PSobject.Properties["wsrep_gcomm_uuid"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_gmcast_segment"))) { #optional property not found
            $WsrepGmcastSegment = $null
        } else {
            $WsrepGmcastSegment = $JsonParameters.PSobject.Properties["wsrep_gmcast_segment"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_cluster_conf_id"))) { #optional property not found
            $WsrepClusterConfId = $null
        } else {
            $WsrepClusterConfId = $JsonParameters.PSobject.Properties["wsrep_cluster_conf_id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_cluster_size"))) { #optional property not found
            $WsrepClusterSize = $null
        } else {
            $WsrepClusterSize = $JsonParameters.PSobject.Properties["wsrep_cluster_size"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_cluster_state_uuid"))) { #optional property not found
            $WsrepClusterStateUuid = $null
        } else {
            $WsrepClusterStateUuid = $JsonParameters.PSobject.Properties["wsrep_cluster_state_uuid"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_cluster_status"))) { #optional property not found
            $WsrepClusterStatus = $null
        } else {
            $WsrepClusterStatus = $JsonParameters.PSobject.Properties["wsrep_cluster_status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_connected"))) { #optional property not found
            $WsrepConnected = $null
        } else {
            $WsrepConnected = $JsonParameters.PSobject.Properties["wsrep_connected"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_local_bf_aborts"))) { #optional property not found
            $WsrepLocalBfAborts = $null
        } else {
            $WsrepLocalBfAborts = $JsonParameters.PSobject.Properties["wsrep_local_bf_aborts"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_local_index"))) { #optional property not found
            $WsrepLocalIndex = $null
        } else {
            $WsrepLocalIndex = $JsonParameters.PSobject.Properties["wsrep_local_index"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_provider_name"))) { #optional property not found
            $WsrepProviderName = $null
        } else {
            $WsrepProviderName = $JsonParameters.PSobject.Properties["wsrep_provider_name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_provider_vendor"))) { #optional property not found
            $WsrepProviderVendor = $null
        } else {
            $WsrepProviderVendor = $JsonParameters.PSobject.Properties["wsrep_provider_vendor"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_provider_version"))) { #optional property not found
            $WsrepProviderVersion = $null
        } else {
            $WsrepProviderVersion = $JsonParameters.PSobject.Properties["wsrep_provider_version"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wsrep_ready"))) { #optional property not found
            $WsrepReady = $null
        } else {
            $WsrepReady = $JsonParameters.PSobject.Properties["wsrep_ready"].value
        }

        $PSO = [PSCustomObject]@{
            "Aborted_clients" = ${AbortedClients}
            "Aborted_connects" = ${AbortedConnects}
            "Binlog_snapshot_file" = ${BinlogSnapshotFile}
            "Binlog_snapshot_position" = ${BinlogSnapshotPosition}
            "Binlog_cache_disk_use" = ${BinlogCacheDiskUse}
            "Binlog_cache_use" = ${BinlogCacheUse}
            "Binlog_snapshot_gtid_executed" = ${BinlogSnapshotGtidExecuted}
            "Binlog_stmt_cache_disk_use" = ${BinlogStmtCacheDiskUse}
            "Binlog_stmt_cache_use" = ${BinlogStmtCacheUse}
            "Bytes_received" = ${BytesReceived}
            "Bytes_sent" = ${BytesSent}
            "Com_admin_commands" = ${ComAdminCommands}
            "Com_assign_to_keycache" = ${ComAssignToKeycache}
            "Com_alter_db" = ${ComAlterDb}
            "Com_alter_db_upgrade" = ${ComAlterDbUpgrade}
            "Com_alter_event" = ${ComAlterEvent}
            "Com_alter_function" = ${ComAlterFunction}
            "Com_alter_instance" = ${ComAlterInstance}
            "Com_alter_procedure" = ${ComAlterProcedure}
            "Com_alter_server" = ${ComAlterServer}
            "Com_alter_table" = ${ComAlterTable}
            "Com_alter_tablespace" = ${ComAlterTablespace}
            "Com_alter_user" = ${ComAlterUser}
            "Com_analyze" = ${ComAnalyze}
            "Com_begin" = ${ComBegin}
            "Com_binlog" = ${ComBinlog}
            "Com_call_procedure" = ${ComCallProcedure}
            "Com_change_db" = ${ComChangeDb}
            "Com_change_master" = ${ComChangeMaster}
            "Com_change_repl_filter" = ${ComChangeReplFilter}
            "Com_check" = ${ComCheck}
            "Com_checksum" = ${ComChecksum}
            "Com_commit" = ${ComCommit}
            "Com_create_compression_dictionary" = ${ComCreateCompressionDictionary}
            "Com_create_db" = ${ComCreateDb}
            "Com_create_event" = ${ComCreateEvent}
            "Com_create_function" = ${ComCreateFunction}
            "Com_create_index" = ${ComCreateIndex}
            "Com_create_procedure" = ${ComCreateProcedure}
            "Com_create_server" = ${ComCreateServer}
            "Com_create_table" = ${ComCreateTable}
            "Com_create_trigger" = ${ComCreateTrigger}
            "Com_create_udf" = ${ComCreateUdf}
            "Com_create_user" = ${ComCreateUser}
            "Com_create_view" = ${ComCreateView}
            "Com_dealloc_sql" = ${ComDeallocSql}
            "Com_delete" = ${ComDelete}
            "Com_delete_multi" = ${ComDeleteMulti}
            "Com_do" = ${ComDo}
            "Com_drop_compression_dictionary" = ${ComDropCompressionDictionary}
            "Com_drop_db" = ${ComDropDb}
            "Com_drop_event" = ${ComDropEvent}
            "Com_drop_function" = ${ComDropFunction}
            "Com_drop_index" = ${ComDropIndex}
            "Com_drop_procedure" = ${ComDropProcedure}
            "Com_drop_server" = ${ComDropServer}
            "Com_drop_table" = ${ComDropTable}
            "Com_drop_trigger" = ${ComDropTrigger}
            "Com_drop_user" = ${ComDropUser}
            "Com_drop_view" = ${ComDropView}
            "Com_empty_query" = ${ComEmptyQuery}
            "Com_execute_sql" = ${ComExecuteSql}
            "Com_explain_other" = ${ComExplainOther}
            "Com_flush" = ${ComFlush}
            "Com_get_diagnostics" = ${ComGetDiagnostics}
            "Com_grant" = ${ComGrant}
            "Com_ha_close" = ${ComHaClose}
            "Com_ha_open" = ${ComHaOpen}
            "Com_ha_read" = ${ComHaRead}
            "Com_help" = ${ComHelp}
            "Com_insert" = ${ComInsert}
            "Com_insert_select" = ${ComInsertSelect}
            "Com_install_plugin" = ${ComInstallPlugin}
            "Com_kill" = ${ComKill}
            "Com_load" = ${ComLoad}
            "Com_lock_tables" = ${ComLockTables}
            "Com_lock_tables_for_backup" = ${ComLockTablesForBackup}
            "Com_lock_binlog_for_backup" = ${ComLockBinlogForBackup}
            "Com_optimize" = ${ComOptimize}
            "Com_preload_keys" = ${ComPreloadKeys}
            "Com_prepare_sql" = ${ComPrepareSql}
            "Com_purge" = ${ComPurge}
            "Com_purge_before_date" = ${ComPurgeBeforeDate}
            "Com_release_savepoint" = ${ComReleaseSavepoint}
            "Com_rename_table" = ${ComRenameTable}
            "Com_rename_user" = ${ComRenameUser}
            "Com_repair" = ${ComRepair}
            "Com_replace" = ${ComReplace}
            "Com_replace_select" = ${ComReplaceSelect}
            "Com_reset" = ${ComReset}
            "Com_resignal" = ${ComResignal}
            "Com_revoke" = ${ComRevoke}
            "Com_revoke_all" = ${ComRevokeAll}
            "Com_rollback" = ${ComRollback}
            "Com_rollback_to_savepoint" = ${ComRollbackToSavepoint}
            "Com_savepoint" = ${ComSavepoint}
            "Com_select" = ${ComSelect}
            "Com_set_option" = ${ComSetOption}
            "Com_signal" = ${ComSignal}
            "Com_show_binlog_events" = ${ComShowBinlogEvents}
            "Com_show_binlogs" = ${ComShowBinlogs}
            "Com_show_charsets" = ${ComShowCharsets}
            "Com_show_client_statistics" = ${ComShowClientStatistics}
            "Com_show_collations" = ${ComShowCollations}
            "Com_show_create_db" = ${ComShowCreateDb}
            "Com_show_create_event" = ${ComShowCreateEvent}
            "Com_show_create_func" = ${ComShowCreateFunc}
            "Com_show_create_proc" = ${ComShowCreateProc}
            "Com_show_create_table" = ${ComShowCreateTable}
            "Com_show_create_trigger" = ${ComShowCreateTrigger}
            "Com_show_databases" = ${ComShowDatabases}
            "Com_show_engine_logs" = ${ComShowEngineLogs}
            "Com_show_engine_mutex" = ${ComShowEngineMutex}
            "Com_show_engine_status" = ${ComShowEngineStatus}
            "Com_show_events" = ${ComShowEvents}
            "Com_show_errors" = ${ComShowErrors}
            "Com_show_fields" = ${ComShowFields}
            "Com_show_function_code" = ${ComShowFunctionCode}
            "Com_show_function_status" = ${ComShowFunctionStatus}
            "Com_show_grants" = ${ComShowGrants}
            "Com_show_index_statistics" = ${ComShowIndexStatistics}
            "Com_show_keys" = ${ComShowKeys}
            "Com_show_master_status" = ${ComShowMasterStatus}
            "Com_show_open_tables" = ${ComShowOpenTables}
            "Com_show_plugins" = ${ComShowPlugins}
            "Com_show_privileges" = ${ComShowPrivileges}
            "Com_show_procedure_code" = ${ComShowProcedureCode}
            "Com_show_procedure_status" = ${ComShowProcedureStatus}
            "Com_show_processlist" = ${ComShowProcesslist}
            "Com_show_profile" = ${ComShowProfile}
            "Com_show_profiles" = ${ComShowProfiles}
            "Com_show_relaylog_events" = ${ComShowRelaylogEvents}
            "Com_show_slave_hosts" = ${ComShowSlaveHosts}
            "Com_show_slave_status" = ${ComShowSlaveStatus}
            "Com_show_status" = ${ComShowStatus}
            "Com_show_storage_engines" = ${ComShowStorageEngines}
            "Com_show_table_statistics" = ${ComShowTableStatistics}
            "Com_show_table_status" = ${ComShowTableStatus}
            "Com_show_tables" = ${ComShowTables}
            "Com_show_thread_statistics" = ${ComShowThreadStatistics}
            "Com_show_triggers" = ${ComShowTriggers}
            "Com_show_user_statistics" = ${ComShowUserStatistics}
            "Com_show_variables" = ${ComShowVariables}
            "Com_show_warnings" = ${ComShowWarnings}
            "Com_show_create_user" = ${ComShowCreateUser}
            "Com_shutdown" = ${ComShutdown}
            "Com_slave_start" = ${ComSlaveStart}
            "Com_slave_stop" = ${ComSlaveStop}
            "Com_group_replication_start" = ${ComGroupReplicationStart}
            "Com_group_replication_stop" = ${ComGroupReplicationStop}
            "Com_stmt_execute" = ${ComStmtExecute}
            "Com_stmt_close" = ${ComStmtClose}
            "Com_stmt_fetch" = ${ComStmtFetch}
            "Com_stmt_prepare" = ${ComStmtPrepare}
            "Com_stmt_reset" = ${ComStmtReset}
            "Com_stmt_send_long_data" = ${ComStmtSendLongData}
            "Com_truncate" = ${ComTruncate}
            "Com_uninstall_plugin" = ${ComUninstallPlugin}
            "Com_unlock_binlog" = ${ComUnlockBinlog}
            "Com_unlock_tables" = ${ComUnlockTables}
            "Com_update" = ${ComUpdate}
            "Com_update_multi" = ${ComUpdateMulti}
            "Com_xa_commit" = ${ComXaCommit}
            "Com_xa_end" = ${ComXaEnd}
            "Com_xa_prepare" = ${ComXaPrepare}
            "Com_xa_recover" = ${ComXaRecover}
            "Com_xa_rollback" = ${ComXaRollback}
            "Com_xa_start" = ${ComXaStart}
            "Com_stmt_reprepare" = ${ComStmtReprepare}
            "Compression" = ${Compression}
            "Connection_errors_accept" = ${ConnectionErrorsAccept}
            "Connection_errors_internal" = ${ConnectionErrorsInternal}
            "Connection_errors_max_connections" = ${ConnectionErrorsMaxConnections}
            "Connection_errors_peer_address" = ${ConnectionErrorsPeerAddress}
            "Connection_errors_select" = ${ConnectionErrorsSelect}
            "Connection_errors_tcpwrap" = ${ConnectionErrorsTcpwrap}
            "Connections" = ${Connections}
            "Created_tmp_disk_tables" = ${CreatedTmpDiskTables}
            "Created_tmp_files" = ${CreatedTmpFiles}
            "Created_tmp_tables" = ${CreatedTmpTables}
            "Delayed_errors" = ${DelayedErrors}
            "Delayed_insert_threads" = ${DelayedInsertThreads}
            "Delayed_writes" = ${DelayedWrites}
            "Flush_commands" = ${FlushCommands}
            "Handler_commit" = ${HandlerCommit}
            "Handler_delete" = ${HandlerDelete}
            "Handler_discover" = ${HandlerDiscover}
            "Handler_external_lock" = ${HandlerExternalLock}
            "Handler_mrr_init" = ${HandlerMrrInit}
            "Handler_prepare" = ${HandlerPrepare}
            "Handler_read_first" = ${HandlerReadFirst}
            "Handler_read_key" = ${HandlerReadKey}
            "Handler_read_last" = ${HandlerReadLast}
            "Handler_read_next" = ${HandlerReadNext}
            "Handler_read_prev" = ${HandlerReadPrev}
            "Handler_read_rnd" = ${HandlerReadRnd}
            "Handler_read_rnd_next" = ${HandlerReadRndNext}
            "Handler_rollback" = ${HandlerRollback}
            "Handler_savepoint" = ${HandlerSavepoint}
            "Handler_savepoint_rollback" = ${HandlerSavepointRollback}
            "Handler_update" = ${HandlerUpdate}
            "Handler_write" = ${HandlerWrite}
            "Innodb_background_log_sync" = ${InnodbBackgroundLogSync}
            "Innodb_buffer_pool_dump_status" = ${InnodbBufferPoolDumpStatus}
            "Innodb_buffer_pool_load_status" = ${InnodbBufferPoolLoadStatus}
            "Innodb_buffer_pool_resize_status" = ${InnodbBufferPoolResizeStatus}
            "Innodb_buffer_pool_pages_data" = ${InnodbBufferPoolPagesData}
            "Innodb_buffer_pool_bytes_data" = ${InnodbBufferPoolBytesData}
            "Innodb_buffer_pool_pages_dirty" = ${InnodbBufferPoolPagesDirty}
            "Innodb_buffer_pool_bytes_dirty" = ${InnodbBufferPoolBytesDirty}
            "Innodb_buffer_pool_pages_flushed" = ${InnodbBufferPoolPagesFlushed}
            "Innodb_buffer_pool_pages_free" = ${InnodbBufferPoolPagesFree}
            "Innodb_buffer_pool_pages_LRU_flushed" = ${InnodbBufferPoolPagesLRUFlushed}
            "Innodb_buffer_pool_pages_made_not_young" = ${InnodbBufferPoolPagesMadeNotYoung}
            "Innodb_buffer_pool_pages_made_young" = ${InnodbBufferPoolPagesMadeYoung}
            "Innodb_buffer_pool_pages_misc" = ${InnodbBufferPoolPagesMisc}
            "Innodb_buffer_pool_pages_old" = ${InnodbBufferPoolPagesOld}
            "Innodb_buffer_pool_pages_total" = ${InnodbBufferPoolPagesTotal}
            "Innodb_buffer_pool_read_ahead_rnd" = ${InnodbBufferPoolReadAheadRnd}
            "Innodb_buffer_pool_read_ahead" = ${InnodbBufferPoolReadAhead}
            "Innodb_buffer_pool_read_ahead_evicted" = ${InnodbBufferPoolReadAheadEvicted}
            "Innodb_buffer_pool_read_requests" = ${InnodbBufferPoolReadRequests}
            "Innodb_buffer_pool_reads" = ${InnodbBufferPoolReads}
            "Innodb_buffer_pool_wait_free" = ${InnodbBufferPoolWaitFree}
            "Innodb_buffer_pool_write_requests" = ${InnodbBufferPoolWriteRequests}
            "Innodb_checkpoint_age" = ${InnodbCheckpointAge}
            "Innodb_checkpoint_max_age" = ${InnodbCheckpointMaxAge}
            "Innodb_data_fsyncs" = ${InnodbDataFsyncs}
            "Innodb_data_pending_fsyncs" = ${InnodbDataPendingFsyncs}
            "Innodb_data_pending_reads" = ${InnodbDataPendingReads}
            "Innodb_data_pending_writes" = ${InnodbDataPendingWrites}
            "Innodb_data_read" = ${InnodbDataRead}
            "Innodb_data_reads" = ${InnodbDataReads}
            "Innodb_data_writes" = ${InnodbDataWrites}
            "Innodb_data_written" = ${InnodbDataWritten}
            "Innodb_dblwr_pages_written" = ${InnodbDblwrPagesWritten}
            "Innodb_dblwr_writes" = ${InnodbDblwrWrites}
            "Innodb_ibuf_free_list" = ${InnodbIbufFreeList}
            "Innodb_ibuf_segment_size" = ${InnodbIbufSegmentSize}
            "Innodb_log_waits" = ${InnodbLogWaits}
            "Innodb_log_write_requests" = ${InnodbLogWriteRequests}
            "Innodb_log_writes" = ${InnodbLogWrites}
            "Innodb_lsn_current" = ${InnodbLsnCurrent}
            "Innodb_lsn_flushed" = ${InnodbLsnFlushed}
            "Innodb_lsn_last_checkpoint" = ${InnodbLsnLastCheckpoint}
            "Innodb_master_thread_active_loops" = ${InnodbMasterThreadActiveLoops}
            "Innodb_master_thread_idle_loops" = ${InnodbMasterThreadIdleLoops}
            "Innodb_max_trx_id" = ${InnodbMaxTrxId}
            "Innodb_mem_adaptive_hash" = ${InnodbMemAdaptiveHash}
            "Innodb_mem_dictionary" = ${InnodbMemDictionary}
            "Innodb_oldest_view_low_limit_trx_id" = ${InnodbOldestViewLowLimitTrxId}
            "Innodb_os_log_fsyncs" = ${InnodbOsLogFsyncs}
            "Innodb_os_log_pending_fsyncs" = ${InnodbOsLogPendingFsyncs}
            "Innodb_os_log_pending_writes" = ${InnodbOsLogPendingWrites}
            "Innodb_os_log_written" = ${InnodbOsLogWritten}
            "Innodb_page_size" = ${InnodbPageSize}
            "Innodb_pages_created" = ${InnodbPagesCreated}
            "Innodb_pages_read" = ${InnodbPagesRead}
            "Innodb_pages0_read" = ${InnodbPages0Read}
            "Innodb_pages_written" = ${InnodbPagesWritten}
            "Innodb_purge_trx_id" = ${InnodbPurgeTrxId}
            "Innodb_purge_undo_no" = ${InnodbPurgeUndoNo}
            "Innodb_row_lock_current_waits" = ${InnodbRowLockCurrentWaits}
            "Innodb_row_lock_time" = ${InnodbRowLockTime}
            "Innodb_row_lock_time_avg" = ${InnodbRowLockTimeAvg}
            "Innodb_row_lock_time_max" = ${InnodbRowLockTimeMax}
            "Innodb_row_lock_waits" = ${InnodbRowLockWaits}
            "Innodb_rows_deleted" = ${InnodbRowsDeleted}
            "Innodb_rows_inserted" = ${InnodbRowsInserted}
            "Innodb_rows_read" = ${InnodbRowsRead}
            "Innodb_rows_updated" = ${InnodbRowsUpdated}
            "Innodb_num_open_files" = ${InnodbNumOpenFiles}
            "Innodb_truncated_status_writes" = ${InnodbTruncatedStatusWrites}
            "Innodb_available_undo_logs" = ${InnodbAvailableUndoLogs}
            "Innodb_secondary_index_triggered_cluster_reads" = ${InnodbSecondaryIndexTriggeredClusterReads}
            "Innodb_secondary_index_triggered_cluster_reads_avoided" = ${InnodbSecondaryIndexTriggeredClusterReadsAvoided}
            "Innodb_buffered_aio_submitted" = ${InnodbBufferedAioSubmitted}
            "Innodb_scan_pages_contiguous" = ${InnodbScanPagesContiguous}
            "Innodb_scan_pages_disjointed" = ${InnodbScanPagesDisjointed}
            "Innodb_scan_pages_total_seek_distance" = ${InnodbScanPagesTotalSeekDistance}
            "Innodb_scan_data_size" = ${InnodbScanDataSize}
            "Innodb_scan_deleted_recs_size" = ${InnodbScanDeletedRecsSize}
            "Innodb_scrub_background_page_reorganizations" = ${InnodbScrubBackgroundPageReorganizations}
            "Innodb_scrub_background_page_splits" = ${InnodbScrubBackgroundPageSplits}
            "Innodb_scrub_background_page_split_failures_underflow" = ${InnodbScrubBackgroundPageSplitFailuresUnderflow}
            "Innodb_scrub_background_page_split_failures_out_of_filespace" = ${InnodbScrubBackgroundPageSplitFailuresOutOfFilespace}
            "Innodb_scrub_background_page_split_failures_missing_index" = ${InnodbScrubBackgroundPageSplitFailuresMissingIndex}
            "Innodb_scrub_background_page_split_failures_unknown" = ${InnodbScrubBackgroundPageSplitFailuresUnknown}
            "Innodb_scrub_log" = ${InnodbScrubLog}
            "Innodb_encryption_rotation_pages_read_from_cache" = ${InnodbEncryptionRotationPagesReadFromCache}
            "Innodb_encryption_rotation_pages_read_from_disk" = ${InnodbEncryptionRotationPagesReadFromDisk}
            "Innodb_encryption_rotation_pages_modified" = ${InnodbEncryptionRotationPagesModified}
            "Innodb_encryption_rotation_pages_flushed" = ${InnodbEncryptionRotationPagesFlushed}
            "Innodb_encryption_rotation_estimated_iops" = ${InnodbEncryptionRotationEstimatedIops}
            "Innodb_encryption_key_rotation_list_length" = ${InnodbEncryptionKeyRotationListLength}
            "Innodb_encryption_n_merge_blocks_encrypted" = ${InnodbEncryptionNMergeBlocksEncrypted}
            "Innodb_encryption_n_merge_blocks_decrypted" = ${InnodbEncryptionNMergeBlocksDecrypted}
            "Innodb_encryption_n_rowlog_blocks_encrypted" = ${InnodbEncryptionNRowlogBlocksEncrypted}
            "Innodb_encryption_n_rowlog_blocks_decrypted" = ${InnodbEncryptionNRowlogBlocksDecrypted}
            "Innodb_num_pages_encrypted" = ${InnodbNumPagesEncrypted}
            "Innodb_num_pages_decrypted" = ${InnodbNumPagesDecrypted}
            "Innodb_encryption_redo_key_version" = ${InnodbEncryptionRedoKeyVersion}
            "Key_blocks_not_flushed" = ${KeyBlocksNotFlushed}
            "Key_blocks_unused" = ${KeyBlocksUnused}
            "Key_blocks_used" = ${KeyBlocksUsed}
            "Key_read_requests" = ${KeyReadRequests}
            "Key_reads" = ${KeyReads}
            "Key_write_requests" = ${KeyWriteRequests}
            "Key_writes" = ${KeyWrites}
            "Last_query_cost" = ${LastQueryCost}
            "Last_query_partial_plans" = ${LastQueryPartialPlans}
            "Locked_connects" = ${LockedConnects}
            "Max_execution_time_exceeded" = ${MaxExecutionTimeExceeded}
            "Max_execution_time_set" = ${MaxExecutionTimeSet}
            "Max_execution_time_set_failed" = ${MaxExecutionTimeSetFailed}
            "Max_used_connections" = ${MaxUsedConnections}
            "Max_used_connections_time" = ${MaxUsedConnectionsTime}
            "Not_flushed_delayed_rows" = ${NotFlushedDelayedRows}
            "Ongoing_anonymous_transaction_count" = ${OngoingAnonymousTransactionCount}
            "Open_files" = ${OpenFiles}
            "Open_streams" = ${OpenStreams}
            "Open_table_definitions" = ${OpenTableDefinitions}
            "Open_tables" = ${OpenTables}
            "Opened_files" = ${OpenedFiles}
            "Opened_table_definitions" = ${OpenedTableDefinitions}
            "Opened_tables" = ${OpenedTables}
            "Performance_schema_accounts_lost" = ${PerformanceSchemaAccountsLost}
            "Performance_schema_cond_classes_lost" = ${PerformanceSchemaCondClassesLost}
            "Performance_schema_cond_instances_lost" = ${PerformanceSchemaCondInstancesLost}
            "Performance_schema_digest_lost" = ${PerformanceSchemaDigestLost}
            "Performance_schema_file_classes_lost" = ${PerformanceSchemaFileClassesLost}
            "Performance_schema_file_handles_lost" = ${PerformanceSchemaFileHandlesLost}
            "Performance_schema_file_instances_lost" = ${PerformanceSchemaFileInstancesLost}
            "Performance_schema_hosts_lost" = ${PerformanceSchemaHostsLost}
            "Performance_schema_index_stat_lost" = ${PerformanceSchemaIndexStatLost}
            "Performance_schema_locker_lost" = ${PerformanceSchemaLockerLost}
            "Performance_schema_memory_classes_lost" = ${PerformanceSchemaMemoryClassesLost}
            "Performance_schema_metadata_lock_lost" = ${PerformanceSchemaMetadataLockLost}
            "Performance_schema_mutex_classes_lost" = ${PerformanceSchemaMutexClassesLost}
            "Performance_schema_mutex_instances_lost" = ${PerformanceSchemaMutexInstancesLost}
            "Performance_schema_nested_statement_lost" = ${PerformanceSchemaNestedStatementLost}
            "Performance_schema_prepared_statements_lost" = ${PerformanceSchemaPreparedStatementsLost}
            "Performance_schema_program_lost" = ${PerformanceSchemaProgramLost}
            "Performance_schema_rwlock_classes_lost" = ${PerformanceSchemaRwlockClassesLost}
            "Performance_schema_rwlock_instances_lost" = ${PerformanceSchemaRwlockInstancesLost}
            "Performance_schema_session_connect_attrs_lost" = ${PerformanceSchemaSessionConnectAttrsLost}
            "Performance_schema_socket_classes_lost" = ${PerformanceSchemaSocketClassesLost}
            "Performance_schema_socket_instances_lost" = ${PerformanceSchemaSocketInstancesLost}
            "Performance_schema_stage_classes_lost" = ${PerformanceSchemaStageClassesLost}
            "Performance_schema_statement_classes_lost" = ${PerformanceSchemaStatementClassesLost}
            "Performance_schema_table_handles_lost" = ${PerformanceSchemaTableHandlesLost}
            "Performance_schema_table_instances_lost" = ${PerformanceSchemaTableInstancesLost}
            "Performance_schema_table_lock_stat_lost" = ${PerformanceSchemaTableLockStatLost}
            "Performance_schema_thread_classes_lost" = ${PerformanceSchemaThreadClassesLost}
            "Performance_schema_thread_instances_lost" = ${PerformanceSchemaThreadInstancesLost}
            "Performance_schema_users_lost" = ${PerformanceSchemaUsersLost}
            "Prepared_stmt_count" = ${PreparedStmtCount}
            "Qcache_free_blocks" = ${QcacheFreeBlocks}
            "Qcache_free_memory" = ${QcacheFreeMemory}
            "Qcache_hits" = ${QcacheHits}
            "Qcache_inserts" = ${QcacheInserts}
            "Qcache_lowmem_prunes" = ${QcacheLowmemPrunes}
            "Qcache_not_cached" = ${QcacheNotCached}
            "Qcache_queries_in_cache" = ${QcacheQueriesInCache}
            "Qcache_total_blocks" = ${QcacheTotalBlocks}
            "Queries" = ${Queries}
            "Questions" = ${Questions}
            "Rsa_public_key" = ${RsaPublicKey}
            "Select_full_join" = ${SelectFullJoin}
            "Select_full_range_join" = ${SelectFullRangeJoin}
            "Select_range" = ${SelectRange}
            "Select_range_check" = ${SelectRangeCheck}
            "Select_scan" = ${SelectScan}
            "Slave_open_temp_tables" = ${SlaveOpenTempTables}
            "Slow_launch_threads" = ${SlowLaunchThreads}
            "Slow_queries" = ${SlowQueries}
            "Sort_merge_passes" = ${SortMergePasses}
            "Sort_range" = ${SortRange}
            "Sort_rows" = ${SortRows}
            "Sort_scan" = ${SortScan}
            "Ssl_accept_renegotiates" = ${SslAcceptRenegotiates}
            "Ssl_accepts" = ${SslAccepts}
            "Ssl_callback_cache_hits" = ${SslCallbackCacheHits}
            "Ssl_cipher" = ${SslCipher}
            "Ssl_cipher_list" = ${SslCipherList}
            "Ssl_client_connects" = ${SslClientConnects}
            "Ssl_connect_renegotiates" = ${SslConnectRenegotiates}
            "Ssl_ctx_verify_depth" = ${SslCtxVerifyDepth}
            "Ssl_ctx_verify_mode" = ${SslCtxVerifyMode}
            "Ssl_default_timeout" = ${SslDefaultTimeout}
            "Ssl_finished_accepts" = ${SslFinishedAccepts}
            "Ssl_finished_connects" = ${SslFinishedConnects}
            "Ssl_server_not_after" = ${SslServerNotAfter}
            "Ssl_server_not_before" = ${SslServerNotBefore}
            "Ssl_session_cache_hits" = ${SslSessionCacheHits}
            "Ssl_session_cache_misses" = ${SslSessionCacheMisses}
            "Ssl_session_cache_mode" = ${SslSessionCacheMode}
            "Ssl_session_cache_overflows" = ${SslSessionCacheOverflows}
            "Ssl_session_cache_size" = ${SslSessionCacheSize}
            "Ssl_session_cache_timeouts" = ${SslSessionCacheTimeouts}
            "Ssl_sessions_reused" = ${SslSessionsReused}
            "Ssl_used_session_cache_entries" = ${SslUsedSessionCacheEntries}
            "Ssl_verify_depth" = ${SslVerifyDepth}
            "Ssl_verify_mode" = ${SslVerifyMode}
            "Ssl_version" = ${SslVersion}
            "Table_locks_immediate" = ${TableLocksImmediate}
            "Table_locks_waited" = ${TableLocksWaited}
            "Table_open_cache_hits" = ${TableOpenCacheHits}
            "Table_open_cache_misses" = ${TableOpenCacheMisses}
            "Table_open_cache_overflows" = ${TableOpenCacheOverflows}
            "Tc_log_max_pages_used" = ${TcLogMaxPagesUsed}
            "Tc_log_page_size" = ${TcLogPageSize}
            "Tc_log_page_waits" = ${TcLogPageWaits}
            "Threadpool_idle_threads" = ${ThreadpoolIdleThreads}
            "Threadpool_threads" = ${ThreadpoolThreads}
            "Threads_cached" = ${ThreadsCached}
            "Threads_connected" = ${ThreadsConnected}
            "Threads_created" = ${ThreadsCreated}
            "Threads_running" = ${ThreadsRunning}
            "Uptime" = ${Uptime}
            "Uptime_since_flush_status" = ${UptimeSinceFlushStatus}
            "wsrep_local_state_uuid" = ${WsrepLocalStateUuid}
            "wsrep_protocol_version" = ${WsrepProtocolVersion}
            "wsrep_last_applied" = ${WsrepLastApplied}
            "wsrep_last_committed" = ${WsrepLastCommitted}
            "wsrep_replicated" = ${WsrepReplicated}
            "wsrep_replicated_bytes" = ${WsrepReplicatedBytes}
            "wsrep_repl_keys" = ${WsrepReplKeys}
            "wsrep_repl_keys_bytes" = ${WsrepReplKeysBytes}
            "wsrep_repl_data_bytes" = ${WsrepReplDataBytes}
            "wsrep_repl_other_bytes" = ${WsrepReplOtherBytes}
            "wsrep_received" = ${WsrepReceived}
            "wsrep_received_bytes" = ${WsrepReceivedBytes}
            "wsrep_local_commits" = ${WsrepLocalCommits}
            "wsrep_local_cert_failures" = ${WsrepLocalCertFailures}
            "wsrep_local_replays" = ${WsrepLocalReplays}
            "wsrep_local_send_queue" = ${WsrepLocalSendQueue}
            "wsrep_local_send_queue_max" = ${WsrepLocalSendQueueMax}
            "wsrep_local_send_queue_min" = ${WsrepLocalSendQueueMin}
            "wsrep_local_send_queue_avg" = ${WsrepLocalSendQueueAvg}
            "wsrep_local_recv_queue" = ${WsrepLocalRecvQueue}
            "wsrep_local_recv_queue_max" = ${WsrepLocalRecvQueueMax}
            "wsrep_local_recv_queue_min" = ${WsrepLocalRecvQueueMin}
            "wsrep_local_recv_queue_avg" = ${WsrepLocalRecvQueueAvg}
            "wsrep_local_cached_downto" = ${WsrepLocalCachedDownto}
            "wsrep_flow_control_paused_ns" = ${WsrepFlowControlPausedNs}
            "wsrep_flow_control_paused" = ${WsrepFlowControlPaused}
            "wsrep_flow_control_sent" = ${WsrepFlowControlSent}
            "wsrep_flow_control_recv" = ${WsrepFlowControlRecv}
            "wsrep_flow_control_interval" = ${WsrepFlowControlInterval}
            "wsrep_flow_control_interval_low" = ${WsrepFlowControlIntervalLow}
            "wsrep_flow_control_interval_high" = ${WsrepFlowControlIntervalHigh}
            "wsrep_flow_control_status" = ${WsrepFlowControlStatus}
            "wsrep_flow_control_active" = ${WsrepFlowControlActive}
            "wsrep_flow_control_requested" = ${WsrepFlowControlRequested}
            "wsrep_cert_deps_distance" = ${WsrepCertDepsDistance}
            "wsrep_apply_oooe" = ${WsrepApplyOooe}
            "wsrep_apply_oool" = ${WsrepApplyOool}
            "wsrep_apply_window" = ${WsrepApplyWindow}
            "wsrep_commit_oooe" = ${WsrepCommitOooe}
            "wsrep_commit_oool" = ${WsrepCommitOool}
            "wsrep_commit_window" = ${WsrepCommitWindow}
            "wsrep_local_state" = ${WsrepLocalState}
            "wsrep_local_state_comment" = ${WsrepLocalStateComment}
            "wsrep_cert_index_size" = ${WsrepCertIndexSize}
            "wsrep_cert_bucket_count" = ${WsrepCertBucketCount}
            "wsrep_gcache_pool_size" = ${WsrepGcachePoolSize}
            "wsrep_causal_reads" = ${WsrepCausalReads}
            "wsrep_cert_interval" = ${WsrepCertInterval}
            "wsrep_open_transactions" = ${WsrepOpenTransactions}
            "wsrep_open_connections" = ${WsrepOpenConnections}
            "wsrep_ist_receive_status" = ${WsrepIstReceiveStatus}
            "wsrep_ist_receive_seqno_start" = ${WsrepIstReceiveSeqnoStart}
            "wsrep_ist_receive_seqno_current" = ${WsrepIstReceiveSeqnoCurrent}
            "wsrep_ist_receive_seqno_end" = ${WsrepIstReceiveSeqnoEnd}
            "wsrep_incoming_addresses" = ${WsrepIncomingAddresses}
            "wsrep_cluster_weight" = ${WsrepClusterWeight}
            "wsrep_desync_count" = ${WsrepDesyncCount}
            "wsrep_evs_delayed" = ${WsrepEvsDelayed}
            "wsrep_evs_evict_list" = ${WsrepEvsEvictList}
            "wsrep_evs_repl_latency" = ${WsrepEvsReplLatency}
            "wsrep_evs_state" = ${WsrepEvsState}
            "wsrep_gcomm_uuid" = ${WsrepGcommUuid}
            "wsrep_gmcast_segment" = ${WsrepGmcastSegment}
            "wsrep_cluster_conf_id" = ${WsrepClusterConfId}
            "wsrep_cluster_size" = ${WsrepClusterSize}
            "wsrep_cluster_state_uuid" = ${WsrepClusterStateUuid}
            "wsrep_cluster_status" = ${WsrepClusterStatus}
            "wsrep_connected" = ${WsrepConnected}
            "wsrep_local_bf_aborts" = ${WsrepLocalBfAborts}
            "wsrep_local_index" = ${WsrepLocalIndex}
            "wsrep_provider_name" = ${WsrepProviderName}
            "wsrep_provider_vendor" = ${WsrepProviderVendor}
            "wsrep_provider_version" = ${WsrepProviderVersion}
            "wsrep_ready" = ${WsrepReady}
        }

        return $PSO
    }

}

