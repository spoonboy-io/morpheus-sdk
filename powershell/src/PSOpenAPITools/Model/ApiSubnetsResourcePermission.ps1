#
# Morpheus API
# Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
# Version: 6.2.1
# Contact: dev@morpheusdata.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER All
Pass true to allow access all groups
.PARAMETER Sites
Array of groups ID objects that are allowed access
.PARAMETER AllPlans
No description available.
.PARAMETER Plans
No description available.
.OUTPUTS

ApiSubnetsResourcePermission<PSCustomObject>
#>

function Initialize-ApiSubnetsResourcePermission {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${All},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Sites},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AllPlans},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Plans}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ApiSubnetsResourcePermission' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "all" = ${All}
            "sites" = ${Sites}
            "allPlans" = ${AllPlans}
            "plans" = ${Plans}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ApiSubnetsResourcePermission<PSCustomObject>

.DESCRIPTION

Convert from JSON to ApiSubnetsResourcePermission<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ApiSubnetsResourcePermission<PSCustomObject>
#>
function ConvertFrom-JsonToApiSubnetsResourcePermission {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ApiSubnetsResourcePermission' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ApiSubnetsResourcePermission
        $AllProperties = ("all", "sites", "allPlans", "plans")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "all"))) { #optional property not found
            $All = $null
        } else {
            $All = $JsonParameters.PSobject.Properties["all"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "sites"))) { #optional property not found
            $Sites = $null
        } else {
            $Sites = $JsonParameters.PSobject.Properties["sites"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "allPlans"))) { #optional property not found
            $AllPlans = $null
        } else {
            $AllPlans = $JsonParameters.PSobject.Properties["allPlans"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "plans"))) { #optional property not found
            $Plans = $null
        } else {
            $Plans = $JsonParameters.PSobject.Properties["plans"].value
        }

        $PSO = [PSCustomObject]@{
            "all" = ${All}
            "sites" = ${Sites}
            "allPlans" = ${AllPlans}
            "plans" = ${Plans}
        }

        return $PSO
    }

}

