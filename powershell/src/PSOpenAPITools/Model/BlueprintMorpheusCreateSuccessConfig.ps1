#
# Morpheus API
# Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
# Version: 6.2.1
# Contact: dev@morpheusdata.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Image
Path to display image. Defaults to an internal Morpheus image.
.PARAMETER Name
A name for the blueprint
.PARAMETER Type
Blueprint Type
.PARAMETER Tiers
Tier definitions - Create in UI to view a baseline for object
.OUTPUTS

BlueprintMorpheusCreateSuccessConfig<PSCustomObject>
#>

function Initialize-BlueprintMorpheusCreateSuccessConfig {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Image},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("morpheus")]
        [String]
        ${Type},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Tiers}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => BlueprintMorpheusCreateSuccessConfig' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "image" = ${Image}
            "name" = ${Name}
            "type" = ${Type}
            "tiers" = ${Tiers}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to BlueprintMorpheusCreateSuccessConfig<PSCustomObject>

.DESCRIPTION

Convert from JSON to BlueprintMorpheusCreateSuccessConfig<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

BlueprintMorpheusCreateSuccessConfig<PSCustomObject>
#>
function ConvertFrom-JsonToBlueprintMorpheusCreateSuccessConfig {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => BlueprintMorpheusCreateSuccessConfig' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in BlueprintMorpheusCreateSuccessConfig
        $AllProperties = ("image", "name", "type", "tiers")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "image"))) { #optional property not found
            $Image = $null
        } else {
            $Image = $JsonParameters.PSobject.Properties["image"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "type"))) { #optional property not found
            $Type = $null
        } else {
            $Type = $JsonParameters.PSobject.Properties["type"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tiers"))) { #optional property not found
            $Tiers = $null
        } else {
            $Tiers = $JsonParameters.PSobject.Properties["tiers"].value
        }

        $PSO = [PSCustomObject]@{
            "image" = ${Image}
            "name" = ${Name}
            "type" = ${Type}
            "tiers" = ${Tiers}
        }

        return $PSO
    }

}

