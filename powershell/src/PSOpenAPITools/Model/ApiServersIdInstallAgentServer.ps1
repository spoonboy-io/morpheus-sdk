#
# Morpheus API
# Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
# Version: 6.2.1
# Contact: dev@morpheusdata.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Object containing server configuration parameters

.PARAMETER SshUsername
SSH username to use when provisioning
.PARAMETER SshPassword
SSH password to use, if not specified the account public key can be used
.PARAMETER ServerOs
No description available.
.OUTPUTS

ApiServersIdInstallAgentServer<PSCustomObject>
#>

function Initialize-ApiServersIdInstallAgentServer {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SshUsername},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SshPassword},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${ServerOs}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ApiServersIdInstallAgentServer' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "sshUsername" = ${SshUsername}
            "sshPassword" = ${SshPassword}
            "serverOs" = ${ServerOs}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ApiServersIdInstallAgentServer<PSCustomObject>

.DESCRIPTION

Convert from JSON to ApiServersIdInstallAgentServer<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ApiServersIdInstallAgentServer<PSCustomObject>
#>
function ConvertFrom-JsonToApiServersIdInstallAgentServer {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ApiServersIdInstallAgentServer' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ApiServersIdInstallAgentServer
        $AllProperties = ("sshUsername", "sshPassword", "serverOs")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "sshUsername"))) { #optional property not found
            $SshUsername = $null
        } else {
            $SshUsername = $JsonParameters.PSobject.Properties["sshUsername"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "sshPassword"))) { #optional property not found
            $SshPassword = $null
        } else {
            $SshPassword = $JsonParameters.PSobject.Properties["sshPassword"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "serverOs"))) { #optional property not found
            $ServerOs = $null
        } else {
            $ServerOs = $JsonParameters.PSobject.Properties["serverOs"].value
        }

        $PSO = [PSCustomObject]@{
            "sshUsername" = ${SshUsername}
            "sshPassword" = ${SshPassword}
            "serverOs" = ${ServerOs}
        }

        return $PSO
    }

}

