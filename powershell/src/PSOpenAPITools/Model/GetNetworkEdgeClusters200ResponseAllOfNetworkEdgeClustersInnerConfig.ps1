#
# Morpheus API
# Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
# Version: 6.2.1
# Contact: dev@morpheusdata.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER ClusterProfileBindings
No description available.
.PARAMETER Members
No description available.
.PARAMETER DeploymentType
No description available.
.PARAMETER MemberNodeType
No description available.
.OUTPUTS

GetNetworkEdgeClusters200ResponseAllOfNetworkEdgeClustersInnerConfig<PSCustomObject>
#>

function Initialize-GetNetworkEdgeClusters200ResponseAllOfNetworkEdgeClustersInnerConfig {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ClusterProfileBindings},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Members},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DeploymentType},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MemberNodeType}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => GetNetworkEdgeClusters200ResponseAllOfNetworkEdgeClustersInnerConfig' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "clusterProfileBindings" = ${ClusterProfileBindings}
            "members" = ${Members}
            "deploymentType" = ${DeploymentType}
            "memberNodeType" = ${MemberNodeType}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to GetNetworkEdgeClusters200ResponseAllOfNetworkEdgeClustersInnerConfig<PSCustomObject>

.DESCRIPTION

Convert from JSON to GetNetworkEdgeClusters200ResponseAllOfNetworkEdgeClustersInnerConfig<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

GetNetworkEdgeClusters200ResponseAllOfNetworkEdgeClustersInnerConfig<PSCustomObject>
#>
function ConvertFrom-JsonToGetNetworkEdgeClusters200ResponseAllOfNetworkEdgeClustersInnerConfig {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => GetNetworkEdgeClusters200ResponseAllOfNetworkEdgeClustersInnerConfig' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in GetNetworkEdgeClusters200ResponseAllOfNetworkEdgeClustersInnerConfig
        $AllProperties = ("clusterProfileBindings", "members", "deploymentType", "memberNodeType")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "clusterProfileBindings"))) { #optional property not found
            $ClusterProfileBindings = $null
        } else {
            $ClusterProfileBindings = $JsonParameters.PSobject.Properties["clusterProfileBindings"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "members"))) { #optional property not found
            $Members = $null
        } else {
            $Members = $JsonParameters.PSobject.Properties["members"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "deploymentType"))) { #optional property not found
            $DeploymentType = $null
        } else {
            $DeploymentType = $JsonParameters.PSobject.Properties["deploymentType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "memberNodeType"))) { #optional property not found
            $MemberNodeType = $null
        } else {
            $MemberNodeType = $JsonParameters.PSobject.Properties["memberNodeType"].value
        }

        $PSO = [PSCustomObject]@{
            "clusterProfileBindings" = ${ClusterProfileBindings}
            "members" = ${Members}
            "deploymentType" = ${DeploymentType}
            "memberNodeType" = ${MemberNodeType}
        }

        return $PSO
    }

}

