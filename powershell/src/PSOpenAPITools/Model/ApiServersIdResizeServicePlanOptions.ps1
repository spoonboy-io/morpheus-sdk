#
# Morpheus API
# Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
# Version: 6.2.1
# Contact: dev@morpheusdata.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER MaxCores
Core Count
.PARAMETER CoresPerSocket
Cores Per Socket
.PARAMETER MaxMemory
Memory in bytes For backwards compatability, values less than 1048576 are treated as being in MB and will be converted to bytes
.OUTPUTS

ApiServersIdResizeServicePlanOptions<PSCustomObject>
#>

function Initialize-ApiServersIdResizeServicePlanOptions {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${MaxCores},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${CoresPerSocket},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${MaxMemory}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ApiServersIdResizeServicePlanOptions' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "maxCores" = ${MaxCores}
            "coresPerSocket" = ${CoresPerSocket}
            "maxMemory" = ${MaxMemory}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ApiServersIdResizeServicePlanOptions<PSCustomObject>

.DESCRIPTION

Convert from JSON to ApiServersIdResizeServicePlanOptions<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ApiServersIdResizeServicePlanOptions<PSCustomObject>
#>
function ConvertFrom-JsonToApiServersIdResizeServicePlanOptions {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ApiServersIdResizeServicePlanOptions' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ApiServersIdResizeServicePlanOptions
        $AllProperties = ("maxCores", "coresPerSocket", "maxMemory")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "maxCores"))) { #optional property not found
            $MaxCores = $null
        } else {
            $MaxCores = $JsonParameters.PSobject.Properties["maxCores"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "coresPerSocket"))) { #optional property not found
            $CoresPerSocket = $null
        } else {
            $CoresPerSocket = $JsonParameters.PSobject.Properties["coresPerSocket"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "maxMemory"))) { #optional property not found
            $MaxMemory = $null
        } else {
            $MaxMemory = $JsonParameters.PSobject.Properties["maxMemory"].value
        }

        $PSO = [PSCustomObject]@{
            "maxCores" = ${MaxCores}
            "coresPerSocket" = ${CoresPerSocket}
            "maxMemory" = ${MaxMemory}
        }

        return $PSO
    }

}

