#
# Morpheus API
# Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
# Version: 6.2.1
# Contact: dev@morpheusdata.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER Name
No description available.
.PARAMETER Description
No description available.
.PARAMETER Visibility
No description available.
.PARAMETER Enabled
No description available.
.PARAMETER ScheduleType
No description available.
.PARAMETER ScheduleTimezone
No description available.
.PARAMETER MondayOn
No description available.
.PARAMETER MondayOnTime
No description available.
.PARAMETER MondayOff
No description available.
.PARAMETER MondayOffTime
No description available.
.PARAMETER TuesdayOn
No description available.
.PARAMETER TuesdayOnTime
No description available.
.PARAMETER TuesdayOff
No description available.
.PARAMETER TuesdayOffTime
No description available.
.PARAMETER WednesdayOn
No description available.
.PARAMETER WednesdayOnTime
No description available.
.PARAMETER WednesdayOff
No description available.
.PARAMETER WednesdayOffTime
No description available.
.PARAMETER ThursdayOn
No description available.
.PARAMETER ThursdayOnTime
No description available.
.PARAMETER ThursdayOff
No description available.
.PARAMETER ThursdayOffTime
No description available.
.PARAMETER FridayOn
No description available.
.PARAMETER FridayOnTime
No description available.
.PARAMETER FridayOff
No description available.
.PARAMETER FridayOffTime
No description available.
.PARAMETER SaturdayOn
No description available.
.PARAMETER SaturdayOnTime
No description available.
.PARAMETER SaturdayOff
No description available.
.PARAMETER SaturdayOffTime
No description available.
.PARAMETER SundayOn
No description available.
.PARAMETER SundayOnTime
No description available.
.PARAMETER SundayOff
No description available.
.PARAMETER SundayOffTime
No description available.
.PARAMETER TotalMonthlyHoursSaved
No description available.
.PARAMETER DateCreated
No description available.
.PARAMETER LastUpdated
No description available.
.OUTPUTS

AddPowerSchedules200ResponseAllOfSchedule<PSCustomObject>
#>

function Initialize-AddPowerSchedules200ResponseAllOfSchedule {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Description},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Visibility},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Enabled},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ScheduleType},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ScheduleTimezone},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${MondayOn},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MondayOnTime},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${MondayOff},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MondayOffTime},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${TuesdayOn},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TuesdayOnTime},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${TuesdayOff},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TuesdayOffTime},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${WednesdayOn},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WednesdayOnTime},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${WednesdayOff},
        [Parameter(Position = 18, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${WednesdayOffTime},
        [Parameter(Position = 19, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${ThursdayOn},
        [Parameter(Position = 20, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ThursdayOnTime},
        [Parameter(Position = 21, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${ThursdayOff},
        [Parameter(Position = 22, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ThursdayOffTime},
        [Parameter(Position = 23, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${FridayOn},
        [Parameter(Position = 24, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FridayOnTime},
        [Parameter(Position = 25, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${FridayOff},
        [Parameter(Position = 26, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FridayOffTime},
        [Parameter(Position = 27, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${SaturdayOn},
        [Parameter(Position = 28, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SaturdayOnTime},
        [Parameter(Position = 29, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${SaturdayOff},
        [Parameter(Position = 30, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SaturdayOffTime},
        [Parameter(Position = 31, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${SundayOn},
        [Parameter(Position = 32, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SundayOnTime},
        [Parameter(Position = 33, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${SundayOff},
        [Parameter(Position = 34, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SundayOffTime},
        [Parameter(Position = 35, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Decimal]]
        ${TotalMonthlyHoursSaved},
        [Parameter(Position = 36, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${DateCreated},
        [Parameter(Position = 37, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${LastUpdated}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => AddPowerSchedules200ResponseAllOfSchedule' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "name" = ${Name}
            "description" = ${Description}
            "visibility" = ${Visibility}
            "enabled" = ${Enabled}
            "scheduleType" = ${ScheduleType}
            "scheduleTimezone" = ${ScheduleTimezone}
            "mondayOn" = ${MondayOn}
            "mondayOnTime" = ${MondayOnTime}
            "mondayOff" = ${MondayOff}
            "mondayOffTime" = ${MondayOffTime}
            "tuesdayOn" = ${TuesdayOn}
            "tuesdayOnTime" = ${TuesdayOnTime}
            "tuesdayOff" = ${TuesdayOff}
            "tuesdayOffTime" = ${TuesdayOffTime}
            "wednesdayOn" = ${WednesdayOn}
            "wednesdayOnTime" = ${WednesdayOnTime}
            "wednesdayOff" = ${WednesdayOff}
            "wednesdayOffTime" = ${WednesdayOffTime}
            "thursdayOn" = ${ThursdayOn}
            "thursdayOnTime" = ${ThursdayOnTime}
            "thursdayOff" = ${ThursdayOff}
            "thursdayOffTime" = ${ThursdayOffTime}
            "fridayOn" = ${FridayOn}
            "fridayOnTime" = ${FridayOnTime}
            "fridayOff" = ${FridayOff}
            "fridayOffTime" = ${FridayOffTime}
            "saturdayOn" = ${SaturdayOn}
            "saturdayOnTime" = ${SaturdayOnTime}
            "saturdayOff" = ${SaturdayOff}
            "saturdayOffTime" = ${SaturdayOffTime}
            "sundayOn" = ${SundayOn}
            "sundayOnTime" = ${SundayOnTime}
            "sundayOff" = ${SundayOff}
            "sundayOffTime" = ${SundayOffTime}
            "totalMonthlyHoursSaved" = ${TotalMonthlyHoursSaved}
            "dateCreated" = ${DateCreated}
            "lastUpdated" = ${LastUpdated}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AddPowerSchedules200ResponseAllOfSchedule<PSCustomObject>

.DESCRIPTION

Convert from JSON to AddPowerSchedules200ResponseAllOfSchedule<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AddPowerSchedules200ResponseAllOfSchedule<PSCustomObject>
#>
function ConvertFrom-JsonToAddPowerSchedules200ResponseAllOfSchedule {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => AddPowerSchedules200ResponseAllOfSchedule' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in AddPowerSchedules200ResponseAllOfSchedule
        $AllProperties = ("id", "name", "description", "visibility", "enabled", "scheduleType", "scheduleTimezone", "mondayOn", "mondayOnTime", "mondayOff", "mondayOffTime", "tuesdayOn", "tuesdayOnTime", "tuesdayOff", "tuesdayOffTime", "wednesdayOn", "wednesdayOnTime", "wednesdayOff", "wednesdayOffTime", "thursdayOn", "thursdayOnTime", "thursdayOff", "thursdayOffTime", "fridayOn", "fridayOnTime", "fridayOff", "fridayOffTime", "saturdayOn", "saturdayOnTime", "saturdayOff", "saturdayOffTime", "sundayOn", "sundayOnTime", "sundayOff", "sundayOffTime", "totalMonthlyHoursSaved", "dateCreated", "lastUpdated")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "description"))) { #optional property not found
            $Description = $null
        } else {
            $Description = $JsonParameters.PSobject.Properties["description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "visibility"))) { #optional property not found
            $Visibility = $null
        } else {
            $Visibility = $JsonParameters.PSobject.Properties["visibility"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "enabled"))) { #optional property not found
            $Enabled = $null
        } else {
            $Enabled = $JsonParameters.PSobject.Properties["enabled"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "scheduleType"))) { #optional property not found
            $ScheduleType = $null
        } else {
            $ScheduleType = $JsonParameters.PSobject.Properties["scheduleType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "scheduleTimezone"))) { #optional property not found
            $ScheduleTimezone = $null
        } else {
            $ScheduleTimezone = $JsonParameters.PSobject.Properties["scheduleTimezone"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "mondayOn"))) { #optional property not found
            $MondayOn = $null
        } else {
            $MondayOn = $JsonParameters.PSobject.Properties["mondayOn"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "mondayOnTime"))) { #optional property not found
            $MondayOnTime = $null
        } else {
            $MondayOnTime = $JsonParameters.PSobject.Properties["mondayOnTime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "mondayOff"))) { #optional property not found
            $MondayOff = $null
        } else {
            $MondayOff = $JsonParameters.PSobject.Properties["mondayOff"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "mondayOffTime"))) { #optional property not found
            $MondayOffTime = $null
        } else {
            $MondayOffTime = $JsonParameters.PSobject.Properties["mondayOffTime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tuesdayOn"))) { #optional property not found
            $TuesdayOn = $null
        } else {
            $TuesdayOn = $JsonParameters.PSobject.Properties["tuesdayOn"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tuesdayOnTime"))) { #optional property not found
            $TuesdayOnTime = $null
        } else {
            $TuesdayOnTime = $JsonParameters.PSobject.Properties["tuesdayOnTime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tuesdayOff"))) { #optional property not found
            $TuesdayOff = $null
        } else {
            $TuesdayOff = $JsonParameters.PSobject.Properties["tuesdayOff"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tuesdayOffTime"))) { #optional property not found
            $TuesdayOffTime = $null
        } else {
            $TuesdayOffTime = $JsonParameters.PSobject.Properties["tuesdayOffTime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wednesdayOn"))) { #optional property not found
            $WednesdayOn = $null
        } else {
            $WednesdayOn = $JsonParameters.PSobject.Properties["wednesdayOn"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wednesdayOnTime"))) { #optional property not found
            $WednesdayOnTime = $null
        } else {
            $WednesdayOnTime = $JsonParameters.PSobject.Properties["wednesdayOnTime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wednesdayOff"))) { #optional property not found
            $WednesdayOff = $null
        } else {
            $WednesdayOff = $JsonParameters.PSobject.Properties["wednesdayOff"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "wednesdayOffTime"))) { #optional property not found
            $WednesdayOffTime = $null
        } else {
            $WednesdayOffTime = $JsonParameters.PSobject.Properties["wednesdayOffTime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "thursdayOn"))) { #optional property not found
            $ThursdayOn = $null
        } else {
            $ThursdayOn = $JsonParameters.PSobject.Properties["thursdayOn"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "thursdayOnTime"))) { #optional property not found
            $ThursdayOnTime = $null
        } else {
            $ThursdayOnTime = $JsonParameters.PSobject.Properties["thursdayOnTime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "thursdayOff"))) { #optional property not found
            $ThursdayOff = $null
        } else {
            $ThursdayOff = $JsonParameters.PSobject.Properties["thursdayOff"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "thursdayOffTime"))) { #optional property not found
            $ThursdayOffTime = $null
        } else {
            $ThursdayOffTime = $JsonParameters.PSobject.Properties["thursdayOffTime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "fridayOn"))) { #optional property not found
            $FridayOn = $null
        } else {
            $FridayOn = $JsonParameters.PSobject.Properties["fridayOn"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "fridayOnTime"))) { #optional property not found
            $FridayOnTime = $null
        } else {
            $FridayOnTime = $JsonParameters.PSobject.Properties["fridayOnTime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "fridayOff"))) { #optional property not found
            $FridayOff = $null
        } else {
            $FridayOff = $JsonParameters.PSobject.Properties["fridayOff"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "fridayOffTime"))) { #optional property not found
            $FridayOffTime = $null
        } else {
            $FridayOffTime = $JsonParameters.PSobject.Properties["fridayOffTime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "saturdayOn"))) { #optional property not found
            $SaturdayOn = $null
        } else {
            $SaturdayOn = $JsonParameters.PSobject.Properties["saturdayOn"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "saturdayOnTime"))) { #optional property not found
            $SaturdayOnTime = $null
        } else {
            $SaturdayOnTime = $JsonParameters.PSobject.Properties["saturdayOnTime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "saturdayOff"))) { #optional property not found
            $SaturdayOff = $null
        } else {
            $SaturdayOff = $JsonParameters.PSobject.Properties["saturdayOff"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "saturdayOffTime"))) { #optional property not found
            $SaturdayOffTime = $null
        } else {
            $SaturdayOffTime = $JsonParameters.PSobject.Properties["saturdayOffTime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "sundayOn"))) { #optional property not found
            $SundayOn = $null
        } else {
            $SundayOn = $JsonParameters.PSobject.Properties["sundayOn"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "sundayOnTime"))) { #optional property not found
            $SundayOnTime = $null
        } else {
            $SundayOnTime = $JsonParameters.PSobject.Properties["sundayOnTime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "sundayOff"))) { #optional property not found
            $SundayOff = $null
        } else {
            $SundayOff = $JsonParameters.PSobject.Properties["sundayOff"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "sundayOffTime"))) { #optional property not found
            $SundayOffTime = $null
        } else {
            $SundayOffTime = $JsonParameters.PSobject.Properties["sundayOffTime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "totalMonthlyHoursSaved"))) { #optional property not found
            $TotalMonthlyHoursSaved = $null
        } else {
            $TotalMonthlyHoursSaved = $JsonParameters.PSobject.Properties["totalMonthlyHoursSaved"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dateCreated"))) { #optional property not found
            $DateCreated = $null
        } else {
            $DateCreated = $JsonParameters.PSobject.Properties["dateCreated"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "lastUpdated"))) { #optional property not found
            $LastUpdated = $null
        } else {
            $LastUpdated = $JsonParameters.PSobject.Properties["lastUpdated"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "name" = ${Name}
            "description" = ${Description}
            "visibility" = ${Visibility}
            "enabled" = ${Enabled}
            "scheduleType" = ${ScheduleType}
            "scheduleTimezone" = ${ScheduleTimezone}
            "mondayOn" = ${MondayOn}
            "mondayOnTime" = ${MondayOnTime}
            "mondayOff" = ${MondayOff}
            "mondayOffTime" = ${MondayOffTime}
            "tuesdayOn" = ${TuesdayOn}
            "tuesdayOnTime" = ${TuesdayOnTime}
            "tuesdayOff" = ${TuesdayOff}
            "tuesdayOffTime" = ${TuesdayOffTime}
            "wednesdayOn" = ${WednesdayOn}
            "wednesdayOnTime" = ${WednesdayOnTime}
            "wednesdayOff" = ${WednesdayOff}
            "wednesdayOffTime" = ${WednesdayOffTime}
            "thursdayOn" = ${ThursdayOn}
            "thursdayOnTime" = ${ThursdayOnTime}
            "thursdayOff" = ${ThursdayOff}
            "thursdayOffTime" = ${ThursdayOffTime}
            "fridayOn" = ${FridayOn}
            "fridayOnTime" = ${FridayOnTime}
            "fridayOff" = ${FridayOff}
            "fridayOffTime" = ${FridayOffTime}
            "saturdayOn" = ${SaturdayOn}
            "saturdayOnTime" = ${SaturdayOnTime}
            "saturdayOff" = ${SaturdayOff}
            "saturdayOffTime" = ${SaturdayOffTime}
            "sundayOn" = ${SundayOn}
            "sundayOnTime" = ${SundayOnTime}
            "sundayOff" = ${SundayOff}
            "sundayOffTime" = ${SundayOffTime}
            "totalMonthlyHoursSaved" = ${TotalMonthlyHoursSaved}
            "dateCreated" = ${DateCreated}
            "lastUpdated" = ${LastUpdated}
        }

        return $PSO
    }

}

