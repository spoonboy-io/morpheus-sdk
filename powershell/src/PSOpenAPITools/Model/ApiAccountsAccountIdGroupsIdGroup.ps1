#
# Morpheus API
# Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
# Version: 6.2.1
# Contact: dev@morpheusdata.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Name
A unique name scoped to the subtenant for the group
.PARAMETER Description
Optional description field if you want to put more info there
.PARAMETER Code
Optional code for use with policies
.PARAMETER Location
location
.OUTPUTS

ApiAccountsAccountIdGroupsIdGroup<PSCustomObject>
#>

function Initialize-ApiAccountsAccountIdGroupsIdGroup {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Description},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Code},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Location}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ApiAccountsAccountIdGroupsIdGroup' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "description" = ${Description}
            "code" = ${Code}
            "location" = ${Location}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ApiAccountsAccountIdGroupsIdGroup<PSCustomObject>

.DESCRIPTION

Convert from JSON to ApiAccountsAccountIdGroupsIdGroup<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ApiAccountsAccountIdGroupsIdGroup<PSCustomObject>
#>
function ConvertFrom-JsonToApiAccountsAccountIdGroupsIdGroup {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ApiAccountsAccountIdGroupsIdGroup' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ApiAccountsAccountIdGroupsIdGroup
        $AllProperties = ("name", "description", "code", "location")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "description"))) { #optional property not found
            $Description = $null
        } else {
            $Description = $JsonParameters.PSobject.Properties["description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "code"))) { #optional property not found
            $Code = $null
        } else {
            $Code = $JsonParameters.PSobject.Properties["code"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "location"))) { #optional property not found
            $Location = $null
        } else {
            $Location = $JsonParameters.PSobject.Properties["location"].value
        }

        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "description" = ${Description}
            "code" = ${Code}
            "location" = ${Location}
        }

        return $PSO
    }

}

