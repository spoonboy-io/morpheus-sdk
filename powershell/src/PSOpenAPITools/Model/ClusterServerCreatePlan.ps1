#
# Morpheus API
# Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
# Version: 6.2.1
# Contact: dev@morpheusdata.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
The id for the memory and storage option pre-configured within Morpheus.
.PARAMETER Code
The code for the memory and storage option pre-configured within Morpheus.
.PARAMETER Options
Map of custom options depending on selected service plan . An example would be `maxMemory`, or `maxCores`.
.OUTPUTS

ClusterServerCreatePlan<PSCustomObject>
#>

function Initialize-ClusterServerCreatePlan {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Code},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Options}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ClusterServerCreatePlan' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "code" = ${Code}
            "options" = ${Options}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ClusterServerCreatePlan<PSCustomObject>

.DESCRIPTION

Convert from JSON to ClusterServerCreatePlan<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ClusterServerCreatePlan<PSCustomObject>
#>
function ConvertFrom-JsonToClusterServerCreatePlan {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ClusterServerCreatePlan' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ClusterServerCreatePlan
        $AllProperties = ("id", "code", "options")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "code"))) { #optional property not found
            $Code = $null
        } else {
            $Code = $JsonParameters.PSobject.Properties["code"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "options"))) { #optional property not found
            $Options = $null
        } else {
            $Options = $JsonParameters.PSobject.Properties["options"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "code" = ${Code}
            "options" = ${Options}
        }

        return $PSO
    }

}

