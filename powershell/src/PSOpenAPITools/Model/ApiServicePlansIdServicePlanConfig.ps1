#
# Morpheus API
# Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
# Version: 6.2.1
# Contact: dev@morpheusdata.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER StorageSizeType
Specifies range min / max storage multiplier
.PARAMETER MemorySizeType
Specifies range min / max memory multiplier
.PARAMETER Ranges
No description available.
.OUTPUTS

ApiServicePlansIdServicePlanConfig<PSCustomObject>
#>

function Initialize-ApiServicePlansIdServicePlanConfig {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("gb", "mb")]
        [String]
        ${StorageSizeType} = "gb",
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("gb", "mb")]
        [String]
        ${MemorySizeType} = "mb",
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Ranges}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ApiServicePlansIdServicePlanConfig' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "storageSizeType" = ${StorageSizeType}
            "memorySizeType" = ${MemorySizeType}
            "ranges" = ${Ranges}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ApiServicePlansIdServicePlanConfig<PSCustomObject>

.DESCRIPTION

Convert from JSON to ApiServicePlansIdServicePlanConfig<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ApiServicePlansIdServicePlanConfig<PSCustomObject>
#>
function ConvertFrom-JsonToApiServicePlansIdServicePlanConfig {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ApiServicePlansIdServicePlanConfig' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ApiServicePlansIdServicePlanConfig
        $AllProperties = ("storageSizeType", "memorySizeType", "ranges")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "storageSizeType"))) { #optional property not found
            $StorageSizeType = $null
        } else {
            $StorageSizeType = $JsonParameters.PSobject.Properties["storageSizeType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "memorySizeType"))) { #optional property not found
            $MemorySizeType = $null
        } else {
            $MemorySizeType = $JsonParameters.PSobject.Properties["memorySizeType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ranges"))) { #optional property not found
            $Ranges = $null
        } else {
            $Ranges = $JsonParameters.PSobject.Properties["ranges"].value
        }

        $PSO = [PSCustomObject]@{
            "storageSizeType" = ${StorageSizeType}
            "memorySizeType" = ${MemorySizeType}
            "ranges" = ${Ranges}
        }

        return $PSO
    }

}

