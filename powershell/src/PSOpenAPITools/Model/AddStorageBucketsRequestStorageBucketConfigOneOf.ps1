#
# Morpheus API
# Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
# Version: 6.2.1
# Contact: dev@morpheusdata.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Amazon S3

.PARAMETER AccessKey
Access Key
.PARAMETER SecretKey
Secret Key
.PARAMETER Region
Optional Amazon region if creating a new bucket
.PARAMETER Endpoint
Optional endpoint URL if pointing to an object store other than amazon that mimics the Amazon S3 APIs.
.OUTPUTS

AddStorageBucketsRequestStorageBucketConfigOneOf<PSCustomObject>
#>

function Initialize-AddStorageBucketsRequestStorageBucketConfigOneOf {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AccessKey},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SecretKey},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Region},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Endpoint}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => AddStorageBucketsRequestStorageBucketConfigOneOf' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "accessKey" = ${AccessKey}
            "secretKey" = ${SecretKey}
            "region" = ${Region}
            "endpoint" = ${Endpoint}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AddStorageBucketsRequestStorageBucketConfigOneOf<PSCustomObject>

.DESCRIPTION

Convert from JSON to AddStorageBucketsRequestStorageBucketConfigOneOf<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AddStorageBucketsRequestStorageBucketConfigOneOf<PSCustomObject>
#>
function ConvertFrom-JsonToAddStorageBucketsRequestStorageBucketConfigOneOf {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => AddStorageBucketsRequestStorageBucketConfigOneOf' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in AddStorageBucketsRequestStorageBucketConfigOneOf
        $AllProperties = ("accessKey", "secretKey", "region", "endpoint")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "accessKey"))) { #optional property not found
            $AccessKey = $null
        } else {
            $AccessKey = $JsonParameters.PSobject.Properties["accessKey"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "secretKey"))) { #optional property not found
            $SecretKey = $null
        } else {
            $SecretKey = $JsonParameters.PSobject.Properties["secretKey"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "region"))) { #optional property not found
            $Region = $null
        } else {
            $Region = $JsonParameters.PSobject.Properties["region"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "endpoint"))) { #optional property not found
            $Endpoint = $null
        } else {
            $Endpoint = $JsonParameters.PSobject.Properties["endpoint"].value
        }

        $PSO = [PSCustomObject]@{
            "accessKey" = ${AccessKey}
            "secretKey" = ${SecretKey}
            "region" = ${Region}
            "endpoint" = ${Endpoint}
        }

        return $PSO
    }

}

