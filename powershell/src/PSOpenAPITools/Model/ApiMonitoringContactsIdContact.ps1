#
# Morpheus API
# Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
# Version: 6.2.1
# Contact: dev@morpheusdata.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Payload for updating a monitoring contact

.PARAMETER Name
Unique name scoped to your account for the contact
.PARAMETER EmailAddress
Email notification address
.PARAMETER SmsAddress
SMS notification address
.PARAMETER SlackHook
Slack Hook
.OUTPUTS

ApiMonitoringContactsIdContact<PSCustomObject>
#>

function Initialize-ApiMonitoringContactsIdContact {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Name},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${EmailAddress},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SmsAddress},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SlackHook}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ApiMonitoringContactsIdContact' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "emailAddress" = ${EmailAddress}
            "smsAddress" = ${SmsAddress}
            "slackHook" = ${SlackHook}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ApiMonitoringContactsIdContact<PSCustomObject>

.DESCRIPTION

Convert from JSON to ApiMonitoringContactsIdContact<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ApiMonitoringContactsIdContact<PSCustomObject>
#>
function ConvertFrom-JsonToApiMonitoringContactsIdContact {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ApiMonitoringContactsIdContact' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ApiMonitoringContactsIdContact
        $AllProperties = ("name", "emailAddress", "smsAddress", "slackHook")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "name"))) { #optional property not found
            $Name = $null
        } else {
            $Name = $JsonParameters.PSobject.Properties["name"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "emailAddress"))) { #optional property not found
            $EmailAddress = $null
        } else {
            $EmailAddress = $JsonParameters.PSobject.Properties["emailAddress"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "smsAddress"))) { #optional property not found
            $SmsAddress = $null
        } else {
            $SmsAddress = $JsonParameters.PSobject.Properties["smsAddress"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "slackHook"))) { #optional property not found
            $SlackHook = $null
        } else {
            $SlackHook = $JsonParameters.PSobject.Properties["slackHook"].value
        }

        $PSO = [PSCustomObject]@{
            "name" = ${Name}
            "emailAddress" = ${EmailAddress}
            "smsAddress" = ${SmsAddress}
            "slackHook" = ${SlackHook}
        }

        return $PSO
    }

}

