#
# Morpheus API
# Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
# Version: 6.2.1
# Contact: dev@morpheusdata.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER CpuAvgCutoffPower
Power Shutdown Average CPU (%). Lower limit for average CPU usage
.PARAMETER CpuMaxCutoffPower
Power Shutdown Maximum CPU (%). Lower limit for peak CPU usage
.PARAMETER NetworkCutoffPower
Power Shutdown Network threshold (bytes). Lower limit for average network bandwidth
.PARAMETER CpuUpAvgStandardCutoffRightSize
CPU Up-size Average CPU (%). Upper limit for CPU usage
.PARAMETER CpuUpMaxStandardCutoffRightSize
CPU Up-size Maximum CPU (%). Upper limit for peak CPU usage
.PARAMETER MemoryUpAvgStandardCutoffRightSize
Memory Up-size Minimum Free Memory (%). Lower limit for average free memory usage
.PARAMETER MemoryDownAvgStandardCutoffRightSize
Memory Down-size Maximum Free Memory (%). Upper limit for average free memory
.PARAMETER MemoryDownMaxStandardCutoffRightSize
Memory Down-size Maximum Free Memory (%). Upper limit for peak memory usage
.OUTPUTS

GuidanceSettings<PSCustomObject>
#>

function Initialize-GuidanceSettings {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CpuAvgCutoffPower},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CpuMaxCutoffPower},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${NetworkCutoffPower},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CpuUpAvgStandardCutoffRightSize},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CpuUpMaxStandardCutoffRightSize},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${MemoryUpAvgStandardCutoffRightSize},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${MemoryDownAvgStandardCutoffRightSize},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${MemoryDownMaxStandardCutoffRightSize}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => GuidanceSettings' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "cpuAvgCutoffPower" = ${CpuAvgCutoffPower}
            "cpuMaxCutoffPower" = ${CpuMaxCutoffPower}
            "networkCutoffPower" = ${NetworkCutoffPower}
            "cpuUpAvgStandardCutoffRightSize" = ${CpuUpAvgStandardCutoffRightSize}
            "cpuUpMaxStandardCutoffRightSize" = ${CpuUpMaxStandardCutoffRightSize}
            "memoryUpAvgStandardCutoffRightSize" = ${MemoryUpAvgStandardCutoffRightSize}
            "memoryDownAvgStandardCutoffRightSize" = ${MemoryDownAvgStandardCutoffRightSize}
            "memoryDownMaxStandardCutoffRightSize" = ${MemoryDownMaxStandardCutoffRightSize}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to GuidanceSettings<PSCustomObject>

.DESCRIPTION

Convert from JSON to GuidanceSettings<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

GuidanceSettings<PSCustomObject>
#>
function ConvertFrom-JsonToGuidanceSettings {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => GuidanceSettings' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in GuidanceSettings
        $AllProperties = ("cpuAvgCutoffPower", "cpuMaxCutoffPower", "networkCutoffPower", "cpuUpAvgStandardCutoffRightSize", "cpuUpMaxStandardCutoffRightSize", "memoryUpAvgStandardCutoffRightSize", "memoryDownAvgStandardCutoffRightSize", "memoryDownMaxStandardCutoffRightSize")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cpuAvgCutoffPower"))) { #optional property not found
            $CpuAvgCutoffPower = $null
        } else {
            $CpuAvgCutoffPower = $JsonParameters.PSobject.Properties["cpuAvgCutoffPower"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cpuMaxCutoffPower"))) { #optional property not found
            $CpuMaxCutoffPower = $null
        } else {
            $CpuMaxCutoffPower = $JsonParameters.PSobject.Properties["cpuMaxCutoffPower"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "networkCutoffPower"))) { #optional property not found
            $NetworkCutoffPower = $null
        } else {
            $NetworkCutoffPower = $JsonParameters.PSobject.Properties["networkCutoffPower"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cpuUpAvgStandardCutoffRightSize"))) { #optional property not found
            $CpuUpAvgStandardCutoffRightSize = $null
        } else {
            $CpuUpAvgStandardCutoffRightSize = $JsonParameters.PSobject.Properties["cpuUpAvgStandardCutoffRightSize"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cpuUpMaxStandardCutoffRightSize"))) { #optional property not found
            $CpuUpMaxStandardCutoffRightSize = $null
        } else {
            $CpuUpMaxStandardCutoffRightSize = $JsonParameters.PSobject.Properties["cpuUpMaxStandardCutoffRightSize"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "memoryUpAvgStandardCutoffRightSize"))) { #optional property not found
            $MemoryUpAvgStandardCutoffRightSize = $null
        } else {
            $MemoryUpAvgStandardCutoffRightSize = $JsonParameters.PSobject.Properties["memoryUpAvgStandardCutoffRightSize"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "memoryDownAvgStandardCutoffRightSize"))) { #optional property not found
            $MemoryDownAvgStandardCutoffRightSize = $null
        } else {
            $MemoryDownAvgStandardCutoffRightSize = $JsonParameters.PSobject.Properties["memoryDownAvgStandardCutoffRightSize"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "memoryDownMaxStandardCutoffRightSize"))) { #optional property not found
            $MemoryDownMaxStandardCutoffRightSize = $null
        } else {
            $MemoryDownMaxStandardCutoffRightSize = $JsonParameters.PSobject.Properties["memoryDownMaxStandardCutoffRightSize"].value
        }

        $PSO = [PSCustomObject]@{
            "cpuAvgCutoffPower" = ${CpuAvgCutoffPower}
            "cpuMaxCutoffPower" = ${CpuMaxCutoffPower}
            "networkCutoffPower" = ${NetworkCutoffPower}
            "cpuUpAvgStandardCutoffRightSize" = ${CpuUpAvgStandardCutoffRightSize}
            "cpuUpMaxStandardCutoffRightSize" = ${CpuUpMaxStandardCutoffRightSize}
            "memoryUpAvgStandardCutoffRightSize" = ${MemoryUpAvgStandardCutoffRightSize}
            "memoryDownAvgStandardCutoffRightSize" = ${MemoryDownAvgStandardCutoffRightSize}
            "memoryDownMaxStandardCutoffRightSize" = ${MemoryDownMaxStandardCutoffRightSize}
        }

        return $PSO
    }

}

