#
# Morpheus API
# Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
# Version: 6.2.1
# Contact: dev@morpheusdata.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER All
Set to true to grant access to all groups
.PARAMETER Sites
Array of objects identifying groups with access
.OUTPUTS

ApiLibraryLayoutsIdPermissionsInstanceTypeLayoutPermissionsResourcePermissions<PSCustomObject>
#>

function Initialize-ApiLibraryLayoutsIdPermissionsInstanceTypeLayoutPermissionsResourcePermissions {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${All},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Sites}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ApiLibraryLayoutsIdPermissionsInstanceTypeLayoutPermissionsResourcePermissions' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "all" = ${All}
            "sites" = ${Sites}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ApiLibraryLayoutsIdPermissionsInstanceTypeLayoutPermissionsResourcePermissions<PSCustomObject>

.DESCRIPTION

Convert from JSON to ApiLibraryLayoutsIdPermissionsInstanceTypeLayoutPermissionsResourcePermissions<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ApiLibraryLayoutsIdPermissionsInstanceTypeLayoutPermissionsResourcePermissions<PSCustomObject>
#>
function ConvertFrom-JsonToApiLibraryLayoutsIdPermissionsInstanceTypeLayoutPermissionsResourcePermissions {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ApiLibraryLayoutsIdPermissionsInstanceTypeLayoutPermissionsResourcePermissions' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ApiLibraryLayoutsIdPermissionsInstanceTypeLayoutPermissionsResourcePermissions
        $AllProperties = ("all", "sites")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "all"))) { #optional property not found
            $All = $null
        } else {
            $All = $JsonParameters.PSobject.Properties["all"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "sites"))) { #optional property not found
            $Sites = $null
        } else {
            $Sites = $JsonParameters.PSobject.Properties["sites"].value
        }

        $PSO = [PSCustomObject]@{
            "all" = ${All}
            "sites" = ${Sites}
        }

        return $PSO
    }

}

