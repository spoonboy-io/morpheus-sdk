#
# Morpheus API
# Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
# Version: 6.2.1
# Contact: dev@morpheusdata.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

List of task objects in order

.PARAMETER TaskId
Task ID
.PARAMETER TaskPhase
Task Phase. Pass operation for `operational` workflows.
.OUTPUTS

ApiTaskSetsTaskSetTasks<PSCustomObject>
#>

function Initialize-ApiTaskSetsTaskSetTasks {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${TaskId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("start", "stop", "preProvision", "provision", "postProvision", "preDeploy", "deploy", "reconfigure", "teardown", "startup", "shutdown", "operation")]
        [String]
        ${TaskPhase} = "provision"
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ApiTaskSetsTaskSetTasks' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "taskId" = ${TaskId}
            "taskPhase" = ${TaskPhase}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ApiTaskSetsTaskSetTasks<PSCustomObject>

.DESCRIPTION

Convert from JSON to ApiTaskSetsTaskSetTasks<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ApiTaskSetsTaskSetTasks<PSCustomObject>
#>
function ConvertFrom-JsonToApiTaskSetsTaskSetTasks {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ApiTaskSetsTaskSetTasks' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ApiTaskSetsTaskSetTasks
        $AllProperties = ("taskId", "taskPhase")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "taskId"))) { #optional property not found
            $TaskId = $null
        } else {
            $TaskId = $JsonParameters.PSobject.Properties["taskId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "taskPhase"))) { #optional property not found
            $TaskPhase = $null
        } else {
            $TaskPhase = $JsonParameters.PSobject.Properties["taskPhase"].value
        }

        $PSO = [PSCustomObject]@{
            "taskId" = ${TaskId}
            "taskPhase" = ${TaskPhase}
        }

        return $PSO
    }

}

