#
# Morpheus API
# Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
# Version: 6.2.1
# Contact: dev@morpheusdata.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Configuration settings for the following policy types: - Cluster Resource Name 

.PARAMETER ServerNamingType
No description available.
.PARAMETER ServerNamingPattern
No description available.
.PARAMETER ServerNamingConflict
No description available.
.OUTPUTS

ClusterResourceNamePolicyTypeConfiguration<PSCustomObject>
#>

function Initialize-ClusterResourceNamePolicyTypeConfiguration {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ServerNamingType},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ServerNamingPattern},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${ServerNamingConflict}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ClusterResourceNamePolicyTypeConfiguration' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "serverNamingType" = ${ServerNamingType}
            "serverNamingPattern" = ${ServerNamingPattern}
            "serverNamingConflict" = ${ServerNamingConflict}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ClusterResourceNamePolicyTypeConfiguration<PSCustomObject>

.DESCRIPTION

Convert from JSON to ClusterResourceNamePolicyTypeConfiguration<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ClusterResourceNamePolicyTypeConfiguration<PSCustomObject>
#>
function ConvertFrom-JsonToClusterResourceNamePolicyTypeConfiguration {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ClusterResourceNamePolicyTypeConfiguration' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ClusterResourceNamePolicyTypeConfiguration
        $AllProperties = ("serverNamingType", "serverNamingPattern", "serverNamingConflict")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "serverNamingType"))) { #optional property not found
            $ServerNamingType = $null
        } else {
            $ServerNamingType = $JsonParameters.PSobject.Properties["serverNamingType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "serverNamingPattern"))) { #optional property not found
            $ServerNamingPattern = $null
        } else {
            $ServerNamingPattern = $JsonParameters.PSobject.Properties["serverNamingPattern"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "serverNamingConflict"))) { #optional property not found
            $ServerNamingConflict = $null
        } else {
            $ServerNamingConflict = $JsonParameters.PSobject.Properties["serverNamingConflict"].value
        }

        $PSO = [PSCustomObject]@{
            "serverNamingType" = ${ServerNamingType}
            "serverNamingPattern" = ${ServerNamingPattern}
            "serverNamingConflict" = ${ServerNamingConflict}
        }

        return $PSO
    }

}

