#
# Morpheus API
# Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
# Version: 6.1.1
# Contact: dev@morpheusdata.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER SecretAccessKey
No description available.
.PARAMETER ArchiveFile
No description available.
.PARAMETER CreatedBy
No description available.
.PARAMETER DateCreated
No description available.
.PARAMETER LastUpdated
No description available.
.PARAMETER LastAccessDate
No description available.
.PARAMETER ExpirationDate
No description available.
.PARAMETER DownloadCount
No description available.
.OUTPUTS

ArchiveFileLinks<PSCustomObject>
#>

function Initialize-ArchiveFileLinks {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SecretAccessKey},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${ArchiveFile},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CreatedBy},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${DateCreated},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${LastUpdated},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${LastAccessDate},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${ExpirationDate},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int64]]
        ${DownloadCount}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ArchiveFileLinks' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "secretAccessKey" = ${SecretAccessKey}
            "archiveFile" = ${ArchiveFile}
            "createdBy" = ${CreatedBy}
            "dateCreated" = ${DateCreated}
            "lastUpdated" = ${LastUpdated}
            "lastAccessDate" = ${LastAccessDate}
            "expirationDate" = ${ExpirationDate}
            "downloadCount" = ${DownloadCount}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ArchiveFileLinks<PSCustomObject>

.DESCRIPTION

Convert from JSON to ArchiveFileLinks<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ArchiveFileLinks<PSCustomObject>
#>
function ConvertFrom-JsonToArchiveFileLinks {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ArchiveFileLinks' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ArchiveFileLinks
        $AllProperties = ("id", "secretAccessKey", "archiveFile", "createdBy", "dateCreated", "lastUpdated", "lastAccessDate", "expirationDate", "downloadCount")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "secretAccessKey"))) { #optional property not found
            $SecretAccessKey = $null
        } else {
            $SecretAccessKey = $JsonParameters.PSobject.Properties["secretAccessKey"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "archiveFile"))) { #optional property not found
            $ArchiveFile = $null
        } else {
            $ArchiveFile = $JsonParameters.PSobject.Properties["archiveFile"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "createdBy"))) { #optional property not found
            $CreatedBy = $null
        } else {
            $CreatedBy = $JsonParameters.PSobject.Properties["createdBy"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dateCreated"))) { #optional property not found
            $DateCreated = $null
        } else {
            $DateCreated = $JsonParameters.PSobject.Properties["dateCreated"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "lastUpdated"))) { #optional property not found
            $LastUpdated = $null
        } else {
            $LastUpdated = $JsonParameters.PSobject.Properties["lastUpdated"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "lastAccessDate"))) { #optional property not found
            $LastAccessDate = $null
        } else {
            $LastAccessDate = $JsonParameters.PSobject.Properties["lastAccessDate"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "expirationDate"))) { #optional property not found
            $ExpirationDate = $null
        } else {
            $ExpirationDate = $JsonParameters.PSobject.Properties["expirationDate"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "downloadCount"))) { #optional property not found
            $DownloadCount = $null
        } else {
            $DownloadCount = $JsonParameters.PSobject.Properties["downloadCount"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "secretAccessKey" = ${SecretAccessKey}
            "archiveFile" = ${ArchiveFile}
            "createdBy" = ${CreatedBy}
            "dateCreated" = ${DateCreated}
            "lastUpdated" = ${LastUpdated}
            "lastAccessDate" = ${LastAccessDate}
            "expirationDate" = ${ExpirationDate}
            "downloadCount" = ${DownloadCount}
        }

        return $PSO
    }

}

