#
# Morpheus API
# Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
# Version: 6.2.1
# Contact: dev@morpheusdata.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

NFSv3

.PARAMETER VarHost
Host
.PARAMETER ExportFolder
Export Folder
.OUTPUTS

AddStorageBucketsRequestStorageBucketConfigOneOf4<PSCustomObject>
#>

function Initialize-AddStorageBucketsRequestStorageBucketConfigOneOf4 {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${VarHost},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ExportFolder}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => AddStorageBucketsRequestStorageBucketConfigOneOf4' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "host" = ${VarHost}
            "exportFolder" = ${ExportFolder}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to AddStorageBucketsRequestStorageBucketConfigOneOf4<PSCustomObject>

.DESCRIPTION

Convert from JSON to AddStorageBucketsRequestStorageBucketConfigOneOf4<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

AddStorageBucketsRequestStorageBucketConfigOneOf4<PSCustomObject>
#>
function ConvertFrom-JsonToAddStorageBucketsRequestStorageBucketConfigOneOf4 {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => AddStorageBucketsRequestStorageBucketConfigOneOf4' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in AddStorageBucketsRequestStorageBucketConfigOneOf4
        $AllProperties = ("host", "exportFolder")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "host"))) { #optional property not found
            $VarHost = $null
        } else {
            $VarHost = $JsonParameters.PSobject.Properties["host"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "exportFolder"))) { #optional property not found
            $ExportFolder = $null
        } else {
            $ExportFolder = $JsonParameters.PSobject.Properties["exportFolder"].value
        }

        $PSO = [PSCustomObject]@{
            "host" = ${VarHost}
            "exportFolder" = ${ExportFolder}
        }

        return $PSO
    }

}

