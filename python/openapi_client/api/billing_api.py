"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.  # noqa: E501

    The version of the OpenAPI document: 6.2.1
    Contact: dev@morpheusdata.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from openapi_client.api_client import ApiClient, Endpoint as _Endpoint
from openapi_client.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from openapi_client.model.default_error import DefaultError
from openapi_client.model.get_billing_instances_identifier200_response import GetBillingInstancesIdentifier200Response
from openapi_client.model.get_billing_servers_identifier200_response import GetBillingServersIdentifier200Response
from openapi_client.model.get_billing_zone_identifier200_response import GetBillingZoneIdentifier200Response
from openapi_client.model.list_billing_account200_response import ListBillingAccount200Response
from openapi_client.model.list_billing_instances200_response import ListBillingInstances200Response
from openapi_client.model.list_billing_servers200_response import ListBillingServers200Response
from openapi_client.model.list_billing_zone200_response import ListBillingZone200Response


class BillingApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.get_billing_account_endpoint = _Endpoint(
            settings={
                'response_type': (ListBillingAccount200Response,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/api/billing/account/{id}',
                'operation_id': 'get_billing_account',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'start_date',
                    'end_date',
                    'include_usages',
                    'max_usages',
                    'offset_usages',
                    'include_compute_servers',
                    'include_instances',
                    'include_discovered_servers',
                    'include_load_balancers',
                    'include_virtual_images',
                    'include_snapshots',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (int,),
                    'start_date':
                        (str,),
                    'end_date':
                        (str,),
                    'include_usages':
                        (bool,),
                    'max_usages':
                        (int,),
                    'offset_usages':
                        (int,),
                    'include_compute_servers':
                        (bool,),
                    'include_instances':
                        (bool,),
                    'include_discovered_servers':
                        (bool,),
                    'include_load_balancers':
                        (bool,),
                    'include_virtual_images':
                        (bool,),
                    'include_snapshots':
                        (bool,),
                },
                'attribute_map': {
                    'id': 'id',
                    'start_date': 'startDate',
                    'end_date': 'endDate',
                    'include_usages': 'includeUsages',
                    'max_usages': 'maxUsages',
                    'offset_usages': 'offsetUsages',
                    'include_compute_servers': 'includeComputeServers',
                    'include_instances': 'includeInstances',
                    'include_discovered_servers': 'includeDiscoveredServers',
                    'include_load_balancers': 'includeLoadBalancers',
                    'include_virtual_images': 'includeVirtualImages',
                    'include_snapshots': 'includeSnapshots',
                },
                'location_map': {
                    'id': 'path',
                    'start_date': 'query',
                    'end_date': 'query',
                    'include_usages': 'query',
                    'max_usages': 'query',
                    'offset_usages': 'query',
                    'include_compute_servers': 'query',
                    'include_instances': 'query',
                    'include_discovered_servers': 'query',
                    'include_load_balancers': 'query',
                    'include_virtual_images': 'query',
                    'include_snapshots': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_billing_instances_identifier_endpoint = _Endpoint(
            settings={
                'response_type': (GetBillingInstancesIdentifier200Response,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/api/billing/instances/{identifier}',
                'operation_id': 'get_billing_instances_identifier',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'start_date',
                    'end_date',
                    'include_usages',
                    'max_usages',
                    'offset_usages',
                    'include_tenants',
                    'account_id',
                ],
                'required': [
                    'identifier',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'start_date':
                        (str,),
                    'end_date':
                        (str,),
                    'include_usages':
                        (bool,),
                    'max_usages':
                        (int,),
                    'offset_usages':
                        (int,),
                    'include_tenants':
                        (bool,),
                    'account_id':
                        (int,),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'start_date': 'startDate',
                    'end_date': 'endDate',
                    'include_usages': 'includeUsages',
                    'max_usages': 'maxUsages',
                    'offset_usages': 'offsetUsages',
                    'include_tenants': 'includeTenants',
                    'account_id': 'accountId',
                },
                'location_map': {
                    'identifier': 'path',
                    'start_date': 'query',
                    'end_date': 'query',
                    'include_usages': 'query',
                    'max_usages': 'query',
                    'offset_usages': 'query',
                    'include_tenants': 'query',
                    'account_id': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_billing_servers_identifier_endpoint = _Endpoint(
            settings={
                'response_type': (GetBillingServersIdentifier200Response,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/api/billing/servers/{identifier}',
                'operation_id': 'get_billing_servers_identifier',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'start_date',
                    'end_date',
                    'include_usages',
                    'max_usages',
                    'offset_usages',
                    'include_tenants',
                    'account_id',
                ],
                'required': [
                    'identifier',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'start_date':
                        (str,),
                    'end_date':
                        (str,),
                    'include_usages':
                        (bool,),
                    'max_usages':
                        (int,),
                    'offset_usages':
                        (int,),
                    'include_tenants':
                        (bool,),
                    'account_id':
                        (int,),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'start_date': 'startDate',
                    'end_date': 'endDate',
                    'include_usages': 'includeUsages',
                    'max_usages': 'maxUsages',
                    'offset_usages': 'offsetUsages',
                    'include_tenants': 'includeTenants',
                    'account_id': 'accountId',
                },
                'location_map': {
                    'identifier': 'path',
                    'start_date': 'query',
                    'end_date': 'query',
                    'include_usages': 'query',
                    'max_usages': 'query',
                    'offset_usages': 'query',
                    'include_tenants': 'query',
                    'account_id': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_billing_zone_identifier_endpoint = _Endpoint(
            settings={
                'response_type': (GetBillingZoneIdentifier200Response,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/api/billing/zones/{identifier}',
                'operation_id': 'get_billing_zone_identifier',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'identifier',
                    'start_date',
                    'end_date',
                    'include_usages',
                    'max_usages',
                    'offset_usages',
                    'include_compute_servers',
                    'include_instances',
                    'include_discovered_servers',
                    'include_load_balancers',
                    'include_virtual_images',
                    'include_snapshots',
                ],
                'required': [
                    'identifier',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'identifier':
                        (str,),
                    'start_date':
                        (str,),
                    'end_date':
                        (str,),
                    'include_usages':
                        (bool,),
                    'max_usages':
                        (int,),
                    'offset_usages':
                        (int,),
                    'include_compute_servers':
                        (bool,),
                    'include_instances':
                        (bool,),
                    'include_discovered_servers':
                        (bool,),
                    'include_load_balancers':
                        (bool,),
                    'include_virtual_images':
                        (bool,),
                    'include_snapshots':
                        (bool,),
                },
                'attribute_map': {
                    'identifier': 'identifier',
                    'start_date': 'startDate',
                    'end_date': 'endDate',
                    'include_usages': 'includeUsages',
                    'max_usages': 'maxUsages',
                    'offset_usages': 'offsetUsages',
                    'include_compute_servers': 'includeComputeServers',
                    'include_instances': 'includeInstances',
                    'include_discovered_servers': 'includeDiscoveredServers',
                    'include_load_balancers': 'includeLoadBalancers',
                    'include_virtual_images': 'includeVirtualImages',
                    'include_snapshots': 'includeSnapshots',
                },
                'location_map': {
                    'identifier': 'path',
                    'start_date': 'query',
                    'end_date': 'query',
                    'include_usages': 'query',
                    'max_usages': 'query',
                    'offset_usages': 'query',
                    'include_compute_servers': 'query',
                    'include_instances': 'query',
                    'include_discovered_servers': 'query',
                    'include_load_balancers': 'query',
                    'include_virtual_images': 'query',
                    'include_snapshots': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.list_billing_account_endpoint = _Endpoint(
            settings={
                'response_type': (ListBillingAccount200Response,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/api/billing/account',
                'operation_id': 'list_billing_account',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'start_date',
                    'end_date',
                    'include_usages',
                    'max_usages',
                    'offset_usages',
                    'include_compute_servers',
                    'include_instances',
                    'include_discovered_servers',
                    'include_load_balancers',
                    'include_virtual_images',
                    'include_snapshots',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'start_date':
                        (str,),
                    'end_date':
                        (str,),
                    'include_usages':
                        (bool,),
                    'max_usages':
                        (int,),
                    'offset_usages':
                        (int,),
                    'include_compute_servers':
                        (bool,),
                    'include_instances':
                        (bool,),
                    'include_discovered_servers':
                        (bool,),
                    'include_load_balancers':
                        (bool,),
                    'include_virtual_images':
                        (bool,),
                    'include_snapshots':
                        (bool,),
                },
                'attribute_map': {
                    'start_date': 'startDate',
                    'end_date': 'endDate',
                    'include_usages': 'includeUsages',
                    'max_usages': 'maxUsages',
                    'offset_usages': 'offsetUsages',
                    'include_compute_servers': 'includeComputeServers',
                    'include_instances': 'includeInstances',
                    'include_discovered_servers': 'includeDiscoveredServers',
                    'include_load_balancers': 'includeLoadBalancers',
                    'include_virtual_images': 'includeVirtualImages',
                    'include_snapshots': 'includeSnapshots',
                },
                'location_map': {
                    'start_date': 'query',
                    'end_date': 'query',
                    'include_usages': 'query',
                    'max_usages': 'query',
                    'offset_usages': 'query',
                    'include_compute_servers': 'query',
                    'include_instances': 'query',
                    'include_discovered_servers': 'query',
                    'include_load_balancers': 'query',
                    'include_virtual_images': 'query',
                    'include_snapshots': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.list_billing_instances_endpoint = _Endpoint(
            settings={
                'response_type': (ListBillingInstances200Response,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/api/billing/instances',
                'operation_id': 'list_billing_instances',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'start_date',
                    'end_date',
                    'include_usages',
                    'max_usages',
                    'offset_usages',
                    'include_tenants',
                    'account_id',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'start_date':
                        (str,),
                    'end_date':
                        (str,),
                    'include_usages':
                        (bool,),
                    'max_usages':
                        (int,),
                    'offset_usages':
                        (int,),
                    'include_tenants':
                        (bool,),
                    'account_id':
                        (int,),
                },
                'attribute_map': {
                    'start_date': 'startDate',
                    'end_date': 'endDate',
                    'include_usages': 'includeUsages',
                    'max_usages': 'maxUsages',
                    'offset_usages': 'offsetUsages',
                    'include_tenants': 'includeTenants',
                    'account_id': 'accountId',
                },
                'location_map': {
                    'start_date': 'query',
                    'end_date': 'query',
                    'include_usages': 'query',
                    'max_usages': 'query',
                    'offset_usages': 'query',
                    'include_tenants': 'query',
                    'account_id': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.list_billing_servers_endpoint = _Endpoint(
            settings={
                'response_type': (ListBillingServers200Response,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/api/billing/servers',
                'operation_id': 'list_billing_servers',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'start_date',
                    'end_date',
                    'include_usages',
                    'max_usages',
                    'offset_usages',
                    'include_tenants',
                    'account_id',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'start_date':
                        (str,),
                    'end_date':
                        (str,),
                    'include_usages':
                        (bool,),
                    'max_usages':
                        (int,),
                    'offset_usages':
                        (int,),
                    'include_tenants':
                        (bool,),
                    'account_id':
                        (int,),
                },
                'attribute_map': {
                    'start_date': 'startDate',
                    'end_date': 'endDate',
                    'include_usages': 'includeUsages',
                    'max_usages': 'maxUsages',
                    'offset_usages': 'offsetUsages',
                    'include_tenants': 'includeTenants',
                    'account_id': 'accountId',
                },
                'location_map': {
                    'start_date': 'query',
                    'end_date': 'query',
                    'include_usages': 'query',
                    'max_usages': 'query',
                    'offset_usages': 'query',
                    'include_tenants': 'query',
                    'account_id': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.list_billing_zone_endpoint = _Endpoint(
            settings={
                'response_type': (ListBillingZone200Response,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/api/billing/zones',
                'operation_id': 'list_billing_zone',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'start_date',
                    'end_date',
                    'include_usages',
                    'max_usages',
                    'offset_usages',
                    'include_compute_servers',
                    'include_instances',
                    'include_discovered_servers',
                    'include_load_balancers',
                    'include_virtual_images',
                    'include_snapshots',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'start_date':
                        (str,),
                    'end_date':
                        (str,),
                    'include_usages':
                        (bool,),
                    'max_usages':
                        (int,),
                    'offset_usages':
                        (int,),
                    'include_compute_servers':
                        (bool,),
                    'include_instances':
                        (bool,),
                    'include_discovered_servers':
                        (bool,),
                    'include_load_balancers':
                        (bool,),
                    'include_virtual_images':
                        (bool,),
                    'include_snapshots':
                        (bool,),
                },
                'attribute_map': {
                    'start_date': 'startDate',
                    'end_date': 'endDate',
                    'include_usages': 'includeUsages',
                    'max_usages': 'maxUsages',
                    'offset_usages': 'offsetUsages',
                    'include_compute_servers': 'includeComputeServers',
                    'include_instances': 'includeInstances',
                    'include_discovered_servers': 'includeDiscoveredServers',
                    'include_load_balancers': 'includeLoadBalancers',
                    'include_virtual_images': 'includeVirtualImages',
                    'include_snapshots': 'includeSnapshots',
                },
                'location_map': {
                    'start_date': 'query',
                    'end_date': 'query',
                    'include_usages': 'query',
                    'max_usages': 'query',
                    'offset_usages': 'query',
                    'include_compute_servers': 'query',
                    'include_instances': 'query',
                    'include_discovered_servers': 'query',
                    'include_load_balancers': 'query',
                    'include_virtual_images': 'query',
                    'include_snapshots': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

    def get_billing_account(
        self,
        id,
        **kwargs
    ):
        """This endpoint will retrieve a specific account by id if the user has permission to access it  # noqa: E501

        Will retrieve billing information for a specific tenant, if it is the current account or a sub account of the requesting user's account.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_billing_account(id, async_req=True)
        >>> result = thread.get()

        Args:
            id (int): Morpheus ID of the Object being referenced

        Keyword Args:
            start_date (str): Filter by startDate greater than or equal to a specified date. [optional]
            end_date (str): Filter by endDate less than or equal to a specified date. [optional]
            include_usages (bool): Optional ability to suppress the usage records. [optional] if omitted the server will use the default value of True
            max_usages (int): Optional ability to limit the usages returned. [optional]
            offset_usages (int): Optional ability to offset the usages returned, for use with maxUsages to paginate. [optional]
            include_compute_servers (bool): Optional ability to exclude compute servers. [optional] if omitted the server will use the default value of True
            include_instances (bool): Optional ability to exclude instances. [optional] if omitted the server will use the default value of True
            include_discovered_servers (bool): Optional ability to exclude discovered servers. [optional] if omitted the server will use the default value of True
            include_load_balancers (bool): Optional ability to exclude load balancers. [optional] if omitted the server will use the default value of True
            include_virtual_images (bool): Optional ability to exclude virtual images. [optional] if omitted the server will use the default value of True
            include_snapshots (bool): Optional ability to exclude snapshots. [optional] if omitted the server will use the default value of True
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ListBillingAccount200Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['id'] = \
            id
        return self.get_billing_account_endpoint.call_with_http_info(**kwargs)

    def get_billing_instances_identifier(
        self,
        identifier,
        **kwargs
    ):
        """Retrieves billing information for an instance in the requestor's account. Use instanceUUID whenever possible.  # noqa: E501

        Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_billing_instances_identifier(identifier, async_req=True)
        >>> result = thread.get()

        Args:
            identifier (str): Morpheus UUID or ID of the Object being created or referenced

        Keyword Args:
            start_date (str): Filter by startDate greater than or equal to a specified date. [optional]
            end_date (str): Filter by endDate less than or equal to a specified date. [optional]
            include_usages (bool): Optional ability to suppress the usage records. [optional] if omitted the server will use the default value of True
            max_usages (int): Optional ability to limit the usages returned. [optional]
            offset_usages (int): Optional ability to offset the usages returned, for use with maxUsages to paginate. [optional]
            include_tenants (bool): Optional ability to include all subtenant billing information when calling from a master tenant user. [optional] if omitted the server will use the default value of False
            account_id (int): Filter by Tenant ID. This is only available to master tenant users with permission to manage tenants and users.. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            GetBillingInstancesIdentifier200Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['identifier'] = \
            identifier
        return self.get_billing_instances_identifier_endpoint.call_with_http_info(**kwargs)

    def get_billing_servers_identifier(
        self,
        identifier,
        **kwargs
    ):
        """Retrieves billing information for a specific server (container host) in the requestor's account. Use refUUID whenever possible.  # noqa: E501

        Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_billing_servers_identifier(identifier, async_req=True)
        >>> result = thread.get()

        Args:
            identifier (str): Morpheus UUID or ID of the Object being created or referenced

        Keyword Args:
            start_date (str): Filter by startDate greater than or equal to a specified date. [optional]
            end_date (str): Filter by endDate less than or equal to a specified date. [optional]
            include_usages (bool): Optional ability to suppress the usage records. [optional] if omitted the server will use the default value of True
            max_usages (int): Optional ability to limit the usages returned. [optional]
            offset_usages (int): Optional ability to offset the usages returned, for use with maxUsages to paginate. [optional]
            include_tenants (bool): Optional ability to include all subtenant billing information when calling from a master tenant user. [optional] if omitted the server will use the default value of False
            account_id (int): Filter by Tenant ID. This is only available to master tenant users with permission to manage tenants and users.. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            GetBillingServersIdentifier200Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['identifier'] = \
            identifier
        return self.get_billing_servers_identifier_endpoint.call_with_http_info(**kwargs)

    def get_billing_zone_identifier(
        self,
        identifier,
        **kwargs
    ):
        """Retrieves billing information for a specific zone in the requestor's account. Use zoneUUID whenever possible.  # noqa: E501

        Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_billing_zone_identifier(identifier, async_req=True)
        >>> result = thread.get()

        Args:
            identifier (str): Morpheus UUID or ID of the Object being created or referenced

        Keyword Args:
            start_date (str): Filter by startDate greater than or equal to a specified date. [optional]
            end_date (str): Filter by endDate less than or equal to a specified date. [optional]
            include_usages (bool): Optional ability to suppress the usage records. [optional] if omitted the server will use the default value of True
            max_usages (int): Optional ability to limit the usages returned. [optional]
            offset_usages (int): Optional ability to offset the usages returned, for use with maxUsages to paginate. [optional]
            include_compute_servers (bool): Optional ability to exclude compute servers. [optional] if omitted the server will use the default value of True
            include_instances (bool): Optional ability to exclude instances. [optional] if omitted the server will use the default value of True
            include_discovered_servers (bool): Optional ability to exclude discovered servers. [optional] if omitted the server will use the default value of True
            include_load_balancers (bool): Optional ability to exclude load balancers. [optional] if omitted the server will use the default value of True
            include_virtual_images (bool): Optional ability to exclude virtual images. [optional] if omitted the server will use the default value of True
            include_snapshots (bool): Optional ability to exclude snapshots. [optional] if omitted the server will use the default value of True
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            GetBillingZoneIdentifier200Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['identifier'] = \
            identifier
        return self.get_billing_zone_identifier_endpoint.call_with_http_info(**kwargs)

    def list_billing_account(
        self,
        **kwargs
    ):
        """Retrieves billing information for the requesting user's account.  # noqa: E501

        Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.list_billing_account(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            start_date (str): Filter by startDate greater than or equal to a specified date. [optional]
            end_date (str): Filter by endDate less than or equal to a specified date. [optional]
            include_usages (bool): Optional ability to suppress the usage records. [optional] if omitted the server will use the default value of True
            max_usages (int): Optional ability to limit the usages returned. [optional]
            offset_usages (int): Optional ability to offset the usages returned, for use with maxUsages to paginate. [optional]
            include_compute_servers (bool): Optional ability to exclude compute servers. [optional] if omitted the server will use the default value of True
            include_instances (bool): Optional ability to exclude instances. [optional] if omitted the server will use the default value of True
            include_discovered_servers (bool): Optional ability to exclude discovered servers. [optional] if omitted the server will use the default value of True
            include_load_balancers (bool): Optional ability to exclude load balancers. [optional] if omitted the server will use the default value of True
            include_virtual_images (bool): Optional ability to exclude virtual images. [optional] if omitted the server will use the default value of True
            include_snapshots (bool): Optional ability to exclude snapshots. [optional] if omitted the server will use the default value of True
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ListBillingAccount200Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.list_billing_account_endpoint.call_with_http_info(**kwargs)

    def list_billing_instances(
        self,
        **kwargs
    ):
        """Retrieves billing information for all instances on the requestor's account.  # noqa: E501

        Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.list_billing_instances(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            start_date (str): Filter by startDate greater than or equal to a specified date. [optional]
            end_date (str): Filter by endDate less than or equal to a specified date. [optional]
            include_usages (bool): Optional ability to suppress the usage records. [optional] if omitted the server will use the default value of True
            max_usages (int): Optional ability to limit the usages returned. [optional]
            offset_usages (int): Optional ability to offset the usages returned, for use with maxUsages to paginate. [optional]
            include_tenants (bool): Optional ability to include all subtenant billing information when calling from a master tenant user. [optional] if omitted the server will use the default value of False
            account_id (int): Filter by Tenant ID. This is only available to master tenant users with permission to manage tenants and users.. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ListBillingInstances200Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.list_billing_instances_endpoint.call_with_http_info(**kwargs)

    def list_billing_servers(
        self,
        **kwargs
    ):
        """Retrieves billing information for all servers (container hosts) on the requestor's account.  # noqa: E501

        Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.list_billing_servers(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            start_date (str): Filter by startDate greater than or equal to a specified date. [optional]
            end_date (str): Filter by endDate less than or equal to a specified date. [optional]
            include_usages (bool): Optional ability to suppress the usage records. [optional] if omitted the server will use the default value of True
            max_usages (int): Optional ability to limit the usages returned. [optional]
            offset_usages (int): Optional ability to offset the usages returned, for use with maxUsages to paginate. [optional]
            include_tenants (bool): Optional ability to include all subtenant billing information when calling from a master tenant user. [optional] if omitted the server will use the default value of False
            account_id (int): Filter by Tenant ID. This is only available to master tenant users with permission to manage tenants and users.. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ListBillingServers200Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.list_billing_servers_endpoint.call_with_http_info(**kwargs)

    def list_billing_zone(
        self,
        **kwargs
    ):
        """Retrieves billing information for all zones on the requestor's account.  # noqa: E501

        Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.list_billing_zone(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            start_date (str): Filter by startDate greater than or equal to a specified date. [optional]
            end_date (str): Filter by endDate less than or equal to a specified date. [optional]
            include_usages (bool): Optional ability to suppress the usage records. [optional] if omitted the server will use the default value of True
            max_usages (int): Optional ability to limit the usages returned. [optional]
            offset_usages (int): Optional ability to offset the usages returned, for use with maxUsages to paginate. [optional]
            include_compute_servers (bool): Optional ability to exclude compute servers. [optional] if omitted the server will use the default value of True
            include_instances (bool): Optional ability to exclude instances. [optional] if omitted the server will use the default value of True
            include_discovered_servers (bool): Optional ability to exclude discovered servers. [optional] if omitted the server will use the default value of True
            include_load_balancers (bool): Optional ability to exclude load balancers. [optional] if omitted the server will use the default value of True
            include_virtual_images (bool): Optional ability to exclude virtual images. [optional] if omitted the server will use the default value of True
            include_snapshots (bool): Optional ability to exclude snapshots. [optional] if omitted the server will use the default value of True
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ListBillingZone200Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.list_billing_zone_endpoint.call_with_http_info(**kwargs)

