"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.  # noqa: E501

    The version of the OpenAPI document: 6.2.1
    Contact: dev@morpheusdata.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from openapi_client.api_client import ApiClient, Endpoint as _Endpoint
from openapi_client.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from openapi_client.model.default_error import DefaultError
from openapi_client.model.get_invoice_line_items200_response import GetInvoiceLineItems200Response
from openapi_client.model.get_invoices200_response import GetInvoices200Response
from openapi_client.model.list_invoice_line_items200_response import ListInvoiceLineItems200Response
from openapi_client.model.list_invoices200_response import ListInvoices200Response
from openapi_client.model.update_invoices200_response import UpdateInvoices200Response
from openapi_client.model.update_invoices_request import UpdateInvoicesRequest


class InvoicesApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.get_invoice_line_items_endpoint = _Endpoint(
            settings={
                'response_type': (GetInvoiceLineItems200Response,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/api/invoice-line-items/{id}',
                'operation_id': 'get_invoice_line_items',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (int,),
                },
                'attribute_map': {
                    'id': 'id',
                },
                'location_map': {
                    'id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.get_invoices_endpoint = _Endpoint(
            settings={
                'response_type': (GetInvoices200Response,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/api/invoices/{id}',
                'operation_id': 'get_invoices',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (int,),
                },
                'attribute_map': {
                    'id': 'id',
                },
                'location_map': {
                    'id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.list_invoice_line_items_endpoint = _Endpoint(
            settings={
                'response_type': (ListInvoiceLineItems200Response,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/api/invoice-line-items',
                'operation_id': 'list_invoice_line_items',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'max',
                    'offset',
                    'sort',
                    'direction',
                    'phrase',
                    'name',
                    'start_date',
                    'end_date',
                    'period',
                    'ref_type',
                    'ref_id',
                    'zone_id',
                    'site_id',
                    'instance_id',
                    'container_id',
                    'server_id',
                    'user_id',
                    'project_id',
                    'active',
                    'account_id',
                    'include_totals',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                    'direction',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('direction',): {

                        "ASC": "asc",
                        "DESC": "desc"
                    },
                },
                'openapi_types': {
                    'max':
                        (int,),
                    'offset':
                        (int,),
                    'sort':
                        (str,),
                    'direction':
                        (str,),
                    'phrase':
                        (str,),
                    'name':
                        (str,),
                    'start_date':
                        (str,),
                    'end_date':
                        (str,),
                    'period':
                        (str,),
                    'ref_type':
                        (str,),
                    'ref_id':
                        (int,),
                    'zone_id':
                        (int,),
                    'site_id':
                        (int,),
                    'instance_id':
                        (int,),
                    'container_id':
                        (int,),
                    'server_id':
                        (int,),
                    'user_id':
                        (int,),
                    'project_id':
                        (int,),
                    'active':
                        (bool,),
                    'account_id':
                        (int,),
                    'include_totals':
                        (bool,),
                },
                'attribute_map': {
                    'max': 'max',
                    'offset': 'offset',
                    'sort': 'sort',
                    'direction': 'direction',
                    'phrase': 'phrase',
                    'name': 'name',
                    'start_date': 'startDate',
                    'end_date': 'endDate',
                    'period': 'period',
                    'ref_type': 'refType',
                    'ref_id': 'refId',
                    'zone_id': 'zoneId',
                    'site_id': 'siteId',
                    'instance_id': 'instanceId',
                    'container_id': 'containerId',
                    'server_id': 'serverId',
                    'user_id': 'userId',
                    'project_id': 'projectId',
                    'active': 'active',
                    'account_id': 'accountId',
                    'include_totals': 'includeTotals',
                },
                'location_map': {
                    'max': 'query',
                    'offset': 'query',
                    'sort': 'query',
                    'direction': 'query',
                    'phrase': 'query',
                    'name': 'query',
                    'start_date': 'query',
                    'end_date': 'query',
                    'period': 'query',
                    'ref_type': 'query',
                    'ref_id': 'query',
                    'zone_id': 'query',
                    'site_id': 'query',
                    'instance_id': 'query',
                    'container_id': 'query',
                    'server_id': 'query',
                    'user_id': 'query',
                    'project_id': 'query',
                    'active': 'query',
                    'account_id': 'query',
                    'include_totals': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.list_invoices_endpoint = _Endpoint(
            settings={
                'response_type': (ListInvoices200Response,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/api/invoices',
                'operation_id': 'list_invoices',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'max',
                    'offset',
                    'sort',
                    'direction',
                    'phrase',
                    'name',
                    'start_date',
                    'end_date',
                    'period',
                    'ref_type',
                    'ref_id',
                    'ref_status',
                    'zone_id',
                    'site_id',
                    'instance_id',
                    'container_id',
                    'server_id',
                    'user_id',
                    'project_id',
                    'active',
                    'account_id',
                    'include_line_items',
                    'include_totals',
                    'tags',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                    'direction',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('direction',): {

                        "ASC": "asc",
                        "DESC": "desc"
                    },
                },
                'openapi_types': {
                    'max':
                        (int,),
                    'offset':
                        (int,),
                    'sort':
                        (str,),
                    'direction':
                        (str,),
                    'phrase':
                        (str,),
                    'name':
                        (str,),
                    'start_date':
                        (str,),
                    'end_date':
                        (str,),
                    'period':
                        (str,),
                    'ref_type':
                        (str,),
                    'ref_id':
                        (int,),
                    'ref_status':
                        (str,),
                    'zone_id':
                        (int,),
                    'site_id':
                        (int,),
                    'instance_id':
                        (int,),
                    'container_id':
                        (int,),
                    'server_id':
                        (int,),
                    'user_id':
                        (int,),
                    'project_id':
                        (int,),
                    'active':
                        (bool,),
                    'account_id':
                        (int,),
                    'include_line_items':
                        (bool,),
                    'include_totals':
                        (bool,),
                    'tags':
                        (str,),
                },
                'attribute_map': {
                    'max': 'max',
                    'offset': 'offset',
                    'sort': 'sort',
                    'direction': 'direction',
                    'phrase': 'phrase',
                    'name': 'name',
                    'start_date': 'startDate',
                    'end_date': 'endDate',
                    'period': 'period',
                    'ref_type': 'refType',
                    'ref_id': 'refId',
                    'ref_status': 'refStatus',
                    'zone_id': 'zoneId',
                    'site_id': 'siteId',
                    'instance_id': 'instanceId',
                    'container_id': 'containerId',
                    'server_id': 'serverId',
                    'user_id': 'userId',
                    'project_id': 'projectId',
                    'active': 'active',
                    'account_id': 'accountId',
                    'include_line_items': 'includeLineItems',
                    'include_totals': 'includeTotals',
                    'tags': 'tags',
                },
                'location_map': {
                    'max': 'query',
                    'offset': 'query',
                    'sort': 'query',
                    'direction': 'query',
                    'phrase': 'query',
                    'name': 'query',
                    'start_date': 'query',
                    'end_date': 'query',
                    'period': 'query',
                    'ref_type': 'query',
                    'ref_id': 'query',
                    'ref_status': 'query',
                    'zone_id': 'query',
                    'site_id': 'query',
                    'instance_id': 'query',
                    'container_id': 'query',
                    'server_id': 'query',
                    'user_id': 'query',
                    'project_id': 'query',
                    'active': 'query',
                    'account_id': 'query',
                    'include_line_items': 'query',
                    'include_totals': 'query',
                    'tags': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.update_invoices_endpoint = _Endpoint(
            settings={
                'response_type': (UpdateInvoices200Response,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/api/invoices/{id}',
                'operation_id': 'update_invoices',
                'http_method': 'PUT',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'update_invoices_request',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (int,),
                    'update_invoices_request':
                        (UpdateInvoicesRequest,),
                },
                'attribute_map': {
                    'id': 'id',
                },
                'location_map': {
                    'id': 'path',
                    'update_invoices_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    def get_invoice_line_items(
        self,
        id,
        **kwargs
    ):
        """Get a Specific Invoice Line Item  # noqa: E501

        Get details about a specific invoice line item.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_invoice_line_items(id, async_req=True)
        >>> result = thread.get()

        Args:
            id (int): Morpheus ID of the Object being referenced

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            GetInvoiceLineItems200Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['id'] = \
            id
        return self.get_invoice_line_items_endpoint.call_with_http_info(**kwargs)

    def get_invoices(
        self,
        id,
        **kwargs
    ):
        """Get a Specific Invoice  # noqa: E501

        Get details about a specific invoice.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_invoices(id, async_req=True)
        >>> result = thread.get()

        Args:
            id (int): Morpheus ID of the Object being referenced

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            GetInvoices200Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['id'] = \
            id
        return self.get_invoices_endpoint.call_with_http_info(**kwargs)

    def list_invoice_line_items(
        self,
        **kwargs
    ):
        """List All Invoice Line Items  # noqa: E501

        This endpoint retrieves a list of all invoice line items for the specified parameters.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.list_invoice_line_items(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            max (int): Maximum number of records to return, -1 can be used to fetch all records. [optional] if omitted the server will use the default value of 25
            offset (int): Offset records, the number of records to skip, for paginating requests. [optional] if omitted the server will use the default value of 0
            sort (str): Sort order, the name of the property to sort by. [optional] if omitted the server will use the default value of "name"
            direction (str): Sort direction, use 'desc' to reverse sort. [optional] if omitted the server will use the default value of "asc"
            phrase (str): Search phrase for partial matches on name or description. [optional]
            name (str): Filter by name, wildcard may be specified as %, eg. example-%. [optional]
            start_date (str): Filter by startDate greater than or equal to a specified date. [optional]
            end_date (str): Filter by endDate less than or equal to a specified date. [optional]
            period (str): Only return records for period that matches with the specified value. This is an alternative to using startDate/endDate. Format is YYYY or YYYYMM. . [optional]
            ref_type (str): If specified will return an exact match on refType. . [optional]
            ref_id (int): If specified will return an exact match on refId. [optional]
            zone_id (int): The Zone ID for Filtering. [optional]
            site_id (int): The Site ID for Filtering. [optional]
            instance_id (int): The Instance ID for Filtering. [optional]
            container_id (int): The Container ID for Filtering. [optional]
            server_id (int): The Server ID for Filtering. [optional]
            user_id (int): Filter by User ID. [optional]
            project_id (int): The Project ID for Filtering. [optional]
            active (bool): True or False flag for Active. [optional]
            account_id (int): Filter by Tenant ID. This is only available to master tenant users with permission to manage tenants and users.. [optional]
            include_totals (bool): Pass true to include the summed totals (cost/price values) for all the invoices found in the query. The returned property is called `invoiceTotals`. . [optional] if omitted the server will use the default value of False
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ListInvoiceLineItems200Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.list_invoice_line_items_endpoint.call_with_http_info(**kwargs)

    def list_invoices(
        self,
        **kwargs
    ):
        """List All Invoices  # noqa: E501

        This endpoint retrieves a list of invoices for the specified parameters.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.list_invoices(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            max (int): Maximum number of records to return, -1 can be used to fetch all records. [optional] if omitted the server will use the default value of 25
            offset (int): Offset records, the number of records to skip, for paginating requests. [optional] if omitted the server will use the default value of 0
            sort (str): Sort order, the name of the property to sort by. [optional] if omitted the server will use the default value of "refName"
            direction (str): Sort direction, use 'desc' to reverse sort. [optional] if omitted the server will use the default value of "asc"
            phrase (str): Search phrase for partial matches on name or description. [optional]
            name (str): Filter by name, wildcard may be specified as %, eg. example-%. [optional]
            start_date (str): Filter by startDate greater than or equal to a specified date. [optional]
            end_date (str): Filter by endDate less than or equal to a specified date. [optional]
            period (str): Only return records for period that matches with the specified value. This is an alternative to using startDate/endDate. Format is YYYY or YYYYMM. . [optional]
            ref_type (str): If specified will return an exact match on refType. . [optional]
            ref_id (int): If specified will return an exact match on refId. [optional]
            ref_status (str): If specified, will filter on the associated StorageVolume status. This is only applicable whn `refType=StorageVolume`. . [optional]
            zone_id (int): The Zone ID for Filtering. [optional]
            site_id (int): The Site ID for Filtering. [optional]
            instance_id (int): The Instance ID for Filtering. [optional]
            container_id (int): The Container ID for Filtering. [optional]
            server_id (int): The Server ID for Filtering. [optional]
            user_id (int): Filter by User ID. [optional]
            project_id (int): The Project ID for Filtering. [optional]
            active (bool): True or False flag for Active. [optional]
            account_id (int): Filter by Tenant ID. This is only available to master tenant users with permission to manage tenants and users.. [optional]
            include_line_items (bool): Pass true to include the list of `lineItems` for each invoice. Only `lineItemCount` is returned by default. . [optional] if omitted the server will use the default value of False
            include_totals (bool): Pass true to include the summed totals (cost/price values) for all the invoices found in the query. The returned property is called `invoiceTotals`. . [optional] if omitted the server will use the default value of False
            tags (str): Filter by tags (metadata). This allows filtering by a tag name and value(s) . [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            ListInvoices200Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.list_invoices_endpoint.call_with_http_info(**kwargs)

    def update_invoices(
        self,
        id,
        **kwargs
    ):
        """Update Invoice Tags  # noqa: E501

        Update, Add, or Remove invoice tag(s).  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.update_invoices(id, async_req=True)
        >>> result = thread.get()

        Args:
            id (int): Morpheus ID of the Object being referenced

        Keyword Args:
            update_invoices_request (UpdateInvoicesRequest): [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            UpdateInvoices200Response
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['id'] = \
            id
        return self.update_invoices_endpoint.call_with_http_info(**kwargs)

