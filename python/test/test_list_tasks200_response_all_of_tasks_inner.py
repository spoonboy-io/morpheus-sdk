"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.  # noqa: E501

    The version of the OpenAPI document: 6.2.1
    Contact: dev@morpheusdata.com
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import openapi_client
from openapi_client.model.task_ansible_playbook_config import TaskAnsiblePlaybookConfig
from openapi_client.model.task_ansible_playbook_config_file import TaskAnsiblePlaybookConfigFile
from openapi_client.model.task_ansible_tower_config import TaskAnsibleTowerConfig
from openapi_client.model.task_chef_bootstrap_config import TaskChefBootstrapConfig
from openapi_client.model.task_email_config import TaskEmailConfig
from openapi_client.model.task_groovy_config import TaskGroovyConfig
from openapi_client.model.task_http_config import TaskHttpConfig
from openapi_client.model.task_java_config import TaskJavaConfig
from openapi_client.model.task_jruby_config import TaskJrubyConfig
from openapi_client.model.task_library_script_config import TaskLibraryScriptConfig
from openapi_client.model.task_library_template_config import TaskLibraryTemplateConfig
from openapi_client.model.task_nested_workflow_config import TaskNestedWorkflowConfig
from openapi_client.model.task_powershell_config import TaskPowershellConfig
from openapi_client.model.task_puppet_config import TaskPuppetConfig
from openapi_client.model.task_python_config import TaskPythonConfig
from openapi_client.model.task_restart_config import TaskRestartConfig
from openapi_client.model.task_shell_config import TaskShellConfig
from openapi_client.model.task_vro_config import TaskVroConfig
from openapi_client.model.task_write_attributes_config import TaskWriteAttributesConfig
from openapi_client.model.task_write_attributes_config_task_options import TaskWriteAttributesConfigTaskOptions
from openapi_client.model.task_write_attributes_config_task_type import TaskWriteAttributesConfigTaskType
from openapi_client.model.zone_credential_any_of import ZoneCredentialAnyOf
globals()['TaskAnsiblePlaybookConfig'] = TaskAnsiblePlaybookConfig
globals()['TaskAnsiblePlaybookConfigFile'] = TaskAnsiblePlaybookConfigFile
globals()['TaskAnsibleTowerConfig'] = TaskAnsibleTowerConfig
globals()['TaskChefBootstrapConfig'] = TaskChefBootstrapConfig
globals()['TaskEmailConfig'] = TaskEmailConfig
globals()['TaskGroovyConfig'] = TaskGroovyConfig
globals()['TaskHttpConfig'] = TaskHttpConfig
globals()['TaskJavaConfig'] = TaskJavaConfig
globals()['TaskJrubyConfig'] = TaskJrubyConfig
globals()['TaskLibraryScriptConfig'] = TaskLibraryScriptConfig
globals()['TaskLibraryTemplateConfig'] = TaskLibraryTemplateConfig
globals()['TaskNestedWorkflowConfig'] = TaskNestedWorkflowConfig
globals()['TaskPowershellConfig'] = TaskPowershellConfig
globals()['TaskPuppetConfig'] = TaskPuppetConfig
globals()['TaskPythonConfig'] = TaskPythonConfig
globals()['TaskRestartConfig'] = TaskRestartConfig
globals()['TaskShellConfig'] = TaskShellConfig
globals()['TaskVroConfig'] = TaskVroConfig
globals()['TaskWriteAttributesConfig'] = TaskWriteAttributesConfig
globals()['TaskWriteAttributesConfigTaskOptions'] = TaskWriteAttributesConfigTaskOptions
globals()['TaskWriteAttributesConfigTaskType'] = TaskWriteAttributesConfigTaskType
globals()['ZoneCredentialAnyOf'] = ZoneCredentialAnyOf
from openapi_client.model.list_tasks200_response_all_of_tasks_inner import ListTasks200ResponseAllOfTasksInner


class TestListTasks200ResponseAllOfTasksInner(unittest.TestCase):
    """ListTasks200ResponseAllOfTasksInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testListTasks200ResponseAllOfTasksInner(self):
        """Test ListTasks200ResponseAllOfTasksInner"""
        # FIXME: construct object with mandatory attributes with example values
        # model = ListTasks200ResponseAllOfTasksInner()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
