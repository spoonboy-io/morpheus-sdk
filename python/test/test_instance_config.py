"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.  # noqa: E501

    The version of the OpenAPI document: 6.2.1
    Contact: dev@morpheusdata.com
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import openapi_client
from openapi_client.model.instance_config_backup import InstanceConfigBackup
from openapi_client.model.instance_config_instance_type import InstanceConfigInstanceType
from openapi_client.model.instance_config_layout import InstanceConfigLayout
from openapi_client.model.instance_config_replication_group import InstanceConfigReplicationGroup
from openapi_client.model.instance_config_security_groups_inner import InstanceConfigSecurityGroupsInner
from openapi_client.model.update_blueprint_permissions_request_resource_permission_sites_inner import UpdateBlueprintPermissionsRequestResourcePermissionSitesInner
globals()['InstanceConfigBackup'] = InstanceConfigBackup
globals()['InstanceConfigInstanceType'] = InstanceConfigInstanceType
globals()['InstanceConfigLayout'] = InstanceConfigLayout
globals()['InstanceConfigReplicationGroup'] = InstanceConfigReplicationGroup
globals()['InstanceConfigSecurityGroupsInner'] = InstanceConfigSecurityGroupsInner
globals()['UpdateBlueprintPermissionsRequestResourcePermissionSitesInner'] = UpdateBlueprintPermissionsRequestResourcePermissionSitesInner
from openapi_client.model.instance_config import InstanceConfig


class TestInstanceConfig(unittest.TestCase):
    """InstanceConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testInstanceConfig(self):
        """Test InstanceConfig"""
        # FIXME: construct object with mandatory attributes with example values
        # model = InstanceConfig()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
