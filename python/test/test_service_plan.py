"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.  # noqa: E501

    The version of the OpenAPI document: 6.2.1
    Contact: dev@morpheusdata.com
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import openapi_client
from openapi_client.model.get_network_routers200_response_network_routers_inner_interfaces_inner_network import GetNetworkRouters200ResponseNetworkRoutersInnerInterfacesInnerNetwork
from openapi_client.model.guidance_vmware_sizing_plan_before_action_price_sets_inner import GuidanceVmwareSizingPlanBeforeActionPriceSetsInner
from openapi_client.model.guidance_vmware_sizing_plan_before_action_provision_type import GuidanceVmwareSizingPlanBeforeActionProvisionType
from openapi_client.model.service_plan_config import ServicePlanConfig
from openapi_client.model.service_plan_permissions import ServicePlanPermissions
globals()['GetNetworkRouters200ResponseNetworkRoutersInnerInterfacesInnerNetwork'] = GetNetworkRouters200ResponseNetworkRoutersInnerInterfacesInnerNetwork
globals()['GuidanceVmwareSizingPlanBeforeActionPriceSetsInner'] = GuidanceVmwareSizingPlanBeforeActionPriceSetsInner
globals()['GuidanceVmwareSizingPlanBeforeActionProvisionType'] = GuidanceVmwareSizingPlanBeforeActionProvisionType
globals()['ServicePlanConfig'] = ServicePlanConfig
globals()['ServicePlanPermissions'] = ServicePlanPermissions
from openapi_client.model.service_plan import ServicePlan


class TestServicePlan(unittest.TestCase):
    """ServicePlan unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testServicePlan(self):
        """Test ServicePlan"""
        # FIXME: construct object with mandatory attributes with example values
        # model = ServicePlan()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
