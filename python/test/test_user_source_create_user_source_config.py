"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.  # noqa: E501

    The version of the OpenAPI document: 6.2.1
    Contact: dev@morpheusdata.com
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import openapi_client
from openapi_client.model.user_source_create_active_directory import UserSourceCreateActiveDirectory
from openapi_client.model.user_source_create_custom_api import UserSourceCreateCustomApi
from openapi_client.model.user_source_create_custom_external import UserSourceCreateCustomExternal
from openapi_client.model.user_source_create_jump_cloud import UserSourceCreateJumpCloud
from openapi_client.model.user_source_create_ldap import UserSourceCreateLDAP
from openapi_client.model.user_source_create_okta import UserSourceCreateOkta
from openapi_client.model.user_source_create_one_login import UserSourceCreateOneLogin
from openapi_client.model.user_source_create_saml import UserSourceCreateSaml
globals()['UserSourceCreateActiveDirectory'] = UserSourceCreateActiveDirectory
globals()['UserSourceCreateCustomApi'] = UserSourceCreateCustomApi
globals()['UserSourceCreateCustomExternal'] = UserSourceCreateCustomExternal
globals()['UserSourceCreateJumpCloud'] = UserSourceCreateJumpCloud
globals()['UserSourceCreateLDAP'] = UserSourceCreateLDAP
globals()['UserSourceCreateOkta'] = UserSourceCreateOkta
globals()['UserSourceCreateOneLogin'] = UserSourceCreateOneLogin
globals()['UserSourceCreateSaml'] = UserSourceCreateSaml
from openapi_client.model.user_source_create_user_source_config import UserSourceCreateUserSourceConfig


class TestUserSourceCreateUserSourceConfig(unittest.TestCase):
    """UserSourceCreateUserSourceConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testUserSourceCreateUserSourceConfig(self):
        """Test UserSourceCreateUserSourceConfig"""
        # FIXME: construct object with mandatory attributes with example values
        # model = UserSourceCreateUserSourceConfig()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
