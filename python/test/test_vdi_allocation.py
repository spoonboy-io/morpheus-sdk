"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.  # noqa: E501

    The version of the OpenAPI document: 6.2.1
    Contact: dev@morpheusdata.com
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import openapi_client
from openapi_client.model.from_openapi_client_model_list_deploys200_response_all_of_app_deploys_inner_instance_import_list_deploys200_response_all_of_app_deploys_inner_instance import FromOpenapiClientModelListDeploys200ResponseAllOfAppDeploysInnerInstanceImportListDeploys200ResponseAllOfAppDeploysInnerInstance
from openapi_client.model.from_openapi_client_model_vdi_allocation_instance_import_vdi_allocation_instance import FromOpenapiClientModelVdiAllocationInstanceImportVdiAllocationInstance
from openapi_client.model.from_openapi_client_model_vdi_pool_owner_import_vdi_pool_owner import FromOpenapiClientModelVdiPoolOwnerImportVdiPoolOwner
from openapi_client.model.globals_list_deploys200_response_all_of_app_deploys_inner_instance_list_deploys200_response_all_of_app_deploys_inner_instance import GlobalsListDeploys200ResponseAllOfAppDeploysInnerInstanceListDeploys200ResponseAllOfAppDeploysInnerInstance
from openapi_client.model.globals_vdi_allocation_instance_vdi_allocation_instance import GlobalsVdiAllocationInstanceVdiAllocationInstance
from openapi_client.model.globals_vdi_pool_owner_vdi_pool_owner import GlobalsVdiPoolOwnerVdiPoolOwner
globals()['from openapi_client.model.list_deploys200_response_all_of_app_deploys_inner_instance import ListDeploys200ResponseAllOfAppDeploysInnerInstance'] = from openapi_client.model.list_deploys200_response_all_of_app_deploys_inner_instance import ListDeploys200ResponseAllOfAppDeploysInnerInstance
globals()['from openapi_client.model.vdi_allocation_instance import VdiAllocationInstance'] = from openapi_client.model.vdi_allocation_instance import VdiAllocationInstance
globals()['from openapi_client.model.vdi_pool_owner import VdiPoolOwner'] = from openapi_client.model.vdi_pool_owner import VdiPoolOwner
globals()['globals()['ListDeploys200ResponseAllOfAppDeploysInnerInstance'] = ListDeploys200ResponseAllOfAppDeploysInnerInstance'] = globals()['ListDeploys200ResponseAllOfAppDeploysInnerInstance'] = ListDeploys200ResponseAllOfAppDeploysInnerInstance
globals()['globals()['VdiAllocationInstance'] = VdiAllocationInstance'] = globals()['VdiAllocationInstance'] = VdiAllocationInstance
globals()['globals()['VdiPoolOwner'] = VdiPoolOwner'] = globals()['VdiPoolOwner'] = VdiPoolOwner
from openapi_client.model.vdi_allocation import VdiAllocation


class TestVdiAllocation(unittest.TestCase):
    """VdiAllocation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testVdiAllocation(self):
        """Test VdiAllocation"""
        # FIXME: construct object with mandatory attributes with example values
        # model = VdiAllocation()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
