"""
    Morpheus API

    Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.  # noqa: E501

    The version of the OpenAPI document: 6.2.1
    Contact: dev@morpheusdata.com
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import openapi_client
from openapi_client.model.list_deploys200_response_all_of_app_deploys_inner_instance import ListDeploys200ResponseAllOfAppDeploysInnerInstance
from openapi_client.model.list_load_balancer_monitors200_response_all_of_load_balancer_monitors_inner_load_balancer_type import ListLoadBalancerMonitors200ResponseAllOfLoadBalancerMonitorsInnerLoadBalancerType
from openapi_client.model.list_load_balancer_pool_nodes200_response_all_of_load_balancer_nodes_inner_created_by import ListLoadBalancerPoolNodes200ResponseAllOfLoadBalancerNodesInnerCreatedBy
from openapi_client.model.list_load_balancer_virtual_servers200_response_all_of_load_balancer_instances_inner_ssl_cert import ListLoadBalancerVirtualServers200ResponseAllOfLoadBalancerInstancesInnerSslCert
from openapi_client.model.policy_config import PolicyConfig
from openapi_client.model.policy_role import PolicyRole
globals()['ListDeploys200ResponseAllOfAppDeploysInnerInstance'] = ListDeploys200ResponseAllOfAppDeploysInnerInstance
globals()['ListLoadBalancerMonitors200ResponseAllOfLoadBalancerMonitorsInnerLoadBalancerType'] = ListLoadBalancerMonitors200ResponseAllOfLoadBalancerMonitorsInnerLoadBalancerType
globals()['ListLoadBalancerPoolNodes200ResponseAllOfLoadBalancerNodesInnerCreatedBy'] = ListLoadBalancerPoolNodes200ResponseAllOfLoadBalancerNodesInnerCreatedBy
globals()['ListLoadBalancerVirtualServers200ResponseAllOfLoadBalancerInstancesInnerSslCert'] = ListLoadBalancerVirtualServers200ResponseAllOfLoadBalancerInstancesInnerSslCert
globals()['PolicyConfig'] = PolicyConfig
globals()['PolicyRole'] = PolicyRole
from openapi_client.model.policy import Policy


class TestPolicy(unittest.TestCase):
    """Policy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testPolicy(self):
        """Test Policy"""
        # FIXME: construct object with mandatory attributes with example values
        # model = Policy()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
