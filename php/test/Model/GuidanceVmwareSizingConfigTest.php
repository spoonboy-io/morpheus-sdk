<?php
/**
 * GuidanceVmwareSizingConfigTest
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * GuidanceVmwareSizingConfigTest Class Doc Comment
 *
 * @category    Class
 * @description GuidanceVmwareSizingConfig
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class GuidanceVmwareSizingConfigTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "GuidanceVmwareSizingConfig"
     */
    public function testGuidanceVmwareSizingConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "exists"
     */
    public function testPropertyExists()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "object_id"
     */
    public function testPropertyObjectId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_total_time_count"
     */
    public function testPropertyCpuTotalTimeCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_total_time_min"
     */
    public function testPropertyCpuTotalTimeMin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_total_time_max"
     */
    public function testPropertyCpuTotalTimeMax()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_total_time_avg"
     */
    public function testPropertyCpuTotalTimeAvg()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_total_time_sum"
     */
    public function testPropertyCpuTotalTimeSum()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_idle_time_count"
     */
    public function testPropertyCpuIdleTimeCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_idle_time_min"
     */
    public function testPropertyCpuIdleTimeMin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_idle_time_max"
     */
    public function testPropertyCpuIdleTimeMax()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_idle_time_avg"
     */
    public function testPropertyCpuIdleTimeAvg()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_idle_time_sum"
     */
    public function testPropertyCpuIdleTimeSum()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_usage_count"
     */
    public function testPropertyCpuUsageCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_usage_min"
     */
    public function testPropertyCpuUsageMin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_usage_max"
     */
    public function testPropertyCpuUsageMax()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_usage_avg"
     */
    public function testPropertyCpuUsageAvg()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_usage_sum"
     */
    public function testPropertyCpuUsageSum()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_memory_count"
     */
    public function testPropertyMaxMemoryCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_memory_min"
     */
    public function testPropertyMaxMemoryMin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_memory_max"
     */
    public function testPropertyMaxMemoryMax()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_memory_avg"
     */
    public function testPropertyMaxMemoryAvg()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_memory_sum"
     */
    public function testPropertyMaxMemorySum()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_user_time_count"
     */
    public function testPropertyCpuUserTimeCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_user_time_min"
     */
    public function testPropertyCpuUserTimeMin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_user_time_max"
     */
    public function testPropertyCpuUserTimeMax()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_user_time_avg"
     */
    public function testPropertyCpuUserTimeAvg()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_user_time_sum"
     */
    public function testPropertyCpuUserTimeSum()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_system_time_count"
     */
    public function testPropertyCpuSystemTimeCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_system_time_min"
     */
    public function testPropertyCpuSystemTimeMin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_system_time_max"
     */
    public function testPropertyCpuSystemTimeMax()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_system_time_avg"
     */
    public function testPropertyCpuSystemTimeAvg()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cpu_system_time_sum"
     */
    public function testPropertyCpuSystemTimeSum()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "used_memory_count"
     */
    public function testPropertyUsedMemoryCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "used_memory_min"
     */
    public function testPropertyUsedMemoryMin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "used_memory_max"
     */
    public function testPropertyUsedMemoryMax()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "used_memory_avg"
     */
    public function testPropertyUsedMemoryAvg()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "used_memory_sum"
     */
    public function testPropertyUsedMemorySum()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "free_memory_count"
     */
    public function testPropertyFreeMemoryCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "free_memory_min"
     */
    public function testPropertyFreeMemoryMin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "free_memory_max"
     */
    public function testPropertyFreeMemoryMax()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "free_memory_avg"
     */
    public function testPropertyFreeMemoryAvg()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "free_memory_sum"
     */
    public function testPropertyFreeMemorySum()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
