<?php
/**
 * HostsApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * HostsApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class HostsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for getHost
     *
     * Get a Specific Host.
     *
     */
    public function testGetHost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getHostSnpshots
     *
     * Get list of snapshots for a Host.
     *
     */
    public function testGetHostSnpshots()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getHostType
     *
     * Get a Specific Host Type.
     *
     */
    public function testGetHostType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWikiServer
     *
     * Retrieves a Server Wiki Page.
     *
     */
    public function testGetWikiServer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listHostTypes
     *
     * Host Types.
     *
     */
    public function testListHostTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listHosts
     *
     * Get All Hosts.
     *
     */
    public function testListHosts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listServerServicePlans
     *
     * Get Available Service Plans for a Host.
     *
     */
    public function testListServerServicePlans()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeHost
     *
     * Delete a Host.
     *
     */
    public function testRemoveHost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restartHost
     *
     * Restart a Host.
     *
     */
    public function testRestartHost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for startHost
     *
     * Start a Host.
     *
     */
    public function testStartHost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for stopHost
     *
     * Stop a Host.
     *
     */
    public function testStopHost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateHost
     *
     * Updating a Host.
     *
     */
    public function testUpdateHost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateHostAssignTenant
     *
     * Assign To Tenant.
     *
     */
    public function testUpdateHostAssignTenant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateHostCloud
     *
     * Change Server Cloud.
     *
     */
    public function testUpdateHostCloud()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateHostExecuteWorkflow
     *
     * Run Workflow on a Host.
     *
     */
    public function testUpdateHostExecuteWorkflow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateHostInstallAgent
     *
     * Install Agent.
     *
     */
    public function testUpdateHostInstallAgent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateHostManaged
     *
     * Convert To Managed.
     *
     */
    public function testUpdateHostManaged()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateHostResize
     *
     * Resize a Host.
     *
     */
    public function testUpdateHostResize()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateHostUpgradeAgent
     *
     * Upgrade Agent.
     *
     */
    public function testUpdateHostUpgradeAgent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateServerNetworkInterface
     *
     * Updating a label for a Server's Network.
     *
     */
    public function testUpdateServerNetworkInterface()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateWikiServer
     *
     * Update a Server Wiki Page.
     *
     */
    public function testUpdateWikiServer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
