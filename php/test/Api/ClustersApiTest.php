<?php
/**
 * ClustersApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ClustersApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ClustersApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addCluster
     *
     * Create a Cluster.
     *
     */
    public function testAddCluster()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addClusterNamespace
     *
     * Add Namespace (Kubernetes).
     *
     */
    public function testAddClusterNamespace()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addClusterWorker
     *
     * Add Worker.
     *
     */
    public function testAddClusterWorker()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for applyTemplate
     *
     * Apply Template to Cluster (Kubernetes).
     *
     */
    public function testApplyTemplate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteCluster
     *
     * Delete a Cluster.
     *
     */
    public function testDeleteCluster()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteClusterContainer
     *
     * Delete Container.
     *
     */
    public function testDeleteClusterContainer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteClusterDeployment
     *
     * Delete Deployment.
     *
     */
    public function testDeleteClusterDeployment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteClusterJob
     *
     * Delete a Job.
     *
     */
    public function testDeleteClusterJob()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteClusterNamespace
     *
     * Delete a Namespace (Kubernetes).
     *
     */
    public function testDeleteClusterNamespace()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteClusterService
     *
     * Delete a Service.
     *
     */
    public function testDeleteClusterService()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteClusterStatefulSet
     *
     * Delete a Stateful Set.
     *
     */
    public function testDeleteClusterStatefulSet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteClusterVolume
     *
     * Delete a Volume.
     *
     */
    public function testDeleteClusterVolume()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteClusterWorker
     *
     * Delete a Worker.
     *
     */
    public function testDeleteClusterWorker()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCluster
     *
     * Get a Specific Cluster.
     *
     */
    public function testGetCluster()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getClusterApiConfig
     *
     * Get API Config.
     *
     */
    public function testGetClusterApiConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getClusterDatastore
     *
     * Get a Specific Datastore.
     *
     */
    public function testGetClusterDatastore()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getClusterHistory
     *
     * Get Cluster History.
     *
     */
    public function testGetClusterHistory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getClusterHistoryDetail
     *
     * Get Cluster History Details.
     *
     */
    public function testGetClusterHistoryDetail()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getClusterHistoryEventDetail
     *
     * Get Cluster History Event.
     *
     */
    public function testGetClusterHistoryEventDetail()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getClusterMasters
     *
     * Get Masters (Kubernetes).
     *
     */
    public function testGetClusterMasters()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getClusterNamespace
     *
     * Get Namespace (Kubernetes).
     *
     */
    public function testGetClusterNamespace()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getClusterNamespaces
     *
     * List Namespaces (Kubernetes).
     *
     */
    public function testGetClusterNamespaces()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getClusterUpgradeVersions
     *
     * Get Cluster Upgrade Versions (Kubernetes).
     *
     */
    public function testGetClusterUpgradeVersions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWikiCluster
     *
     * Retrieves a Cluster Wiki Page.
     *
     */
    public function testGetWikiCluster()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listClusterContainers
     *
     * Get Containers.
     *
     */
    public function testListClusterContainers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listClusterDatastores
     *
     * Get Datastores.
     *
     */
    public function testListClusterDatastores()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listClusterDeployments
     *
     * Get Deployments.
     *
     */
    public function testListClusterDeployments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listClusterJobs
     *
     * Get Jobs.
     *
     */
    public function testListClusterJobs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listClusterPods
     *
     * Get Pods.
     *
     */
    public function testListClusterPods()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listClusterServices
     *
     * Get Services.
     *
     */
    public function testListClusterServices()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listClusterStatefulSets
     *
     * Get Stateful Sets.
     *
     */
    public function testListClusterStatefulSets()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listClusterTypes
     *
     * Get All Cluster Types.
     *
     */
    public function testListClusterTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listClusterVolumes
     *
     * Get Volumes.
     *
     */
    public function testListClusterVolumes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listClusterWorkers
     *
     * Get Workers.
     *
     */
    public function testListClusterWorkers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listClusters
     *
     * Get All Clusters.
     *
     */
    public function testListClusters()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restartClusterContainer
     *
     * Restart a Container.
     *
     */
    public function testRestartClusterContainer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restartClusterDeployment
     *
     * Restart a Deployment.
     *
     */
    public function testRestartClusterDeployment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restartClusterPod
     *
     * Restart a Pod.
     *
     */
    public function testRestartClusterPod()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restartClusterStatefulSet
     *
     * Restart a Stateful Set.
     *
     */
    public function testRestartClusterStatefulSet()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCluster
     *
     * Update Cluster.
     *
     */
    public function testUpdateCluster()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateClusterDatastore
     *
     * Update Datastore.
     *
     */
    public function testUpdateClusterDatastore()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateClusterNamespace
     *
     * Update Namespace (Kubernetes).
     *
     */
    public function testUpdateClusterNamespace()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateClusterPermissions
     *
     * Update Cluster Permissions.
     *
     */
    public function testUpdateClusterPermissions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateClusterUpgradeVersions
     *
     * Upgrade a Cluster (Kubernetes).
     *
     */
    public function testUpdateClusterUpgradeVersions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateClusterWorkerCount
     *
     * Update Worker Count.
     *
     */
    public function testUpdateClusterWorkerCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateWikiCluster
     *
     * Update a Cluster Wiki Page.
     *
     */
    public function testUpdateWikiCluster()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
