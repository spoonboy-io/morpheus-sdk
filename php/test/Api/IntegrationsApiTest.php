<?php
/**
 * IntegrationsApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * IntegrationsApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class IntegrationsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addIntegrationSnowObjects
     *
     * Creates an Exposed ServiceNow Catalog Item.
     *
     */
    public function testAddIntegrationSnowObjects()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addIntegrations
     *
     * Creates an Integration.
     *
     */
    public function testAddIntegrations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIntegrationInventory
     *
     * Get a Specific Integration Inventory.
     *
     */
    public function testGetIntegrationInventory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIntegrationObjects
     *
     * Get a Specific ServiceNow Integration Object.
     *
     */
    public function testGetIntegrationObjects()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIntegrationTypeOptionTypes
     *
     * Retrieves a Option Types for a Specific Integration Type.
     *
     */
    public function testGetIntegrationTypeOptionTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIntegrationTypes
     *
     * Retrieves a Specific Integration Type.
     *
     */
    public function testGetIntegrationTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getIntegrations
     *
     * Retrieves a Specific Integration.
     *
     */
    public function testGetIntegrations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listIntegrationInventory
     *
     * Get All Integration Inventory.
     *
     */
    public function testListIntegrationInventory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listIntegrationObjects
     *
     * Get ServiceNow Integration Objects.
     *
     */
    public function testListIntegrationObjects()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listIntegrationTypes
     *
     * Retrieves all Integration Types.
     *
     */
    public function testListIntegrationTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listIntegrations
     *
     * Retrieves all Integrations.
     *
     */
    public function testListIntegrations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for refreshIntegrations
     *
     * Refresh an Integration.
     *
     */
    public function testRefreshIntegrations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeIntegrationObjects
     *
     * Deletes a ServiceNow Integration object.
     *
     */
    public function testRemoveIntegrationObjects()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeIntegrations
     *
     * Deletes an Integration.
     *
     */
    public function testRemoveIntegrations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateIntegrationInventory
     *
     * Updating an Integration Inventory.
     *
     */
    public function testUpdateIntegrationInventory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateIntegrations
     *
     * Updates an Integration.
     *
     */
    public function testUpdateIntegrations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
