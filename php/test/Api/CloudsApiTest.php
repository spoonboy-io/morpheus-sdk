<?php
/**
 * CloudsApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * CloudsApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CloudsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addCloudResourcePool
     *
     * Creates a Specified Resource Pool for Specified Cloud.
     *
     */
    public function testAddCloudResourcePool()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addClouds
     *
     * Creates a Cloud.
     *
     */
    public function testAddClouds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCloudDatastores
     *
     * Retrieves a Datastore for Specified Cloud.
     *
     */
    public function testGetCloudDatastores()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCloudFolders
     *
     * Retrieves a Resource Folder for Specified Cloud.
     *
     */
    public function testGetCloudFolders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCloudResourcePools
     *
     * Retrieves a Resource Pool for Specified Cloud.
     *
     */
    public function testGetCloudResourcePools()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCloudTypes
     *
     * Retrieves a Specific Cloud Type.
     *
     */
    public function testGetCloudTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getClouds
     *
     * Retrieves a Specific Cloud.
     *
     */
    public function testGetClouds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWikiCloud
     *
     * Retrieves a Cloud Wiki Page.
     *
     */
    public function testGetWikiCloud()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listCloudDatastores
     *
     * Retrieves all Datastores for Specified Cloud.
     *
     */
    public function testListCloudDatastores()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listCloudFolders
     *
     * Retrieves all resource folders for Specified Cloud.
     *
     */
    public function testListCloudFolders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listCloudResourcePools
     *
     * Retrieves all Resource Pools for Specified Cloud.
     *
     */
    public function testListCloudResourcePools()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listCloudSecurityGroups
     *
     * Retrieves all Security Groups for a Cloud.
     *
     */
    public function testListCloudSecurityGroups()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listCloudTypes
     *
     * Retrieves all Cloud Types.
     *
     */
    public function testListCloudTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listClouds
     *
     * Retrieves all Clouds.
     *
     */
    public function testListClouds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for refreshClouds
     *
     * Refreshes a Cloud.
     *
     */
    public function testRefreshClouds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeCloudResourcePools
     *
     * Deletes a Resource Pool for Specified Cloud.
     *
     */
    public function testRemoveCloudResourcePools()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeClouds
     *
     * Deletes a Cloud.
     *
     */
    public function testRemoveClouds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCloudDatastores
     *
     * Updates a Specified Datastore for Specified Cloud.
     *
     */
    public function testUpdateCloudDatastores()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCloudFolders
     *
     * Updates a Resource Folder for Specified Cloud.
     *
     */
    public function testUpdateCloudFolders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCloudLogo
     *
     * Update Logo For Cloud.
     *
     */
    public function testUpdateCloudLogo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCloudResourcePool
     *
     * Updates a Specified Resource Pool for Specified Cloud.
     *
     */
    public function testUpdateCloudResourcePool()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCloudSecurityGroups
     *
     * Sets Security Groups for a Cloud.
     *
     */
    public function testUpdateCloudSecurityGroups()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateClouds
     *
     * Updates a Cloud.
     *
     */
    public function testUpdateClouds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateWikiCloud
     *
     * Update a Cloud Wiki Page.
     *
     */
    public function testUpdateWikiCloud()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
