<?php
/**
 * StorageApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * StorageApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class StorageApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addStorageBuckets
     *
     * Creates a Storage Bucket.
     *
     */
    public function testAddStorageBuckets()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addStorageServers
     *
     * Creates a Storage Server.
     *
     */
    public function testAddStorageServers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addStorageVolumes
     *
     * Creates a Storage Volume.
     *
     */
    public function testAddStorageVolumes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getStorageBuckets
     *
     * Retrieves a Specific Storage Bucket.
     *
     */
    public function testGetStorageBuckets()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getStorageServerTypes
     *
     * Retrieves a Specific Storage Server Type.
     *
     */
    public function testGetStorageServerTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getStorageServers
     *
     * Retrieves a Specific Storage Server.
     *
     */
    public function testGetStorageServers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getStorageVolumeTypes
     *
     * Retrieves a Specific Storage Volume Type.
     *
     */
    public function testGetStorageVolumeTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getStorageVolumes
     *
     * Retrieves a Specific Storage Volume.
     *
     */
    public function testGetStorageVolumes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listStorageBuckets
     *
     * Retrieves all Storage Buckets.
     *
     */
    public function testListStorageBuckets()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listStorageServerTypes
     *
     * Retrieves all Storage Server Types.
     *
     */
    public function testListStorageServerTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listStorageServers
     *
     * Retrieves all Storage Servers.
     *
     */
    public function testListStorageServers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listStorageVolumeTypes
     *
     * Retrieves all Storage Volume Types.
     *
     */
    public function testListStorageVolumeTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listStorageVolumes
     *
     * Retrieves all Storage Volumes.
     *
     */
    public function testListStorageVolumes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeStorageBuckets
     *
     * Deletes a Storage Bucket.
     *
     */
    public function testRemoveStorageBuckets()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeStorageServers
     *
     * Deletes a Storage Server.
     *
     */
    public function testRemoveStorageServers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeStorageVolumes
     *
     * Deletes a Storage Volume.
     *
     */
    public function testRemoveStorageVolumes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateStorageBuckets
     *
     * Updates a Storage Bucket.
     *
     */
    public function testUpdateStorageBuckets()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateStorageServers
     *
     * Updates a Storage Server.
     *
     */
    public function testUpdateStorageServers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateStorageVolumes
     *
     * Updates a Storage Volume.
     *
     */
    public function testUpdateStorageVolumes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
