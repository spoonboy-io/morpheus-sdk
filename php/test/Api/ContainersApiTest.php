<?php
/**
 * ContainersApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ContainersApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ContainersApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for cloneImageContainerAction
     *
     * Clone Specific Container to Image.
     *
     */
    public function testCloneImageContainerAction()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for containersAttachFloatingIp
     *
     * Attach Floating IP to Container.
     *
     */
    public function testContainersAttachFloatingIp()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for containersDetachFloatingIp
     *
     * Detach Floating IP from Container.
     *
     */
    public function testContainersDetachFloatingIp()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ejectContainerAction
     *
     * Eject a Specific Container.
     *
     */
    public function testEjectContainerAction()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for executeContainerAction
     *
     * Execute Container Action.
     *
     */
    public function testExecuteContainerAction()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getContainer
     *
     * Get a Specific Container.
     *
     */
    public function testGetContainer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getContainerActions
     *
     * List Container Actions.
     *
     */
    public function testGetContainerActions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for importContainerAction
     *
     * Import a Specific Container.
     *
     */
    public function testImportContainerAction()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restartContainerAction
     *
     * Restart a Specific Container.
     *
     */
    public function testRestartContainerAction()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for startContainerAction
     *
     * Start a Specific Container.
     *
     */
    public function testStartContainerAction()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for stopContainerAction
     *
     * Stop a Specific Container.
     *
     */
    public function testStopContainerAction()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for suspendContainerAction
     *
     * Suspend a Specific Container.
     *
     */
    public function testSuspendContainerAction()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
