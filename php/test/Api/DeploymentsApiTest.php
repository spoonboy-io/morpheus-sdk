<?php
/**
 * DeploymentsApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * DeploymentsApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DeploymentsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addDeploymentFile
     *
     * Upload a Deployment File.
     *
     */
    public function testAddDeploymentFile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addDeploymentVersion
     *
     * Create a new Deployment Version.
     *
     */
    public function testAddDeploymentVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addDeployments
     *
     * Create a new Deployment.
     *
     */
    public function testAddDeployments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteDeployment
     *
     * Delete a Deployment.
     *
     */
    public function testDeleteDeployment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteDeploymentFile
     *
     * Delete a Deployment File.
     *
     */
    public function testDeleteDeploymentFile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteDeploymentVersion
     *
     * Delete a Deployment Version.
     *
     */
    public function testDeleteDeploymentVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeployment
     *
     * Get a Specific Deployment.
     *
     */
    public function testGetDeployment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeploymentVersion
     *
     * Get a Specific Deployment Version.
     *
     */
    public function testGetDeploymentVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listDeploymentFiles
     *
     * List Deployment Files.
     *
     */
    public function testListDeploymentFiles()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listDeploymentVersions
     *
     * Get All Versions For a Deployment.
     *
     */
    public function testListDeploymentVersions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listDeployments
     *
     * Get All Deployments.
     *
     */
    public function testListDeployments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateDeployment
     *
     * Updating a Deployment.
     *
     */
    public function testUpdateDeployment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateDeploymentVersion
     *
     * Updating a Deployment Version.
     *
     */
    public function testUpdateDeploymentVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
