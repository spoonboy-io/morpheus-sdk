<?php
/**
 * InstancesApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * InstancesApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class InstancesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addInstance
     *
     * Create an Instance.
     *
     */
    public function testAddInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for backupInstance
     *
     * Backup an instance.
     *
     */
    public function testBackupInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for backupsInstance
     *
     * Get list of backups for an Instance.
     *
     */
    public function testBackupsInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cancelExpirationInstance
     *
     * Cancel Expiration of an Instance.
     *
     */
    public function testCancelExpirationInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cancelRemovalInstance
     *
     * Cancel Removal of an Instance.
     *
     */
    public function testCancelRemovalInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cancelShutdownInstance
     *
     * Cancel Shutdown of an Instance.
     *
     */
    public function testCancelShutdownInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cloneImageInstance
     *
     * Clone to Image.
     *
     */
    public function testCloneImageInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cloneInstance
     *
     * Clone an Instance.
     *
     */
    public function testCloneInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createInstanceSchedule
     *
     * Create a new Instance Schedule.
     *
     */
    public function testCreateInstanceSchedule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteAllSnapshotsInstance
     *
     * Delete All Snapshots of Instance.
     *
     */
    public function testDeleteAllSnapshotsInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteAllSnapshotsInstanceContainer
     *
     * Delete All Snapshots of Instance Container.
     *
     */
    public function testDeleteAllSnapshotsInstanceContainer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteInstance
     *
     * Delete an instance.
     *
     */
    public function testDeleteInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteInstanceSchedule
     *
     * Deletes an Instance Schedule.
     *
     */
    public function testDeleteInstanceSchedule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteSnapshotInstance
     *
     * Delete Snapshot of Instance.
     *
     */
    public function testDeleteSnapshotInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ejectInstance
     *
     * Eject an instance.
     *
     */
    public function testEjectInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for extendExpirationInstance
     *
     * Extend Expiration of an Instance.
     *
     */
    public function testExtendExpirationInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for extendShutdownInstance
     *
     * Extend Shutdown of an Instance.
     *
     */
    public function testExtendShutdownInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEnvVariables
     *
     * Get Env Variables.
     *
     */
    public function testGetEnvVariables()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getInstance
     *
     * Retrieves a Specific Instance.
     *
     */
    public function testGetInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getInstanceContainers
     *
     * Get Container Details.
     *
     */
    public function testGetInstanceContainers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getInstanceHistory
     *
     * Get Instance History.
     *
     */
    public function testGetInstanceHistory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getInstanceSchedule
     *
     * Get a Specific Instance Schedule.
     *
     */
    public function testGetInstanceSchedule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getInstanceSchedules
     *
     * Get all Instance Schedules.
     *
     */
    public function testGetInstanceSchedules()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getInstanceThreshold
     *
     * Get an Instance Scale Threshold.
     *
     */
    public function testGetInstanceThreshold()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getInstanceTypeProvisioning
     *
     * Get Specific Instance Type for Provisioning.
     *
     */
    public function testGetInstanceTypeProvisioning()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPrepareApplyInstance
     *
     * Prepare To Apply an Instance.
     *
     */
    public function testGetPrepareApplyInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSnapshotInstance
     *
     * Get a Specific Snapshot.
     *
     */
    public function testGetSnapshotInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getStateInstance
     *
     * Get State of an Instance.
     *
     */
    public function testGetStateInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getValidateApplyInstance
     *
     * Validate Apply State for an Instance.
     *
     */
    public function testGetValidateApplyInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWikiInstance
     *
     * Retrieves an Instance Wiki Page.
     *
     */
    public function testGetWikiInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for importSnapshotInstance
     *
     * Import Snapshot of an Instance.
     *
     */
    public function testImportSnapshotInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for linkedCloneSnapshotInstance
     *
     * Create Linked Clone of Instance Snapshot.
     *
     */
    public function testLinkedCloneSnapshotInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listInstanceServicePlans
     *
     * Get Available Service Plans for an Instance.
     *
     */
    public function testListInstanceServicePlans()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listInstanceTypesProvisioning
     *
     * Get All Instance Types for Provisioning.
     *
     */
    public function testListInstanceTypesProvisioning()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listInstances
     *
     * Get All Instances.
     *
     */
    public function testListInstances()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listSecurityGroupsInstance
     *
     * Get Security Groups for an Instance.
     *
     */
    public function testListSecurityGroupsInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for lockInstance
     *
     * Lock an Instance.
     *
     */
    public function testLockInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for refreshStateInstance
     *
     * Refresh State of an Instance.
     *
     */
    public function testRefreshStateInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeInstancesFromControl
     *
     * Remove From Control.
     *
     */
    public function testRemoveInstancesFromControl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resizeInstance
     *
     * Resize an Instance.
     *
     */
    public function testResizeInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restartInstance
     *
     * Restart an instance.
     *
     */
    public function testRestartInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for revertSnapshotInstance
     *
     * Revert Instance to Snapshot.
     *
     */
    public function testRevertSnapshotInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for runWorkflowInstance
     *
     * Run Workflow on an Instance.
     *
     */
    public function testRunWorkflowInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setApplyInstance
     *
     * Apply State of an Instance.
     *
     */
    public function testSetApplyInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setInstanceSecurityGroups
     *
     * Set Security Groups for an Instance.
     *
     */
    public function testSetInstanceSecurityGroups()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for snapshotInstance
     *
     * Snapshot an Instance.
     *
     */
    public function testSnapshotInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for snapshotsInstance
     *
     * Get list of snapshots for an Instance.
     *
     */
    public function testSnapshotsInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for startInstance
     *
     * Start an instance.
     *
     */
    public function testStartInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for stopInstance
     *
     * Stop an instance.
     *
     */
    public function testStopInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for suspendInstance
     *
     * Suspend an instance.
     *
     */
    public function testSuspendInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for unlockInstance
     *
     * Unlock an Instance.
     *
     */
    public function testUnlockInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateInstance
     *
     * Updating an Instance.
     *
     */
    public function testUpdateInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateInstanceNetworkInterface
     *
     * Updating a label for an Instance's Network.
     *
     */
    public function testUpdateInstanceNetworkInterface()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateInstanceSchedule
     *
     * Updating an Instance Schedule.
     *
     */
    public function testUpdateInstanceSchedule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateInstanceThreshold
     *
     * Updates an Instance Scale Threshold.
     *
     */
    public function testUpdateInstanceThreshold()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateWikiInstance
     *
     * Update an Instance Wiki Page.
     *
     */
    public function testUpdateWikiInstance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
