<?php
/**
 * InstanceConfig
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * InstanceConfig Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class InstanceConfig implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'instance_config';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'create_user' => 'bool',
        'is_ec2' => 'bool',
        'is_vpc_selectable' => 'bool',
        'no_agent' => 'bool',
        'security_groups' => '\OpenAPI\Client\Model\InstanceConfigSecurityGroups[]',
        'smbios_asset_tag' => 'string',
        'nested_virtualization' => 'string',
        'vmware_folder_id' => 'string',
        'custom_options' => 'object',
        'resource_pool_id' => 'int',
        'pool_provider_type' => 'string',
        'user_group' => '\OpenAPI\Client\Model\InstanceConfigSecurityGroups',
        'expire_days' => 'string',
        'shutdown_days' => 'string',
        'name' => 'string',
        'host_name' => 'string',
        'instance_type' => '\OpenAPI\Client\Model\InstanceConfigInstanceType',
        'site' => '\OpenAPI\Client\Model\ApiBlueprintsIdUpdatePermissionsResourcePermissionSites',
        'environment_prefix' => 'string',
        'layout' => '\OpenAPI\Client\Model\InstanceConfigLayout',
        'type' => 'string',
        'instance_context' => 'string',
        'memory_display' => 'string',
        'expose' => 'object[]',
        'create_backup' => 'bool',
        'backup' => '\OpenAPI\Client\Model\InstanceConfigBackup',
        'replication_group' => '\OpenAPI\Client\Model\InstanceConfigReplicationGroup',
        'layout_size' => 'int',
        'lb_instances' => 'object[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'create_user' => null,
        'is_ec2' => null,
        'is_vpc_selectable' => null,
        'no_agent' => null,
        'security_groups' => null,
        'smbios_asset_tag' => null,
        'nested_virtualization' => null,
        'vmware_folder_id' => null,
        'custom_options' => null,
        'resource_pool_id' => 'int64',
        'pool_provider_type' => null,
        'user_group' => null,
        'expire_days' => null,
        'shutdown_days' => null,
        'name' => null,
        'host_name' => null,
        'instance_type' => null,
        'site' => null,
        'environment_prefix' => null,
        'layout' => null,
        'type' => null,
        'instance_context' => null,
        'memory_display' => null,
        'expose' => null,
        'create_backup' => null,
        'backup' => null,
        'replication_group' => null,
        'layout_size' => 'int64',
        'lb_instances' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'create_user' => 'createUser',
        'is_ec2' => 'isEC2',
        'is_vpc_selectable' => 'isVpcSelectable',
        'no_agent' => 'noAgent',
        'security_groups' => 'securityGroups',
        'smbios_asset_tag' => 'smbiosAssetTag',
        'nested_virtualization' => 'nestedVirtualization',
        'vmware_folder_id' => 'vmwareFolderId',
        'custom_options' => 'customOptions',
        'resource_pool_id' => 'resourcePoolId',
        'pool_provider_type' => 'poolProviderType',
        'user_group' => 'userGroup',
        'expire_days' => 'expireDays',
        'shutdown_days' => 'shutdownDays',
        'name' => 'name',
        'host_name' => 'hostName',
        'instance_type' => 'instanceType',
        'site' => 'site',
        'environment_prefix' => 'environmentPrefix',
        'layout' => 'layout',
        'type' => 'type',
        'instance_context' => 'instanceContext',
        'memory_display' => 'memoryDisplay',
        'expose' => 'expose',
        'create_backup' => 'createBackup',
        'backup' => 'backup',
        'replication_group' => 'replicationGroup',
        'layout_size' => 'layoutSize',
        'lb_instances' => 'lbInstances'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'create_user' => 'setCreateUser',
        'is_ec2' => 'setIsEc2',
        'is_vpc_selectable' => 'setIsVpcSelectable',
        'no_agent' => 'setNoAgent',
        'security_groups' => 'setSecurityGroups',
        'smbios_asset_tag' => 'setSmbiosAssetTag',
        'nested_virtualization' => 'setNestedVirtualization',
        'vmware_folder_id' => 'setVmwareFolderId',
        'custom_options' => 'setCustomOptions',
        'resource_pool_id' => 'setResourcePoolId',
        'pool_provider_type' => 'setPoolProviderType',
        'user_group' => 'setUserGroup',
        'expire_days' => 'setExpireDays',
        'shutdown_days' => 'setShutdownDays',
        'name' => 'setName',
        'host_name' => 'setHostName',
        'instance_type' => 'setInstanceType',
        'site' => 'setSite',
        'environment_prefix' => 'setEnvironmentPrefix',
        'layout' => 'setLayout',
        'type' => 'setType',
        'instance_context' => 'setInstanceContext',
        'memory_display' => 'setMemoryDisplay',
        'expose' => 'setExpose',
        'create_backup' => 'setCreateBackup',
        'backup' => 'setBackup',
        'replication_group' => 'setReplicationGroup',
        'layout_size' => 'setLayoutSize',
        'lb_instances' => 'setLbInstances'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'create_user' => 'getCreateUser',
        'is_ec2' => 'getIsEc2',
        'is_vpc_selectable' => 'getIsVpcSelectable',
        'no_agent' => 'getNoAgent',
        'security_groups' => 'getSecurityGroups',
        'smbios_asset_tag' => 'getSmbiosAssetTag',
        'nested_virtualization' => 'getNestedVirtualization',
        'vmware_folder_id' => 'getVmwareFolderId',
        'custom_options' => 'getCustomOptions',
        'resource_pool_id' => 'getResourcePoolId',
        'pool_provider_type' => 'getPoolProviderType',
        'user_group' => 'getUserGroup',
        'expire_days' => 'getExpireDays',
        'shutdown_days' => 'getShutdownDays',
        'name' => 'getName',
        'host_name' => 'getHostName',
        'instance_type' => 'getInstanceType',
        'site' => 'getSite',
        'environment_prefix' => 'getEnvironmentPrefix',
        'layout' => 'getLayout',
        'type' => 'getType',
        'instance_context' => 'getInstanceContext',
        'memory_display' => 'getMemoryDisplay',
        'expose' => 'getExpose',
        'create_backup' => 'getCreateBackup',
        'backup' => 'getBackup',
        'replication_group' => 'getReplicationGroup',
        'layout_size' => 'getLayoutSize',
        'lb_instances' => 'getLbInstances'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['create_user'] = $data['create_user'] ?? null;
        $this->container['is_ec2'] = $data['is_ec2'] ?? null;
        $this->container['is_vpc_selectable'] = $data['is_vpc_selectable'] ?? null;
        $this->container['no_agent'] = $data['no_agent'] ?? null;
        $this->container['security_groups'] = $data['security_groups'] ?? null;
        $this->container['smbios_asset_tag'] = $data['smbios_asset_tag'] ?? null;
        $this->container['nested_virtualization'] = $data['nested_virtualization'] ?? null;
        $this->container['vmware_folder_id'] = $data['vmware_folder_id'] ?? null;
        $this->container['custom_options'] = $data['custom_options'] ?? null;
        $this->container['resource_pool_id'] = $data['resource_pool_id'] ?? null;
        $this->container['pool_provider_type'] = $data['pool_provider_type'] ?? null;
        $this->container['user_group'] = $data['user_group'] ?? null;
        $this->container['expire_days'] = $data['expire_days'] ?? null;
        $this->container['shutdown_days'] = $data['shutdown_days'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['host_name'] = $data['host_name'] ?? null;
        $this->container['instance_type'] = $data['instance_type'] ?? null;
        $this->container['site'] = $data['site'] ?? null;
        $this->container['environment_prefix'] = $data['environment_prefix'] ?? null;
        $this->container['layout'] = $data['layout'] ?? null;
        $this->container['type'] = $data['type'] ?? null;
        $this->container['instance_context'] = $data['instance_context'] ?? null;
        $this->container['memory_display'] = $data['memory_display'] ?? null;
        $this->container['expose'] = $data['expose'] ?? null;
        $this->container['create_backup'] = $data['create_backup'] ?? null;
        $this->container['backup'] = $data['backup'] ?? null;
        $this->container['replication_group'] = $data['replication_group'] ?? null;
        $this->container['layout_size'] = $data['layout_size'] ?? null;
        $this->container['lb_instances'] = $data['lb_instances'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets create_user
     *
     * @return bool|null
     */
    public function getCreateUser()
    {
        return $this->container['create_user'];
    }

    /**
     * Sets create_user
     *
     * @param bool|null $create_user create_user
     *
     * @return self
     */
    public function setCreateUser($create_user)
    {
        $this->container['create_user'] = $create_user;

        return $this;
    }

    /**
     * Gets is_ec2
     *
     * @return bool|null
     */
    public function getIsEc2()
    {
        return $this->container['is_ec2'];
    }

    /**
     * Sets is_ec2
     *
     * @param bool|null $is_ec2 is_ec2
     *
     * @return self
     */
    public function setIsEc2($is_ec2)
    {
        $this->container['is_ec2'] = $is_ec2;

        return $this;
    }

    /**
     * Gets is_vpc_selectable
     *
     * @return bool|null
     */
    public function getIsVpcSelectable()
    {
        return $this->container['is_vpc_selectable'];
    }

    /**
     * Sets is_vpc_selectable
     *
     * @param bool|null $is_vpc_selectable is_vpc_selectable
     *
     * @return self
     */
    public function setIsVpcSelectable($is_vpc_selectable)
    {
        $this->container['is_vpc_selectable'] = $is_vpc_selectable;

        return $this;
    }

    /**
     * Gets no_agent
     *
     * @return bool|null
     */
    public function getNoAgent()
    {
        return $this->container['no_agent'];
    }

    /**
     * Sets no_agent
     *
     * @param bool|null $no_agent no_agent
     *
     * @return self
     */
    public function setNoAgent($no_agent)
    {
        $this->container['no_agent'] = $no_agent;

        return $this;
    }

    /**
     * Gets security_groups
     *
     * @return \OpenAPI\Client\Model\InstanceConfigSecurityGroups[]|null
     */
    public function getSecurityGroups()
    {
        return $this->container['security_groups'];
    }

    /**
     * Sets security_groups
     *
     * @param \OpenAPI\Client\Model\InstanceConfigSecurityGroups[]|null $security_groups security_groups
     *
     * @return self
     */
    public function setSecurityGroups($security_groups)
    {
        $this->container['security_groups'] = $security_groups;

        return $this;
    }

    /**
     * Gets smbios_asset_tag
     *
     * @return string|null
     */
    public function getSmbiosAssetTag()
    {
        return $this->container['smbios_asset_tag'];
    }

    /**
     * Sets smbios_asset_tag
     *
     * @param string|null $smbios_asset_tag smbios_asset_tag
     *
     * @return self
     */
    public function setSmbiosAssetTag($smbios_asset_tag)
    {
        $this->container['smbios_asset_tag'] = $smbios_asset_tag;

        return $this;
    }

    /**
     * Gets nested_virtualization
     *
     * @return string|null
     */
    public function getNestedVirtualization()
    {
        return $this->container['nested_virtualization'];
    }

    /**
     * Sets nested_virtualization
     *
     * @param string|null $nested_virtualization nested_virtualization
     *
     * @return self
     */
    public function setNestedVirtualization($nested_virtualization)
    {
        $this->container['nested_virtualization'] = $nested_virtualization;

        return $this;
    }

    /**
     * Gets vmware_folder_id
     *
     * @return string|null
     */
    public function getVmwareFolderId()
    {
        return $this->container['vmware_folder_id'];
    }

    /**
     * Sets vmware_folder_id
     *
     * @param string|null $vmware_folder_id vmware_folder_id
     *
     * @return self
     */
    public function setVmwareFolderId($vmware_folder_id)
    {
        $this->container['vmware_folder_id'] = $vmware_folder_id;

        return $this;
    }

    /**
     * Gets custom_options
     *
     * @return object|null
     */
    public function getCustomOptions()
    {
        return $this->container['custom_options'];
    }

    /**
     * Sets custom_options
     *
     * @param object|null $custom_options custom_options
     *
     * @return self
     */
    public function setCustomOptions($custom_options)
    {
        $this->container['custom_options'] = $custom_options;

        return $this;
    }

    /**
     * Gets resource_pool_id
     *
     * @return int|null
     */
    public function getResourcePoolId()
    {
        return $this->container['resource_pool_id'];
    }

    /**
     * Sets resource_pool_id
     *
     * @param int|null $resource_pool_id resource_pool_id
     *
     * @return self
     */
    public function setResourcePoolId($resource_pool_id)
    {
        $this->container['resource_pool_id'] = $resource_pool_id;

        return $this;
    }

    /**
     * Gets pool_provider_type
     *
     * @return string|null
     */
    public function getPoolProviderType()
    {
        return $this->container['pool_provider_type'];
    }

    /**
     * Sets pool_provider_type
     *
     * @param string|null $pool_provider_type pool_provider_type
     *
     * @return self
     */
    public function setPoolProviderType($pool_provider_type)
    {
        $this->container['pool_provider_type'] = $pool_provider_type;

        return $this;
    }

    /**
     * Gets user_group
     *
     * @return \OpenAPI\Client\Model\InstanceConfigSecurityGroups|null
     */
    public function getUserGroup()
    {
        return $this->container['user_group'];
    }

    /**
     * Sets user_group
     *
     * @param \OpenAPI\Client\Model\InstanceConfigSecurityGroups|null $user_group user_group
     *
     * @return self
     */
    public function setUserGroup($user_group)
    {
        $this->container['user_group'] = $user_group;

        return $this;
    }

    /**
     * Gets expire_days
     *
     * @return string|null
     */
    public function getExpireDays()
    {
        return $this->container['expire_days'];
    }

    /**
     * Sets expire_days
     *
     * @param string|null $expire_days expire_days
     *
     * @return self
     */
    public function setExpireDays($expire_days)
    {
        $this->container['expire_days'] = $expire_days;

        return $this;
    }

    /**
     * Gets shutdown_days
     *
     * @return string|null
     */
    public function getShutdownDays()
    {
        return $this->container['shutdown_days'];
    }

    /**
     * Sets shutdown_days
     *
     * @param string|null $shutdown_days shutdown_days
     *
     * @return self
     */
    public function setShutdownDays($shutdown_days)
    {
        $this->container['shutdown_days'] = $shutdown_days;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets host_name
     *
     * @return string|null
     */
    public function getHostName()
    {
        return $this->container['host_name'];
    }

    /**
     * Sets host_name
     *
     * @param string|null $host_name host_name
     *
     * @return self
     */
    public function setHostName($host_name)
    {
        $this->container['host_name'] = $host_name;

        return $this;
    }

    /**
     * Gets instance_type
     *
     * @return \OpenAPI\Client\Model\InstanceConfigInstanceType|null
     */
    public function getInstanceType()
    {
        return $this->container['instance_type'];
    }

    /**
     * Sets instance_type
     *
     * @param \OpenAPI\Client\Model\InstanceConfigInstanceType|null $instance_type instance_type
     *
     * @return self
     */
    public function setInstanceType($instance_type)
    {
        $this->container['instance_type'] = $instance_type;

        return $this;
    }

    /**
     * Gets site
     *
     * @return \OpenAPI\Client\Model\ApiBlueprintsIdUpdatePermissionsResourcePermissionSites|null
     */
    public function getSite()
    {
        return $this->container['site'];
    }

    /**
     * Sets site
     *
     * @param \OpenAPI\Client\Model\ApiBlueprintsIdUpdatePermissionsResourcePermissionSites|null $site site
     *
     * @return self
     */
    public function setSite($site)
    {
        $this->container['site'] = $site;

        return $this;
    }

    /**
     * Gets environment_prefix
     *
     * @return string|null
     */
    public function getEnvironmentPrefix()
    {
        return $this->container['environment_prefix'];
    }

    /**
     * Sets environment_prefix
     *
     * @param string|null $environment_prefix environment_prefix
     *
     * @return self
     */
    public function setEnvironmentPrefix($environment_prefix)
    {
        $this->container['environment_prefix'] = $environment_prefix;

        return $this;
    }

    /**
     * Gets layout
     *
     * @return \OpenAPI\Client\Model\InstanceConfigLayout|null
     */
    public function getLayout()
    {
        return $this->container['layout'];
    }

    /**
     * Sets layout
     *
     * @param \OpenAPI\Client\Model\InstanceConfigLayout|null $layout layout
     *
     * @return self
     */
    public function setLayout($layout)
    {
        $this->container['layout'] = $layout;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string|null $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets instance_context
     *
     * @return string|null
     */
    public function getInstanceContext()
    {
        return $this->container['instance_context'];
    }

    /**
     * Sets instance_context
     *
     * @param string|null $instance_context instance_context
     *
     * @return self
     */
    public function setInstanceContext($instance_context)
    {
        $this->container['instance_context'] = $instance_context;

        return $this;
    }

    /**
     * Gets memory_display
     *
     * @return string|null
     */
    public function getMemoryDisplay()
    {
        return $this->container['memory_display'];
    }

    /**
     * Sets memory_display
     *
     * @param string|null $memory_display memory_display
     *
     * @return self
     */
    public function setMemoryDisplay($memory_display)
    {
        $this->container['memory_display'] = $memory_display;

        return $this;
    }

    /**
     * Gets expose
     *
     * @return object[]|null
     */
    public function getExpose()
    {
        return $this->container['expose'];
    }

    /**
     * Sets expose
     *
     * @param object[]|null $expose expose
     *
     * @return self
     */
    public function setExpose($expose)
    {
        $this->container['expose'] = $expose;

        return $this;
    }

    /**
     * Gets create_backup
     *
     * @return bool|null
     */
    public function getCreateBackup()
    {
        return $this->container['create_backup'];
    }

    /**
     * Sets create_backup
     *
     * @param bool|null $create_backup create_backup
     *
     * @return self
     */
    public function setCreateBackup($create_backup)
    {
        $this->container['create_backup'] = $create_backup;

        return $this;
    }

    /**
     * Gets backup
     *
     * @return \OpenAPI\Client\Model\InstanceConfigBackup|null
     */
    public function getBackup()
    {
        return $this->container['backup'];
    }

    /**
     * Sets backup
     *
     * @param \OpenAPI\Client\Model\InstanceConfigBackup|null $backup backup
     *
     * @return self
     */
    public function setBackup($backup)
    {
        $this->container['backup'] = $backup;

        return $this;
    }

    /**
     * Gets replication_group
     *
     * @return \OpenAPI\Client\Model\InstanceConfigReplicationGroup|null
     */
    public function getReplicationGroup()
    {
        return $this->container['replication_group'];
    }

    /**
     * Sets replication_group
     *
     * @param \OpenAPI\Client\Model\InstanceConfigReplicationGroup|null $replication_group replication_group
     *
     * @return self
     */
    public function setReplicationGroup($replication_group)
    {
        $this->container['replication_group'] = $replication_group;

        return $this;
    }

    /**
     * Gets layout_size
     *
     * @return int|null
     */
    public function getLayoutSize()
    {
        return $this->container['layout_size'];
    }

    /**
     * Sets layout_size
     *
     * @param int|null $layout_size layout_size
     *
     * @return self
     */
    public function setLayoutSize($layout_size)
    {
        $this->container['layout_size'] = $layout_size;

        return $this;
    }

    /**
     * Gets lb_instances
     *
     * @return object[]|null
     */
    public function getLbInstances()
    {
        return $this->container['lb_instances'];
    }

    /**
     * Sets lb_instances
     *
     * @param object[]|null $lb_instances lb_instances
     *
     * @return self
     */
    public function setLbInstances($lb_instances)
    {
        $this->container['lb_instances'] = $lb_instances;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


