<?php
/**
 * UserSettingsUser
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * UserSettingsUser Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class UserSettingsUser implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'userSettings_user';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'username' => 'string',
        'first_name' => 'string',
        'last_name' => 'string',
        'email' => 'string',
        'linux_username' => 'string',
        'linux_password' => 'string',
        'linux_key_pair_id' => 'int',
        'windows_username' => 'string',
        'windows_password' => 'string',
        'avatar' => 'string',
        'desktop_background' => 'string',
        'receive_notifications' => 'bool',
        'default_group' => '\OpenAPI\Client\Model\InlineResponse20040AppDeployInstance',
        'default_cloud' => '\OpenAPI\Client\Model\InlineResponse20040AppDeployInstance',
        'default_persona' => '\OpenAPI\Client\Model\InlineResponse20079LoadBalancerMonitorLoadBalancerType',
        'is_using2_fa' => 'bool',
        'tenant' => '\OpenAPI\Client\Model\InlineResponse20040AppDeployInstance'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int64',
        'username' => null,
        'first_name' => null,
        'last_name' => null,
        'email' => null,
        'linux_username' => null,
        'linux_password' => null,
        'linux_key_pair_id' => 'int64',
        'windows_username' => null,
        'windows_password' => null,
        'avatar' => null,
        'desktop_background' => null,
        'receive_notifications' => null,
        'default_group' => null,
        'default_cloud' => null,
        'default_persona' => null,
        'is_using2_fa' => null,
        'tenant' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'username' => 'username',
        'first_name' => 'firstName',
        'last_name' => 'lastName',
        'email' => 'email',
        'linux_username' => 'linuxUsername',
        'linux_password' => 'linuxPassword',
        'linux_key_pair_id' => 'linuxKeyPairId',
        'windows_username' => 'windowsUsername',
        'windows_password' => 'windowsPassword',
        'avatar' => 'avatar',
        'desktop_background' => 'desktopBackground',
        'receive_notifications' => 'receiveNotifications',
        'default_group' => 'defaultGroup',
        'default_cloud' => 'defaultCloud',
        'default_persona' => 'defaultPersona',
        'is_using2_fa' => 'isUsing2FA',
        'tenant' => 'tenant'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'username' => 'setUsername',
        'first_name' => 'setFirstName',
        'last_name' => 'setLastName',
        'email' => 'setEmail',
        'linux_username' => 'setLinuxUsername',
        'linux_password' => 'setLinuxPassword',
        'linux_key_pair_id' => 'setLinuxKeyPairId',
        'windows_username' => 'setWindowsUsername',
        'windows_password' => 'setWindowsPassword',
        'avatar' => 'setAvatar',
        'desktop_background' => 'setDesktopBackground',
        'receive_notifications' => 'setReceiveNotifications',
        'default_group' => 'setDefaultGroup',
        'default_cloud' => 'setDefaultCloud',
        'default_persona' => 'setDefaultPersona',
        'is_using2_fa' => 'setIsUsing2Fa',
        'tenant' => 'setTenant'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'username' => 'getUsername',
        'first_name' => 'getFirstName',
        'last_name' => 'getLastName',
        'email' => 'getEmail',
        'linux_username' => 'getLinuxUsername',
        'linux_password' => 'getLinuxPassword',
        'linux_key_pair_id' => 'getLinuxKeyPairId',
        'windows_username' => 'getWindowsUsername',
        'windows_password' => 'getWindowsPassword',
        'avatar' => 'getAvatar',
        'desktop_background' => 'getDesktopBackground',
        'receive_notifications' => 'getReceiveNotifications',
        'default_group' => 'getDefaultGroup',
        'default_cloud' => 'getDefaultCloud',
        'default_persona' => 'getDefaultPersona',
        'is_using2_fa' => 'getIsUsing2Fa',
        'tenant' => 'getTenant'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['username'] = $data['username'] ?? null;
        $this->container['first_name'] = $data['first_name'] ?? null;
        $this->container['last_name'] = $data['last_name'] ?? null;
        $this->container['email'] = $data['email'] ?? null;
        $this->container['linux_username'] = $data['linux_username'] ?? null;
        $this->container['linux_password'] = $data['linux_password'] ?? null;
        $this->container['linux_key_pair_id'] = $data['linux_key_pair_id'] ?? null;
        $this->container['windows_username'] = $data['windows_username'] ?? null;
        $this->container['windows_password'] = $data['windows_password'] ?? null;
        $this->container['avatar'] = $data['avatar'] ?? null;
        $this->container['desktop_background'] = $data['desktop_background'] ?? null;
        $this->container['receive_notifications'] = $data['receive_notifications'] ?? null;
        $this->container['default_group'] = $data['default_group'] ?? null;
        $this->container['default_cloud'] = $data['default_cloud'] ?? null;
        $this->container['default_persona'] = $data['default_persona'] ?? null;
        $this->container['is_using2_fa'] = $data['is_using2_fa'] ?? null;
        $this->container['tenant'] = $data['tenant'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets username
     *
     * @return string|null
     */
    public function getUsername()
    {
        return $this->container['username'];
    }

    /**
     * Sets username
     *
     * @param string|null $username username
     *
     * @return self
     */
    public function setUsername($username)
    {
        $this->container['username'] = $username;

        return $this;
    }

    /**
     * Gets first_name
     *
     * @return string|null
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     *
     * @param string|null $first_name first_name
     *
     * @return self
     */
    public function setFirstName($first_name)
    {
        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets last_name
     *
     * @return string|null
     */
    public function getLastName()
    {
        return $this->container['last_name'];
    }

    /**
     * Sets last_name
     *
     * @param string|null $last_name last_name
     *
     * @return self
     */
    public function setLastName($last_name)
    {
        $this->container['last_name'] = $last_name;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string|null $email email
     *
     * @return self
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets linux_username
     *
     * @return string|null
     */
    public function getLinuxUsername()
    {
        return $this->container['linux_username'];
    }

    /**
     * Sets linux_username
     *
     * @param string|null $linux_username linux_username
     *
     * @return self
     */
    public function setLinuxUsername($linux_username)
    {
        $this->container['linux_username'] = $linux_username;

        return $this;
    }

    /**
     * Gets linux_password
     *
     * @return string|null
     */
    public function getLinuxPassword()
    {
        return $this->container['linux_password'];
    }

    /**
     * Sets linux_password
     *
     * @param string|null $linux_password linux_password
     *
     * @return self
     */
    public function setLinuxPassword($linux_password)
    {
        $this->container['linux_password'] = $linux_password;

        return $this;
    }

    /**
     * Gets linux_key_pair_id
     *
     * @return int|null
     */
    public function getLinuxKeyPairId()
    {
        return $this->container['linux_key_pair_id'];
    }

    /**
     * Sets linux_key_pair_id
     *
     * @param int|null $linux_key_pair_id linux_key_pair_id
     *
     * @return self
     */
    public function setLinuxKeyPairId($linux_key_pair_id)
    {
        $this->container['linux_key_pair_id'] = $linux_key_pair_id;

        return $this;
    }

    /**
     * Gets windows_username
     *
     * @return string|null
     */
    public function getWindowsUsername()
    {
        return $this->container['windows_username'];
    }

    /**
     * Sets windows_username
     *
     * @param string|null $windows_username windows_username
     *
     * @return self
     */
    public function setWindowsUsername($windows_username)
    {
        $this->container['windows_username'] = $windows_username;

        return $this;
    }

    /**
     * Gets windows_password
     *
     * @return string|null
     */
    public function getWindowsPassword()
    {
        return $this->container['windows_password'];
    }

    /**
     * Sets windows_password
     *
     * @param string|null $windows_password windows_password
     *
     * @return self
     */
    public function setWindowsPassword($windows_password)
    {
        $this->container['windows_password'] = $windows_password;

        return $this;
    }

    /**
     * Gets avatar
     *
     * @return string|null
     */
    public function getAvatar()
    {
        return $this->container['avatar'];
    }

    /**
     * Sets avatar
     *
     * @param string|null $avatar avatar
     *
     * @return self
     */
    public function setAvatar($avatar)
    {
        $this->container['avatar'] = $avatar;

        return $this;
    }

    /**
     * Gets desktop_background
     *
     * @return string|null
     */
    public function getDesktopBackground()
    {
        return $this->container['desktop_background'];
    }

    /**
     * Sets desktop_background
     *
     * @param string|null $desktop_background desktop_background
     *
     * @return self
     */
    public function setDesktopBackground($desktop_background)
    {
        $this->container['desktop_background'] = $desktop_background;

        return $this;
    }

    /**
     * Gets receive_notifications
     *
     * @return bool|null
     */
    public function getReceiveNotifications()
    {
        return $this->container['receive_notifications'];
    }

    /**
     * Sets receive_notifications
     *
     * @param bool|null $receive_notifications receive_notifications
     *
     * @return self
     */
    public function setReceiveNotifications($receive_notifications)
    {
        $this->container['receive_notifications'] = $receive_notifications;

        return $this;
    }

    /**
     * Gets default_group
     *
     * @return \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null
     */
    public function getDefaultGroup()
    {
        return $this->container['default_group'];
    }

    /**
     * Sets default_group
     *
     * @param \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null $default_group default_group
     *
     * @return self
     */
    public function setDefaultGroup($default_group)
    {
        $this->container['default_group'] = $default_group;

        return $this;
    }

    /**
     * Gets default_cloud
     *
     * @return \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null
     */
    public function getDefaultCloud()
    {
        return $this->container['default_cloud'];
    }

    /**
     * Sets default_cloud
     *
     * @param \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null $default_cloud default_cloud
     *
     * @return self
     */
    public function setDefaultCloud($default_cloud)
    {
        $this->container['default_cloud'] = $default_cloud;

        return $this;
    }

    /**
     * Gets default_persona
     *
     * @return \OpenAPI\Client\Model\InlineResponse20079LoadBalancerMonitorLoadBalancerType|null
     */
    public function getDefaultPersona()
    {
        return $this->container['default_persona'];
    }

    /**
     * Sets default_persona
     *
     * @param \OpenAPI\Client\Model\InlineResponse20079LoadBalancerMonitorLoadBalancerType|null $default_persona default_persona
     *
     * @return self
     */
    public function setDefaultPersona($default_persona)
    {
        $this->container['default_persona'] = $default_persona;

        return $this;
    }

    /**
     * Gets is_using2_fa
     *
     * @return bool|null
     */
    public function getIsUsing2Fa()
    {
        return $this->container['is_using2_fa'];
    }

    /**
     * Sets is_using2_fa
     *
     * @param bool|null $is_using2_fa is_using2_fa
     *
     * @return self
     */
    public function setIsUsing2Fa($is_using2_fa)
    {
        $this->container['is_using2_fa'] = $is_using2_fa;

        return $this;
    }

    /**
     * Gets tenant
     *
     * @return \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null
     */
    public function getTenant()
    {
        return $this->container['tenant'];
    }

    /**
     * Sets tenant
     *
     * @param \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null $tenant tenant
     *
     * @return self
     */
    public function setTenant($tenant)
    {
        $this->container['tenant'] = $tenant;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


