<?php
/**
 * ZoneAwsConfig
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ZoneAwsConfig Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class ZoneAwsConfig implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'zoneAwsConfig';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'endpoint' => 'string',
        'access_key' => 'string',
        'secret_key' => 'string',
        '_use_host_credentials' => 'string',
        'sts_assume_role' => 'string',
        'is_vpc' => 'string',
        'vpc' => 'string',
        'image_store_id' => 'string',
        'ebs_encryption' => 'string',
        'costing_report' => 'string',
        'costing_folder' => 'string',
        'costing_bucket' => 'string',
        'costing_bucket_name' => 'string',
        'costing_region' => 'string',
        'costing_access_key' => 'string',
        'costing_secret_key' => 'string',
        'costing_report_name' => 'string',
        'appliance_url' => 'string',
        'datacenter_name' => 'string',
        'network_server_id' => 'string',
        'network_server' => '\OpenAPI\Client\Model\ZoneVcenterConfigNetworkServer',
        'security_server' => 'string',
        'certificate_provider' => 'string',
        'backup_mode' => 'string',
        'replication_mode' => 'string',
        'dns_integration_id' => 'string',
        'service_registry_id' => 'string',
        'config_management_id' => 'string',
        'config_cmdb_discovery' => 'bool',
        'secret_key_hash' => 'string',
        'costing_secret_key_hash' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'endpoint' => null,
        'access_key' => null,
        'secret_key' => null,
        '_use_host_credentials' => null,
        'sts_assume_role' => null,
        'is_vpc' => null,
        'vpc' => null,
        'image_store_id' => null,
        'ebs_encryption' => null,
        'costing_report' => null,
        'costing_folder' => null,
        'costing_bucket' => null,
        'costing_bucket_name' => null,
        'costing_region' => null,
        'costing_access_key' => null,
        'costing_secret_key' => null,
        'costing_report_name' => null,
        'appliance_url' => null,
        'datacenter_name' => null,
        'network_server_id' => null,
        'network_server' => null,
        'security_server' => null,
        'certificate_provider' => null,
        'backup_mode' => null,
        'replication_mode' => null,
        'dns_integration_id' => null,
        'service_registry_id' => null,
        'config_management_id' => null,
        'config_cmdb_discovery' => null,
        'secret_key_hash' => null,
        'costing_secret_key_hash' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'endpoint' => 'endpoint',
        'access_key' => 'accessKey',
        'secret_key' => 'secretKey',
        '_use_host_credentials' => '_useHostCredentials',
        'sts_assume_role' => 'stsAssumeRole',
        'is_vpc' => 'isVpc',
        'vpc' => 'vpc',
        'image_store_id' => 'imageStoreId',
        'ebs_encryption' => 'ebsEncryption',
        'costing_report' => 'costingReport',
        'costing_folder' => 'costingFolder',
        'costing_bucket' => 'costingBucket',
        'costing_bucket_name' => 'costingBucketName',
        'costing_region' => 'costingRegion',
        'costing_access_key' => 'costingAccessKey',
        'costing_secret_key' => 'costingSecretKey',
        'costing_report_name' => 'costingReportName',
        'appliance_url' => 'applianceUrl',
        'datacenter_name' => 'datacenterName',
        'network_server_id' => 'networkServer.id',
        'network_server' => 'networkServer',
        'security_server' => 'securityServer',
        'certificate_provider' => 'certificateProvider',
        'backup_mode' => 'backupMode',
        'replication_mode' => 'replicationMode',
        'dns_integration_id' => 'dnsIntegrationId',
        'service_registry_id' => 'serviceRegistryId',
        'config_management_id' => 'configManagementId',
        'config_cmdb_discovery' => 'configCmdbDiscovery',
        'secret_key_hash' => 'secretKeyHash',
        'costing_secret_key_hash' => 'costingSecretKeyHash'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'endpoint' => 'setEndpoint',
        'access_key' => 'setAccessKey',
        'secret_key' => 'setSecretKey',
        '_use_host_credentials' => 'setUseHostCredentials',
        'sts_assume_role' => 'setStsAssumeRole',
        'is_vpc' => 'setIsVpc',
        'vpc' => 'setVpc',
        'image_store_id' => 'setImageStoreId',
        'ebs_encryption' => 'setEbsEncryption',
        'costing_report' => 'setCostingReport',
        'costing_folder' => 'setCostingFolder',
        'costing_bucket' => 'setCostingBucket',
        'costing_bucket_name' => 'setCostingBucketName',
        'costing_region' => 'setCostingRegion',
        'costing_access_key' => 'setCostingAccessKey',
        'costing_secret_key' => 'setCostingSecretKey',
        'costing_report_name' => 'setCostingReportName',
        'appliance_url' => 'setApplianceUrl',
        'datacenter_name' => 'setDatacenterName',
        'network_server_id' => 'setNetworkServerId',
        'network_server' => 'setNetworkServer',
        'security_server' => 'setSecurityServer',
        'certificate_provider' => 'setCertificateProvider',
        'backup_mode' => 'setBackupMode',
        'replication_mode' => 'setReplicationMode',
        'dns_integration_id' => 'setDnsIntegrationId',
        'service_registry_id' => 'setServiceRegistryId',
        'config_management_id' => 'setConfigManagementId',
        'config_cmdb_discovery' => 'setConfigCmdbDiscovery',
        'secret_key_hash' => 'setSecretKeyHash',
        'costing_secret_key_hash' => 'setCostingSecretKeyHash'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'endpoint' => 'getEndpoint',
        'access_key' => 'getAccessKey',
        'secret_key' => 'getSecretKey',
        '_use_host_credentials' => 'getUseHostCredentials',
        'sts_assume_role' => 'getStsAssumeRole',
        'is_vpc' => 'getIsVpc',
        'vpc' => 'getVpc',
        'image_store_id' => 'getImageStoreId',
        'ebs_encryption' => 'getEbsEncryption',
        'costing_report' => 'getCostingReport',
        'costing_folder' => 'getCostingFolder',
        'costing_bucket' => 'getCostingBucket',
        'costing_bucket_name' => 'getCostingBucketName',
        'costing_region' => 'getCostingRegion',
        'costing_access_key' => 'getCostingAccessKey',
        'costing_secret_key' => 'getCostingSecretKey',
        'costing_report_name' => 'getCostingReportName',
        'appliance_url' => 'getApplianceUrl',
        'datacenter_name' => 'getDatacenterName',
        'network_server_id' => 'getNetworkServerId',
        'network_server' => 'getNetworkServer',
        'security_server' => 'getSecurityServer',
        'certificate_provider' => 'getCertificateProvider',
        'backup_mode' => 'getBackupMode',
        'replication_mode' => 'getReplicationMode',
        'dns_integration_id' => 'getDnsIntegrationId',
        'service_registry_id' => 'getServiceRegistryId',
        'config_management_id' => 'getConfigManagementId',
        'config_cmdb_discovery' => 'getConfigCmdbDiscovery',
        'secret_key_hash' => 'getSecretKeyHash',
        'costing_secret_key_hash' => 'getCostingSecretKeyHash'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['endpoint'] = $data['endpoint'] ?? null;
        $this->container['access_key'] = $data['access_key'] ?? null;
        $this->container['secret_key'] = $data['secret_key'] ?? null;
        $this->container['_use_host_credentials'] = $data['_use_host_credentials'] ?? null;
        $this->container['sts_assume_role'] = $data['sts_assume_role'] ?? null;
        $this->container['is_vpc'] = $data['is_vpc'] ?? null;
        $this->container['vpc'] = $data['vpc'] ?? null;
        $this->container['image_store_id'] = $data['image_store_id'] ?? null;
        $this->container['ebs_encryption'] = $data['ebs_encryption'] ?? null;
        $this->container['costing_report'] = $data['costing_report'] ?? null;
        $this->container['costing_folder'] = $data['costing_folder'] ?? null;
        $this->container['costing_bucket'] = $data['costing_bucket'] ?? null;
        $this->container['costing_bucket_name'] = $data['costing_bucket_name'] ?? null;
        $this->container['costing_region'] = $data['costing_region'] ?? null;
        $this->container['costing_access_key'] = $data['costing_access_key'] ?? null;
        $this->container['costing_secret_key'] = $data['costing_secret_key'] ?? null;
        $this->container['costing_report_name'] = $data['costing_report_name'] ?? null;
        $this->container['appliance_url'] = $data['appliance_url'] ?? null;
        $this->container['datacenter_name'] = $data['datacenter_name'] ?? null;
        $this->container['network_server_id'] = $data['network_server_id'] ?? null;
        $this->container['network_server'] = $data['network_server'] ?? null;
        $this->container['security_server'] = $data['security_server'] ?? null;
        $this->container['certificate_provider'] = $data['certificate_provider'] ?? null;
        $this->container['backup_mode'] = $data['backup_mode'] ?? null;
        $this->container['replication_mode'] = $data['replication_mode'] ?? null;
        $this->container['dns_integration_id'] = $data['dns_integration_id'] ?? null;
        $this->container['service_registry_id'] = $data['service_registry_id'] ?? null;
        $this->container['config_management_id'] = $data['config_management_id'] ?? null;
        $this->container['config_cmdb_discovery'] = $data['config_cmdb_discovery'] ?? null;
        $this->container['secret_key_hash'] = $data['secret_key_hash'] ?? null;
        $this->container['costing_secret_key_hash'] = $data['costing_secret_key_hash'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets endpoint
     *
     * @return string|null
     */
    public function getEndpoint()
    {
        return $this->container['endpoint'];
    }

    /**
     * Sets endpoint
     *
     * @param string|null $endpoint endpoint
     *
     * @return self
     */
    public function setEndpoint($endpoint)
    {
        $this->container['endpoint'] = $endpoint;

        return $this;
    }

    /**
     * Gets access_key
     *
     * @return string|null
     */
    public function getAccessKey()
    {
        return $this->container['access_key'];
    }

    /**
     * Sets access_key
     *
     * @param string|null $access_key access_key
     *
     * @return self
     */
    public function setAccessKey($access_key)
    {
        $this->container['access_key'] = $access_key;

        return $this;
    }

    /**
     * Gets secret_key
     *
     * @return string|null
     */
    public function getSecretKey()
    {
        return $this->container['secret_key'];
    }

    /**
     * Sets secret_key
     *
     * @param string|null $secret_key secret_key
     *
     * @return self
     */
    public function setSecretKey($secret_key)
    {
        $this->container['secret_key'] = $secret_key;

        return $this;
    }

    /**
     * Gets _use_host_credentials
     *
     * @return string|null
     */
    public function getUseHostCredentials()
    {
        return $this->container['_use_host_credentials'];
    }

    /**
     * Sets _use_host_credentials
     *
     * @param string|null $_use_host_credentials _use_host_credentials
     *
     * @return self
     */
    public function setUseHostCredentials($_use_host_credentials)
    {
        $this->container['_use_host_credentials'] = $_use_host_credentials;

        return $this;
    }

    /**
     * Gets sts_assume_role
     *
     * @return string|null
     */
    public function getStsAssumeRole()
    {
        return $this->container['sts_assume_role'];
    }

    /**
     * Sets sts_assume_role
     *
     * @param string|null $sts_assume_role sts_assume_role
     *
     * @return self
     */
    public function setStsAssumeRole($sts_assume_role)
    {
        $this->container['sts_assume_role'] = $sts_assume_role;

        return $this;
    }

    /**
     * Gets is_vpc
     *
     * @return string|null
     */
    public function getIsVpc()
    {
        return $this->container['is_vpc'];
    }

    /**
     * Sets is_vpc
     *
     * @param string|null $is_vpc is_vpc
     *
     * @return self
     */
    public function setIsVpc($is_vpc)
    {
        $this->container['is_vpc'] = $is_vpc;

        return $this;
    }

    /**
     * Gets vpc
     *
     * @return string|null
     */
    public function getVpc()
    {
        return $this->container['vpc'];
    }

    /**
     * Sets vpc
     *
     * @param string|null $vpc vpc
     *
     * @return self
     */
    public function setVpc($vpc)
    {
        $this->container['vpc'] = $vpc;

        return $this;
    }

    /**
     * Gets image_store_id
     *
     * @return string|null
     */
    public function getImageStoreId()
    {
        return $this->container['image_store_id'];
    }

    /**
     * Sets image_store_id
     *
     * @param string|null $image_store_id image_store_id
     *
     * @return self
     */
    public function setImageStoreId($image_store_id)
    {
        $this->container['image_store_id'] = $image_store_id;

        return $this;
    }

    /**
     * Gets ebs_encryption
     *
     * @return string|null
     */
    public function getEbsEncryption()
    {
        return $this->container['ebs_encryption'];
    }

    /**
     * Sets ebs_encryption
     *
     * @param string|null $ebs_encryption ebs_encryption
     *
     * @return self
     */
    public function setEbsEncryption($ebs_encryption)
    {
        $this->container['ebs_encryption'] = $ebs_encryption;

        return $this;
    }

    /**
     * Gets costing_report
     *
     * @return string|null
     */
    public function getCostingReport()
    {
        return $this->container['costing_report'];
    }

    /**
     * Sets costing_report
     *
     * @param string|null $costing_report costing_report
     *
     * @return self
     */
    public function setCostingReport($costing_report)
    {
        $this->container['costing_report'] = $costing_report;

        return $this;
    }

    /**
     * Gets costing_folder
     *
     * @return string|null
     */
    public function getCostingFolder()
    {
        return $this->container['costing_folder'];
    }

    /**
     * Sets costing_folder
     *
     * @param string|null $costing_folder costing_folder
     *
     * @return self
     */
    public function setCostingFolder($costing_folder)
    {
        $this->container['costing_folder'] = $costing_folder;

        return $this;
    }

    /**
     * Gets costing_bucket
     *
     * @return string|null
     */
    public function getCostingBucket()
    {
        return $this->container['costing_bucket'];
    }

    /**
     * Sets costing_bucket
     *
     * @param string|null $costing_bucket costing_bucket
     *
     * @return self
     */
    public function setCostingBucket($costing_bucket)
    {
        $this->container['costing_bucket'] = $costing_bucket;

        return $this;
    }

    /**
     * Gets costing_bucket_name
     *
     * @return string|null
     */
    public function getCostingBucketName()
    {
        return $this->container['costing_bucket_name'];
    }

    /**
     * Sets costing_bucket_name
     *
     * @param string|null $costing_bucket_name costing_bucket_name
     *
     * @return self
     */
    public function setCostingBucketName($costing_bucket_name)
    {
        $this->container['costing_bucket_name'] = $costing_bucket_name;

        return $this;
    }

    /**
     * Gets costing_region
     *
     * @return string|null
     */
    public function getCostingRegion()
    {
        return $this->container['costing_region'];
    }

    /**
     * Sets costing_region
     *
     * @param string|null $costing_region costing_region
     *
     * @return self
     */
    public function setCostingRegion($costing_region)
    {
        $this->container['costing_region'] = $costing_region;

        return $this;
    }

    /**
     * Gets costing_access_key
     *
     * @return string|null
     */
    public function getCostingAccessKey()
    {
        return $this->container['costing_access_key'];
    }

    /**
     * Sets costing_access_key
     *
     * @param string|null $costing_access_key costing_access_key
     *
     * @return self
     */
    public function setCostingAccessKey($costing_access_key)
    {
        $this->container['costing_access_key'] = $costing_access_key;

        return $this;
    }

    /**
     * Gets costing_secret_key
     *
     * @return string|null
     */
    public function getCostingSecretKey()
    {
        return $this->container['costing_secret_key'];
    }

    /**
     * Sets costing_secret_key
     *
     * @param string|null $costing_secret_key costing_secret_key
     *
     * @return self
     */
    public function setCostingSecretKey($costing_secret_key)
    {
        $this->container['costing_secret_key'] = $costing_secret_key;

        return $this;
    }

    /**
     * Gets costing_report_name
     *
     * @return string|null
     */
    public function getCostingReportName()
    {
        return $this->container['costing_report_name'];
    }

    /**
     * Sets costing_report_name
     *
     * @param string|null $costing_report_name costing_report_name
     *
     * @return self
     */
    public function setCostingReportName($costing_report_name)
    {
        $this->container['costing_report_name'] = $costing_report_name;

        return $this;
    }

    /**
     * Gets appliance_url
     *
     * @return string|null
     */
    public function getApplianceUrl()
    {
        return $this->container['appliance_url'];
    }

    /**
     * Sets appliance_url
     *
     * @param string|null $appliance_url appliance_url
     *
     * @return self
     */
    public function setApplianceUrl($appliance_url)
    {
        $this->container['appliance_url'] = $appliance_url;

        return $this;
    }

    /**
     * Gets datacenter_name
     *
     * @return string|null
     */
    public function getDatacenterName()
    {
        return $this->container['datacenter_name'];
    }

    /**
     * Sets datacenter_name
     *
     * @param string|null $datacenter_name datacenter_name
     *
     * @return self
     */
    public function setDatacenterName($datacenter_name)
    {
        $this->container['datacenter_name'] = $datacenter_name;

        return $this;
    }

    /**
     * Gets network_server_id
     *
     * @return string|null
     */
    public function getNetworkServerId()
    {
        return $this->container['network_server_id'];
    }

    /**
     * Sets network_server_id
     *
     * @param string|null $network_server_id network_server_id
     *
     * @return self
     */
    public function setNetworkServerId($network_server_id)
    {
        $this->container['network_server_id'] = $network_server_id;

        return $this;
    }

    /**
     * Gets network_server
     *
     * @return \OpenAPI\Client\Model\ZoneVcenterConfigNetworkServer|null
     */
    public function getNetworkServer()
    {
        return $this->container['network_server'];
    }

    /**
     * Sets network_server
     *
     * @param \OpenAPI\Client\Model\ZoneVcenterConfigNetworkServer|null $network_server network_server
     *
     * @return self
     */
    public function setNetworkServer($network_server)
    {
        $this->container['network_server'] = $network_server;

        return $this;
    }

    /**
     * Gets security_server
     *
     * @return string|null
     */
    public function getSecurityServer()
    {
        return $this->container['security_server'];
    }

    /**
     * Sets security_server
     *
     * @param string|null $security_server security_server
     *
     * @return self
     */
    public function setSecurityServer($security_server)
    {
        $this->container['security_server'] = $security_server;

        return $this;
    }

    /**
     * Gets certificate_provider
     *
     * @return string|null
     */
    public function getCertificateProvider()
    {
        return $this->container['certificate_provider'];
    }

    /**
     * Sets certificate_provider
     *
     * @param string|null $certificate_provider certificate_provider
     *
     * @return self
     */
    public function setCertificateProvider($certificate_provider)
    {
        $this->container['certificate_provider'] = $certificate_provider;

        return $this;
    }

    /**
     * Gets backup_mode
     *
     * @return string|null
     */
    public function getBackupMode()
    {
        return $this->container['backup_mode'];
    }

    /**
     * Sets backup_mode
     *
     * @param string|null $backup_mode backup_mode
     *
     * @return self
     */
    public function setBackupMode($backup_mode)
    {
        $this->container['backup_mode'] = $backup_mode;

        return $this;
    }

    /**
     * Gets replication_mode
     *
     * @return string|null
     */
    public function getReplicationMode()
    {
        return $this->container['replication_mode'];
    }

    /**
     * Sets replication_mode
     *
     * @param string|null $replication_mode replication_mode
     *
     * @return self
     */
    public function setReplicationMode($replication_mode)
    {
        $this->container['replication_mode'] = $replication_mode;

        return $this;
    }

    /**
     * Gets dns_integration_id
     *
     * @return string|null
     */
    public function getDnsIntegrationId()
    {
        return $this->container['dns_integration_id'];
    }

    /**
     * Sets dns_integration_id
     *
     * @param string|null $dns_integration_id dns_integration_id
     *
     * @return self
     */
    public function setDnsIntegrationId($dns_integration_id)
    {
        $this->container['dns_integration_id'] = $dns_integration_id;

        return $this;
    }

    /**
     * Gets service_registry_id
     *
     * @return string|null
     */
    public function getServiceRegistryId()
    {
        return $this->container['service_registry_id'];
    }

    /**
     * Sets service_registry_id
     *
     * @param string|null $service_registry_id service_registry_id
     *
     * @return self
     */
    public function setServiceRegistryId($service_registry_id)
    {
        $this->container['service_registry_id'] = $service_registry_id;

        return $this;
    }

    /**
     * Gets config_management_id
     *
     * @return string|null
     */
    public function getConfigManagementId()
    {
        return $this->container['config_management_id'];
    }

    /**
     * Sets config_management_id
     *
     * @param string|null $config_management_id config_management_id
     *
     * @return self
     */
    public function setConfigManagementId($config_management_id)
    {
        $this->container['config_management_id'] = $config_management_id;

        return $this;
    }

    /**
     * Gets config_cmdb_discovery
     *
     * @return bool|null
     */
    public function getConfigCmdbDiscovery()
    {
        return $this->container['config_cmdb_discovery'];
    }

    /**
     * Sets config_cmdb_discovery
     *
     * @param bool|null $config_cmdb_discovery config_cmdb_discovery
     *
     * @return self
     */
    public function setConfigCmdbDiscovery($config_cmdb_discovery)
    {
        $this->container['config_cmdb_discovery'] = $config_cmdb_discovery;

        return $this;
    }

    /**
     * Gets secret_key_hash
     *
     * @return string|null
     */
    public function getSecretKeyHash()
    {
        return $this->container['secret_key_hash'];
    }

    /**
     * Sets secret_key_hash
     *
     * @param string|null $secret_key_hash secret_key_hash
     *
     * @return self
     */
    public function setSecretKeyHash($secret_key_hash)
    {
        $this->container['secret_key_hash'] = $secret_key_hash;

        return $this;
    }

    /**
     * Gets costing_secret_key_hash
     *
     * @return string|null
     */
    public function getCostingSecretKeyHash()
    {
        return $this->container['costing_secret_key_hash'];
    }

    /**
     * Sets costing_secret_key_hash
     *
     * @param string|null $costing_secret_key_hash costing_secret_key_hash
     *
     * @return self
     */
    public function setCostingSecretKeyHash($costing_secret_key_hash)
    {
        $this->container['costing_secret_key_hash'] = $costing_secret_key_hash;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


