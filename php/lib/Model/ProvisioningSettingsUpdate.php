<?php
/**
 * ProvisioningSettingsUpdate
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ProvisioningSettingsUpdate Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class ProvisioningSettingsUpdate implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'provisioningSettingsUpdate';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'allow_zone_selection' => 'bool',
        'allow_server_selection' => 'bool',
        'require_environments' => 'bool',
        'show_pricing' => 'bool',
        'hide_datastore_stats' => 'bool',
        'cross_tenant_naming_policies' => 'bool',
        'reuse_sequence' => 'bool',
        'cloud_init_username' => 'string',
        'cloud_init_password' => 'string',
        'cloud_init_key_pair' => '\OpenAPI\Client\Model\ProvisioningSettingsUpdateCloudInitKeyPair',
        'deploy_storage_provider' => '\OpenAPI\Client\Model\ProvisioningSettingsUpdateDeployStorageProvider',
        'windows_password' => 'string',
        'pxe_root_password' => 'string',
        'default_template_type' => '\OpenAPI\Client\Model\ProvisioningSettingsUpdateDefaultTemplateType'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'allow_zone_selection' => null,
        'allow_server_selection' => null,
        'require_environments' => null,
        'show_pricing' => null,
        'hide_datastore_stats' => null,
        'cross_tenant_naming_policies' => null,
        'reuse_sequence' => null,
        'cloud_init_username' => null,
        'cloud_init_password' => null,
        'cloud_init_key_pair' => null,
        'deploy_storage_provider' => null,
        'windows_password' => null,
        'pxe_root_password' => null,
        'default_template_type' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'allow_zone_selection' => 'allowZoneSelection',
        'allow_server_selection' => 'allowServerSelection',
        'require_environments' => 'requireEnvironments',
        'show_pricing' => 'showPricing',
        'hide_datastore_stats' => 'hideDatastoreStats',
        'cross_tenant_naming_policies' => 'crossTenantNamingPolicies',
        'reuse_sequence' => 'reuseSequence',
        'cloud_init_username' => 'cloudInitUsername',
        'cloud_init_password' => 'cloudInitPassword',
        'cloud_init_key_pair' => 'cloudInitKeyPair',
        'deploy_storage_provider' => 'deployStorageProvider',
        'windows_password' => 'windowsPassword',
        'pxe_root_password' => 'pxeRootPassword',
        'default_template_type' => 'defaultTemplateType'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'allow_zone_selection' => 'setAllowZoneSelection',
        'allow_server_selection' => 'setAllowServerSelection',
        'require_environments' => 'setRequireEnvironments',
        'show_pricing' => 'setShowPricing',
        'hide_datastore_stats' => 'setHideDatastoreStats',
        'cross_tenant_naming_policies' => 'setCrossTenantNamingPolicies',
        'reuse_sequence' => 'setReuseSequence',
        'cloud_init_username' => 'setCloudInitUsername',
        'cloud_init_password' => 'setCloudInitPassword',
        'cloud_init_key_pair' => 'setCloudInitKeyPair',
        'deploy_storage_provider' => 'setDeployStorageProvider',
        'windows_password' => 'setWindowsPassword',
        'pxe_root_password' => 'setPxeRootPassword',
        'default_template_type' => 'setDefaultTemplateType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'allow_zone_selection' => 'getAllowZoneSelection',
        'allow_server_selection' => 'getAllowServerSelection',
        'require_environments' => 'getRequireEnvironments',
        'show_pricing' => 'getShowPricing',
        'hide_datastore_stats' => 'getHideDatastoreStats',
        'cross_tenant_naming_policies' => 'getCrossTenantNamingPolicies',
        'reuse_sequence' => 'getReuseSequence',
        'cloud_init_username' => 'getCloudInitUsername',
        'cloud_init_password' => 'getCloudInitPassword',
        'cloud_init_key_pair' => 'getCloudInitKeyPair',
        'deploy_storage_provider' => 'getDeployStorageProvider',
        'windows_password' => 'getWindowsPassword',
        'pxe_root_password' => 'getPxeRootPassword',
        'default_template_type' => 'getDefaultTemplateType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['allow_zone_selection'] = $data['allow_zone_selection'] ?? null;
        $this->container['allow_server_selection'] = $data['allow_server_selection'] ?? null;
        $this->container['require_environments'] = $data['require_environments'] ?? null;
        $this->container['show_pricing'] = $data['show_pricing'] ?? null;
        $this->container['hide_datastore_stats'] = $data['hide_datastore_stats'] ?? null;
        $this->container['cross_tenant_naming_policies'] = $data['cross_tenant_naming_policies'] ?? null;
        $this->container['reuse_sequence'] = $data['reuse_sequence'] ?? null;
        $this->container['cloud_init_username'] = $data['cloud_init_username'] ?? null;
        $this->container['cloud_init_password'] = $data['cloud_init_password'] ?? null;
        $this->container['cloud_init_key_pair'] = $data['cloud_init_key_pair'] ?? null;
        $this->container['deploy_storage_provider'] = $data['deploy_storage_provider'] ?? null;
        $this->container['windows_password'] = $data['windows_password'] ?? null;
        $this->container['pxe_root_password'] = $data['pxe_root_password'] ?? null;
        $this->container['default_template_type'] = $data['default_template_type'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets allow_zone_selection
     *
     * @return bool|null
     */
    public function getAllowZoneSelection()
    {
        return $this->container['allow_zone_selection'];
    }

    /**
     * Sets allow_zone_selection
     *
     * @param bool|null $allow_zone_selection Use this to enable / disable allowing cloud selection
     *
     * @return self
     */
    public function setAllowZoneSelection($allow_zone_selection)
    {
        $this->container['allow_zone_selection'] = $allow_zone_selection;

        return $this;
    }

    /**
     * Gets allow_server_selection
     *
     * @return bool|null
     */
    public function getAllowServerSelection()
    {
        return $this->container['allow_server_selection'];
    }

    /**
     * Sets allow_server_selection
     *
     * @param bool|null $allow_server_selection Use this to enable / disable allowing host selection
     *
     * @return self
     */
    public function setAllowServerSelection($allow_server_selection)
    {
        $this->container['allow_server_selection'] = $allow_server_selection;

        return $this;
    }

    /**
     * Gets require_environments
     *
     * @return bool|null
     */
    public function getRequireEnvironments()
    {
        return $this->container['require_environments'];
    }

    /**
     * Sets require_environments
     *
     * @param bool|null $require_environments Use this to enable / disable requiring environment selection
     *
     * @return self
     */
    public function setRequireEnvironments($require_environments)
    {
        $this->container['require_environments'] = $require_environments;

        return $this;
    }

    /**
     * Gets show_pricing
     *
     * @return bool|null
     */
    public function getShowPricing()
    {
        return $this->container['show_pricing'];
    }

    /**
     * Sets show_pricing
     *
     * @param bool|null $show_pricing Use this to enable / disable showing pricing
     *
     * @return self
     */
    public function setShowPricing($show_pricing)
    {
        $this->container['show_pricing'] = $show_pricing;

        return $this;
    }

    /**
     * Gets hide_datastore_stats
     *
     * @return bool|null
     */
    public function getHideDatastoreStats()
    {
        return $this->container['hide_datastore_stats'];
    }

    /**
     * Sets hide_datastore_stats
     *
     * @param bool|null $hide_datastore_stats Use this to enable / disable hiding datastore stats
     *
     * @return self
     */
    public function setHideDatastoreStats($hide_datastore_stats)
    {
        $this->container['hide_datastore_stats'] = $hide_datastore_stats;

        return $this;
    }

    /**
     * Gets cross_tenant_naming_policies
     *
     * @return bool|null
     */
    public function getCrossTenantNamingPolicies()
    {
        return $this->container['cross_tenant_naming_policies'];
    }

    /**
     * Sets cross_tenant_naming_policies
     *
     * @param bool|null $cross_tenant_naming_policies Use this to enable / disable cross-tenant naming policies
     *
     * @return self
     */
    public function setCrossTenantNamingPolicies($cross_tenant_naming_policies)
    {
        $this->container['cross_tenant_naming_policies'] = $cross_tenant_naming_policies;

        return $this;
    }

    /**
     * Gets reuse_sequence
     *
     * @return bool|null
     */
    public function getReuseSequence()
    {
        return $this->container['reuse_sequence'];
    }

    /**
     * Sets reuse_sequence
     *
     * @param bool|null $reuse_sequence Use this to enable / disable reusing naming sequence numbers
     *
     * @return self
     */
    public function setReuseSequence($reuse_sequence)
    {
        $this->container['reuse_sequence'] = $reuse_sequence;

        return $this;
    }

    /**
     * Gets cloud_init_username
     *
     * @return string|null
     */
    public function getCloudInitUsername()
    {
        return $this->container['cloud_init_username'];
    }

    /**
     * Sets cloud_init_username
     *
     * @param string|null $cloud_init_username Cloud-init username
     *
     * @return self
     */
    public function setCloudInitUsername($cloud_init_username)
    {
        $this->container['cloud_init_username'] = $cloud_init_username;

        return $this;
    }

    /**
     * Gets cloud_init_password
     *
     * @return string|null
     */
    public function getCloudInitPassword()
    {
        return $this->container['cloud_init_password'];
    }

    /**
     * Sets cloud_init_password
     *
     * @param string|null $cloud_init_password Cloud-init password
     *
     * @return self
     */
    public function setCloudInitPassword($cloud_init_password)
    {
        $this->container['cloud_init_password'] = $cloud_init_password;

        return $this;
    }

    /**
     * Gets cloud_init_key_pair
     *
     * @return \OpenAPI\Client\Model\ProvisioningSettingsUpdateCloudInitKeyPair|null
     */
    public function getCloudInitKeyPair()
    {
        return $this->container['cloud_init_key_pair'];
    }

    /**
     * Sets cloud_init_key_pair
     *
     * @param \OpenAPI\Client\Model\ProvisioningSettingsUpdateCloudInitKeyPair|null $cloud_init_key_pair cloud_init_key_pair
     *
     * @return self
     */
    public function setCloudInitKeyPair($cloud_init_key_pair)
    {
        $this->container['cloud_init_key_pair'] = $cloud_init_key_pair;

        return $this;
    }

    /**
     * Gets deploy_storage_provider
     *
     * @return \OpenAPI\Client\Model\ProvisioningSettingsUpdateDeployStorageProvider|null
     */
    public function getDeployStorageProvider()
    {
        return $this->container['deploy_storage_provider'];
    }

    /**
     * Sets deploy_storage_provider
     *
     * @param \OpenAPI\Client\Model\ProvisioningSettingsUpdateDeployStorageProvider|null $deploy_storage_provider deploy_storage_provider
     *
     * @return self
     */
    public function setDeployStorageProvider($deploy_storage_provider)
    {
        $this->container['deploy_storage_provider'] = $deploy_storage_provider;

        return $this;
    }

    /**
     * Gets windows_password
     *
     * @return string|null
     */
    public function getWindowsPassword()
    {
        return $this->container['windows_password'];
    }

    /**
     * Sets windows_password
     *
     * @param string|null $windows_password Windows administrator password
     *
     * @return self
     */
    public function setWindowsPassword($windows_password)
    {
        $this->container['windows_password'] = $windows_password;

        return $this;
    }

    /**
     * Gets pxe_root_password
     *
     * @return string|null
     */
    public function getPxeRootPassword()
    {
        return $this->container['pxe_root_password'];
    }

    /**
     * Sets pxe_root_password
     *
     * @param string|null $pxe_root_password PXE Boot default root password
     *
     * @return self
     */
    public function setPxeRootPassword($pxe_root_password)
    {
        $this->container['pxe_root_password'] = $pxe_root_password;

        return $this;
    }

    /**
     * Gets default_template_type
     *
     * @return \OpenAPI\Client\Model\ProvisioningSettingsUpdateDefaultTemplateType|null
     */
    public function getDefaultTemplateType()
    {
        return $this->container['default_template_type'];
    }

    /**
     * Sets default_template_type
     *
     * @param \OpenAPI\Client\Model\ProvisioningSettingsUpdateDefaultTemplateType|null $default_template_type default_template_type
     *
     * @return self
     */
    public function setDefaultTemplateType($default_template_type)
    {
        $this->container['default_template_type'] = $default_template_type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


