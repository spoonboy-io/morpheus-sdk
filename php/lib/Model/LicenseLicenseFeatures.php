<?php
/**
 * LicenseLicenseFeatures
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * LicenseLicenseFeatures Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class LicenseLicenseFeatures implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'license_license_features';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'dashboard' => 'bool',
        'guidance' => 'bool',
        'discovery' => 'bool',
        'analytics' => 'bool',
        'scheduling' => 'bool',
        'approvals' => 'bool',
        'usage' => 'bool',
        'activity' => 'bool',
        'instances' => 'bool',
        'apps' => 'bool',
        'templates' => 'bool',
        'automation' => 'bool',
        'virtual_images' => 'bool',
        'library' => 'bool',
        'migrations' => 'bool',
        'deployments' => 'bool',
        'groups' => 'bool',
        'clouds' => 'bool',
        'hosts' => 'bool',
        'network' => 'bool',
        'load_balancers' => 'bool',
        'storage' => 'bool',
        'key_pairs' => 'bool',
        'ssl_certificates' => 'bool',
        'boot' => 'bool',
        'backups' => 'bool',
        'cypher' => 'bool',
        'archives' => 'bool',
        'image_builder' => 'bool',
        'tenants' => 'bool',
        'plans' => 'bool',
        'pricing' => 'bool',
        'users' => 'bool',
        'user_groups' => 'bool',
        'monitoring' => 'bool',
        'logging' => 'bool',
        'monitoring_services' => 'bool',
        'logging_services' => 'bool',
        'backup_services' => 'bool',
        'dns_services' => 'bool',
        'code_service' => 'bool',
        'build_services' => 'bool',
        'load_balancer_services' => 'bool',
        'ipam_services' => 'bool',
        'approval_services' => 'bool',
        'cmdb_services' => 'bool',
        'deployment_services' => 'bool',
        'automation_services' => 'bool',
        'service_discovery_services' => 'bool',
        'identity_services' => 'bool',
        'trust_services' => 'bool',
        'security_services' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'dashboard' => null,
        'guidance' => null,
        'discovery' => null,
        'analytics' => null,
        'scheduling' => null,
        'approvals' => null,
        'usage' => null,
        'activity' => null,
        'instances' => null,
        'apps' => null,
        'templates' => null,
        'automation' => null,
        'virtual_images' => null,
        'library' => null,
        'migrations' => null,
        'deployments' => null,
        'groups' => null,
        'clouds' => null,
        'hosts' => null,
        'network' => null,
        'load_balancers' => null,
        'storage' => null,
        'key_pairs' => null,
        'ssl_certificates' => null,
        'boot' => null,
        'backups' => null,
        'cypher' => null,
        'archives' => null,
        'image_builder' => null,
        'tenants' => null,
        'plans' => null,
        'pricing' => null,
        'users' => null,
        'user_groups' => null,
        'monitoring' => null,
        'logging' => null,
        'monitoring_services' => null,
        'logging_services' => null,
        'backup_services' => null,
        'dns_services' => null,
        'code_service' => null,
        'build_services' => null,
        'load_balancer_services' => null,
        'ipam_services' => null,
        'approval_services' => null,
        'cmdb_services' => null,
        'deployment_services' => null,
        'automation_services' => null,
        'service_discovery_services' => null,
        'identity_services' => null,
        'trust_services' => null,
        'security_services' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'dashboard' => 'dashboard',
        'guidance' => 'guidance',
        'discovery' => 'discovery',
        'analytics' => 'analytics',
        'scheduling' => 'scheduling',
        'approvals' => 'approvals',
        'usage' => 'usage',
        'activity' => 'activity',
        'instances' => 'instances',
        'apps' => 'apps',
        'templates' => 'templates',
        'automation' => 'automation',
        'virtual_images' => 'virtualImages',
        'library' => 'library',
        'migrations' => 'migrations',
        'deployments' => 'deployments',
        'groups' => 'groups',
        'clouds' => 'clouds',
        'hosts' => 'hosts',
        'network' => 'network',
        'load_balancers' => 'loadBalancers',
        'storage' => 'storage',
        'key_pairs' => 'keyPairs',
        'ssl_certificates' => 'sslCertificates',
        'boot' => 'boot',
        'backups' => 'backups',
        'cypher' => 'cypher',
        'archives' => 'archives',
        'image_builder' => 'imageBuilder',
        'tenants' => 'tenants',
        'plans' => 'plans',
        'pricing' => 'pricing',
        'users' => 'users',
        'user_groups' => 'userGroups',
        'monitoring' => 'monitoring',
        'logging' => 'logging',
        'monitoring_services' => 'monitoringServices',
        'logging_services' => 'loggingServices',
        'backup_services' => 'backupServices',
        'dns_services' => 'dnsServices',
        'code_service' => 'codeService',
        'build_services' => 'buildServices',
        'load_balancer_services' => 'loadBalancerServices',
        'ipam_services' => 'ipamServices',
        'approval_services' => 'approvalServices',
        'cmdb_services' => 'cmdbServices',
        'deployment_services' => 'deploymentServices',
        'automation_services' => 'automationServices',
        'service_discovery_services' => 'serviceDiscoveryServices',
        'identity_services' => 'identityServices',
        'trust_services' => 'trustServices',
        'security_services' => 'securityServices'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'dashboard' => 'setDashboard',
        'guidance' => 'setGuidance',
        'discovery' => 'setDiscovery',
        'analytics' => 'setAnalytics',
        'scheduling' => 'setScheduling',
        'approvals' => 'setApprovals',
        'usage' => 'setUsage',
        'activity' => 'setActivity',
        'instances' => 'setInstances',
        'apps' => 'setApps',
        'templates' => 'setTemplates',
        'automation' => 'setAutomation',
        'virtual_images' => 'setVirtualImages',
        'library' => 'setLibrary',
        'migrations' => 'setMigrations',
        'deployments' => 'setDeployments',
        'groups' => 'setGroups',
        'clouds' => 'setClouds',
        'hosts' => 'setHosts',
        'network' => 'setNetwork',
        'load_balancers' => 'setLoadBalancers',
        'storage' => 'setStorage',
        'key_pairs' => 'setKeyPairs',
        'ssl_certificates' => 'setSslCertificates',
        'boot' => 'setBoot',
        'backups' => 'setBackups',
        'cypher' => 'setCypher',
        'archives' => 'setArchives',
        'image_builder' => 'setImageBuilder',
        'tenants' => 'setTenants',
        'plans' => 'setPlans',
        'pricing' => 'setPricing',
        'users' => 'setUsers',
        'user_groups' => 'setUserGroups',
        'monitoring' => 'setMonitoring',
        'logging' => 'setLogging',
        'monitoring_services' => 'setMonitoringServices',
        'logging_services' => 'setLoggingServices',
        'backup_services' => 'setBackupServices',
        'dns_services' => 'setDnsServices',
        'code_service' => 'setCodeService',
        'build_services' => 'setBuildServices',
        'load_balancer_services' => 'setLoadBalancerServices',
        'ipam_services' => 'setIpamServices',
        'approval_services' => 'setApprovalServices',
        'cmdb_services' => 'setCmdbServices',
        'deployment_services' => 'setDeploymentServices',
        'automation_services' => 'setAutomationServices',
        'service_discovery_services' => 'setServiceDiscoveryServices',
        'identity_services' => 'setIdentityServices',
        'trust_services' => 'setTrustServices',
        'security_services' => 'setSecurityServices'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'dashboard' => 'getDashboard',
        'guidance' => 'getGuidance',
        'discovery' => 'getDiscovery',
        'analytics' => 'getAnalytics',
        'scheduling' => 'getScheduling',
        'approvals' => 'getApprovals',
        'usage' => 'getUsage',
        'activity' => 'getActivity',
        'instances' => 'getInstances',
        'apps' => 'getApps',
        'templates' => 'getTemplates',
        'automation' => 'getAutomation',
        'virtual_images' => 'getVirtualImages',
        'library' => 'getLibrary',
        'migrations' => 'getMigrations',
        'deployments' => 'getDeployments',
        'groups' => 'getGroups',
        'clouds' => 'getClouds',
        'hosts' => 'getHosts',
        'network' => 'getNetwork',
        'load_balancers' => 'getLoadBalancers',
        'storage' => 'getStorage',
        'key_pairs' => 'getKeyPairs',
        'ssl_certificates' => 'getSslCertificates',
        'boot' => 'getBoot',
        'backups' => 'getBackups',
        'cypher' => 'getCypher',
        'archives' => 'getArchives',
        'image_builder' => 'getImageBuilder',
        'tenants' => 'getTenants',
        'plans' => 'getPlans',
        'pricing' => 'getPricing',
        'users' => 'getUsers',
        'user_groups' => 'getUserGroups',
        'monitoring' => 'getMonitoring',
        'logging' => 'getLogging',
        'monitoring_services' => 'getMonitoringServices',
        'logging_services' => 'getLoggingServices',
        'backup_services' => 'getBackupServices',
        'dns_services' => 'getDnsServices',
        'code_service' => 'getCodeService',
        'build_services' => 'getBuildServices',
        'load_balancer_services' => 'getLoadBalancerServices',
        'ipam_services' => 'getIpamServices',
        'approval_services' => 'getApprovalServices',
        'cmdb_services' => 'getCmdbServices',
        'deployment_services' => 'getDeploymentServices',
        'automation_services' => 'getAutomationServices',
        'service_discovery_services' => 'getServiceDiscoveryServices',
        'identity_services' => 'getIdentityServices',
        'trust_services' => 'getTrustServices',
        'security_services' => 'getSecurityServices'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['dashboard'] = $data['dashboard'] ?? null;
        $this->container['guidance'] = $data['guidance'] ?? null;
        $this->container['discovery'] = $data['discovery'] ?? null;
        $this->container['analytics'] = $data['analytics'] ?? null;
        $this->container['scheduling'] = $data['scheduling'] ?? null;
        $this->container['approvals'] = $data['approvals'] ?? null;
        $this->container['usage'] = $data['usage'] ?? null;
        $this->container['activity'] = $data['activity'] ?? null;
        $this->container['instances'] = $data['instances'] ?? null;
        $this->container['apps'] = $data['apps'] ?? null;
        $this->container['templates'] = $data['templates'] ?? null;
        $this->container['automation'] = $data['automation'] ?? null;
        $this->container['virtual_images'] = $data['virtual_images'] ?? null;
        $this->container['library'] = $data['library'] ?? null;
        $this->container['migrations'] = $data['migrations'] ?? null;
        $this->container['deployments'] = $data['deployments'] ?? null;
        $this->container['groups'] = $data['groups'] ?? null;
        $this->container['clouds'] = $data['clouds'] ?? null;
        $this->container['hosts'] = $data['hosts'] ?? null;
        $this->container['network'] = $data['network'] ?? null;
        $this->container['load_balancers'] = $data['load_balancers'] ?? null;
        $this->container['storage'] = $data['storage'] ?? null;
        $this->container['key_pairs'] = $data['key_pairs'] ?? null;
        $this->container['ssl_certificates'] = $data['ssl_certificates'] ?? null;
        $this->container['boot'] = $data['boot'] ?? null;
        $this->container['backups'] = $data['backups'] ?? null;
        $this->container['cypher'] = $data['cypher'] ?? null;
        $this->container['archives'] = $data['archives'] ?? null;
        $this->container['image_builder'] = $data['image_builder'] ?? null;
        $this->container['tenants'] = $data['tenants'] ?? null;
        $this->container['plans'] = $data['plans'] ?? null;
        $this->container['pricing'] = $data['pricing'] ?? null;
        $this->container['users'] = $data['users'] ?? null;
        $this->container['user_groups'] = $data['user_groups'] ?? null;
        $this->container['monitoring'] = $data['monitoring'] ?? null;
        $this->container['logging'] = $data['logging'] ?? null;
        $this->container['monitoring_services'] = $data['monitoring_services'] ?? null;
        $this->container['logging_services'] = $data['logging_services'] ?? null;
        $this->container['backup_services'] = $data['backup_services'] ?? null;
        $this->container['dns_services'] = $data['dns_services'] ?? null;
        $this->container['code_service'] = $data['code_service'] ?? null;
        $this->container['build_services'] = $data['build_services'] ?? null;
        $this->container['load_balancer_services'] = $data['load_balancer_services'] ?? null;
        $this->container['ipam_services'] = $data['ipam_services'] ?? null;
        $this->container['approval_services'] = $data['approval_services'] ?? null;
        $this->container['cmdb_services'] = $data['cmdb_services'] ?? null;
        $this->container['deployment_services'] = $data['deployment_services'] ?? null;
        $this->container['automation_services'] = $data['automation_services'] ?? null;
        $this->container['service_discovery_services'] = $data['service_discovery_services'] ?? null;
        $this->container['identity_services'] = $data['identity_services'] ?? null;
        $this->container['trust_services'] = $data['trust_services'] ?? null;
        $this->container['security_services'] = $data['security_services'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets dashboard
     *
     * @return bool|null
     */
    public function getDashboard()
    {
        return $this->container['dashboard'];
    }

    /**
     * Sets dashboard
     *
     * @param bool|null $dashboard dashboard
     *
     * @return self
     */
    public function setDashboard($dashboard)
    {
        $this->container['dashboard'] = $dashboard;

        return $this;
    }

    /**
     * Gets guidance
     *
     * @return bool|null
     */
    public function getGuidance()
    {
        return $this->container['guidance'];
    }

    /**
     * Sets guidance
     *
     * @param bool|null $guidance guidance
     *
     * @return self
     */
    public function setGuidance($guidance)
    {
        $this->container['guidance'] = $guidance;

        return $this;
    }

    /**
     * Gets discovery
     *
     * @return bool|null
     */
    public function getDiscovery()
    {
        return $this->container['discovery'];
    }

    /**
     * Sets discovery
     *
     * @param bool|null $discovery discovery
     *
     * @return self
     */
    public function setDiscovery($discovery)
    {
        $this->container['discovery'] = $discovery;

        return $this;
    }

    /**
     * Gets analytics
     *
     * @return bool|null
     */
    public function getAnalytics()
    {
        return $this->container['analytics'];
    }

    /**
     * Sets analytics
     *
     * @param bool|null $analytics analytics
     *
     * @return self
     */
    public function setAnalytics($analytics)
    {
        $this->container['analytics'] = $analytics;

        return $this;
    }

    /**
     * Gets scheduling
     *
     * @return bool|null
     */
    public function getScheduling()
    {
        return $this->container['scheduling'];
    }

    /**
     * Sets scheduling
     *
     * @param bool|null $scheduling scheduling
     *
     * @return self
     */
    public function setScheduling($scheduling)
    {
        $this->container['scheduling'] = $scheduling;

        return $this;
    }

    /**
     * Gets approvals
     *
     * @return bool|null
     */
    public function getApprovals()
    {
        return $this->container['approvals'];
    }

    /**
     * Sets approvals
     *
     * @param bool|null $approvals approvals
     *
     * @return self
     */
    public function setApprovals($approvals)
    {
        $this->container['approvals'] = $approvals;

        return $this;
    }

    /**
     * Gets usage
     *
     * @return bool|null
     */
    public function getUsage()
    {
        return $this->container['usage'];
    }

    /**
     * Sets usage
     *
     * @param bool|null $usage usage
     *
     * @return self
     */
    public function setUsage($usage)
    {
        $this->container['usage'] = $usage;

        return $this;
    }

    /**
     * Gets activity
     *
     * @return bool|null
     */
    public function getActivity()
    {
        return $this->container['activity'];
    }

    /**
     * Sets activity
     *
     * @param bool|null $activity activity
     *
     * @return self
     */
    public function setActivity($activity)
    {
        $this->container['activity'] = $activity;

        return $this;
    }

    /**
     * Gets instances
     *
     * @return bool|null
     */
    public function getInstances()
    {
        return $this->container['instances'];
    }

    /**
     * Sets instances
     *
     * @param bool|null $instances instances
     *
     * @return self
     */
    public function setInstances($instances)
    {
        $this->container['instances'] = $instances;

        return $this;
    }

    /**
     * Gets apps
     *
     * @return bool|null
     */
    public function getApps()
    {
        return $this->container['apps'];
    }

    /**
     * Sets apps
     *
     * @param bool|null $apps apps
     *
     * @return self
     */
    public function setApps($apps)
    {
        $this->container['apps'] = $apps;

        return $this;
    }

    /**
     * Gets templates
     *
     * @return bool|null
     */
    public function getTemplates()
    {
        return $this->container['templates'];
    }

    /**
     * Sets templates
     *
     * @param bool|null $templates templates
     *
     * @return self
     */
    public function setTemplates($templates)
    {
        $this->container['templates'] = $templates;

        return $this;
    }

    /**
     * Gets automation
     *
     * @return bool|null
     */
    public function getAutomation()
    {
        return $this->container['automation'];
    }

    /**
     * Sets automation
     *
     * @param bool|null $automation automation
     *
     * @return self
     */
    public function setAutomation($automation)
    {
        $this->container['automation'] = $automation;

        return $this;
    }

    /**
     * Gets virtual_images
     *
     * @return bool|null
     */
    public function getVirtualImages()
    {
        return $this->container['virtual_images'];
    }

    /**
     * Sets virtual_images
     *
     * @param bool|null $virtual_images virtual_images
     *
     * @return self
     */
    public function setVirtualImages($virtual_images)
    {
        $this->container['virtual_images'] = $virtual_images;

        return $this;
    }

    /**
     * Gets library
     *
     * @return bool|null
     */
    public function getLibrary()
    {
        return $this->container['library'];
    }

    /**
     * Sets library
     *
     * @param bool|null $library library
     *
     * @return self
     */
    public function setLibrary($library)
    {
        $this->container['library'] = $library;

        return $this;
    }

    /**
     * Gets migrations
     *
     * @return bool|null
     */
    public function getMigrations()
    {
        return $this->container['migrations'];
    }

    /**
     * Sets migrations
     *
     * @param bool|null $migrations migrations
     *
     * @return self
     */
    public function setMigrations($migrations)
    {
        $this->container['migrations'] = $migrations;

        return $this;
    }

    /**
     * Gets deployments
     *
     * @return bool|null
     */
    public function getDeployments()
    {
        return $this->container['deployments'];
    }

    /**
     * Sets deployments
     *
     * @param bool|null $deployments deployments
     *
     * @return self
     */
    public function setDeployments($deployments)
    {
        $this->container['deployments'] = $deployments;

        return $this;
    }

    /**
     * Gets groups
     *
     * @return bool|null
     */
    public function getGroups()
    {
        return $this->container['groups'];
    }

    /**
     * Sets groups
     *
     * @param bool|null $groups groups
     *
     * @return self
     */
    public function setGroups($groups)
    {
        $this->container['groups'] = $groups;

        return $this;
    }

    /**
     * Gets clouds
     *
     * @return bool|null
     */
    public function getClouds()
    {
        return $this->container['clouds'];
    }

    /**
     * Sets clouds
     *
     * @param bool|null $clouds clouds
     *
     * @return self
     */
    public function setClouds($clouds)
    {
        $this->container['clouds'] = $clouds;

        return $this;
    }

    /**
     * Gets hosts
     *
     * @return bool|null
     */
    public function getHosts()
    {
        return $this->container['hosts'];
    }

    /**
     * Sets hosts
     *
     * @param bool|null $hosts hosts
     *
     * @return self
     */
    public function setHosts($hosts)
    {
        $this->container['hosts'] = $hosts;

        return $this;
    }

    /**
     * Gets network
     *
     * @return bool|null
     */
    public function getNetwork()
    {
        return $this->container['network'];
    }

    /**
     * Sets network
     *
     * @param bool|null $network network
     *
     * @return self
     */
    public function setNetwork($network)
    {
        $this->container['network'] = $network;

        return $this;
    }

    /**
     * Gets load_balancers
     *
     * @return bool|null
     */
    public function getLoadBalancers()
    {
        return $this->container['load_balancers'];
    }

    /**
     * Sets load_balancers
     *
     * @param bool|null $load_balancers load_balancers
     *
     * @return self
     */
    public function setLoadBalancers($load_balancers)
    {
        $this->container['load_balancers'] = $load_balancers;

        return $this;
    }

    /**
     * Gets storage
     *
     * @return bool|null
     */
    public function getStorage()
    {
        return $this->container['storage'];
    }

    /**
     * Sets storage
     *
     * @param bool|null $storage storage
     *
     * @return self
     */
    public function setStorage($storage)
    {
        $this->container['storage'] = $storage;

        return $this;
    }

    /**
     * Gets key_pairs
     *
     * @return bool|null
     */
    public function getKeyPairs()
    {
        return $this->container['key_pairs'];
    }

    /**
     * Sets key_pairs
     *
     * @param bool|null $key_pairs key_pairs
     *
     * @return self
     */
    public function setKeyPairs($key_pairs)
    {
        $this->container['key_pairs'] = $key_pairs;

        return $this;
    }

    /**
     * Gets ssl_certificates
     *
     * @return bool|null
     */
    public function getSslCertificates()
    {
        return $this->container['ssl_certificates'];
    }

    /**
     * Sets ssl_certificates
     *
     * @param bool|null $ssl_certificates ssl_certificates
     *
     * @return self
     */
    public function setSslCertificates($ssl_certificates)
    {
        $this->container['ssl_certificates'] = $ssl_certificates;

        return $this;
    }

    /**
     * Gets boot
     *
     * @return bool|null
     */
    public function getBoot()
    {
        return $this->container['boot'];
    }

    /**
     * Sets boot
     *
     * @param bool|null $boot boot
     *
     * @return self
     */
    public function setBoot($boot)
    {
        $this->container['boot'] = $boot;

        return $this;
    }

    /**
     * Gets backups
     *
     * @return bool|null
     */
    public function getBackups()
    {
        return $this->container['backups'];
    }

    /**
     * Sets backups
     *
     * @param bool|null $backups backups
     *
     * @return self
     */
    public function setBackups($backups)
    {
        $this->container['backups'] = $backups;

        return $this;
    }

    /**
     * Gets cypher
     *
     * @return bool|null
     */
    public function getCypher()
    {
        return $this->container['cypher'];
    }

    /**
     * Sets cypher
     *
     * @param bool|null $cypher cypher
     *
     * @return self
     */
    public function setCypher($cypher)
    {
        $this->container['cypher'] = $cypher;

        return $this;
    }

    /**
     * Gets archives
     *
     * @return bool|null
     */
    public function getArchives()
    {
        return $this->container['archives'];
    }

    /**
     * Sets archives
     *
     * @param bool|null $archives archives
     *
     * @return self
     */
    public function setArchives($archives)
    {
        $this->container['archives'] = $archives;

        return $this;
    }

    /**
     * Gets image_builder
     *
     * @return bool|null
     */
    public function getImageBuilder()
    {
        return $this->container['image_builder'];
    }

    /**
     * Sets image_builder
     *
     * @param bool|null $image_builder image_builder
     *
     * @return self
     */
    public function setImageBuilder($image_builder)
    {
        $this->container['image_builder'] = $image_builder;

        return $this;
    }

    /**
     * Gets tenants
     *
     * @return bool|null
     */
    public function getTenants()
    {
        return $this->container['tenants'];
    }

    /**
     * Sets tenants
     *
     * @param bool|null $tenants tenants
     *
     * @return self
     */
    public function setTenants($tenants)
    {
        $this->container['tenants'] = $tenants;

        return $this;
    }

    /**
     * Gets plans
     *
     * @return bool|null
     */
    public function getPlans()
    {
        return $this->container['plans'];
    }

    /**
     * Sets plans
     *
     * @param bool|null $plans plans
     *
     * @return self
     */
    public function setPlans($plans)
    {
        $this->container['plans'] = $plans;

        return $this;
    }

    /**
     * Gets pricing
     *
     * @return bool|null
     */
    public function getPricing()
    {
        return $this->container['pricing'];
    }

    /**
     * Sets pricing
     *
     * @param bool|null $pricing pricing
     *
     * @return self
     */
    public function setPricing($pricing)
    {
        $this->container['pricing'] = $pricing;

        return $this;
    }

    /**
     * Gets users
     *
     * @return bool|null
     */
    public function getUsers()
    {
        return $this->container['users'];
    }

    /**
     * Sets users
     *
     * @param bool|null $users users
     *
     * @return self
     */
    public function setUsers($users)
    {
        $this->container['users'] = $users;

        return $this;
    }

    /**
     * Gets user_groups
     *
     * @return bool|null
     */
    public function getUserGroups()
    {
        return $this->container['user_groups'];
    }

    /**
     * Sets user_groups
     *
     * @param bool|null $user_groups user_groups
     *
     * @return self
     */
    public function setUserGroups($user_groups)
    {
        $this->container['user_groups'] = $user_groups;

        return $this;
    }

    /**
     * Gets monitoring
     *
     * @return bool|null
     */
    public function getMonitoring()
    {
        return $this->container['monitoring'];
    }

    /**
     * Sets monitoring
     *
     * @param bool|null $monitoring monitoring
     *
     * @return self
     */
    public function setMonitoring($monitoring)
    {
        $this->container['monitoring'] = $monitoring;

        return $this;
    }

    /**
     * Gets logging
     *
     * @return bool|null
     */
    public function getLogging()
    {
        return $this->container['logging'];
    }

    /**
     * Sets logging
     *
     * @param bool|null $logging logging
     *
     * @return self
     */
    public function setLogging($logging)
    {
        $this->container['logging'] = $logging;

        return $this;
    }

    /**
     * Gets monitoring_services
     *
     * @return bool|null
     */
    public function getMonitoringServices()
    {
        return $this->container['monitoring_services'];
    }

    /**
     * Sets monitoring_services
     *
     * @param bool|null $monitoring_services monitoring_services
     *
     * @return self
     */
    public function setMonitoringServices($monitoring_services)
    {
        $this->container['monitoring_services'] = $monitoring_services;

        return $this;
    }

    /**
     * Gets logging_services
     *
     * @return bool|null
     */
    public function getLoggingServices()
    {
        return $this->container['logging_services'];
    }

    /**
     * Sets logging_services
     *
     * @param bool|null $logging_services logging_services
     *
     * @return self
     */
    public function setLoggingServices($logging_services)
    {
        $this->container['logging_services'] = $logging_services;

        return $this;
    }

    /**
     * Gets backup_services
     *
     * @return bool|null
     */
    public function getBackupServices()
    {
        return $this->container['backup_services'];
    }

    /**
     * Sets backup_services
     *
     * @param bool|null $backup_services backup_services
     *
     * @return self
     */
    public function setBackupServices($backup_services)
    {
        $this->container['backup_services'] = $backup_services;

        return $this;
    }

    /**
     * Gets dns_services
     *
     * @return bool|null
     */
    public function getDnsServices()
    {
        return $this->container['dns_services'];
    }

    /**
     * Sets dns_services
     *
     * @param bool|null $dns_services dns_services
     *
     * @return self
     */
    public function setDnsServices($dns_services)
    {
        $this->container['dns_services'] = $dns_services;

        return $this;
    }

    /**
     * Gets code_service
     *
     * @return bool|null
     */
    public function getCodeService()
    {
        return $this->container['code_service'];
    }

    /**
     * Sets code_service
     *
     * @param bool|null $code_service code_service
     *
     * @return self
     */
    public function setCodeService($code_service)
    {
        $this->container['code_service'] = $code_service;

        return $this;
    }

    /**
     * Gets build_services
     *
     * @return bool|null
     */
    public function getBuildServices()
    {
        return $this->container['build_services'];
    }

    /**
     * Sets build_services
     *
     * @param bool|null $build_services build_services
     *
     * @return self
     */
    public function setBuildServices($build_services)
    {
        $this->container['build_services'] = $build_services;

        return $this;
    }

    /**
     * Gets load_balancer_services
     *
     * @return bool|null
     */
    public function getLoadBalancerServices()
    {
        return $this->container['load_balancer_services'];
    }

    /**
     * Sets load_balancer_services
     *
     * @param bool|null $load_balancer_services load_balancer_services
     *
     * @return self
     */
    public function setLoadBalancerServices($load_balancer_services)
    {
        $this->container['load_balancer_services'] = $load_balancer_services;

        return $this;
    }

    /**
     * Gets ipam_services
     *
     * @return bool|null
     */
    public function getIpamServices()
    {
        return $this->container['ipam_services'];
    }

    /**
     * Sets ipam_services
     *
     * @param bool|null $ipam_services ipam_services
     *
     * @return self
     */
    public function setIpamServices($ipam_services)
    {
        $this->container['ipam_services'] = $ipam_services;

        return $this;
    }

    /**
     * Gets approval_services
     *
     * @return bool|null
     */
    public function getApprovalServices()
    {
        return $this->container['approval_services'];
    }

    /**
     * Sets approval_services
     *
     * @param bool|null $approval_services approval_services
     *
     * @return self
     */
    public function setApprovalServices($approval_services)
    {
        $this->container['approval_services'] = $approval_services;

        return $this;
    }

    /**
     * Gets cmdb_services
     *
     * @return bool|null
     */
    public function getCmdbServices()
    {
        return $this->container['cmdb_services'];
    }

    /**
     * Sets cmdb_services
     *
     * @param bool|null $cmdb_services cmdb_services
     *
     * @return self
     */
    public function setCmdbServices($cmdb_services)
    {
        $this->container['cmdb_services'] = $cmdb_services;

        return $this;
    }

    /**
     * Gets deployment_services
     *
     * @return bool|null
     */
    public function getDeploymentServices()
    {
        return $this->container['deployment_services'];
    }

    /**
     * Sets deployment_services
     *
     * @param bool|null $deployment_services deployment_services
     *
     * @return self
     */
    public function setDeploymentServices($deployment_services)
    {
        $this->container['deployment_services'] = $deployment_services;

        return $this;
    }

    /**
     * Gets automation_services
     *
     * @return bool|null
     */
    public function getAutomationServices()
    {
        return $this->container['automation_services'];
    }

    /**
     * Sets automation_services
     *
     * @param bool|null $automation_services automation_services
     *
     * @return self
     */
    public function setAutomationServices($automation_services)
    {
        $this->container['automation_services'] = $automation_services;

        return $this;
    }

    /**
     * Gets service_discovery_services
     *
     * @return bool|null
     */
    public function getServiceDiscoveryServices()
    {
        return $this->container['service_discovery_services'];
    }

    /**
     * Sets service_discovery_services
     *
     * @param bool|null $service_discovery_services service_discovery_services
     *
     * @return self
     */
    public function setServiceDiscoveryServices($service_discovery_services)
    {
        $this->container['service_discovery_services'] = $service_discovery_services;

        return $this;
    }

    /**
     * Gets identity_services
     *
     * @return bool|null
     */
    public function getIdentityServices()
    {
        return $this->container['identity_services'];
    }

    /**
     * Sets identity_services
     *
     * @param bool|null $identity_services identity_services
     *
     * @return self
     */
    public function setIdentityServices($identity_services)
    {
        $this->container['identity_services'] = $identity_services;

        return $this;
    }

    /**
     * Gets trust_services
     *
     * @return bool|null
     */
    public function getTrustServices()
    {
        return $this->container['trust_services'];
    }

    /**
     * Sets trust_services
     *
     * @param bool|null $trust_services trust_services
     *
     * @return self
     */
    public function setTrustServices($trust_services)
    {
        $this->container['trust_services'] = $trust_services;

        return $this;
    }

    /**
     * Gets security_services
     *
     * @return bool|null
     */
    public function getSecurityServices()
    {
        return $this->container['security_services'];
    }

    /**
     * Sets security_services
     *
     * @param bool|null $security_services security_services
     *
     * @return self
     */
    public function setSecurityServices($security_services)
    {
        $this->container['security_services'] = $security_services;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


