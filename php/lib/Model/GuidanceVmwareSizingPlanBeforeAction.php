<?php
/**
 * GuidanceVmwareSizingPlanBeforeAction
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * GuidanceVmwareSizingPlanBeforeAction Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class GuidanceVmwareSizingPlanBeforeAction implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'guidanceVmwareSizing_planBeforeAction';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'name' => 'string',
        'code' => 'string',
        'active' => 'bool',
        'sort_order' => 'int',
        'description' => 'string',
        'max_storage' => 'int',
        'max_memory' => 'int',
        'max_cpu' => 'string',
        'max_cores' => 'int',
        'max_disks' => 'string',
        'cores_per_socket' => 'int',
        'custom_cpu' => 'bool',
        'custom_cores' => 'bool',
        'custom_max_storage' => 'bool',
        'custom_max_data_storage' => 'bool',
        'custom_max_memory' => 'bool',
        'add_volumes' => 'bool',
        'memory_option_source' => 'string',
        'cpu_option_source' => 'string',
        'date_created' => '\DateTime',
        'last_updated' => '\DateTime',
        'region_code' => 'string',
        'visibility' => 'string',
        'editable' => 'bool',
        'provision_type' => '\OpenAPI\Client\Model\GuidanceVmwareSizingPlanBeforeActionProvisionType',
        'tenants' => 'string',
        'price_sets' => '\OpenAPI\Client\Model\GuidanceVmwareSizingPlanBeforeActionPriceSets[]',
        'config' => '\OpenAPI\Client\Model\GuidanceVmwareSizingPlanBeforeActionConfig'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int64',
        'name' => null,
        'code' => null,
        'active' => null,
        'sort_order' => 'int64',
        'description' => null,
        'max_storage' => 'int64',
        'max_memory' => 'int64',
        'max_cpu' => null,
        'max_cores' => 'int64',
        'max_disks' => null,
        'cores_per_socket' => 'int64',
        'custom_cpu' => null,
        'custom_cores' => null,
        'custom_max_storage' => null,
        'custom_max_data_storage' => null,
        'custom_max_memory' => null,
        'add_volumes' => null,
        'memory_option_source' => null,
        'cpu_option_source' => null,
        'date_created' => 'date-time',
        'last_updated' => 'date-time',
        'region_code' => null,
        'visibility' => null,
        'editable' => null,
        'provision_type' => null,
        'tenants' => null,
        'price_sets' => null,
        'config' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'name' => 'name',
        'code' => 'code',
        'active' => 'active',
        'sort_order' => 'sortOrder',
        'description' => 'description',
        'max_storage' => 'maxStorage',
        'max_memory' => 'maxMemory',
        'max_cpu' => 'maxCpu',
        'max_cores' => 'maxCores',
        'max_disks' => 'maxDisks',
        'cores_per_socket' => 'coresPerSocket',
        'custom_cpu' => 'customCpu',
        'custom_cores' => 'customCores',
        'custom_max_storage' => 'customMaxStorage',
        'custom_max_data_storage' => 'customMaxDataStorage',
        'custom_max_memory' => 'customMaxMemory',
        'add_volumes' => 'addVolumes',
        'memory_option_source' => 'memoryOptionSource',
        'cpu_option_source' => 'cpuOptionSource',
        'date_created' => 'dateCreated',
        'last_updated' => 'lastUpdated',
        'region_code' => 'regionCode',
        'visibility' => 'visibility',
        'editable' => 'editable',
        'provision_type' => 'provisionType',
        'tenants' => 'tenants',
        'price_sets' => 'priceSets',
        'config' => 'config'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'name' => 'setName',
        'code' => 'setCode',
        'active' => 'setActive',
        'sort_order' => 'setSortOrder',
        'description' => 'setDescription',
        'max_storage' => 'setMaxStorage',
        'max_memory' => 'setMaxMemory',
        'max_cpu' => 'setMaxCpu',
        'max_cores' => 'setMaxCores',
        'max_disks' => 'setMaxDisks',
        'cores_per_socket' => 'setCoresPerSocket',
        'custom_cpu' => 'setCustomCpu',
        'custom_cores' => 'setCustomCores',
        'custom_max_storage' => 'setCustomMaxStorage',
        'custom_max_data_storage' => 'setCustomMaxDataStorage',
        'custom_max_memory' => 'setCustomMaxMemory',
        'add_volumes' => 'setAddVolumes',
        'memory_option_source' => 'setMemoryOptionSource',
        'cpu_option_source' => 'setCpuOptionSource',
        'date_created' => 'setDateCreated',
        'last_updated' => 'setLastUpdated',
        'region_code' => 'setRegionCode',
        'visibility' => 'setVisibility',
        'editable' => 'setEditable',
        'provision_type' => 'setProvisionType',
        'tenants' => 'setTenants',
        'price_sets' => 'setPriceSets',
        'config' => 'setConfig'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'name' => 'getName',
        'code' => 'getCode',
        'active' => 'getActive',
        'sort_order' => 'getSortOrder',
        'description' => 'getDescription',
        'max_storage' => 'getMaxStorage',
        'max_memory' => 'getMaxMemory',
        'max_cpu' => 'getMaxCpu',
        'max_cores' => 'getMaxCores',
        'max_disks' => 'getMaxDisks',
        'cores_per_socket' => 'getCoresPerSocket',
        'custom_cpu' => 'getCustomCpu',
        'custom_cores' => 'getCustomCores',
        'custom_max_storage' => 'getCustomMaxStorage',
        'custom_max_data_storage' => 'getCustomMaxDataStorage',
        'custom_max_memory' => 'getCustomMaxMemory',
        'add_volumes' => 'getAddVolumes',
        'memory_option_source' => 'getMemoryOptionSource',
        'cpu_option_source' => 'getCpuOptionSource',
        'date_created' => 'getDateCreated',
        'last_updated' => 'getLastUpdated',
        'region_code' => 'getRegionCode',
        'visibility' => 'getVisibility',
        'editable' => 'getEditable',
        'provision_type' => 'getProvisionType',
        'tenants' => 'getTenants',
        'price_sets' => 'getPriceSets',
        'config' => 'getConfig'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['code'] = $data['code'] ?? null;
        $this->container['active'] = $data['active'] ?? null;
        $this->container['sort_order'] = $data['sort_order'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
        $this->container['max_storage'] = $data['max_storage'] ?? null;
        $this->container['max_memory'] = $data['max_memory'] ?? null;
        $this->container['max_cpu'] = $data['max_cpu'] ?? null;
        $this->container['max_cores'] = $data['max_cores'] ?? null;
        $this->container['max_disks'] = $data['max_disks'] ?? null;
        $this->container['cores_per_socket'] = $data['cores_per_socket'] ?? null;
        $this->container['custom_cpu'] = $data['custom_cpu'] ?? null;
        $this->container['custom_cores'] = $data['custom_cores'] ?? null;
        $this->container['custom_max_storage'] = $data['custom_max_storage'] ?? null;
        $this->container['custom_max_data_storage'] = $data['custom_max_data_storage'] ?? null;
        $this->container['custom_max_memory'] = $data['custom_max_memory'] ?? null;
        $this->container['add_volumes'] = $data['add_volumes'] ?? null;
        $this->container['memory_option_source'] = $data['memory_option_source'] ?? null;
        $this->container['cpu_option_source'] = $data['cpu_option_source'] ?? null;
        $this->container['date_created'] = $data['date_created'] ?? null;
        $this->container['last_updated'] = $data['last_updated'] ?? null;
        $this->container['region_code'] = $data['region_code'] ?? null;
        $this->container['visibility'] = $data['visibility'] ?? null;
        $this->container['editable'] = $data['editable'] ?? null;
        $this->container['provision_type'] = $data['provision_type'] ?? null;
        $this->container['tenants'] = $data['tenants'] ?? null;
        $this->container['price_sets'] = $data['price_sets'] ?? null;
        $this->container['config'] = $data['config'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets code
     *
     * @return string|null
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string|null $code code
     *
     * @return self
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets active
     *
     * @return bool|null
     */
    public function getActive()
    {
        return $this->container['active'];
    }

    /**
     * Sets active
     *
     * @param bool|null $active active
     *
     * @return self
     */
    public function setActive($active)
    {
        $this->container['active'] = $active;

        return $this;
    }

    /**
     * Gets sort_order
     *
     * @return int|null
     */
    public function getSortOrder()
    {
        return $this->container['sort_order'];
    }

    /**
     * Sets sort_order
     *
     * @param int|null $sort_order sort_order
     *
     * @return self
     */
    public function setSortOrder($sort_order)
    {
        $this->container['sort_order'] = $sort_order;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description description
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets max_storage
     *
     * @return int|null
     */
    public function getMaxStorage()
    {
        return $this->container['max_storage'];
    }

    /**
     * Sets max_storage
     *
     * @param int|null $max_storage max_storage
     *
     * @return self
     */
    public function setMaxStorage($max_storage)
    {
        $this->container['max_storage'] = $max_storage;

        return $this;
    }

    /**
     * Gets max_memory
     *
     * @return int|null
     */
    public function getMaxMemory()
    {
        return $this->container['max_memory'];
    }

    /**
     * Sets max_memory
     *
     * @param int|null $max_memory max_memory
     *
     * @return self
     */
    public function setMaxMemory($max_memory)
    {
        $this->container['max_memory'] = $max_memory;

        return $this;
    }

    /**
     * Gets max_cpu
     *
     * @return string|null
     */
    public function getMaxCpu()
    {
        return $this->container['max_cpu'];
    }

    /**
     * Sets max_cpu
     *
     * @param string|null $max_cpu max_cpu
     *
     * @return self
     */
    public function setMaxCpu($max_cpu)
    {
        $this->container['max_cpu'] = $max_cpu;

        return $this;
    }

    /**
     * Gets max_cores
     *
     * @return int|null
     */
    public function getMaxCores()
    {
        return $this->container['max_cores'];
    }

    /**
     * Sets max_cores
     *
     * @param int|null $max_cores max_cores
     *
     * @return self
     */
    public function setMaxCores($max_cores)
    {
        $this->container['max_cores'] = $max_cores;

        return $this;
    }

    /**
     * Gets max_disks
     *
     * @return string|null
     */
    public function getMaxDisks()
    {
        return $this->container['max_disks'];
    }

    /**
     * Sets max_disks
     *
     * @param string|null $max_disks max_disks
     *
     * @return self
     */
    public function setMaxDisks($max_disks)
    {
        $this->container['max_disks'] = $max_disks;

        return $this;
    }

    /**
     * Gets cores_per_socket
     *
     * @return int|null
     */
    public function getCoresPerSocket()
    {
        return $this->container['cores_per_socket'];
    }

    /**
     * Sets cores_per_socket
     *
     * @param int|null $cores_per_socket cores_per_socket
     *
     * @return self
     */
    public function setCoresPerSocket($cores_per_socket)
    {
        $this->container['cores_per_socket'] = $cores_per_socket;

        return $this;
    }

    /**
     * Gets custom_cpu
     *
     * @return bool|null
     */
    public function getCustomCpu()
    {
        return $this->container['custom_cpu'];
    }

    /**
     * Sets custom_cpu
     *
     * @param bool|null $custom_cpu custom_cpu
     *
     * @return self
     */
    public function setCustomCpu($custom_cpu)
    {
        $this->container['custom_cpu'] = $custom_cpu;

        return $this;
    }

    /**
     * Gets custom_cores
     *
     * @return bool|null
     */
    public function getCustomCores()
    {
        return $this->container['custom_cores'];
    }

    /**
     * Sets custom_cores
     *
     * @param bool|null $custom_cores custom_cores
     *
     * @return self
     */
    public function setCustomCores($custom_cores)
    {
        $this->container['custom_cores'] = $custom_cores;

        return $this;
    }

    /**
     * Gets custom_max_storage
     *
     * @return bool|null
     */
    public function getCustomMaxStorage()
    {
        return $this->container['custom_max_storage'];
    }

    /**
     * Sets custom_max_storage
     *
     * @param bool|null $custom_max_storage custom_max_storage
     *
     * @return self
     */
    public function setCustomMaxStorage($custom_max_storage)
    {
        $this->container['custom_max_storage'] = $custom_max_storage;

        return $this;
    }

    /**
     * Gets custom_max_data_storage
     *
     * @return bool|null
     */
    public function getCustomMaxDataStorage()
    {
        return $this->container['custom_max_data_storage'];
    }

    /**
     * Sets custom_max_data_storage
     *
     * @param bool|null $custom_max_data_storage custom_max_data_storage
     *
     * @return self
     */
    public function setCustomMaxDataStorage($custom_max_data_storage)
    {
        $this->container['custom_max_data_storage'] = $custom_max_data_storage;

        return $this;
    }

    /**
     * Gets custom_max_memory
     *
     * @return bool|null
     */
    public function getCustomMaxMemory()
    {
        return $this->container['custom_max_memory'];
    }

    /**
     * Sets custom_max_memory
     *
     * @param bool|null $custom_max_memory custom_max_memory
     *
     * @return self
     */
    public function setCustomMaxMemory($custom_max_memory)
    {
        $this->container['custom_max_memory'] = $custom_max_memory;

        return $this;
    }

    /**
     * Gets add_volumes
     *
     * @return bool|null
     */
    public function getAddVolumes()
    {
        return $this->container['add_volumes'];
    }

    /**
     * Sets add_volumes
     *
     * @param bool|null $add_volumes add_volumes
     *
     * @return self
     */
    public function setAddVolumes($add_volumes)
    {
        $this->container['add_volumes'] = $add_volumes;

        return $this;
    }

    /**
     * Gets memory_option_source
     *
     * @return string|null
     */
    public function getMemoryOptionSource()
    {
        return $this->container['memory_option_source'];
    }

    /**
     * Sets memory_option_source
     *
     * @param string|null $memory_option_source memory_option_source
     *
     * @return self
     */
    public function setMemoryOptionSource($memory_option_source)
    {
        $this->container['memory_option_source'] = $memory_option_source;

        return $this;
    }

    /**
     * Gets cpu_option_source
     *
     * @return string|null
     */
    public function getCpuOptionSource()
    {
        return $this->container['cpu_option_source'];
    }

    /**
     * Sets cpu_option_source
     *
     * @param string|null $cpu_option_source cpu_option_source
     *
     * @return self
     */
    public function setCpuOptionSource($cpu_option_source)
    {
        $this->container['cpu_option_source'] = $cpu_option_source;

        return $this;
    }

    /**
     * Gets date_created
     *
     * @return \DateTime|null
     */
    public function getDateCreated()
    {
        return $this->container['date_created'];
    }

    /**
     * Sets date_created
     *
     * @param \DateTime|null $date_created date_created
     *
     * @return self
     */
    public function setDateCreated($date_created)
    {
        $this->container['date_created'] = $date_created;

        return $this;
    }

    /**
     * Gets last_updated
     *
     * @return \DateTime|null
     */
    public function getLastUpdated()
    {
        return $this->container['last_updated'];
    }

    /**
     * Sets last_updated
     *
     * @param \DateTime|null $last_updated last_updated
     *
     * @return self
     */
    public function setLastUpdated($last_updated)
    {
        $this->container['last_updated'] = $last_updated;

        return $this;
    }

    /**
     * Gets region_code
     *
     * @return string|null
     */
    public function getRegionCode()
    {
        return $this->container['region_code'];
    }

    /**
     * Sets region_code
     *
     * @param string|null $region_code region_code
     *
     * @return self
     */
    public function setRegionCode($region_code)
    {
        $this->container['region_code'] = $region_code;

        return $this;
    }

    /**
     * Gets visibility
     *
     * @return string|null
     */
    public function getVisibility()
    {
        return $this->container['visibility'];
    }

    /**
     * Sets visibility
     *
     * @param string|null $visibility visibility
     *
     * @return self
     */
    public function setVisibility($visibility)
    {
        $this->container['visibility'] = $visibility;

        return $this;
    }

    /**
     * Gets editable
     *
     * @return bool|null
     */
    public function getEditable()
    {
        return $this->container['editable'];
    }

    /**
     * Sets editable
     *
     * @param bool|null $editable editable
     *
     * @return self
     */
    public function setEditable($editable)
    {
        $this->container['editable'] = $editable;

        return $this;
    }

    /**
     * Gets provision_type
     *
     * @return \OpenAPI\Client\Model\GuidanceVmwareSizingPlanBeforeActionProvisionType|null
     */
    public function getProvisionType()
    {
        return $this->container['provision_type'];
    }

    /**
     * Sets provision_type
     *
     * @param \OpenAPI\Client\Model\GuidanceVmwareSizingPlanBeforeActionProvisionType|null $provision_type provision_type
     *
     * @return self
     */
    public function setProvisionType($provision_type)
    {
        $this->container['provision_type'] = $provision_type;

        return $this;
    }

    /**
     * Gets tenants
     *
     * @return string|null
     */
    public function getTenants()
    {
        return $this->container['tenants'];
    }

    /**
     * Sets tenants
     *
     * @param string|null $tenants tenants
     *
     * @return self
     */
    public function setTenants($tenants)
    {
        $this->container['tenants'] = $tenants;

        return $this;
    }

    /**
     * Gets price_sets
     *
     * @return \OpenAPI\Client\Model\GuidanceVmwareSizingPlanBeforeActionPriceSets[]|null
     */
    public function getPriceSets()
    {
        return $this->container['price_sets'];
    }

    /**
     * Sets price_sets
     *
     * @param \OpenAPI\Client\Model\GuidanceVmwareSizingPlanBeforeActionPriceSets[]|null $price_sets price_sets
     *
     * @return self
     */
    public function setPriceSets($price_sets)
    {
        $this->container['price_sets'] = $price_sets;

        return $this;
    }

    /**
     * Gets config
     *
     * @return \OpenAPI\Client\Model\GuidanceVmwareSizingPlanBeforeActionConfig|null
     */
    public function getConfig()
    {
        return $this->container['config'];
    }

    /**
     * Sets config
     *
     * @param \OpenAPI\Client\Model\GuidanceVmwareSizingPlanBeforeActionConfig|null $config config
     *
     * @return self
     */
    public function setConfig($config)
    {
        $this->container['config'] = $config;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


