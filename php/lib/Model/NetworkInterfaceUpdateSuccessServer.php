<?php
/**
 * NetworkInterfaceUpdateSuccessServer
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * NetworkInterfaceUpdateSuccessServer Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class NetworkInterfaceUpdateSuccessServer implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'networkInterfaceUpdateSuccess_server';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'external_id' => 'string',
        'account_id' => 'int',
        'name' => 'string',
        'display_name' => 'string',
        'visibility' => 'string',
        'description' => 'string',
        'zone_id' => 'int',
        'site_id' => 'int',
        'ssh_host' => 'string',
        'ssh_port' => 'int',
        'external_ip' => 'string',
        'internal_ip' => 'string',
        'volume_id' => 'string',
        'platform' => 'string',
        'platform_version' => 'string',
        'ssh_username' => 'string',
        'ssh_password' => 'string',
        'os_device' => 'string',
        'data_device' => 'string',
        'lvm_enabled' => 'bool',
        'api_key' => 'string',
        'software_raid' => 'bool',
        'config' => 'string',
        'capacity_info' => '\OpenAPI\Client\Model\NetworkInterfaceUpdateSuccessServerCapacityInfo',
        'date_created' => '\DateTime',
        'last_updated' => '\DateTime',
        'last_stats' => 'string',
        'status' => 'string',
        'compute_server_type' => '\OpenAPI\Client\Model\NetworkInterfaceUpdateSuccessServerComputeServerType',
        'interfaces' => '\OpenAPI\Client\Model\NetworkInterfaceUpdateSuccessServerInterfaces[]',
        'zone' => '\OpenAPI\Client\Model\NetworkInterfaceUpdateSuccessServerZone'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int64',
        'external_id' => null,
        'account_id' => 'int64',
        'name' => null,
        'display_name' => null,
        'visibility' => null,
        'description' => null,
        'zone_id' => 'int64',
        'site_id' => 'int64',
        'ssh_host' => null,
        'ssh_port' => 'int64',
        'external_ip' => null,
        'internal_ip' => null,
        'volume_id' => null,
        'platform' => null,
        'platform_version' => null,
        'ssh_username' => null,
        'ssh_password' => null,
        'os_device' => null,
        'data_device' => null,
        'lvm_enabled' => null,
        'api_key' => null,
        'software_raid' => null,
        'config' => null,
        'capacity_info' => null,
        'date_created' => 'date-time',
        'last_updated' => 'date-time',
        'last_stats' => null,
        'status' => null,
        'compute_server_type' => null,
        'interfaces' => null,
        'zone' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'external_id' => 'externalId',
        'account_id' => 'accountId',
        'name' => 'name',
        'display_name' => 'displayName',
        'visibility' => 'visibility',
        'description' => 'description',
        'zone_id' => 'zoneId',
        'site_id' => 'siteId',
        'ssh_host' => 'sshHost',
        'ssh_port' => 'sshPort',
        'external_ip' => 'externalIp',
        'internal_ip' => 'internalIp',
        'volume_id' => 'volumeId',
        'platform' => 'platform',
        'platform_version' => 'platformVersion',
        'ssh_username' => 'sshUsername',
        'ssh_password' => 'sshPassword',
        'os_device' => 'osDevice',
        'data_device' => 'dataDevice',
        'lvm_enabled' => 'lvmEnabled',
        'api_key' => 'apiKey',
        'software_raid' => 'softwareRaid',
        'config' => 'config',
        'capacity_info' => 'capacityInfo',
        'date_created' => 'dateCreated',
        'last_updated' => 'lastUpdated',
        'last_stats' => 'lastStats',
        'status' => 'status',
        'compute_server_type' => 'computeServerType',
        'interfaces' => 'interfaces',
        'zone' => 'zone'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'external_id' => 'setExternalId',
        'account_id' => 'setAccountId',
        'name' => 'setName',
        'display_name' => 'setDisplayName',
        'visibility' => 'setVisibility',
        'description' => 'setDescription',
        'zone_id' => 'setZoneId',
        'site_id' => 'setSiteId',
        'ssh_host' => 'setSshHost',
        'ssh_port' => 'setSshPort',
        'external_ip' => 'setExternalIp',
        'internal_ip' => 'setInternalIp',
        'volume_id' => 'setVolumeId',
        'platform' => 'setPlatform',
        'platform_version' => 'setPlatformVersion',
        'ssh_username' => 'setSshUsername',
        'ssh_password' => 'setSshPassword',
        'os_device' => 'setOsDevice',
        'data_device' => 'setDataDevice',
        'lvm_enabled' => 'setLvmEnabled',
        'api_key' => 'setApiKey',
        'software_raid' => 'setSoftwareRaid',
        'config' => 'setConfig',
        'capacity_info' => 'setCapacityInfo',
        'date_created' => 'setDateCreated',
        'last_updated' => 'setLastUpdated',
        'last_stats' => 'setLastStats',
        'status' => 'setStatus',
        'compute_server_type' => 'setComputeServerType',
        'interfaces' => 'setInterfaces',
        'zone' => 'setZone'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'external_id' => 'getExternalId',
        'account_id' => 'getAccountId',
        'name' => 'getName',
        'display_name' => 'getDisplayName',
        'visibility' => 'getVisibility',
        'description' => 'getDescription',
        'zone_id' => 'getZoneId',
        'site_id' => 'getSiteId',
        'ssh_host' => 'getSshHost',
        'ssh_port' => 'getSshPort',
        'external_ip' => 'getExternalIp',
        'internal_ip' => 'getInternalIp',
        'volume_id' => 'getVolumeId',
        'platform' => 'getPlatform',
        'platform_version' => 'getPlatformVersion',
        'ssh_username' => 'getSshUsername',
        'ssh_password' => 'getSshPassword',
        'os_device' => 'getOsDevice',
        'data_device' => 'getDataDevice',
        'lvm_enabled' => 'getLvmEnabled',
        'api_key' => 'getApiKey',
        'software_raid' => 'getSoftwareRaid',
        'config' => 'getConfig',
        'capacity_info' => 'getCapacityInfo',
        'date_created' => 'getDateCreated',
        'last_updated' => 'getLastUpdated',
        'last_stats' => 'getLastStats',
        'status' => 'getStatus',
        'compute_server_type' => 'getComputeServerType',
        'interfaces' => 'getInterfaces',
        'zone' => 'getZone'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['external_id'] = $data['external_id'] ?? null;
        $this->container['account_id'] = $data['account_id'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['display_name'] = $data['display_name'] ?? null;
        $this->container['visibility'] = $data['visibility'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
        $this->container['zone_id'] = $data['zone_id'] ?? null;
        $this->container['site_id'] = $data['site_id'] ?? null;
        $this->container['ssh_host'] = $data['ssh_host'] ?? null;
        $this->container['ssh_port'] = $data['ssh_port'] ?? null;
        $this->container['external_ip'] = $data['external_ip'] ?? null;
        $this->container['internal_ip'] = $data['internal_ip'] ?? null;
        $this->container['volume_id'] = $data['volume_id'] ?? null;
        $this->container['platform'] = $data['platform'] ?? null;
        $this->container['platform_version'] = $data['platform_version'] ?? null;
        $this->container['ssh_username'] = $data['ssh_username'] ?? null;
        $this->container['ssh_password'] = $data['ssh_password'] ?? null;
        $this->container['os_device'] = $data['os_device'] ?? null;
        $this->container['data_device'] = $data['data_device'] ?? null;
        $this->container['lvm_enabled'] = $data['lvm_enabled'] ?? null;
        $this->container['api_key'] = $data['api_key'] ?? null;
        $this->container['software_raid'] = $data['software_raid'] ?? null;
        $this->container['config'] = $data['config'] ?? null;
        $this->container['capacity_info'] = $data['capacity_info'] ?? null;
        $this->container['date_created'] = $data['date_created'] ?? null;
        $this->container['last_updated'] = $data['last_updated'] ?? null;
        $this->container['last_stats'] = $data['last_stats'] ?? null;
        $this->container['status'] = $data['status'] ?? null;
        $this->container['compute_server_type'] = $data['compute_server_type'] ?? null;
        $this->container['interfaces'] = $data['interfaces'] ?? null;
        $this->container['zone'] = $data['zone'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets external_id
     *
     * @return string|null
     */
    public function getExternalId()
    {
        return $this->container['external_id'];
    }

    /**
     * Sets external_id
     *
     * @param string|null $external_id external_id
     *
     * @return self
     */
    public function setExternalId($external_id)
    {
        $this->container['external_id'] = $external_id;

        return $this;
    }

    /**
     * Gets account_id
     *
     * @return int|null
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param int|null $account_id account_id
     *
     * @return self
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets display_name
     *
     * @return string|null
     */
    public function getDisplayName()
    {
        return $this->container['display_name'];
    }

    /**
     * Sets display_name
     *
     * @param string|null $display_name display_name
     *
     * @return self
     */
    public function setDisplayName($display_name)
    {
        $this->container['display_name'] = $display_name;

        return $this;
    }

    /**
     * Gets visibility
     *
     * @return string|null
     */
    public function getVisibility()
    {
        return $this->container['visibility'];
    }

    /**
     * Sets visibility
     *
     * @param string|null $visibility visibility
     *
     * @return self
     */
    public function setVisibility($visibility)
    {
        $this->container['visibility'] = $visibility;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description description
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets zone_id
     *
     * @return int|null
     */
    public function getZoneId()
    {
        return $this->container['zone_id'];
    }

    /**
     * Sets zone_id
     *
     * @param int|null $zone_id zone_id
     *
     * @return self
     */
    public function setZoneId($zone_id)
    {
        $this->container['zone_id'] = $zone_id;

        return $this;
    }

    /**
     * Gets site_id
     *
     * @return int|null
     */
    public function getSiteId()
    {
        return $this->container['site_id'];
    }

    /**
     * Sets site_id
     *
     * @param int|null $site_id site_id
     *
     * @return self
     */
    public function setSiteId($site_id)
    {
        $this->container['site_id'] = $site_id;

        return $this;
    }

    /**
     * Gets ssh_host
     *
     * @return string|null
     */
    public function getSshHost()
    {
        return $this->container['ssh_host'];
    }

    /**
     * Sets ssh_host
     *
     * @param string|null $ssh_host ssh_host
     *
     * @return self
     */
    public function setSshHost($ssh_host)
    {
        $this->container['ssh_host'] = $ssh_host;

        return $this;
    }

    /**
     * Gets ssh_port
     *
     * @return int|null
     */
    public function getSshPort()
    {
        return $this->container['ssh_port'];
    }

    /**
     * Sets ssh_port
     *
     * @param int|null $ssh_port ssh_port
     *
     * @return self
     */
    public function setSshPort($ssh_port)
    {
        $this->container['ssh_port'] = $ssh_port;

        return $this;
    }

    /**
     * Gets external_ip
     *
     * @return string|null
     */
    public function getExternalIp()
    {
        return $this->container['external_ip'];
    }

    /**
     * Sets external_ip
     *
     * @param string|null $external_ip external_ip
     *
     * @return self
     */
    public function setExternalIp($external_ip)
    {
        $this->container['external_ip'] = $external_ip;

        return $this;
    }

    /**
     * Gets internal_ip
     *
     * @return string|null
     */
    public function getInternalIp()
    {
        return $this->container['internal_ip'];
    }

    /**
     * Sets internal_ip
     *
     * @param string|null $internal_ip internal_ip
     *
     * @return self
     */
    public function setInternalIp($internal_ip)
    {
        $this->container['internal_ip'] = $internal_ip;

        return $this;
    }

    /**
     * Gets volume_id
     *
     * @return string|null
     */
    public function getVolumeId()
    {
        return $this->container['volume_id'];
    }

    /**
     * Sets volume_id
     *
     * @param string|null $volume_id volume_id
     *
     * @return self
     */
    public function setVolumeId($volume_id)
    {
        $this->container['volume_id'] = $volume_id;

        return $this;
    }

    /**
     * Gets platform
     *
     * @return string|null
     */
    public function getPlatform()
    {
        return $this->container['platform'];
    }

    /**
     * Sets platform
     *
     * @param string|null $platform platform
     *
     * @return self
     */
    public function setPlatform($platform)
    {
        $this->container['platform'] = $platform;

        return $this;
    }

    /**
     * Gets platform_version
     *
     * @return string|null
     */
    public function getPlatformVersion()
    {
        return $this->container['platform_version'];
    }

    /**
     * Sets platform_version
     *
     * @param string|null $platform_version platform_version
     *
     * @return self
     */
    public function setPlatformVersion($platform_version)
    {
        $this->container['platform_version'] = $platform_version;

        return $this;
    }

    /**
     * Gets ssh_username
     *
     * @return string|null
     */
    public function getSshUsername()
    {
        return $this->container['ssh_username'];
    }

    /**
     * Sets ssh_username
     *
     * @param string|null $ssh_username ssh_username
     *
     * @return self
     */
    public function setSshUsername($ssh_username)
    {
        $this->container['ssh_username'] = $ssh_username;

        return $this;
    }

    /**
     * Gets ssh_password
     *
     * @return string|null
     */
    public function getSshPassword()
    {
        return $this->container['ssh_password'];
    }

    /**
     * Sets ssh_password
     *
     * @param string|null $ssh_password ssh_password
     *
     * @return self
     */
    public function setSshPassword($ssh_password)
    {
        $this->container['ssh_password'] = $ssh_password;

        return $this;
    }

    /**
     * Gets os_device
     *
     * @return string|null
     */
    public function getOsDevice()
    {
        return $this->container['os_device'];
    }

    /**
     * Sets os_device
     *
     * @param string|null $os_device os_device
     *
     * @return self
     */
    public function setOsDevice($os_device)
    {
        $this->container['os_device'] = $os_device;

        return $this;
    }

    /**
     * Gets data_device
     *
     * @return string|null
     */
    public function getDataDevice()
    {
        return $this->container['data_device'];
    }

    /**
     * Sets data_device
     *
     * @param string|null $data_device data_device
     *
     * @return self
     */
    public function setDataDevice($data_device)
    {
        $this->container['data_device'] = $data_device;

        return $this;
    }

    /**
     * Gets lvm_enabled
     *
     * @return bool|null
     */
    public function getLvmEnabled()
    {
        return $this->container['lvm_enabled'];
    }

    /**
     * Sets lvm_enabled
     *
     * @param bool|null $lvm_enabled lvm_enabled
     *
     * @return self
     */
    public function setLvmEnabled($lvm_enabled)
    {
        $this->container['lvm_enabled'] = $lvm_enabled;

        return $this;
    }

    /**
     * Gets api_key
     *
     * @return string|null
     */
    public function getApiKey()
    {
        return $this->container['api_key'];
    }

    /**
     * Sets api_key
     *
     * @param string|null $api_key api_key
     *
     * @return self
     */
    public function setApiKey($api_key)
    {
        $this->container['api_key'] = $api_key;

        return $this;
    }

    /**
     * Gets software_raid
     *
     * @return bool|null
     */
    public function getSoftwareRaid()
    {
        return $this->container['software_raid'];
    }

    /**
     * Sets software_raid
     *
     * @param bool|null $software_raid software_raid
     *
     * @return self
     */
    public function setSoftwareRaid($software_raid)
    {
        $this->container['software_raid'] = $software_raid;

        return $this;
    }

    /**
     * Gets config
     *
     * @return string|null
     */
    public function getConfig()
    {
        return $this->container['config'];
    }

    /**
     * Sets config
     *
     * @param string|null $config config
     *
     * @return self
     */
    public function setConfig($config)
    {
        $this->container['config'] = $config;

        return $this;
    }

    /**
     * Gets capacity_info
     *
     * @return \OpenAPI\Client\Model\NetworkInterfaceUpdateSuccessServerCapacityInfo|null
     */
    public function getCapacityInfo()
    {
        return $this->container['capacity_info'];
    }

    /**
     * Sets capacity_info
     *
     * @param \OpenAPI\Client\Model\NetworkInterfaceUpdateSuccessServerCapacityInfo|null $capacity_info capacity_info
     *
     * @return self
     */
    public function setCapacityInfo($capacity_info)
    {
        $this->container['capacity_info'] = $capacity_info;

        return $this;
    }

    /**
     * Gets date_created
     *
     * @return \DateTime|null
     */
    public function getDateCreated()
    {
        return $this->container['date_created'];
    }

    /**
     * Sets date_created
     *
     * @param \DateTime|null $date_created date_created
     *
     * @return self
     */
    public function setDateCreated($date_created)
    {
        $this->container['date_created'] = $date_created;

        return $this;
    }

    /**
     * Gets last_updated
     *
     * @return \DateTime|null
     */
    public function getLastUpdated()
    {
        return $this->container['last_updated'];
    }

    /**
     * Sets last_updated
     *
     * @param \DateTime|null $last_updated last_updated
     *
     * @return self
     */
    public function setLastUpdated($last_updated)
    {
        $this->container['last_updated'] = $last_updated;

        return $this;
    }

    /**
     * Gets last_stats
     *
     * @return string|null
     */
    public function getLastStats()
    {
        return $this->container['last_stats'];
    }

    /**
     * Sets last_stats
     *
     * @param string|null $last_stats last_stats
     *
     * @return self
     */
    public function setLastStats($last_stats)
    {
        $this->container['last_stats'] = $last_stats;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string|null $status status
     *
     * @return self
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets compute_server_type
     *
     * @return \OpenAPI\Client\Model\NetworkInterfaceUpdateSuccessServerComputeServerType|null
     */
    public function getComputeServerType()
    {
        return $this->container['compute_server_type'];
    }

    /**
     * Sets compute_server_type
     *
     * @param \OpenAPI\Client\Model\NetworkInterfaceUpdateSuccessServerComputeServerType|null $compute_server_type compute_server_type
     *
     * @return self
     */
    public function setComputeServerType($compute_server_type)
    {
        $this->container['compute_server_type'] = $compute_server_type;

        return $this;
    }

    /**
     * Gets interfaces
     *
     * @return \OpenAPI\Client\Model\NetworkInterfaceUpdateSuccessServerInterfaces[]|null
     */
    public function getInterfaces()
    {
        return $this->container['interfaces'];
    }

    /**
     * Sets interfaces
     *
     * @param \OpenAPI\Client\Model\NetworkInterfaceUpdateSuccessServerInterfaces[]|null $interfaces interfaces
     *
     * @return self
     */
    public function setInterfaces($interfaces)
    {
        $this->container['interfaces'] = $interfaces;

        return $this;
    }

    /**
     * Gets zone
     *
     * @return \OpenAPI\Client\Model\NetworkInterfaceUpdateSuccessServerZone|null
     */
    public function getZone()
    {
        return $this->container['zone'];
    }

    /**
     * Sets zone
     *
     * @param \OpenAPI\Client\Model\NetworkInterfaceUpdateSuccessServerZone|null $zone zone
     *
     * @return self
     */
    public function setZone($zone)
    {
        $this->container['zone'] = $zone;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


