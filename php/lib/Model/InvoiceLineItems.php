<?php
/**
 * InvoiceLineItems
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * InvoiceLineItems Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class InvoiceLineItems implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'invoice_lineItems';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'invoice_id' => 'int',
        'ref_type' => 'string',
        'ref_id' => 'int',
        'ref_name' => 'string',
        'start_date' => '\DateTime',
        'end_date' => '\DateTime',
        'item_id' => 'string',
        'item_type' => 'string',
        'item_name' => 'string',
        'item_description' => 'string',
        'product_id' => 'string',
        'product_code' => 'string',
        'product_name' => 'string',
        'item_seller' => 'string',
        'item_action' => 'string',
        'external_id' => 'string',
        'rate_id' => 'string',
        'rate_class' => 'string',
        'rate_unit' => 'string',
        'rate_term' => 'string',
        'usage_type' => 'string',
        'usage_category' => 'string',
        'usage_service' => 'string',
        'item_usage' => 'float',
        'item_rate' => 'float',
        'item_cost' => 'float',
        'item_price' => 'float',
        'item_tax' => 'int',
        'item_term' => 'string',
        'tax_type' => 'string',
        'region_code' => 'string',
        'currency' => 'string',
        'conversion_rate' => 'int',
        'date_created' => '\DateTime',
        'last_updated' => '\DateTime'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int64',
        'invoice_id' => 'int64',
        'ref_type' => null,
        'ref_id' => 'int64',
        'ref_name' => null,
        'start_date' => 'date-time',
        'end_date' => 'date-time',
        'item_id' => null,
        'item_type' => null,
        'item_name' => null,
        'item_description' => null,
        'product_id' => null,
        'product_code' => null,
        'product_name' => null,
        'item_seller' => null,
        'item_action' => null,
        'external_id' => null,
        'rate_id' => null,
        'rate_class' => null,
        'rate_unit' => null,
        'rate_term' => null,
        'usage_type' => null,
        'usage_category' => null,
        'usage_service' => null,
        'item_usage' => null,
        'item_rate' => null,
        'item_cost' => null,
        'item_price' => null,
        'item_tax' => 'int64',
        'item_term' => null,
        'tax_type' => null,
        'region_code' => null,
        'currency' => null,
        'conversion_rate' => 'int64',
        'date_created' => 'date-time',
        'last_updated' => 'date-time'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'invoice_id' => 'invoiceId',
        'ref_type' => 'refType',
        'ref_id' => 'refId',
        'ref_name' => 'refName',
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'item_id' => 'itemId',
        'item_type' => 'itemType',
        'item_name' => 'itemName',
        'item_description' => 'itemDescription',
        'product_id' => 'productId',
        'product_code' => 'productCode',
        'product_name' => 'productName',
        'item_seller' => 'itemSeller',
        'item_action' => 'itemAction',
        'external_id' => 'externalId',
        'rate_id' => 'rateId',
        'rate_class' => 'rateClass',
        'rate_unit' => 'rateUnit',
        'rate_term' => 'rateTerm',
        'usage_type' => 'usageType',
        'usage_category' => 'usageCategory',
        'usage_service' => 'usageService',
        'item_usage' => 'itemUsage',
        'item_rate' => 'itemRate',
        'item_cost' => 'itemCost',
        'item_price' => 'itemPrice',
        'item_tax' => 'itemTax',
        'item_term' => 'itemTerm',
        'tax_type' => 'taxType',
        'region_code' => 'regionCode',
        'currency' => 'currency',
        'conversion_rate' => 'conversionRate',
        'date_created' => 'dateCreated',
        'last_updated' => 'lastUpdated'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'invoice_id' => 'setInvoiceId',
        'ref_type' => 'setRefType',
        'ref_id' => 'setRefId',
        'ref_name' => 'setRefName',
        'start_date' => 'setStartDate',
        'end_date' => 'setEndDate',
        'item_id' => 'setItemId',
        'item_type' => 'setItemType',
        'item_name' => 'setItemName',
        'item_description' => 'setItemDescription',
        'product_id' => 'setProductId',
        'product_code' => 'setProductCode',
        'product_name' => 'setProductName',
        'item_seller' => 'setItemSeller',
        'item_action' => 'setItemAction',
        'external_id' => 'setExternalId',
        'rate_id' => 'setRateId',
        'rate_class' => 'setRateClass',
        'rate_unit' => 'setRateUnit',
        'rate_term' => 'setRateTerm',
        'usage_type' => 'setUsageType',
        'usage_category' => 'setUsageCategory',
        'usage_service' => 'setUsageService',
        'item_usage' => 'setItemUsage',
        'item_rate' => 'setItemRate',
        'item_cost' => 'setItemCost',
        'item_price' => 'setItemPrice',
        'item_tax' => 'setItemTax',
        'item_term' => 'setItemTerm',
        'tax_type' => 'setTaxType',
        'region_code' => 'setRegionCode',
        'currency' => 'setCurrency',
        'conversion_rate' => 'setConversionRate',
        'date_created' => 'setDateCreated',
        'last_updated' => 'setLastUpdated'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'invoice_id' => 'getInvoiceId',
        'ref_type' => 'getRefType',
        'ref_id' => 'getRefId',
        'ref_name' => 'getRefName',
        'start_date' => 'getStartDate',
        'end_date' => 'getEndDate',
        'item_id' => 'getItemId',
        'item_type' => 'getItemType',
        'item_name' => 'getItemName',
        'item_description' => 'getItemDescription',
        'product_id' => 'getProductId',
        'product_code' => 'getProductCode',
        'product_name' => 'getProductName',
        'item_seller' => 'getItemSeller',
        'item_action' => 'getItemAction',
        'external_id' => 'getExternalId',
        'rate_id' => 'getRateId',
        'rate_class' => 'getRateClass',
        'rate_unit' => 'getRateUnit',
        'rate_term' => 'getRateTerm',
        'usage_type' => 'getUsageType',
        'usage_category' => 'getUsageCategory',
        'usage_service' => 'getUsageService',
        'item_usage' => 'getItemUsage',
        'item_rate' => 'getItemRate',
        'item_cost' => 'getItemCost',
        'item_price' => 'getItemPrice',
        'item_tax' => 'getItemTax',
        'item_term' => 'getItemTerm',
        'tax_type' => 'getTaxType',
        'region_code' => 'getRegionCode',
        'currency' => 'getCurrency',
        'conversion_rate' => 'getConversionRate',
        'date_created' => 'getDateCreated',
        'last_updated' => 'getLastUpdated'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['invoice_id'] = $data['invoice_id'] ?? null;
        $this->container['ref_type'] = $data['ref_type'] ?? null;
        $this->container['ref_id'] = $data['ref_id'] ?? null;
        $this->container['ref_name'] = $data['ref_name'] ?? null;
        $this->container['start_date'] = $data['start_date'] ?? null;
        $this->container['end_date'] = $data['end_date'] ?? null;
        $this->container['item_id'] = $data['item_id'] ?? null;
        $this->container['item_type'] = $data['item_type'] ?? null;
        $this->container['item_name'] = $data['item_name'] ?? null;
        $this->container['item_description'] = $data['item_description'] ?? null;
        $this->container['product_id'] = $data['product_id'] ?? null;
        $this->container['product_code'] = $data['product_code'] ?? null;
        $this->container['product_name'] = $data['product_name'] ?? null;
        $this->container['item_seller'] = $data['item_seller'] ?? null;
        $this->container['item_action'] = $data['item_action'] ?? null;
        $this->container['external_id'] = $data['external_id'] ?? null;
        $this->container['rate_id'] = $data['rate_id'] ?? null;
        $this->container['rate_class'] = $data['rate_class'] ?? null;
        $this->container['rate_unit'] = $data['rate_unit'] ?? null;
        $this->container['rate_term'] = $data['rate_term'] ?? null;
        $this->container['usage_type'] = $data['usage_type'] ?? null;
        $this->container['usage_category'] = $data['usage_category'] ?? null;
        $this->container['usage_service'] = $data['usage_service'] ?? null;
        $this->container['item_usage'] = $data['item_usage'] ?? null;
        $this->container['item_rate'] = $data['item_rate'] ?? null;
        $this->container['item_cost'] = $data['item_cost'] ?? null;
        $this->container['item_price'] = $data['item_price'] ?? null;
        $this->container['item_tax'] = $data['item_tax'] ?? null;
        $this->container['item_term'] = $data['item_term'] ?? null;
        $this->container['tax_type'] = $data['tax_type'] ?? null;
        $this->container['region_code'] = $data['region_code'] ?? null;
        $this->container['currency'] = $data['currency'] ?? null;
        $this->container['conversion_rate'] = $data['conversion_rate'] ?? null;
        $this->container['date_created'] = $data['date_created'] ?? null;
        $this->container['last_updated'] = $data['last_updated'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets invoice_id
     *
     * @return int|null
     */
    public function getInvoiceId()
    {
        return $this->container['invoice_id'];
    }

    /**
     * Sets invoice_id
     *
     * @param int|null $invoice_id invoice_id
     *
     * @return self
     */
    public function setInvoiceId($invoice_id)
    {
        $this->container['invoice_id'] = $invoice_id;

        return $this;
    }

    /**
     * Gets ref_type
     *
     * @return string|null
     */
    public function getRefType()
    {
        return $this->container['ref_type'];
    }

    /**
     * Sets ref_type
     *
     * @param string|null $ref_type ref_type
     *
     * @return self
     */
    public function setRefType($ref_type)
    {
        $this->container['ref_type'] = $ref_type;

        return $this;
    }

    /**
     * Gets ref_id
     *
     * @return int|null
     */
    public function getRefId()
    {
        return $this->container['ref_id'];
    }

    /**
     * Sets ref_id
     *
     * @param int|null $ref_id ref_id
     *
     * @return self
     */
    public function setRefId($ref_id)
    {
        $this->container['ref_id'] = $ref_id;

        return $this;
    }

    /**
     * Gets ref_name
     *
     * @return string|null
     */
    public function getRefName()
    {
        return $this->container['ref_name'];
    }

    /**
     * Sets ref_name
     *
     * @param string|null $ref_name ref_name
     *
     * @return self
     */
    public function setRefName($ref_name)
    {
        $this->container['ref_name'] = $ref_name;

        return $this;
    }

    /**
     * Gets start_date
     *
     * @return \DateTime|null
     */
    public function getStartDate()
    {
        return $this->container['start_date'];
    }

    /**
     * Sets start_date
     *
     * @param \DateTime|null $start_date start_date
     *
     * @return self
     */
    public function setStartDate($start_date)
    {
        $this->container['start_date'] = $start_date;

        return $this;
    }

    /**
     * Gets end_date
     *
     * @return \DateTime|null
     */
    public function getEndDate()
    {
        return $this->container['end_date'];
    }

    /**
     * Sets end_date
     *
     * @param \DateTime|null $end_date end_date
     *
     * @return self
     */
    public function setEndDate($end_date)
    {
        $this->container['end_date'] = $end_date;

        return $this;
    }

    /**
     * Gets item_id
     *
     * @return string|null
     */
    public function getItemId()
    {
        return $this->container['item_id'];
    }

    /**
     * Sets item_id
     *
     * @param string|null $item_id item_id
     *
     * @return self
     */
    public function setItemId($item_id)
    {
        $this->container['item_id'] = $item_id;

        return $this;
    }

    /**
     * Gets item_type
     *
     * @return string|null
     */
    public function getItemType()
    {
        return $this->container['item_type'];
    }

    /**
     * Sets item_type
     *
     * @param string|null $item_type item_type
     *
     * @return self
     */
    public function setItemType($item_type)
    {
        $this->container['item_type'] = $item_type;

        return $this;
    }

    /**
     * Gets item_name
     *
     * @return string|null
     */
    public function getItemName()
    {
        return $this->container['item_name'];
    }

    /**
     * Sets item_name
     *
     * @param string|null $item_name item_name
     *
     * @return self
     */
    public function setItemName($item_name)
    {
        $this->container['item_name'] = $item_name;

        return $this;
    }

    /**
     * Gets item_description
     *
     * @return string|null
     */
    public function getItemDescription()
    {
        return $this->container['item_description'];
    }

    /**
     * Sets item_description
     *
     * @param string|null $item_description item_description
     *
     * @return self
     */
    public function setItemDescription($item_description)
    {
        $this->container['item_description'] = $item_description;

        return $this;
    }

    /**
     * Gets product_id
     *
     * @return string|null
     */
    public function getProductId()
    {
        return $this->container['product_id'];
    }

    /**
     * Sets product_id
     *
     * @param string|null $product_id product_id
     *
     * @return self
     */
    public function setProductId($product_id)
    {
        $this->container['product_id'] = $product_id;

        return $this;
    }

    /**
     * Gets product_code
     *
     * @return string|null
     */
    public function getProductCode()
    {
        return $this->container['product_code'];
    }

    /**
     * Sets product_code
     *
     * @param string|null $product_code product_code
     *
     * @return self
     */
    public function setProductCode($product_code)
    {
        $this->container['product_code'] = $product_code;

        return $this;
    }

    /**
     * Gets product_name
     *
     * @return string|null
     */
    public function getProductName()
    {
        return $this->container['product_name'];
    }

    /**
     * Sets product_name
     *
     * @param string|null $product_name product_name
     *
     * @return self
     */
    public function setProductName($product_name)
    {
        $this->container['product_name'] = $product_name;

        return $this;
    }

    /**
     * Gets item_seller
     *
     * @return string|null
     */
    public function getItemSeller()
    {
        return $this->container['item_seller'];
    }

    /**
     * Sets item_seller
     *
     * @param string|null $item_seller item_seller
     *
     * @return self
     */
    public function setItemSeller($item_seller)
    {
        $this->container['item_seller'] = $item_seller;

        return $this;
    }

    /**
     * Gets item_action
     *
     * @return string|null
     */
    public function getItemAction()
    {
        return $this->container['item_action'];
    }

    /**
     * Sets item_action
     *
     * @param string|null $item_action item_action
     *
     * @return self
     */
    public function setItemAction($item_action)
    {
        $this->container['item_action'] = $item_action;

        return $this;
    }

    /**
     * Gets external_id
     *
     * @return string|null
     */
    public function getExternalId()
    {
        return $this->container['external_id'];
    }

    /**
     * Sets external_id
     *
     * @param string|null $external_id external_id
     *
     * @return self
     */
    public function setExternalId($external_id)
    {
        $this->container['external_id'] = $external_id;

        return $this;
    }

    /**
     * Gets rate_id
     *
     * @return string|null
     */
    public function getRateId()
    {
        return $this->container['rate_id'];
    }

    /**
     * Sets rate_id
     *
     * @param string|null $rate_id rate_id
     *
     * @return self
     */
    public function setRateId($rate_id)
    {
        $this->container['rate_id'] = $rate_id;

        return $this;
    }

    /**
     * Gets rate_class
     *
     * @return string|null
     */
    public function getRateClass()
    {
        return $this->container['rate_class'];
    }

    /**
     * Sets rate_class
     *
     * @param string|null $rate_class rate_class
     *
     * @return self
     */
    public function setRateClass($rate_class)
    {
        $this->container['rate_class'] = $rate_class;

        return $this;
    }

    /**
     * Gets rate_unit
     *
     * @return string|null
     */
    public function getRateUnit()
    {
        return $this->container['rate_unit'];
    }

    /**
     * Sets rate_unit
     *
     * @param string|null $rate_unit rate_unit
     *
     * @return self
     */
    public function setRateUnit($rate_unit)
    {
        $this->container['rate_unit'] = $rate_unit;

        return $this;
    }

    /**
     * Gets rate_term
     *
     * @return string|null
     */
    public function getRateTerm()
    {
        return $this->container['rate_term'];
    }

    /**
     * Sets rate_term
     *
     * @param string|null $rate_term rate_term
     *
     * @return self
     */
    public function setRateTerm($rate_term)
    {
        $this->container['rate_term'] = $rate_term;

        return $this;
    }

    /**
     * Gets usage_type
     *
     * @return string|null
     */
    public function getUsageType()
    {
        return $this->container['usage_type'];
    }

    /**
     * Sets usage_type
     *
     * @param string|null $usage_type usage_type
     *
     * @return self
     */
    public function setUsageType($usage_type)
    {
        $this->container['usage_type'] = $usage_type;

        return $this;
    }

    /**
     * Gets usage_category
     *
     * @return string|null
     */
    public function getUsageCategory()
    {
        return $this->container['usage_category'];
    }

    /**
     * Sets usage_category
     *
     * @param string|null $usage_category usage_category
     *
     * @return self
     */
    public function setUsageCategory($usage_category)
    {
        $this->container['usage_category'] = $usage_category;

        return $this;
    }

    /**
     * Gets usage_service
     *
     * @return string|null
     */
    public function getUsageService()
    {
        return $this->container['usage_service'];
    }

    /**
     * Sets usage_service
     *
     * @param string|null $usage_service usage_service
     *
     * @return self
     */
    public function setUsageService($usage_service)
    {
        $this->container['usage_service'] = $usage_service;

        return $this;
    }

    /**
     * Gets item_usage
     *
     * @return float|null
     */
    public function getItemUsage()
    {
        return $this->container['item_usage'];
    }

    /**
     * Sets item_usage
     *
     * @param float|null $item_usage item_usage
     *
     * @return self
     */
    public function setItemUsage($item_usage)
    {
        $this->container['item_usage'] = $item_usage;

        return $this;
    }

    /**
     * Gets item_rate
     *
     * @return float|null
     */
    public function getItemRate()
    {
        return $this->container['item_rate'];
    }

    /**
     * Sets item_rate
     *
     * @param float|null $item_rate item_rate
     *
     * @return self
     */
    public function setItemRate($item_rate)
    {
        $this->container['item_rate'] = $item_rate;

        return $this;
    }

    /**
     * Gets item_cost
     *
     * @return float|null
     */
    public function getItemCost()
    {
        return $this->container['item_cost'];
    }

    /**
     * Sets item_cost
     *
     * @param float|null $item_cost item_cost
     *
     * @return self
     */
    public function setItemCost($item_cost)
    {
        $this->container['item_cost'] = $item_cost;

        return $this;
    }

    /**
     * Gets item_price
     *
     * @return float|null
     */
    public function getItemPrice()
    {
        return $this->container['item_price'];
    }

    /**
     * Sets item_price
     *
     * @param float|null $item_price item_price
     *
     * @return self
     */
    public function setItemPrice($item_price)
    {
        $this->container['item_price'] = $item_price;

        return $this;
    }

    /**
     * Gets item_tax
     *
     * @return int|null
     */
    public function getItemTax()
    {
        return $this->container['item_tax'];
    }

    /**
     * Sets item_tax
     *
     * @param int|null $item_tax item_tax
     *
     * @return self
     */
    public function setItemTax($item_tax)
    {
        $this->container['item_tax'] = $item_tax;

        return $this;
    }

    /**
     * Gets item_term
     *
     * @return string|null
     */
    public function getItemTerm()
    {
        return $this->container['item_term'];
    }

    /**
     * Sets item_term
     *
     * @param string|null $item_term item_term
     *
     * @return self
     */
    public function setItemTerm($item_term)
    {
        $this->container['item_term'] = $item_term;

        return $this;
    }

    /**
     * Gets tax_type
     *
     * @return string|null
     */
    public function getTaxType()
    {
        return $this->container['tax_type'];
    }

    /**
     * Sets tax_type
     *
     * @param string|null $tax_type tax_type
     *
     * @return self
     */
    public function setTaxType($tax_type)
    {
        $this->container['tax_type'] = $tax_type;

        return $this;
    }

    /**
     * Gets region_code
     *
     * @return string|null
     */
    public function getRegionCode()
    {
        return $this->container['region_code'];
    }

    /**
     * Sets region_code
     *
     * @param string|null $region_code region_code
     *
     * @return self
     */
    public function setRegionCode($region_code)
    {
        $this->container['region_code'] = $region_code;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string|null
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string|null $currency currency
     *
     * @return self
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets conversion_rate
     *
     * @return int|null
     */
    public function getConversionRate()
    {
        return $this->container['conversion_rate'];
    }

    /**
     * Sets conversion_rate
     *
     * @param int|null $conversion_rate conversion_rate
     *
     * @return self
     */
    public function setConversionRate($conversion_rate)
    {
        $this->container['conversion_rate'] = $conversion_rate;

        return $this;
    }

    /**
     * Gets date_created
     *
     * @return \DateTime|null
     */
    public function getDateCreated()
    {
        return $this->container['date_created'];
    }

    /**
     * Sets date_created
     *
     * @param \DateTime|null $date_created date_created
     *
     * @return self
     */
    public function setDateCreated($date_created)
    {
        $this->container['date_created'] = $date_created;

        return $this;
    }

    /**
     * Gets last_updated
     *
     * @return \DateTime|null
     */
    public function getLastUpdated()
    {
        return $this->container['last_updated'];
    }

    /**
     * Sets last_updated
     *
     * @param \DateTime|null $last_updated last_updated
     *
     * @return self
     */
    public function setLastUpdated($last_updated)
    {
        $this->container['last_updated'] = $last_updated;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


