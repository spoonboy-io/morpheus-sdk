<?php
/**
 * Zone
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * Zone Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class Zone implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'zone';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'uuid' => 'string',
        'external_id' => 'string',
        'name' => 'string',
        'code' => 'string',
        'location' => 'string',
        'owner' => '\OpenAPI\Client\Model\InlineResponse20040AppDeployInstance',
        'account_id' => 'int',
        'account' => '\OpenAPI\Client\Model\InlineResponse20040AppDeployInstance',
        'visibility' => 'string',
        'enabled' => 'bool',
        'status' => 'string',
        'status_message' => 'string',
        'status_date' => '\DateTime',
        'cost_status' => 'string',
        'cost_status_message' => 'string',
        'cost_status_date' => '\DateTime',
        'cost_last_sync_duration' => 'int',
        'cost_last_sync' => '\DateTime',
        'zone_type' => '\OpenAPI\Client\Model\InlineResponse20079LoadBalancerMonitorLoadBalancerType',
        'zone_type_id' => 'int',
        'guidance_mode' => 'string',
        'storage_mode' => 'string',
        'agent_mode' => 'string',
        'user_data_linux' => 'string',
        'user_data_windows' => 'string',
        'console_keymap' => 'string',
        'container_mode' => 'string',
        'costing_mode' => 'string',
        'service_version' => 'string',
        'security_mode' => 'string',
        'inventory_level' => 'string',
        'timezone' => 'string',
        'api_proxy' => 'string',
        'provisioning_proxy' => 'string',
        'network_domain' => '\OpenAPI\Client\Model\InlineResponse20082LoadBalancerInstanceSslCert',
        'domain_name' => 'string',
        'region_code' => 'string',
        'auto_recover_power_state' => 'bool',
        'scale_priority' => 'int',
        'config' => 'AnyOfZoneVcenterConfigZoneAwsConfigZoneAzureConfigZoneGcpConfig',
        'credential' => 'AnyOfObjectObject',
        'image_path' => 'string',
        'dark_image_path' => 'string',
        'date_created' => '\DateTime',
        'last_updated' => '\DateTime',
        'last_sync' => '\DateTime',
        'last_sync_duration' => 'int',
        'next_run_date' => '\DateTime',
        'groups' => '\OpenAPI\Client\Model\ZoneGroups[]',
        'security_server' => '\OpenAPI\Client\Model\InlineResponse20082LoadBalancerInstanceSslCert',
        'network_server' => '\OpenAPI\Client\Model\InlineResponse20082LoadBalancerInstanceSslCert',
        'stats' => '\OpenAPI\Client\Model\ZoneStats',
        'server_count' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int64',
        'uuid' => null,
        'external_id' => null,
        'name' => null,
        'code' => null,
        'location' => null,
        'owner' => null,
        'account_id' => 'int64',
        'account' => null,
        'visibility' => null,
        'enabled' => null,
        'status' => null,
        'status_message' => null,
        'status_date' => 'date-time',
        'cost_status' => null,
        'cost_status_message' => null,
        'cost_status_date' => 'date-time',
        'cost_last_sync_duration' => 'int64',
        'cost_last_sync' => 'date-time',
        'zone_type' => null,
        'zone_type_id' => 'int64',
        'guidance_mode' => null,
        'storage_mode' => null,
        'agent_mode' => null,
        'user_data_linux' => null,
        'user_data_windows' => null,
        'console_keymap' => null,
        'container_mode' => null,
        'costing_mode' => null,
        'service_version' => null,
        'security_mode' => null,
        'inventory_level' => null,
        'timezone' => null,
        'api_proxy' => null,
        'provisioning_proxy' => null,
        'network_domain' => null,
        'domain_name' => null,
        'region_code' => null,
        'auto_recover_power_state' => null,
        'scale_priority' => 'int64',
        'config' => null,
        'credential' => null,
        'image_path' => null,
        'dark_image_path' => null,
        'date_created' => 'date-time',
        'last_updated' => 'date-time',
        'last_sync' => 'date-time',
        'last_sync_duration' => 'int64',
        'next_run_date' => 'date-time',
        'groups' => null,
        'security_server' => null,
        'network_server' => null,
        'stats' => null,
        'server_count' => 'int64'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'uuid' => 'uuid',
        'external_id' => 'externalId',
        'name' => 'name',
        'code' => 'code',
        'location' => 'location',
        'owner' => 'owner',
        'account_id' => 'accountId',
        'account' => 'account',
        'visibility' => 'visibility',
        'enabled' => 'enabled',
        'status' => 'status',
        'status_message' => 'statusMessage',
        'status_date' => 'statusDate',
        'cost_status' => 'costStatus',
        'cost_status_message' => 'costStatusMessage',
        'cost_status_date' => 'costStatusDate',
        'cost_last_sync_duration' => 'costLastSyncDuration',
        'cost_last_sync' => 'costLastSync',
        'zone_type' => 'zoneType',
        'zone_type_id' => 'zoneTypeId',
        'guidance_mode' => 'guidanceMode',
        'storage_mode' => 'storageMode',
        'agent_mode' => 'agentMode',
        'user_data_linux' => 'userDataLinux',
        'user_data_windows' => 'userDataWindows',
        'console_keymap' => 'consoleKeymap',
        'container_mode' => 'containerMode',
        'costing_mode' => 'costingMode',
        'service_version' => 'serviceVersion',
        'security_mode' => 'securityMode',
        'inventory_level' => 'inventoryLevel',
        'timezone' => 'timezone',
        'api_proxy' => 'apiProxy',
        'provisioning_proxy' => 'provisioningProxy',
        'network_domain' => 'networkDomain',
        'domain_name' => 'domainName',
        'region_code' => 'regionCode',
        'auto_recover_power_state' => 'autoRecoverPowerState',
        'scale_priority' => 'scalePriority',
        'config' => 'config',
        'credential' => 'credential',
        'image_path' => 'imagePath',
        'dark_image_path' => 'darkImagePath',
        'date_created' => 'dateCreated',
        'last_updated' => 'lastUpdated',
        'last_sync' => 'lastSync',
        'last_sync_duration' => 'lastSyncDuration',
        'next_run_date' => 'nextRunDate',
        'groups' => 'groups',
        'security_server' => 'securityServer',
        'network_server' => 'networkServer',
        'stats' => 'stats',
        'server_count' => 'serverCount'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'uuid' => 'setUuid',
        'external_id' => 'setExternalId',
        'name' => 'setName',
        'code' => 'setCode',
        'location' => 'setLocation',
        'owner' => 'setOwner',
        'account_id' => 'setAccountId',
        'account' => 'setAccount',
        'visibility' => 'setVisibility',
        'enabled' => 'setEnabled',
        'status' => 'setStatus',
        'status_message' => 'setStatusMessage',
        'status_date' => 'setStatusDate',
        'cost_status' => 'setCostStatus',
        'cost_status_message' => 'setCostStatusMessage',
        'cost_status_date' => 'setCostStatusDate',
        'cost_last_sync_duration' => 'setCostLastSyncDuration',
        'cost_last_sync' => 'setCostLastSync',
        'zone_type' => 'setZoneType',
        'zone_type_id' => 'setZoneTypeId',
        'guidance_mode' => 'setGuidanceMode',
        'storage_mode' => 'setStorageMode',
        'agent_mode' => 'setAgentMode',
        'user_data_linux' => 'setUserDataLinux',
        'user_data_windows' => 'setUserDataWindows',
        'console_keymap' => 'setConsoleKeymap',
        'container_mode' => 'setContainerMode',
        'costing_mode' => 'setCostingMode',
        'service_version' => 'setServiceVersion',
        'security_mode' => 'setSecurityMode',
        'inventory_level' => 'setInventoryLevel',
        'timezone' => 'setTimezone',
        'api_proxy' => 'setApiProxy',
        'provisioning_proxy' => 'setProvisioningProxy',
        'network_domain' => 'setNetworkDomain',
        'domain_name' => 'setDomainName',
        'region_code' => 'setRegionCode',
        'auto_recover_power_state' => 'setAutoRecoverPowerState',
        'scale_priority' => 'setScalePriority',
        'config' => 'setConfig',
        'credential' => 'setCredential',
        'image_path' => 'setImagePath',
        'dark_image_path' => 'setDarkImagePath',
        'date_created' => 'setDateCreated',
        'last_updated' => 'setLastUpdated',
        'last_sync' => 'setLastSync',
        'last_sync_duration' => 'setLastSyncDuration',
        'next_run_date' => 'setNextRunDate',
        'groups' => 'setGroups',
        'security_server' => 'setSecurityServer',
        'network_server' => 'setNetworkServer',
        'stats' => 'setStats',
        'server_count' => 'setServerCount'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'uuid' => 'getUuid',
        'external_id' => 'getExternalId',
        'name' => 'getName',
        'code' => 'getCode',
        'location' => 'getLocation',
        'owner' => 'getOwner',
        'account_id' => 'getAccountId',
        'account' => 'getAccount',
        'visibility' => 'getVisibility',
        'enabled' => 'getEnabled',
        'status' => 'getStatus',
        'status_message' => 'getStatusMessage',
        'status_date' => 'getStatusDate',
        'cost_status' => 'getCostStatus',
        'cost_status_message' => 'getCostStatusMessage',
        'cost_status_date' => 'getCostStatusDate',
        'cost_last_sync_duration' => 'getCostLastSyncDuration',
        'cost_last_sync' => 'getCostLastSync',
        'zone_type' => 'getZoneType',
        'zone_type_id' => 'getZoneTypeId',
        'guidance_mode' => 'getGuidanceMode',
        'storage_mode' => 'getStorageMode',
        'agent_mode' => 'getAgentMode',
        'user_data_linux' => 'getUserDataLinux',
        'user_data_windows' => 'getUserDataWindows',
        'console_keymap' => 'getConsoleKeymap',
        'container_mode' => 'getContainerMode',
        'costing_mode' => 'getCostingMode',
        'service_version' => 'getServiceVersion',
        'security_mode' => 'getSecurityMode',
        'inventory_level' => 'getInventoryLevel',
        'timezone' => 'getTimezone',
        'api_proxy' => 'getApiProxy',
        'provisioning_proxy' => 'getProvisioningProxy',
        'network_domain' => 'getNetworkDomain',
        'domain_name' => 'getDomainName',
        'region_code' => 'getRegionCode',
        'auto_recover_power_state' => 'getAutoRecoverPowerState',
        'scale_priority' => 'getScalePriority',
        'config' => 'getConfig',
        'credential' => 'getCredential',
        'image_path' => 'getImagePath',
        'dark_image_path' => 'getDarkImagePath',
        'date_created' => 'getDateCreated',
        'last_updated' => 'getLastUpdated',
        'last_sync' => 'getLastSync',
        'last_sync_duration' => 'getLastSyncDuration',
        'next_run_date' => 'getNextRunDate',
        'groups' => 'getGroups',
        'security_server' => 'getSecurityServer',
        'network_server' => 'getNetworkServer',
        'stats' => 'getStats',
        'server_count' => 'getServerCount'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['uuid'] = $data['uuid'] ?? null;
        $this->container['external_id'] = $data['external_id'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['code'] = $data['code'] ?? null;
        $this->container['location'] = $data['location'] ?? null;
        $this->container['owner'] = $data['owner'] ?? null;
        $this->container['account_id'] = $data['account_id'] ?? null;
        $this->container['account'] = $data['account'] ?? null;
        $this->container['visibility'] = $data['visibility'] ?? null;
        $this->container['enabled'] = $data['enabled'] ?? null;
        $this->container['status'] = $data['status'] ?? null;
        $this->container['status_message'] = $data['status_message'] ?? null;
        $this->container['status_date'] = $data['status_date'] ?? null;
        $this->container['cost_status'] = $data['cost_status'] ?? null;
        $this->container['cost_status_message'] = $data['cost_status_message'] ?? null;
        $this->container['cost_status_date'] = $data['cost_status_date'] ?? null;
        $this->container['cost_last_sync_duration'] = $data['cost_last_sync_duration'] ?? null;
        $this->container['cost_last_sync'] = $data['cost_last_sync'] ?? null;
        $this->container['zone_type'] = $data['zone_type'] ?? null;
        $this->container['zone_type_id'] = $data['zone_type_id'] ?? null;
        $this->container['guidance_mode'] = $data['guidance_mode'] ?? null;
        $this->container['storage_mode'] = $data['storage_mode'] ?? null;
        $this->container['agent_mode'] = $data['agent_mode'] ?? null;
        $this->container['user_data_linux'] = $data['user_data_linux'] ?? null;
        $this->container['user_data_windows'] = $data['user_data_windows'] ?? null;
        $this->container['console_keymap'] = $data['console_keymap'] ?? null;
        $this->container['container_mode'] = $data['container_mode'] ?? null;
        $this->container['costing_mode'] = $data['costing_mode'] ?? null;
        $this->container['service_version'] = $data['service_version'] ?? null;
        $this->container['security_mode'] = $data['security_mode'] ?? null;
        $this->container['inventory_level'] = $data['inventory_level'] ?? null;
        $this->container['timezone'] = $data['timezone'] ?? null;
        $this->container['api_proxy'] = $data['api_proxy'] ?? null;
        $this->container['provisioning_proxy'] = $data['provisioning_proxy'] ?? null;
        $this->container['network_domain'] = $data['network_domain'] ?? null;
        $this->container['domain_name'] = $data['domain_name'] ?? null;
        $this->container['region_code'] = $data['region_code'] ?? null;
        $this->container['auto_recover_power_state'] = $data['auto_recover_power_state'] ?? null;
        $this->container['scale_priority'] = $data['scale_priority'] ?? null;
        $this->container['config'] = $data['config'] ?? null;
        $this->container['credential'] = $data['credential'] ?? null;
        $this->container['image_path'] = $data['image_path'] ?? null;
        $this->container['dark_image_path'] = $data['dark_image_path'] ?? null;
        $this->container['date_created'] = $data['date_created'] ?? null;
        $this->container['last_updated'] = $data['last_updated'] ?? null;
        $this->container['last_sync'] = $data['last_sync'] ?? null;
        $this->container['last_sync_duration'] = $data['last_sync_duration'] ?? null;
        $this->container['next_run_date'] = $data['next_run_date'] ?? null;
        $this->container['groups'] = $data['groups'] ?? null;
        $this->container['security_server'] = $data['security_server'] ?? null;
        $this->container['network_server'] = $data['network_server'] ?? null;
        $this->container['stats'] = $data['stats'] ?? null;
        $this->container['server_count'] = $data['server_count'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets uuid
     *
     * @return string|null
     */
    public function getUuid()
    {
        return $this->container['uuid'];
    }

    /**
     * Sets uuid
     *
     * @param string|null $uuid uuid
     *
     * @return self
     */
    public function setUuid($uuid)
    {
        $this->container['uuid'] = $uuid;

        return $this;
    }

    /**
     * Gets external_id
     *
     * @return string|null
     */
    public function getExternalId()
    {
        return $this->container['external_id'];
    }

    /**
     * Sets external_id
     *
     * @param string|null $external_id external_id
     *
     * @return self
     */
    public function setExternalId($external_id)
    {
        $this->container['external_id'] = $external_id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets code
     *
     * @return string|null
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string|null $code code
     *
     * @return self
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets location
     *
     * @return string|null
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param string|null $location location
     *
     * @return self
     */
    public function setLocation($location)
    {
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets owner
     *
     * @return \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null
     */
    public function getOwner()
    {
        return $this->container['owner'];
    }

    /**
     * Sets owner
     *
     * @param \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null $owner owner
     *
     * @return self
     */
    public function setOwner($owner)
    {
        $this->container['owner'] = $owner;

        return $this;
    }

    /**
     * Gets account_id
     *
     * @return int|null
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param int|null $account_id account_id
     *
     * @return self
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets account
     *
     * @return \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null $account account
     *
     * @return self
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets visibility
     *
     * @return string|null
     */
    public function getVisibility()
    {
        return $this->container['visibility'];
    }

    /**
     * Sets visibility
     *
     * @param string|null $visibility visibility
     *
     * @return self
     */
    public function setVisibility($visibility)
    {
        $this->container['visibility'] = $visibility;

        return $this;
    }

    /**
     * Gets enabled
     *
     * @return bool|null
     */
    public function getEnabled()
    {
        return $this->container['enabled'];
    }

    /**
     * Sets enabled
     *
     * @param bool|null $enabled enabled
     *
     * @return self
     */
    public function setEnabled($enabled)
    {
        $this->container['enabled'] = $enabled;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string|null $status status
     *
     * @return self
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets status_message
     *
     * @return string|null
     */
    public function getStatusMessage()
    {
        return $this->container['status_message'];
    }

    /**
     * Sets status_message
     *
     * @param string|null $status_message status_message
     *
     * @return self
     */
    public function setStatusMessage($status_message)
    {
        $this->container['status_message'] = $status_message;

        return $this;
    }

    /**
     * Gets status_date
     *
     * @return \DateTime|null
     */
    public function getStatusDate()
    {
        return $this->container['status_date'];
    }

    /**
     * Sets status_date
     *
     * @param \DateTime|null $status_date status_date
     *
     * @return self
     */
    public function setStatusDate($status_date)
    {
        $this->container['status_date'] = $status_date;

        return $this;
    }

    /**
     * Gets cost_status
     *
     * @return string|null
     */
    public function getCostStatus()
    {
        return $this->container['cost_status'];
    }

    /**
     * Sets cost_status
     *
     * @param string|null $cost_status cost_status
     *
     * @return self
     */
    public function setCostStatus($cost_status)
    {
        $this->container['cost_status'] = $cost_status;

        return $this;
    }

    /**
     * Gets cost_status_message
     *
     * @return string|null
     */
    public function getCostStatusMessage()
    {
        return $this->container['cost_status_message'];
    }

    /**
     * Sets cost_status_message
     *
     * @param string|null $cost_status_message cost_status_message
     *
     * @return self
     */
    public function setCostStatusMessage($cost_status_message)
    {
        $this->container['cost_status_message'] = $cost_status_message;

        return $this;
    }

    /**
     * Gets cost_status_date
     *
     * @return \DateTime|null
     */
    public function getCostStatusDate()
    {
        return $this->container['cost_status_date'];
    }

    /**
     * Sets cost_status_date
     *
     * @param \DateTime|null $cost_status_date cost_status_date
     *
     * @return self
     */
    public function setCostStatusDate($cost_status_date)
    {
        $this->container['cost_status_date'] = $cost_status_date;

        return $this;
    }

    /**
     * Gets cost_last_sync_duration
     *
     * @return int|null
     */
    public function getCostLastSyncDuration()
    {
        return $this->container['cost_last_sync_duration'];
    }

    /**
     * Sets cost_last_sync_duration
     *
     * @param int|null $cost_last_sync_duration cost_last_sync_duration
     *
     * @return self
     */
    public function setCostLastSyncDuration($cost_last_sync_duration)
    {
        $this->container['cost_last_sync_duration'] = $cost_last_sync_duration;

        return $this;
    }

    /**
     * Gets cost_last_sync
     *
     * @return \DateTime|null
     */
    public function getCostLastSync()
    {
        return $this->container['cost_last_sync'];
    }

    /**
     * Sets cost_last_sync
     *
     * @param \DateTime|null $cost_last_sync cost_last_sync
     *
     * @return self
     */
    public function setCostLastSync($cost_last_sync)
    {
        $this->container['cost_last_sync'] = $cost_last_sync;

        return $this;
    }

    /**
     * Gets zone_type
     *
     * @return \OpenAPI\Client\Model\InlineResponse20079LoadBalancerMonitorLoadBalancerType|null
     */
    public function getZoneType()
    {
        return $this->container['zone_type'];
    }

    /**
     * Sets zone_type
     *
     * @param \OpenAPI\Client\Model\InlineResponse20079LoadBalancerMonitorLoadBalancerType|null $zone_type zone_type
     *
     * @return self
     */
    public function setZoneType($zone_type)
    {
        $this->container['zone_type'] = $zone_type;

        return $this;
    }

    /**
     * Gets zone_type_id
     *
     * @return int|null
     */
    public function getZoneTypeId()
    {
        return $this->container['zone_type_id'];
    }

    /**
     * Sets zone_type_id
     *
     * @param int|null $zone_type_id zone_type_id
     *
     * @return self
     */
    public function setZoneTypeId($zone_type_id)
    {
        $this->container['zone_type_id'] = $zone_type_id;

        return $this;
    }

    /**
     * Gets guidance_mode
     *
     * @return string|null
     */
    public function getGuidanceMode()
    {
        return $this->container['guidance_mode'];
    }

    /**
     * Sets guidance_mode
     *
     * @param string|null $guidance_mode guidance_mode
     *
     * @return self
     */
    public function setGuidanceMode($guidance_mode)
    {
        $this->container['guidance_mode'] = $guidance_mode;

        return $this;
    }

    /**
     * Gets storage_mode
     *
     * @return string|null
     */
    public function getStorageMode()
    {
        return $this->container['storage_mode'];
    }

    /**
     * Sets storage_mode
     *
     * @param string|null $storage_mode storage_mode
     *
     * @return self
     */
    public function setStorageMode($storage_mode)
    {
        $this->container['storage_mode'] = $storage_mode;

        return $this;
    }

    /**
     * Gets agent_mode
     *
     * @return string|null
     */
    public function getAgentMode()
    {
        return $this->container['agent_mode'];
    }

    /**
     * Sets agent_mode
     *
     * @param string|null $agent_mode agent_mode
     *
     * @return self
     */
    public function setAgentMode($agent_mode)
    {
        $this->container['agent_mode'] = $agent_mode;

        return $this;
    }

    /**
     * Gets user_data_linux
     *
     * @return string|null
     */
    public function getUserDataLinux()
    {
        return $this->container['user_data_linux'];
    }

    /**
     * Sets user_data_linux
     *
     * @param string|null $user_data_linux user_data_linux
     *
     * @return self
     */
    public function setUserDataLinux($user_data_linux)
    {
        $this->container['user_data_linux'] = $user_data_linux;

        return $this;
    }

    /**
     * Gets user_data_windows
     *
     * @return string|null
     */
    public function getUserDataWindows()
    {
        return $this->container['user_data_windows'];
    }

    /**
     * Sets user_data_windows
     *
     * @param string|null $user_data_windows user_data_windows
     *
     * @return self
     */
    public function setUserDataWindows($user_data_windows)
    {
        $this->container['user_data_windows'] = $user_data_windows;

        return $this;
    }

    /**
     * Gets console_keymap
     *
     * @return string|null
     */
    public function getConsoleKeymap()
    {
        return $this->container['console_keymap'];
    }

    /**
     * Sets console_keymap
     *
     * @param string|null $console_keymap console_keymap
     *
     * @return self
     */
    public function setConsoleKeymap($console_keymap)
    {
        $this->container['console_keymap'] = $console_keymap;

        return $this;
    }

    /**
     * Gets container_mode
     *
     * @return string|null
     */
    public function getContainerMode()
    {
        return $this->container['container_mode'];
    }

    /**
     * Sets container_mode
     *
     * @param string|null $container_mode container_mode
     *
     * @return self
     */
    public function setContainerMode($container_mode)
    {
        $this->container['container_mode'] = $container_mode;

        return $this;
    }

    /**
     * Gets costing_mode
     *
     * @return string|null
     */
    public function getCostingMode()
    {
        return $this->container['costing_mode'];
    }

    /**
     * Sets costing_mode
     *
     * @param string|null $costing_mode costing_mode
     *
     * @return self
     */
    public function setCostingMode($costing_mode)
    {
        $this->container['costing_mode'] = $costing_mode;

        return $this;
    }

    /**
     * Gets service_version
     *
     * @return string|null
     */
    public function getServiceVersion()
    {
        return $this->container['service_version'];
    }

    /**
     * Sets service_version
     *
     * @param string|null $service_version service_version
     *
     * @return self
     */
    public function setServiceVersion($service_version)
    {
        $this->container['service_version'] = $service_version;

        return $this;
    }

    /**
     * Gets security_mode
     *
     * @return string|null
     */
    public function getSecurityMode()
    {
        return $this->container['security_mode'];
    }

    /**
     * Sets security_mode
     *
     * @param string|null $security_mode security_mode
     *
     * @return self
     */
    public function setSecurityMode($security_mode)
    {
        $this->container['security_mode'] = $security_mode;

        return $this;
    }

    /**
     * Gets inventory_level
     *
     * @return string|null
     */
    public function getInventoryLevel()
    {
        return $this->container['inventory_level'];
    }

    /**
     * Sets inventory_level
     *
     * @param string|null $inventory_level inventory_level
     *
     * @return self
     */
    public function setInventoryLevel($inventory_level)
    {
        $this->container['inventory_level'] = $inventory_level;

        return $this;
    }

    /**
     * Gets timezone
     *
     * @return string|null
     */
    public function getTimezone()
    {
        return $this->container['timezone'];
    }

    /**
     * Sets timezone
     *
     * @param string|null $timezone timezone
     *
     * @return self
     */
    public function setTimezone($timezone)
    {
        $this->container['timezone'] = $timezone;

        return $this;
    }

    /**
     * Gets api_proxy
     *
     * @return string|null
     */
    public function getApiProxy()
    {
        return $this->container['api_proxy'];
    }

    /**
     * Sets api_proxy
     *
     * @param string|null $api_proxy api_proxy
     *
     * @return self
     */
    public function setApiProxy($api_proxy)
    {
        $this->container['api_proxy'] = $api_proxy;

        return $this;
    }

    /**
     * Gets provisioning_proxy
     *
     * @return string|null
     */
    public function getProvisioningProxy()
    {
        return $this->container['provisioning_proxy'];
    }

    /**
     * Sets provisioning_proxy
     *
     * @param string|null $provisioning_proxy provisioning_proxy
     *
     * @return self
     */
    public function setProvisioningProxy($provisioning_proxy)
    {
        $this->container['provisioning_proxy'] = $provisioning_proxy;

        return $this;
    }

    /**
     * Gets network_domain
     *
     * @return \OpenAPI\Client\Model\InlineResponse20082LoadBalancerInstanceSslCert|null
     */
    public function getNetworkDomain()
    {
        return $this->container['network_domain'];
    }

    /**
     * Sets network_domain
     *
     * @param \OpenAPI\Client\Model\InlineResponse20082LoadBalancerInstanceSslCert|null $network_domain network_domain
     *
     * @return self
     */
    public function setNetworkDomain($network_domain)
    {
        $this->container['network_domain'] = $network_domain;

        return $this;
    }

    /**
     * Gets domain_name
     *
     * @return string|null
     */
    public function getDomainName()
    {
        return $this->container['domain_name'];
    }

    /**
     * Sets domain_name
     *
     * @param string|null $domain_name domain_name
     *
     * @return self
     */
    public function setDomainName($domain_name)
    {
        $this->container['domain_name'] = $domain_name;

        return $this;
    }

    /**
     * Gets region_code
     *
     * @return string|null
     */
    public function getRegionCode()
    {
        return $this->container['region_code'];
    }

    /**
     * Sets region_code
     *
     * @param string|null $region_code region_code
     *
     * @return self
     */
    public function setRegionCode($region_code)
    {
        $this->container['region_code'] = $region_code;

        return $this;
    }

    /**
     * Gets auto_recover_power_state
     *
     * @return bool|null
     */
    public function getAutoRecoverPowerState()
    {
        return $this->container['auto_recover_power_state'];
    }

    /**
     * Sets auto_recover_power_state
     *
     * @param bool|null $auto_recover_power_state auto_recover_power_state
     *
     * @return self
     */
    public function setAutoRecoverPowerState($auto_recover_power_state)
    {
        $this->container['auto_recover_power_state'] = $auto_recover_power_state;

        return $this;
    }

    /**
     * Gets scale_priority
     *
     * @return int|null
     */
    public function getScalePriority()
    {
        return $this->container['scale_priority'];
    }

    /**
     * Sets scale_priority
     *
     * @param int|null $scale_priority scale_priority
     *
     * @return self
     */
    public function setScalePriority($scale_priority)
    {
        $this->container['scale_priority'] = $scale_priority;

        return $this;
    }

    /**
     * Gets config
     *
     * @return AnyOfZoneVcenterConfigZoneAwsConfigZoneAzureConfigZoneGcpConfig|null
     */
    public function getConfig()
    {
        return $this->container['config'];
    }

    /**
     * Sets config
     *
     * @param AnyOfZoneVcenterConfigZoneAwsConfigZoneAzureConfigZoneGcpConfig|null $config config
     *
     * @return self
     */
    public function setConfig($config)
    {
        $this->container['config'] = $config;

        return $this;
    }

    /**
     * Gets credential
     *
     * @return AnyOfObjectObject|null
     */
    public function getCredential()
    {
        return $this->container['credential'];
    }

    /**
     * Sets credential
     *
     * @param AnyOfObjectObject|null $credential credential
     *
     * @return self
     */
    public function setCredential($credential)
    {
        $this->container['credential'] = $credential;

        return $this;
    }

    /**
     * Gets image_path
     *
     * @return string|null
     */
    public function getImagePath()
    {
        return $this->container['image_path'];
    }

    /**
     * Sets image_path
     *
     * @param string|null $image_path Logo image URL
     *
     * @return self
     */
    public function setImagePath($image_path)
    {
        $this->container['image_path'] = $image_path;

        return $this;
    }

    /**
     * Gets dark_image_path
     *
     * @return string|null
     */
    public function getDarkImagePath()
    {
        return $this->container['dark_image_path'];
    }

    /**
     * Sets dark_image_path
     *
     * @param string|null $dark_image_path Dark logo image URL
     *
     * @return self
     */
    public function setDarkImagePath($dark_image_path)
    {
        $this->container['dark_image_path'] = $dark_image_path;

        return $this;
    }

    /**
     * Gets date_created
     *
     * @return \DateTime|null
     */
    public function getDateCreated()
    {
        return $this->container['date_created'];
    }

    /**
     * Sets date_created
     *
     * @param \DateTime|null $date_created date_created
     *
     * @return self
     */
    public function setDateCreated($date_created)
    {
        $this->container['date_created'] = $date_created;

        return $this;
    }

    /**
     * Gets last_updated
     *
     * @return \DateTime|null
     */
    public function getLastUpdated()
    {
        return $this->container['last_updated'];
    }

    /**
     * Sets last_updated
     *
     * @param \DateTime|null $last_updated last_updated
     *
     * @return self
     */
    public function setLastUpdated($last_updated)
    {
        $this->container['last_updated'] = $last_updated;

        return $this;
    }

    /**
     * Gets last_sync
     *
     * @return \DateTime|null
     */
    public function getLastSync()
    {
        return $this->container['last_sync'];
    }

    /**
     * Sets last_sync
     *
     * @param \DateTime|null $last_sync last_sync
     *
     * @return self
     */
    public function setLastSync($last_sync)
    {
        $this->container['last_sync'] = $last_sync;

        return $this;
    }

    /**
     * Gets last_sync_duration
     *
     * @return int|null
     */
    public function getLastSyncDuration()
    {
        return $this->container['last_sync_duration'];
    }

    /**
     * Sets last_sync_duration
     *
     * @param int|null $last_sync_duration last_sync_duration
     *
     * @return self
     */
    public function setLastSyncDuration($last_sync_duration)
    {
        $this->container['last_sync_duration'] = $last_sync_duration;

        return $this;
    }

    /**
     * Gets next_run_date
     *
     * @return \DateTime|null
     */
    public function getNextRunDate()
    {
        return $this->container['next_run_date'];
    }

    /**
     * Sets next_run_date
     *
     * @param \DateTime|null $next_run_date next_run_date
     *
     * @return self
     */
    public function setNextRunDate($next_run_date)
    {
        $this->container['next_run_date'] = $next_run_date;

        return $this;
    }

    /**
     * Gets groups
     *
     * @return \OpenAPI\Client\Model\ZoneGroups[]|null
     */
    public function getGroups()
    {
        return $this->container['groups'];
    }

    /**
     * Sets groups
     *
     * @param \OpenAPI\Client\Model\ZoneGroups[]|null $groups groups
     *
     * @return self
     */
    public function setGroups($groups)
    {
        $this->container['groups'] = $groups;

        return $this;
    }

    /**
     * Gets security_server
     *
     * @return \OpenAPI\Client\Model\InlineResponse20082LoadBalancerInstanceSslCert|null
     */
    public function getSecurityServer()
    {
        return $this->container['security_server'];
    }

    /**
     * Sets security_server
     *
     * @param \OpenAPI\Client\Model\InlineResponse20082LoadBalancerInstanceSslCert|null $security_server security_server
     *
     * @return self
     */
    public function setSecurityServer($security_server)
    {
        $this->container['security_server'] = $security_server;

        return $this;
    }

    /**
     * Gets network_server
     *
     * @return \OpenAPI\Client\Model\InlineResponse20082LoadBalancerInstanceSslCert|null
     */
    public function getNetworkServer()
    {
        return $this->container['network_server'];
    }

    /**
     * Sets network_server
     *
     * @param \OpenAPI\Client\Model\InlineResponse20082LoadBalancerInstanceSslCert|null $network_server network_server
     *
     * @return self
     */
    public function setNetworkServer($network_server)
    {
        $this->container['network_server'] = $network_server;

        return $this;
    }

    /**
     * Gets stats
     *
     * @return \OpenAPI\Client\Model\ZoneStats|null
     */
    public function getStats()
    {
        return $this->container['stats'];
    }

    /**
     * Sets stats
     *
     * @param \OpenAPI\Client\Model\ZoneStats|null $stats stats
     *
     * @return self
     */
    public function setStats($stats)
    {
        $this->container['stats'] = $stats;

        return $this;
    }

    /**
     * Gets server_count
     *
     * @return int|null
     */
    public function getServerCount()
    {
        return $this->container['server_count'];
    }

    /**
     * Sets server_count
     *
     * @param int|null $server_count server_count
     *
     * @return self
     */
    public function setServerCount($server_count)
    {
        $this->container['server_count'] = $server_count;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


