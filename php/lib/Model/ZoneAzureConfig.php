<?php
/**
 * ZoneAzureConfig
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ZoneAzureConfig Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class ZoneAzureConfig implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'zoneAzureConfig';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'subscriber_id' => 'string',
        'tenant_id' => 'string',
        'client_id' => 'string',
        'client_secret' => 'string',
        'resource_group' => 'string',
        '_import_existing' => 'string',
        'import_existing' => 'string',
        'inventory_level' => 'string',
        'appliance_url' => 'string',
        'datacenter_name' => 'string',
        'network_server_id' => 'string',
        'network_server' => '\OpenAPI\Client\Model\ZoneVcenterConfigNetworkServer',
        'security_mode' => 'string',
        'certificate_provider' => 'string',
        'backup_mode' => 'string',
        'replication_mode' => 'string',
        'dns_integration_id' => 'string',
        'config_management_id' => 'string',
        'config_cmdb_id' => 'string',
        'security_server' => 'string',
        'account_type' => 'string',
        'service_registry_id' => 'string',
        'cloud_type' => 'string',
        'rpc_mode' => 'string',
        'disk_encryption' => 'string',
        'encryption_set' => 'string',
        'csp_tenant_id' => 'string',
        'csp_client_id' => 'string',
        'csp_client_secret' => 'string',
        'csp_customer' => 'string',
        'config_cmdb_discovery' => 'bool',
        'azure_costing_mode' => 'string',
        'client_secret_hash' => 'string',
        'csp_client_secret_hash' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'subscriber_id' => null,
        'tenant_id' => null,
        'client_id' => null,
        'client_secret' => null,
        'resource_group' => null,
        '_import_existing' => null,
        'import_existing' => null,
        'inventory_level' => null,
        'appliance_url' => null,
        'datacenter_name' => null,
        'network_server_id' => null,
        'network_server' => null,
        'security_mode' => null,
        'certificate_provider' => null,
        'backup_mode' => null,
        'replication_mode' => null,
        'dns_integration_id' => null,
        'config_management_id' => null,
        'config_cmdb_id' => null,
        'security_server' => null,
        'account_type' => null,
        'service_registry_id' => null,
        'cloud_type' => null,
        'rpc_mode' => null,
        'disk_encryption' => null,
        'encryption_set' => null,
        'csp_tenant_id' => null,
        'csp_client_id' => null,
        'csp_client_secret' => null,
        'csp_customer' => null,
        'config_cmdb_discovery' => null,
        'azure_costing_mode' => null,
        'client_secret_hash' => null,
        'csp_client_secret_hash' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'subscriber_id' => 'subscriberId',
        'tenant_id' => 'tenantId',
        'client_id' => 'clientId',
        'client_secret' => 'clientSecret',
        'resource_group' => 'resourceGroup',
        '_import_existing' => '_importExisting',
        'import_existing' => 'importExisting',
        'inventory_level' => 'inventoryLevel',
        'appliance_url' => 'applianceUrl',
        'datacenter_name' => 'datacenterName',
        'network_server_id' => 'networkServer.id',
        'network_server' => 'networkServer',
        'security_mode' => 'securityMode',
        'certificate_provider' => 'certificateProvider',
        'backup_mode' => 'backupMode',
        'replication_mode' => 'replicationMode',
        'dns_integration_id' => 'dnsIntegrationId',
        'config_management_id' => 'configManagementId',
        'config_cmdb_id' => 'configCmdbId',
        'security_server' => 'securityServer',
        'account_type' => 'accountType',
        'service_registry_id' => 'serviceRegistryId',
        'cloud_type' => 'cloudType',
        'rpc_mode' => 'rpcMode',
        'disk_encryption' => 'diskEncryption',
        'encryption_set' => 'encryptionSet',
        'csp_tenant_id' => 'cspTenantId',
        'csp_client_id' => 'cspClientId',
        'csp_client_secret' => 'cspClientSecret',
        'csp_customer' => 'cspCustomer',
        'config_cmdb_discovery' => 'configCmdbDiscovery',
        'azure_costing_mode' => 'azureCostingMode',
        'client_secret_hash' => 'clientSecretHash',
        'csp_client_secret_hash' => 'cspClientSecretHash'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'subscriber_id' => 'setSubscriberId',
        'tenant_id' => 'setTenantId',
        'client_id' => 'setClientId',
        'client_secret' => 'setClientSecret',
        'resource_group' => 'setResourceGroup',
        '_import_existing' => 'setImportExisting',
        'import_existing' => 'setImportExisting',
        'inventory_level' => 'setInventoryLevel',
        'appliance_url' => 'setApplianceUrl',
        'datacenter_name' => 'setDatacenterName',
        'network_server_id' => 'setNetworkServerId',
        'network_server' => 'setNetworkServer',
        'security_mode' => 'setSecurityMode',
        'certificate_provider' => 'setCertificateProvider',
        'backup_mode' => 'setBackupMode',
        'replication_mode' => 'setReplicationMode',
        'dns_integration_id' => 'setDnsIntegrationId',
        'config_management_id' => 'setConfigManagementId',
        'config_cmdb_id' => 'setConfigCmdbId',
        'security_server' => 'setSecurityServer',
        'account_type' => 'setAccountType',
        'service_registry_id' => 'setServiceRegistryId',
        'cloud_type' => 'setCloudType',
        'rpc_mode' => 'setRpcMode',
        'disk_encryption' => 'setDiskEncryption',
        'encryption_set' => 'setEncryptionSet',
        'csp_tenant_id' => 'setCspTenantId',
        'csp_client_id' => 'setCspClientId',
        'csp_client_secret' => 'setCspClientSecret',
        'csp_customer' => 'setCspCustomer',
        'config_cmdb_discovery' => 'setConfigCmdbDiscovery',
        'azure_costing_mode' => 'setAzureCostingMode',
        'client_secret_hash' => 'setClientSecretHash',
        'csp_client_secret_hash' => 'setCspClientSecretHash'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'subscriber_id' => 'getSubscriberId',
        'tenant_id' => 'getTenantId',
        'client_id' => 'getClientId',
        'client_secret' => 'getClientSecret',
        'resource_group' => 'getResourceGroup',
        '_import_existing' => 'getImportExisting',
        'import_existing' => 'getImportExisting',
        'inventory_level' => 'getInventoryLevel',
        'appliance_url' => 'getApplianceUrl',
        'datacenter_name' => 'getDatacenterName',
        'network_server_id' => 'getNetworkServerId',
        'network_server' => 'getNetworkServer',
        'security_mode' => 'getSecurityMode',
        'certificate_provider' => 'getCertificateProvider',
        'backup_mode' => 'getBackupMode',
        'replication_mode' => 'getReplicationMode',
        'dns_integration_id' => 'getDnsIntegrationId',
        'config_management_id' => 'getConfigManagementId',
        'config_cmdb_id' => 'getConfigCmdbId',
        'security_server' => 'getSecurityServer',
        'account_type' => 'getAccountType',
        'service_registry_id' => 'getServiceRegistryId',
        'cloud_type' => 'getCloudType',
        'rpc_mode' => 'getRpcMode',
        'disk_encryption' => 'getDiskEncryption',
        'encryption_set' => 'getEncryptionSet',
        'csp_tenant_id' => 'getCspTenantId',
        'csp_client_id' => 'getCspClientId',
        'csp_client_secret' => 'getCspClientSecret',
        'csp_customer' => 'getCspCustomer',
        'config_cmdb_discovery' => 'getConfigCmdbDiscovery',
        'azure_costing_mode' => 'getAzureCostingMode',
        'client_secret_hash' => 'getClientSecretHash',
        'csp_client_secret_hash' => 'getCspClientSecretHash'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['subscriber_id'] = $data['subscriber_id'] ?? null;
        $this->container['tenant_id'] = $data['tenant_id'] ?? null;
        $this->container['client_id'] = $data['client_id'] ?? null;
        $this->container['client_secret'] = $data['client_secret'] ?? null;
        $this->container['resource_group'] = $data['resource_group'] ?? null;
        $this->container['_import_existing'] = $data['_import_existing'] ?? null;
        $this->container['import_existing'] = $data['import_existing'] ?? null;
        $this->container['inventory_level'] = $data['inventory_level'] ?? null;
        $this->container['appliance_url'] = $data['appliance_url'] ?? null;
        $this->container['datacenter_name'] = $data['datacenter_name'] ?? null;
        $this->container['network_server_id'] = $data['network_server_id'] ?? null;
        $this->container['network_server'] = $data['network_server'] ?? null;
        $this->container['security_mode'] = $data['security_mode'] ?? null;
        $this->container['certificate_provider'] = $data['certificate_provider'] ?? null;
        $this->container['backup_mode'] = $data['backup_mode'] ?? null;
        $this->container['replication_mode'] = $data['replication_mode'] ?? null;
        $this->container['dns_integration_id'] = $data['dns_integration_id'] ?? null;
        $this->container['config_management_id'] = $data['config_management_id'] ?? null;
        $this->container['config_cmdb_id'] = $data['config_cmdb_id'] ?? null;
        $this->container['security_server'] = $data['security_server'] ?? null;
        $this->container['account_type'] = $data['account_type'] ?? null;
        $this->container['service_registry_id'] = $data['service_registry_id'] ?? null;
        $this->container['cloud_type'] = $data['cloud_type'] ?? null;
        $this->container['rpc_mode'] = $data['rpc_mode'] ?? null;
        $this->container['disk_encryption'] = $data['disk_encryption'] ?? null;
        $this->container['encryption_set'] = $data['encryption_set'] ?? null;
        $this->container['csp_tenant_id'] = $data['csp_tenant_id'] ?? null;
        $this->container['csp_client_id'] = $data['csp_client_id'] ?? null;
        $this->container['csp_client_secret'] = $data['csp_client_secret'] ?? null;
        $this->container['csp_customer'] = $data['csp_customer'] ?? null;
        $this->container['config_cmdb_discovery'] = $data['config_cmdb_discovery'] ?? null;
        $this->container['azure_costing_mode'] = $data['azure_costing_mode'] ?? null;
        $this->container['client_secret_hash'] = $data['client_secret_hash'] ?? null;
        $this->container['csp_client_secret_hash'] = $data['csp_client_secret_hash'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets subscriber_id
     *
     * @return string|null
     */
    public function getSubscriberId()
    {
        return $this->container['subscriber_id'];
    }

    /**
     * Sets subscriber_id
     *
     * @param string|null $subscriber_id subscriber_id
     *
     * @return self
     */
    public function setSubscriberId($subscriber_id)
    {
        $this->container['subscriber_id'] = $subscriber_id;

        return $this;
    }

    /**
     * Gets tenant_id
     *
     * @return string|null
     */
    public function getTenantId()
    {
        return $this->container['tenant_id'];
    }

    /**
     * Sets tenant_id
     *
     * @param string|null $tenant_id tenant_id
     *
     * @return self
     */
    public function setTenantId($tenant_id)
    {
        $this->container['tenant_id'] = $tenant_id;

        return $this;
    }

    /**
     * Gets client_id
     *
     * @return string|null
     */
    public function getClientId()
    {
        return $this->container['client_id'];
    }

    /**
     * Sets client_id
     *
     * @param string|null $client_id client_id
     *
     * @return self
     */
    public function setClientId($client_id)
    {
        $this->container['client_id'] = $client_id;

        return $this;
    }

    /**
     * Gets client_secret
     *
     * @return string|null
     */
    public function getClientSecret()
    {
        return $this->container['client_secret'];
    }

    /**
     * Sets client_secret
     *
     * @param string|null $client_secret client_secret
     *
     * @return self
     */
    public function setClientSecret($client_secret)
    {
        $this->container['client_secret'] = $client_secret;

        return $this;
    }

    /**
     * Gets resource_group
     *
     * @return string|null
     */
    public function getResourceGroup()
    {
        return $this->container['resource_group'];
    }

    /**
     * Sets resource_group
     *
     * @param string|null $resource_group resource_group
     *
     * @return self
     */
    public function setResourceGroup($resource_group)
    {
        $this->container['resource_group'] = $resource_group;

        return $this;
    }

    /**
     * Gets _import_existing
     *
     * @return string|null
     */
    public function getImportExisting()
    {
        return $this->container['_import_existing'];
    }

    /**
     * Sets _import_existing
     *
     * @param string|null $_import_existing _import_existing
     *
     * @return self
     */
    public function setImportExisting($_import_existing)
    {
        $this->container['_import_existing'] = $_import_existing;

        return $this;
    }

    /**
     * Gets import_existing
     *
     * @return string|null
     */
    public function getImportExisting()
    {
        return $this->container['import_existing'];
    }

    /**
     * Sets import_existing
     *
     * @param string|null $import_existing import_existing
     *
     * @return self
     */
    public function setImportExisting($import_existing)
    {
        $this->container['import_existing'] = $import_existing;

        return $this;
    }

    /**
     * Gets inventory_level
     *
     * @return string|null
     */
    public function getInventoryLevel()
    {
        return $this->container['inventory_level'];
    }

    /**
     * Sets inventory_level
     *
     * @param string|null $inventory_level inventory_level
     *
     * @return self
     */
    public function setInventoryLevel($inventory_level)
    {
        $this->container['inventory_level'] = $inventory_level;

        return $this;
    }

    /**
     * Gets appliance_url
     *
     * @return string|null
     */
    public function getApplianceUrl()
    {
        return $this->container['appliance_url'];
    }

    /**
     * Sets appliance_url
     *
     * @param string|null $appliance_url appliance_url
     *
     * @return self
     */
    public function setApplianceUrl($appliance_url)
    {
        $this->container['appliance_url'] = $appliance_url;

        return $this;
    }

    /**
     * Gets datacenter_name
     *
     * @return string|null
     */
    public function getDatacenterName()
    {
        return $this->container['datacenter_name'];
    }

    /**
     * Sets datacenter_name
     *
     * @param string|null $datacenter_name datacenter_name
     *
     * @return self
     */
    public function setDatacenterName($datacenter_name)
    {
        $this->container['datacenter_name'] = $datacenter_name;

        return $this;
    }

    /**
     * Gets network_server_id
     *
     * @return string|null
     */
    public function getNetworkServerId()
    {
        return $this->container['network_server_id'];
    }

    /**
     * Sets network_server_id
     *
     * @param string|null $network_server_id network_server_id
     *
     * @return self
     */
    public function setNetworkServerId($network_server_id)
    {
        $this->container['network_server_id'] = $network_server_id;

        return $this;
    }

    /**
     * Gets network_server
     *
     * @return \OpenAPI\Client\Model\ZoneVcenterConfigNetworkServer|null
     */
    public function getNetworkServer()
    {
        return $this->container['network_server'];
    }

    /**
     * Sets network_server
     *
     * @param \OpenAPI\Client\Model\ZoneVcenterConfigNetworkServer|null $network_server network_server
     *
     * @return self
     */
    public function setNetworkServer($network_server)
    {
        $this->container['network_server'] = $network_server;

        return $this;
    }

    /**
     * Gets security_mode
     *
     * @return string|null
     */
    public function getSecurityMode()
    {
        return $this->container['security_mode'];
    }

    /**
     * Sets security_mode
     *
     * @param string|null $security_mode security_mode
     *
     * @return self
     */
    public function setSecurityMode($security_mode)
    {
        $this->container['security_mode'] = $security_mode;

        return $this;
    }

    /**
     * Gets certificate_provider
     *
     * @return string|null
     */
    public function getCertificateProvider()
    {
        return $this->container['certificate_provider'];
    }

    /**
     * Sets certificate_provider
     *
     * @param string|null $certificate_provider certificate_provider
     *
     * @return self
     */
    public function setCertificateProvider($certificate_provider)
    {
        $this->container['certificate_provider'] = $certificate_provider;

        return $this;
    }

    /**
     * Gets backup_mode
     *
     * @return string|null
     */
    public function getBackupMode()
    {
        return $this->container['backup_mode'];
    }

    /**
     * Sets backup_mode
     *
     * @param string|null $backup_mode backup_mode
     *
     * @return self
     */
    public function setBackupMode($backup_mode)
    {
        $this->container['backup_mode'] = $backup_mode;

        return $this;
    }

    /**
     * Gets replication_mode
     *
     * @return string|null
     */
    public function getReplicationMode()
    {
        return $this->container['replication_mode'];
    }

    /**
     * Sets replication_mode
     *
     * @param string|null $replication_mode replication_mode
     *
     * @return self
     */
    public function setReplicationMode($replication_mode)
    {
        $this->container['replication_mode'] = $replication_mode;

        return $this;
    }

    /**
     * Gets dns_integration_id
     *
     * @return string|null
     */
    public function getDnsIntegrationId()
    {
        return $this->container['dns_integration_id'];
    }

    /**
     * Sets dns_integration_id
     *
     * @param string|null $dns_integration_id dns_integration_id
     *
     * @return self
     */
    public function setDnsIntegrationId($dns_integration_id)
    {
        $this->container['dns_integration_id'] = $dns_integration_id;

        return $this;
    }

    /**
     * Gets config_management_id
     *
     * @return string|null
     */
    public function getConfigManagementId()
    {
        return $this->container['config_management_id'];
    }

    /**
     * Sets config_management_id
     *
     * @param string|null $config_management_id config_management_id
     *
     * @return self
     */
    public function setConfigManagementId($config_management_id)
    {
        $this->container['config_management_id'] = $config_management_id;

        return $this;
    }

    /**
     * Gets config_cmdb_id
     *
     * @return string|null
     */
    public function getConfigCmdbId()
    {
        return $this->container['config_cmdb_id'];
    }

    /**
     * Sets config_cmdb_id
     *
     * @param string|null $config_cmdb_id config_cmdb_id
     *
     * @return self
     */
    public function setConfigCmdbId($config_cmdb_id)
    {
        $this->container['config_cmdb_id'] = $config_cmdb_id;

        return $this;
    }

    /**
     * Gets security_server
     *
     * @return string|null
     */
    public function getSecurityServer()
    {
        return $this->container['security_server'];
    }

    /**
     * Sets security_server
     *
     * @param string|null $security_server security_server
     *
     * @return self
     */
    public function setSecurityServer($security_server)
    {
        $this->container['security_server'] = $security_server;

        return $this;
    }

    /**
     * Gets account_type
     *
     * @return string|null
     */
    public function getAccountType()
    {
        return $this->container['account_type'];
    }

    /**
     * Sets account_type
     *
     * @param string|null $account_type account_type
     *
     * @return self
     */
    public function setAccountType($account_type)
    {
        $this->container['account_type'] = $account_type;

        return $this;
    }

    /**
     * Gets service_registry_id
     *
     * @return string|null
     */
    public function getServiceRegistryId()
    {
        return $this->container['service_registry_id'];
    }

    /**
     * Sets service_registry_id
     *
     * @param string|null $service_registry_id service_registry_id
     *
     * @return self
     */
    public function setServiceRegistryId($service_registry_id)
    {
        $this->container['service_registry_id'] = $service_registry_id;

        return $this;
    }

    /**
     * Gets cloud_type
     *
     * @return string|null
     */
    public function getCloudType()
    {
        return $this->container['cloud_type'];
    }

    /**
     * Sets cloud_type
     *
     * @param string|null $cloud_type cloud_type
     *
     * @return self
     */
    public function setCloudType($cloud_type)
    {
        $this->container['cloud_type'] = $cloud_type;

        return $this;
    }

    /**
     * Gets rpc_mode
     *
     * @return string|null
     */
    public function getRpcMode()
    {
        return $this->container['rpc_mode'];
    }

    /**
     * Sets rpc_mode
     *
     * @param string|null $rpc_mode rpc_mode
     *
     * @return self
     */
    public function setRpcMode($rpc_mode)
    {
        $this->container['rpc_mode'] = $rpc_mode;

        return $this;
    }

    /**
     * Gets disk_encryption
     *
     * @return string|null
     */
    public function getDiskEncryption()
    {
        return $this->container['disk_encryption'];
    }

    /**
     * Sets disk_encryption
     *
     * @param string|null $disk_encryption disk_encryption
     *
     * @return self
     */
    public function setDiskEncryption($disk_encryption)
    {
        $this->container['disk_encryption'] = $disk_encryption;

        return $this;
    }

    /**
     * Gets encryption_set
     *
     * @return string|null
     */
    public function getEncryptionSet()
    {
        return $this->container['encryption_set'];
    }

    /**
     * Sets encryption_set
     *
     * @param string|null $encryption_set encryption_set
     *
     * @return self
     */
    public function setEncryptionSet($encryption_set)
    {
        $this->container['encryption_set'] = $encryption_set;

        return $this;
    }

    /**
     * Gets csp_tenant_id
     *
     * @return string|null
     */
    public function getCspTenantId()
    {
        return $this->container['csp_tenant_id'];
    }

    /**
     * Sets csp_tenant_id
     *
     * @param string|null $csp_tenant_id csp_tenant_id
     *
     * @return self
     */
    public function setCspTenantId($csp_tenant_id)
    {
        $this->container['csp_tenant_id'] = $csp_tenant_id;

        return $this;
    }

    /**
     * Gets csp_client_id
     *
     * @return string|null
     */
    public function getCspClientId()
    {
        return $this->container['csp_client_id'];
    }

    /**
     * Sets csp_client_id
     *
     * @param string|null $csp_client_id csp_client_id
     *
     * @return self
     */
    public function setCspClientId($csp_client_id)
    {
        $this->container['csp_client_id'] = $csp_client_id;

        return $this;
    }

    /**
     * Gets csp_client_secret
     *
     * @return string|null
     */
    public function getCspClientSecret()
    {
        return $this->container['csp_client_secret'];
    }

    /**
     * Sets csp_client_secret
     *
     * @param string|null $csp_client_secret csp_client_secret
     *
     * @return self
     */
    public function setCspClientSecret($csp_client_secret)
    {
        $this->container['csp_client_secret'] = $csp_client_secret;

        return $this;
    }

    /**
     * Gets csp_customer
     *
     * @return string|null
     */
    public function getCspCustomer()
    {
        return $this->container['csp_customer'];
    }

    /**
     * Sets csp_customer
     *
     * @param string|null $csp_customer csp_customer
     *
     * @return self
     */
    public function setCspCustomer($csp_customer)
    {
        $this->container['csp_customer'] = $csp_customer;

        return $this;
    }

    /**
     * Gets config_cmdb_discovery
     *
     * @return bool|null
     */
    public function getConfigCmdbDiscovery()
    {
        return $this->container['config_cmdb_discovery'];
    }

    /**
     * Sets config_cmdb_discovery
     *
     * @param bool|null $config_cmdb_discovery config_cmdb_discovery
     *
     * @return self
     */
    public function setConfigCmdbDiscovery($config_cmdb_discovery)
    {
        $this->container['config_cmdb_discovery'] = $config_cmdb_discovery;

        return $this;
    }

    /**
     * Gets azure_costing_mode
     *
     * @return string|null
     */
    public function getAzureCostingMode()
    {
        return $this->container['azure_costing_mode'];
    }

    /**
     * Sets azure_costing_mode
     *
     * @param string|null $azure_costing_mode azure_costing_mode
     *
     * @return self
     */
    public function setAzureCostingMode($azure_costing_mode)
    {
        $this->container['azure_costing_mode'] = $azure_costing_mode;

        return $this;
    }

    /**
     * Gets client_secret_hash
     *
     * @return string|null
     */
    public function getClientSecretHash()
    {
        return $this->container['client_secret_hash'];
    }

    /**
     * Sets client_secret_hash
     *
     * @param string|null $client_secret_hash client_secret_hash
     *
     * @return self
     */
    public function setClientSecretHash($client_secret_hash)
    {
        $this->container['client_secret_hash'] = $client_secret_hash;

        return $this;
    }

    /**
     * Gets csp_client_secret_hash
     *
     * @return string|null
     */
    public function getCspClientSecretHash()
    {
        return $this->container['csp_client_secret_hash'];
    }

    /**
     * Sets csp_client_secret_hash
     *
     * @param string|null $csp_client_secret_hash csp_client_secret_hash
     *
     * @return self
     */
    public function setCspClientSecretHash($csp_client_secret_hash)
    {
        $this->container['csp_client_secret_hash'] = $csp_client_secret_hash;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


