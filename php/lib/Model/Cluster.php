<?php
/**
 * Cluster
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * Cluster Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class Cluster implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'cluster';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'name' => 'string',
        'code' => 'string',
        'category' => 'string',
        'visibility' => 'string',
        'description' => 'string',
        'location' => 'string',
        'enabled' => 'bool',
        'service_url' => 'string',
        'service_host' => 'string',
        'service_path' => 'string',
        'service_hostname' => 'string',
        'service_port' => 'int',
        'service_username' => 'string',
        'service_password' => 'string',
        'service_password_hash' => 'string',
        'service_token' => 'string',
        'service_token_hash' => 'string',
        'service_access' => 'string',
        'service_access_hash' => 'string',
        'service_cert' => 'string',
        'service_cert_hash' => 'string',
        'service_version' => 'string',
        'search_domains' => 'string',
        'enable_internal_dns' => 'bool',
        'internal_id' => 'string',
        'external_id' => 'string',
        'datacenter_id' => 'string',
        'status' => 'string',
        'status_date' => '\DateTime',
        'status_message' => 'string',
        'inventory_level' => 'string',
        'last_sync' => '\DateTime',
        'next_run_date' => '\DateTime',
        'last_sync_duration' => 'int',
        'date_created' => '\DateTime',
        'last_updated' => '\DateTime',
        'managed' => 'bool',
        'labels' => 'string[]',
        'service_entry' => 'string',
        'created_by' => '\OpenAPI\Client\Model\InlineResponse200107NetworkPoolCreatedBy',
        'user_group' => 'string',
        'layout' => '\OpenAPI\Client\Model\ClustersLayout',
        'owner' => '\OpenAPI\Client\Model\InlineResponse20040AppDeployInstance',
        'servers' => '\OpenAPI\Client\Model\ClustersServers[]',
        'accounts' => 'object[]',
        'integrations' => 'object[]',
        'site' => '\OpenAPI\Client\Model\InlineResponse20040AppDeployInstance',
        'type' => '\OpenAPI\Client\Model\InlineResponse20040AppDeployInstance',
        'zone' => '\OpenAPI\Client\Model\ClustersZone',
        'worker_stats' => '\OpenAPI\Client\Model\ClustersWorkerStats',
        'containers_count' => 'int',
        'deployments_count' => 'int',
        'pods_count' => 'int',
        'jobs_count' => 'int',
        'volumes_count' => 'int',
        'namespaces_count' => 'int',
        'workers_count' => 'int',
        'services_count' => 'int',
        'permissions' => '\OpenAPI\Client\Model\ClusterPermissions',
        'config' => 'object'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int64',
        'name' => null,
        'code' => null,
        'category' => null,
        'visibility' => null,
        'description' => null,
        'location' => null,
        'enabled' => null,
        'service_url' => null,
        'service_host' => null,
        'service_path' => null,
        'service_hostname' => null,
        'service_port' => 'int64',
        'service_username' => null,
        'service_password' => null,
        'service_password_hash' => null,
        'service_token' => null,
        'service_token_hash' => null,
        'service_access' => null,
        'service_access_hash' => null,
        'service_cert' => null,
        'service_cert_hash' => null,
        'service_version' => null,
        'search_domains' => null,
        'enable_internal_dns' => null,
        'internal_id' => null,
        'external_id' => null,
        'datacenter_id' => null,
        'status' => null,
        'status_date' => 'date-time',
        'status_message' => null,
        'inventory_level' => null,
        'last_sync' => 'date-time',
        'next_run_date' => 'date-time',
        'last_sync_duration' => 'int64',
        'date_created' => 'date-time',
        'last_updated' => 'date-time',
        'managed' => null,
        'labels' => null,
        'service_entry' => null,
        'created_by' => null,
        'user_group' => null,
        'layout' => null,
        'owner' => null,
        'servers' => null,
        'accounts' => null,
        'integrations' => null,
        'site' => null,
        'type' => null,
        'zone' => null,
        'worker_stats' => null,
        'containers_count' => 'int64',
        'deployments_count' => 'int64',
        'pods_count' => 'int64',
        'jobs_count' => 'int64',
        'volumes_count' => 'int64',
        'namespaces_count' => 'int64',
        'workers_count' => 'int64',
        'services_count' => 'int64',
        'permissions' => null,
        'config' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'name' => 'name',
        'code' => 'code',
        'category' => 'category',
        'visibility' => 'visibility',
        'description' => 'description',
        'location' => 'location',
        'enabled' => 'enabled',
        'service_url' => 'serviceUrl',
        'service_host' => 'serviceHost',
        'service_path' => 'servicePath',
        'service_hostname' => 'serviceHostname',
        'service_port' => 'servicePort',
        'service_username' => 'serviceUsername',
        'service_password' => 'servicePassword',
        'service_password_hash' => 'servicePasswordHash',
        'service_token' => 'serviceToken',
        'service_token_hash' => 'serviceTokenHash',
        'service_access' => 'serviceAccess',
        'service_access_hash' => 'serviceAccessHash',
        'service_cert' => 'serviceCert',
        'service_cert_hash' => 'serviceCertHash',
        'service_version' => 'serviceVersion',
        'search_domains' => 'searchDomains',
        'enable_internal_dns' => 'enableInternalDns',
        'internal_id' => 'internalId',
        'external_id' => 'externalId',
        'datacenter_id' => 'datacenterId',
        'status' => 'status',
        'status_date' => 'statusDate',
        'status_message' => 'statusMessage',
        'inventory_level' => 'inventoryLevel',
        'last_sync' => 'lastSync',
        'next_run_date' => 'nextRunDate',
        'last_sync_duration' => 'lastSyncDuration',
        'date_created' => 'dateCreated',
        'last_updated' => 'lastUpdated',
        'managed' => 'managed',
        'labels' => 'labels',
        'service_entry' => 'serviceEntry',
        'created_by' => 'createdBy',
        'user_group' => 'userGroup',
        'layout' => 'layout',
        'owner' => 'owner',
        'servers' => 'servers',
        'accounts' => 'accounts',
        'integrations' => 'integrations',
        'site' => 'site',
        'type' => 'type',
        'zone' => 'zone',
        'worker_stats' => 'workerStats',
        'containers_count' => 'containersCount',
        'deployments_count' => 'deploymentsCount',
        'pods_count' => 'podsCount',
        'jobs_count' => 'jobsCount',
        'volumes_count' => 'volumesCount',
        'namespaces_count' => 'namespacesCount',
        'workers_count' => 'workersCount',
        'services_count' => 'servicesCount',
        'permissions' => 'permissions',
        'config' => 'config'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'name' => 'setName',
        'code' => 'setCode',
        'category' => 'setCategory',
        'visibility' => 'setVisibility',
        'description' => 'setDescription',
        'location' => 'setLocation',
        'enabled' => 'setEnabled',
        'service_url' => 'setServiceUrl',
        'service_host' => 'setServiceHost',
        'service_path' => 'setServicePath',
        'service_hostname' => 'setServiceHostname',
        'service_port' => 'setServicePort',
        'service_username' => 'setServiceUsername',
        'service_password' => 'setServicePassword',
        'service_password_hash' => 'setServicePasswordHash',
        'service_token' => 'setServiceToken',
        'service_token_hash' => 'setServiceTokenHash',
        'service_access' => 'setServiceAccess',
        'service_access_hash' => 'setServiceAccessHash',
        'service_cert' => 'setServiceCert',
        'service_cert_hash' => 'setServiceCertHash',
        'service_version' => 'setServiceVersion',
        'search_domains' => 'setSearchDomains',
        'enable_internal_dns' => 'setEnableInternalDns',
        'internal_id' => 'setInternalId',
        'external_id' => 'setExternalId',
        'datacenter_id' => 'setDatacenterId',
        'status' => 'setStatus',
        'status_date' => 'setStatusDate',
        'status_message' => 'setStatusMessage',
        'inventory_level' => 'setInventoryLevel',
        'last_sync' => 'setLastSync',
        'next_run_date' => 'setNextRunDate',
        'last_sync_duration' => 'setLastSyncDuration',
        'date_created' => 'setDateCreated',
        'last_updated' => 'setLastUpdated',
        'managed' => 'setManaged',
        'labels' => 'setLabels',
        'service_entry' => 'setServiceEntry',
        'created_by' => 'setCreatedBy',
        'user_group' => 'setUserGroup',
        'layout' => 'setLayout',
        'owner' => 'setOwner',
        'servers' => 'setServers',
        'accounts' => 'setAccounts',
        'integrations' => 'setIntegrations',
        'site' => 'setSite',
        'type' => 'setType',
        'zone' => 'setZone',
        'worker_stats' => 'setWorkerStats',
        'containers_count' => 'setContainersCount',
        'deployments_count' => 'setDeploymentsCount',
        'pods_count' => 'setPodsCount',
        'jobs_count' => 'setJobsCount',
        'volumes_count' => 'setVolumesCount',
        'namespaces_count' => 'setNamespacesCount',
        'workers_count' => 'setWorkersCount',
        'services_count' => 'setServicesCount',
        'permissions' => 'setPermissions',
        'config' => 'setConfig'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'name' => 'getName',
        'code' => 'getCode',
        'category' => 'getCategory',
        'visibility' => 'getVisibility',
        'description' => 'getDescription',
        'location' => 'getLocation',
        'enabled' => 'getEnabled',
        'service_url' => 'getServiceUrl',
        'service_host' => 'getServiceHost',
        'service_path' => 'getServicePath',
        'service_hostname' => 'getServiceHostname',
        'service_port' => 'getServicePort',
        'service_username' => 'getServiceUsername',
        'service_password' => 'getServicePassword',
        'service_password_hash' => 'getServicePasswordHash',
        'service_token' => 'getServiceToken',
        'service_token_hash' => 'getServiceTokenHash',
        'service_access' => 'getServiceAccess',
        'service_access_hash' => 'getServiceAccessHash',
        'service_cert' => 'getServiceCert',
        'service_cert_hash' => 'getServiceCertHash',
        'service_version' => 'getServiceVersion',
        'search_domains' => 'getSearchDomains',
        'enable_internal_dns' => 'getEnableInternalDns',
        'internal_id' => 'getInternalId',
        'external_id' => 'getExternalId',
        'datacenter_id' => 'getDatacenterId',
        'status' => 'getStatus',
        'status_date' => 'getStatusDate',
        'status_message' => 'getStatusMessage',
        'inventory_level' => 'getInventoryLevel',
        'last_sync' => 'getLastSync',
        'next_run_date' => 'getNextRunDate',
        'last_sync_duration' => 'getLastSyncDuration',
        'date_created' => 'getDateCreated',
        'last_updated' => 'getLastUpdated',
        'managed' => 'getManaged',
        'labels' => 'getLabels',
        'service_entry' => 'getServiceEntry',
        'created_by' => 'getCreatedBy',
        'user_group' => 'getUserGroup',
        'layout' => 'getLayout',
        'owner' => 'getOwner',
        'servers' => 'getServers',
        'accounts' => 'getAccounts',
        'integrations' => 'getIntegrations',
        'site' => 'getSite',
        'type' => 'getType',
        'zone' => 'getZone',
        'worker_stats' => 'getWorkerStats',
        'containers_count' => 'getContainersCount',
        'deployments_count' => 'getDeploymentsCount',
        'pods_count' => 'getPodsCount',
        'jobs_count' => 'getJobsCount',
        'volumes_count' => 'getVolumesCount',
        'namespaces_count' => 'getNamespacesCount',
        'workers_count' => 'getWorkersCount',
        'services_count' => 'getServicesCount',
        'permissions' => 'getPermissions',
        'config' => 'getConfig'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['code'] = $data['code'] ?? null;
        $this->container['category'] = $data['category'] ?? null;
        $this->container['visibility'] = $data['visibility'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
        $this->container['location'] = $data['location'] ?? null;
        $this->container['enabled'] = $data['enabled'] ?? null;
        $this->container['service_url'] = $data['service_url'] ?? null;
        $this->container['service_host'] = $data['service_host'] ?? null;
        $this->container['service_path'] = $data['service_path'] ?? null;
        $this->container['service_hostname'] = $data['service_hostname'] ?? null;
        $this->container['service_port'] = $data['service_port'] ?? null;
        $this->container['service_username'] = $data['service_username'] ?? null;
        $this->container['service_password'] = $data['service_password'] ?? null;
        $this->container['service_password_hash'] = $data['service_password_hash'] ?? null;
        $this->container['service_token'] = $data['service_token'] ?? null;
        $this->container['service_token_hash'] = $data['service_token_hash'] ?? null;
        $this->container['service_access'] = $data['service_access'] ?? null;
        $this->container['service_access_hash'] = $data['service_access_hash'] ?? null;
        $this->container['service_cert'] = $data['service_cert'] ?? null;
        $this->container['service_cert_hash'] = $data['service_cert_hash'] ?? null;
        $this->container['service_version'] = $data['service_version'] ?? null;
        $this->container['search_domains'] = $data['search_domains'] ?? null;
        $this->container['enable_internal_dns'] = $data['enable_internal_dns'] ?? null;
        $this->container['internal_id'] = $data['internal_id'] ?? null;
        $this->container['external_id'] = $data['external_id'] ?? null;
        $this->container['datacenter_id'] = $data['datacenter_id'] ?? null;
        $this->container['status'] = $data['status'] ?? null;
        $this->container['status_date'] = $data['status_date'] ?? null;
        $this->container['status_message'] = $data['status_message'] ?? null;
        $this->container['inventory_level'] = $data['inventory_level'] ?? null;
        $this->container['last_sync'] = $data['last_sync'] ?? null;
        $this->container['next_run_date'] = $data['next_run_date'] ?? null;
        $this->container['last_sync_duration'] = $data['last_sync_duration'] ?? null;
        $this->container['date_created'] = $data['date_created'] ?? null;
        $this->container['last_updated'] = $data['last_updated'] ?? null;
        $this->container['managed'] = $data['managed'] ?? null;
        $this->container['labels'] = $data['labels'] ?? null;
        $this->container['service_entry'] = $data['service_entry'] ?? null;
        $this->container['created_by'] = $data['created_by'] ?? null;
        $this->container['user_group'] = $data['user_group'] ?? null;
        $this->container['layout'] = $data['layout'] ?? null;
        $this->container['owner'] = $data['owner'] ?? null;
        $this->container['servers'] = $data['servers'] ?? null;
        $this->container['accounts'] = $data['accounts'] ?? null;
        $this->container['integrations'] = $data['integrations'] ?? null;
        $this->container['site'] = $data['site'] ?? null;
        $this->container['type'] = $data['type'] ?? null;
        $this->container['zone'] = $data['zone'] ?? null;
        $this->container['worker_stats'] = $data['worker_stats'] ?? null;
        $this->container['containers_count'] = $data['containers_count'] ?? null;
        $this->container['deployments_count'] = $data['deployments_count'] ?? null;
        $this->container['pods_count'] = $data['pods_count'] ?? null;
        $this->container['jobs_count'] = $data['jobs_count'] ?? null;
        $this->container['volumes_count'] = $data['volumes_count'] ?? null;
        $this->container['namespaces_count'] = $data['namespaces_count'] ?? null;
        $this->container['workers_count'] = $data['workers_count'] ?? null;
        $this->container['services_count'] = $data['services_count'] ?? null;
        $this->container['permissions'] = $data['permissions'] ?? null;
        $this->container['config'] = $data['config'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets code
     *
     * @return string|null
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string|null $code code
     *
     * @return self
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets category
     *
     * @return string|null
     */
    public function getCategory()
    {
        return $this->container['category'];
    }

    /**
     * Sets category
     *
     * @param string|null $category category
     *
     * @return self
     */
    public function setCategory($category)
    {
        $this->container['category'] = $category;

        return $this;
    }

    /**
     * Gets visibility
     *
     * @return string|null
     */
    public function getVisibility()
    {
        return $this->container['visibility'];
    }

    /**
     * Sets visibility
     *
     * @param string|null $visibility visibility
     *
     * @return self
     */
    public function setVisibility($visibility)
    {
        $this->container['visibility'] = $visibility;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description description
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets location
     *
     * @return string|null
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param string|null $location location
     *
     * @return self
     */
    public function setLocation($location)
    {
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets enabled
     *
     * @return bool|null
     */
    public function getEnabled()
    {
        return $this->container['enabled'];
    }

    /**
     * Sets enabled
     *
     * @param bool|null $enabled enabled
     *
     * @return self
     */
    public function setEnabled($enabled)
    {
        $this->container['enabled'] = $enabled;

        return $this;
    }

    /**
     * Gets service_url
     *
     * @return string|null
     */
    public function getServiceUrl()
    {
        return $this->container['service_url'];
    }

    /**
     * Sets service_url
     *
     * @param string|null $service_url service_url
     *
     * @return self
     */
    public function setServiceUrl($service_url)
    {
        $this->container['service_url'] = $service_url;

        return $this;
    }

    /**
     * Gets service_host
     *
     * @return string|null
     */
    public function getServiceHost()
    {
        return $this->container['service_host'];
    }

    /**
     * Sets service_host
     *
     * @param string|null $service_host service_host
     *
     * @return self
     */
    public function setServiceHost($service_host)
    {
        $this->container['service_host'] = $service_host;

        return $this;
    }

    /**
     * Gets service_path
     *
     * @return string|null
     */
    public function getServicePath()
    {
        return $this->container['service_path'];
    }

    /**
     * Sets service_path
     *
     * @param string|null $service_path service_path
     *
     * @return self
     */
    public function setServicePath($service_path)
    {
        $this->container['service_path'] = $service_path;

        return $this;
    }

    /**
     * Gets service_hostname
     *
     * @return string|null
     */
    public function getServiceHostname()
    {
        return $this->container['service_hostname'];
    }

    /**
     * Sets service_hostname
     *
     * @param string|null $service_hostname service_hostname
     *
     * @return self
     */
    public function setServiceHostname($service_hostname)
    {
        $this->container['service_hostname'] = $service_hostname;

        return $this;
    }

    /**
     * Gets service_port
     *
     * @return int|null
     */
    public function getServicePort()
    {
        return $this->container['service_port'];
    }

    /**
     * Sets service_port
     *
     * @param int|null $service_port service_port
     *
     * @return self
     */
    public function setServicePort($service_port)
    {
        $this->container['service_port'] = $service_port;

        return $this;
    }

    /**
     * Gets service_username
     *
     * @return string|null
     */
    public function getServiceUsername()
    {
        return $this->container['service_username'];
    }

    /**
     * Sets service_username
     *
     * @param string|null $service_username service_username
     *
     * @return self
     */
    public function setServiceUsername($service_username)
    {
        $this->container['service_username'] = $service_username;

        return $this;
    }

    /**
     * Gets service_password
     *
     * @return string|null
     */
    public function getServicePassword()
    {
        return $this->container['service_password'];
    }

    /**
     * Sets service_password
     *
     * @param string|null $service_password service_password
     *
     * @return self
     */
    public function setServicePassword($service_password)
    {
        $this->container['service_password'] = $service_password;

        return $this;
    }

    /**
     * Gets service_password_hash
     *
     * @return string|null
     */
    public function getServicePasswordHash()
    {
        return $this->container['service_password_hash'];
    }

    /**
     * Sets service_password_hash
     *
     * @param string|null $service_password_hash service_password_hash
     *
     * @return self
     */
    public function setServicePasswordHash($service_password_hash)
    {
        $this->container['service_password_hash'] = $service_password_hash;

        return $this;
    }

    /**
     * Gets service_token
     *
     * @return string|null
     */
    public function getServiceToken()
    {
        return $this->container['service_token'];
    }

    /**
     * Sets service_token
     *
     * @param string|null $service_token service_token
     *
     * @return self
     */
    public function setServiceToken($service_token)
    {
        $this->container['service_token'] = $service_token;

        return $this;
    }

    /**
     * Gets service_token_hash
     *
     * @return string|null
     */
    public function getServiceTokenHash()
    {
        return $this->container['service_token_hash'];
    }

    /**
     * Sets service_token_hash
     *
     * @param string|null $service_token_hash service_token_hash
     *
     * @return self
     */
    public function setServiceTokenHash($service_token_hash)
    {
        $this->container['service_token_hash'] = $service_token_hash;

        return $this;
    }

    /**
     * Gets service_access
     *
     * @return string|null
     */
    public function getServiceAccess()
    {
        return $this->container['service_access'];
    }

    /**
     * Sets service_access
     *
     * @param string|null $service_access service_access
     *
     * @return self
     */
    public function setServiceAccess($service_access)
    {
        $this->container['service_access'] = $service_access;

        return $this;
    }

    /**
     * Gets service_access_hash
     *
     * @return string|null
     */
    public function getServiceAccessHash()
    {
        return $this->container['service_access_hash'];
    }

    /**
     * Sets service_access_hash
     *
     * @param string|null $service_access_hash service_access_hash
     *
     * @return self
     */
    public function setServiceAccessHash($service_access_hash)
    {
        $this->container['service_access_hash'] = $service_access_hash;

        return $this;
    }

    /**
     * Gets service_cert
     *
     * @return string|null
     */
    public function getServiceCert()
    {
        return $this->container['service_cert'];
    }

    /**
     * Sets service_cert
     *
     * @param string|null $service_cert service_cert
     *
     * @return self
     */
    public function setServiceCert($service_cert)
    {
        $this->container['service_cert'] = $service_cert;

        return $this;
    }

    /**
     * Gets service_cert_hash
     *
     * @return string|null
     */
    public function getServiceCertHash()
    {
        return $this->container['service_cert_hash'];
    }

    /**
     * Sets service_cert_hash
     *
     * @param string|null $service_cert_hash service_cert_hash
     *
     * @return self
     */
    public function setServiceCertHash($service_cert_hash)
    {
        $this->container['service_cert_hash'] = $service_cert_hash;

        return $this;
    }

    /**
     * Gets service_version
     *
     * @return string|null
     */
    public function getServiceVersion()
    {
        return $this->container['service_version'];
    }

    /**
     * Sets service_version
     *
     * @param string|null $service_version service_version
     *
     * @return self
     */
    public function setServiceVersion($service_version)
    {
        $this->container['service_version'] = $service_version;

        return $this;
    }

    /**
     * Gets search_domains
     *
     * @return string|null
     */
    public function getSearchDomains()
    {
        return $this->container['search_domains'];
    }

    /**
     * Sets search_domains
     *
     * @param string|null $search_domains search_domains
     *
     * @return self
     */
    public function setSearchDomains($search_domains)
    {
        $this->container['search_domains'] = $search_domains;

        return $this;
    }

    /**
     * Gets enable_internal_dns
     *
     * @return bool|null
     */
    public function getEnableInternalDns()
    {
        return $this->container['enable_internal_dns'];
    }

    /**
     * Sets enable_internal_dns
     *
     * @param bool|null $enable_internal_dns enable_internal_dns
     *
     * @return self
     */
    public function setEnableInternalDns($enable_internal_dns)
    {
        $this->container['enable_internal_dns'] = $enable_internal_dns;

        return $this;
    }

    /**
     * Gets internal_id
     *
     * @return string|null
     */
    public function getInternalId()
    {
        return $this->container['internal_id'];
    }

    /**
     * Sets internal_id
     *
     * @param string|null $internal_id internal_id
     *
     * @return self
     */
    public function setInternalId($internal_id)
    {
        $this->container['internal_id'] = $internal_id;

        return $this;
    }

    /**
     * Gets external_id
     *
     * @return string|null
     */
    public function getExternalId()
    {
        return $this->container['external_id'];
    }

    /**
     * Sets external_id
     *
     * @param string|null $external_id external_id
     *
     * @return self
     */
    public function setExternalId($external_id)
    {
        $this->container['external_id'] = $external_id;

        return $this;
    }

    /**
     * Gets datacenter_id
     *
     * @return string|null
     */
    public function getDatacenterId()
    {
        return $this->container['datacenter_id'];
    }

    /**
     * Sets datacenter_id
     *
     * @param string|null $datacenter_id datacenter_id
     *
     * @return self
     */
    public function setDatacenterId($datacenter_id)
    {
        $this->container['datacenter_id'] = $datacenter_id;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string|null $status status
     *
     * @return self
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets status_date
     *
     * @return \DateTime|null
     */
    public function getStatusDate()
    {
        return $this->container['status_date'];
    }

    /**
     * Sets status_date
     *
     * @param \DateTime|null $status_date status_date
     *
     * @return self
     */
    public function setStatusDate($status_date)
    {
        $this->container['status_date'] = $status_date;

        return $this;
    }

    /**
     * Gets status_message
     *
     * @return string|null
     */
    public function getStatusMessage()
    {
        return $this->container['status_message'];
    }

    /**
     * Sets status_message
     *
     * @param string|null $status_message status_message
     *
     * @return self
     */
    public function setStatusMessage($status_message)
    {
        $this->container['status_message'] = $status_message;

        return $this;
    }

    /**
     * Gets inventory_level
     *
     * @return string|null
     */
    public function getInventoryLevel()
    {
        return $this->container['inventory_level'];
    }

    /**
     * Sets inventory_level
     *
     * @param string|null $inventory_level inventory_level
     *
     * @return self
     */
    public function setInventoryLevel($inventory_level)
    {
        $this->container['inventory_level'] = $inventory_level;

        return $this;
    }

    /**
     * Gets last_sync
     *
     * @return \DateTime|null
     */
    public function getLastSync()
    {
        return $this->container['last_sync'];
    }

    /**
     * Sets last_sync
     *
     * @param \DateTime|null $last_sync last_sync
     *
     * @return self
     */
    public function setLastSync($last_sync)
    {
        $this->container['last_sync'] = $last_sync;

        return $this;
    }

    /**
     * Gets next_run_date
     *
     * @return \DateTime|null
     */
    public function getNextRunDate()
    {
        return $this->container['next_run_date'];
    }

    /**
     * Sets next_run_date
     *
     * @param \DateTime|null $next_run_date next_run_date
     *
     * @return self
     */
    public function setNextRunDate($next_run_date)
    {
        $this->container['next_run_date'] = $next_run_date;

        return $this;
    }

    /**
     * Gets last_sync_duration
     *
     * @return int|null
     */
    public function getLastSyncDuration()
    {
        return $this->container['last_sync_duration'];
    }

    /**
     * Sets last_sync_duration
     *
     * @param int|null $last_sync_duration last_sync_duration
     *
     * @return self
     */
    public function setLastSyncDuration($last_sync_duration)
    {
        $this->container['last_sync_duration'] = $last_sync_duration;

        return $this;
    }

    /**
     * Gets date_created
     *
     * @return \DateTime|null
     */
    public function getDateCreated()
    {
        return $this->container['date_created'];
    }

    /**
     * Sets date_created
     *
     * @param \DateTime|null $date_created date_created
     *
     * @return self
     */
    public function setDateCreated($date_created)
    {
        $this->container['date_created'] = $date_created;

        return $this;
    }

    /**
     * Gets last_updated
     *
     * @return \DateTime|null
     */
    public function getLastUpdated()
    {
        return $this->container['last_updated'];
    }

    /**
     * Sets last_updated
     *
     * @param \DateTime|null $last_updated last_updated
     *
     * @return self
     */
    public function setLastUpdated($last_updated)
    {
        $this->container['last_updated'] = $last_updated;

        return $this;
    }

    /**
     * Gets managed
     *
     * @return bool|null
     */
    public function getManaged()
    {
        return $this->container['managed'];
    }

    /**
     * Sets managed
     *
     * @param bool|null $managed managed
     *
     * @return self
     */
    public function setManaged($managed)
    {
        $this->container['managed'] = $managed;

        return $this;
    }

    /**
     * Gets labels
     *
     * @return string[]|null
     */
    public function getLabels()
    {
        return $this->container['labels'];
    }

    /**
     * Sets labels
     *
     * @param string[]|null $labels labels
     *
     * @return self
     */
    public function setLabels($labels)
    {
        $this->container['labels'] = $labels;

        return $this;
    }

    /**
     * Gets service_entry
     *
     * @return string|null
     */
    public function getServiceEntry()
    {
        return $this->container['service_entry'];
    }

    /**
     * Sets service_entry
     *
     * @param string|null $service_entry service_entry
     *
     * @return self
     */
    public function setServiceEntry($service_entry)
    {
        $this->container['service_entry'] = $service_entry;

        return $this;
    }

    /**
     * Gets created_by
     *
     * @return \OpenAPI\Client\Model\InlineResponse200107NetworkPoolCreatedBy|null
     */
    public function getCreatedBy()
    {
        return $this->container['created_by'];
    }

    /**
     * Sets created_by
     *
     * @param \OpenAPI\Client\Model\InlineResponse200107NetworkPoolCreatedBy|null $created_by created_by
     *
     * @return self
     */
    public function setCreatedBy($created_by)
    {
        $this->container['created_by'] = $created_by;

        return $this;
    }

    /**
     * Gets user_group
     *
     * @return string|null
     */
    public function getUserGroup()
    {
        return $this->container['user_group'];
    }

    /**
     * Sets user_group
     *
     * @param string|null $user_group user_group
     *
     * @return self
     */
    public function setUserGroup($user_group)
    {
        $this->container['user_group'] = $user_group;

        return $this;
    }

    /**
     * Gets layout
     *
     * @return \OpenAPI\Client\Model\ClustersLayout|null
     */
    public function getLayout()
    {
        return $this->container['layout'];
    }

    /**
     * Sets layout
     *
     * @param \OpenAPI\Client\Model\ClustersLayout|null $layout layout
     *
     * @return self
     */
    public function setLayout($layout)
    {
        $this->container['layout'] = $layout;

        return $this;
    }

    /**
     * Gets owner
     *
     * @return \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null
     */
    public function getOwner()
    {
        return $this->container['owner'];
    }

    /**
     * Sets owner
     *
     * @param \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null $owner owner
     *
     * @return self
     */
    public function setOwner($owner)
    {
        $this->container['owner'] = $owner;

        return $this;
    }

    /**
     * Gets servers
     *
     * @return \OpenAPI\Client\Model\ClustersServers[]|null
     */
    public function getServers()
    {
        return $this->container['servers'];
    }

    /**
     * Sets servers
     *
     * @param \OpenAPI\Client\Model\ClustersServers[]|null $servers servers
     *
     * @return self
     */
    public function setServers($servers)
    {
        $this->container['servers'] = $servers;

        return $this;
    }

    /**
     * Gets accounts
     *
     * @return object[]|null
     */
    public function getAccounts()
    {
        return $this->container['accounts'];
    }

    /**
     * Sets accounts
     *
     * @param object[]|null $accounts accounts
     *
     * @return self
     */
    public function setAccounts($accounts)
    {
        $this->container['accounts'] = $accounts;

        return $this;
    }

    /**
     * Gets integrations
     *
     * @return object[]|null
     */
    public function getIntegrations()
    {
        return $this->container['integrations'];
    }

    /**
     * Sets integrations
     *
     * @param object[]|null $integrations integrations
     *
     * @return self
     */
    public function setIntegrations($integrations)
    {
        $this->container['integrations'] = $integrations;

        return $this;
    }

    /**
     * Gets site
     *
     * @return \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null
     */
    public function getSite()
    {
        return $this->container['site'];
    }

    /**
     * Sets site
     *
     * @param \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null $site site
     *
     * @return self
     */
    public function setSite($site)
    {
        $this->container['site'] = $site;

        return $this;
    }

    /**
     * Gets type
     *
     * @return \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets zone
     *
     * @return \OpenAPI\Client\Model\ClustersZone|null
     */
    public function getZone()
    {
        return $this->container['zone'];
    }

    /**
     * Sets zone
     *
     * @param \OpenAPI\Client\Model\ClustersZone|null $zone zone
     *
     * @return self
     */
    public function setZone($zone)
    {
        $this->container['zone'] = $zone;

        return $this;
    }

    /**
     * Gets worker_stats
     *
     * @return \OpenAPI\Client\Model\ClustersWorkerStats|null
     */
    public function getWorkerStats()
    {
        return $this->container['worker_stats'];
    }

    /**
     * Sets worker_stats
     *
     * @param \OpenAPI\Client\Model\ClustersWorkerStats|null $worker_stats worker_stats
     *
     * @return self
     */
    public function setWorkerStats($worker_stats)
    {
        $this->container['worker_stats'] = $worker_stats;

        return $this;
    }

    /**
     * Gets containers_count
     *
     * @return int|null
     */
    public function getContainersCount()
    {
        return $this->container['containers_count'];
    }

    /**
     * Sets containers_count
     *
     * @param int|null $containers_count containers_count
     *
     * @return self
     */
    public function setContainersCount($containers_count)
    {
        $this->container['containers_count'] = $containers_count;

        return $this;
    }

    /**
     * Gets deployments_count
     *
     * @return int|null
     */
    public function getDeploymentsCount()
    {
        return $this->container['deployments_count'];
    }

    /**
     * Sets deployments_count
     *
     * @param int|null $deployments_count deployments_count
     *
     * @return self
     */
    public function setDeploymentsCount($deployments_count)
    {
        $this->container['deployments_count'] = $deployments_count;

        return $this;
    }

    /**
     * Gets pods_count
     *
     * @return int|null
     */
    public function getPodsCount()
    {
        return $this->container['pods_count'];
    }

    /**
     * Sets pods_count
     *
     * @param int|null $pods_count pods_count
     *
     * @return self
     */
    public function setPodsCount($pods_count)
    {
        $this->container['pods_count'] = $pods_count;

        return $this;
    }

    /**
     * Gets jobs_count
     *
     * @return int|null
     */
    public function getJobsCount()
    {
        return $this->container['jobs_count'];
    }

    /**
     * Sets jobs_count
     *
     * @param int|null $jobs_count jobs_count
     *
     * @return self
     */
    public function setJobsCount($jobs_count)
    {
        $this->container['jobs_count'] = $jobs_count;

        return $this;
    }

    /**
     * Gets volumes_count
     *
     * @return int|null
     */
    public function getVolumesCount()
    {
        return $this->container['volumes_count'];
    }

    /**
     * Sets volumes_count
     *
     * @param int|null $volumes_count volumes_count
     *
     * @return self
     */
    public function setVolumesCount($volumes_count)
    {
        $this->container['volumes_count'] = $volumes_count;

        return $this;
    }

    /**
     * Gets namespaces_count
     *
     * @return int|null
     */
    public function getNamespacesCount()
    {
        return $this->container['namespaces_count'];
    }

    /**
     * Sets namespaces_count
     *
     * @param int|null $namespaces_count namespaces_count
     *
     * @return self
     */
    public function setNamespacesCount($namespaces_count)
    {
        $this->container['namespaces_count'] = $namespaces_count;

        return $this;
    }

    /**
     * Gets workers_count
     *
     * @return int|null
     */
    public function getWorkersCount()
    {
        return $this->container['workers_count'];
    }

    /**
     * Sets workers_count
     *
     * @param int|null $workers_count workers_count
     *
     * @return self
     */
    public function setWorkersCount($workers_count)
    {
        $this->container['workers_count'] = $workers_count;

        return $this;
    }

    /**
     * Gets services_count
     *
     * @return int|null
     */
    public function getServicesCount()
    {
        return $this->container['services_count'];
    }

    /**
     * Sets services_count
     *
     * @param int|null $services_count services_count
     *
     * @return self
     */
    public function setServicesCount($services_count)
    {
        $this->container['services_count'] = $services_count;

        return $this;
    }

    /**
     * Gets permissions
     *
     * @return \OpenAPI\Client\Model\ClusterPermissions|null
     */
    public function getPermissions()
    {
        return $this->container['permissions'];
    }

    /**
     * Sets permissions
     *
     * @param \OpenAPI\Client\Model\ClusterPermissions|null $permissions permissions
     *
     * @return self
     */
    public function setPermissions($permissions)
    {
        $this->container['permissions'] = $permissions;

        return $this;
    }

    /**
     * Gets config
     *
     * @return object|null
     */
    public function getConfig()
    {
        return $this->container['config'];
    }

    /**
     * Sets config
     *
     * @param object|null $config config
     *
     * @return self
     */
    public function setConfig($config)
    {
        $this->container['config'] = $config;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


