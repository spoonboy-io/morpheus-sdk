<?php
/**
 * Role
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * Role Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class Role implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'role';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'role' => '\OpenAPI\Client\Model\RoleRole',
        'feature_permissions' => '\OpenAPI\Client\Model\RoleFeaturePermissions[]',
        'global_site_access' => 'string',
        'sites' => '\OpenAPI\Client\Model\RoleSites[]',
        'global_zone_access' => 'string',
        'zones' => '\OpenAPI\Client\Model\RoleSites[]',
        'global_instance_type_access' => 'string',
        'instance_type_permissions' => '\OpenAPI\Client\Model\RoleInstanceTypePermissions[]',
        'global_app_template_access' => 'string',
        'app_template_permissions' => '\OpenAPI\Client\Model\RoleAppTemplatePermissions[]',
        'global_catalog_item_type_access' => 'string',
        'catalog_item_type_permissions' => '\OpenAPI\Client\Model\RoleSites[]',
        'global_persona_access' => 'string',
        'persona_permissions' => '\OpenAPI\Client\Model\RoleInstanceTypePermissions[]',
        'global_vdi_pool_access' => 'string',
        'vdi_pool_permissions' => '\OpenAPI\Client\Model\RoleSites[]',
        'global_report_type_access' => 'string',
        'report_type_permissions' => '\OpenAPI\Client\Model\RoleInstanceTypePermissions[]',
        'global_task_access' => 'string',
        'task_permissions' => '\OpenAPI\Client\Model\RoleAppTemplatePermissions[]',
        'global_task_set_access' => 'string',
        'task_set_permissions' => '\OpenAPI\Client\Model\RoleAppTemplatePermissions[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'role' => null,
        'feature_permissions' => null,
        'global_site_access' => null,
        'sites' => null,
        'global_zone_access' => null,
        'zones' => null,
        'global_instance_type_access' => null,
        'instance_type_permissions' => null,
        'global_app_template_access' => null,
        'app_template_permissions' => null,
        'global_catalog_item_type_access' => null,
        'catalog_item_type_permissions' => null,
        'global_persona_access' => null,
        'persona_permissions' => null,
        'global_vdi_pool_access' => null,
        'vdi_pool_permissions' => null,
        'global_report_type_access' => null,
        'report_type_permissions' => null,
        'global_task_access' => null,
        'task_permissions' => null,
        'global_task_set_access' => null,
        'task_set_permissions' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'role' => 'role',
        'feature_permissions' => 'featurePermissions',
        'global_site_access' => 'globalSiteAccess',
        'sites' => 'sites',
        'global_zone_access' => 'globalZoneAccess',
        'zones' => 'zones',
        'global_instance_type_access' => 'globalInstanceTypeAccess',
        'instance_type_permissions' => 'instanceTypePermissions',
        'global_app_template_access' => 'globalAppTemplateAccess',
        'app_template_permissions' => 'appTemplatePermissions',
        'global_catalog_item_type_access' => 'globalCatalogItemTypeAccess',
        'catalog_item_type_permissions' => 'catalogItemTypePermissions',
        'global_persona_access' => 'globalPersonaAccess',
        'persona_permissions' => 'personaPermissions',
        'global_vdi_pool_access' => 'globalVdiPoolAccess',
        'vdi_pool_permissions' => 'vdiPoolPermissions',
        'global_report_type_access' => 'globalReportTypeAccess',
        'report_type_permissions' => 'reportTypePermissions',
        'global_task_access' => 'globalTaskAccess',
        'task_permissions' => 'taskPermissions',
        'global_task_set_access' => 'globalTaskSetAccess',
        'task_set_permissions' => 'taskSetPermissions'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'role' => 'setRole',
        'feature_permissions' => 'setFeaturePermissions',
        'global_site_access' => 'setGlobalSiteAccess',
        'sites' => 'setSites',
        'global_zone_access' => 'setGlobalZoneAccess',
        'zones' => 'setZones',
        'global_instance_type_access' => 'setGlobalInstanceTypeAccess',
        'instance_type_permissions' => 'setInstanceTypePermissions',
        'global_app_template_access' => 'setGlobalAppTemplateAccess',
        'app_template_permissions' => 'setAppTemplatePermissions',
        'global_catalog_item_type_access' => 'setGlobalCatalogItemTypeAccess',
        'catalog_item_type_permissions' => 'setCatalogItemTypePermissions',
        'global_persona_access' => 'setGlobalPersonaAccess',
        'persona_permissions' => 'setPersonaPermissions',
        'global_vdi_pool_access' => 'setGlobalVdiPoolAccess',
        'vdi_pool_permissions' => 'setVdiPoolPermissions',
        'global_report_type_access' => 'setGlobalReportTypeAccess',
        'report_type_permissions' => 'setReportTypePermissions',
        'global_task_access' => 'setGlobalTaskAccess',
        'task_permissions' => 'setTaskPermissions',
        'global_task_set_access' => 'setGlobalTaskSetAccess',
        'task_set_permissions' => 'setTaskSetPermissions'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'role' => 'getRole',
        'feature_permissions' => 'getFeaturePermissions',
        'global_site_access' => 'getGlobalSiteAccess',
        'sites' => 'getSites',
        'global_zone_access' => 'getGlobalZoneAccess',
        'zones' => 'getZones',
        'global_instance_type_access' => 'getGlobalInstanceTypeAccess',
        'instance_type_permissions' => 'getInstanceTypePermissions',
        'global_app_template_access' => 'getGlobalAppTemplateAccess',
        'app_template_permissions' => 'getAppTemplatePermissions',
        'global_catalog_item_type_access' => 'getGlobalCatalogItemTypeAccess',
        'catalog_item_type_permissions' => 'getCatalogItemTypePermissions',
        'global_persona_access' => 'getGlobalPersonaAccess',
        'persona_permissions' => 'getPersonaPermissions',
        'global_vdi_pool_access' => 'getGlobalVdiPoolAccess',
        'vdi_pool_permissions' => 'getVdiPoolPermissions',
        'global_report_type_access' => 'getGlobalReportTypeAccess',
        'report_type_permissions' => 'getReportTypePermissions',
        'global_task_access' => 'getGlobalTaskAccess',
        'task_permissions' => 'getTaskPermissions',
        'global_task_set_access' => 'getGlobalTaskSetAccess',
        'task_set_permissions' => 'getTaskSetPermissions'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['role'] = $data['role'] ?? null;
        $this->container['feature_permissions'] = $data['feature_permissions'] ?? null;
        $this->container['global_site_access'] = $data['global_site_access'] ?? null;
        $this->container['sites'] = $data['sites'] ?? null;
        $this->container['global_zone_access'] = $data['global_zone_access'] ?? null;
        $this->container['zones'] = $data['zones'] ?? null;
        $this->container['global_instance_type_access'] = $data['global_instance_type_access'] ?? null;
        $this->container['instance_type_permissions'] = $data['instance_type_permissions'] ?? null;
        $this->container['global_app_template_access'] = $data['global_app_template_access'] ?? null;
        $this->container['app_template_permissions'] = $data['app_template_permissions'] ?? null;
        $this->container['global_catalog_item_type_access'] = $data['global_catalog_item_type_access'] ?? null;
        $this->container['catalog_item_type_permissions'] = $data['catalog_item_type_permissions'] ?? null;
        $this->container['global_persona_access'] = $data['global_persona_access'] ?? null;
        $this->container['persona_permissions'] = $data['persona_permissions'] ?? null;
        $this->container['global_vdi_pool_access'] = $data['global_vdi_pool_access'] ?? null;
        $this->container['vdi_pool_permissions'] = $data['vdi_pool_permissions'] ?? null;
        $this->container['global_report_type_access'] = $data['global_report_type_access'] ?? null;
        $this->container['report_type_permissions'] = $data['report_type_permissions'] ?? null;
        $this->container['global_task_access'] = $data['global_task_access'] ?? null;
        $this->container['task_permissions'] = $data['task_permissions'] ?? null;
        $this->container['global_task_set_access'] = $data['global_task_set_access'] ?? null;
        $this->container['task_set_permissions'] = $data['task_set_permissions'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets role
     *
     * @return \OpenAPI\Client\Model\RoleRole|null
     */
    public function getRole()
    {
        return $this->container['role'];
    }

    /**
     * Sets role
     *
     * @param \OpenAPI\Client\Model\RoleRole|null $role role
     *
     * @return self
     */
    public function setRole($role)
    {
        $this->container['role'] = $role;

        return $this;
    }

    /**
     * Gets feature_permissions
     *
     * @return \OpenAPI\Client\Model\RoleFeaturePermissions[]|null
     */
    public function getFeaturePermissions()
    {
        return $this->container['feature_permissions'];
    }

    /**
     * Sets feature_permissions
     *
     * @param \OpenAPI\Client\Model\RoleFeaturePermissions[]|null $feature_permissions feature_permissions
     *
     * @return self
     */
    public function setFeaturePermissions($feature_permissions)
    {
        $this->container['feature_permissions'] = $feature_permissions;

        return $this;
    }

    /**
     * Gets global_site_access
     *
     * @return string|null
     */
    public function getGlobalSiteAccess()
    {
        return $this->container['global_site_access'];
    }

    /**
     * Sets global_site_access
     *
     * @param string|null $global_site_access global_site_access
     *
     * @return self
     */
    public function setGlobalSiteAccess($global_site_access)
    {
        $this->container['global_site_access'] = $global_site_access;

        return $this;
    }

    /**
     * Gets sites
     *
     * @return \OpenAPI\Client\Model\RoleSites[]|null
     */
    public function getSites()
    {
        return $this->container['sites'];
    }

    /**
     * Sets sites
     *
     * @param \OpenAPI\Client\Model\RoleSites[]|null $sites sites
     *
     * @return self
     */
    public function setSites($sites)
    {
        $this->container['sites'] = $sites;

        return $this;
    }

    /**
     * Gets global_zone_access
     *
     * @return string|null
     */
    public function getGlobalZoneAccess()
    {
        return $this->container['global_zone_access'];
    }

    /**
     * Sets global_zone_access
     *
     * @param string|null $global_zone_access global_zone_access
     *
     * @return self
     */
    public function setGlobalZoneAccess($global_zone_access)
    {
        $this->container['global_zone_access'] = $global_zone_access;

        return $this;
    }

    /**
     * Gets zones
     *
     * @return \OpenAPI\Client\Model\RoleSites[]|null
     */
    public function getZones()
    {
        return $this->container['zones'];
    }

    /**
     * Sets zones
     *
     * @param \OpenAPI\Client\Model\RoleSites[]|null $zones zones
     *
     * @return self
     */
    public function setZones($zones)
    {
        $this->container['zones'] = $zones;

        return $this;
    }

    /**
     * Gets global_instance_type_access
     *
     * @return string|null
     */
    public function getGlobalInstanceTypeAccess()
    {
        return $this->container['global_instance_type_access'];
    }

    /**
     * Sets global_instance_type_access
     *
     * @param string|null $global_instance_type_access global_instance_type_access
     *
     * @return self
     */
    public function setGlobalInstanceTypeAccess($global_instance_type_access)
    {
        $this->container['global_instance_type_access'] = $global_instance_type_access;

        return $this;
    }

    /**
     * Gets instance_type_permissions
     *
     * @return \OpenAPI\Client\Model\RoleInstanceTypePermissions[]|null
     */
    public function getInstanceTypePermissions()
    {
        return $this->container['instance_type_permissions'];
    }

    /**
     * Sets instance_type_permissions
     *
     * @param \OpenAPI\Client\Model\RoleInstanceTypePermissions[]|null $instance_type_permissions instance_type_permissions
     *
     * @return self
     */
    public function setInstanceTypePermissions($instance_type_permissions)
    {
        $this->container['instance_type_permissions'] = $instance_type_permissions;

        return $this;
    }

    /**
     * Gets global_app_template_access
     *
     * @return string|null
     */
    public function getGlobalAppTemplateAccess()
    {
        return $this->container['global_app_template_access'];
    }

    /**
     * Sets global_app_template_access
     *
     * @param string|null $global_app_template_access global_app_template_access
     *
     * @return self
     */
    public function setGlobalAppTemplateAccess($global_app_template_access)
    {
        $this->container['global_app_template_access'] = $global_app_template_access;

        return $this;
    }

    /**
     * Gets app_template_permissions
     *
     * @return \OpenAPI\Client\Model\RoleAppTemplatePermissions[]|null
     */
    public function getAppTemplatePermissions()
    {
        return $this->container['app_template_permissions'];
    }

    /**
     * Sets app_template_permissions
     *
     * @param \OpenAPI\Client\Model\RoleAppTemplatePermissions[]|null $app_template_permissions app_template_permissions
     *
     * @return self
     */
    public function setAppTemplatePermissions($app_template_permissions)
    {
        $this->container['app_template_permissions'] = $app_template_permissions;

        return $this;
    }

    /**
     * Gets global_catalog_item_type_access
     *
     * @return string|null
     */
    public function getGlobalCatalogItemTypeAccess()
    {
        return $this->container['global_catalog_item_type_access'];
    }

    /**
     * Sets global_catalog_item_type_access
     *
     * @param string|null $global_catalog_item_type_access global_catalog_item_type_access
     *
     * @return self
     */
    public function setGlobalCatalogItemTypeAccess($global_catalog_item_type_access)
    {
        $this->container['global_catalog_item_type_access'] = $global_catalog_item_type_access;

        return $this;
    }

    /**
     * Gets catalog_item_type_permissions
     *
     * @return \OpenAPI\Client\Model\RoleSites[]|null
     */
    public function getCatalogItemTypePermissions()
    {
        return $this->container['catalog_item_type_permissions'];
    }

    /**
     * Sets catalog_item_type_permissions
     *
     * @param \OpenAPI\Client\Model\RoleSites[]|null $catalog_item_type_permissions catalog_item_type_permissions
     *
     * @return self
     */
    public function setCatalogItemTypePermissions($catalog_item_type_permissions)
    {
        $this->container['catalog_item_type_permissions'] = $catalog_item_type_permissions;

        return $this;
    }

    /**
     * Gets global_persona_access
     *
     * @return string|null
     */
    public function getGlobalPersonaAccess()
    {
        return $this->container['global_persona_access'];
    }

    /**
     * Sets global_persona_access
     *
     * @param string|null $global_persona_access global_persona_access
     *
     * @return self
     */
    public function setGlobalPersonaAccess($global_persona_access)
    {
        $this->container['global_persona_access'] = $global_persona_access;

        return $this;
    }

    /**
     * Gets persona_permissions
     *
     * @return \OpenAPI\Client\Model\RoleInstanceTypePermissions[]|null
     */
    public function getPersonaPermissions()
    {
        return $this->container['persona_permissions'];
    }

    /**
     * Sets persona_permissions
     *
     * @param \OpenAPI\Client\Model\RoleInstanceTypePermissions[]|null $persona_permissions persona_permissions
     *
     * @return self
     */
    public function setPersonaPermissions($persona_permissions)
    {
        $this->container['persona_permissions'] = $persona_permissions;

        return $this;
    }

    /**
     * Gets global_vdi_pool_access
     *
     * @return string|null
     */
    public function getGlobalVdiPoolAccess()
    {
        return $this->container['global_vdi_pool_access'];
    }

    /**
     * Sets global_vdi_pool_access
     *
     * @param string|null $global_vdi_pool_access global_vdi_pool_access
     *
     * @return self
     */
    public function setGlobalVdiPoolAccess($global_vdi_pool_access)
    {
        $this->container['global_vdi_pool_access'] = $global_vdi_pool_access;

        return $this;
    }

    /**
     * Gets vdi_pool_permissions
     *
     * @return \OpenAPI\Client\Model\RoleSites[]|null
     */
    public function getVdiPoolPermissions()
    {
        return $this->container['vdi_pool_permissions'];
    }

    /**
     * Sets vdi_pool_permissions
     *
     * @param \OpenAPI\Client\Model\RoleSites[]|null $vdi_pool_permissions vdi_pool_permissions
     *
     * @return self
     */
    public function setVdiPoolPermissions($vdi_pool_permissions)
    {
        $this->container['vdi_pool_permissions'] = $vdi_pool_permissions;

        return $this;
    }

    /**
     * Gets global_report_type_access
     *
     * @return string|null
     */
    public function getGlobalReportTypeAccess()
    {
        return $this->container['global_report_type_access'];
    }

    /**
     * Sets global_report_type_access
     *
     * @param string|null $global_report_type_access global_report_type_access
     *
     * @return self
     */
    public function setGlobalReportTypeAccess($global_report_type_access)
    {
        $this->container['global_report_type_access'] = $global_report_type_access;

        return $this;
    }

    /**
     * Gets report_type_permissions
     *
     * @return \OpenAPI\Client\Model\RoleInstanceTypePermissions[]|null
     */
    public function getReportTypePermissions()
    {
        return $this->container['report_type_permissions'];
    }

    /**
     * Sets report_type_permissions
     *
     * @param \OpenAPI\Client\Model\RoleInstanceTypePermissions[]|null $report_type_permissions report_type_permissions
     *
     * @return self
     */
    public function setReportTypePermissions($report_type_permissions)
    {
        $this->container['report_type_permissions'] = $report_type_permissions;

        return $this;
    }

    /**
     * Gets global_task_access
     *
     * @return string|null
     */
    public function getGlobalTaskAccess()
    {
        return $this->container['global_task_access'];
    }

    /**
     * Sets global_task_access
     *
     * @param string|null $global_task_access global_task_access
     *
     * @return self
     */
    public function setGlobalTaskAccess($global_task_access)
    {
        $this->container['global_task_access'] = $global_task_access;

        return $this;
    }

    /**
     * Gets task_permissions
     *
     * @return \OpenAPI\Client\Model\RoleAppTemplatePermissions[]|null
     */
    public function getTaskPermissions()
    {
        return $this->container['task_permissions'];
    }

    /**
     * Sets task_permissions
     *
     * @param \OpenAPI\Client\Model\RoleAppTemplatePermissions[]|null $task_permissions task_permissions
     *
     * @return self
     */
    public function setTaskPermissions($task_permissions)
    {
        $this->container['task_permissions'] = $task_permissions;

        return $this;
    }

    /**
     * Gets global_task_set_access
     *
     * @return string|null
     */
    public function getGlobalTaskSetAccess()
    {
        return $this->container['global_task_set_access'];
    }

    /**
     * Sets global_task_set_access
     *
     * @param string|null $global_task_set_access global_task_set_access
     *
     * @return self
     */
    public function setGlobalTaskSetAccess($global_task_set_access)
    {
        $this->container['global_task_set_access'] = $global_task_set_access;

        return $this;
    }

    /**
     * Gets task_set_permissions
     *
     * @return \OpenAPI\Client\Model\RoleAppTemplatePermissions[]|null
     */
    public function getTaskSetPermissions()
    {
        return $this->container['task_set_permissions'];
    }

    /**
     * Sets task_set_permissions
     *
     * @param \OpenAPI\Client\Model\RoleAppTemplatePermissions[]|null $task_set_permissions task_set_permissions
     *
     * @return self
     */
    public function setTaskSetPermissions($task_set_permissions)
    {
        $this->container['task_set_permissions'] = $task_set_permissions;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


