<?php
/**
 * App
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * App Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class App implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'app';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'name' => 'string',
        'description' => 'string',
        'labels' => 'string[]',
        'environment' => 'string',
        'account_id' => 'int',
        'account' => '\OpenAPI\Client\Model\InlineResponse20040AppDeployInstance',
        'owner' => '\OpenAPI\Client\Model\InlineResponse200107NetworkPoolCreatedBy',
        'site_id' => 'int',
        'group' => '\OpenAPI\Client\Model\InlineResponse20040AppDeployInstance',
        'blueprint' => '\OpenAPI\Client\Model\AppBlueprint',
        'type' => 'string',
        'date_created' => '\DateTime',
        'last_updated' => '\DateTime',
        'removal_date' => '\DateTime',
        'app_context' => 'string',
        'status' => 'string',
        'app_status' => 'string',
        'instance_count' => 'int',
        'container_count' => 'int',
        'app_tiers' => 'object[]',
        'instances' => '\OpenAPI\Client\Model\InlineResponse20040AppDeployInstance[]',
        'stats' => '\OpenAPI\Client\Model\AppStats'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int64',
        'name' => null,
        'description' => null,
        'labels' => null,
        'environment' => null,
        'account_id' => 'int64',
        'account' => null,
        'owner' => null,
        'site_id' => 'int64',
        'group' => null,
        'blueprint' => null,
        'type' => null,
        'date_created' => 'date-time',
        'last_updated' => 'date-time',
        'removal_date' => 'date-time',
        'app_context' => null,
        'status' => null,
        'app_status' => null,
        'instance_count' => 'int64',
        'container_count' => 'int64',
        'app_tiers' => null,
        'instances' => null,
        'stats' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'name' => 'name',
        'description' => 'description',
        'labels' => 'labels',
        'environment' => 'environment',
        'account_id' => 'accountId',
        'account' => 'account',
        'owner' => 'owner',
        'site_id' => 'siteId',
        'group' => 'group',
        'blueprint' => 'blueprint',
        'type' => 'type',
        'date_created' => 'dateCreated',
        'last_updated' => 'lastUpdated',
        'removal_date' => 'removalDate',
        'app_context' => 'appContext',
        'status' => 'status',
        'app_status' => 'appStatus',
        'instance_count' => 'instanceCount',
        'container_count' => 'containerCount',
        'app_tiers' => 'appTiers',
        'instances' => 'instances',
        'stats' => 'stats'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'name' => 'setName',
        'description' => 'setDescription',
        'labels' => 'setLabels',
        'environment' => 'setEnvironment',
        'account_id' => 'setAccountId',
        'account' => 'setAccount',
        'owner' => 'setOwner',
        'site_id' => 'setSiteId',
        'group' => 'setGroup',
        'blueprint' => 'setBlueprint',
        'type' => 'setType',
        'date_created' => 'setDateCreated',
        'last_updated' => 'setLastUpdated',
        'removal_date' => 'setRemovalDate',
        'app_context' => 'setAppContext',
        'status' => 'setStatus',
        'app_status' => 'setAppStatus',
        'instance_count' => 'setInstanceCount',
        'container_count' => 'setContainerCount',
        'app_tiers' => 'setAppTiers',
        'instances' => 'setInstances',
        'stats' => 'setStats'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'name' => 'getName',
        'description' => 'getDescription',
        'labels' => 'getLabels',
        'environment' => 'getEnvironment',
        'account_id' => 'getAccountId',
        'account' => 'getAccount',
        'owner' => 'getOwner',
        'site_id' => 'getSiteId',
        'group' => 'getGroup',
        'blueprint' => 'getBlueprint',
        'type' => 'getType',
        'date_created' => 'getDateCreated',
        'last_updated' => 'getLastUpdated',
        'removal_date' => 'getRemovalDate',
        'app_context' => 'getAppContext',
        'status' => 'getStatus',
        'app_status' => 'getAppStatus',
        'instance_count' => 'getInstanceCount',
        'container_count' => 'getContainerCount',
        'app_tiers' => 'getAppTiers',
        'instances' => 'getInstances',
        'stats' => 'getStats'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
        $this->container['labels'] = $data['labels'] ?? null;
        $this->container['environment'] = $data['environment'] ?? null;
        $this->container['account_id'] = $data['account_id'] ?? null;
        $this->container['account'] = $data['account'] ?? null;
        $this->container['owner'] = $data['owner'] ?? null;
        $this->container['site_id'] = $data['site_id'] ?? null;
        $this->container['group'] = $data['group'] ?? null;
        $this->container['blueprint'] = $data['blueprint'] ?? null;
        $this->container['type'] = $data['type'] ?? null;
        $this->container['date_created'] = $data['date_created'] ?? null;
        $this->container['last_updated'] = $data['last_updated'] ?? null;
        $this->container['removal_date'] = $data['removal_date'] ?? null;
        $this->container['app_context'] = $data['app_context'] ?? null;
        $this->container['status'] = $data['status'] ?? null;
        $this->container['app_status'] = $data['app_status'] ?? null;
        $this->container['instance_count'] = $data['instance_count'] ?? null;
        $this->container['container_count'] = $data['container_count'] ?? null;
        $this->container['app_tiers'] = $data['app_tiers'] ?? null;
        $this->container['instances'] = $data['instances'] ?? null;
        $this->container['stats'] = $data['stats'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description description
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets labels
     *
     * @return string[]|null
     */
    public function getLabels()
    {
        return $this->container['labels'];
    }

    /**
     * Sets labels
     *
     * @param string[]|null $labels labels
     *
     * @return self
     */
    public function setLabels($labels)
    {
        $this->container['labels'] = $labels;

        return $this;
    }

    /**
     * Gets environment
     *
     * @return string|null
     */
    public function getEnvironment()
    {
        return $this->container['environment'];
    }

    /**
     * Sets environment
     *
     * @param string|null $environment environment
     *
     * @return self
     */
    public function setEnvironment($environment)
    {
        $this->container['environment'] = $environment;

        return $this;
    }

    /**
     * Gets account_id
     *
     * @return int|null
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param int|null $account_id account_id
     *
     * @return self
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets account
     *
     * @return \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null $account account
     *
     * @return self
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets owner
     *
     * @return \OpenAPI\Client\Model\InlineResponse200107NetworkPoolCreatedBy|null
     */
    public function getOwner()
    {
        return $this->container['owner'];
    }

    /**
     * Sets owner
     *
     * @param \OpenAPI\Client\Model\InlineResponse200107NetworkPoolCreatedBy|null $owner owner
     *
     * @return self
     */
    public function setOwner($owner)
    {
        $this->container['owner'] = $owner;

        return $this;
    }

    /**
     * Gets site_id
     *
     * @return int|null
     */
    public function getSiteId()
    {
        return $this->container['site_id'];
    }

    /**
     * Sets site_id
     *
     * @param int|null $site_id site_id
     *
     * @return self
     */
    public function setSiteId($site_id)
    {
        $this->container['site_id'] = $site_id;

        return $this;
    }

    /**
     * Gets group
     *
     * @return \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null
     */
    public function getGroup()
    {
        return $this->container['group'];
    }

    /**
     * Sets group
     *
     * @param \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null $group group
     *
     * @return self
     */
    public function setGroup($group)
    {
        $this->container['group'] = $group;

        return $this;
    }

    /**
     * Gets blueprint
     *
     * @return \OpenAPI\Client\Model\AppBlueprint|null
     */
    public function getBlueprint()
    {
        return $this->container['blueprint'];
    }

    /**
     * Sets blueprint
     *
     * @param \OpenAPI\Client\Model\AppBlueprint|null $blueprint blueprint
     *
     * @return self
     */
    public function setBlueprint($blueprint)
    {
        $this->container['blueprint'] = $blueprint;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string|null $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets date_created
     *
     * @return \DateTime|null
     */
    public function getDateCreated()
    {
        return $this->container['date_created'];
    }

    /**
     * Sets date_created
     *
     * @param \DateTime|null $date_created date_created
     *
     * @return self
     */
    public function setDateCreated($date_created)
    {
        $this->container['date_created'] = $date_created;

        return $this;
    }

    /**
     * Gets last_updated
     *
     * @return \DateTime|null
     */
    public function getLastUpdated()
    {
        return $this->container['last_updated'];
    }

    /**
     * Sets last_updated
     *
     * @param \DateTime|null $last_updated last_updated
     *
     * @return self
     */
    public function setLastUpdated($last_updated)
    {
        $this->container['last_updated'] = $last_updated;

        return $this;
    }

    /**
     * Gets removal_date
     *
     * @return \DateTime|null
     */
    public function getRemovalDate()
    {
        return $this->container['removal_date'];
    }

    /**
     * Sets removal_date
     *
     * @param \DateTime|null $removal_date removal_date
     *
     * @return self
     */
    public function setRemovalDate($removal_date)
    {
        $this->container['removal_date'] = $removal_date;

        return $this;
    }

    /**
     * Gets app_context
     *
     * @return string|null
     */
    public function getAppContext()
    {
        return $this->container['app_context'];
    }

    /**
     * Sets app_context
     *
     * @param string|null $app_context app_context
     *
     * @return self
     */
    public function setAppContext($app_context)
    {
        $this->container['app_context'] = $app_context;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string|null $status status
     *
     * @return self
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets app_status
     *
     * @return string|null
     */
    public function getAppStatus()
    {
        return $this->container['app_status'];
    }

    /**
     * Sets app_status
     *
     * @param string|null $app_status app_status
     *
     * @return self
     */
    public function setAppStatus($app_status)
    {
        $this->container['app_status'] = $app_status;

        return $this;
    }

    /**
     * Gets instance_count
     *
     * @return int|null
     */
    public function getInstanceCount()
    {
        return $this->container['instance_count'];
    }

    /**
     * Sets instance_count
     *
     * @param int|null $instance_count instance_count
     *
     * @return self
     */
    public function setInstanceCount($instance_count)
    {
        $this->container['instance_count'] = $instance_count;

        return $this;
    }

    /**
     * Gets container_count
     *
     * @return int|null
     */
    public function getContainerCount()
    {
        return $this->container['container_count'];
    }

    /**
     * Sets container_count
     *
     * @param int|null $container_count container_count
     *
     * @return self
     */
    public function setContainerCount($container_count)
    {
        $this->container['container_count'] = $container_count;

        return $this;
    }

    /**
     * Gets app_tiers
     *
     * @return object[]|null
     */
    public function getAppTiers()
    {
        return $this->container['app_tiers'];
    }

    /**
     * Sets app_tiers
     *
     * @param object[]|null $app_tiers app_tiers
     *
     * @return self
     */
    public function setAppTiers($app_tiers)
    {
        $this->container['app_tiers'] = $app_tiers;

        return $this;
    }

    /**
     * Gets instances
     *
     * @return \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance[]|null
     */
    public function getInstances()
    {
        return $this->container['instances'];
    }

    /**
     * Sets instances
     *
     * @param \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance[]|null $instances instances
     *
     * @return self
     */
    public function setInstances($instances)
    {
        $this->container['instances'] = $instances;

        return $this;
    }

    /**
     * Gets stats
     *
     * @return \OpenAPI\Client\Model\AppStats|null
     */
    public function getStats()
    {
        return $this->container['stats'];
    }

    /**
     * Sets stats
     *
     * @param \OpenAPI\Client\Model\AppStats|null $stats stats
     *
     * @return self
     */
    public function setStats($stats)
    {
        $this->container['stats'] = $stats;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


