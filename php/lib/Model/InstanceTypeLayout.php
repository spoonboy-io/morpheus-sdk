<?php
/**
 * InstanceTypeLayout
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * InstanceTypeLayout Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class InstanceTypeLayout implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'instanceTypeLayout';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'instance_type' => '\OpenAPI\Client\Model\InlineResponse20094Network',
        'account' => '\OpenAPI\Client\Model\InlineResponse20082LoadBalancerInstanceSslCert',
        'code' => 'string',
        'name' => 'string',
        'labels' => 'string[]',
        'instance_version' => 'string',
        'description' => 'string',
        'creatable' => 'bool',
        'memory_requirement' => 'int',
        'sort_order' => 'int',
        'supports_convert_to_managed' => 'bool',
        'provision_type' => '\OpenAPI\Client\Model\ProvisionType',
        'task_sets' => 'object[]',
        'container_types' => '\OpenAPI\Client\Model\ContainerType[]',
        'mounts' => 'object[]',
        'ports' => 'object[]',
        'option_types' => 'object[]',
        'environment_variables' => 'object[]',
        'price_sets' => 'object[]',
        'spec_templates' => 'object[]',
        'tfvar_secret' => 'object[]',
        'permissions' => '\OpenAPI\Client\Model\InstanceTypeLayoutPermissions'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int64',
        'instance_type' => null,
        'account' => null,
        'code' => null,
        'name' => null,
        'labels' => null,
        'instance_version' => null,
        'description' => null,
        'creatable' => null,
        'memory_requirement' => 'int64',
        'sort_order' => 'int64',
        'supports_convert_to_managed' => null,
        'provision_type' => null,
        'task_sets' => null,
        'container_types' => null,
        'mounts' => null,
        'ports' => null,
        'option_types' => null,
        'environment_variables' => null,
        'price_sets' => null,
        'spec_templates' => null,
        'tfvar_secret' => null,
        'permissions' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'instance_type' => 'instanceType',
        'account' => 'account',
        'code' => 'code',
        'name' => 'name',
        'labels' => 'labels',
        'instance_version' => 'instanceVersion',
        'description' => 'description',
        'creatable' => 'creatable',
        'memory_requirement' => 'memoryRequirement',
        'sort_order' => 'sortOrder',
        'supports_convert_to_managed' => 'supportsConvertToManaged',
        'provision_type' => 'provisionType',
        'task_sets' => 'taskSets',
        'container_types' => 'containerTypes',
        'mounts' => 'mounts',
        'ports' => 'ports',
        'option_types' => 'optionTypes',
        'environment_variables' => 'environmentVariables',
        'price_sets' => 'priceSets',
        'spec_templates' => 'specTemplates',
        'tfvar_secret' => 'tfvarSecret',
        'permissions' => 'permissions'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'instance_type' => 'setInstanceType',
        'account' => 'setAccount',
        'code' => 'setCode',
        'name' => 'setName',
        'labels' => 'setLabels',
        'instance_version' => 'setInstanceVersion',
        'description' => 'setDescription',
        'creatable' => 'setCreatable',
        'memory_requirement' => 'setMemoryRequirement',
        'sort_order' => 'setSortOrder',
        'supports_convert_to_managed' => 'setSupportsConvertToManaged',
        'provision_type' => 'setProvisionType',
        'task_sets' => 'setTaskSets',
        'container_types' => 'setContainerTypes',
        'mounts' => 'setMounts',
        'ports' => 'setPorts',
        'option_types' => 'setOptionTypes',
        'environment_variables' => 'setEnvironmentVariables',
        'price_sets' => 'setPriceSets',
        'spec_templates' => 'setSpecTemplates',
        'tfvar_secret' => 'setTfvarSecret',
        'permissions' => 'setPermissions'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'instance_type' => 'getInstanceType',
        'account' => 'getAccount',
        'code' => 'getCode',
        'name' => 'getName',
        'labels' => 'getLabels',
        'instance_version' => 'getInstanceVersion',
        'description' => 'getDescription',
        'creatable' => 'getCreatable',
        'memory_requirement' => 'getMemoryRequirement',
        'sort_order' => 'getSortOrder',
        'supports_convert_to_managed' => 'getSupportsConvertToManaged',
        'provision_type' => 'getProvisionType',
        'task_sets' => 'getTaskSets',
        'container_types' => 'getContainerTypes',
        'mounts' => 'getMounts',
        'ports' => 'getPorts',
        'option_types' => 'getOptionTypes',
        'environment_variables' => 'getEnvironmentVariables',
        'price_sets' => 'getPriceSets',
        'spec_templates' => 'getSpecTemplates',
        'tfvar_secret' => 'getTfvarSecret',
        'permissions' => 'getPermissions'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['instance_type'] = $data['instance_type'] ?? null;
        $this->container['account'] = $data['account'] ?? null;
        $this->container['code'] = $data['code'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['labels'] = $data['labels'] ?? null;
        $this->container['instance_version'] = $data['instance_version'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
        $this->container['creatable'] = $data['creatable'] ?? null;
        $this->container['memory_requirement'] = $data['memory_requirement'] ?? null;
        $this->container['sort_order'] = $data['sort_order'] ?? null;
        $this->container['supports_convert_to_managed'] = $data['supports_convert_to_managed'] ?? null;
        $this->container['provision_type'] = $data['provision_type'] ?? null;
        $this->container['task_sets'] = $data['task_sets'] ?? null;
        $this->container['container_types'] = $data['container_types'] ?? null;
        $this->container['mounts'] = $data['mounts'] ?? null;
        $this->container['ports'] = $data['ports'] ?? null;
        $this->container['option_types'] = $data['option_types'] ?? null;
        $this->container['environment_variables'] = $data['environment_variables'] ?? null;
        $this->container['price_sets'] = $data['price_sets'] ?? null;
        $this->container['spec_templates'] = $data['spec_templates'] ?? null;
        $this->container['tfvar_secret'] = $data['tfvar_secret'] ?? null;
        $this->container['permissions'] = $data['permissions'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets instance_type
     *
     * @return \OpenAPI\Client\Model\InlineResponse20094Network|null
     */
    public function getInstanceType()
    {
        return $this->container['instance_type'];
    }

    /**
     * Sets instance_type
     *
     * @param \OpenAPI\Client\Model\InlineResponse20094Network|null $instance_type instance_type
     *
     * @return self
     */
    public function setInstanceType($instance_type)
    {
        $this->container['instance_type'] = $instance_type;

        return $this;
    }

    /**
     * Gets account
     *
     * @return \OpenAPI\Client\Model\InlineResponse20082LoadBalancerInstanceSslCert|null
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param \OpenAPI\Client\Model\InlineResponse20082LoadBalancerInstanceSslCert|null $account account
     *
     * @return self
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets code
     *
     * @return string|null
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string|null $code code
     *
     * @return self
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets labels
     *
     * @return string[]|null
     */
    public function getLabels()
    {
        return $this->container['labels'];
    }

    /**
     * Sets labels
     *
     * @param string[]|null $labels Array of label strings, can be used for filtering.
     *
     * @return self
     */
    public function setLabels($labels)
    {
        $this->container['labels'] = $labels;

        return $this;
    }

    /**
     * Gets instance_version
     *
     * @return string|null
     */
    public function getInstanceVersion()
    {
        return $this->container['instance_version'];
    }

    /**
     * Sets instance_version
     *
     * @param string|null $instance_version instance_version
     *
     * @return self
     */
    public function setInstanceVersion($instance_version)
    {
        $this->container['instance_version'] = $instance_version;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description description
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets creatable
     *
     * @return bool|null
     */
    public function getCreatable()
    {
        return $this->container['creatable'];
    }

    /**
     * Sets creatable
     *
     * @param bool|null $creatable creatable
     *
     * @return self
     */
    public function setCreatable($creatable)
    {
        $this->container['creatable'] = $creatable;

        return $this;
    }

    /**
     * Gets memory_requirement
     *
     * @return int|null
     */
    public function getMemoryRequirement()
    {
        return $this->container['memory_requirement'];
    }

    /**
     * Sets memory_requirement
     *
     * @param int|null $memory_requirement memory_requirement
     *
     * @return self
     */
    public function setMemoryRequirement($memory_requirement)
    {
        $this->container['memory_requirement'] = $memory_requirement;

        return $this;
    }

    /**
     * Gets sort_order
     *
     * @return int|null
     */
    public function getSortOrder()
    {
        return $this->container['sort_order'];
    }

    /**
     * Sets sort_order
     *
     * @param int|null $sort_order sort_order
     *
     * @return self
     */
    public function setSortOrder($sort_order)
    {
        $this->container['sort_order'] = $sort_order;

        return $this;
    }

    /**
     * Gets supports_convert_to_managed
     *
     * @return bool|null
     */
    public function getSupportsConvertToManaged()
    {
        return $this->container['supports_convert_to_managed'];
    }

    /**
     * Sets supports_convert_to_managed
     *
     * @param bool|null $supports_convert_to_managed supports_convert_to_managed
     *
     * @return self
     */
    public function setSupportsConvertToManaged($supports_convert_to_managed)
    {
        $this->container['supports_convert_to_managed'] = $supports_convert_to_managed;

        return $this;
    }

    /**
     * Gets provision_type
     *
     * @return \OpenAPI\Client\Model\ProvisionType|null
     */
    public function getProvisionType()
    {
        return $this->container['provision_type'];
    }

    /**
     * Sets provision_type
     *
     * @param \OpenAPI\Client\Model\ProvisionType|null $provision_type provision_type
     *
     * @return self
     */
    public function setProvisionType($provision_type)
    {
        $this->container['provision_type'] = $provision_type;

        return $this;
    }

    /**
     * Gets task_sets
     *
     * @return object[]|null
     */
    public function getTaskSets()
    {
        return $this->container['task_sets'];
    }

    /**
     * Sets task_sets
     *
     * @param object[]|null $task_sets task_sets
     *
     * @return self
     */
    public function setTaskSets($task_sets)
    {
        $this->container['task_sets'] = $task_sets;

        return $this;
    }

    /**
     * Gets container_types
     *
     * @return \OpenAPI\Client\Model\ContainerType[]|null
     */
    public function getContainerTypes()
    {
        return $this->container['container_types'];
    }

    /**
     * Sets container_types
     *
     * @param \OpenAPI\Client\Model\ContainerType[]|null $container_types container_types
     *
     * @return self
     */
    public function setContainerTypes($container_types)
    {
        $this->container['container_types'] = $container_types;

        return $this;
    }

    /**
     * Gets mounts
     *
     * @return object[]|null
     */
    public function getMounts()
    {
        return $this->container['mounts'];
    }

    /**
     * Sets mounts
     *
     * @param object[]|null $mounts mounts
     *
     * @return self
     */
    public function setMounts($mounts)
    {
        $this->container['mounts'] = $mounts;

        return $this;
    }

    /**
     * Gets ports
     *
     * @return object[]|null
     */
    public function getPorts()
    {
        return $this->container['ports'];
    }

    /**
     * Sets ports
     *
     * @param object[]|null $ports ports
     *
     * @return self
     */
    public function setPorts($ports)
    {
        $this->container['ports'] = $ports;

        return $this;
    }

    /**
     * Gets option_types
     *
     * @return object[]|null
     */
    public function getOptionTypes()
    {
        return $this->container['option_types'];
    }

    /**
     * Sets option_types
     *
     * @param object[]|null $option_types option_types
     *
     * @return self
     */
    public function setOptionTypes($option_types)
    {
        $this->container['option_types'] = $option_types;

        return $this;
    }

    /**
     * Gets environment_variables
     *
     * @return object[]|null
     */
    public function getEnvironmentVariables()
    {
        return $this->container['environment_variables'];
    }

    /**
     * Sets environment_variables
     *
     * @param object[]|null $environment_variables environment_variables
     *
     * @return self
     */
    public function setEnvironmentVariables($environment_variables)
    {
        $this->container['environment_variables'] = $environment_variables;

        return $this;
    }

    /**
     * Gets price_sets
     *
     * @return object[]|null
     */
    public function getPriceSets()
    {
        return $this->container['price_sets'];
    }

    /**
     * Sets price_sets
     *
     * @param object[]|null $price_sets price_sets
     *
     * @return self
     */
    public function setPriceSets($price_sets)
    {
        $this->container['price_sets'] = $price_sets;

        return $this;
    }

    /**
     * Gets spec_templates
     *
     * @return object[]|null
     */
    public function getSpecTemplates()
    {
        return $this->container['spec_templates'];
    }

    /**
     * Sets spec_templates
     *
     * @param object[]|null $spec_templates spec_templates
     *
     * @return self
     */
    public function setSpecTemplates($spec_templates)
    {
        $this->container['spec_templates'] = $spec_templates;

        return $this;
    }

    /**
     * Gets tfvar_secret
     *
     * @return object[]|null
     */
    public function getTfvarSecret()
    {
        return $this->container['tfvar_secret'];
    }

    /**
     * Sets tfvar_secret
     *
     * @param object[]|null $tfvar_secret tfvar_secret
     *
     * @return self
     */
    public function setTfvarSecret($tfvar_secret)
    {
        $this->container['tfvar_secret'] = $tfvar_secret;

        return $this;
    }

    /**
     * Gets permissions
     *
     * @return \OpenAPI\Client\Model\InstanceTypeLayoutPermissions|null
     */
    public function getPermissions()
    {
        return $this->container['permissions'];
    }

    /**
     * Sets permissions
     *
     * @param \OpenAPI\Client\Model\InstanceTypeLayoutPermissions|null $permissions permissions
     *
     * @return self
     */
    public function setPermissions($permissions)
    {
        $this->container['permissions'] = $permissions;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


