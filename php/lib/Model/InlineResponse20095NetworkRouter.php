<?php
/**
 * InlineResponse20095NetworkRouter
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * InlineResponse20095NetworkRouter Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class InlineResponse20095NetworkRouter implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'inline_response_200_95_networkRouter';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'code' => 'string',
        'name' => 'string',
        'description' => 'string',
        'category' => 'string',
        'date_created' => '\DateTime',
        'last_updated' => '\DateTime',
        'router_type' => 'string',
        'status' => 'string',
        'enabled' => 'bool',
        'external_ip' => 'string',
        'external_id' => 'string',
        'provider_id' => 'string',
        'type' => '\OpenAPI\Client\Model\InlineResponse20095NetworkRouterType',
        'network_server' => '\OpenAPI\Client\Model\InlineResponse20095NetworkRouterNetworkServer',
        'zone' => '\OpenAPI\Client\Model\InlineResponse20079LoadBalancerMonitorLoadBalancerType',
        'instance' => 'string',
        'external_network' => 'string',
        'site' => 'string',
        'interfaces' => 'object[]',
        'firewall' => '\OpenAPI\Client\Model\InlineResponse20095NetworkRouterFirewall',
        'routes' => 'object[]',
        'nats' => 'object[]',
        'permissions' => '\OpenAPI\Client\Model\InlineResponse20095NetworkRouterPermissions'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int64',
        'code' => null,
        'name' => null,
        'description' => null,
        'category' => null,
        'date_created' => 'date-time',
        'last_updated' => 'date-time',
        'router_type' => null,
        'status' => null,
        'enabled' => null,
        'external_ip' => null,
        'external_id' => null,
        'provider_id' => null,
        'type' => null,
        'network_server' => null,
        'zone' => null,
        'instance' => null,
        'external_network' => null,
        'site' => null,
        'interfaces' => null,
        'firewall' => null,
        'routes' => null,
        'nats' => null,
        'permissions' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'code' => 'code',
        'name' => 'name',
        'description' => 'description',
        'category' => 'category',
        'date_created' => 'dateCreated',
        'last_updated' => 'lastUpdated',
        'router_type' => 'routerType',
        'status' => 'status',
        'enabled' => 'enabled',
        'external_ip' => 'externalIp',
        'external_id' => 'externalId',
        'provider_id' => 'providerId',
        'type' => 'type',
        'network_server' => 'networkServer',
        'zone' => 'zone',
        'instance' => 'instance',
        'external_network' => 'externalNetwork',
        'site' => 'site',
        'interfaces' => 'interfaces',
        'firewall' => 'firewall',
        'routes' => 'routes',
        'nats' => 'nats',
        'permissions' => 'permissions'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'code' => 'setCode',
        'name' => 'setName',
        'description' => 'setDescription',
        'category' => 'setCategory',
        'date_created' => 'setDateCreated',
        'last_updated' => 'setLastUpdated',
        'router_type' => 'setRouterType',
        'status' => 'setStatus',
        'enabled' => 'setEnabled',
        'external_ip' => 'setExternalIp',
        'external_id' => 'setExternalId',
        'provider_id' => 'setProviderId',
        'type' => 'setType',
        'network_server' => 'setNetworkServer',
        'zone' => 'setZone',
        'instance' => 'setInstance',
        'external_network' => 'setExternalNetwork',
        'site' => 'setSite',
        'interfaces' => 'setInterfaces',
        'firewall' => 'setFirewall',
        'routes' => 'setRoutes',
        'nats' => 'setNats',
        'permissions' => 'setPermissions'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'code' => 'getCode',
        'name' => 'getName',
        'description' => 'getDescription',
        'category' => 'getCategory',
        'date_created' => 'getDateCreated',
        'last_updated' => 'getLastUpdated',
        'router_type' => 'getRouterType',
        'status' => 'getStatus',
        'enabled' => 'getEnabled',
        'external_ip' => 'getExternalIp',
        'external_id' => 'getExternalId',
        'provider_id' => 'getProviderId',
        'type' => 'getType',
        'network_server' => 'getNetworkServer',
        'zone' => 'getZone',
        'instance' => 'getInstance',
        'external_network' => 'getExternalNetwork',
        'site' => 'getSite',
        'interfaces' => 'getInterfaces',
        'firewall' => 'getFirewall',
        'routes' => 'getRoutes',
        'nats' => 'getNats',
        'permissions' => 'getPermissions'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['code'] = $data['code'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
        $this->container['category'] = $data['category'] ?? null;
        $this->container['date_created'] = $data['date_created'] ?? null;
        $this->container['last_updated'] = $data['last_updated'] ?? null;
        $this->container['router_type'] = $data['router_type'] ?? null;
        $this->container['status'] = $data['status'] ?? null;
        $this->container['enabled'] = $data['enabled'] ?? null;
        $this->container['external_ip'] = $data['external_ip'] ?? null;
        $this->container['external_id'] = $data['external_id'] ?? null;
        $this->container['provider_id'] = $data['provider_id'] ?? null;
        $this->container['type'] = $data['type'] ?? null;
        $this->container['network_server'] = $data['network_server'] ?? null;
        $this->container['zone'] = $data['zone'] ?? null;
        $this->container['instance'] = $data['instance'] ?? null;
        $this->container['external_network'] = $data['external_network'] ?? null;
        $this->container['site'] = $data['site'] ?? null;
        $this->container['interfaces'] = $data['interfaces'] ?? null;
        $this->container['firewall'] = $data['firewall'] ?? null;
        $this->container['routes'] = $data['routes'] ?? null;
        $this->container['nats'] = $data['nats'] ?? null;
        $this->container['permissions'] = $data['permissions'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets code
     *
     * @return string|null
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string|null $code code
     *
     * @return self
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description description
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets category
     *
     * @return string|null
     */
    public function getCategory()
    {
        return $this->container['category'];
    }

    /**
     * Sets category
     *
     * @param string|null $category category
     *
     * @return self
     */
    public function setCategory($category)
    {
        $this->container['category'] = $category;

        return $this;
    }

    /**
     * Gets date_created
     *
     * @return \DateTime|null
     */
    public function getDateCreated()
    {
        return $this->container['date_created'];
    }

    /**
     * Sets date_created
     *
     * @param \DateTime|null $date_created date_created
     *
     * @return self
     */
    public function setDateCreated($date_created)
    {
        $this->container['date_created'] = $date_created;

        return $this;
    }

    /**
     * Gets last_updated
     *
     * @return \DateTime|null
     */
    public function getLastUpdated()
    {
        return $this->container['last_updated'];
    }

    /**
     * Sets last_updated
     *
     * @param \DateTime|null $last_updated last_updated
     *
     * @return self
     */
    public function setLastUpdated($last_updated)
    {
        $this->container['last_updated'] = $last_updated;

        return $this;
    }

    /**
     * Gets router_type
     *
     * @return string|null
     */
    public function getRouterType()
    {
        return $this->container['router_type'];
    }

    /**
     * Sets router_type
     *
     * @param string|null $router_type router_type
     *
     * @return self
     */
    public function setRouterType($router_type)
    {
        $this->container['router_type'] = $router_type;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string|null $status status
     *
     * @return self
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets enabled
     *
     * @return bool|null
     */
    public function getEnabled()
    {
        return $this->container['enabled'];
    }

    /**
     * Sets enabled
     *
     * @param bool|null $enabled enabled
     *
     * @return self
     */
    public function setEnabled($enabled)
    {
        $this->container['enabled'] = $enabled;

        return $this;
    }

    /**
     * Gets external_ip
     *
     * @return string|null
     */
    public function getExternalIp()
    {
        return $this->container['external_ip'];
    }

    /**
     * Sets external_ip
     *
     * @param string|null $external_ip external_ip
     *
     * @return self
     */
    public function setExternalIp($external_ip)
    {
        $this->container['external_ip'] = $external_ip;

        return $this;
    }

    /**
     * Gets external_id
     *
     * @return string|null
     */
    public function getExternalId()
    {
        return $this->container['external_id'];
    }

    /**
     * Sets external_id
     *
     * @param string|null $external_id external_id
     *
     * @return self
     */
    public function setExternalId($external_id)
    {
        $this->container['external_id'] = $external_id;

        return $this;
    }

    /**
     * Gets provider_id
     *
     * @return string|null
     */
    public function getProviderId()
    {
        return $this->container['provider_id'];
    }

    /**
     * Sets provider_id
     *
     * @param string|null $provider_id provider_id
     *
     * @return self
     */
    public function setProviderId($provider_id)
    {
        $this->container['provider_id'] = $provider_id;

        return $this;
    }

    /**
     * Gets type
     *
     * @return \OpenAPI\Client\Model\InlineResponse20095NetworkRouterType|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param \OpenAPI\Client\Model\InlineResponse20095NetworkRouterType|null $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets network_server
     *
     * @return \OpenAPI\Client\Model\InlineResponse20095NetworkRouterNetworkServer|null
     */
    public function getNetworkServer()
    {
        return $this->container['network_server'];
    }

    /**
     * Sets network_server
     *
     * @param \OpenAPI\Client\Model\InlineResponse20095NetworkRouterNetworkServer|null $network_server network_server
     *
     * @return self
     */
    public function setNetworkServer($network_server)
    {
        $this->container['network_server'] = $network_server;

        return $this;
    }

    /**
     * Gets zone
     *
     * @return \OpenAPI\Client\Model\InlineResponse20079LoadBalancerMonitorLoadBalancerType|null
     */
    public function getZone()
    {
        return $this->container['zone'];
    }

    /**
     * Sets zone
     *
     * @param \OpenAPI\Client\Model\InlineResponse20079LoadBalancerMonitorLoadBalancerType|null $zone zone
     *
     * @return self
     */
    public function setZone($zone)
    {
        $this->container['zone'] = $zone;

        return $this;
    }

    /**
     * Gets instance
     *
     * @return string|null
     */
    public function getInstance()
    {
        return $this->container['instance'];
    }

    /**
     * Sets instance
     *
     * @param string|null $instance instance
     *
     * @return self
     */
    public function setInstance($instance)
    {
        $this->container['instance'] = $instance;

        return $this;
    }

    /**
     * Gets external_network
     *
     * @return string|null
     */
    public function getExternalNetwork()
    {
        return $this->container['external_network'];
    }

    /**
     * Sets external_network
     *
     * @param string|null $external_network external_network
     *
     * @return self
     */
    public function setExternalNetwork($external_network)
    {
        $this->container['external_network'] = $external_network;

        return $this;
    }

    /**
     * Gets site
     *
     * @return string|null
     */
    public function getSite()
    {
        return $this->container['site'];
    }

    /**
     * Sets site
     *
     * @param string|null $site site
     *
     * @return self
     */
    public function setSite($site)
    {
        $this->container['site'] = $site;

        return $this;
    }

    /**
     * Gets interfaces
     *
     * @return object[]|null
     */
    public function getInterfaces()
    {
        return $this->container['interfaces'];
    }

    /**
     * Sets interfaces
     *
     * @param object[]|null $interfaces interfaces
     *
     * @return self
     */
    public function setInterfaces($interfaces)
    {
        $this->container['interfaces'] = $interfaces;

        return $this;
    }

    /**
     * Gets firewall
     *
     * @return \OpenAPI\Client\Model\InlineResponse20095NetworkRouterFirewall|null
     */
    public function getFirewall()
    {
        return $this->container['firewall'];
    }

    /**
     * Sets firewall
     *
     * @param \OpenAPI\Client\Model\InlineResponse20095NetworkRouterFirewall|null $firewall firewall
     *
     * @return self
     */
    public function setFirewall($firewall)
    {
        $this->container['firewall'] = $firewall;

        return $this;
    }

    /**
     * Gets routes
     *
     * @return object[]|null
     */
    public function getRoutes()
    {
        return $this->container['routes'];
    }

    /**
     * Sets routes
     *
     * @param object[]|null $routes routes
     *
     * @return self
     */
    public function setRoutes($routes)
    {
        $this->container['routes'] = $routes;

        return $this;
    }

    /**
     * Gets nats
     *
     * @return object[]|null
     */
    public function getNats()
    {
        return $this->container['nats'];
    }

    /**
     * Sets nats
     *
     * @param object[]|null $nats nats
     *
     * @return self
     */
    public function setNats($nats)
    {
        $this->container['nats'] = $nats;

        return $this;
    }

    /**
     * Gets permissions
     *
     * @return \OpenAPI\Client\Model\InlineResponse20095NetworkRouterPermissions|null
     */
    public function getPermissions()
    {
        return $this->container['permissions'];
    }

    /**
     * Sets permissions
     *
     * @param \OpenAPI\Client\Model\InlineResponse20095NetworkRouterPermissions|null $permissions permissions
     *
     * @return self
     */
    public function setPermissions($permissions)
    {
        $this->container['permissions'] = $permissions;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


