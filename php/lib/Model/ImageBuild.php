<?php
/**
 * ImageBuild
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ImageBuild Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class ImageBuild implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'imageBuild';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'account' => '\OpenAPI\Client\Model\InlineResponse20040AppDeployInstance',
        'type' => '\OpenAPI\Client\Model\InlineResponse20079LoadBalancerMonitorLoadBalancerType',
        'site' => '\OpenAPI\Client\Model\InlineResponse20040AppDeployInstance',
        'zone' => '\OpenAPI\Client\Model\InlineResponse20040AppDeployInstance',
        'name' => 'string',
        'description' => 'string',
        'boot_script' => '\OpenAPI\Client\Model\ImageBuildsBootScript',
        'boot_command' => 'string',
        'preseed_script' => '\OpenAPI\Client\Model\ImageBuildsBootScript',
        'scripts' => '\OpenAPI\Client\Model\ImageBuildsScripts[]',
        'ssh_username' => 'string',
        'ssh_password' => 'string',
        'storage_provider' => 'string',
        'build_output_name' => 'string',
        'conversion_formats' => 'string',
        'is_cloud_init' => 'bool',
        'vm_tools_installed' => 'bool',
        'keep_results' => 'int',
        'config' => '\OpenAPI\Client\Model\ImageBuildConfig',
        'last_result' => '\OpenAPI\Client\Model\ImageBuildLastResult',
        'execution_count' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int64',
        'account' => null,
        'type' => null,
        'site' => null,
        'zone' => null,
        'name' => null,
        'description' => null,
        'boot_script' => null,
        'boot_command' => null,
        'preseed_script' => null,
        'scripts' => null,
        'ssh_username' => null,
        'ssh_password' => null,
        'storage_provider' => null,
        'build_output_name' => null,
        'conversion_formats' => null,
        'is_cloud_init' => null,
        'vm_tools_installed' => null,
        'keep_results' => 'int64',
        'config' => null,
        'last_result' => null,
        'execution_count' => 'int64'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'account' => 'account',
        'type' => 'type',
        'site' => 'site',
        'zone' => 'zone',
        'name' => 'name',
        'description' => 'description',
        'boot_script' => 'bootScript',
        'boot_command' => 'bootCommand',
        'preseed_script' => 'preseedScript',
        'scripts' => 'scripts',
        'ssh_username' => 'sshUsername',
        'ssh_password' => 'sshPassword',
        'storage_provider' => 'storageProvider',
        'build_output_name' => 'buildOutputName',
        'conversion_formats' => 'conversionFormats',
        'is_cloud_init' => 'isCloudInit',
        'vm_tools_installed' => 'vmToolsInstalled',
        'keep_results' => 'keepResults',
        'config' => 'config',
        'last_result' => 'lastResult',
        'execution_count' => 'executionCount'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'account' => 'setAccount',
        'type' => 'setType',
        'site' => 'setSite',
        'zone' => 'setZone',
        'name' => 'setName',
        'description' => 'setDescription',
        'boot_script' => 'setBootScript',
        'boot_command' => 'setBootCommand',
        'preseed_script' => 'setPreseedScript',
        'scripts' => 'setScripts',
        'ssh_username' => 'setSshUsername',
        'ssh_password' => 'setSshPassword',
        'storage_provider' => 'setStorageProvider',
        'build_output_name' => 'setBuildOutputName',
        'conversion_formats' => 'setConversionFormats',
        'is_cloud_init' => 'setIsCloudInit',
        'vm_tools_installed' => 'setVmToolsInstalled',
        'keep_results' => 'setKeepResults',
        'config' => 'setConfig',
        'last_result' => 'setLastResult',
        'execution_count' => 'setExecutionCount'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'account' => 'getAccount',
        'type' => 'getType',
        'site' => 'getSite',
        'zone' => 'getZone',
        'name' => 'getName',
        'description' => 'getDescription',
        'boot_script' => 'getBootScript',
        'boot_command' => 'getBootCommand',
        'preseed_script' => 'getPreseedScript',
        'scripts' => 'getScripts',
        'ssh_username' => 'getSshUsername',
        'ssh_password' => 'getSshPassword',
        'storage_provider' => 'getStorageProvider',
        'build_output_name' => 'getBuildOutputName',
        'conversion_formats' => 'getConversionFormats',
        'is_cloud_init' => 'getIsCloudInit',
        'vm_tools_installed' => 'getVmToolsInstalled',
        'keep_results' => 'getKeepResults',
        'config' => 'getConfig',
        'last_result' => 'getLastResult',
        'execution_count' => 'getExecutionCount'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['account'] = $data['account'] ?? null;
        $this->container['type'] = $data['type'] ?? null;
        $this->container['site'] = $data['site'] ?? null;
        $this->container['zone'] = $data['zone'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
        $this->container['boot_script'] = $data['boot_script'] ?? null;
        $this->container['boot_command'] = $data['boot_command'] ?? null;
        $this->container['preseed_script'] = $data['preseed_script'] ?? null;
        $this->container['scripts'] = $data['scripts'] ?? null;
        $this->container['ssh_username'] = $data['ssh_username'] ?? null;
        $this->container['ssh_password'] = $data['ssh_password'] ?? null;
        $this->container['storage_provider'] = $data['storage_provider'] ?? null;
        $this->container['build_output_name'] = $data['build_output_name'] ?? null;
        $this->container['conversion_formats'] = $data['conversion_formats'] ?? null;
        $this->container['is_cloud_init'] = $data['is_cloud_init'] ?? null;
        $this->container['vm_tools_installed'] = $data['vm_tools_installed'] ?? null;
        $this->container['keep_results'] = $data['keep_results'] ?? null;
        $this->container['config'] = $data['config'] ?? null;
        $this->container['last_result'] = $data['last_result'] ?? null;
        $this->container['execution_count'] = $data['execution_count'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets account
     *
     * @return \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null $account account
     *
     * @return self
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets type
     *
     * @return \OpenAPI\Client\Model\InlineResponse20079LoadBalancerMonitorLoadBalancerType|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param \OpenAPI\Client\Model\InlineResponse20079LoadBalancerMonitorLoadBalancerType|null $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets site
     *
     * @return \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null
     */
    public function getSite()
    {
        return $this->container['site'];
    }

    /**
     * Sets site
     *
     * @param \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null $site site
     *
     * @return self
     */
    public function setSite($site)
    {
        $this->container['site'] = $site;

        return $this;
    }

    /**
     * Gets zone
     *
     * @return \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null
     */
    public function getZone()
    {
        return $this->container['zone'];
    }

    /**
     * Sets zone
     *
     * @param \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null $zone zone
     *
     * @return self
     */
    public function setZone($zone)
    {
        $this->container['zone'] = $zone;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description description
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets boot_script
     *
     * @return \OpenAPI\Client\Model\ImageBuildsBootScript|null
     */
    public function getBootScript()
    {
        return $this->container['boot_script'];
    }

    /**
     * Sets boot_script
     *
     * @param \OpenAPI\Client\Model\ImageBuildsBootScript|null $boot_script boot_script
     *
     * @return self
     */
    public function setBootScript($boot_script)
    {
        $this->container['boot_script'] = $boot_script;

        return $this;
    }

    /**
     * Gets boot_command
     *
     * @return string|null
     */
    public function getBootCommand()
    {
        return $this->container['boot_command'];
    }

    /**
     * Sets boot_command
     *
     * @param string|null $boot_command boot_command
     *
     * @return self
     */
    public function setBootCommand($boot_command)
    {
        $this->container['boot_command'] = $boot_command;

        return $this;
    }

    /**
     * Gets preseed_script
     *
     * @return \OpenAPI\Client\Model\ImageBuildsBootScript|null
     */
    public function getPreseedScript()
    {
        return $this->container['preseed_script'];
    }

    /**
     * Sets preseed_script
     *
     * @param \OpenAPI\Client\Model\ImageBuildsBootScript|null $preseed_script preseed_script
     *
     * @return self
     */
    public function setPreseedScript($preseed_script)
    {
        $this->container['preseed_script'] = $preseed_script;

        return $this;
    }

    /**
     * Gets scripts
     *
     * @return \OpenAPI\Client\Model\ImageBuildsScripts[]|null
     */
    public function getScripts()
    {
        return $this->container['scripts'];
    }

    /**
     * Sets scripts
     *
     * @param \OpenAPI\Client\Model\ImageBuildsScripts[]|null $scripts scripts
     *
     * @return self
     */
    public function setScripts($scripts)
    {
        $this->container['scripts'] = $scripts;

        return $this;
    }

    /**
     * Gets ssh_username
     *
     * @return string|null
     */
    public function getSshUsername()
    {
        return $this->container['ssh_username'];
    }

    /**
     * Sets ssh_username
     *
     * @param string|null $ssh_username ssh_username
     *
     * @return self
     */
    public function setSshUsername($ssh_username)
    {
        $this->container['ssh_username'] = $ssh_username;

        return $this;
    }

    /**
     * Gets ssh_password
     *
     * @return string|null
     */
    public function getSshPassword()
    {
        return $this->container['ssh_password'];
    }

    /**
     * Sets ssh_password
     *
     * @param string|null $ssh_password ssh_password
     *
     * @return self
     */
    public function setSshPassword($ssh_password)
    {
        $this->container['ssh_password'] = $ssh_password;

        return $this;
    }

    /**
     * Gets storage_provider
     *
     * @return string|null
     */
    public function getStorageProvider()
    {
        return $this->container['storage_provider'];
    }

    /**
     * Sets storage_provider
     *
     * @param string|null $storage_provider storage_provider
     *
     * @return self
     */
    public function setStorageProvider($storage_provider)
    {
        $this->container['storage_provider'] = $storage_provider;

        return $this;
    }

    /**
     * Gets build_output_name
     *
     * @return string|null
     */
    public function getBuildOutputName()
    {
        return $this->container['build_output_name'];
    }

    /**
     * Sets build_output_name
     *
     * @param string|null $build_output_name build_output_name
     *
     * @return self
     */
    public function setBuildOutputName($build_output_name)
    {
        $this->container['build_output_name'] = $build_output_name;

        return $this;
    }

    /**
     * Gets conversion_formats
     *
     * @return string|null
     */
    public function getConversionFormats()
    {
        return $this->container['conversion_formats'];
    }

    /**
     * Sets conversion_formats
     *
     * @param string|null $conversion_formats conversion_formats
     *
     * @return self
     */
    public function setConversionFormats($conversion_formats)
    {
        $this->container['conversion_formats'] = $conversion_formats;

        return $this;
    }

    /**
     * Gets is_cloud_init
     *
     * @return bool|null
     */
    public function getIsCloudInit()
    {
        return $this->container['is_cloud_init'];
    }

    /**
     * Sets is_cloud_init
     *
     * @param bool|null $is_cloud_init is_cloud_init
     *
     * @return self
     */
    public function setIsCloudInit($is_cloud_init)
    {
        $this->container['is_cloud_init'] = $is_cloud_init;

        return $this;
    }

    /**
     * Gets vm_tools_installed
     *
     * @return bool|null
     */
    public function getVmToolsInstalled()
    {
        return $this->container['vm_tools_installed'];
    }

    /**
     * Sets vm_tools_installed
     *
     * @param bool|null $vm_tools_installed vm_tools_installed
     *
     * @return self
     */
    public function setVmToolsInstalled($vm_tools_installed)
    {
        $this->container['vm_tools_installed'] = $vm_tools_installed;

        return $this;
    }

    /**
     * Gets keep_results
     *
     * @return int|null
     */
    public function getKeepResults()
    {
        return $this->container['keep_results'];
    }

    /**
     * Sets keep_results
     *
     * @param int|null $keep_results keep_results
     *
     * @return self
     */
    public function setKeepResults($keep_results)
    {
        $this->container['keep_results'] = $keep_results;

        return $this;
    }

    /**
     * Gets config
     *
     * @return \OpenAPI\Client\Model\ImageBuildConfig|null
     */
    public function getConfig()
    {
        return $this->container['config'];
    }

    /**
     * Sets config
     *
     * @param \OpenAPI\Client\Model\ImageBuildConfig|null $config config
     *
     * @return self
     */
    public function setConfig($config)
    {
        $this->container['config'] = $config;

        return $this;
    }

    /**
     * Gets last_result
     *
     * @return \OpenAPI\Client\Model\ImageBuildLastResult|null
     */
    public function getLastResult()
    {
        return $this->container['last_result'];
    }

    /**
     * Sets last_result
     *
     * @param \OpenAPI\Client\Model\ImageBuildLastResult|null $last_result last_result
     *
     * @return self
     */
    public function setLastResult($last_result)
    {
        $this->container['last_result'] = $last_result;

        return $this;
    }

    /**
     * Gets execution_count
     *
     * @return int|null
     */
    public function getExecutionCount()
    {
        return $this->container['execution_count'];
    }

    /**
     * Sets execution_count
     *
     * @param int|null $execution_count execution_count
     *
     * @return self
     */
    public function setExecutionCount($execution_count)
    {
        $this->container['execution_count'] = $execution_count;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


