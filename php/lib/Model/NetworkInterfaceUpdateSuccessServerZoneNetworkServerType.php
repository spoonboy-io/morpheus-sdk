<?php
/**
 * NetworkInterfaceUpdateSuccessServerZoneNetworkServerType
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * NetworkInterfaceUpdateSuccessServerZoneNetworkServerType Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class NetworkInterfaceUpdateSuccessServerZoneNetworkServerType implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'networkInterfaceUpdateSuccess_server_zone_networkServer_type';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'name' => 'string',
        'code' => 'string',
        'description' => 'string',
        'creatable' => 'bool',
        'user_visible' => 'bool',
        'has_scopes' => 'bool',
        'title_scopes' => 'string',
        'has_networks' => 'bool',
        'title_networks' => 'string',
        'has_switches' => 'bool',
        'title_switches' => 'string',
        'has_gateways' => 'bool',
        'title_gateways' => 'string',
        'has_routers' => 'bool',
        'title_routers' => 'string',
        'has_security_groups' => 'bool',
        'title_security_groups' => 'string',
        'has_load_balancers' => 'bool',
        'title_load_balancers' => 'string',
        'has_route_tables' => 'bool',
        'title_route_tables' => 'string',
        'has_firewall' => 'bool',
        'title_firewall' => 'string',
        'has_firewall_groups' => 'bool',
        'title_firewall_groups' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int64',
        'name' => null,
        'code' => null,
        'description' => null,
        'creatable' => null,
        'user_visible' => null,
        'has_scopes' => null,
        'title_scopes' => null,
        'has_networks' => null,
        'title_networks' => null,
        'has_switches' => null,
        'title_switches' => null,
        'has_gateways' => null,
        'title_gateways' => null,
        'has_routers' => null,
        'title_routers' => null,
        'has_security_groups' => null,
        'title_security_groups' => null,
        'has_load_balancers' => null,
        'title_load_balancers' => null,
        'has_route_tables' => null,
        'title_route_tables' => null,
        'has_firewall' => null,
        'title_firewall' => null,
        'has_firewall_groups' => null,
        'title_firewall_groups' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'name' => 'name',
        'code' => 'code',
        'description' => 'description',
        'creatable' => 'creatable',
        'user_visible' => 'userVisible',
        'has_scopes' => 'hasScopes',
        'title_scopes' => 'titleScopes',
        'has_networks' => 'hasNetworks',
        'title_networks' => 'titleNetworks',
        'has_switches' => 'hasSwitches',
        'title_switches' => 'titleSwitches',
        'has_gateways' => 'hasGateways',
        'title_gateways' => 'titleGateways',
        'has_routers' => 'hasRouters',
        'title_routers' => 'titleRouters',
        'has_security_groups' => 'hasSecurityGroups',
        'title_security_groups' => 'titleSecurityGroups',
        'has_load_balancers' => 'hasLoadBalancers',
        'title_load_balancers' => 'titleLoadBalancers',
        'has_route_tables' => 'hasRouteTables',
        'title_route_tables' => 'titleRouteTables',
        'has_firewall' => 'hasFirewall',
        'title_firewall' => 'titleFirewall',
        'has_firewall_groups' => 'hasFirewallGroups',
        'title_firewall_groups' => 'titleFirewallGroups'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'name' => 'setName',
        'code' => 'setCode',
        'description' => 'setDescription',
        'creatable' => 'setCreatable',
        'user_visible' => 'setUserVisible',
        'has_scopes' => 'setHasScopes',
        'title_scopes' => 'setTitleScopes',
        'has_networks' => 'setHasNetworks',
        'title_networks' => 'setTitleNetworks',
        'has_switches' => 'setHasSwitches',
        'title_switches' => 'setTitleSwitches',
        'has_gateways' => 'setHasGateways',
        'title_gateways' => 'setTitleGateways',
        'has_routers' => 'setHasRouters',
        'title_routers' => 'setTitleRouters',
        'has_security_groups' => 'setHasSecurityGroups',
        'title_security_groups' => 'setTitleSecurityGroups',
        'has_load_balancers' => 'setHasLoadBalancers',
        'title_load_balancers' => 'setTitleLoadBalancers',
        'has_route_tables' => 'setHasRouteTables',
        'title_route_tables' => 'setTitleRouteTables',
        'has_firewall' => 'setHasFirewall',
        'title_firewall' => 'setTitleFirewall',
        'has_firewall_groups' => 'setHasFirewallGroups',
        'title_firewall_groups' => 'setTitleFirewallGroups'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'name' => 'getName',
        'code' => 'getCode',
        'description' => 'getDescription',
        'creatable' => 'getCreatable',
        'user_visible' => 'getUserVisible',
        'has_scopes' => 'getHasScopes',
        'title_scopes' => 'getTitleScopes',
        'has_networks' => 'getHasNetworks',
        'title_networks' => 'getTitleNetworks',
        'has_switches' => 'getHasSwitches',
        'title_switches' => 'getTitleSwitches',
        'has_gateways' => 'getHasGateways',
        'title_gateways' => 'getTitleGateways',
        'has_routers' => 'getHasRouters',
        'title_routers' => 'getTitleRouters',
        'has_security_groups' => 'getHasSecurityGroups',
        'title_security_groups' => 'getTitleSecurityGroups',
        'has_load_balancers' => 'getHasLoadBalancers',
        'title_load_balancers' => 'getTitleLoadBalancers',
        'has_route_tables' => 'getHasRouteTables',
        'title_route_tables' => 'getTitleRouteTables',
        'has_firewall' => 'getHasFirewall',
        'title_firewall' => 'getTitleFirewall',
        'has_firewall_groups' => 'getHasFirewallGroups',
        'title_firewall_groups' => 'getTitleFirewallGroups'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['code'] = $data['code'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
        $this->container['creatable'] = $data['creatable'] ?? null;
        $this->container['user_visible'] = $data['user_visible'] ?? null;
        $this->container['has_scopes'] = $data['has_scopes'] ?? null;
        $this->container['title_scopes'] = $data['title_scopes'] ?? null;
        $this->container['has_networks'] = $data['has_networks'] ?? null;
        $this->container['title_networks'] = $data['title_networks'] ?? null;
        $this->container['has_switches'] = $data['has_switches'] ?? null;
        $this->container['title_switches'] = $data['title_switches'] ?? null;
        $this->container['has_gateways'] = $data['has_gateways'] ?? null;
        $this->container['title_gateways'] = $data['title_gateways'] ?? null;
        $this->container['has_routers'] = $data['has_routers'] ?? null;
        $this->container['title_routers'] = $data['title_routers'] ?? null;
        $this->container['has_security_groups'] = $data['has_security_groups'] ?? null;
        $this->container['title_security_groups'] = $data['title_security_groups'] ?? null;
        $this->container['has_load_balancers'] = $data['has_load_balancers'] ?? null;
        $this->container['title_load_balancers'] = $data['title_load_balancers'] ?? null;
        $this->container['has_route_tables'] = $data['has_route_tables'] ?? null;
        $this->container['title_route_tables'] = $data['title_route_tables'] ?? null;
        $this->container['has_firewall'] = $data['has_firewall'] ?? null;
        $this->container['title_firewall'] = $data['title_firewall'] ?? null;
        $this->container['has_firewall_groups'] = $data['has_firewall_groups'] ?? null;
        $this->container['title_firewall_groups'] = $data['title_firewall_groups'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets code
     *
     * @return string|null
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string|null $code code
     *
     * @return self
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description description
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets creatable
     *
     * @return bool|null
     */
    public function getCreatable()
    {
        return $this->container['creatable'];
    }

    /**
     * Sets creatable
     *
     * @param bool|null $creatable creatable
     *
     * @return self
     */
    public function setCreatable($creatable)
    {
        $this->container['creatable'] = $creatable;

        return $this;
    }

    /**
     * Gets user_visible
     *
     * @return bool|null
     */
    public function getUserVisible()
    {
        return $this->container['user_visible'];
    }

    /**
     * Sets user_visible
     *
     * @param bool|null $user_visible user_visible
     *
     * @return self
     */
    public function setUserVisible($user_visible)
    {
        $this->container['user_visible'] = $user_visible;

        return $this;
    }

    /**
     * Gets has_scopes
     *
     * @return bool|null
     */
    public function getHasScopes()
    {
        return $this->container['has_scopes'];
    }

    /**
     * Sets has_scopes
     *
     * @param bool|null $has_scopes has_scopes
     *
     * @return self
     */
    public function setHasScopes($has_scopes)
    {
        $this->container['has_scopes'] = $has_scopes;

        return $this;
    }

    /**
     * Gets title_scopes
     *
     * @return string|null
     */
    public function getTitleScopes()
    {
        return $this->container['title_scopes'];
    }

    /**
     * Sets title_scopes
     *
     * @param string|null $title_scopes title_scopes
     *
     * @return self
     */
    public function setTitleScopes($title_scopes)
    {
        $this->container['title_scopes'] = $title_scopes;

        return $this;
    }

    /**
     * Gets has_networks
     *
     * @return bool|null
     */
    public function getHasNetworks()
    {
        return $this->container['has_networks'];
    }

    /**
     * Sets has_networks
     *
     * @param bool|null $has_networks has_networks
     *
     * @return self
     */
    public function setHasNetworks($has_networks)
    {
        $this->container['has_networks'] = $has_networks;

        return $this;
    }

    /**
     * Gets title_networks
     *
     * @return string|null
     */
    public function getTitleNetworks()
    {
        return $this->container['title_networks'];
    }

    /**
     * Sets title_networks
     *
     * @param string|null $title_networks title_networks
     *
     * @return self
     */
    public function setTitleNetworks($title_networks)
    {
        $this->container['title_networks'] = $title_networks;

        return $this;
    }

    /**
     * Gets has_switches
     *
     * @return bool|null
     */
    public function getHasSwitches()
    {
        return $this->container['has_switches'];
    }

    /**
     * Sets has_switches
     *
     * @param bool|null $has_switches has_switches
     *
     * @return self
     */
    public function setHasSwitches($has_switches)
    {
        $this->container['has_switches'] = $has_switches;

        return $this;
    }

    /**
     * Gets title_switches
     *
     * @return string|null
     */
    public function getTitleSwitches()
    {
        return $this->container['title_switches'];
    }

    /**
     * Sets title_switches
     *
     * @param string|null $title_switches title_switches
     *
     * @return self
     */
    public function setTitleSwitches($title_switches)
    {
        $this->container['title_switches'] = $title_switches;

        return $this;
    }

    /**
     * Gets has_gateways
     *
     * @return bool|null
     */
    public function getHasGateways()
    {
        return $this->container['has_gateways'];
    }

    /**
     * Sets has_gateways
     *
     * @param bool|null $has_gateways has_gateways
     *
     * @return self
     */
    public function setHasGateways($has_gateways)
    {
        $this->container['has_gateways'] = $has_gateways;

        return $this;
    }

    /**
     * Gets title_gateways
     *
     * @return string|null
     */
    public function getTitleGateways()
    {
        return $this->container['title_gateways'];
    }

    /**
     * Sets title_gateways
     *
     * @param string|null $title_gateways title_gateways
     *
     * @return self
     */
    public function setTitleGateways($title_gateways)
    {
        $this->container['title_gateways'] = $title_gateways;

        return $this;
    }

    /**
     * Gets has_routers
     *
     * @return bool|null
     */
    public function getHasRouters()
    {
        return $this->container['has_routers'];
    }

    /**
     * Sets has_routers
     *
     * @param bool|null $has_routers has_routers
     *
     * @return self
     */
    public function setHasRouters($has_routers)
    {
        $this->container['has_routers'] = $has_routers;

        return $this;
    }

    /**
     * Gets title_routers
     *
     * @return string|null
     */
    public function getTitleRouters()
    {
        return $this->container['title_routers'];
    }

    /**
     * Sets title_routers
     *
     * @param string|null $title_routers title_routers
     *
     * @return self
     */
    public function setTitleRouters($title_routers)
    {
        $this->container['title_routers'] = $title_routers;

        return $this;
    }

    /**
     * Gets has_security_groups
     *
     * @return bool|null
     */
    public function getHasSecurityGroups()
    {
        return $this->container['has_security_groups'];
    }

    /**
     * Sets has_security_groups
     *
     * @param bool|null $has_security_groups has_security_groups
     *
     * @return self
     */
    public function setHasSecurityGroups($has_security_groups)
    {
        $this->container['has_security_groups'] = $has_security_groups;

        return $this;
    }

    /**
     * Gets title_security_groups
     *
     * @return string|null
     */
    public function getTitleSecurityGroups()
    {
        return $this->container['title_security_groups'];
    }

    /**
     * Sets title_security_groups
     *
     * @param string|null $title_security_groups title_security_groups
     *
     * @return self
     */
    public function setTitleSecurityGroups($title_security_groups)
    {
        $this->container['title_security_groups'] = $title_security_groups;

        return $this;
    }

    /**
     * Gets has_load_balancers
     *
     * @return bool|null
     */
    public function getHasLoadBalancers()
    {
        return $this->container['has_load_balancers'];
    }

    /**
     * Sets has_load_balancers
     *
     * @param bool|null $has_load_balancers has_load_balancers
     *
     * @return self
     */
    public function setHasLoadBalancers($has_load_balancers)
    {
        $this->container['has_load_balancers'] = $has_load_balancers;

        return $this;
    }

    /**
     * Gets title_load_balancers
     *
     * @return string|null
     */
    public function getTitleLoadBalancers()
    {
        return $this->container['title_load_balancers'];
    }

    /**
     * Sets title_load_balancers
     *
     * @param string|null $title_load_balancers title_load_balancers
     *
     * @return self
     */
    public function setTitleLoadBalancers($title_load_balancers)
    {
        $this->container['title_load_balancers'] = $title_load_balancers;

        return $this;
    }

    /**
     * Gets has_route_tables
     *
     * @return bool|null
     */
    public function getHasRouteTables()
    {
        return $this->container['has_route_tables'];
    }

    /**
     * Sets has_route_tables
     *
     * @param bool|null $has_route_tables has_route_tables
     *
     * @return self
     */
    public function setHasRouteTables($has_route_tables)
    {
        $this->container['has_route_tables'] = $has_route_tables;

        return $this;
    }

    /**
     * Gets title_route_tables
     *
     * @return string|null
     */
    public function getTitleRouteTables()
    {
        return $this->container['title_route_tables'];
    }

    /**
     * Sets title_route_tables
     *
     * @param string|null $title_route_tables title_route_tables
     *
     * @return self
     */
    public function setTitleRouteTables($title_route_tables)
    {
        $this->container['title_route_tables'] = $title_route_tables;

        return $this;
    }

    /**
     * Gets has_firewall
     *
     * @return bool|null
     */
    public function getHasFirewall()
    {
        return $this->container['has_firewall'];
    }

    /**
     * Sets has_firewall
     *
     * @param bool|null $has_firewall has_firewall
     *
     * @return self
     */
    public function setHasFirewall($has_firewall)
    {
        $this->container['has_firewall'] = $has_firewall;

        return $this;
    }

    /**
     * Gets title_firewall
     *
     * @return string|null
     */
    public function getTitleFirewall()
    {
        return $this->container['title_firewall'];
    }

    /**
     * Sets title_firewall
     *
     * @param string|null $title_firewall title_firewall
     *
     * @return self
     */
    public function setTitleFirewall($title_firewall)
    {
        $this->container['title_firewall'] = $title_firewall;

        return $this;
    }

    /**
     * Gets has_firewall_groups
     *
     * @return bool|null
     */
    public function getHasFirewallGroups()
    {
        return $this->container['has_firewall_groups'];
    }

    /**
     * Sets has_firewall_groups
     *
     * @param bool|null $has_firewall_groups has_firewall_groups
     *
     * @return self
     */
    public function setHasFirewallGroups($has_firewall_groups)
    {
        $this->container['has_firewall_groups'] = $has_firewall_groups;

        return $this;
    }

    /**
     * Gets title_firewall_groups
     *
     * @return string|null
     */
    public function getTitleFirewallGroups()
    {
        return $this->container['title_firewall_groups'];
    }

    /**
     * Sets title_firewall_groups
     *
     * @param string|null $title_firewall_groups title_firewall_groups
     *
     * @return self
     */
    public function setTitleFirewallGroups($title_firewall_groups)
    {
        $this->container['title_firewall_groups'] = $title_firewall_groups;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


