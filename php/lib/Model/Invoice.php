<?php
/**
 * Invoice
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * Invoice Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class Invoice implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'invoice';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'owner_id' => 'int',
        'account' => '\OpenAPI\Client\Model\InlineResponse20040AppDeployInstance',
        'group' => 'object',
        'cloud' => '\OpenAPI\Client\Model\InvoiceCloud',
        'instance' => 'object',
        'server' => 'string',
        'cluster' => 'string',
        'user' => 'object',
        'plan' => 'object',
        'tags' => 'object[]',
        'project' => 'string',
        'ref_type' => 'string',
        'ref_id' => 'int',
        'ref_uuid' => 'string',
        'ref_name' => 'string',
        'ref_category' => 'string',
        'resource_id' => 'string',
        'resource_uuid' => 'string',
        'resource_type' => 'string',
        'resource_name' => 'string',
        'resource_external_id' => 'string',
        'resource_internal_id' => 'string',
        'interval' => 'string',
        'period' => 'string',
        'estimate' => 'bool',
        'summary_invoice' => 'bool',
        'active' => 'bool',
        'start_date' => '\DateTime',
        'end_date' => '\DateTime',
        'ref_start' => '\DateTime',
        'ref_end' => '\DateTime',
        'estimated_compute_price' => 'float',
        'estimated_compute_cost' => 'float',
        'estimated_memory_price' => 'float',
        'estimated_memory_cost' => 'float',
        'estimated_storage_price' => 'float',
        'estimated_storage_cost' => 'float',
        'estimated_network_price' => 'float',
        'estimated_network_cost' => 'float',
        'estimated_license_price' => 'float',
        'estimated_license_cost' => 'float',
        'estimated_extra_price' => 'float',
        'estimated_extra_cost' => 'float',
        'estimated_total_price' => 'float',
        'estimated_total_cost' => 'float',
        'estimated_running_price' => 'float',
        'estimated_running_cost' => 'float',
        'estimated_currency' => 'string',
        'estimated_conversion_rate' => 'float',
        'actual_compute_price' => 'float',
        'actual_compute_cost' => 'float',
        'actual_memory_price' => 'float',
        'actual_memory_cost' => 'float',
        'actual_storage_price' => 'float',
        'actual_storage_cost' => 'float',
        'actual_network_price' => 'float',
        'actual_network_cost' => 'float',
        'actual_license_price' => 'float',
        'actual_license_cost' => 'float',
        'actual_extra_price' => 'float',
        'actual_extra_cost' => 'float',
        'actual_total_price' => 'float',
        'actual_total_cost' => 'float',
        'actual_running_price' => 'float',
        'actual_running_cost' => 'float',
        'actual_currency' => 'string',
        'actual_conversion_rate' => 'float',
        'compute_price' => 'float',
        'compute_cost' => 'float',
        'memory_price' => 'float',
        'memory_cost' => 'float',
        'storage_price' => 'float',
        'storage_cost' => 'float',
        'network_price' => 'float',
        'network_cost' => 'float',
        'license_price' => 'float',
        'license_cost' => 'float',
        'extra_price' => 'float',
        'extra_cost' => 'float',
        'total_price' => 'float',
        'total_cost' => 'float',
        'running_price' => 'float',
        'running_cost' => 'float',
        'currency' => 'string',
        'conversion_rate' => 'float',
        'cost_type' => 'string',
        'off_time' => 'int',
        'power_state' => 'string',
        'power_date' => '\DateTime',
        'running_multiplier' => 'float',
        'usage_type' => 'string',
        'usage_category' => 'string',
        'last_cost_date' => '\DateTime',
        'last_actual_date' => '\DateTime',
        'date_created' => '\DateTime',
        'last_updated' => '\DateTime',
        'line_item_count' => 'int',
        'line_items' => '\OpenAPI\Client\Model\InvoiceLineItems[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int64',
        'owner_id' => 'int64',
        'account' => null,
        'group' => null,
        'cloud' => null,
        'instance' => null,
        'server' => null,
        'cluster' => null,
        'user' => null,
        'plan' => null,
        'tags' => null,
        'project' => null,
        'ref_type' => null,
        'ref_id' => 'int64',
        'ref_uuid' => null,
        'ref_name' => null,
        'ref_category' => null,
        'resource_id' => null,
        'resource_uuid' => null,
        'resource_type' => null,
        'resource_name' => null,
        'resource_external_id' => null,
        'resource_internal_id' => null,
        'interval' => null,
        'period' => null,
        'estimate' => null,
        'summary_invoice' => null,
        'active' => null,
        'start_date' => 'date-time',
        'end_date' => 'date-time',
        'ref_start' => 'date-time',
        'ref_end' => 'date-time',
        'estimated_compute_price' => null,
        'estimated_compute_cost' => null,
        'estimated_memory_price' => null,
        'estimated_memory_cost' => null,
        'estimated_storage_price' => null,
        'estimated_storage_cost' => null,
        'estimated_network_price' => null,
        'estimated_network_cost' => null,
        'estimated_license_price' => null,
        'estimated_license_cost' => null,
        'estimated_extra_price' => null,
        'estimated_extra_cost' => null,
        'estimated_total_price' => null,
        'estimated_total_cost' => null,
        'estimated_running_price' => null,
        'estimated_running_cost' => null,
        'estimated_currency' => null,
        'estimated_conversion_rate' => null,
        'actual_compute_price' => null,
        'actual_compute_cost' => null,
        'actual_memory_price' => null,
        'actual_memory_cost' => null,
        'actual_storage_price' => null,
        'actual_storage_cost' => null,
        'actual_network_price' => null,
        'actual_network_cost' => null,
        'actual_license_price' => null,
        'actual_license_cost' => null,
        'actual_extra_price' => null,
        'actual_extra_cost' => null,
        'actual_total_price' => null,
        'actual_total_cost' => null,
        'actual_running_price' => null,
        'actual_running_cost' => null,
        'actual_currency' => null,
        'actual_conversion_rate' => null,
        'compute_price' => null,
        'compute_cost' => null,
        'memory_price' => null,
        'memory_cost' => null,
        'storage_price' => null,
        'storage_cost' => null,
        'network_price' => null,
        'network_cost' => null,
        'license_price' => null,
        'license_cost' => null,
        'extra_price' => null,
        'extra_cost' => null,
        'total_price' => null,
        'total_cost' => null,
        'running_price' => null,
        'running_cost' => null,
        'currency' => null,
        'conversion_rate' => null,
        'cost_type' => null,
        'off_time' => 'int64',
        'power_state' => null,
        'power_date' => 'date-time',
        'running_multiplier' => null,
        'usage_type' => null,
        'usage_category' => null,
        'last_cost_date' => 'date-time',
        'last_actual_date' => 'date-time',
        'date_created' => 'date-time',
        'last_updated' => 'date-time',
        'line_item_count' => 'int64',
        'line_items' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'owner_id' => 'ownerId',
        'account' => 'account',
        'group' => 'group',
        'cloud' => 'cloud',
        'instance' => 'instance',
        'server' => 'server',
        'cluster' => 'cluster',
        'user' => 'user',
        'plan' => 'plan',
        'tags' => 'tags',
        'project' => 'project',
        'ref_type' => 'refType',
        'ref_id' => 'refId',
        'ref_uuid' => 'refUuid',
        'ref_name' => 'refName',
        'ref_category' => 'refCategory',
        'resource_id' => 'resourceId',
        'resource_uuid' => 'resourceUuid',
        'resource_type' => 'resourceType',
        'resource_name' => 'resourceName',
        'resource_external_id' => 'resourceExternalId',
        'resource_internal_id' => 'resourceInternalId',
        'interval' => 'interval',
        'period' => 'period',
        'estimate' => 'estimate',
        'summary_invoice' => 'summaryInvoice',
        'active' => 'active',
        'start_date' => 'startDate',
        'end_date' => 'endDate',
        'ref_start' => 'refStart',
        'ref_end' => 'refEnd',
        'estimated_compute_price' => 'estimatedComputePrice',
        'estimated_compute_cost' => 'estimatedComputeCost',
        'estimated_memory_price' => 'estimatedMemoryPrice',
        'estimated_memory_cost' => 'estimatedMemoryCost',
        'estimated_storage_price' => 'estimatedStoragePrice',
        'estimated_storage_cost' => 'estimatedStorageCost',
        'estimated_network_price' => 'estimatedNetworkPrice',
        'estimated_network_cost' => 'estimatedNetworkCost',
        'estimated_license_price' => 'estimatedLicensePrice',
        'estimated_license_cost' => 'estimatedLicenseCost',
        'estimated_extra_price' => 'estimatedExtraPrice',
        'estimated_extra_cost' => 'estimatedExtraCost',
        'estimated_total_price' => 'estimatedTotalPrice',
        'estimated_total_cost' => 'estimatedTotalCost',
        'estimated_running_price' => 'estimatedRunningPrice',
        'estimated_running_cost' => 'estimatedRunningCost',
        'estimated_currency' => 'estimatedCurrency',
        'estimated_conversion_rate' => 'estimatedConversionRate',
        'actual_compute_price' => 'actualComputePrice',
        'actual_compute_cost' => 'actualComputeCost',
        'actual_memory_price' => 'actualMemoryPrice',
        'actual_memory_cost' => 'actualMemoryCost',
        'actual_storage_price' => 'actualStoragePrice',
        'actual_storage_cost' => 'actualStorageCost',
        'actual_network_price' => 'actualNetworkPrice',
        'actual_network_cost' => 'actualNetworkCost',
        'actual_license_price' => 'actualLicensePrice',
        'actual_license_cost' => 'actualLicenseCost',
        'actual_extra_price' => 'actualExtraPrice',
        'actual_extra_cost' => 'actualExtraCost',
        'actual_total_price' => 'actualTotalPrice',
        'actual_total_cost' => 'actualTotalCost',
        'actual_running_price' => 'actualRunningPrice',
        'actual_running_cost' => 'actualRunningCost',
        'actual_currency' => 'actualCurrency',
        'actual_conversion_rate' => 'actualConversionRate',
        'compute_price' => 'computePrice',
        'compute_cost' => 'computeCost',
        'memory_price' => 'memoryPrice',
        'memory_cost' => 'memoryCost',
        'storage_price' => 'storagePrice',
        'storage_cost' => 'storageCost',
        'network_price' => 'networkPrice',
        'network_cost' => 'networkCost',
        'license_price' => 'licensePrice',
        'license_cost' => 'licenseCost',
        'extra_price' => 'extraPrice',
        'extra_cost' => 'extraCost',
        'total_price' => 'totalPrice',
        'total_cost' => 'totalCost',
        'running_price' => 'runningPrice',
        'running_cost' => 'runningCost',
        'currency' => 'currency',
        'conversion_rate' => 'conversionRate',
        'cost_type' => 'costType',
        'off_time' => 'offTime',
        'power_state' => 'powerState',
        'power_date' => 'powerDate',
        'running_multiplier' => 'runningMultiplier',
        'usage_type' => 'usageType',
        'usage_category' => 'usageCategory',
        'last_cost_date' => 'lastCostDate',
        'last_actual_date' => 'lastActualDate',
        'date_created' => 'dateCreated',
        'last_updated' => 'lastUpdated',
        'line_item_count' => 'lineItemCount',
        'line_items' => 'lineItems'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'owner_id' => 'setOwnerId',
        'account' => 'setAccount',
        'group' => 'setGroup',
        'cloud' => 'setCloud',
        'instance' => 'setInstance',
        'server' => 'setServer',
        'cluster' => 'setCluster',
        'user' => 'setUser',
        'plan' => 'setPlan',
        'tags' => 'setTags',
        'project' => 'setProject',
        'ref_type' => 'setRefType',
        'ref_id' => 'setRefId',
        'ref_uuid' => 'setRefUuid',
        'ref_name' => 'setRefName',
        'ref_category' => 'setRefCategory',
        'resource_id' => 'setResourceId',
        'resource_uuid' => 'setResourceUuid',
        'resource_type' => 'setResourceType',
        'resource_name' => 'setResourceName',
        'resource_external_id' => 'setResourceExternalId',
        'resource_internal_id' => 'setResourceInternalId',
        'interval' => 'setInterval',
        'period' => 'setPeriod',
        'estimate' => 'setEstimate',
        'summary_invoice' => 'setSummaryInvoice',
        'active' => 'setActive',
        'start_date' => 'setStartDate',
        'end_date' => 'setEndDate',
        'ref_start' => 'setRefStart',
        'ref_end' => 'setRefEnd',
        'estimated_compute_price' => 'setEstimatedComputePrice',
        'estimated_compute_cost' => 'setEstimatedComputeCost',
        'estimated_memory_price' => 'setEstimatedMemoryPrice',
        'estimated_memory_cost' => 'setEstimatedMemoryCost',
        'estimated_storage_price' => 'setEstimatedStoragePrice',
        'estimated_storage_cost' => 'setEstimatedStorageCost',
        'estimated_network_price' => 'setEstimatedNetworkPrice',
        'estimated_network_cost' => 'setEstimatedNetworkCost',
        'estimated_license_price' => 'setEstimatedLicensePrice',
        'estimated_license_cost' => 'setEstimatedLicenseCost',
        'estimated_extra_price' => 'setEstimatedExtraPrice',
        'estimated_extra_cost' => 'setEstimatedExtraCost',
        'estimated_total_price' => 'setEstimatedTotalPrice',
        'estimated_total_cost' => 'setEstimatedTotalCost',
        'estimated_running_price' => 'setEstimatedRunningPrice',
        'estimated_running_cost' => 'setEstimatedRunningCost',
        'estimated_currency' => 'setEstimatedCurrency',
        'estimated_conversion_rate' => 'setEstimatedConversionRate',
        'actual_compute_price' => 'setActualComputePrice',
        'actual_compute_cost' => 'setActualComputeCost',
        'actual_memory_price' => 'setActualMemoryPrice',
        'actual_memory_cost' => 'setActualMemoryCost',
        'actual_storage_price' => 'setActualStoragePrice',
        'actual_storage_cost' => 'setActualStorageCost',
        'actual_network_price' => 'setActualNetworkPrice',
        'actual_network_cost' => 'setActualNetworkCost',
        'actual_license_price' => 'setActualLicensePrice',
        'actual_license_cost' => 'setActualLicenseCost',
        'actual_extra_price' => 'setActualExtraPrice',
        'actual_extra_cost' => 'setActualExtraCost',
        'actual_total_price' => 'setActualTotalPrice',
        'actual_total_cost' => 'setActualTotalCost',
        'actual_running_price' => 'setActualRunningPrice',
        'actual_running_cost' => 'setActualRunningCost',
        'actual_currency' => 'setActualCurrency',
        'actual_conversion_rate' => 'setActualConversionRate',
        'compute_price' => 'setComputePrice',
        'compute_cost' => 'setComputeCost',
        'memory_price' => 'setMemoryPrice',
        'memory_cost' => 'setMemoryCost',
        'storage_price' => 'setStoragePrice',
        'storage_cost' => 'setStorageCost',
        'network_price' => 'setNetworkPrice',
        'network_cost' => 'setNetworkCost',
        'license_price' => 'setLicensePrice',
        'license_cost' => 'setLicenseCost',
        'extra_price' => 'setExtraPrice',
        'extra_cost' => 'setExtraCost',
        'total_price' => 'setTotalPrice',
        'total_cost' => 'setTotalCost',
        'running_price' => 'setRunningPrice',
        'running_cost' => 'setRunningCost',
        'currency' => 'setCurrency',
        'conversion_rate' => 'setConversionRate',
        'cost_type' => 'setCostType',
        'off_time' => 'setOffTime',
        'power_state' => 'setPowerState',
        'power_date' => 'setPowerDate',
        'running_multiplier' => 'setRunningMultiplier',
        'usage_type' => 'setUsageType',
        'usage_category' => 'setUsageCategory',
        'last_cost_date' => 'setLastCostDate',
        'last_actual_date' => 'setLastActualDate',
        'date_created' => 'setDateCreated',
        'last_updated' => 'setLastUpdated',
        'line_item_count' => 'setLineItemCount',
        'line_items' => 'setLineItems'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'owner_id' => 'getOwnerId',
        'account' => 'getAccount',
        'group' => 'getGroup',
        'cloud' => 'getCloud',
        'instance' => 'getInstance',
        'server' => 'getServer',
        'cluster' => 'getCluster',
        'user' => 'getUser',
        'plan' => 'getPlan',
        'tags' => 'getTags',
        'project' => 'getProject',
        'ref_type' => 'getRefType',
        'ref_id' => 'getRefId',
        'ref_uuid' => 'getRefUuid',
        'ref_name' => 'getRefName',
        'ref_category' => 'getRefCategory',
        'resource_id' => 'getResourceId',
        'resource_uuid' => 'getResourceUuid',
        'resource_type' => 'getResourceType',
        'resource_name' => 'getResourceName',
        'resource_external_id' => 'getResourceExternalId',
        'resource_internal_id' => 'getResourceInternalId',
        'interval' => 'getInterval',
        'period' => 'getPeriod',
        'estimate' => 'getEstimate',
        'summary_invoice' => 'getSummaryInvoice',
        'active' => 'getActive',
        'start_date' => 'getStartDate',
        'end_date' => 'getEndDate',
        'ref_start' => 'getRefStart',
        'ref_end' => 'getRefEnd',
        'estimated_compute_price' => 'getEstimatedComputePrice',
        'estimated_compute_cost' => 'getEstimatedComputeCost',
        'estimated_memory_price' => 'getEstimatedMemoryPrice',
        'estimated_memory_cost' => 'getEstimatedMemoryCost',
        'estimated_storage_price' => 'getEstimatedStoragePrice',
        'estimated_storage_cost' => 'getEstimatedStorageCost',
        'estimated_network_price' => 'getEstimatedNetworkPrice',
        'estimated_network_cost' => 'getEstimatedNetworkCost',
        'estimated_license_price' => 'getEstimatedLicensePrice',
        'estimated_license_cost' => 'getEstimatedLicenseCost',
        'estimated_extra_price' => 'getEstimatedExtraPrice',
        'estimated_extra_cost' => 'getEstimatedExtraCost',
        'estimated_total_price' => 'getEstimatedTotalPrice',
        'estimated_total_cost' => 'getEstimatedTotalCost',
        'estimated_running_price' => 'getEstimatedRunningPrice',
        'estimated_running_cost' => 'getEstimatedRunningCost',
        'estimated_currency' => 'getEstimatedCurrency',
        'estimated_conversion_rate' => 'getEstimatedConversionRate',
        'actual_compute_price' => 'getActualComputePrice',
        'actual_compute_cost' => 'getActualComputeCost',
        'actual_memory_price' => 'getActualMemoryPrice',
        'actual_memory_cost' => 'getActualMemoryCost',
        'actual_storage_price' => 'getActualStoragePrice',
        'actual_storage_cost' => 'getActualStorageCost',
        'actual_network_price' => 'getActualNetworkPrice',
        'actual_network_cost' => 'getActualNetworkCost',
        'actual_license_price' => 'getActualLicensePrice',
        'actual_license_cost' => 'getActualLicenseCost',
        'actual_extra_price' => 'getActualExtraPrice',
        'actual_extra_cost' => 'getActualExtraCost',
        'actual_total_price' => 'getActualTotalPrice',
        'actual_total_cost' => 'getActualTotalCost',
        'actual_running_price' => 'getActualRunningPrice',
        'actual_running_cost' => 'getActualRunningCost',
        'actual_currency' => 'getActualCurrency',
        'actual_conversion_rate' => 'getActualConversionRate',
        'compute_price' => 'getComputePrice',
        'compute_cost' => 'getComputeCost',
        'memory_price' => 'getMemoryPrice',
        'memory_cost' => 'getMemoryCost',
        'storage_price' => 'getStoragePrice',
        'storage_cost' => 'getStorageCost',
        'network_price' => 'getNetworkPrice',
        'network_cost' => 'getNetworkCost',
        'license_price' => 'getLicensePrice',
        'license_cost' => 'getLicenseCost',
        'extra_price' => 'getExtraPrice',
        'extra_cost' => 'getExtraCost',
        'total_price' => 'getTotalPrice',
        'total_cost' => 'getTotalCost',
        'running_price' => 'getRunningPrice',
        'running_cost' => 'getRunningCost',
        'currency' => 'getCurrency',
        'conversion_rate' => 'getConversionRate',
        'cost_type' => 'getCostType',
        'off_time' => 'getOffTime',
        'power_state' => 'getPowerState',
        'power_date' => 'getPowerDate',
        'running_multiplier' => 'getRunningMultiplier',
        'usage_type' => 'getUsageType',
        'usage_category' => 'getUsageCategory',
        'last_cost_date' => 'getLastCostDate',
        'last_actual_date' => 'getLastActualDate',
        'date_created' => 'getDateCreated',
        'last_updated' => 'getLastUpdated',
        'line_item_count' => 'getLineItemCount',
        'line_items' => 'getLineItems'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['owner_id'] = $data['owner_id'] ?? null;
        $this->container['account'] = $data['account'] ?? null;
        $this->container['group'] = $data['group'] ?? null;
        $this->container['cloud'] = $data['cloud'] ?? null;
        $this->container['instance'] = $data['instance'] ?? null;
        $this->container['server'] = $data['server'] ?? null;
        $this->container['cluster'] = $data['cluster'] ?? null;
        $this->container['user'] = $data['user'] ?? null;
        $this->container['plan'] = $data['plan'] ?? null;
        $this->container['tags'] = $data['tags'] ?? null;
        $this->container['project'] = $data['project'] ?? null;
        $this->container['ref_type'] = $data['ref_type'] ?? null;
        $this->container['ref_id'] = $data['ref_id'] ?? null;
        $this->container['ref_uuid'] = $data['ref_uuid'] ?? null;
        $this->container['ref_name'] = $data['ref_name'] ?? null;
        $this->container['ref_category'] = $data['ref_category'] ?? null;
        $this->container['resource_id'] = $data['resource_id'] ?? null;
        $this->container['resource_uuid'] = $data['resource_uuid'] ?? null;
        $this->container['resource_type'] = $data['resource_type'] ?? null;
        $this->container['resource_name'] = $data['resource_name'] ?? null;
        $this->container['resource_external_id'] = $data['resource_external_id'] ?? null;
        $this->container['resource_internal_id'] = $data['resource_internal_id'] ?? null;
        $this->container['interval'] = $data['interval'] ?? null;
        $this->container['period'] = $data['period'] ?? null;
        $this->container['estimate'] = $data['estimate'] ?? null;
        $this->container['summary_invoice'] = $data['summary_invoice'] ?? null;
        $this->container['active'] = $data['active'] ?? null;
        $this->container['start_date'] = $data['start_date'] ?? null;
        $this->container['end_date'] = $data['end_date'] ?? null;
        $this->container['ref_start'] = $data['ref_start'] ?? null;
        $this->container['ref_end'] = $data['ref_end'] ?? null;
        $this->container['estimated_compute_price'] = $data['estimated_compute_price'] ?? null;
        $this->container['estimated_compute_cost'] = $data['estimated_compute_cost'] ?? null;
        $this->container['estimated_memory_price'] = $data['estimated_memory_price'] ?? null;
        $this->container['estimated_memory_cost'] = $data['estimated_memory_cost'] ?? null;
        $this->container['estimated_storage_price'] = $data['estimated_storage_price'] ?? null;
        $this->container['estimated_storage_cost'] = $data['estimated_storage_cost'] ?? null;
        $this->container['estimated_network_price'] = $data['estimated_network_price'] ?? null;
        $this->container['estimated_network_cost'] = $data['estimated_network_cost'] ?? null;
        $this->container['estimated_license_price'] = $data['estimated_license_price'] ?? null;
        $this->container['estimated_license_cost'] = $data['estimated_license_cost'] ?? null;
        $this->container['estimated_extra_price'] = $data['estimated_extra_price'] ?? null;
        $this->container['estimated_extra_cost'] = $data['estimated_extra_cost'] ?? null;
        $this->container['estimated_total_price'] = $data['estimated_total_price'] ?? null;
        $this->container['estimated_total_cost'] = $data['estimated_total_cost'] ?? null;
        $this->container['estimated_running_price'] = $data['estimated_running_price'] ?? null;
        $this->container['estimated_running_cost'] = $data['estimated_running_cost'] ?? null;
        $this->container['estimated_currency'] = $data['estimated_currency'] ?? null;
        $this->container['estimated_conversion_rate'] = $data['estimated_conversion_rate'] ?? null;
        $this->container['actual_compute_price'] = $data['actual_compute_price'] ?? null;
        $this->container['actual_compute_cost'] = $data['actual_compute_cost'] ?? null;
        $this->container['actual_memory_price'] = $data['actual_memory_price'] ?? null;
        $this->container['actual_memory_cost'] = $data['actual_memory_cost'] ?? null;
        $this->container['actual_storage_price'] = $data['actual_storage_price'] ?? null;
        $this->container['actual_storage_cost'] = $data['actual_storage_cost'] ?? null;
        $this->container['actual_network_price'] = $data['actual_network_price'] ?? null;
        $this->container['actual_network_cost'] = $data['actual_network_cost'] ?? null;
        $this->container['actual_license_price'] = $data['actual_license_price'] ?? null;
        $this->container['actual_license_cost'] = $data['actual_license_cost'] ?? null;
        $this->container['actual_extra_price'] = $data['actual_extra_price'] ?? null;
        $this->container['actual_extra_cost'] = $data['actual_extra_cost'] ?? null;
        $this->container['actual_total_price'] = $data['actual_total_price'] ?? null;
        $this->container['actual_total_cost'] = $data['actual_total_cost'] ?? null;
        $this->container['actual_running_price'] = $data['actual_running_price'] ?? null;
        $this->container['actual_running_cost'] = $data['actual_running_cost'] ?? null;
        $this->container['actual_currency'] = $data['actual_currency'] ?? null;
        $this->container['actual_conversion_rate'] = $data['actual_conversion_rate'] ?? null;
        $this->container['compute_price'] = $data['compute_price'] ?? null;
        $this->container['compute_cost'] = $data['compute_cost'] ?? null;
        $this->container['memory_price'] = $data['memory_price'] ?? null;
        $this->container['memory_cost'] = $data['memory_cost'] ?? null;
        $this->container['storage_price'] = $data['storage_price'] ?? null;
        $this->container['storage_cost'] = $data['storage_cost'] ?? null;
        $this->container['network_price'] = $data['network_price'] ?? null;
        $this->container['network_cost'] = $data['network_cost'] ?? null;
        $this->container['license_price'] = $data['license_price'] ?? null;
        $this->container['license_cost'] = $data['license_cost'] ?? null;
        $this->container['extra_price'] = $data['extra_price'] ?? null;
        $this->container['extra_cost'] = $data['extra_cost'] ?? null;
        $this->container['total_price'] = $data['total_price'] ?? null;
        $this->container['total_cost'] = $data['total_cost'] ?? null;
        $this->container['running_price'] = $data['running_price'] ?? null;
        $this->container['running_cost'] = $data['running_cost'] ?? null;
        $this->container['currency'] = $data['currency'] ?? null;
        $this->container['conversion_rate'] = $data['conversion_rate'] ?? null;
        $this->container['cost_type'] = $data['cost_type'] ?? null;
        $this->container['off_time'] = $data['off_time'] ?? null;
        $this->container['power_state'] = $data['power_state'] ?? null;
        $this->container['power_date'] = $data['power_date'] ?? null;
        $this->container['running_multiplier'] = $data['running_multiplier'] ?? null;
        $this->container['usage_type'] = $data['usage_type'] ?? null;
        $this->container['usage_category'] = $data['usage_category'] ?? null;
        $this->container['last_cost_date'] = $data['last_cost_date'] ?? null;
        $this->container['last_actual_date'] = $data['last_actual_date'] ?? null;
        $this->container['date_created'] = $data['date_created'] ?? null;
        $this->container['last_updated'] = $data['last_updated'] ?? null;
        $this->container['line_item_count'] = $data['line_item_count'] ?? null;
        $this->container['line_items'] = $data['line_items'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets owner_id
     *
     * @return int|null
     */
    public function getOwnerId()
    {
        return $this->container['owner_id'];
    }

    /**
     * Sets owner_id
     *
     * @param int|null $owner_id owner_id
     *
     * @return self
     */
    public function setOwnerId($owner_id)
    {
        $this->container['owner_id'] = $owner_id;

        return $this;
    }

    /**
     * Gets account
     *
     * @return \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param \OpenAPI\Client\Model\InlineResponse20040AppDeployInstance|null $account account
     *
     * @return self
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets group
     *
     * @return object|null
     */
    public function getGroup()
    {
        return $this->container['group'];
    }

    /**
     * Sets group
     *
     * @param object|null $group group
     *
     * @return self
     */
    public function setGroup($group)
    {
        $this->container['group'] = $group;

        return $this;
    }

    /**
     * Gets cloud
     *
     * @return \OpenAPI\Client\Model\InvoiceCloud|null
     */
    public function getCloud()
    {
        return $this->container['cloud'];
    }

    /**
     * Sets cloud
     *
     * @param \OpenAPI\Client\Model\InvoiceCloud|null $cloud cloud
     *
     * @return self
     */
    public function setCloud($cloud)
    {
        $this->container['cloud'] = $cloud;

        return $this;
    }

    /**
     * Gets instance
     *
     * @return object|null
     */
    public function getInstance()
    {
        return $this->container['instance'];
    }

    /**
     * Sets instance
     *
     * @param object|null $instance instance
     *
     * @return self
     */
    public function setInstance($instance)
    {
        $this->container['instance'] = $instance;

        return $this;
    }

    /**
     * Gets server
     *
     * @return string|null
     */
    public function getServer()
    {
        return $this->container['server'];
    }

    /**
     * Sets server
     *
     * @param string|null $server server
     *
     * @return self
     */
    public function setServer($server)
    {
        $this->container['server'] = $server;

        return $this;
    }

    /**
     * Gets cluster
     *
     * @return string|null
     */
    public function getCluster()
    {
        return $this->container['cluster'];
    }

    /**
     * Sets cluster
     *
     * @param string|null $cluster cluster
     *
     * @return self
     */
    public function setCluster($cluster)
    {
        $this->container['cluster'] = $cluster;

        return $this;
    }

    /**
     * Gets user
     *
     * @return object|null
     */
    public function getUser()
    {
        return $this->container['user'];
    }

    /**
     * Sets user
     *
     * @param object|null $user user
     *
     * @return self
     */
    public function setUser($user)
    {
        $this->container['user'] = $user;

        return $this;
    }

    /**
     * Gets plan
     *
     * @return object|null
     */
    public function getPlan()
    {
        return $this->container['plan'];
    }

    /**
     * Sets plan
     *
     * @param object|null $plan plan
     *
     * @return self
     */
    public function setPlan($plan)
    {
        $this->container['plan'] = $plan;

        return $this;
    }

    /**
     * Gets tags
     *
     * @return object[]|null
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param object[]|null $tags tags
     *
     * @return self
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets project
     *
     * @return string|null
     */
    public function getProject()
    {
        return $this->container['project'];
    }

    /**
     * Sets project
     *
     * @param string|null $project project
     *
     * @return self
     */
    public function setProject($project)
    {
        $this->container['project'] = $project;

        return $this;
    }

    /**
     * Gets ref_type
     *
     * @return string|null
     */
    public function getRefType()
    {
        return $this->container['ref_type'];
    }

    /**
     * Sets ref_type
     *
     * @param string|null $ref_type ref_type
     *
     * @return self
     */
    public function setRefType($ref_type)
    {
        $this->container['ref_type'] = $ref_type;

        return $this;
    }

    /**
     * Gets ref_id
     *
     * @return int|null
     */
    public function getRefId()
    {
        return $this->container['ref_id'];
    }

    /**
     * Sets ref_id
     *
     * @param int|null $ref_id ref_id
     *
     * @return self
     */
    public function setRefId($ref_id)
    {
        $this->container['ref_id'] = $ref_id;

        return $this;
    }

    /**
     * Gets ref_uuid
     *
     * @return string|null
     */
    public function getRefUuid()
    {
        return $this->container['ref_uuid'];
    }

    /**
     * Sets ref_uuid
     *
     * @param string|null $ref_uuid ref_uuid
     *
     * @return self
     */
    public function setRefUuid($ref_uuid)
    {
        $this->container['ref_uuid'] = $ref_uuid;

        return $this;
    }

    /**
     * Gets ref_name
     *
     * @return string|null
     */
    public function getRefName()
    {
        return $this->container['ref_name'];
    }

    /**
     * Sets ref_name
     *
     * @param string|null $ref_name ref_name
     *
     * @return self
     */
    public function setRefName($ref_name)
    {
        $this->container['ref_name'] = $ref_name;

        return $this;
    }

    /**
     * Gets ref_category
     *
     * @return string|null
     */
    public function getRefCategory()
    {
        return $this->container['ref_category'];
    }

    /**
     * Sets ref_category
     *
     * @param string|null $ref_category ref_category
     *
     * @return self
     */
    public function setRefCategory($ref_category)
    {
        $this->container['ref_category'] = $ref_category;

        return $this;
    }

    /**
     * Gets resource_id
     *
     * @return string|null
     */
    public function getResourceId()
    {
        return $this->container['resource_id'];
    }

    /**
     * Sets resource_id
     *
     * @param string|null $resource_id resource_id
     *
     * @return self
     */
    public function setResourceId($resource_id)
    {
        $this->container['resource_id'] = $resource_id;

        return $this;
    }

    /**
     * Gets resource_uuid
     *
     * @return string|null
     */
    public function getResourceUuid()
    {
        return $this->container['resource_uuid'];
    }

    /**
     * Sets resource_uuid
     *
     * @param string|null $resource_uuid resource_uuid
     *
     * @return self
     */
    public function setResourceUuid($resource_uuid)
    {
        $this->container['resource_uuid'] = $resource_uuid;

        return $this;
    }

    /**
     * Gets resource_type
     *
     * @return string|null
     */
    public function getResourceType()
    {
        return $this->container['resource_type'];
    }

    /**
     * Sets resource_type
     *
     * @param string|null $resource_type resource_type
     *
     * @return self
     */
    public function setResourceType($resource_type)
    {
        $this->container['resource_type'] = $resource_type;

        return $this;
    }

    /**
     * Gets resource_name
     *
     * @return string|null
     */
    public function getResourceName()
    {
        return $this->container['resource_name'];
    }

    /**
     * Sets resource_name
     *
     * @param string|null $resource_name resource_name
     *
     * @return self
     */
    public function setResourceName($resource_name)
    {
        $this->container['resource_name'] = $resource_name;

        return $this;
    }

    /**
     * Gets resource_external_id
     *
     * @return string|null
     */
    public function getResourceExternalId()
    {
        return $this->container['resource_external_id'];
    }

    /**
     * Sets resource_external_id
     *
     * @param string|null $resource_external_id resource_external_id
     *
     * @return self
     */
    public function setResourceExternalId($resource_external_id)
    {
        $this->container['resource_external_id'] = $resource_external_id;

        return $this;
    }

    /**
     * Gets resource_internal_id
     *
     * @return string|null
     */
    public function getResourceInternalId()
    {
        return $this->container['resource_internal_id'];
    }

    /**
     * Sets resource_internal_id
     *
     * @param string|null $resource_internal_id resource_internal_id
     *
     * @return self
     */
    public function setResourceInternalId($resource_internal_id)
    {
        $this->container['resource_internal_id'] = $resource_internal_id;

        return $this;
    }

    /**
     * Gets interval
     *
     * @return string|null
     */
    public function getInterval()
    {
        return $this->container['interval'];
    }

    /**
     * Sets interval
     *
     * @param string|null $interval interval
     *
     * @return self
     */
    public function setInterval($interval)
    {
        $this->container['interval'] = $interval;

        return $this;
    }

    /**
     * Gets period
     *
     * @return string|null
     */
    public function getPeriod()
    {
        return $this->container['period'];
    }

    /**
     * Sets period
     *
     * @param string|null $period period
     *
     * @return self
     */
    public function setPeriod($period)
    {
        $this->container['period'] = $period;

        return $this;
    }

    /**
     * Gets estimate
     *
     * @return bool|null
     */
    public function getEstimate()
    {
        return $this->container['estimate'];
    }

    /**
     * Sets estimate
     *
     * @param bool|null $estimate estimate
     *
     * @return self
     */
    public function setEstimate($estimate)
    {
        $this->container['estimate'] = $estimate;

        return $this;
    }

    /**
     * Gets summary_invoice
     *
     * @return bool|null
     */
    public function getSummaryInvoice()
    {
        return $this->container['summary_invoice'];
    }

    /**
     * Sets summary_invoice
     *
     * @param bool|null $summary_invoice summary_invoice
     *
     * @return self
     */
    public function setSummaryInvoice($summary_invoice)
    {
        $this->container['summary_invoice'] = $summary_invoice;

        return $this;
    }

    /**
     * Gets active
     *
     * @return bool|null
     */
    public function getActive()
    {
        return $this->container['active'];
    }

    /**
     * Sets active
     *
     * @param bool|null $active active
     *
     * @return self
     */
    public function setActive($active)
    {
        $this->container['active'] = $active;

        return $this;
    }

    /**
     * Gets start_date
     *
     * @return \DateTime|null
     */
    public function getStartDate()
    {
        return $this->container['start_date'];
    }

    /**
     * Sets start_date
     *
     * @param \DateTime|null $start_date start_date
     *
     * @return self
     */
    public function setStartDate($start_date)
    {
        $this->container['start_date'] = $start_date;

        return $this;
    }

    /**
     * Gets end_date
     *
     * @return \DateTime|null
     */
    public function getEndDate()
    {
        return $this->container['end_date'];
    }

    /**
     * Sets end_date
     *
     * @param \DateTime|null $end_date end_date
     *
     * @return self
     */
    public function setEndDate($end_date)
    {
        $this->container['end_date'] = $end_date;

        return $this;
    }

    /**
     * Gets ref_start
     *
     * @return \DateTime|null
     */
    public function getRefStart()
    {
        return $this->container['ref_start'];
    }

    /**
     * Sets ref_start
     *
     * @param \DateTime|null $ref_start ref_start
     *
     * @return self
     */
    public function setRefStart($ref_start)
    {
        $this->container['ref_start'] = $ref_start;

        return $this;
    }

    /**
     * Gets ref_end
     *
     * @return \DateTime|null
     */
    public function getRefEnd()
    {
        return $this->container['ref_end'];
    }

    /**
     * Sets ref_end
     *
     * @param \DateTime|null $ref_end ref_end
     *
     * @return self
     */
    public function setRefEnd($ref_end)
    {
        $this->container['ref_end'] = $ref_end;

        return $this;
    }

    /**
     * Gets estimated_compute_price
     *
     * @return float|null
     */
    public function getEstimatedComputePrice()
    {
        return $this->container['estimated_compute_price'];
    }

    /**
     * Sets estimated_compute_price
     *
     * @param float|null $estimated_compute_price estimated_compute_price
     *
     * @return self
     */
    public function setEstimatedComputePrice($estimated_compute_price)
    {
        $this->container['estimated_compute_price'] = $estimated_compute_price;

        return $this;
    }

    /**
     * Gets estimated_compute_cost
     *
     * @return float|null
     */
    public function getEstimatedComputeCost()
    {
        return $this->container['estimated_compute_cost'];
    }

    /**
     * Sets estimated_compute_cost
     *
     * @param float|null $estimated_compute_cost estimated_compute_cost
     *
     * @return self
     */
    public function setEstimatedComputeCost($estimated_compute_cost)
    {
        $this->container['estimated_compute_cost'] = $estimated_compute_cost;

        return $this;
    }

    /**
     * Gets estimated_memory_price
     *
     * @return float|null
     */
    public function getEstimatedMemoryPrice()
    {
        return $this->container['estimated_memory_price'];
    }

    /**
     * Sets estimated_memory_price
     *
     * @param float|null $estimated_memory_price estimated_memory_price
     *
     * @return self
     */
    public function setEstimatedMemoryPrice($estimated_memory_price)
    {
        $this->container['estimated_memory_price'] = $estimated_memory_price;

        return $this;
    }

    /**
     * Gets estimated_memory_cost
     *
     * @return float|null
     */
    public function getEstimatedMemoryCost()
    {
        return $this->container['estimated_memory_cost'];
    }

    /**
     * Sets estimated_memory_cost
     *
     * @param float|null $estimated_memory_cost estimated_memory_cost
     *
     * @return self
     */
    public function setEstimatedMemoryCost($estimated_memory_cost)
    {
        $this->container['estimated_memory_cost'] = $estimated_memory_cost;

        return $this;
    }

    /**
     * Gets estimated_storage_price
     *
     * @return float|null
     */
    public function getEstimatedStoragePrice()
    {
        return $this->container['estimated_storage_price'];
    }

    /**
     * Sets estimated_storage_price
     *
     * @param float|null $estimated_storage_price estimated_storage_price
     *
     * @return self
     */
    public function setEstimatedStoragePrice($estimated_storage_price)
    {
        $this->container['estimated_storage_price'] = $estimated_storage_price;

        return $this;
    }

    /**
     * Gets estimated_storage_cost
     *
     * @return float|null
     */
    public function getEstimatedStorageCost()
    {
        return $this->container['estimated_storage_cost'];
    }

    /**
     * Sets estimated_storage_cost
     *
     * @param float|null $estimated_storage_cost estimated_storage_cost
     *
     * @return self
     */
    public function setEstimatedStorageCost($estimated_storage_cost)
    {
        $this->container['estimated_storage_cost'] = $estimated_storage_cost;

        return $this;
    }

    /**
     * Gets estimated_network_price
     *
     * @return float|null
     */
    public function getEstimatedNetworkPrice()
    {
        return $this->container['estimated_network_price'];
    }

    /**
     * Sets estimated_network_price
     *
     * @param float|null $estimated_network_price estimated_network_price
     *
     * @return self
     */
    public function setEstimatedNetworkPrice($estimated_network_price)
    {
        $this->container['estimated_network_price'] = $estimated_network_price;

        return $this;
    }

    /**
     * Gets estimated_network_cost
     *
     * @return float|null
     */
    public function getEstimatedNetworkCost()
    {
        return $this->container['estimated_network_cost'];
    }

    /**
     * Sets estimated_network_cost
     *
     * @param float|null $estimated_network_cost estimated_network_cost
     *
     * @return self
     */
    public function setEstimatedNetworkCost($estimated_network_cost)
    {
        $this->container['estimated_network_cost'] = $estimated_network_cost;

        return $this;
    }

    /**
     * Gets estimated_license_price
     *
     * @return float|null
     */
    public function getEstimatedLicensePrice()
    {
        return $this->container['estimated_license_price'];
    }

    /**
     * Sets estimated_license_price
     *
     * @param float|null $estimated_license_price estimated_license_price
     *
     * @return self
     */
    public function setEstimatedLicensePrice($estimated_license_price)
    {
        $this->container['estimated_license_price'] = $estimated_license_price;

        return $this;
    }

    /**
     * Gets estimated_license_cost
     *
     * @return float|null
     */
    public function getEstimatedLicenseCost()
    {
        return $this->container['estimated_license_cost'];
    }

    /**
     * Sets estimated_license_cost
     *
     * @param float|null $estimated_license_cost estimated_license_cost
     *
     * @return self
     */
    public function setEstimatedLicenseCost($estimated_license_cost)
    {
        $this->container['estimated_license_cost'] = $estimated_license_cost;

        return $this;
    }

    /**
     * Gets estimated_extra_price
     *
     * @return float|null
     */
    public function getEstimatedExtraPrice()
    {
        return $this->container['estimated_extra_price'];
    }

    /**
     * Sets estimated_extra_price
     *
     * @param float|null $estimated_extra_price estimated_extra_price
     *
     * @return self
     */
    public function setEstimatedExtraPrice($estimated_extra_price)
    {
        $this->container['estimated_extra_price'] = $estimated_extra_price;

        return $this;
    }

    /**
     * Gets estimated_extra_cost
     *
     * @return float|null
     */
    public function getEstimatedExtraCost()
    {
        return $this->container['estimated_extra_cost'];
    }

    /**
     * Sets estimated_extra_cost
     *
     * @param float|null $estimated_extra_cost estimated_extra_cost
     *
     * @return self
     */
    public function setEstimatedExtraCost($estimated_extra_cost)
    {
        $this->container['estimated_extra_cost'] = $estimated_extra_cost;

        return $this;
    }

    /**
     * Gets estimated_total_price
     *
     * @return float|null
     */
    public function getEstimatedTotalPrice()
    {
        return $this->container['estimated_total_price'];
    }

    /**
     * Sets estimated_total_price
     *
     * @param float|null $estimated_total_price estimated_total_price
     *
     * @return self
     */
    public function setEstimatedTotalPrice($estimated_total_price)
    {
        $this->container['estimated_total_price'] = $estimated_total_price;

        return $this;
    }

    /**
     * Gets estimated_total_cost
     *
     * @return float|null
     */
    public function getEstimatedTotalCost()
    {
        return $this->container['estimated_total_cost'];
    }

    /**
     * Sets estimated_total_cost
     *
     * @param float|null $estimated_total_cost estimated_total_cost
     *
     * @return self
     */
    public function setEstimatedTotalCost($estimated_total_cost)
    {
        $this->container['estimated_total_cost'] = $estimated_total_cost;

        return $this;
    }

    /**
     * Gets estimated_running_price
     *
     * @return float|null
     */
    public function getEstimatedRunningPrice()
    {
        return $this->container['estimated_running_price'];
    }

    /**
     * Sets estimated_running_price
     *
     * @param float|null $estimated_running_price estimated_running_price
     *
     * @return self
     */
    public function setEstimatedRunningPrice($estimated_running_price)
    {
        $this->container['estimated_running_price'] = $estimated_running_price;

        return $this;
    }

    /**
     * Gets estimated_running_cost
     *
     * @return float|null
     */
    public function getEstimatedRunningCost()
    {
        return $this->container['estimated_running_cost'];
    }

    /**
     * Sets estimated_running_cost
     *
     * @param float|null $estimated_running_cost estimated_running_cost
     *
     * @return self
     */
    public function setEstimatedRunningCost($estimated_running_cost)
    {
        $this->container['estimated_running_cost'] = $estimated_running_cost;

        return $this;
    }

    /**
     * Gets estimated_currency
     *
     * @return string|null
     */
    public function getEstimatedCurrency()
    {
        return $this->container['estimated_currency'];
    }

    /**
     * Sets estimated_currency
     *
     * @param string|null $estimated_currency estimated_currency
     *
     * @return self
     */
    public function setEstimatedCurrency($estimated_currency)
    {
        $this->container['estimated_currency'] = $estimated_currency;

        return $this;
    }

    /**
     * Gets estimated_conversion_rate
     *
     * @return float|null
     */
    public function getEstimatedConversionRate()
    {
        return $this->container['estimated_conversion_rate'];
    }

    /**
     * Sets estimated_conversion_rate
     *
     * @param float|null $estimated_conversion_rate estimated_conversion_rate
     *
     * @return self
     */
    public function setEstimatedConversionRate($estimated_conversion_rate)
    {
        $this->container['estimated_conversion_rate'] = $estimated_conversion_rate;

        return $this;
    }

    /**
     * Gets actual_compute_price
     *
     * @return float|null
     */
    public function getActualComputePrice()
    {
        return $this->container['actual_compute_price'];
    }

    /**
     * Sets actual_compute_price
     *
     * @param float|null $actual_compute_price actual_compute_price
     *
     * @return self
     */
    public function setActualComputePrice($actual_compute_price)
    {
        $this->container['actual_compute_price'] = $actual_compute_price;

        return $this;
    }

    /**
     * Gets actual_compute_cost
     *
     * @return float|null
     */
    public function getActualComputeCost()
    {
        return $this->container['actual_compute_cost'];
    }

    /**
     * Sets actual_compute_cost
     *
     * @param float|null $actual_compute_cost actual_compute_cost
     *
     * @return self
     */
    public function setActualComputeCost($actual_compute_cost)
    {
        $this->container['actual_compute_cost'] = $actual_compute_cost;

        return $this;
    }

    /**
     * Gets actual_memory_price
     *
     * @return float|null
     */
    public function getActualMemoryPrice()
    {
        return $this->container['actual_memory_price'];
    }

    /**
     * Sets actual_memory_price
     *
     * @param float|null $actual_memory_price actual_memory_price
     *
     * @return self
     */
    public function setActualMemoryPrice($actual_memory_price)
    {
        $this->container['actual_memory_price'] = $actual_memory_price;

        return $this;
    }

    /**
     * Gets actual_memory_cost
     *
     * @return float|null
     */
    public function getActualMemoryCost()
    {
        return $this->container['actual_memory_cost'];
    }

    /**
     * Sets actual_memory_cost
     *
     * @param float|null $actual_memory_cost actual_memory_cost
     *
     * @return self
     */
    public function setActualMemoryCost($actual_memory_cost)
    {
        $this->container['actual_memory_cost'] = $actual_memory_cost;

        return $this;
    }

    /**
     * Gets actual_storage_price
     *
     * @return float|null
     */
    public function getActualStoragePrice()
    {
        return $this->container['actual_storage_price'];
    }

    /**
     * Sets actual_storage_price
     *
     * @param float|null $actual_storage_price actual_storage_price
     *
     * @return self
     */
    public function setActualStoragePrice($actual_storage_price)
    {
        $this->container['actual_storage_price'] = $actual_storage_price;

        return $this;
    }

    /**
     * Gets actual_storage_cost
     *
     * @return float|null
     */
    public function getActualStorageCost()
    {
        return $this->container['actual_storage_cost'];
    }

    /**
     * Sets actual_storage_cost
     *
     * @param float|null $actual_storage_cost actual_storage_cost
     *
     * @return self
     */
    public function setActualStorageCost($actual_storage_cost)
    {
        $this->container['actual_storage_cost'] = $actual_storage_cost;

        return $this;
    }

    /**
     * Gets actual_network_price
     *
     * @return float|null
     */
    public function getActualNetworkPrice()
    {
        return $this->container['actual_network_price'];
    }

    /**
     * Sets actual_network_price
     *
     * @param float|null $actual_network_price actual_network_price
     *
     * @return self
     */
    public function setActualNetworkPrice($actual_network_price)
    {
        $this->container['actual_network_price'] = $actual_network_price;

        return $this;
    }

    /**
     * Gets actual_network_cost
     *
     * @return float|null
     */
    public function getActualNetworkCost()
    {
        return $this->container['actual_network_cost'];
    }

    /**
     * Sets actual_network_cost
     *
     * @param float|null $actual_network_cost actual_network_cost
     *
     * @return self
     */
    public function setActualNetworkCost($actual_network_cost)
    {
        $this->container['actual_network_cost'] = $actual_network_cost;

        return $this;
    }

    /**
     * Gets actual_license_price
     *
     * @return float|null
     */
    public function getActualLicensePrice()
    {
        return $this->container['actual_license_price'];
    }

    /**
     * Sets actual_license_price
     *
     * @param float|null $actual_license_price actual_license_price
     *
     * @return self
     */
    public function setActualLicensePrice($actual_license_price)
    {
        $this->container['actual_license_price'] = $actual_license_price;

        return $this;
    }

    /**
     * Gets actual_license_cost
     *
     * @return float|null
     */
    public function getActualLicenseCost()
    {
        return $this->container['actual_license_cost'];
    }

    /**
     * Sets actual_license_cost
     *
     * @param float|null $actual_license_cost actual_license_cost
     *
     * @return self
     */
    public function setActualLicenseCost($actual_license_cost)
    {
        $this->container['actual_license_cost'] = $actual_license_cost;

        return $this;
    }

    /**
     * Gets actual_extra_price
     *
     * @return float|null
     */
    public function getActualExtraPrice()
    {
        return $this->container['actual_extra_price'];
    }

    /**
     * Sets actual_extra_price
     *
     * @param float|null $actual_extra_price actual_extra_price
     *
     * @return self
     */
    public function setActualExtraPrice($actual_extra_price)
    {
        $this->container['actual_extra_price'] = $actual_extra_price;

        return $this;
    }

    /**
     * Gets actual_extra_cost
     *
     * @return float|null
     */
    public function getActualExtraCost()
    {
        return $this->container['actual_extra_cost'];
    }

    /**
     * Sets actual_extra_cost
     *
     * @param float|null $actual_extra_cost actual_extra_cost
     *
     * @return self
     */
    public function setActualExtraCost($actual_extra_cost)
    {
        $this->container['actual_extra_cost'] = $actual_extra_cost;

        return $this;
    }

    /**
     * Gets actual_total_price
     *
     * @return float|null
     */
    public function getActualTotalPrice()
    {
        return $this->container['actual_total_price'];
    }

    /**
     * Sets actual_total_price
     *
     * @param float|null $actual_total_price actual_total_price
     *
     * @return self
     */
    public function setActualTotalPrice($actual_total_price)
    {
        $this->container['actual_total_price'] = $actual_total_price;

        return $this;
    }

    /**
     * Gets actual_total_cost
     *
     * @return float|null
     */
    public function getActualTotalCost()
    {
        return $this->container['actual_total_cost'];
    }

    /**
     * Sets actual_total_cost
     *
     * @param float|null $actual_total_cost actual_total_cost
     *
     * @return self
     */
    public function setActualTotalCost($actual_total_cost)
    {
        $this->container['actual_total_cost'] = $actual_total_cost;

        return $this;
    }

    /**
     * Gets actual_running_price
     *
     * @return float|null
     */
    public function getActualRunningPrice()
    {
        return $this->container['actual_running_price'];
    }

    /**
     * Sets actual_running_price
     *
     * @param float|null $actual_running_price actual_running_price
     *
     * @return self
     */
    public function setActualRunningPrice($actual_running_price)
    {
        $this->container['actual_running_price'] = $actual_running_price;

        return $this;
    }

    /**
     * Gets actual_running_cost
     *
     * @return float|null
     */
    public function getActualRunningCost()
    {
        return $this->container['actual_running_cost'];
    }

    /**
     * Sets actual_running_cost
     *
     * @param float|null $actual_running_cost actual_running_cost
     *
     * @return self
     */
    public function setActualRunningCost($actual_running_cost)
    {
        $this->container['actual_running_cost'] = $actual_running_cost;

        return $this;
    }

    /**
     * Gets actual_currency
     *
     * @return string|null
     */
    public function getActualCurrency()
    {
        return $this->container['actual_currency'];
    }

    /**
     * Sets actual_currency
     *
     * @param string|null $actual_currency actual_currency
     *
     * @return self
     */
    public function setActualCurrency($actual_currency)
    {
        $this->container['actual_currency'] = $actual_currency;

        return $this;
    }

    /**
     * Gets actual_conversion_rate
     *
     * @return float|null
     */
    public function getActualConversionRate()
    {
        return $this->container['actual_conversion_rate'];
    }

    /**
     * Sets actual_conversion_rate
     *
     * @param float|null $actual_conversion_rate actual_conversion_rate
     *
     * @return self
     */
    public function setActualConversionRate($actual_conversion_rate)
    {
        $this->container['actual_conversion_rate'] = $actual_conversion_rate;

        return $this;
    }

    /**
     * Gets compute_price
     *
     * @return float|null
     */
    public function getComputePrice()
    {
        return $this->container['compute_price'];
    }

    /**
     * Sets compute_price
     *
     * @param float|null $compute_price compute_price
     *
     * @return self
     */
    public function setComputePrice($compute_price)
    {
        $this->container['compute_price'] = $compute_price;

        return $this;
    }

    /**
     * Gets compute_cost
     *
     * @return float|null
     */
    public function getComputeCost()
    {
        return $this->container['compute_cost'];
    }

    /**
     * Sets compute_cost
     *
     * @param float|null $compute_cost compute_cost
     *
     * @return self
     */
    public function setComputeCost($compute_cost)
    {
        $this->container['compute_cost'] = $compute_cost;

        return $this;
    }

    /**
     * Gets memory_price
     *
     * @return float|null
     */
    public function getMemoryPrice()
    {
        return $this->container['memory_price'];
    }

    /**
     * Sets memory_price
     *
     * @param float|null $memory_price memory_price
     *
     * @return self
     */
    public function setMemoryPrice($memory_price)
    {
        $this->container['memory_price'] = $memory_price;

        return $this;
    }

    /**
     * Gets memory_cost
     *
     * @return float|null
     */
    public function getMemoryCost()
    {
        return $this->container['memory_cost'];
    }

    /**
     * Sets memory_cost
     *
     * @param float|null $memory_cost memory_cost
     *
     * @return self
     */
    public function setMemoryCost($memory_cost)
    {
        $this->container['memory_cost'] = $memory_cost;

        return $this;
    }

    /**
     * Gets storage_price
     *
     * @return float|null
     */
    public function getStoragePrice()
    {
        return $this->container['storage_price'];
    }

    /**
     * Sets storage_price
     *
     * @param float|null $storage_price storage_price
     *
     * @return self
     */
    public function setStoragePrice($storage_price)
    {
        $this->container['storage_price'] = $storage_price;

        return $this;
    }

    /**
     * Gets storage_cost
     *
     * @return float|null
     */
    public function getStorageCost()
    {
        return $this->container['storage_cost'];
    }

    /**
     * Sets storage_cost
     *
     * @param float|null $storage_cost storage_cost
     *
     * @return self
     */
    public function setStorageCost($storage_cost)
    {
        $this->container['storage_cost'] = $storage_cost;

        return $this;
    }

    /**
     * Gets network_price
     *
     * @return float|null
     */
    public function getNetworkPrice()
    {
        return $this->container['network_price'];
    }

    /**
     * Sets network_price
     *
     * @param float|null $network_price network_price
     *
     * @return self
     */
    public function setNetworkPrice($network_price)
    {
        $this->container['network_price'] = $network_price;

        return $this;
    }

    /**
     * Gets network_cost
     *
     * @return float|null
     */
    public function getNetworkCost()
    {
        return $this->container['network_cost'];
    }

    /**
     * Sets network_cost
     *
     * @param float|null $network_cost network_cost
     *
     * @return self
     */
    public function setNetworkCost($network_cost)
    {
        $this->container['network_cost'] = $network_cost;

        return $this;
    }

    /**
     * Gets license_price
     *
     * @return float|null
     */
    public function getLicensePrice()
    {
        return $this->container['license_price'];
    }

    /**
     * Sets license_price
     *
     * @param float|null $license_price license_price
     *
     * @return self
     */
    public function setLicensePrice($license_price)
    {
        $this->container['license_price'] = $license_price;

        return $this;
    }

    /**
     * Gets license_cost
     *
     * @return float|null
     */
    public function getLicenseCost()
    {
        return $this->container['license_cost'];
    }

    /**
     * Sets license_cost
     *
     * @param float|null $license_cost license_cost
     *
     * @return self
     */
    public function setLicenseCost($license_cost)
    {
        $this->container['license_cost'] = $license_cost;

        return $this;
    }

    /**
     * Gets extra_price
     *
     * @return float|null
     */
    public function getExtraPrice()
    {
        return $this->container['extra_price'];
    }

    /**
     * Sets extra_price
     *
     * @param float|null $extra_price extra_price
     *
     * @return self
     */
    public function setExtraPrice($extra_price)
    {
        $this->container['extra_price'] = $extra_price;

        return $this;
    }

    /**
     * Gets extra_cost
     *
     * @return float|null
     */
    public function getExtraCost()
    {
        return $this->container['extra_cost'];
    }

    /**
     * Sets extra_cost
     *
     * @param float|null $extra_cost extra_cost
     *
     * @return self
     */
    public function setExtraCost($extra_cost)
    {
        $this->container['extra_cost'] = $extra_cost;

        return $this;
    }

    /**
     * Gets total_price
     *
     * @return float|null
     */
    public function getTotalPrice()
    {
        return $this->container['total_price'];
    }

    /**
     * Sets total_price
     *
     * @param float|null $total_price total_price
     *
     * @return self
     */
    public function setTotalPrice($total_price)
    {
        $this->container['total_price'] = $total_price;

        return $this;
    }

    /**
     * Gets total_cost
     *
     * @return float|null
     */
    public function getTotalCost()
    {
        return $this->container['total_cost'];
    }

    /**
     * Sets total_cost
     *
     * @param float|null $total_cost total_cost
     *
     * @return self
     */
    public function setTotalCost($total_cost)
    {
        $this->container['total_cost'] = $total_cost;

        return $this;
    }

    /**
     * Gets running_price
     *
     * @return float|null
     */
    public function getRunningPrice()
    {
        return $this->container['running_price'];
    }

    /**
     * Sets running_price
     *
     * @param float|null $running_price running_price
     *
     * @return self
     */
    public function setRunningPrice($running_price)
    {
        $this->container['running_price'] = $running_price;

        return $this;
    }

    /**
     * Gets running_cost
     *
     * @return float|null
     */
    public function getRunningCost()
    {
        return $this->container['running_cost'];
    }

    /**
     * Sets running_cost
     *
     * @param float|null $running_cost running_cost
     *
     * @return self
     */
    public function setRunningCost($running_cost)
    {
        $this->container['running_cost'] = $running_cost;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string|null
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string|null $currency currency
     *
     * @return self
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets conversion_rate
     *
     * @return float|null
     */
    public function getConversionRate()
    {
        return $this->container['conversion_rate'];
    }

    /**
     * Sets conversion_rate
     *
     * @param float|null $conversion_rate conversion_rate
     *
     * @return self
     */
    public function setConversionRate($conversion_rate)
    {
        $this->container['conversion_rate'] = $conversion_rate;

        return $this;
    }

    /**
     * Gets cost_type
     *
     * @return string|null
     */
    public function getCostType()
    {
        return $this->container['cost_type'];
    }

    /**
     * Sets cost_type
     *
     * @param string|null $cost_type cost_type
     *
     * @return self
     */
    public function setCostType($cost_type)
    {
        $this->container['cost_type'] = $cost_type;

        return $this;
    }

    /**
     * Gets off_time
     *
     * @return int|null
     */
    public function getOffTime()
    {
        return $this->container['off_time'];
    }

    /**
     * Sets off_time
     *
     * @param int|null $off_time off_time
     *
     * @return self
     */
    public function setOffTime($off_time)
    {
        $this->container['off_time'] = $off_time;

        return $this;
    }

    /**
     * Gets power_state
     *
     * @return string|null
     */
    public function getPowerState()
    {
        return $this->container['power_state'];
    }

    /**
     * Sets power_state
     *
     * @param string|null $power_state power_state
     *
     * @return self
     */
    public function setPowerState($power_state)
    {
        $this->container['power_state'] = $power_state;

        return $this;
    }

    /**
     * Gets power_date
     *
     * @return \DateTime|null
     */
    public function getPowerDate()
    {
        return $this->container['power_date'];
    }

    /**
     * Sets power_date
     *
     * @param \DateTime|null $power_date power_date
     *
     * @return self
     */
    public function setPowerDate($power_date)
    {
        $this->container['power_date'] = $power_date;

        return $this;
    }

    /**
     * Gets running_multiplier
     *
     * @return float|null
     */
    public function getRunningMultiplier()
    {
        return $this->container['running_multiplier'];
    }

    /**
     * Sets running_multiplier
     *
     * @param float|null $running_multiplier running_multiplier
     *
     * @return self
     */
    public function setRunningMultiplier($running_multiplier)
    {
        $this->container['running_multiplier'] = $running_multiplier;

        return $this;
    }

    /**
     * Gets usage_type
     *
     * @return string|null
     */
    public function getUsageType()
    {
        return $this->container['usage_type'];
    }

    /**
     * Sets usage_type
     *
     * @param string|null $usage_type usage_type
     *
     * @return self
     */
    public function setUsageType($usage_type)
    {
        $this->container['usage_type'] = $usage_type;

        return $this;
    }

    /**
     * Gets usage_category
     *
     * @return string|null
     */
    public function getUsageCategory()
    {
        return $this->container['usage_category'];
    }

    /**
     * Sets usage_category
     *
     * @param string|null $usage_category usage_category
     *
     * @return self
     */
    public function setUsageCategory($usage_category)
    {
        $this->container['usage_category'] = $usage_category;

        return $this;
    }

    /**
     * Gets last_cost_date
     *
     * @return \DateTime|null
     */
    public function getLastCostDate()
    {
        return $this->container['last_cost_date'];
    }

    /**
     * Sets last_cost_date
     *
     * @param \DateTime|null $last_cost_date last_cost_date
     *
     * @return self
     */
    public function setLastCostDate($last_cost_date)
    {
        $this->container['last_cost_date'] = $last_cost_date;

        return $this;
    }

    /**
     * Gets last_actual_date
     *
     * @return \DateTime|null
     */
    public function getLastActualDate()
    {
        return $this->container['last_actual_date'];
    }

    /**
     * Sets last_actual_date
     *
     * @param \DateTime|null $last_actual_date last_actual_date
     *
     * @return self
     */
    public function setLastActualDate($last_actual_date)
    {
        $this->container['last_actual_date'] = $last_actual_date;

        return $this;
    }

    /**
     * Gets date_created
     *
     * @return \DateTime|null
     */
    public function getDateCreated()
    {
        return $this->container['date_created'];
    }

    /**
     * Sets date_created
     *
     * @param \DateTime|null $date_created date_created
     *
     * @return self
     */
    public function setDateCreated($date_created)
    {
        $this->container['date_created'] = $date_created;

        return $this;
    }

    /**
     * Gets last_updated
     *
     * @return \DateTime|null
     */
    public function getLastUpdated()
    {
        return $this->container['last_updated'];
    }

    /**
     * Sets last_updated
     *
     * @param \DateTime|null $last_updated last_updated
     *
     * @return self
     */
    public function setLastUpdated($last_updated)
    {
        $this->container['last_updated'] = $last_updated;

        return $this;
    }

    /**
     * Gets line_item_count
     *
     * @return int|null
     */
    public function getLineItemCount()
    {
        return $this->container['line_item_count'];
    }

    /**
     * Sets line_item_count
     *
     * @param int|null $line_item_count line_item_count
     *
     * @return self
     */
    public function setLineItemCount($line_item_count)
    {
        $this->container['line_item_count'] = $line_item_count;

        return $this;
    }

    /**
     * Gets line_items
     *
     * @return \OpenAPI\Client\Model\InvoiceLineItems[]|null
     */
    public function getLineItems()
    {
        return $this->container['line_items'];
    }

    /**
     * Sets line_items
     *
     * @param \OpenAPI\Client\Model\InvoiceLineItems[]|null $line_items line_items
     *
     * @return self
     */
    public function setLineItems($line_items)
    {
        $this->container['line_items'] = $line_items;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


