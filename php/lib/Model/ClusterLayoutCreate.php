<?php
/**
 * ClusterLayoutCreate
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Morpheus API
 *
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ClusterLayoutCreate Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class ClusterLayoutCreate implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'clusterLayoutCreate';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'name' => 'string',
        'description' => 'string',
        'labels' => 'string[]',
        'compute_version' => 'string',
        'creatable' => 'bool',
        'has_auto_scale' => 'bool',
        'install_container_runtime' => 'bool',
        'memory_requirement' => 'int',
        'group_type' => '\OpenAPI\Client\Model\ClusterLayoutCreateGroupType',
        'provision_type' => '\OpenAPI\Client\Model\ApiServicePlansServicePlanProvisionType',
        'option_types' => '\OpenAPI\Client\Model\ApiBlueprintsIdUpdatePermissionsResourcePermissionSites[]',
        'task_sets' => '\OpenAPI\Client\Model\ApiBlueprintsIdUpdatePermissionsResourcePermissionSites[]',
        'environment_variables' => '\OpenAPI\Client\Model\ClusterLayoutCreateEnvironmentVariables[]',
        'masters' => '\OpenAPI\Client\Model\ClusterLayoutCreateMasters[]',
        'workers' => '\OpenAPI\Client\Model\ClusterLayoutCreateMasters[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'name' => null,
        'description' => null,
        'labels' => null,
        'compute_version' => null,
        'creatable' => null,
        'has_auto_scale' => null,
        'install_container_runtime' => null,
        'memory_requirement' => 'int64',
        'group_type' => null,
        'provision_type' => null,
        'option_types' => null,
        'task_sets' => null,
        'environment_variables' => null,
        'masters' => null,
        'workers' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'name' => 'name',
        'description' => 'description',
        'labels' => 'labels',
        'compute_version' => 'computeVersion',
        'creatable' => 'creatable',
        'has_auto_scale' => 'hasAutoScale',
        'install_container_runtime' => 'installContainerRuntime',
        'memory_requirement' => 'memoryRequirement',
        'group_type' => 'groupType',
        'provision_type' => 'provisionType',
        'option_types' => 'optionTypes',
        'task_sets' => 'taskSets',
        'environment_variables' => 'environmentVariables',
        'masters' => 'masters',
        'workers' => 'workers'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'name' => 'setName',
        'description' => 'setDescription',
        'labels' => 'setLabels',
        'compute_version' => 'setComputeVersion',
        'creatable' => 'setCreatable',
        'has_auto_scale' => 'setHasAutoScale',
        'install_container_runtime' => 'setInstallContainerRuntime',
        'memory_requirement' => 'setMemoryRequirement',
        'group_type' => 'setGroupType',
        'provision_type' => 'setProvisionType',
        'option_types' => 'setOptionTypes',
        'task_sets' => 'setTaskSets',
        'environment_variables' => 'setEnvironmentVariables',
        'masters' => 'setMasters',
        'workers' => 'setWorkers'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'name' => 'getName',
        'description' => 'getDescription',
        'labels' => 'getLabels',
        'compute_version' => 'getComputeVersion',
        'creatable' => 'getCreatable',
        'has_auto_scale' => 'getHasAutoScale',
        'install_container_runtime' => 'getInstallContainerRuntime',
        'memory_requirement' => 'getMemoryRequirement',
        'group_type' => 'getGroupType',
        'provision_type' => 'getProvisionType',
        'option_types' => 'getOptionTypes',
        'task_sets' => 'getTaskSets',
        'environment_variables' => 'getEnvironmentVariables',
        'masters' => 'getMasters',
        'workers' => 'getWorkers'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['name'] = $data['name'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
        $this->container['labels'] = $data['labels'] ?? null;
        $this->container['compute_version'] = $data['compute_version'] ?? null;
        $this->container['creatable'] = $data['creatable'] ?? true;
        $this->container['has_auto_scale'] = $data['has_auto_scale'] ?? false;
        $this->container['install_container_runtime'] = $data['install_container_runtime'] ?? false;
        $this->container['memory_requirement'] = $data['memory_requirement'] ?? null;
        $this->container['group_type'] = $data['group_type'] ?? null;
        $this->container['provision_type'] = $data['provision_type'] ?? null;
        $this->container['option_types'] = $data['option_types'] ?? null;
        $this->container['task_sets'] = $data['task_sets'] ?? null;
        $this->container['environment_variables'] = $data['environment_variables'] ?? null;
        $this->container['masters'] = $data['masters'] ?? null;
        $this->container['workers'] = $data['workers'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        if ($this->container['compute_version'] === null) {
            $invalidProperties[] = "'compute_version' can't be null";
        }
        if ($this->container['group_type'] === null) {
            $invalidProperties[] = "'group_type' can't be null";
        }
        if ($this->container['provision_type'] === null) {
            $invalidProperties[] = "'provision_type' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name Cluster layout name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description Cluster layout description
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets labels
     *
     * @return string[]|null
     */
    public function getLabels()
    {
        return $this->container['labels'];
    }

    /**
     * Sets labels
     *
     * @param string[]|null $labels labels
     *
     * @return self
     */
    public function setLabels($labels)
    {
        $this->container['labels'] = $labels;

        return $this;
    }

    /**
     * Gets compute_version
     *
     * @return string
     */
    public function getComputeVersion()
    {
        return $this->container['compute_version'];
    }

    /**
     * Sets compute_version
     *
     * @param string $compute_version Version of the cluster layout
     *
     * @return self
     */
    public function setComputeVersion($compute_version)
    {
        $this->container['compute_version'] = $compute_version;

        return $this;
    }

    /**
     * Gets creatable
     *
     * @return bool|null
     */
    public function getCreatable()
    {
        return $this->container['creatable'];
    }

    /**
     * Sets creatable
     *
     * @param bool|null $creatable Can be used to enable / disable the creatability of the cluster layout.
     *
     * @return self
     */
    public function setCreatable($creatable)
    {
        $this->container['creatable'] = $creatable;

        return $this;
    }

    /**
     * Gets has_auto_scale
     *
     * @return bool|null
     */
    public function getHasAutoScale()
    {
        return $this->container['has_auto_scale'];
    }

    /**
     * Sets has_auto_scale
     *
     * @param bool|null $has_auto_scale Can be used to enable / disable the horizontal scaling.
     *
     * @return self
     */
    public function setHasAutoScale($has_auto_scale)
    {
        $this->container['has_auto_scale'] = $has_auto_scale;

        return $this;
    }

    /**
     * Gets install_container_runtime
     *
     * @return bool|null
     */
    public function getInstallContainerRuntime()
    {
        return $this->container['install_container_runtime'];
    }

    /**
     * Sets install_container_runtime
     *
     * @param bool|null $install_container_runtime Install Docker (container runtime).
     *
     * @return self
     */
    public function setInstallContainerRuntime($install_container_runtime)
    {
        $this->container['install_container_runtime'] = $install_container_runtime;

        return $this;
    }

    /**
     * Gets memory_requirement
     *
     * @return int|null
     */
    public function getMemoryRequirement()
    {
        return $this->container['memory_requirement'];
    }

    /**
     * Sets memory_requirement
     *
     * @param int|null $memory_requirement Memory requirement in bytes
     *
     * @return self
     */
    public function setMemoryRequirement($memory_requirement)
    {
        $this->container['memory_requirement'] = $memory_requirement;

        return $this;
    }

    /**
     * Gets group_type
     *
     * @return \OpenAPI\Client\Model\ClusterLayoutCreateGroupType
     */
    public function getGroupType()
    {
        return $this->container['group_type'];
    }

    /**
     * Sets group_type
     *
     * @param \OpenAPI\Client\Model\ClusterLayoutCreateGroupType $group_type group_type
     *
     * @return self
     */
    public function setGroupType($group_type)
    {
        $this->container['group_type'] = $group_type;

        return $this;
    }

    /**
     * Gets provision_type
     *
     * @return \OpenAPI\Client\Model\ApiServicePlansServicePlanProvisionType
     */
    public function getProvisionType()
    {
        return $this->container['provision_type'];
    }

    /**
     * Sets provision_type
     *
     * @param \OpenAPI\Client\Model\ApiServicePlansServicePlanProvisionType $provision_type provision_type
     *
     * @return self
     */
    public function setProvisionType($provision_type)
    {
        $this->container['provision_type'] = $provision_type;

        return $this;
    }

    /**
     * Gets option_types
     *
     * @return \OpenAPI\Client\Model\ApiBlueprintsIdUpdatePermissionsResourcePermissionSites[]|null
     */
    public function getOptionTypes()
    {
        return $this->container['option_types'];
    }

    /**
     * Sets option_types
     *
     * @param \OpenAPI\Client\Model\ApiBlueprintsIdUpdatePermissionsResourcePermissionSites[]|null $option_types Array of cluster layout option types
     *
     * @return self
     */
    public function setOptionTypes($option_types)
    {
        $this->container['option_types'] = $option_types;

        return $this;
    }

    /**
     * Gets task_sets
     *
     * @return \OpenAPI\Client\Model\ApiBlueprintsIdUpdatePermissionsResourcePermissionSites[]|null
     */
    public function getTaskSets()
    {
        return $this->container['task_sets'];
    }

    /**
     * Sets task_sets
     *
     * @param \OpenAPI\Client\Model\ApiBlueprintsIdUpdatePermissionsResourcePermissionSites[]|null $task_sets Array of cluster layout task sets
     *
     * @return self
     */
    public function setTaskSets($task_sets)
    {
        $this->container['task_sets'] = $task_sets;

        return $this;
    }

    /**
     * Gets environment_variables
     *
     * @return \OpenAPI\Client\Model\ClusterLayoutCreateEnvironmentVariables[]|null
     */
    public function getEnvironmentVariables()
    {
        return $this->container['environment_variables'];
    }

    /**
     * Sets environment_variables
     *
     * @param \OpenAPI\Client\Model\ClusterLayoutCreateEnvironmentVariables[]|null $environment_variables Array of cluster layout env variables
     *
     * @return self
     */
    public function setEnvironmentVariables($environment_variables)
    {
        $this->container['environment_variables'] = $environment_variables;

        return $this;
    }

    /**
     * Gets masters
     *
     * @return \OpenAPI\Client\Model\ClusterLayoutCreateMasters[]|null
     */
    public function getMasters()
    {
        return $this->container['masters'];
    }

    /**
     * Sets masters
     *
     * @param \OpenAPI\Client\Model\ClusterLayoutCreateMasters[]|null $masters Array of cluster layout master nodes
     *
     * @return self
     */
    public function setMasters($masters)
    {
        $this->container['masters'] = $masters;

        return $this;
    }

    /**
     * Gets workers
     *
     * @return \OpenAPI\Client\Model\ClusterLayoutCreateMasters[]|null
     */
    public function getWorkers()
    {
        return $this->container['workers'];
    }

    /**
     * Sets workers
     *
     * @param \OpenAPI\Client\Model\ClusterLayoutCreateMasters[]|null $workers Array of cluster layout worker nodes
     *
     * @return self
     */
    public function setWorkers($workers)
    {
        $this->container['workers'] = $workers;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


