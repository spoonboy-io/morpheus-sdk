/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.InlineResponse20079LoadBalancerMonitorLoadBalancer;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for InlineResponse20081LoadBalancerProfile
 */
public class InlineResponse20081LoadBalancerProfileTest {
    private final InlineResponse20081LoadBalancerProfile model = new InlineResponse20081LoadBalancerProfile();

    /**
     * Model tests for InlineResponse20081LoadBalancerProfile
     */
    @Test
    public void testInlineResponse20081LoadBalancerProfile() {
        // TODO: test InlineResponse20081LoadBalancerProfile
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'loadBalancer'
     */
    @Test
    public void loadBalancerTest() {
        // TODO: test loadBalancer
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'serviceType'
     */
    @Test
    public void serviceTypeTest() {
        // TODO: test serviceType
    }

    /**
     * Test the property 'serviceTypeDisplay'
     */
    @Test
    public void serviceTypeDisplayTest() {
        // TODO: test serviceTypeDisplay
    }

    /**
     * Test the property 'visibility'
     */
    @Test
    public void visibilityTest() {
        // TODO: test visibility
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'internalId'
     */
    @Test
    public void internalIdTest() {
        // TODO: test internalId
    }

    /**
     * Test the property 'externalId'
     */
    @Test
    public void externalIdTest() {
        // TODO: test externalId
    }

    /**
     * Test the property 'proxyType'
     */
    @Test
    public void proxyTypeTest() {
        // TODO: test proxyType
    }

    /**
     * Test the property 'redirectRewrite'
     */
    @Test
    public void redirectRewriteTest() {
        // TODO: test redirectRewrite
    }

    /**
     * Test the property 'persistenceType'
     */
    @Test
    public void persistenceTypeTest() {
        // TODO: test persistenceType
    }

    /**
     * Test the property 'sslEnabled'
     */
    @Test
    public void sslEnabledTest() {
        // TODO: test sslEnabled
    }

    /**
     * Test the property 'sslCert'
     */
    @Test
    public void sslCertTest() {
        // TODO: test sslCert
    }

    /**
     * Test the property 'accountCertificate'
     */
    @Test
    public void accountCertificateTest() {
        // TODO: test accountCertificate
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'redirectUrl'
     */
    @Test
    public void redirectUrlTest() {
        // TODO: test redirectUrl
    }

    /**
     * Test the property 'insertXforwardedFor'
     */
    @Test
    public void insertXforwardedForTest() {
        // TODO: test insertXforwardedFor
    }

    /**
     * Test the property 'persistenceCookieName'
     */
    @Test
    public void persistenceCookieNameTest() {
        // TODO: test persistenceCookieName
    }

    /**
     * Test the property 'persistenceExpiresIn'
     */
    @Test
    public void persistenceExpiresInTest() {
        // TODO: test persistenceExpiresIn
    }

    /**
     * Test the property 'editable'
     */
    @Test
    public void editableTest() {
        // TODO: test editable
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'dateCreated'
     */
    @Test
    public void dateCreatedTest() {
        // TODO: test dateCreated
    }

    /**
     * Test the property 'lastUpdated'
     */
    @Test
    public void lastUpdatedTest() {
        // TODO: test lastUpdated
    }

}
