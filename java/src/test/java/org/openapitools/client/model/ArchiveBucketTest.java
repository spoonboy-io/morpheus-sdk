/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ArchiveBucketCreatedBy;
import org.openapitools.client.model.InlineResponse20040AppDeployInstance;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ArchiveBucket
 */
public class ArchiveBucketTest {
    private final ArchiveBucket model = new ArchiveBucket();

    /**
     * Model tests for ArchiveBucket
     */
    @Test
    public void testArchiveBucket() {
        // TODO: test ArchiveBucket
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'storageProvider'
     */
    @Test
    public void storageProviderTest() {
        // TODO: test storageProvider
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'isPublic'
     */
    @Test
    public void isPublicTest() {
        // TODO: test isPublic
    }

    /**
     * Test the property 'visibility'
     */
    @Test
    public void visibilityTest() {
        // TODO: test visibility
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'filePath'
     */
    @Test
    public void filePathTest() {
        // TODO: test filePath
    }

    /**
     * Test the property 'rawSize'
     */
    @Test
    public void rawSizeTest() {
        // TODO: test rawSize
    }

    /**
     * Test the property 'fileCount'
     */
    @Test
    public void fileCountTest() {
        // TODO: test fileCount
    }

    /**
     * Test the property 'accounts'
     */
    @Test
    public void accountsTest() {
        // TODO: test accounts
    }

    /**
     * Test the property 'dateCreated'
     */
    @Test
    public void dateCreatedTest() {
        // TODO: test dateCreated
    }

    /**
     * Test the property 'lastUpdated'
     */
    @Test
    public void lastUpdatedTest() {
        // TODO: test lastUpdated
    }

}
