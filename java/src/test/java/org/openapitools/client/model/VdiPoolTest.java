/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.InlineResponse20040AppDeployInstance;
import org.openapitools.client.model.InlineResponse20082LoadBalancerInstanceSslCert;
import org.openapitools.client.model.VdiPoolConfig;
import org.openapitools.client.model.VdiPoolOwner;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for VdiPool
 */
public class VdiPoolTest {
    private final VdiPool model = new VdiPool();

    /**
     * Model tests for VdiPool
     */
    @Test
    public void testVdiPool() {
        // TODO: test VdiPool
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'minIdle'
     */
    @Test
    public void minIdleTest() {
        // TODO: test minIdle
    }

    /**
     * Test the property 'maxIdle'
     */
    @Test
    public void maxIdleTest() {
        // TODO: test maxIdle
    }

    /**
     * Test the property 'initialPoolSize'
     */
    @Test
    public void initialPoolSizeTest() {
        // TODO: test initialPoolSize
    }

    /**
     * Test the property 'maxPoolSize'
     */
    @Test
    public void maxPoolSizeTest() {
        // TODO: test maxPoolSize
    }

    /**
     * Test the property 'allocationTimeoutMinutes'
     */
    @Test
    public void allocationTimeoutMinutesTest() {
        // TODO: test allocationTimeoutMinutes
    }

    /**
     * Test the property 'persistentUser'
     */
    @Test
    public void persistentUserTest() {
        // TODO: test persistentUser
    }

    /**
     * Test the property 'recyclable'
     */
    @Test
    public void recyclableTest() {
        // TODO: test recyclable
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'autoCreateLocalUserOnReservation'
     */
    @Test
    public void autoCreateLocalUserOnReservationTest() {
        // TODO: test autoCreateLocalUserOnReservation
    }

    /**
     * Test the property 'allowHypervisorConsole'
     */
    @Test
    public void allowHypervisorConsoleTest() {
        // TODO: test allowHypervisorConsole
    }

    /**
     * Test the property 'allowCopy'
     */
    @Test
    public void allowCopyTest() {
        // TODO: test allowCopy
    }

    /**
     * Test the property 'allowPrinter'
     */
    @Test
    public void allowPrinterTest() {
        // TODO: test allowPrinter
    }

    /**
     * Test the property 'allowFileshare'
     */
    @Test
    public void allowFileshareTest() {
        // TODO: test allowFileshare
    }

    /**
     * Test the property 'guestConsoleJumpHost'
     */
    @Test
    public void guestConsoleJumpHostTest() {
        // TODO: test guestConsoleJumpHost
    }

    /**
     * Test the property 'guestConsoleJumpPort'
     */
    @Test
    public void guestConsoleJumpPortTest() {
        // TODO: test guestConsoleJumpPort
    }

    /**
     * Test the property 'guestConsoleJumpUsername'
     */
    @Test
    public void guestConsoleJumpUsernameTest() {
        // TODO: test guestConsoleJumpUsername
    }

    /**
     * Test the property 'guestConsoleJumpPassword'
     */
    @Test
    public void guestConsoleJumpPasswordTest() {
        // TODO: test guestConsoleJumpPassword
    }

    /**
     * Test the property 'guestConsoleJumpKeypair'
     */
    @Test
    public void guestConsoleJumpKeypairTest() {
        // TODO: test guestConsoleJumpKeypair
    }

    /**
     * Test the property 'gateway'
     */
    @Test
    public void gatewayTest() {
        // TODO: test gateway
    }

    /**
     * Test the property 'iconPath'
     */
    @Test
    public void iconPathTest() {
        // TODO: test iconPath
    }

    /**
     * Test the property 'logo'
     */
    @Test
    public void logoTest() {
        // TODO: test logo
    }

    /**
     * Test the property 'apps'
     */
    @Test
    public void appsTest() {
        // TODO: test apps
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

    /**
     * Test the property 'group'
     */
    @Test
    public void groupTest() {
        // TODO: test group
    }

    /**
     * Test the property 'cloud'
     */
    @Test
    public void cloudTest() {
        // TODO: test cloud
    }

    /**
     * Test the property 'usedCount'
     */
    @Test
    public void usedCountTest() {
        // TODO: test usedCount
    }

    /**
     * Test the property 'reservedCount'
     */
    @Test
    public void reservedCountTest() {
        // TODO: test reservedCount
    }

    /**
     * Test the property 'preparingCount'
     */
    @Test
    public void preparingCountTest() {
        // TODO: test preparingCount
    }

    /**
     * Test the property 'idleCount'
     */
    @Test
    public void idleCountTest() {
        // TODO: test idleCount
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'dateCreated'
     */
    @Test
    public void dateCreatedTest() {
        // TODO: test dateCreated
    }

    /**
     * Test the property 'lastUpdated'
     */
    @Test
    public void lastUpdatedTest() {
        // TODO: test lastUpdated
    }

}
