/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ClusterTypesControllerTypes;
import org.openapitools.client.model.OptionType;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ClusterTypes
 */
public class ClusterTypesTest {
    private final ClusterTypes model = new ClusterTypes();

    /**
     * Model tests for ClusterTypes
     */
    @Test
    public void testClusterTypes() {
        // TODO: test ClusterTypes
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'deployTargetService'
     */
    @Test
    public void deployTargetServiceTest() {
        // TODO: test deployTargetService
    }

    /**
     * Test the property 'shortName'
     */
    @Test
    public void shortNameTest() {
        // TODO: test shortName
    }

    /**
     * Test the property 'providerType'
     */
    @Test
    public void providerTypeTest() {
        // TODO: test providerType
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'hostService'
     */
    @Test
    public void hostServiceTest() {
        // TODO: test hostService
    }

    /**
     * Test the property 'managed'
     */
    @Test
    public void managedTest() {
        // TODO: test managed
    }

    /**
     * Test the property 'hasMasters'
     */
    @Test
    public void hasMastersTest() {
        // TODO: test hasMasters
    }

    /**
     * Test the property 'hasWorkers'
     */
    @Test
    public void hasWorkersTest() {
        // TODO: test hasWorkers
    }

    /**
     * Test the property 'viewSet'
     */
    @Test
    public void viewSetTest() {
        // TODO: test viewSet
    }

    /**
     * Test the property 'imageCode'
     */
    @Test
    public void imageCodeTest() {
        // TODO: test imageCode
    }

    /**
     * Test the property 'kubeCtlLocal'
     */
    @Test
    public void kubeCtlLocalTest() {
        // TODO: test kubeCtlLocal
    }

    /**
     * Test the property 'hasDatastore'
     */
    @Test
    public void hasDatastoreTest() {
        // TODO: test hasDatastore
    }

    /**
     * Test the property 'supportsCloudScaling'
     */
    @Test
    public void supportsCloudScalingTest() {
        // TODO: test supportsCloudScaling
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'hasDefaultDataDisk'
     */
    @Test
    public void hasDefaultDataDiskTest() {
        // TODO: test hasDefaultDataDisk
    }

    /**
     * Test the property 'canManage'
     */
    @Test
    public void canManageTest() {
        // TODO: test canManage
    }

    /**
     * Test the property 'hasCluster'
     */
    @Test
    public void hasClusterTest() {
        // TODO: test hasCluster
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'optionTypes'
     */
    @Test
    public void optionTypesTest() {
        // TODO: test optionTypes
    }

    /**
     * Test the property 'controllerTypes'
     */
    @Test
    public void controllerTypesTest() {
        // TODO: test controllerTypes
    }

    /**
     * Test the property 'workerTypes'
     */
    @Test
    public void workerTypesTest() {
        // TODO: test workerTypes
    }

}
