/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for IdentitySourcesCustomSSOConfigConfig
 */
public class IdentitySourcesCustomSSOConfigConfigTest {
    private final IdentitySourcesCustomSSOConfigConfig model = new IdentitySourcesCustomSSOConfigConfig();

    /**
     * Model tests for IdentitySourcesCustomSSOConfigConfig
     */
    @Test
    public void testIdentitySourcesCustomSSOConfigConfig() {
        // TODO: test IdentitySourcesCustomSSOConfigConfig
    }

    /**
     * Test the property 'noninteractive'
     */
    @Test
    public void noninteractiveTest() {
        // TODO: test noninteractive
    }

    /**
     * Test the property 'loginUrl'
     */
    @Test
    public void loginUrlTest() {
        // TODO: test loginUrl
    }

    /**
     * Test the property 'logoutUrl'
     */
    @Test
    public void logoutUrlTest() {
        // TODO: test logoutUrl
    }

    /**
     * Test the property 'encryptionAlgo'
     */
    @Test
    public void encryptionAlgoTest() {
        // TODO: test encryptionAlgo
    }

    /**
     * Test the property 'encryptionKey'
     */
    @Test
    public void encryptionKeyTest() {
        // TODO: test encryptionKey
    }

    /**
     * Test the property 'requiredAttributeValue'
     */
    @Test
    public void requiredAttributeValueTest() {
        // TODO: test requiredAttributeValue
    }

}
