/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.HealthDatabaseInnodbStats;
import org.openapitools.client.model.HealthDatabaseScans;
import org.openapitools.client.model.HealthDatabaseSlowQueries;
import org.openapitools.client.model.HealthDatabaseStats;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for HealthDatabase
 */
public class HealthDatabaseTest {
    private final HealthDatabase model = new HealthDatabase();

    /**
     * Model tests for HealthDatabase
     */
    @Test
    public void testHealthDatabase() {
        // TODO: test HealthDatabase
    }

    /**
     * Test the property 'success'
     */
    @Test
    public void successTest() {
        // TODO: test success
    }

    /**
     * Test the property 'connectionList'
     */
    @Test
    public void connectionListTest() {
        // TODO: test connectionList
    }

    /**
     * Test the property 'busyConnections'
     */
    @Test
    public void busyConnectionsTest() {
        // TODO: test busyConnections
    }

    /**
     * Test the property 'maxConnections'
     */
    @Test
    public void maxConnectionsTest() {
        // TODO: test maxConnections
    }

    /**
     * Test the property 'maxUsedConnections'
     */
    @Test
    public void maxUsedConnectionsTest() {
        // TODO: test maxUsedConnections
    }

    /**
     * Test the property 'usedConnections'
     */
    @Test
    public void usedConnectionsTest() {
        // TODO: test usedConnections
    }

    /**
     * Test the property 'abortedConnections'
     */
    @Test
    public void abortedConnectionsTest() {
        // TODO: test abortedConnections
    }

    /**
     * Test the property 'innodbStatus'
     */
    @Test
    public void innodbStatusTest() {
        // TODO: test innodbStatus
    }

    /**
     * Test the property 'stats'
     */
    @Test
    public void statsTest() {
        // TODO: test stats
    }

    /**
     * Test the property 'scans'
     */
    @Test
    public void scansTest() {
        // TODO: test scans
    }

    /**
     * Test the property 'slowQueries'
     */
    @Test
    public void slowQueriesTest() {
        // TODO: test slowQueries
    }

    /**
     * Test the property 'innodbStats'
     */
    @Test
    public void innodbStatsTest() {
        // TODO: test innodbStats
    }

    /**
     * Test the property 'scanPercent'
     */
    @Test
    public void scanPercentTest() {
        // TODO: test scanPercent
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

}
