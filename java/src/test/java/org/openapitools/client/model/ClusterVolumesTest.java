/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.ApiBlueprintsIdUpdatePermissionsResourcePermissionSites;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ClusterVolumes
 */
public class ClusterVolumesTest {
    private final ClusterVolumes model = new ClusterVolumes();

    /**
     * Model tests for ClusterVolumes
     */
    @Test
    public void testClusterVolumes() {
        // TODO: test ClusterVolumes
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'internalId'
     */
    @Test
    public void internalIdTest() {
        // TODO: test internalId
    }

    /**
     * Test the property 'displayOrder'
     */
    @Test
    public void displayOrderTest() {
        // TODO: test displayOrder
    }

    /**
     * Test the property 'active'
     */
    @Test
    public void activeTest() {
        // TODO: test active
    }

    /**
     * Test the property 'usedStorage'
     */
    @Test
    public void usedStorageTest() {
        // TODO: test usedStorage
    }

    /**
     * Test the property 'provisionType'
     */
    @Test
    public void provisionTypeTest() {
        // TODO: test provisionType
    }

    /**
     * Test the property 'resizeable'
     */
    @Test
    public void resizeableTest() {
        // TODO: test resizeable
    }

    /**
     * Test the property 'online'
     */
    @Test
    public void onlineTest() {
        // TODO: test online
    }

    /**
     * Test the property 'deviceDisplayName'
     */
    @Test
    public void deviceDisplayNameTest() {
        // TODO: test deviceDisplayName
    }

    /**
     * Test the property 'refType'
     */
    @Test
    public void refTypeTest() {
        // TODO: test refType
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'externalId'
     */
    @Test
    public void externalIdTest() {
        // TODO: test externalId
    }

    /**
     * Test the property 'datastoreOption'
     */
    @Test
    public void datastoreOptionTest() {
        // TODO: test datastoreOption
    }

    /**
     * Test the property 'claimName'
     */
    @Test
    public void claimNameTest() {
        // TODO: test claimName
    }

    /**
     * Test the property 'volumeType'
     */
    @Test
    public void volumeTypeTest() {
        // TODO: test volumeType
    }

    /**
     * Test the property 'deviceName'
     */
    @Test
    public void deviceNameTest() {
        // TODO: test deviceName
    }

    /**
     * Test the property 'removable'
     */
    @Test
    public void removableTest() {
        // TODO: test removable
    }

    /**
     * Test the property 'poolName'
     */
    @Test
    public void poolNameTest() {
        // TODO: test poolName
    }

    /**
     * Test the property 'readOnly'
     */
    @Test
    public void readOnlyTest() {
        // TODO: test readOnly
    }

    /**
     * Test the property 'sourceId'
     */
    @Test
    public void sourceIdTest() {
        // TODO: test sourceId
    }

    /**
     * Test the property 'zoneId'
     */
    @Test
    public void zoneIdTest() {
        // TODO: test zoneId
    }

    /**
     * Test the property 'rootVolume'
     */
    @Test
    public void rootVolumeTest() {
        // TODO: test rootVolume
    }

    /**
     * Test the property 'refId'
     */
    @Test
    public void refIdTest() {
        // TODO: test refId
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'rawData'
     */
    @Test
    public void rawDataTest() {
        // TODO: test rawData
    }

    /**
     * Test the property 'maxStorage'
     */
    @Test
    public void maxStorageTest() {
        // TODO: test maxStorage
    }

    /**
     * Test the property 'account'
     */
    @Test
    public void accountTest() {
        // TODO: test account
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'datastore'
     */
    @Test
    public void datastoreTest() {
        // TODO: test datastore
    }

}
