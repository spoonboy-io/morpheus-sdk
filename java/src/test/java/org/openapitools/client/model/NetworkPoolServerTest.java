/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.Creds2;
import org.openapitools.client.model.InlineResponse20040AppDeployInstance;
import org.openapitools.client.model.NetworkPoolServerAccount;
import org.openapitools.client.model.NetworkPoolServerIntegration;
import org.openapitools.client.model.NetworkPoolServerType;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for NetworkPoolServer
 */
public class NetworkPoolServerTest {
    private final NetworkPoolServer model = new NetworkPoolServer();

    /**
     * Model tests for NetworkPoolServer
     */
    @Test
    public void testNetworkPoolServer() {
        // TODO: test NetworkPoolServer
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'serviceUrl'
     */
    @Test
    public void serviceUrlTest() {
        // TODO: test serviceUrl
    }

    /**
     * Test the property 'serviceHost'
     */
    @Test
    public void serviceHostTest() {
        // TODO: test serviceHost
    }

    /**
     * Test the property 'servicePort'
     */
    @Test
    public void servicePortTest() {
        // TODO: test servicePort
    }

    /**
     * Test the property 'serviceMode'
     */
    @Test
    public void serviceModeTest() {
        // TODO: test serviceMode
    }

    /**
     * Test the property 'serviceUsername'
     */
    @Test
    public void serviceUsernameTest() {
        // TODO: test serviceUsername
    }

    /**
     * Test the property 'servicePassword'
     */
    @Test
    public void servicePasswordTest() {
        // TODO: test servicePassword
    }

    /**
     * Test the property 'servicePasswordHash'
     */
    @Test
    public void servicePasswordHashTest() {
        // TODO: test servicePasswordHash
    }

    /**
     * Test the property 'serviceThrottleRate'
     */
    @Test
    public void serviceThrottleRateTest() {
        // TODO: test serviceThrottleRate
    }

    /**
     * Test the property 'ignoreSsl'
     */
    @Test
    public void ignoreSslTest() {
        // TODO: test ignoreSsl
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'statusMessage'
     */
    @Test
    public void statusMessageTest() {
        // TODO: test statusMessage
    }

    /**
     * Test the property 'statusDate'
     */
    @Test
    public void statusDateTest() {
        // TODO: test statusDate
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

    /**
     * Test the property 'networkFilter'
     */
    @Test
    public void networkFilterTest() {
        // TODO: test networkFilter
    }

    /**
     * Test the property 'zoneFilter'
     */
    @Test
    public void zoneFilterTest() {
        // TODO: test zoneFilter
    }

    /**
     * Test the property 'tenantMatch'
     */
    @Test
    public void tenantMatchTest() {
        // TODO: test tenantMatch
    }

    /**
     * Test the property 'dateCreated'
     */
    @Test
    public void dateCreatedTest() {
        // TODO: test dateCreated
    }

    /**
     * Test the property 'lastUpdated'
     */
    @Test
    public void lastUpdatedTest() {
        // TODO: test lastUpdated
    }

    /**
     * Test the property 'account'
     */
    @Test
    public void accountTest() {
        // TODO: test account
    }

    /**
     * Test the property 'integration'
     */
    @Test
    public void integrationTest() {
        // TODO: test integration
    }

    /**
     * Test the property 'pools'
     */
    @Test
    public void poolsTest() {
        // TODO: test pools
    }

    /**
     * Test the property 'credential'
     */
    @Test
    public void credentialTest() {
        // TODO: test credential
    }

}
