/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.1.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CatalogItemTypeBlueprintCreateBlueprint;
import org.openapitools.client.model.CatalogItemTypeBlueprintUpdate;
import org.openapitools.client.model.CatalogItemTypeInstanceUpdate;
import org.openapitools.client.model.CatalogItemTypeWorkflowUpdate;
import org.openapitools.client.model.UpdateBlueprintPermissionsRequestResourcePermissionSitesInner;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpdateCatalogItemTypeRequestCatalogItemType
 */
public class UpdateCatalogItemTypeRequestCatalogItemTypeTest {
    private final UpdateCatalogItemTypeRequestCatalogItemType model = new UpdateCatalogItemTypeRequestCatalogItemType();

    /**
     * Model tests for UpdateCatalogItemTypeRequestCatalogItemType
     */
    @Test
    public void testUpdateCatalogItemTypeRequestCatalogItemType() {
        // TODO: test UpdateCatalogItemTypeRequestCatalogItemType
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'visibility'
     */
    @Test
    public void visibilityTest() {
        // TODO: test visibility
    }

    /**
     * Test the property 'layoutCode'
     */
    @Test
    public void layoutCodeTest() {
        // TODO: test layoutCode
    }

    /**
     * Test the property 'iconPath'
     */
    @Test
    public void iconPathTest() {
        // TODO: test iconPath
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'featured'
     */
    @Test
    public void featuredTest() {
        // TODO: test featured
    }

    /**
     * Test the property 'allowQuantity'
     */
    @Test
    public void allowQuantityTest() {
        // TODO: test allowQuantity
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

    /**
     * Test the property 'optionTypes'
     */
    @Test
    public void optionTypesTest() {
        // TODO: test optionTypes
    }

    /**
     * Test the property 'blueprint'
     */
    @Test
    public void blueprintTest() {
        // TODO: test blueprint
    }

    /**
     * Test the property 'appSpec'
     */
    @Test
    public void appSpecTest() {
        // TODO: test appSpec
    }

    /**
     * Test the property 'workflow'
     */
    @Test
    public void workflowTest() {
        // TODO: test workflow
    }

    /**
     * Test the property 'context'
     */
    @Test
    public void contextTest() {
        // TODO: test context
    }

    /**
     * Test the property 'workflowConfig'
     */
    @Test
    public void workflowConfigTest() {
        // TODO: test workflowConfig
    }

}
