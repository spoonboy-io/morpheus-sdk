/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ServicePlanConfigRanges
 */
public class ServicePlanConfigRangesTest {
    private final ServicePlanConfigRanges model = new ServicePlanConfigRanges();

    /**
     * Model tests for ServicePlanConfigRanges
     */
    @Test
    public void testServicePlanConfigRanges() {
        // TODO: test ServicePlanConfigRanges
    }

    /**
     * Test the property 'minStorage'
     */
    @Test
    public void minStorageTest() {
        // TODO: test minStorage
    }

    /**
     * Test the property 'maxStorage'
     */
    @Test
    public void maxStorageTest() {
        // TODO: test maxStorage
    }

    /**
     * Test the property 'minPerDiskSize'
     */
    @Test
    public void minPerDiskSizeTest() {
        // TODO: test minPerDiskSize
    }

    /**
     * Test the property 'maxPerDiskSize'
     */
    @Test
    public void maxPerDiskSizeTest() {
        // TODO: test maxPerDiskSize
    }

    /**
     * Test the property 'minMemory'
     */
    @Test
    public void minMemoryTest() {
        // TODO: test minMemory
    }

    /**
     * Test the property 'maxMemory'
     */
    @Test
    public void maxMemoryTest() {
        // TODO: test maxMemory
    }

    /**
     * Test the property 'minCores'
     */
    @Test
    public void minCoresTest() {
        // TODO: test minCores
    }

    /**
     * Test the property 'maxCores'
     */
    @Test
    public void maxCoresTest() {
        // TODO: test maxCores
    }

    /**
     * Test the property 'minSockets'
     */
    @Test
    public void minSocketsTest() {
        // TODO: test minSockets
    }

    /**
     * Test the property 'maxSockets'
     */
    @Test
    public void maxSocketsTest() {
        // TODO: test maxSockets
    }

    /**
     * Test the property 'minCoresPerSocket'
     */
    @Test
    public void minCoresPerSocketTest() {
        // TODO: test minCoresPerSocket
    }

    /**
     * Test the property 'maxCoresPerSocket'
     */
    @Test
    public void maxCoresPerSocketTest() {
        // TODO: test maxCoresPerSocket
    }

}
