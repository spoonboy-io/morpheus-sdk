/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ApiBlueprintsIdUpdatePermissionsResourcePermissionSites;
import org.openapitools.client.model.ApiServicePlansServicePlanProvisionType;
import org.openapitools.client.model.ClusterLayoutCreateEnvironmentVariables;
import org.openapitools.client.model.ClusterLayoutCreateGroupType;
import org.openapitools.client.model.ClusterLayoutCreateMasters;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ClusterLayoutUpdate
 */
public class ClusterLayoutUpdateTest {
    private final ClusterLayoutUpdate model = new ClusterLayoutUpdate();

    /**
     * Model tests for ClusterLayoutUpdate
     */
    @Test
    public void testClusterLayoutUpdate() {
        // TODO: test ClusterLayoutUpdate
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'computeVersion'
     */
    @Test
    public void computeVersionTest() {
        // TODO: test computeVersion
    }

    /**
     * Test the property 'creatable'
     */
    @Test
    public void creatableTest() {
        // TODO: test creatable
    }

    /**
     * Test the property 'hasAutoScale'
     */
    @Test
    public void hasAutoScaleTest() {
        // TODO: test hasAutoScale
    }

    /**
     * Test the property 'installContainerRuntime'
     */
    @Test
    public void installContainerRuntimeTest() {
        // TODO: test installContainerRuntime
    }

    /**
     * Test the property 'memoryRequirement'
     */
    @Test
    public void memoryRequirementTest() {
        // TODO: test memoryRequirement
    }

    /**
     * Test the property 'groupType'
     */
    @Test
    public void groupTypeTest() {
        // TODO: test groupType
    }

    /**
     * Test the property 'provisionType'
     */
    @Test
    public void provisionTypeTest() {
        // TODO: test provisionType
    }

    /**
     * Test the property 'optionTypes'
     */
    @Test
    public void optionTypesTest() {
        // TODO: test optionTypes
    }

    /**
     * Test the property 'taskSets'
     */
    @Test
    public void taskSetsTest() {
        // TODO: test taskSets
    }

    /**
     * Test the property 'environmentVariables'
     */
    @Test
    public void environmentVariablesTest() {
        // TODO: test environmentVariables
    }

    /**
     * Test the property 'masters'
     */
    @Test
    public void mastersTest() {
        // TODO: test masters
    }

    /**
     * Test the property 'workers'
     */
    @Test
    public void workersTest() {
        // TODO: test workers
    }

}
