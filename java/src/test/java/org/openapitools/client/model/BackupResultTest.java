/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.BackupJobBackups;
import org.openapitools.client.model.InlineResponse200108NetworkFloatingIpCreatedBy;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for BackupResult
 */
public class BackupResultTest {
    private final BackupResult model = new BackupResult();

    /**
     * Model tests for BackupResult
     */
    @Test
    public void testBackupResult() {
        // TODO: test BackupResult
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'backup'
     */
    @Test
    public void backupTest() {
        // TODO: test backup
    }

    /**
     * Test the property 'backupSetId'
     */
    @Test
    public void backupSetIdTest() {
        // TODO: test backupSetId
    }

    /**
     * Test the property 'instanceId'
     */
    @Test
    public void instanceIdTest() {
        // TODO: test instanceId
    }

    /**
     * Test the property 'containerId'
     */
    @Test
    public void containerIdTest() {
        // TODO: test containerId
    }

    /**
     * Test the property 'serverId'
     */
    @Test
    public void serverIdTest() {
        // TODO: test serverId
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'errorMessage'
     */
    @Test
    public void errorMessageTest() {
        // TODO: test errorMessage
    }

    /**
     * Test the property 'startDate'
     */
    @Test
    public void startDateTest() {
        // TODO: test startDate
    }

    /**
     * Test the property 'endDate'
     */
    @Test
    public void endDateTest() {
        // TODO: test endDate
    }

    /**
     * Test the property 'durationMillis'
     */
    @Test
    public void durationMillisTest() {
        // TODO: test durationMillis
    }

    /**
     * Test the property 'sizeInBytes'
     */
    @Test
    public void sizeInBytesTest() {
        // TODO: test sizeInBytes
    }

    /**
     * Test the property 'sizeInMb'
     */
    @Test
    public void sizeInMbTest() {
        // TODO: test sizeInMb
    }

    /**
     * Test the property 'volumePath'
     */
    @Test
    public void volumePathTest() {
        // TODO: test volumePath
    }

    /**
     * Test the property 'resultArchive'
     */
    @Test
    public void resultArchiveTest() {
        // TODO: test resultArchive
    }

    /**
     * Test the property 'resultPath'
     */
    @Test
    public void resultPathTest() {
        // TODO: test resultPath
    }

    /**
     * Test the property 'externalId'
     */
    @Test
    public void externalIdTest() {
        // TODO: test externalId
    }

    /**
     * Test the property 'snapshotId'
     */
    @Test
    public void snapshotIdTest() {
        // TODO: test snapshotId
    }

    /**
     * Test the property 'snapshotExternalId'
     */
    @Test
    public void snapshotExternalIdTest() {
        // TODO: test snapshotExternalId
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'dateCreated'
     */
    @Test
    public void dateCreatedTest() {
        // TODO: test dateCreated
    }

    /**
     * Test the property 'lastUpdated'
     */
    @Test
    public void lastUpdatedTest() {
        // TODO: test lastUpdated
    }

}
