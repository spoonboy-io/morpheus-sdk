/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.openapitools.client.model.ApiPricesPriceAccount;
import org.openapitools.client.model.ApiPricesPriceDatastore;
import org.openapitools.client.model.ApiPricesPriceVolumeType;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ApiPricesIdPrice
 */
public class ApiPricesIdPriceTest {
    private final ApiPricesIdPrice model = new ApiPricesIdPrice();

    /**
     * Model tests for ApiPricesIdPrice
     */
    @Test
    public void testApiPricesIdPrice() {
        // TODO: test ApiPricesIdPrice
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'account'
     */
    @Test
    public void accountTest() {
        // TODO: test account
    }

    /**
     * Test the property 'priceType'
     */
    @Test
    public void priceTypeTest() {
        // TODO: test priceType
    }

    /**
     * Test the property 'priceUnit'
     */
    @Test
    public void priceUnitTest() {
        // TODO: test priceUnit
    }

    /**
     * Test the property 'incurCharges'
     */
    @Test
    public void incurChargesTest() {
        // TODO: test incurCharges
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'cost'
     */
    @Test
    public void costTest() {
        // TODO: test cost
    }

    /**
     * Test the property 'markupType'
     */
    @Test
    public void markupTypeTest() {
        // TODO: test markupType
    }

    /**
     * Test the property 'markup'
     */
    @Test
    public void markupTest() {
        // TODO: test markup
    }

    /**
     * Test the property 'markupPercent'
     */
    @Test
    public void markupPercentTest() {
        // TODO: test markupPercent
    }

    /**
     * Test the property 'customPrice'
     */
    @Test
    public void customPriceTest() {
        // TODO: test customPrice
    }

    /**
     * Test the property 'platform'
     */
    @Test
    public void platformTest() {
        // TODO: test platform
    }

    /**
     * Test the property 'software'
     */
    @Test
    public void softwareTest() {
        // TODO: test software
    }

    /**
     * Test the property 'volumeType'
     */
    @Test
    public void volumeTypeTest() {
        // TODO: test volumeType
    }

    /**
     * Test the property 'datastore'
     */
    @Test
    public void datastoreTest() {
        // TODO: test datastore
    }

    /**
     * Test the property 'crossCloudApply'
     */
    @Test
    public void crossCloudApplyTest() {
        // TODO: test crossCloudApply
    }

}
