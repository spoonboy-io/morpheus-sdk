/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.OptionType;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for InlineResponse20095NetworkRouterType
 */
public class InlineResponse20095NetworkRouterTypeTest {
    private final InlineResponse20095NetworkRouterType model = new InlineResponse20095NetworkRouterType();

    /**
     * Model tests for InlineResponse20095NetworkRouterType
     */
    @Test
    public void testInlineResponse20095NetworkRouterType() {
        // TODO: test InlineResponse20095NetworkRouterType
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'creatable'
     */
    @Test
    public void creatableTest() {
        // TODO: test creatable
    }

    /**
     * Test the property 'selectable'
     */
    @Test
    public void selectableTest() {
        // TODO: test selectable
    }

    /**
     * Test the property 'hasFirewall'
     */
    @Test
    public void hasFirewallTest() {
        // TODO: test hasFirewall
    }

    /**
     * Test the property 'hasDhcp'
     */
    @Test
    public void hasDhcpTest() {
        // TODO: test hasDhcp
    }

    /**
     * Test the property 'hasRouting'
     */
    @Test
    public void hasRoutingTest() {
        // TODO: test hasRouting
    }

    /**
     * Test the property 'hasNat'
     */
    @Test
    public void hasNatTest() {
        // TODO: test hasNat
    }

    /**
     * Test the property 'hasNetworkServer'
     */
    @Test
    public void hasNetworkServerTest() {
        // TODO: test hasNetworkServer
    }

    /**
     * Test the property 'hasFirewallGroups'
     */
    @Test
    public void hasFirewallGroupsTest() {
        // TODO: test hasFirewallGroups
    }

    /**
     * Test the property 'hasSecurityGroupPriority'
     */
    @Test
    public void hasSecurityGroupPriorityTest() {
        // TODO: test hasSecurityGroupPriority
    }

    /**
     * Test the property 'optionTypes'
     */
    @Test
    public void optionTypesTest() {
        // TODO: test optionTypes
    }

    /**
     * Test the property 'ruleOptionTypes'
     */
    @Test
    public void ruleOptionTypesTest() {
        // TODO: test ruleOptionTypes
    }

    /**
     * Test the property 'firewallGroupOptionTypes'
     */
    @Test
    public void firewallGroupOptionTypesTest() {
        // TODO: test firewallGroupOptionTypes
    }

    /**
     * Test the property 'natOptionTypes'
     */
    @Test
    public void natOptionTypesTest() {
        // TODO: test natOptionTypes
    }

}
