/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.AnyOfinstancesConfigAzureinstancesConfigVMWareinstancesConfigGCPinstancesConfigAWSobject;
import org.openapitools.client.model.ApiServersIdMakeManagedServerTags;
import org.openapitools.client.model.CatalogItemTypeInstanceScribeCloud;
import org.openapitools.client.model.CatalogItemTypeInstanceScribeGroup;
import org.openapitools.client.model.CatalogItemTypeInstanceScribeLayout;
import org.openapitools.client.model.CatalogItemTypeInstanceScribePlan;
import org.openapitools.client.model.CatalogItemTypeInstanceScribePorts;
import org.openapitools.client.model.CatalogItemTypeInstanceScribeSecurityGroups;
import org.openapitools.client.model.InstanceCreateNetwork;
import org.openapitools.client.model.InstanceCreateVolume;
import org.openapitools.client.model.ServicePlanOptions;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for CatalogItemTypeInstanceScribe
 */
public class CatalogItemTypeInstanceScribeTest {
    private final CatalogItemTypeInstanceScribe model = new CatalogItemTypeInstanceScribe();

    /**
     * Model tests for CatalogItemTypeInstanceScribe
     */
    @Test
    public void testCatalogItemTypeInstanceScribe() {
        // TODO: test CatalogItemTypeInstanceScribe
    }

    /**
     * Test the property 'group'
     */
    @Test
    public void groupTest() {
        // TODO: test group
    }

    /**
     * Test the property 'cloud'
     */
    @Test
    public void cloudTest() {
        // TODO: test cloud
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

    /**
     * Test the property 'volumes'
     */
    @Test
    public void volumesTest() {
        // TODO: test volumes
    }

    /**
     * Test the property 'hostName'
     */
    @Test
    public void hostNameTest() {
        // TODO: test hostName
    }

    /**
     * Test the property 'environment'
     */
    @Test
    public void environmentTest() {
        // TODO: test environment
    }

    /**
     * Test the property 'layout'
     */
    @Test
    public void layoutTest() {
        // TODO: test layout
    }

    /**
     * Test the property 'plan'
     */
    @Test
    public void planTest() {
        // TODO: test plan
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'evars'
     */
    @Test
    public void evarsTest() {
        // TODO: test evars
    }

    /**
     * Test the property 'servicePlanOptions'
     */
    @Test
    public void servicePlanOptionsTest() {
        // TODO: test servicePlanOptions
    }

    /**
     * Test the property 'securityGroups'
     */
    @Test
    public void securityGroupsTest() {
        // TODO: test securityGroups
    }

    /**
     * Test the property 'networkInterfaces'
     */
    @Test
    public void networkInterfacesTest() {
        // TODO: test networkInterfaces
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'ports'
     */
    @Test
    public void portsTest() {
        // TODO: test ports
    }

    /**
     * Test the property 'taskSetId'
     */
    @Test
    public void taskSetIdTest() {
        // TODO: test taskSetId
    }

    /**
     * Test the property 'taskSetName'
     */
    @Test
    public void taskSetNameTest() {
        // TODO: test taskSetName
    }

}
