/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ClusterPermissions;
import org.openapitools.client.model.ClustersLayout;
import org.openapitools.client.model.ClustersServers;
import org.openapitools.client.model.ClustersWorkerStats;
import org.openapitools.client.model.ClustersZone;
import org.openapitools.client.model.InlineResponse200107NetworkPoolCreatedBy;
import org.openapitools.client.model.InlineResponse20040AppDeployInstance;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Cluster
 */
public class ClusterTest {
    private final Cluster model = new Cluster();

    /**
     * Model tests for Cluster
     */
    @Test
    public void testCluster() {
        // TODO: test Cluster
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'visibility'
     */
    @Test
    public void visibilityTest() {
        // TODO: test visibility
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'location'
     */
    @Test
    public void locationTest() {
        // TODO: test location
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'serviceUrl'
     */
    @Test
    public void serviceUrlTest() {
        // TODO: test serviceUrl
    }

    /**
     * Test the property 'serviceHost'
     */
    @Test
    public void serviceHostTest() {
        // TODO: test serviceHost
    }

    /**
     * Test the property 'servicePath'
     */
    @Test
    public void servicePathTest() {
        // TODO: test servicePath
    }

    /**
     * Test the property 'serviceHostname'
     */
    @Test
    public void serviceHostnameTest() {
        // TODO: test serviceHostname
    }

    /**
     * Test the property 'servicePort'
     */
    @Test
    public void servicePortTest() {
        // TODO: test servicePort
    }

    /**
     * Test the property 'serviceUsername'
     */
    @Test
    public void serviceUsernameTest() {
        // TODO: test serviceUsername
    }

    /**
     * Test the property 'servicePassword'
     */
    @Test
    public void servicePasswordTest() {
        // TODO: test servicePassword
    }

    /**
     * Test the property 'servicePasswordHash'
     */
    @Test
    public void servicePasswordHashTest() {
        // TODO: test servicePasswordHash
    }

    /**
     * Test the property 'serviceToken'
     */
    @Test
    public void serviceTokenTest() {
        // TODO: test serviceToken
    }

    /**
     * Test the property 'serviceTokenHash'
     */
    @Test
    public void serviceTokenHashTest() {
        // TODO: test serviceTokenHash
    }

    /**
     * Test the property 'serviceAccess'
     */
    @Test
    public void serviceAccessTest() {
        // TODO: test serviceAccess
    }

    /**
     * Test the property 'serviceAccessHash'
     */
    @Test
    public void serviceAccessHashTest() {
        // TODO: test serviceAccessHash
    }

    /**
     * Test the property 'serviceCert'
     */
    @Test
    public void serviceCertTest() {
        // TODO: test serviceCert
    }

    /**
     * Test the property 'serviceCertHash'
     */
    @Test
    public void serviceCertHashTest() {
        // TODO: test serviceCertHash
    }

    /**
     * Test the property 'serviceVersion'
     */
    @Test
    public void serviceVersionTest() {
        // TODO: test serviceVersion
    }

    /**
     * Test the property 'searchDomains'
     */
    @Test
    public void searchDomainsTest() {
        // TODO: test searchDomains
    }

    /**
     * Test the property 'enableInternalDns'
     */
    @Test
    public void enableInternalDnsTest() {
        // TODO: test enableInternalDns
    }

    /**
     * Test the property 'internalId'
     */
    @Test
    public void internalIdTest() {
        // TODO: test internalId
    }

    /**
     * Test the property 'externalId'
     */
    @Test
    public void externalIdTest() {
        // TODO: test externalId
    }

    /**
     * Test the property 'datacenterId'
     */
    @Test
    public void datacenterIdTest() {
        // TODO: test datacenterId
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'statusDate'
     */
    @Test
    public void statusDateTest() {
        // TODO: test statusDate
    }

    /**
     * Test the property 'statusMessage'
     */
    @Test
    public void statusMessageTest() {
        // TODO: test statusMessage
    }

    /**
     * Test the property 'inventoryLevel'
     */
    @Test
    public void inventoryLevelTest() {
        // TODO: test inventoryLevel
    }

    /**
     * Test the property 'lastSync'
     */
    @Test
    public void lastSyncTest() {
        // TODO: test lastSync
    }

    /**
     * Test the property 'nextRunDate'
     */
    @Test
    public void nextRunDateTest() {
        // TODO: test nextRunDate
    }

    /**
     * Test the property 'lastSyncDuration'
     */
    @Test
    public void lastSyncDurationTest() {
        // TODO: test lastSyncDuration
    }

    /**
     * Test the property 'dateCreated'
     */
    @Test
    public void dateCreatedTest() {
        // TODO: test dateCreated
    }

    /**
     * Test the property 'lastUpdated'
     */
    @Test
    public void lastUpdatedTest() {
        // TODO: test lastUpdated
    }

    /**
     * Test the property 'managed'
     */
    @Test
    public void managedTest() {
        // TODO: test managed
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'serviceEntry'
     */
    @Test
    public void serviceEntryTest() {
        // TODO: test serviceEntry
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'userGroup'
     */
    @Test
    public void userGroupTest() {
        // TODO: test userGroup
    }

    /**
     * Test the property 'layout'
     */
    @Test
    public void layoutTest() {
        // TODO: test layout
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'servers'
     */
    @Test
    public void serversTest() {
        // TODO: test servers
    }

    /**
     * Test the property 'accounts'
     */
    @Test
    public void accountsTest() {
        // TODO: test accounts
    }

    /**
     * Test the property 'integrations'
     */
    @Test
    public void integrationsTest() {
        // TODO: test integrations
    }

    /**
     * Test the property 'site'
     */
    @Test
    public void siteTest() {
        // TODO: test site
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'zone'
     */
    @Test
    public void zoneTest() {
        // TODO: test zone
    }

    /**
     * Test the property 'workerStats'
     */
    @Test
    public void workerStatsTest() {
        // TODO: test workerStats
    }

    /**
     * Test the property 'containersCount'
     */
    @Test
    public void containersCountTest() {
        // TODO: test containersCount
    }

    /**
     * Test the property 'deploymentsCount'
     */
    @Test
    public void deploymentsCountTest() {
        // TODO: test deploymentsCount
    }

    /**
     * Test the property 'podsCount'
     */
    @Test
    public void podsCountTest() {
        // TODO: test podsCount
    }

    /**
     * Test the property 'jobsCount'
     */
    @Test
    public void jobsCountTest() {
        // TODO: test jobsCount
    }

    /**
     * Test the property 'volumesCount'
     */
    @Test
    public void volumesCountTest() {
        // TODO: test volumesCount
    }

    /**
     * Test the property 'namespacesCount'
     */
    @Test
    public void namespacesCountTest() {
        // TODO: test namespacesCount
    }

    /**
     * Test the property 'workersCount'
     */
    @Test
    public void workersCountTest() {
        // TODO: test workersCount
    }

    /**
     * Test the property 'servicesCount'
     */
    @Test
    public void servicesCountTest() {
        // TODO: test servicesCount
    }

    /**
     * Test the property 'permissions'
     */
    @Test
    public void permissionsTest() {
        // TODO: test permissions
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

}
