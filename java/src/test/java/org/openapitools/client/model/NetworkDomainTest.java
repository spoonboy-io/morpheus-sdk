/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.InlineResponse20040AppDeployInstance;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for NetworkDomain
 */
public class NetworkDomainTest {
    private final NetworkDomain model = new NetworkDomain();

    /**
     * Model tests for NetworkDomain
     */
    @Test
    public void testNetworkDomain() {
        // TODO: test NetworkDomain
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'active'
     */
    @Test
    public void activeTest() {
        // TODO: test active
    }

    /**
     * Test the property 'fqdn'
     */
    @Test
    public void fqdnTest() {
        // TODO: test fqdn
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'visibility'
     */
    @Test
    public void visibilityTest() {
        // TODO: test visibility
    }

    /**
     * Test the property 'domainController'
     */
    @Test
    public void domainControllerTest() {
        // TODO: test domainController
    }

    /**
     * Test the property 'publicZone'
     */
    @Test
    public void publicZoneTest() {
        // TODO: test publicZone
    }

    /**
     * Test the property 'domainUsername'
     */
    @Test
    public void domainUsernameTest() {
        // TODO: test domainUsername
    }

    /**
     * Test the property 'domainPassword'
     */
    @Test
    public void domainPasswordTest() {
        // TODO: test domainPassword
    }

    /**
     * Test the property 'refType'
     */
    @Test
    public void refTypeTest() {
        // TODO: test refType
    }

    /**
     * Test the property 'refId'
     */
    @Test
    public void refIdTest() {
        // TODO: test refId
    }

    /**
     * Test the property 'refSource'
     */
    @Test
    public void refSourceTest() {
        // TODO: test refSource
    }

    /**
     * Test the property 'internalId'
     */
    @Test
    public void internalIdTest() {
        // TODO: test internalId
    }

    /**
     * Test the property 'ouPath'
     */
    @Test
    public void ouPathTest() {
        // TODO: test ouPath
    }

    /**
     * Test the property 'dcServer'
     */
    @Test
    public void dcServerTest() {
        // TODO: test dcServer
    }

    /**
     * Test the property 'zoneType'
     */
    @Test
    public void zoneTypeTest() {
        // TODO: test zoneType
    }

    /**
     * Test the property 'dnssec'
     */
    @Test
    public void dnssecTest() {
        // TODO: test dnssec
    }

    /**
     * Test the property 'domainSerial'
     */
    @Test
    public void domainSerialTest() {
        // TODO: test domainSerial
    }

    /**
     * Test the property 'account'
     */
    @Test
    public void accountTest() {
        // TODO: test account
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

}
