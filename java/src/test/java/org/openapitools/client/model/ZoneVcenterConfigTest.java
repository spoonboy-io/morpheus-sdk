/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.ZoneVcenterConfigNetworkServer;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ZoneVcenterConfig
 */
public class ZoneVcenterConfigTest {
    private final ZoneVcenterConfig model = new ZoneVcenterConfig();

    /**
     * Model tests for ZoneVcenterConfig
     */
    @Test
    public void testZoneVcenterConfig() {
        // TODO: test ZoneVcenterConfig
    }

    /**
     * Test the property 'apiUrl'
     */
    @Test
    public void apiUrlTest() {
        // TODO: test apiUrl
    }

    /**
     * Test the property 'username'
     */
    @Test
    public void usernameTest() {
        // TODO: test username
    }

    /**
     * Test the property 'password'
     */
    @Test
    public void passwordTest() {
        // TODO: test password
    }

    /**
     * Test the property 'datacenter'
     */
    @Test
    public void datacenterTest() {
        // TODO: test datacenter
    }

    /**
     * Test the property 'cluster'
     */
    @Test
    public void clusterTest() {
        // TODO: test cluster
    }

    /**
     * Test the property 'resourcePoolId'
     */
    @Test
    public void resourcePoolIdTest() {
        // TODO: test resourcePoolId
    }

    /**
     * Test the property 'resourcePool'
     */
    @Test
    public void resourcePoolTest() {
        // TODO: test resourcePool
    }

    /**
     * Test the property 'rpcMode'
     */
    @Test
    public void rpcModeTest() {
        // TODO: test rpcMode
    }

    /**
     * Test the property 'hideHostSelection'
     */
    @Test
    public void hideHostSelectionTest() {
        // TODO: test hideHostSelection
    }

    /**
     * Test the property 'hideHostSelection'
     */
    @Test
    public void hideHostSelectionTest() {
        // TODO: test hideHostSelection
    }

    /**
     * Test the property 'importExisting'
     */
    @Test
    public void importExistingTest() {
        // TODO: test importExisting
    }

    /**
     * Test the property 'importExisting'
     */
    @Test
    public void importExistingTest() {
        // TODO: test importExisting
    }

    /**
     * Test the property 'enableVnc'
     */
    @Test
    public void enableVncTest() {
        // TODO: test enableVnc
    }

    /**
     * Test the property 'enableVnc'
     */
    @Test
    public void enableVncTest() {
        // TODO: test enableVnc
    }

    /**
     * Test the property 'enableDiskTypeSelection'
     */
    @Test
    public void enableDiskTypeSelectionTest() {
        // TODO: test enableDiskTypeSelection
    }

    /**
     * Test the property 'enableNetworkTypeSelection'
     */
    @Test
    public void enableNetworkTypeSelectionTest() {
        // TODO: test enableNetworkTypeSelection
    }

    /**
     * Test the property 'diskStorageType'
     */
    @Test
    public void diskStorageTypeTest() {
        // TODO: test diskStorageType
    }

    /**
     * Test the property 'applianceUrl'
     */
    @Test
    public void applianceUrlTest() {
        // TODO: test applianceUrl
    }

    /**
     * Test the property 'datacenterName'
     */
    @Test
    public void datacenterNameTest() {
        // TODO: test datacenterName
    }

    /**
     * Test the property 'networkServerId'
     */
    @Test
    public void networkServerIdTest() {
        // TODO: test networkServerId
    }

    /**
     * Test the property 'networkServer'
     */
    @Test
    public void networkServerTest() {
        // TODO: test networkServer
    }

    /**
     * Test the property 'securityMode'
     */
    @Test
    public void securityModeTest() {
        // TODO: test securityMode
    }

    /**
     * Test the property 'certificateProvider'
     */
    @Test
    public void certificateProviderTest() {
        // TODO: test certificateProvider
    }

    /**
     * Test the property 'backupMode'
     */
    @Test
    public void backupModeTest() {
        // TODO: test backupMode
    }

    /**
     * Test the property 'replicationMode'
     */
    @Test
    public void replicationModeTest() {
        // TODO: test replicationMode
    }

    /**
     * Test the property 'dnsIntegrationId'
     */
    @Test
    public void dnsIntegrationIdTest() {
        // TODO: test dnsIntegrationId
    }

    /**
     * Test the property 'configCmdbId'
     */
    @Test
    public void configCmdbIdTest() {
        // TODO: test configCmdbId
    }

    /**
     * Test the property 'configManagementId'
     */
    @Test
    public void configManagementIdTest() {
        // TODO: test configManagementId
    }

    /**
     * Test the property 'configCmId'
     */
    @Test
    public void configCmIdTest() {
        // TODO: test configCmId
    }

    /**
     * Test the property 'securityServer'
     */
    @Test
    public void securityServerTest() {
        // TODO: test securityServer
    }

    /**
     * Test the property 'serviceRegistryId'
     */
    @Test
    public void serviceRegistryIdTest() {
        // TODO: test serviceRegistryId
    }

    /**
     * Test the property 'enableDiskTypeSelection'
     */
    @Test
    public void enableDiskTypeSelectionTest() {
        // TODO: test enableDiskTypeSelection
    }

    /**
     * Test the property 'kubeUrl'
     */
    @Test
    public void kubeUrlTest() {
        // TODO: test kubeUrl
    }

    /**
     * Test the property 'apiVersion'
     */
    @Test
    public void apiVersionTest() {
        // TODO: test apiVersion
    }

    /**
     * Test the property 'datacenterId'
     */
    @Test
    public void datacenterIdTest() {
        // TODO: test datacenterId
    }

    /**
     * Test the property 'configCmdbDiscovery'
     */
    @Test
    public void configCmdbDiscoveryTest() {
        // TODO: test configCmdbDiscovery
    }

    /**
     * Test the property 'distributedWorkerId'
     */
    @Test
    public void distributedWorkerIdTest() {
        // TODO: test distributedWorkerId
    }

    /**
     * Test the property 'passwordHash'
     */
    @Test
    public void passwordHashTest() {
        // TODO: test passwordHash
    }

}
