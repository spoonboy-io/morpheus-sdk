/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for HealthDatabaseInnodbStats
 */
public class HealthDatabaseInnodbStatsTest {
    private final HealthDatabaseInnodbStats model = new HealthDatabaseInnodbStats();

    /**
     * Model tests for HealthDatabaseInnodbStats
     */
    @Test
    public void testHealthDatabaseInnodbStats() {
        // TODO: test HealthDatabaseInnodbStats
    }

    /**
     * Test the property 'largeMemory'
     */
    @Test
    public void largeMemoryTest() {
        // TODO: test largeMemory
    }

    /**
     * Test the property 'dictionaryMemory'
     */
    @Test
    public void dictionaryMemoryTest() {
        // TODO: test dictionaryMemory
    }

    /**
     * Test the property 'bufferPoolSize'
     */
    @Test
    public void bufferPoolSizeTest() {
        // TODO: test bufferPoolSize
    }

    /**
     * Test the property 'freeBuffers'
     */
    @Test
    public void freeBuffersTest() {
        // TODO: test freeBuffers
    }

    /**
     * Test the property 'databasePages'
     */
    @Test
    public void databasePagesTest() {
        // TODO: test databasePages
    }

    /**
     * Test the property 'oldPages'
     */
    @Test
    public void oldPagesTest() {
        // TODO: test oldPages
    }

    /**
     * Test the property 'pendingReads'
     */
    @Test
    public void pendingReadsTest() {
        // TODO: test pendingReads
    }

    /**
     * Test the property 'insertsPerSecond'
     */
    @Test
    public void insertsPerSecondTest() {
        // TODO: test insertsPerSecond
    }

    /**
     * Test the property 'updatesPerSecond'
     */
    @Test
    public void updatesPerSecondTest() {
        // TODO: test updatesPerSecond
    }

    /**
     * Test the property 'deletesPerSecond'
     */
    @Test
    public void deletesPerSecondTest() {
        // TODO: test deletesPerSecond
    }

    /**
     * Test the property 'readsPerSecond'
     */
    @Test
    public void readsPerSecondTest() {
        // TODO: test readsPerSecond
    }

    /**
     * Test the property 'bufferHitRate'
     */
    @Test
    public void bufferHitRateTest() {
        // TODO: test bufferHitRate
    }

}
