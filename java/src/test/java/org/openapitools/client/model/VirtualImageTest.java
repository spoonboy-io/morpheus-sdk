/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.InlineResponse20040AppDeployInstance;
import org.openapitools.client.model.VirtualImageConfig;
import org.openapitools.client.model.VirtualImageOsType;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for VirtualImage
 */
public class VirtualImageTest {
    private final VirtualImage model = new VirtualImage();

    /**
     * Model tests for VirtualImage
     */
    @Test
    public void testVirtualImage() {
        // TODO: test VirtualImage
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'ownerId'
     */
    @Test
    public void ownerIdTest() {
        // TODO: test ownerId
    }

    /**
     * Test the property 'tenant'
     */
    @Test
    public void tenantTest() {
        // TODO: test tenant
    }

    /**
     * Test the property 'imageType'
     */
    @Test
    public void imageTypeTest() {
        // TODO: test imageType
    }

    /**
     * Test the property 'userUploaded'
     */
    @Test
    public void userUploadedTest() {
        // TODO: test userUploaded
    }

    /**
     * Test the property 'userDefined'
     */
    @Test
    public void userDefinedTest() {
        // TODO: test userDefined
    }

    /**
     * Test the property 'systemImage'
     */
    @Test
    public void systemImageTest() {
        // TODO: test systemImage
    }

    /**
     * Test the property 'isCloudInit'
     */
    @Test
    public void isCloudInitTest() {
        // TODO: test isCloudInit
    }

    /**
     * Test the property 'sshUsername'
     */
    @Test
    public void sshUsernameTest() {
        // TODO: test sshUsername
    }

    /**
     * Test the property 'sshPassword'
     */
    @Test
    public void sshPasswordTest() {
        // TODO: test sshPassword
    }

    /**
     * Test the property 'sshPasswordHash'
     */
    @Test
    public void sshPasswordHashTest() {
        // TODO: test sshPasswordHash
    }

    /**
     * Test the property 'sshKey'
     */
    @Test
    public void sshKeyTest() {
        // TODO: test sshKey
    }

    /**
     * Test the property 'osType'
     */
    @Test
    public void osTypeTest() {
        // TODO: test osType
    }

    /**
     * Test the property 'minRam'
     */
    @Test
    public void minRamTest() {
        // TODO: test minRam
    }

    /**
     * Test the property 'minRamGB'
     */
    @Test
    public void minRamGBTest() {
        // TODO: test minRamGB
    }

    /**
     * Test the property 'minDisk'
     */
    @Test
    public void minDiskTest() {
        // TODO: test minDisk
    }

    /**
     * Test the property 'minDiskGB'
     */
    @Test
    public void minDiskGBTest() {
        // TODO: test minDiskGB
    }

    /**
     * Test the property 'rawSize'
     */
    @Test
    public void rawSizeTest() {
        // TODO: test rawSize
    }

    /**
     * Test the property 'rawSizeGB'
     */
    @Test
    public void rawSizeGBTest() {
        // TODO: test rawSizeGB
    }

    /**
     * Test the property 'trialVersion'
     */
    @Test
    public void trialVersionTest() {
        // TODO: test trialVersion
    }

    /**
     * Test the property 'virtioSupported'
     */
    @Test
    public void virtioSupportedTest() {
        // TODO: test virtioSupported
    }

    /**
     * Test the property 'uefi'
     */
    @Test
    public void uefiTest() {
        // TODO: test uefi
    }

    /**
     * Test the property 'isAutoJoinDomain'
     */
    @Test
    public void isAutoJoinDomainTest() {
        // TODO: test isAutoJoinDomain
    }

    /**
     * Test the property 'vmToolsInstalled'
     */
    @Test
    public void vmToolsInstalledTest() {
        // TODO: test vmToolsInstalled
    }

    /**
     * Test the property 'installAgent'
     */
    @Test
    public void installAgentTest() {
        // TODO: test installAgent
    }

    /**
     * Test the property 'isForceCustomization'
     */
    @Test
    public void isForceCustomizationTest() {
        // TODO: test isForceCustomization
    }

    /**
     * Test the property 'isSysprep'
     */
    @Test
    public void isSysprepTest() {
        // TODO: test isSysprep
    }

    /**
     * Test the property 'fipsEnabled'
     */
    @Test
    public void fipsEnabledTest() {
        // TODO: test fipsEnabled
    }

    /**
     * Test the property 'userData'
     */
    @Test
    public void userDataTest() {
        // TODO: test userData
    }

    /**
     * Test the property 'consoleKeymap'
     */
    @Test
    public void consoleKeymapTest() {
        // TODO: test consoleKeymap
    }

    /**
     * Test the property 'storageProvider'
     */
    @Test
    public void storageProviderTest() {
        // TODO: test storageProvider
    }

    /**
     * Test the property 'externalId'
     */
    @Test
    public void externalIdTest() {
        // TODO: test externalId
    }

    /**
     * Test the property 'visibility'
     */
    @Test
    public void visibilityTest() {
        // TODO: test visibility
    }

    /**
     * Test the property 'accounts'
     */
    @Test
    public void accountsTest() {
        // TODO: test accounts
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

    /**
     * Test the property 'volumes'
     */
    @Test
    public void volumesTest() {
        // TODO: test volumes
    }

    /**
     * Test the property 'storageControllers'
     */
    @Test
    public void storageControllersTest() {
        // TODO: test storageControllers
    }

    /**
     * Test the property 'networkInterfaces'
     */
    @Test
    public void networkInterfacesTest() {
        // TODO: test networkInterfaces
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'locations'
     */
    @Test
    public void locationsTest() {
        // TODO: test locations
    }

    /**
     * Test the property 'dateCreated'
     */
    @Test
    public void dateCreatedTest() {
        // TODO: test dateCreated
    }

    /**
     * Test the property 'lastUpdated'
     */
    @Test
    public void lastUpdatedTest() {
        // TODO: test lastUpdated
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

}
