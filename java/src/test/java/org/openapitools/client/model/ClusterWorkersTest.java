/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ApiServersIdMakeManagedServerTags;
import org.openapitools.client.model.ClusterLayoutComputeServerType;
import org.openapitools.client.model.ClusterMastersInterfaces;
import org.openapitools.client.model.ClusterMastersStats;
import org.openapitools.client.model.ClusterMastersVolumes;
import org.openapitools.client.model.InlineResponse200107NetworkPoolCreatedBy;
import org.openapitools.client.model.InlineResponse20040AppDeployInstance;
import org.openapitools.client.model.InlineResponse20079LoadBalancerMonitorLoadBalancerType;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ClusterWorkers
 */
public class ClusterWorkersTest {
    private final ClusterWorkers model = new ClusterWorkers();

    /**
     * Model tests for ClusterWorkers
     */
    @Test
    public void testClusterWorkers() {
        // TODO: test ClusterWorkers
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'uuid'
     */
    @Test
    public void uuidTest() {
        // TODO: test uuid
    }

    /**
     * Test the property 'externalId'
     */
    @Test
    public void externalIdTest() {
        // TODO: test externalId
    }

    /**
     * Test the property 'internalId'
     */
    @Test
    public void internalIdTest() {
        // TODO: test internalId
    }

    /**
     * Test the property 'externalUniqueId'
     */
    @Test
    public void externalUniqueIdTest() {
        // TODO: test externalUniqueId
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'externalName'
     */
    @Test
    public void externalNameTest() {
        // TODO: test externalName
    }

    /**
     * Test the property 'hostname'
     */
    @Test
    public void hostnameTest() {
        // TODO: test hostname
    }

    /**
     * Test the property 'accountId'
     */
    @Test
    public void accountIdTest() {
        // TODO: test accountId
    }

    /**
     * Test the property 'account'
     */
    @Test
    public void accountTest() {
        // TODO: test account
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'zone'
     */
    @Test
    public void zoneTest() {
        // TODO: test zone
    }

    /**
     * Test the property 'plan'
     */
    @Test
    public void planTest() {
        // TODO: test plan
    }

    /**
     * Test the property 'computeServerType'
     */
    @Test
    public void computeServerTypeTest() {
        // TODO: test computeServerType
    }

    /**
     * Test the property 'visibility'
     */
    @Test
    public void visibilityTest() {
        // TODO: test visibility
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'zoneId'
     */
    @Test
    public void zoneIdTest() {
        // TODO: test zoneId
    }

    /**
     * Test the property 'siteId'
     */
    @Test
    public void siteIdTest() {
        // TODO: test siteId
    }

    /**
     * Test the property 'resourcePoolId'
     */
    @Test
    public void resourcePoolIdTest() {
        // TODO: test resourcePoolId
    }

    /**
     * Test the property 'folderId'
     */
    @Test
    public void folderIdTest() {
        // TODO: test folderId
    }

    /**
     * Test the property 'sshHost'
     */
    @Test
    public void sshHostTest() {
        // TODO: test sshHost
    }

    /**
     * Test the property 'sshPort'
     */
    @Test
    public void sshPortTest() {
        // TODO: test sshPort
    }

    /**
     * Test the property 'externalIp'
     */
    @Test
    public void externalIpTest() {
        // TODO: test externalIp
    }

    /**
     * Test the property 'internalIp'
     */
    @Test
    public void internalIpTest() {
        // TODO: test internalIp
    }

    /**
     * Test the property 'volumeId'
     */
    @Test
    public void volumeIdTest() {
        // TODO: test volumeId
    }

    /**
     * Test the property 'platform'
     */
    @Test
    public void platformTest() {
        // TODO: test platform
    }

    /**
     * Test the property 'platformVersion'
     */
    @Test
    public void platformVersionTest() {
        // TODO: test platformVersion
    }

    /**
     * Test the property 'sshUsername'
     */
    @Test
    public void sshUsernameTest() {
        // TODO: test sshUsername
    }

    /**
     * Test the property 'sshPassword'
     */
    @Test
    public void sshPasswordTest() {
        // TODO: test sshPassword
    }

    /**
     * Test the property 'sshPasswordHash'
     */
    @Test
    public void sshPasswordHashTest() {
        // TODO: test sshPasswordHash
    }

    /**
     * Test the property 'osDevice'
     */
    @Test
    public void osDeviceTest() {
        // TODO: test osDevice
    }

    /**
     * Test the property 'osType'
     */
    @Test
    public void osTypeTest() {
        // TODO: test osType
    }

    /**
     * Test the property 'dataDevice'
     */
    @Test
    public void dataDeviceTest() {
        // TODO: test dataDevice
    }

    /**
     * Test the property 'lvmEnabled'
     */
    @Test
    public void lvmEnabledTest() {
        // TODO: test lvmEnabled
    }

    /**
     * Test the property 'apiKey'
     */
    @Test
    public void apiKeyTest() {
        // TODO: test apiKey
    }

    /**
     * Test the property 'softwareRaid'
     */
    @Test
    public void softwareRaidTest() {
        // TODO: test softwareRaid
    }

    /**
     * Test the property 'dateCreated'
     */
    @Test
    public void dateCreatedTest() {
        // TODO: test dateCreated
    }

    /**
     * Test the property 'lastUpdated'
     */
    @Test
    public void lastUpdatedTest() {
        // TODO: test lastUpdated
    }

    /**
     * Test the property 'stats'
     */
    @Test
    public void statsTest() {
        // TODO: test stats
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'statusMessage'
     */
    @Test
    public void statusMessageTest() {
        // TODO: test statusMessage
    }

    /**
     * Test the property 'errorMessage'
     */
    @Test
    public void errorMessageTest() {
        // TODO: test errorMessage
    }

    /**
     * Test the property 'statusDate'
     */
    @Test
    public void statusDateTest() {
        // TODO: test statusDate
    }

    /**
     * Test the property 'statusPercent'
     */
    @Test
    public void statusPercentTest() {
        // TODO: test statusPercent
    }

    /**
     * Test the property 'statusEta'
     */
    @Test
    public void statusEtaTest() {
        // TODO: test statusEta
    }

    /**
     * Test the property 'powerState'
     */
    @Test
    public void powerStateTest() {
        // TODO: test powerState
    }

    /**
     * Test the property 'agentInstalled'
     */
    @Test
    public void agentInstalledTest() {
        // TODO: test agentInstalled
    }

    /**
     * Test the property 'lastAgentUpdate'
     */
    @Test
    public void lastAgentUpdateTest() {
        // TODO: test lastAgentUpdate
    }

    /**
     * Test the property 'agentVersion'
     */
    @Test
    public void agentVersionTest() {
        // TODO: test agentVersion
    }

    /**
     * Test the property 'maxCores'
     */
    @Test
    public void maxCoresTest() {
        // TODO: test maxCores
    }

    /**
     * Test the property 'coresPerSocket'
     */
    @Test
    public void coresPerSocketTest() {
        // TODO: test coresPerSocket
    }

    /**
     * Test the property 'maxMemory'
     */
    @Test
    public void maxMemoryTest() {
        // TODO: test maxMemory
    }

    /**
     * Test the property 'maxStorage'
     */
    @Test
    public void maxStorageTest() {
        // TODO: test maxStorage
    }

    /**
     * Test the property 'maxCpu'
     */
    @Test
    public void maxCpuTest() {
        // TODO: test maxCpu
    }

    /**
     * Test the property 'hourlyPrice'
     */
    @Test
    public void hourlyPriceTest() {
        // TODO: test hourlyPrice
    }

    /**
     * Test the property 'sourceImage'
     */
    @Test
    public void sourceImageTest() {
        // TODO: test sourceImage
    }

    /**
     * Test the property 'serverOs'
     */
    @Test
    public void serverOsTest() {
        // TODO: test serverOs
    }

    /**
     * Test the property 'volumes'
     */
    @Test
    public void volumesTest() {
        // TODO: test volumes
    }

    /**
     * Test the property 'controllers'
     */
    @Test
    public void controllersTest() {
        // TODO: test controllers
    }

    /**
     * Test the property 'interfaces'
     */
    @Test
    public void interfacesTest() {
        // TODO: test interfaces
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'tagCompliant'
     */
    @Test
    public void tagCompliantTest() {
        // TODO: test tagCompliant
    }

    /**
     * Test the property 'containers'
     */
    @Test
    public void containersTest() {
        // TODO: test containers
    }

    /**
     * Test the property 'guestConsolePreferred'
     */
    @Test
    public void guestConsolePreferredTest() {
        // TODO: test guestConsolePreferred
    }

    /**
     * Test the property 'guestConsoleType'
     */
    @Test
    public void guestConsoleTypeTest() {
        // TODO: test guestConsoleType
    }

    /**
     * Test the property 'guestConsoleUsername'
     */
    @Test
    public void guestConsoleUsernameTest() {
        // TODO: test guestConsoleUsername
    }

    /**
     * Test the property 'guestConsolePassword'
     */
    @Test
    public void guestConsolePasswordTest() {
        // TODO: test guestConsolePassword
    }

    /**
     * Test the property 'guestConsolePasswordHash'
     */
    @Test
    public void guestConsolePasswordHashTest() {
        // TODO: test guestConsolePasswordHash
    }

    /**
     * Test the property 'guestConsolePort'
     */
    @Test
    public void guestConsolePortTest() {
        // TODO: test guestConsolePort
    }

}
