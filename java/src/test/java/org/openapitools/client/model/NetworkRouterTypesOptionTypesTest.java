/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for NetworkRouterTypesOptionTypes
 */
public class NetworkRouterTypesOptionTypesTest {
    private final NetworkRouterTypesOptionTypes model = new NetworkRouterTypesOptionTypes();

    /**
     * Model tests for NetworkRouterTypesOptionTypes
     */
    @Test
    public void testNetworkRouterTypesOptionTypes() {
        // TODO: test NetworkRouterTypesOptionTypes
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'fieldName'
     */
    @Test
    public void fieldNameTest() {
        // TODO: test fieldName
    }

    /**
     * Test the property 'fieldLabel'
     */
    @Test
    public void fieldLabelTest() {
        // TODO: test fieldLabel
    }

    /**
     * Test the property 'fieldContext'
     */
    @Test
    public void fieldContextTest() {
        // TODO: test fieldContext
    }

    /**
     * Test the property 'fieldGroup'
     */
    @Test
    public void fieldGroupTest() {
        // TODO: test fieldGroup
    }

    /**
     * Test the property 'fieldClass'
     */
    @Test
    public void fieldClassTest() {
        // TODO: test fieldClass
    }

    /**
     * Test the property 'fieldAddOn'
     */
    @Test
    public void fieldAddOnTest() {
        // TODO: test fieldAddOn
    }

    /**
     * Test the property 'fieldComponent'
     */
    @Test
    public void fieldComponentTest() {
        // TODO: test fieldComponent
    }

    /**
     * Test the property 'fieldInput'
     */
    @Test
    public void fieldInputTest() {
        // TODO: test fieldInput
    }

    /**
     * Test the property 'placeHolder'
     */
    @Test
    public void placeHolderTest() {
        // TODO: test placeHolder
    }

    /**
     * Test the property 'helpBlock'
     */
    @Test
    public void helpBlockTest() {
        // TODO: test helpBlock
    }

    /**
     * Test the property 'defaultValue'
     */
    @Test
    public void defaultValueTest() {
        // TODO: test defaultValue
    }

    /**
     * Test the property 'optionSource'
     */
    @Test
    public void optionSourceTest() {
        // TODO: test optionSource
    }

    /**
     * Test the property 'optionList'
     */
    @Test
    public void optionListTest() {
        // TODO: test optionList
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'advanced'
     */
    @Test
    public void advancedTest() {
        // TODO: test advanced
    }

    /**
     * Test the property 'required'
     */
    @Test
    public void requiredTest() {
        // TODO: test required
    }

    /**
     * Test the property 'editable'
     */
    @Test
    public void editableTest() {
        // TODO: test editable
    }

    /**
     * Test the property 'creatable'
     */
    @Test
    public void creatableTest() {
        // TODO: test creatable
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

    /**
     * Test the property 'displayOrder'
     */
    @Test
    public void displayOrderTest() {
        // TODO: test displayOrder
    }

    /**
     * Test the property 'wrapperClass'
     */
    @Test
    public void wrapperClassTest() {
        // TODO: test wrapperClass
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'noBlank'
     */
    @Test
    public void noBlankTest() {
        // TODO: test noBlank
    }

    /**
     * Test the property 'dependsOnCode'
     */
    @Test
    public void dependsOnCodeTest() {
        // TODO: test dependsOnCode
    }

    /**
     * Test the property 'contextualDefault'
     */
    @Test
    public void contextualDefaultTest() {
        // TODO: test contextualDefault
    }

}
