/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.ZoneVcenterConfigNetworkServer;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ZoneAzureConfig
 */
public class ZoneAzureConfigTest {
    private final ZoneAzureConfig model = new ZoneAzureConfig();

    /**
     * Model tests for ZoneAzureConfig
     */
    @Test
    public void testZoneAzureConfig() {
        // TODO: test ZoneAzureConfig
    }

    /**
     * Test the property 'subscriberId'
     */
    @Test
    public void subscriberIdTest() {
        // TODO: test subscriberId
    }

    /**
     * Test the property 'tenantId'
     */
    @Test
    public void tenantIdTest() {
        // TODO: test tenantId
    }

    /**
     * Test the property 'clientId'
     */
    @Test
    public void clientIdTest() {
        // TODO: test clientId
    }

    /**
     * Test the property 'clientSecret'
     */
    @Test
    public void clientSecretTest() {
        // TODO: test clientSecret
    }

    /**
     * Test the property 'resourceGroup'
     */
    @Test
    public void resourceGroupTest() {
        // TODO: test resourceGroup
    }

    /**
     * Test the property 'importExisting'
     */
    @Test
    public void importExistingTest() {
        // TODO: test importExisting
    }

    /**
     * Test the property 'importExisting'
     */
    @Test
    public void importExistingTest() {
        // TODO: test importExisting
    }

    /**
     * Test the property 'inventoryLevel'
     */
    @Test
    public void inventoryLevelTest() {
        // TODO: test inventoryLevel
    }

    /**
     * Test the property 'applianceUrl'
     */
    @Test
    public void applianceUrlTest() {
        // TODO: test applianceUrl
    }

    /**
     * Test the property 'datacenterName'
     */
    @Test
    public void datacenterNameTest() {
        // TODO: test datacenterName
    }

    /**
     * Test the property 'networkServerId'
     */
    @Test
    public void networkServerIdTest() {
        // TODO: test networkServerId
    }

    /**
     * Test the property 'networkServer'
     */
    @Test
    public void networkServerTest() {
        // TODO: test networkServer
    }

    /**
     * Test the property 'securityMode'
     */
    @Test
    public void securityModeTest() {
        // TODO: test securityMode
    }

    /**
     * Test the property 'certificateProvider'
     */
    @Test
    public void certificateProviderTest() {
        // TODO: test certificateProvider
    }

    /**
     * Test the property 'backupMode'
     */
    @Test
    public void backupModeTest() {
        // TODO: test backupMode
    }

    /**
     * Test the property 'replicationMode'
     */
    @Test
    public void replicationModeTest() {
        // TODO: test replicationMode
    }

    /**
     * Test the property 'dnsIntegrationId'
     */
    @Test
    public void dnsIntegrationIdTest() {
        // TODO: test dnsIntegrationId
    }

    /**
     * Test the property 'configManagementId'
     */
    @Test
    public void configManagementIdTest() {
        // TODO: test configManagementId
    }

    /**
     * Test the property 'configCmdbId'
     */
    @Test
    public void configCmdbIdTest() {
        // TODO: test configCmdbId
    }

    /**
     * Test the property 'securityServer'
     */
    @Test
    public void securityServerTest() {
        // TODO: test securityServer
    }

    /**
     * Test the property 'accountType'
     */
    @Test
    public void accountTypeTest() {
        // TODO: test accountType
    }

    /**
     * Test the property 'serviceRegistryId'
     */
    @Test
    public void serviceRegistryIdTest() {
        // TODO: test serviceRegistryId
    }

    /**
     * Test the property 'cloudType'
     */
    @Test
    public void cloudTypeTest() {
        // TODO: test cloudType
    }

    /**
     * Test the property 'rpcMode'
     */
    @Test
    public void rpcModeTest() {
        // TODO: test rpcMode
    }

    /**
     * Test the property 'diskEncryption'
     */
    @Test
    public void diskEncryptionTest() {
        // TODO: test diskEncryption
    }

    /**
     * Test the property 'encryptionSet'
     */
    @Test
    public void encryptionSetTest() {
        // TODO: test encryptionSet
    }

    /**
     * Test the property 'cspTenantId'
     */
    @Test
    public void cspTenantIdTest() {
        // TODO: test cspTenantId
    }

    /**
     * Test the property 'cspClientId'
     */
    @Test
    public void cspClientIdTest() {
        // TODO: test cspClientId
    }

    /**
     * Test the property 'cspClientSecret'
     */
    @Test
    public void cspClientSecretTest() {
        // TODO: test cspClientSecret
    }

    /**
     * Test the property 'cspCustomer'
     */
    @Test
    public void cspCustomerTest() {
        // TODO: test cspCustomer
    }

    /**
     * Test the property 'configCmdbDiscovery'
     */
    @Test
    public void configCmdbDiscoveryTest() {
        // TODO: test configCmdbDiscovery
    }

    /**
     * Test the property 'azureCostingMode'
     */
    @Test
    public void azureCostingModeTest() {
        // TODO: test azureCostingMode
    }

    /**
     * Test the property 'clientSecretHash'
     */
    @Test
    public void clientSecretHashTest() {
        // TODO: test clientSecretHash
    }

    /**
     * Test the property 'cspClientSecretHash'
     */
    @Test
    public void cspClientSecretHashTest() {
        // TODO: test cspClientSecretHash
    }

}
