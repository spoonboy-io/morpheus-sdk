/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for CheckSqlConfig
 */
public class CheckSqlConfigTest {
    private final CheckSqlConfig model = new CheckSqlConfig();

    /**
     * Model tests for CheckSqlConfig
     */
    @Test
    public void testCheckSqlConfig() {
        // TODO: test CheckSqlConfig
    }

    /**
     * Test the property 'dbHost'
     */
    @Test
    public void dbHostTest() {
        // TODO: test dbHost
    }

    /**
     * Test the property 'dbPort'
     */
    @Test
    public void dbPortTest() {
        // TODO: test dbPort
    }

    /**
     * Test the property 'dbUser'
     */
    @Test
    public void dbUserTest() {
        // TODO: test dbUser
    }

    /**
     * Test the property 'dbPassword'
     */
    @Test
    public void dbPasswordTest() {
        // TODO: test dbPassword
    }

    /**
     * Test the property 'dbPasswordHash'
     */
    @Test
    public void dbPasswordHashTest() {
        // TODO: test dbPasswordHash
    }

    /**
     * Test the property 'dbName'
     */
    @Test
    public void dbNameTest() {
        // TODO: test dbName
    }

    /**
     * Test the property 'dbQuery'
     */
    @Test
    public void dbQueryTest() {
        // TODO: test dbQuery
    }

    /**
     * Test the property 'checkOperator'
     */
    @Test
    public void checkOperatorTest() {
        // TODO: test checkOperator
    }

    /**
     * Test the property 'checkResult'
     */
    @Test
    public void checkResultTest() {
        // TODO: test checkResult
    }

    /**
     * Test the property 'checkUser'
     */
    @Test
    public void checkUserTest() {
        // TODO: test checkUser
    }

    /**
     * Test the property 'textCheckOn'
     */
    @Test
    public void textCheckOnTest() {
        // TODO: test textCheckOn
    }

    /**
     * Test the property 'checkPassword'
     */
    @Test
    public void checkPasswordTest() {
        // TODO: test checkPassword
    }

    /**
     * Test the property 'webTextMatch'
     */
    @Test
    public void webTextMatchTest() {
        // TODO: test webTextMatch
    }

    /**
     * Test the property 'checkPasswordHash'
     */
    @Test
    public void checkPasswordHashTest() {
        // TODO: test checkPasswordHash
    }

    /**
     * Test the property 'tunnelOn'
     */
    @Test
    public void tunnelOnTest() {
        // TODO: test tunnelOn
    }

    /**
     * Test the property 'sshHost'
     */
    @Test
    public void sshHostTest() {
        // TODO: test sshHost
    }

    /**
     * Test the property 'sshPort'
     */
    @Test
    public void sshPortTest() {
        // TODO: test sshPort
    }

    /**
     * Test the property 'sshUser'
     */
    @Test
    public void sshUserTest() {
        // TODO: test sshUser
    }

    /**
     * Test the property 'sshPassword'
     */
    @Test
    public void sshPasswordTest() {
        // TODO: test sshPassword
    }

}
