/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for CheckType
 */
public class CheckTypeTest {
    private final CheckType model = new CheckType();

    /**
     * Model tests for CheckType
     */
    @Test
    public void testCheckType() {
        // TODO: test CheckType
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'defaultInterval'
     */
    @Test
    public void defaultIntervalTest() {
        // TODO: test defaultInterval
    }

    /**
     * Test the property 'metricName'
     */
    @Test
    public void metricNameTest() {
        // TODO: test metricName
    }

    /**
     * Test the property 'inUptime'
     */
    @Test
    public void inUptimeTest() {
        // TODO: test inUptime
    }

    /**
     * Test the property 'createIncident'
     */
    @Test
    public void createIncidentTest() {
        // TODO: test createIncident
    }

    /**
     * Test the property 'pushOnly'
     */
    @Test
    public void pushOnlyTest() {
        // TODO: test pushOnly
    }

    /**
     * Test the property 'tunnelSupported'
     */
    @Test
    public void tunnelSupportedTest() {
        // TODO: test tunnelSupported
    }

}
