/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for PowerSchedule
 */
public class PowerScheduleTest {
    private final PowerSchedule model = new PowerSchedule();

    /**
     * Model tests for PowerSchedule
     */
    @Test
    public void testPowerSchedule() {
        // TODO: test PowerSchedule
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'visibility'
     */
    @Test
    public void visibilityTest() {
        // TODO: test visibility
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'scheduleType'
     */
    @Test
    public void scheduleTypeTest() {
        // TODO: test scheduleType
    }

    /**
     * Test the property 'scheduleTimezone'
     */
    @Test
    public void scheduleTimezoneTest() {
        // TODO: test scheduleTimezone
    }

    /**
     * Test the property 'mondayOn'
     */
    @Test
    public void mondayOnTest() {
        // TODO: test mondayOn
    }

    /**
     * Test the property 'mondayOnTime'
     */
    @Test
    public void mondayOnTimeTest() {
        // TODO: test mondayOnTime
    }

    /**
     * Test the property 'mondayOff'
     */
    @Test
    public void mondayOffTest() {
        // TODO: test mondayOff
    }

    /**
     * Test the property 'mondayOffTime'
     */
    @Test
    public void mondayOffTimeTest() {
        // TODO: test mondayOffTime
    }

    /**
     * Test the property 'tuesdayOn'
     */
    @Test
    public void tuesdayOnTest() {
        // TODO: test tuesdayOn
    }

    /**
     * Test the property 'tuesdayOnTime'
     */
    @Test
    public void tuesdayOnTimeTest() {
        // TODO: test tuesdayOnTime
    }

    /**
     * Test the property 'tuesdayOff'
     */
    @Test
    public void tuesdayOffTest() {
        // TODO: test tuesdayOff
    }

    /**
     * Test the property 'tuesdayOffTime'
     */
    @Test
    public void tuesdayOffTimeTest() {
        // TODO: test tuesdayOffTime
    }

    /**
     * Test the property 'wednesdayOn'
     */
    @Test
    public void wednesdayOnTest() {
        // TODO: test wednesdayOn
    }

    /**
     * Test the property 'wednesdayOnTime'
     */
    @Test
    public void wednesdayOnTimeTest() {
        // TODO: test wednesdayOnTime
    }

    /**
     * Test the property 'wednesdayOff'
     */
    @Test
    public void wednesdayOffTest() {
        // TODO: test wednesdayOff
    }

    /**
     * Test the property 'wednesdayOffTime'
     */
    @Test
    public void wednesdayOffTimeTest() {
        // TODO: test wednesdayOffTime
    }

    /**
     * Test the property 'thursdayOn'
     */
    @Test
    public void thursdayOnTest() {
        // TODO: test thursdayOn
    }

    /**
     * Test the property 'thursdayOnTime'
     */
    @Test
    public void thursdayOnTimeTest() {
        // TODO: test thursdayOnTime
    }

    /**
     * Test the property 'thursdayOff'
     */
    @Test
    public void thursdayOffTest() {
        // TODO: test thursdayOff
    }

    /**
     * Test the property 'thursdayOffTime'
     */
    @Test
    public void thursdayOffTimeTest() {
        // TODO: test thursdayOffTime
    }

    /**
     * Test the property 'fridayOn'
     */
    @Test
    public void fridayOnTest() {
        // TODO: test fridayOn
    }

    /**
     * Test the property 'fridayOnTime'
     */
    @Test
    public void fridayOnTimeTest() {
        // TODO: test fridayOnTime
    }

    /**
     * Test the property 'fridayOff'
     */
    @Test
    public void fridayOffTest() {
        // TODO: test fridayOff
    }

    /**
     * Test the property 'fridayOffTime'
     */
    @Test
    public void fridayOffTimeTest() {
        // TODO: test fridayOffTime
    }

    /**
     * Test the property 'saturdayOn'
     */
    @Test
    public void saturdayOnTest() {
        // TODO: test saturdayOn
    }

    /**
     * Test the property 'saturdayOnTime'
     */
    @Test
    public void saturdayOnTimeTest() {
        // TODO: test saturdayOnTime
    }

    /**
     * Test the property 'saturdayOff'
     */
    @Test
    public void saturdayOffTest() {
        // TODO: test saturdayOff
    }

    /**
     * Test the property 'saturdayOffTime'
     */
    @Test
    public void saturdayOffTimeTest() {
        // TODO: test saturdayOffTime
    }

    /**
     * Test the property 'sundayOn'
     */
    @Test
    public void sundayOnTest() {
        // TODO: test sundayOn
    }

    /**
     * Test the property 'sundayOnTime'
     */
    @Test
    public void sundayOnTimeTest() {
        // TODO: test sundayOnTime
    }

    /**
     * Test the property 'sundayOff'
     */
    @Test
    public void sundayOffTest() {
        // TODO: test sundayOff
    }

    /**
     * Test the property 'sundayOffTime'
     */
    @Test
    public void sundayOffTimeTest() {
        // TODO: test sundayOffTime
    }

    /**
     * Test the property 'totalMonthlyHoursSaved'
     */
    @Test
    public void totalMonthlyHoursSavedTest() {
        // TODO: test totalMonthlyHoursSaved
    }

    /**
     * Test the property 'dateCreated'
     */
    @Test
    public void dateCreatedTest() {
        // TODO: test dateCreated
    }

    /**
     * Test the property 'lastUpdated'
     */
    @Test
    public void lastUpdatedTest() {
        // TODO: test lastUpdated
    }

}
