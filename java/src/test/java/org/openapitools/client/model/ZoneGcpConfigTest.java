/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.ZoneVcenterConfigNetworkServer;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ZoneGcpConfig
 */
public class ZoneGcpConfigTest {
    private final ZoneGcpConfig model = new ZoneGcpConfig();

    /**
     * Model tests for ZoneGcpConfig
     */
    @Test
    public void testZoneGcpConfig() {
        // TODO: test ZoneGcpConfig
    }

    /**
     * Test the property 'privateKey'
     */
    @Test
    public void privateKeyTest() {
        // TODO: test privateKey
    }

    /**
     * Test the property 'clientEmail'
     */
    @Test
    public void clientEmailTest() {
        // TODO: test clientEmail
    }

    /**
     * Test the property 'projectId'
     */
    @Test
    public void projectIdTest() {
        // TODO: test projectId
    }

    /**
     * Test the property 'googleRegionId'
     */
    @Test
    public void googleRegionIdTest() {
        // TODO: test googleRegionId
    }

    /**
     * Test the property 'importExisting'
     */
    @Test
    public void importExistingTest() {
        // TODO: test importExisting
    }

    /**
     * Test the property 'importExisting'
     */
    @Test
    public void importExistingTest() {
        // TODO: test importExisting
    }

    /**
     * Test the property 'applianceUrl'
     */
    @Test
    public void applianceUrlTest() {
        // TODO: test applianceUrl
    }

    /**
     * Test the property 'datacenterName'
     */
    @Test
    public void datacenterNameTest() {
        // TODO: test datacenterName
    }

    /**
     * Test the property 'networkServerId'
     */
    @Test
    public void networkServerIdTest() {
        // TODO: test networkServerId
    }

    /**
     * Test the property 'networkServer'
     */
    @Test
    public void networkServerTest() {
        // TODO: test networkServer
    }

    /**
     * Test the property 'securityServer'
     */
    @Test
    public void securityServerTest() {
        // TODO: test securityServer
    }

    /**
     * Test the property 'certificateProvider'
     */
    @Test
    public void certificateProviderTest() {
        // TODO: test certificateProvider
    }

    /**
     * Test the property 'backupMode'
     */
    @Test
    public void backupModeTest() {
        // TODO: test backupMode
    }

    /**
     * Test the property 'replicationMode'
     */
    @Test
    public void replicationModeTest() {
        // TODO: test replicationMode
    }

    /**
     * Test the property 'dnsIntegrationId'
     */
    @Test
    public void dnsIntegrationIdTest() {
        // TODO: test dnsIntegrationId
    }

    /**
     * Test the property 'serviceRegistryId'
     */
    @Test
    public void serviceRegistryIdTest() {
        // TODO: test serviceRegistryId
    }

    /**
     * Test the property 'configManagementId'
     */
    @Test
    public void configManagementIdTest() {
        // TODO: test configManagementId
    }

    /**
     * Test the property 'privateKeyHash'
     */
    @Test
    public void privateKeyHashTest() {
        // TODO: test privateKeyHash
    }

}
