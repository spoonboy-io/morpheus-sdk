/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.BackupBackupProvider;
import org.openapitools.client.model.BackupBackupRespository;
import org.openapitools.client.model.BackupBackupType;
import org.openapitools.client.model.BackupInstance;
import org.openapitools.client.model.BackupJob;
import org.openapitools.client.model.BackupLastResult;
import org.openapitools.client.model.BackupSchedule;
import org.openapitools.client.model.BackupStats;
import org.openapitools.client.model.BackupStorageProvider;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Backup
 */
public class BackupTest {
    private final Backup model = new Backup();

    /**
     * Model tests for Backup
     */
    @Test
    public void testBackup() {
        // TODO: test Backup
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'locationType'
     */
    @Test
    public void locationTypeTest() {
        // TODO: test locationType
    }

    /**
     * Test the property 'instance'
     */
    @Test
    public void instanceTest() {
        // TODO: test instance
    }

    /**
     * Test the property 'containerId'
     */
    @Test
    public void containerIdTest() {
        // TODO: test containerId
    }

    /**
     * Test the property 'job'
     */
    @Test
    public void jobTest() {
        // TODO: test job
    }

    /**
     * Test the property 'schedule'
     */
    @Test
    public void scheduleTest() {
        // TODO: test schedule
    }

    /**
     * Test the property 'retentionCount'
     */
    @Test
    public void retentionCountTest() {
        // TODO: test retentionCount
    }

    /**
     * Test the property 'backupType'
     */
    @Test
    public void backupTypeTest() {
        // TODO: test backupType
    }

    /**
     * Test the property 'storageProvider'
     */
    @Test
    public void storageProviderTest() {
        // TODO: test storageProvider
    }

    /**
     * Test the property 'backupProvider'
     */
    @Test
    public void backupProviderTest() {
        // TODO: test backupProvider
    }

    /**
     * Test the property 'backupRespository'
     */
    @Test
    public void backupRespositoryTest() {
        // TODO: test backupRespository
    }

    /**
     * Test the property 'cronExpression'
     */
    @Test
    public void cronExpressionTest() {
        // TODO: test cronExpression
    }

    /**
     * Test the property 'nextFire'
     */
    @Test
    public void nextFireTest() {
        // TODO: test nextFire
    }

    /**
     * Test the property 'lastStatus'
     */
    @Test
    public void lastStatusTest() {
        // TODO: test lastStatus
    }

    /**
     * Test the property 'lastResult'
     */
    @Test
    public void lastResultTest() {
        // TODO: test lastResult
    }

    /**
     * Test the property 'stats'
     */
    @Test
    public void statsTest() {
        // TODO: test stats
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'dateCreated'
     */
    @Test
    public void dateCreatedTest() {
        // TODO: test dateCreated
    }

    /**
     * Test the property 'lastUpdated'
     */
    @Test
    public void lastUpdatedTest() {
        // TODO: test lastUpdated
    }

}
