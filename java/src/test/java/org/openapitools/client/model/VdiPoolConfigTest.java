/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.InlineResponse20040AppDeployInstance;
import org.openapitools.client.model.InstanceConfigBackup;
import org.openapitools.client.model.InstanceConfigLayout;
import org.openapitools.client.model.InstanceServicePlanAutoOptions;
import org.openapitools.client.model.VdiPoolConfigConfig;
import org.openapitools.client.model.VdiPoolConfigDisplayNetworks;
import org.openapitools.client.model.VdiPoolConfigInstance;
import org.openapitools.client.model.VdiPoolConfigNetworkInterfaces;
import org.openapitools.client.model.VdiPoolConfigStorageControllers;
import org.openapitools.client.model.VdiPoolConfigVolumes;
import org.openapitools.client.model.VdiPoolConfigVolumesDisplay;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for VdiPoolConfig
 */
public class VdiPoolConfigTest {
    private final VdiPoolConfig model = new VdiPoolConfig();

    /**
     * Model tests for VdiPoolConfig
     */
    @Test
    public void testVdiPoolConfig() {
        // TODO: test VdiPoolConfig
    }

    /**
     * Test the property 'group'
     */
    @Test
    public void groupTest() {
        // TODO: test group
    }

    /**
     * Test the property 'cloud'
     */
    @Test
    public void cloudTest() {
        // TODO: test cloud
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'instance'
     */
    @Test
    public void instanceTest() {
        // TODO: test instance
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'environment'
     */
    @Test
    public void environmentTest() {
        // TODO: test environment
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

    /**
     * Test the property 'volumes'
     */
    @Test
    public void volumesTest() {
        // TODO: test volumes
    }

    /**
     * Test the property 'hostName'
     */
    @Test
    public void hostNameTest() {
        // TODO: test hostName
    }

    /**
     * Test the property 'layout'
     */
    @Test
    public void layoutTest() {
        // TODO: test layout
    }

    /**
     * Test the property 'storageControllers'
     */
    @Test
    public void storageControllersTest() {
        // TODO: test storageControllers
    }

    /**
     * Test the property 'plan'
     */
    @Test
    public void planTest() {
        // TODO: test plan
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'networkInterfaces'
     */
    @Test
    public void networkInterfacesTest() {
        // TODO: test networkInterfaces
    }

    /**
     * Test the property 'executionId'
     */
    @Test
    public void executionIdTest() {
        // TODO: test executionId
    }

    /**
     * Test the property 'backup'
     */
    @Test
    public void backupTest() {
        // TODO: test backup
    }

    /**
     * Test the property 'loadBalancer'
     */
    @Test
    public void loadBalancerTest() {
        // TODO: test loadBalancer
    }

    /**
     * Test the property 'hideLock'
     */
    @Test
    public void hideLockTest() {
        // TODO: test hideLock
    }

    /**
     * Test the property 'hasNetworks'
     */
    @Test
    public void hasNetworksTest() {
        // TODO: test hasNetworks
    }

    /**
     * Test the property 'displayNetworks'
     */
    @Test
    public void displayNetworksTest() {
        // TODO: test displayNetworks
    }

    /**
     * Test the property 'copies'
     */
    @Test
    public void copiesTest() {
        // TODO: test copies
    }

    /**
     * Test the property 'showScale'
     */
    @Test
    public void showScaleTest() {
        // TODO: test showScale
    }

    /**
     * Test the property 'hasPreview'
     */
    @Test
    public void hasPreviewTest() {
        // TODO: test hasPreview
    }

    /**
     * Test the property 'volumesDisplay'
     */
    @Test
    public void volumesDisplayTest() {
        // TODO: test volumesDisplay
    }

}
