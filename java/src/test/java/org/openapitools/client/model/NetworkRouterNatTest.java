/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for NetworkRouterNat
 */
public class NetworkRouterNatTest {
    private final NetworkRouterNat model = new NetworkRouterNat();

    /**
     * Model tests for NetworkRouterNat
     */
    @Test
    public void testNetworkRouterNat() {
        // TODO: test NetworkRouterNat
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'sourceNetwork'
     */
    @Test
    public void sourceNetworkTest() {
        // TODO: test sourceNetwork
    }

    /**
     * Test the property 'destinationNetwork'
     */
    @Test
    public void destinationNetworkTest() {
        // TODO: test destinationNetwork
    }

    /**
     * Test the property 'translatedNetwork'
     */
    @Test
    public void translatedNetworkTest() {
        // TODO: test translatedNetwork
    }

    /**
     * Test the property 'sourcePorts'
     */
    @Test
    public void sourcePortsTest() {
        // TODO: test sourcePorts
    }

    /**
     * Test the property 'destinationPorts'
     */
    @Test
    public void destinationPortsTest() {
        // TODO: test destinationPorts
    }

    /**
     * Test the property 'translatedPorts'
     */
    @Test
    public void translatedPortsTest() {
        // TODO: test translatedPorts
    }

    /**
     * Test the property 'priority'
     */
    @Test
    public void priorityTest() {
        // TODO: test priority
    }

    /**
     * Test the property 'protocol'
     */
    @Test
    public void protocolTest() {
        // TODO: test protocol
    }

    /**
     * Test the property 'matchIpv6DestinationPrefix'
     */
    @Test
    public void matchIpv6DestinationPrefixTest() {
        // TODO: test matchIpv6DestinationPrefix
    }

    /**
     * Test the property 'translatedIpv4SourcePrefix'
     */
    @Test
    public void translatedIpv4SourcePrefixTest() {
        // TODO: test translatedIpv4SourcePrefix
    }

    /**
     * Test the property 'refType'
     */
    @Test
    public void refTypeTest() {
        // TODO: test refType
    }

    /**
     * Test the property 'refId'
     */
    @Test
    public void refIdTest() {
        // TODO: test refId
    }

    /**
     * Test the property 'syncSource'
     */
    @Test
    public void syncSourceTest() {
        // TODO: test syncSource
    }

    /**
     * Test the property 'internalId'
     */
    @Test
    public void internalIdTest() {
        // TODO: test internalId
    }

    /**
     * Test the property 'externalId'
     */
    @Test
    public void externalIdTest() {
        // TODO: test externalId
    }

    /**
     * Test the property 'providerId'
     */
    @Test
    public void providerIdTest() {
        // TODO: test providerId
    }

    /**
     * Test the property 'dateCreated'
     */
    @Test
    public void dateCreatedTest() {
        // TODO: test dateCreated
    }

    /**
     * Test the property 'lastUpdated'
     */
    @Test
    public void lastUpdatedTest() {
        // TODO: test lastUpdated
    }

}
