/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.InlineResponse20040AppDeployInstance;
import org.openapitools.client.model.InlineResponse20079LoadBalancerMonitorLoadBalancerType;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for StorageVolume
 */
public class StorageVolumeTest {
    private final StorageVolume model = new StorageVolume();

    /**
     * Model tests for StorageVolume
     */
    @Test
    public void testStorageVolume() {
        // TODO: test StorageVolume
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'controllerId'
     */
    @Test
    public void controllerIdTest() {
        // TODO: test controllerId
    }

    /**
     * Test the property 'controllerMountPoint'
     */
    @Test
    public void controllerMountPointTest() {
        // TODO: test controllerMountPoint
    }

    /**
     * Test the property 'resizeable'
     */
    @Test
    public void resizeableTest() {
        // TODO: test resizeable
    }

    /**
     * Test the property 'rootVolume'
     */
    @Test
    public void rootVolumeTest() {
        // TODO: test rootVolume
    }

    /**
     * Test the property 'unitNumber'
     */
    @Test
    public void unitNumberTest() {
        // TODO: test unitNumber
    }

    /**
     * Test the property 'deviceName'
     */
    @Test
    public void deviceNameTest() {
        // TODO: test deviceName
    }

    /**
     * Test the property 'deviceDisplayName'
     */
    @Test
    public void deviceDisplayNameTest() {
        // TODO: test deviceDisplayName
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'typeId'
     */
    @Test
    public void typeIdTest() {
        // TODO: test typeId
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'statusMessage'
     */
    @Test
    public void statusMessageTest() {
        // TODO: test statusMessage
    }

    /**
     * Test the property 'configurableIOPS'
     */
    @Test
    public void configurableIOPSTest() {
        // TODO: test configurableIOPS
    }

    /**
     * Test the property 'maxStorage'
     */
    @Test
    public void maxStorageTest() {
        // TODO: test maxStorage
    }

    /**
     * Test the property 'displayOrder'
     */
    @Test
    public void displayOrderTest() {
        // TODO: test displayOrder
    }

    /**
     * Test the property 'maxIOPS'
     */
    @Test
    public void maxIOPSTest() {
        // TODO: test maxIOPS
    }

    /**
     * Test the property 'uuid'
     */
    @Test
    public void uuidTest() {
        // TODO: test uuid
    }

    /**
     * Test the property 'active'
     */
    @Test
    public void activeTest() {
        // TODO: test active
    }

    /**
     * Test the property 'zone'
     */
    @Test
    public void zoneTest() {
        // TODO: test zone
    }

    /**
     * Test the property 'zoneId'
     */
    @Test
    public void zoneIdTest() {
        // TODO: test zoneId
    }

    /**
     * Test the property 'datastore'
     */
    @Test
    public void datastoreTest() {
        // TODO: test datastore
    }

    /**
     * Test the property 'datastoreId'
     */
    @Test
    public void datastoreIdTest() {
        // TODO: test datastoreId
    }

    /**
     * Test the property 'storageGroup'
     */
    @Test
    public void storageGroupTest() {
        // TODO: test storageGroup
    }

    /**
     * Test the property 'namespace'
     */
    @Test
    public void namespaceTest() {
        // TODO: test namespace
    }

    /**
     * Test the property 'storageServer'
     */
    @Test
    public void storageServerTest() {
        // TODO: test storageServer
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

}
