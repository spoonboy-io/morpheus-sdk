/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.IntegrationSaltMasterConfigIntegrationConfig;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for IntegrationSaltMasterConfigIntegration
 */
public class IntegrationSaltMasterConfigIntegrationTest {
    private final IntegrationSaltMasterConfigIntegration model = new IntegrationSaltMasterConfigIntegration();

    /**
     * Model tests for IntegrationSaltMasterConfigIntegration
     */
    @Test
    public void testIntegrationSaltMasterConfigIntegration() {
        // TODO: test IntegrationSaltMasterConfigIntegration
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'serviceMode'
     */
    @Test
    public void serviceModeTest() {
        // TODO: test serviceMode
    }

    /**
     * Test the property 'serviceUrl'
     */
    @Test
    public void serviceUrlTest() {
        // TODO: test serviceUrl
    }

    /**
     * Test the property 'secondary'
     */
    @Test
    public void secondaryTest() {
        // TODO: test secondary
    }

    /**
     * Test the property 'servicePort'
     */
    @Test
    public void servicePortTest() {
        // TODO: test servicePort
    }

    /**
     * Test the property 'serviceUsername'
     */
    @Test
    public void serviceUsernameTest() {
        // TODO: test serviceUsername
    }

    /**
     * Test the property 'servicePassword'
     */
    @Test
    public void servicePasswordTest() {
        // TODO: test servicePassword
    }

    /**
     * Test the property 'serviceKey'
     */
    @Test
    public void serviceKeyTest() {
        // TODO: test serviceKey
    }

    /**
     * Test the property 'authKey'
     */
    @Test
    public void authKeyTest() {
        // TODO: test authKey
    }

    /**
     * Test the property 'servicePath'
     */
    @Test
    public void servicePathTest() {
        // TODO: test servicePath
    }

    /**
     * Test the property 'serviceVersion'
     */
    @Test
    public void serviceVersionTest() {
        // TODO: test serviceVersion
    }

    /**
     * Test the property 'serviceWindowsVersion'
     */
    @Test
    public void serviceWindowsVersionTest() {
        // TODO: test serviceWindowsVersion
    }

    /**
     * Test the property 'repoUrl'
     */
    @Test
    public void repoUrlTest() {
        // TODO: test repoUrl
    }

    /**
     * Test the property 'serviceConfig'
     */
    @Test
    public void serviceConfigTest() {
        // TODO: test serviceConfig
    }

    /**
     * Test the property 'serviceCommand'
     */
    @Test
    public void serviceCommandTest() {
        // TODO: test serviceCommand
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

}
