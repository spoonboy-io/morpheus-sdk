/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ClusterLayoutCreateEnvironmentVariables;
import org.openapitools.client.model.ContainerTypeCreateContainerPorts;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ContainerTypeCreate
 */
public class ContainerTypeCreateTest {
    private final ContainerTypeCreate model = new ContainerTypeCreate();

    /**
     * Model tests for ContainerTypeCreate
     */
    @Test
    public void testContainerTypeCreate() {
        // TODO: test ContainerTypeCreate
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'shortName'
     */
    @Test
    public void shortNameTest() {
        // TODO: test shortName
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'containerVersion'
     */
    @Test
    public void containerVersionTest() {
        // TODO: test containerVersion
    }

    /**
     * Test the property 'provisionTypeCode'
     */
    @Test
    public void provisionTypeCodeTest() {
        // TODO: test provisionTypeCode
    }

    /**
     * Test the property 'scripts'
     */
    @Test
    public void scriptsTest() {
        // TODO: test scripts
    }

    /**
     * Test the property 'templates'
     */
    @Test
    public void templatesTest() {
        // TODO: test templates
    }

    /**
     * Test the property 'virtualImageId'
     */
    @Test
    public void virtualImageIdTest() {
        // TODO: test virtualImageId
    }

    /**
     * Test the property 'statTypeCode'
     */
    @Test
    public void statTypeCodeTest() {
        // TODO: test statTypeCode
    }

    /**
     * Test the property 'logTypeCode'
     */
    @Test
    public void logTypeCodeTest() {
        // TODO: test logTypeCode
    }

    /**
     * Test the property 'serverType'
     */
    @Test
    public void serverTypeTest() {
        // TODO: test serverType
    }

    /**
     * Test the property 'containerPorts'
     */
    @Test
    public void containerPortsTest() {
        // TODO: test containerPorts
    }

    /**
     * Test the property 'environmentVariables'
     */
    @Test
    public void environmentVariablesTest() {
        // TODO: test environmentVariables
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

}
