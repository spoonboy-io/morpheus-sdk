/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ServerConfig
 */
public class ServerConfigTest {
    private final ServerConfig model = new ServerConfig();

    /**
     * Model tests for ServerConfig
     */
    @Test
    public void testServerConfig() {
        // TODO: test ServerConfig
    }

    /**
     * Test the property 'poolProviderType'
     */
    @Test
    public void poolProviderTypeTest() {
        // TODO: test poolProviderType
    }

    /**
     * Test the property 'isVpcSelectable'
     */
    @Test
    public void isVpcSelectableTest() {
        // TODO: test isVpcSelectable
    }

    /**
     * Test the property 'smbiosAssetTag'
     */
    @Test
    public void smbiosAssetTagTest() {
        // TODO: test smbiosAssetTag
    }

    /**
     * Test the property 'isEC2'
     */
    @Test
    public void isEC2Test() {
        // TODO: test isEC2
    }

    /**
     * Test the property 'resourcePoolId'
     */
    @Test
    public void resourcePoolIdTest() {
        // TODO: test resourcePoolId
    }

    /**
     * Test the property 'hostId'
     */
    @Test
    public void hostIdTest() {
        // TODO: test hostId
    }

    /**
     * Test the property 'createUser'
     */
    @Test
    public void createUserTest() {
        // TODO: test createUser
    }

    /**
     * Test the property 'nestedVirtualization'
     */
    @Test
    public void nestedVirtualizationTest() {
        // TODO: test nestedVirtualization
    }

    /**
     * Test the property 'vmwareFolderId'
     */
    @Test
    public void vmwareFolderIdTest() {
        // TODO: test vmwareFolderId
    }

    /**
     * Test the property 'noAgent'
     */
    @Test
    public void noAgentTest() {
        // TODO: test noAgent
    }

    /**
     * Test the property 'powerScheduleType'
     */
    @Test
    public void powerScheduleTypeTest() {
        // TODO: test powerScheduleType
    }

}
