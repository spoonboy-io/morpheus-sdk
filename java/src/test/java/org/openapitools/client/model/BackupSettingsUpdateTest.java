/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.1.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.client.model.BackupSettingsUpdateDefaultSchedule;
import org.openapitools.client.model.BackupSettingsUpdateDefaultStorageBucket;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for BackupSettingsUpdate
 */
public class BackupSettingsUpdateTest {
    private final BackupSettingsUpdate model = new BackupSettingsUpdate();

    /**
     * Model tests for BackupSettingsUpdate
     */
    @Test
    public void testBackupSettingsUpdate() {
        // TODO: test BackupSettingsUpdate
    }

    /**
     * Test the property 'backupsEnabled'
     */
    @Test
    public void backupsEnabledTest() {
        // TODO: test backupsEnabled
    }

    /**
     * Test the property 'retentionCount'
     */
    @Test
    public void retentionCountTest() {
        // TODO: test retentionCount
    }

    /**
     * Test the property 'createBackups'
     */
    @Test
    public void createBackupsTest() {
        // TODO: test createBackups
    }

    /**
     * Test the property 'backupAppliance'
     */
    @Test
    public void backupApplianceTest() {
        // TODO: test backupAppliance
    }

    /**
     * Test the property 'updateExisting'
     */
    @Test
    public void updateExistingTest() {
        // TODO: test updateExisting
    }

    /**
     * Test the property 'defaultSchedule'
     */
    @Test
    public void defaultScheduleTest() {
        // TODO: test defaultSchedule
    }

    /**
     * Test the property 'clearDefaultSchedule'
     */
    @Test
    public void clearDefaultScheduleTest() {
        // TODO: test clearDefaultSchedule
    }

    /**
     * Test the property 'defaultStorageBucket'
     */
    @Test
    public void defaultStorageBucketTest() {
        // TODO: test defaultStorageBucket
    }

    /**
     * Test the property 'clearDefaultStorageBucket'
     */
    @Test
    public void clearDefaultStorageBucketTest() {
        // TODO: test clearDefaultStorageBucket
    }

}
