/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.InlineResponse20079LoadBalancerMonitorLoadBalancerType;
import org.openapitools.client.model.VirtualImageLocationVirtualImage;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for VirtualImageLocation
 */
public class VirtualImageLocationTest {
    private final VirtualImageLocation model = new VirtualImageLocation();

    /**
     * Model tests for VirtualImageLocation
     */
    @Test
    public void testVirtualImageLocation() {
        // TODO: test VirtualImageLocation
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'cloud'
     */
    @Test
    public void cloudTest() {
        // TODO: test cloud
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'internalId'
     */
    @Test
    public void internalIdTest() {
        // TODO: test internalId
    }

    /**
     * Test the property 'externalId'
     */
    @Test
    public void externalIdTest() {
        // TODO: test externalId
    }

    /**
     * Test the property 'externalDiskId'
     */
    @Test
    public void externalDiskIdTest() {
        // TODO: test externalDiskId
    }

    /**
     * Test the property 'remotePath'
     */
    @Test
    public void remotePathTest() {
        // TODO: test remotePath
    }

    /**
     * Test the property 'imagePath'
     */
    @Test
    public void imagePathTest() {
        // TODO: test imagePath
    }

    /**
     * Test the property 'imageName'
     */
    @Test
    public void imageNameTest() {
        // TODO: test imageName
    }

    /**
     * Test the property 'imageRegion'
     */
    @Test
    public void imageRegionTest() {
        // TODO: test imageRegion
    }

    /**
     * Test the property 'imageFolder'
     */
    @Test
    public void imageFolderTest() {
        // TODO: test imageFolder
    }

    /**
     * Test the property 'refType'
     */
    @Test
    public void refTypeTest() {
        // TODO: test refType
    }

    /**
     * Test the property 'refId'
     */
    @Test
    public void refIdTest() {
        // TODO: test refId
    }

    /**
     * Test the property 'nodeRefType'
     */
    @Test
    public void nodeRefTypeTest() {
        // TODO: test nodeRefType
    }

    /**
     * Test the property 'nodeRefId'
     */
    @Test
    public void nodeRefIdTest() {
        // TODO: test nodeRefId
    }

    /**
     * Test the property 'subRefType'
     */
    @Test
    public void subRefTypeTest() {
        // TODO: test subRefType
    }

    /**
     * Test the property 'subRefId'
     */
    @Test
    public void subRefIdTest() {
        // TODO: test subRefId
    }

    /**
     * Test the property 'isPublic'
     */
    @Test
    public void isPublicTest() {
        // TODO: test isPublic
    }

    /**
     * Test the property 'systemImage'
     */
    @Test
    public void systemImageTest() {
        // TODO: test systemImage
    }

    /**
     * Test the property 'diskIndex'
     */
    @Test
    public void diskIndexTest() {
        // TODO: test diskIndex
    }

    /**
     * Test the property 'pricePlan'
     */
    @Test
    public void pricePlanTest() {
        // TODO: test pricePlan
    }

    /**
     * Test the property 'volumes'
     */
    @Test
    public void volumesTest() {
        // TODO: test volumes
    }

    /**
     * Test the property 'storageControllers'
     */
    @Test
    public void storageControllersTest() {
        // TODO: test storageControllers
    }

    /**
     * Test the property 'networkInterfaces'
     */
    @Test
    public void networkInterfacesTest() {
        // TODO: test networkInterfaces
    }

    /**
     * Test the property 'virtualImage'
     */
    @Test
    public void virtualImageTest() {
        // TODO: test virtualImage
    }

}
