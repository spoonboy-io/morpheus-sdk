/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.OneOfobjectobject;
import org.openapitools.client.model.OneOfobjectstring;
import org.openapitools.client.model.VirtualImageCreateStorageProvider;
import org.openapitools.client.model.VirtualImageCreateTags;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for VirtualImageCreate
 */
public class VirtualImageCreateTest {
    private final VirtualImageCreate model = new VirtualImageCreate();

    /**
     * Model tests for VirtualImageCreate
     */
    @Test
    public void testVirtualImageCreate() {
        // TODO: test VirtualImageCreate
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'imageType'
     */
    @Test
    public void imageTypeTest() {
        // TODO: test imageType
    }

    /**
     * Test the property 'storageProvider'
     */
    @Test
    public void storageProviderTest() {
        // TODO: test storageProvider
    }

    /**
     * Test the property 'isCloudInit'
     */
    @Test
    public void isCloudInitTest() {
        // TODO: test isCloudInit
    }

    /**
     * Test the property 'userData'
     */
    @Test
    public void userDataTest() {
        // TODO: test userData
    }

    /**
     * Test the property 'installAgent'
     */
    @Test
    public void installAgentTest() {
        // TODO: test installAgent
    }

    /**
     * Test the property 'sshUsername'
     */
    @Test
    public void sshUsernameTest() {
        // TODO: test sshUsername
    }

    /**
     * Test the property 'sshPassword'
     */
    @Test
    public void sshPasswordTest() {
        // TODO: test sshPassword
    }

    /**
     * Test the property 'sshKey'
     */
    @Test
    public void sshKeyTest() {
        // TODO: test sshKey
    }

    /**
     * Test the property 'osType'
     */
    @Test
    public void osTypeTest() {
        // TODO: test osType
    }

    /**
     * Test the property 'visibility'
     */
    @Test
    public void visibilityTest() {
        // TODO: test visibility
    }

    /**
     * Test the property 'accounts'
     */
    @Test
    public void accountsTest() {
        // TODO: test accounts
    }

    /**
     * Test the property 'isAutoJoinDomain'
     */
    @Test
    public void isAutoJoinDomainTest() {
        // TODO: test isAutoJoinDomain
    }

    /**
     * Test the property 'virtioSupported'
     */
    @Test
    public void virtioSupportedTest() {
        // TODO: test virtioSupported
    }

    /**
     * Test the property 'vmToolsInstalled'
     */
    @Test
    public void vmToolsInstalledTest() {
        // TODO: test vmToolsInstalled
    }

    /**
     * Test the property 'isForceCustomization'
     */
    @Test
    public void isForceCustomizationTest() {
        // TODO: test isForceCustomization
    }

    /**
     * Test the property 'trialVersion'
     */
    @Test
    public void trialVersionTest() {
        // TODO: test trialVersion
    }

    /**
     * Test the property 'isSysprep'
     */
    @Test
    public void isSysprepTest() {
        // TODO: test isSysprep
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

}
