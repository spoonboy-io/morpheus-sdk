/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for DeploymentVersions
 */
public class DeploymentVersionsTest {
    private final DeploymentVersions model = new DeploymentVersions();

    /**
     * Model tests for DeploymentVersions
     */
    @Test
    public void testDeploymentVersions() {
        // TODO: test DeploymentVersions
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'deployType'
     */
    @Test
    public void deployTypeTest() {
        // TODO: test deployType
    }

    /**
     * Test the property 'fetchUrl'
     */
    @Test
    public void fetchUrlTest() {
        // TODO: test fetchUrl
    }

    /**
     * Test the property 'gitUrl'
     */
    @Test
    public void gitUrlTest() {
        // TODO: test gitUrl
    }

    /**
     * Test the property 'gitRef'
     */
    @Test
    public void gitRefTest() {
        // TODO: test gitRef
    }

    /**
     * Test the property 'userVersion'
     */
    @Test
    public void userVersionTest() {
        // TODO: test userVersion
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'dateCreated'
     */
    @Test
    public void dateCreatedTest() {
        // TODO: test dateCreated
    }

    /**
     * Test the property 'lastUpdated'
     */
    @Test
    public void lastUpdatedTest() {
        // TODO: test lastUpdated
    }

}
