/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.UserSettingsUpdateDefaultCloud;
import org.openapitools.client.model.UserSettingsUpdateDefaultGroup;
import org.openapitools.client.model.UserSettingsUpdateDefaultPersona;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for UserSettingsUpdate
 */
public class UserSettingsUpdateTest {
    private final UserSettingsUpdate model = new UserSettingsUpdate();

    /**
     * Model tests for UserSettingsUpdate
     */
    @Test
    public void testUserSettingsUpdate() {
        // TODO: test UserSettingsUpdate
    }

    /**
     * Test the property 'username'
     */
    @Test
    public void usernameTest() {
        // TODO: test username
    }

    /**
     * Test the property 'email'
     */
    @Test
    public void emailTest() {
        // TODO: test email
    }

    /**
     * Test the property 'firstName'
     */
    @Test
    public void firstNameTest() {
        // TODO: test firstName
    }

    /**
     * Test the property 'lastName'
     */
    @Test
    public void lastNameTest() {
        // TODO: test lastName
    }

    /**
     * Test the property 'password'
     */
    @Test
    public void passwordTest() {
        // TODO: test password
    }

    /**
     * Test the property 'linuxUsername'
     */
    @Test
    public void linuxUsernameTest() {
        // TODO: test linuxUsername
    }

    /**
     * Test the property 'linuxPassword'
     */
    @Test
    public void linuxPasswordTest() {
        // TODO: test linuxPassword
    }

    /**
     * Test the property 'linuxKeyPairId'
     */
    @Test
    public void linuxKeyPairIdTest() {
        // TODO: test linuxKeyPairId
    }

    /**
     * Test the property 'windowsUsername'
     */
    @Test
    public void windowsUsernameTest() {
        // TODO: test windowsUsername
    }

    /**
     * Test the property 'windowsPassword'
     */
    @Test
    public void windowsPasswordTest() {
        // TODO: test windowsPassword
    }

    /**
     * Test the property 'receiveNotifications'
     */
    @Test
    public void receiveNotificationsTest() {
        // TODO: test receiveNotifications
    }

    /**
     * Test the property 'defaultGroup'
     */
    @Test
    public void defaultGroupTest() {
        // TODO: test defaultGroup
    }

    /**
     * Test the property 'defaultCloud'
     */
    @Test
    public void defaultCloudTest() {
        // TODO: test defaultCloud
    }

    /**
     * Test the property 'defaultPersona'
     */
    @Test
    public void defaultPersonaTest() {
        // TODO: test defaultPersona
    }

}
