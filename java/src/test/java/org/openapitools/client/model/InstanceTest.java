/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.GuidanceVmwareSizingResourceControllers;
import org.openapitools.client.model.InlineResponse200107NetworkPoolCreatedBy;
import org.openapitools.client.model.InlineResponse20040AppDeployInstance;
import org.openapitools.client.model.InlineResponse20079LoadBalancerMonitorLoadBalancerType;
import org.openapitools.client.model.InstanceConfig;
import org.openapitools.client.model.InstanceConnectionInfo;
import org.openapitools.client.model.InstanceInstancePrice;
import org.openapitools.client.model.InstanceInstanceType;
import org.openapitools.client.model.InstanceInterfaces;
import org.openapitools.client.model.InstanceLayout;
import org.openapitools.client.model.InstanceStats;
import org.openapitools.client.model.InstanceVolumes;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Instance
 */
public class InstanceTest {
    private final Instance model = new Instance();

    /**
     * Model tests for Instance
     */
    @Test
    public void testInstance() {
        // TODO: test Instance
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'uuid'
     */
    @Test
    public void uuidTest() {
        // TODO: test uuid
    }

    /**
     * Test the property 'accountId'
     */
    @Test
    public void accountIdTest() {
        // TODO: test accountId
    }

    /**
     * Test the property 'tenant'
     */
    @Test
    public void tenantTest() {
        // TODO: test tenant
    }

    /**
     * Test the property 'instanceType'
     */
    @Test
    public void instanceTypeTest() {
        // TODO: test instanceType
    }

    /**
     * Test the property 'group'
     */
    @Test
    public void groupTest() {
        // TODO: test group
    }

    /**
     * Test the property 'cloud'
     */
    @Test
    public void cloudTest() {
        // TODO: test cloud
    }

    /**
     * Test the property 'containers'
     */
    @Test
    public void containersTest() {
        // TODO: test containers
    }

    /**
     * Test the property 'servers'
     */
    @Test
    public void serversTest() {
        // TODO: test servers
    }

    /**
     * Test the property 'connectionInfo'
     */
    @Test
    public void connectionInfoTest() {
        // TODO: test connectionInfo
    }

    /**
     * Test the property 'layout'
     */
    @Test
    public void layoutTest() {
        // TODO: test layout
    }

    /**
     * Test the property 'plan'
     */
    @Test
    public void planTest() {
        // TODO: test plan
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'environment'
     */
    @Test
    public void environmentTest() {
        // TODO: test environment
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

    /**
     * Test the property 'configGroup'
     */
    @Test
    public void configGroupTest() {
        // TODO: test configGroup
    }

    /**
     * Test the property 'configId'
     */
    @Test
    public void configIdTest() {
        // TODO: test configId
    }

    /**
     * Test the property 'configRole'
     */
    @Test
    public void configRoleTest() {
        // TODO: test configRole
    }

    /**
     * Test the property 'volumes'
     */
    @Test
    public void volumesTest() {
        // TODO: test volumes
    }

    /**
     * Test the property 'controllers'
     */
    @Test
    public void controllersTest() {
        // TODO: test controllers
    }

    /**
     * Test the property 'interfaces'
     */
    @Test
    public void interfacesTest() {
        // TODO: test interfaces
    }

    /**
     * Test the property 'customOptions'
     */
    @Test
    public void customOptionsTest() {
        // TODO: test customOptions
    }

    /**
     * Test the property 'instanceVersion'
     */
    @Test
    public void instanceVersionTest() {
        // TODO: test instanceVersion
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'evars'
     */
    @Test
    public void evarsTest() {
        // TODO: test evars
    }

    /**
     * Test the property 'maxMemory'
     */
    @Test
    public void maxMemoryTest() {
        // TODO: test maxMemory
    }

    /**
     * Test the property 'maxStorage'
     */
    @Test
    public void maxStorageTest() {
        // TODO: test maxStorage
    }

    /**
     * Test the property 'maxCores'
     */
    @Test
    public void maxCoresTest() {
        // TODO: test maxCores
    }

    /**
     * Test the property 'coresPerSocket'
     */
    @Test
    public void coresPerSocketTest() {
        // TODO: test coresPerSocket
    }

    /**
     * Test the property 'maxCpu'
     */
    @Test
    public void maxCpuTest() {
        // TODO: test maxCpu
    }

    /**
     * Test the property 'hourlyCost'
     */
    @Test
    public void hourlyCostTest() {
        // TODO: test hourlyCost
    }

    /**
     * Test the property 'hourlyPrice'
     */
    @Test
    public void hourlyPriceTest() {
        // TODO: test hourlyPrice
    }

    /**
     * Test the property 'instancePrice'
     */
    @Test
    public void instancePriceTest() {
        // TODO: test instancePrice
    }

    /**
     * Test the property 'dateCreated'
     */
    @Test
    public void dateCreatedTest() {
        // TODO: test dateCreated
    }

    /**
     * Test the property 'lastUpdated'
     */
    @Test
    public void lastUpdatedTest() {
        // TODO: test lastUpdated
    }

    /**
     * Test the property 'hostName'
     */
    @Test
    public void hostNameTest() {
        // TODO: test hostName
    }

    /**
     * Test the property 'domainName'
     */
    @Test
    public void domainNameTest() {
        // TODO: test domainName
    }

    /**
     * Test the property 'environmentPrefix'
     */
    @Test
    public void environmentPrefixTest() {
        // TODO: test environmentPrefix
    }

    /**
     * Test the property 'firewallEnabled'
     */
    @Test
    public void firewallEnabledTest() {
        // TODO: test firewallEnabled
    }

    /**
     * Test the property 'networkLevel'
     */
    @Test
    public void networkLevelTest() {
        // TODO: test networkLevel
    }

    /**
     * Test the property 'autoScale'
     */
    @Test
    public void autoScaleTest() {
        // TODO: test autoScale
    }

    /**
     * Test the property 'instanceContext'
     */
    @Test
    public void instanceContextTest() {
        // TODO: test instanceContext
    }

    /**
     * Test the property 'currentDeployId'
     */
    @Test
    public void currentDeployIdTest() {
        // TODO: test currentDeployId
    }

    /**
     * Test the property 'locked'
     */
    @Test
    public void lockedTest() {
        // TODO: test locked
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'statusMessage'
     */
    @Test
    public void statusMessageTest() {
        // TODO: test statusMessage
    }

    /**
     * Test the property 'errorMessage'
     */
    @Test
    public void errorMessageTest() {
        // TODO: test errorMessage
    }

    /**
     * Test the property 'statusDate'
     */
    @Test
    public void statusDateTest() {
        // TODO: test statusDate
    }

    /**
     * Test the property 'statusPercent'
     */
    @Test
    public void statusPercentTest() {
        // TODO: test statusPercent
    }

    /**
     * Test the property 'statusEta'
     */
    @Test
    public void statusEtaTest() {
        // TODO: test statusEta
    }

    /**
     * Test the property 'userStatus'
     */
    @Test
    public void userStatusTest() {
        // TODO: test userStatus
    }

    /**
     * Test the property 'expireDays'
     */
    @Test
    public void expireDaysTest() {
        // TODO: test expireDays
    }

    /**
     * Test the property 'renewDays'
     */
    @Test
    public void renewDaysTest() {
        // TODO: test renewDays
    }

    /**
     * Test the property 'expireCount'
     */
    @Test
    public void expireCountTest() {
        // TODO: test expireCount
    }

    /**
     * Test the property 'expireDate'
     */
    @Test
    public void expireDateTest() {
        // TODO: test expireDate
    }

    /**
     * Test the property 'expireWarningDate'
     */
    @Test
    public void expireWarningDateTest() {
        // TODO: test expireWarningDate
    }

    /**
     * Test the property 'expireWarningSent'
     */
    @Test
    public void expireWarningSentTest() {
        // TODO: test expireWarningSent
    }

    /**
     * Test the property 'shutdownDays'
     */
    @Test
    public void shutdownDaysTest() {
        // TODO: test shutdownDays
    }

    /**
     * Test the property 'shutdownRenewDays'
     */
    @Test
    public void shutdownRenewDaysTest() {
        // TODO: test shutdownRenewDays
    }

    /**
     * Test the property 'shutdownCount'
     */
    @Test
    public void shutdownCountTest() {
        // TODO: test shutdownCount
    }

    /**
     * Test the property 'shutdownDate'
     */
    @Test
    public void shutdownDateTest() {
        // TODO: test shutdownDate
    }

    /**
     * Test the property 'shutdownWarningDate'
     */
    @Test
    public void shutdownWarningDateTest() {
        // TODO: test shutdownWarningDate
    }

    /**
     * Test the property 'shutdownWarningSent'
     */
    @Test
    public void shutdownWarningSentTest() {
        // TODO: test shutdownWarningSent
    }

    /**
     * Test the property 'removalDate'
     */
    @Test
    public void removalDateTest() {
        // TODO: test removalDate
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'owner'
     */
    @Test
    public void ownerTest() {
        // TODO: test owner
    }

    /**
     * Test the property 'notes'
     */
    @Test
    public void notesTest() {
        // TODO: test notes
    }

    /**
     * Test the property 'stats'
     */
    @Test
    public void statsTest() {
        // TODO: test stats
    }

    /**
     * Test the property 'powerSchedule'
     */
    @Test
    public void powerScheduleTest() {
        // TODO: test powerSchedule
    }

    /**
     * Test the property 'isScalable'
     */
    @Test
    public void isScalableTest() {
        // TODO: test isScalable
    }

    /**
     * Test the property 'instanceThreshold'
     */
    @Test
    public void instanceThresholdTest() {
        // TODO: test instanceThreshold
    }

    /**
     * Test the property 'isBusy'
     */
    @Test
    public void isBusyTest() {
        // TODO: test isBusy
    }

    /**
     * Test the property 'apps'
     */
    @Test
    public void appsTest() {
        // TODO: test apps
    }

}
