/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.OptionTypeCreateOptionList;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for OptionTypeUpdate
 */
public class OptionTypeUpdateTest {
    private final OptionTypeUpdate model = new OptionTypeUpdate();

    /**
     * Model tests for OptionTypeUpdate
     */
    @Test
    public void testOptionTypeUpdate() {
        // TODO: test OptionTypeUpdate
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'fieldName'
     */
    @Test
    public void fieldNameTest() {
        // TODO: test fieldName
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'fieldLabel'
     */
    @Test
    public void fieldLabelTest() {
        // TODO: test fieldLabel
    }

    /**
     * Test the property 'placeholder'
     */
    @Test
    public void placeholderTest() {
        // TODO: test placeholder
    }

    /**
     * Test the property 'verifyPattern'
     */
    @Test
    public void verifyPatternTest() {
        // TODO: test verifyPattern
    }

    /**
     * Test the property 'defaultValue'
     */
    @Test
    public void defaultValueTest() {
        // TODO: test defaultValue
    }

    /**
     * Test the property 'required'
     */
    @Test
    public void requiredTest() {
        // TODO: test required
    }

    /**
     * Test the property 'exportMeta'
     */
    @Test
    public void exportMetaTest() {
        // TODO: test exportMeta
    }

    /**
     * Test the property 'editable'
     */
    @Test
    public void editableTest() {
        // TODO: test editable
    }

    /**
     * Test the property 'optionList'
     */
    @Test
    public void optionListTest() {
        // TODO: test optionList
    }

}
