/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ApiBlueprintsIdUpdatePermissionsResourcePermissionSites;
import org.openapitools.client.model.InstanceConfigBackup;
import org.openapitools.client.model.InstanceConfigInstanceType;
import org.openapitools.client.model.InstanceConfigLayout;
import org.openapitools.client.model.InstanceConfigReplicationGroup;
import org.openapitools.client.model.InstanceConfigSecurityGroups;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for InstanceConfig
 */
public class InstanceConfigTest {
    private final InstanceConfig model = new InstanceConfig();

    /**
     * Model tests for InstanceConfig
     */
    @Test
    public void testInstanceConfig() {
        // TODO: test InstanceConfig
    }

    /**
     * Test the property 'createUser'
     */
    @Test
    public void createUserTest() {
        // TODO: test createUser
    }

    /**
     * Test the property 'isEC2'
     */
    @Test
    public void isEC2Test() {
        // TODO: test isEC2
    }

    /**
     * Test the property 'isVpcSelectable'
     */
    @Test
    public void isVpcSelectableTest() {
        // TODO: test isVpcSelectable
    }

    /**
     * Test the property 'noAgent'
     */
    @Test
    public void noAgentTest() {
        // TODO: test noAgent
    }

    /**
     * Test the property 'securityGroups'
     */
    @Test
    public void securityGroupsTest() {
        // TODO: test securityGroups
    }

    /**
     * Test the property 'smbiosAssetTag'
     */
    @Test
    public void smbiosAssetTagTest() {
        // TODO: test smbiosAssetTag
    }

    /**
     * Test the property 'nestedVirtualization'
     */
    @Test
    public void nestedVirtualizationTest() {
        // TODO: test nestedVirtualization
    }

    /**
     * Test the property 'vmwareFolderId'
     */
    @Test
    public void vmwareFolderIdTest() {
        // TODO: test vmwareFolderId
    }

    /**
     * Test the property 'customOptions'
     */
    @Test
    public void customOptionsTest() {
        // TODO: test customOptions
    }

    /**
     * Test the property 'resourcePoolId'
     */
    @Test
    public void resourcePoolIdTest() {
        // TODO: test resourcePoolId
    }

    /**
     * Test the property 'poolProviderType'
     */
    @Test
    public void poolProviderTypeTest() {
        // TODO: test poolProviderType
    }

    /**
     * Test the property 'userGroup'
     */
    @Test
    public void userGroupTest() {
        // TODO: test userGroup
    }

    /**
     * Test the property 'expireDays'
     */
    @Test
    public void expireDaysTest() {
        // TODO: test expireDays
    }

    /**
     * Test the property 'shutdownDays'
     */
    @Test
    public void shutdownDaysTest() {
        // TODO: test shutdownDays
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'hostName'
     */
    @Test
    public void hostNameTest() {
        // TODO: test hostName
    }

    /**
     * Test the property 'instanceType'
     */
    @Test
    public void instanceTypeTest() {
        // TODO: test instanceType
    }

    /**
     * Test the property 'site'
     */
    @Test
    public void siteTest() {
        // TODO: test site
    }

    /**
     * Test the property 'environmentPrefix'
     */
    @Test
    public void environmentPrefixTest() {
        // TODO: test environmentPrefix
    }

    /**
     * Test the property 'layout'
     */
    @Test
    public void layoutTest() {
        // TODO: test layout
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'instanceContext'
     */
    @Test
    public void instanceContextTest() {
        // TODO: test instanceContext
    }

    /**
     * Test the property 'memoryDisplay'
     */
    @Test
    public void memoryDisplayTest() {
        // TODO: test memoryDisplay
    }

    /**
     * Test the property 'expose'
     */
    @Test
    public void exposeTest() {
        // TODO: test expose
    }

    /**
     * Test the property 'createBackup'
     */
    @Test
    public void createBackupTest() {
        // TODO: test createBackup
    }

    /**
     * Test the property 'backup'
     */
    @Test
    public void backupTest() {
        // TODO: test backup
    }

    /**
     * Test the property 'replicationGroup'
     */
    @Test
    public void replicationGroupTest() {
        // TODO: test replicationGroup
    }

    /**
     * Test the property 'layoutSize'
     */
    @Test
    public void layoutSizeTest() {
        // TODO: test layoutSize
    }

    /**
     * Test the property 'lbInstances'
     */
    @Test
    public void lbInstancesTest() {
        // TODO: test lbInstances
    }

}
