/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.HealthCpu;
import org.openapitools.client.model.HealthDatabase;
import org.openapitools.client.model.HealthElastic;
import org.openapitools.client.model.HealthMemory;
import org.openapitools.client.model.HealthRabbit;
import org.openapitools.client.model.HealthThreads;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Health
 */
public class HealthTest {
    private final Health model = new Health();

    /**
     * Model tests for Health
     */
    @Test
    public void testHealth() {
        // TODO: test Health
    }

    /**
     * Test the property 'success'
     */
    @Test
    public void successTest() {
        // TODO: test success
    }

    /**
     * Test the property 'statusMessage'
     */
    @Test
    public void statusMessageTest() {
        // TODO: test statusMessage
    }

    /**
     * Test the property 'applianceUrl'
     */
    @Test
    public void applianceUrlTest() {
        // TODO: test applianceUrl
    }

    /**
     * Test the property 'buildVersion'
     */
    @Test
    public void buildVersionTest() {
        // TODO: test buildVersion
    }

    /**
     * Test the property 'setupNeeded'
     */
    @Test
    public void setupNeededTest() {
        // TODO: test setupNeeded
    }

    /**
     * Test the property 'date'
     */
    @Test
    public void dateTest() {
        // TODO: test date
    }

    /**
     * Test the property 'cpu'
     */
    @Test
    public void cpuTest() {
        // TODO: test cpu
    }

    /**
     * Test the property 'memory'
     */
    @Test
    public void memoryTest() {
        // TODO: test memory
    }

    /**
     * Test the property 'threads'
     */
    @Test
    public void threadsTest() {
        // TODO: test threads
    }

    /**
     * Test the property 'database'
     */
    @Test
    public void databaseTest() {
        // TODO: test database
    }

    /**
     * Test the property 'elastic'
     */
    @Test
    public void elasticTest() {
        // TODO: test elastic
    }

    /**
     * Test the property 'rabbit'
     */
    @Test
    public void rabbitTest() {
        // TODO: test rabbit
    }

}
