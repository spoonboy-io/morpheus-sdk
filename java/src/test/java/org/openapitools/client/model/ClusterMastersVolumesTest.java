/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ClusterMastersVolumes
 */
public class ClusterMastersVolumesTest {
    private final ClusterMastersVolumes model = new ClusterMastersVolumes();

    /**
     * Model tests for ClusterMastersVolumes
     */
    @Test
    public void testClusterMastersVolumes() {
        // TODO: test ClusterMastersVolumes
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'controllerId'
     */
    @Test
    public void controllerIdTest() {
        // TODO: test controllerId
    }

    /**
     * Test the property 'controllerMountPoint'
     */
    @Test
    public void controllerMountPointTest() {
        // TODO: test controllerMountPoint
    }

    /**
     * Test the property 'resizeable'
     */
    @Test
    public void resizeableTest() {
        // TODO: test resizeable
    }

    /**
     * Test the property 'planResizable'
     */
    @Test
    public void planResizableTest() {
        // TODO: test planResizable
    }

    /**
     * Test the property 'rootVolume'
     */
    @Test
    public void rootVolumeTest() {
        // TODO: test rootVolume
    }

    /**
     * Test the property 'unitNumber'
     */
    @Test
    public void unitNumberTest() {
        // TODO: test unitNumber
    }

    /**
     * Test the property 'typeId'
     */
    @Test
    public void typeIdTest() {
        // TODO: test typeId
    }

    /**
     * Test the property 'configurableIOPS'
     */
    @Test
    public void configurableIOPSTest() {
        // TODO: test configurableIOPS
    }

    /**
     * Test the property 'datastoreId'
     */
    @Test
    public void datastoreIdTest() {
        // TODO: test datastoreId
    }

    /**
     * Test the property 'maxStorage'
     */
    @Test
    public void maxStorageTest() {
        // TODO: test maxStorage
    }

    /**
     * Test the property 'displayOrder'
     */
    @Test
    public void displayOrderTest() {
        // TODO: test displayOrder
    }

    /**
     * Test the property 'maxIOPS'
     */
    @Test
    public void maxIOPSTest() {
        // TODO: test maxIOPS
    }

    /**
     * Test the property 'uuid'
     */
    @Test
    public void uuidTest() {
        // TODO: test uuid
    }

}
