/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for HealthDatabaseStats
 */
public class HealthDatabaseStatsTest {
    private final HealthDatabaseStats model = new HealthDatabaseStats();

    /**
     * Model tests for HealthDatabaseStats
     */
    @Test
    public void testHealthDatabaseStats() {
        // TODO: test HealthDatabaseStats
    }

    /**
     * Test the property 'abortedClients'
     */
    @Test
    public void abortedClientsTest() {
        // TODO: test abortedClients
    }

    /**
     * Test the property 'abortedConnects'
     */
    @Test
    public void abortedConnectsTest() {
        // TODO: test abortedConnects
    }

    /**
     * Test the property 'binlogSnapshotFile'
     */
    @Test
    public void binlogSnapshotFileTest() {
        // TODO: test binlogSnapshotFile
    }

    /**
     * Test the property 'binlogSnapshotPosition'
     */
    @Test
    public void binlogSnapshotPositionTest() {
        // TODO: test binlogSnapshotPosition
    }

    /**
     * Test the property 'binlogCacheDiskUse'
     */
    @Test
    public void binlogCacheDiskUseTest() {
        // TODO: test binlogCacheDiskUse
    }

    /**
     * Test the property 'binlogCacheUse'
     */
    @Test
    public void binlogCacheUseTest() {
        // TODO: test binlogCacheUse
    }

    /**
     * Test the property 'binlogSnapshotGtidExecuted'
     */
    @Test
    public void binlogSnapshotGtidExecutedTest() {
        // TODO: test binlogSnapshotGtidExecuted
    }

    /**
     * Test the property 'binlogStmtCacheDiskUse'
     */
    @Test
    public void binlogStmtCacheDiskUseTest() {
        // TODO: test binlogStmtCacheDiskUse
    }

    /**
     * Test the property 'binlogStmtCacheUse'
     */
    @Test
    public void binlogStmtCacheUseTest() {
        // TODO: test binlogStmtCacheUse
    }

    /**
     * Test the property 'bytesReceived'
     */
    @Test
    public void bytesReceivedTest() {
        // TODO: test bytesReceived
    }

    /**
     * Test the property 'bytesSent'
     */
    @Test
    public void bytesSentTest() {
        // TODO: test bytesSent
    }

    /**
     * Test the property 'comAdminCommands'
     */
    @Test
    public void comAdminCommandsTest() {
        // TODO: test comAdminCommands
    }

    /**
     * Test the property 'comAssignToKeycache'
     */
    @Test
    public void comAssignToKeycacheTest() {
        // TODO: test comAssignToKeycache
    }

    /**
     * Test the property 'comAlterDb'
     */
    @Test
    public void comAlterDbTest() {
        // TODO: test comAlterDb
    }

    /**
     * Test the property 'comAlterDbUpgrade'
     */
    @Test
    public void comAlterDbUpgradeTest() {
        // TODO: test comAlterDbUpgrade
    }

    /**
     * Test the property 'comAlterEvent'
     */
    @Test
    public void comAlterEventTest() {
        // TODO: test comAlterEvent
    }

    /**
     * Test the property 'comAlterFunction'
     */
    @Test
    public void comAlterFunctionTest() {
        // TODO: test comAlterFunction
    }

    /**
     * Test the property 'comAlterInstance'
     */
    @Test
    public void comAlterInstanceTest() {
        // TODO: test comAlterInstance
    }

    /**
     * Test the property 'comAlterProcedure'
     */
    @Test
    public void comAlterProcedureTest() {
        // TODO: test comAlterProcedure
    }

    /**
     * Test the property 'comAlterServer'
     */
    @Test
    public void comAlterServerTest() {
        // TODO: test comAlterServer
    }

    /**
     * Test the property 'comAlterTable'
     */
    @Test
    public void comAlterTableTest() {
        // TODO: test comAlterTable
    }

    /**
     * Test the property 'comAlterTablespace'
     */
    @Test
    public void comAlterTablespaceTest() {
        // TODO: test comAlterTablespace
    }

    /**
     * Test the property 'comAlterUser'
     */
    @Test
    public void comAlterUserTest() {
        // TODO: test comAlterUser
    }

    /**
     * Test the property 'comAnalyze'
     */
    @Test
    public void comAnalyzeTest() {
        // TODO: test comAnalyze
    }

    /**
     * Test the property 'comBegin'
     */
    @Test
    public void comBeginTest() {
        // TODO: test comBegin
    }

    /**
     * Test the property 'comBinlog'
     */
    @Test
    public void comBinlogTest() {
        // TODO: test comBinlog
    }

    /**
     * Test the property 'comCallProcedure'
     */
    @Test
    public void comCallProcedureTest() {
        // TODO: test comCallProcedure
    }

    /**
     * Test the property 'comChangeDb'
     */
    @Test
    public void comChangeDbTest() {
        // TODO: test comChangeDb
    }

    /**
     * Test the property 'comChangeMaster'
     */
    @Test
    public void comChangeMasterTest() {
        // TODO: test comChangeMaster
    }

    /**
     * Test the property 'comChangeReplFilter'
     */
    @Test
    public void comChangeReplFilterTest() {
        // TODO: test comChangeReplFilter
    }

    /**
     * Test the property 'comCheck'
     */
    @Test
    public void comCheckTest() {
        // TODO: test comCheck
    }

    /**
     * Test the property 'comChecksum'
     */
    @Test
    public void comChecksumTest() {
        // TODO: test comChecksum
    }

    /**
     * Test the property 'comCommit'
     */
    @Test
    public void comCommitTest() {
        // TODO: test comCommit
    }

    /**
     * Test the property 'comCreateCompressionDictionary'
     */
    @Test
    public void comCreateCompressionDictionaryTest() {
        // TODO: test comCreateCompressionDictionary
    }

    /**
     * Test the property 'comCreateDb'
     */
    @Test
    public void comCreateDbTest() {
        // TODO: test comCreateDb
    }

    /**
     * Test the property 'comCreateEvent'
     */
    @Test
    public void comCreateEventTest() {
        // TODO: test comCreateEvent
    }

    /**
     * Test the property 'comCreateFunction'
     */
    @Test
    public void comCreateFunctionTest() {
        // TODO: test comCreateFunction
    }

    /**
     * Test the property 'comCreateIndex'
     */
    @Test
    public void comCreateIndexTest() {
        // TODO: test comCreateIndex
    }

    /**
     * Test the property 'comCreateProcedure'
     */
    @Test
    public void comCreateProcedureTest() {
        // TODO: test comCreateProcedure
    }

    /**
     * Test the property 'comCreateServer'
     */
    @Test
    public void comCreateServerTest() {
        // TODO: test comCreateServer
    }

    /**
     * Test the property 'comCreateTable'
     */
    @Test
    public void comCreateTableTest() {
        // TODO: test comCreateTable
    }

    /**
     * Test the property 'comCreateTrigger'
     */
    @Test
    public void comCreateTriggerTest() {
        // TODO: test comCreateTrigger
    }

    /**
     * Test the property 'comCreateUdf'
     */
    @Test
    public void comCreateUdfTest() {
        // TODO: test comCreateUdf
    }

    /**
     * Test the property 'comCreateUser'
     */
    @Test
    public void comCreateUserTest() {
        // TODO: test comCreateUser
    }

    /**
     * Test the property 'comCreateView'
     */
    @Test
    public void comCreateViewTest() {
        // TODO: test comCreateView
    }

    /**
     * Test the property 'comDeallocSql'
     */
    @Test
    public void comDeallocSqlTest() {
        // TODO: test comDeallocSql
    }

    /**
     * Test the property 'comDelete'
     */
    @Test
    public void comDeleteTest() {
        // TODO: test comDelete
    }

    /**
     * Test the property 'comDeleteMulti'
     */
    @Test
    public void comDeleteMultiTest() {
        // TODO: test comDeleteMulti
    }

    /**
     * Test the property 'comDo'
     */
    @Test
    public void comDoTest() {
        // TODO: test comDo
    }

    /**
     * Test the property 'comDropCompressionDictionary'
     */
    @Test
    public void comDropCompressionDictionaryTest() {
        // TODO: test comDropCompressionDictionary
    }

    /**
     * Test the property 'comDropDb'
     */
    @Test
    public void comDropDbTest() {
        // TODO: test comDropDb
    }

    /**
     * Test the property 'comDropEvent'
     */
    @Test
    public void comDropEventTest() {
        // TODO: test comDropEvent
    }

    /**
     * Test the property 'comDropFunction'
     */
    @Test
    public void comDropFunctionTest() {
        // TODO: test comDropFunction
    }

    /**
     * Test the property 'comDropIndex'
     */
    @Test
    public void comDropIndexTest() {
        // TODO: test comDropIndex
    }

    /**
     * Test the property 'comDropProcedure'
     */
    @Test
    public void comDropProcedureTest() {
        // TODO: test comDropProcedure
    }

    /**
     * Test the property 'comDropServer'
     */
    @Test
    public void comDropServerTest() {
        // TODO: test comDropServer
    }

    /**
     * Test the property 'comDropTable'
     */
    @Test
    public void comDropTableTest() {
        // TODO: test comDropTable
    }

    /**
     * Test the property 'comDropTrigger'
     */
    @Test
    public void comDropTriggerTest() {
        // TODO: test comDropTrigger
    }

    /**
     * Test the property 'comDropUser'
     */
    @Test
    public void comDropUserTest() {
        // TODO: test comDropUser
    }

    /**
     * Test the property 'comDropView'
     */
    @Test
    public void comDropViewTest() {
        // TODO: test comDropView
    }

    /**
     * Test the property 'comEmptyQuery'
     */
    @Test
    public void comEmptyQueryTest() {
        // TODO: test comEmptyQuery
    }

    /**
     * Test the property 'comExecuteSql'
     */
    @Test
    public void comExecuteSqlTest() {
        // TODO: test comExecuteSql
    }

    /**
     * Test the property 'comExplainOther'
     */
    @Test
    public void comExplainOtherTest() {
        // TODO: test comExplainOther
    }

    /**
     * Test the property 'comFlush'
     */
    @Test
    public void comFlushTest() {
        // TODO: test comFlush
    }

    /**
     * Test the property 'comGetDiagnostics'
     */
    @Test
    public void comGetDiagnosticsTest() {
        // TODO: test comGetDiagnostics
    }

    /**
     * Test the property 'comGrant'
     */
    @Test
    public void comGrantTest() {
        // TODO: test comGrant
    }

    /**
     * Test the property 'comHaClose'
     */
    @Test
    public void comHaCloseTest() {
        // TODO: test comHaClose
    }

    /**
     * Test the property 'comHaOpen'
     */
    @Test
    public void comHaOpenTest() {
        // TODO: test comHaOpen
    }

    /**
     * Test the property 'comHaRead'
     */
    @Test
    public void comHaReadTest() {
        // TODO: test comHaRead
    }

    /**
     * Test the property 'comHelp'
     */
    @Test
    public void comHelpTest() {
        // TODO: test comHelp
    }

    /**
     * Test the property 'comInsert'
     */
    @Test
    public void comInsertTest() {
        // TODO: test comInsert
    }

    /**
     * Test the property 'comInsertSelect'
     */
    @Test
    public void comInsertSelectTest() {
        // TODO: test comInsertSelect
    }

    /**
     * Test the property 'comInstallPlugin'
     */
    @Test
    public void comInstallPluginTest() {
        // TODO: test comInstallPlugin
    }

    /**
     * Test the property 'comKill'
     */
    @Test
    public void comKillTest() {
        // TODO: test comKill
    }

    /**
     * Test the property 'comLoad'
     */
    @Test
    public void comLoadTest() {
        // TODO: test comLoad
    }

    /**
     * Test the property 'comLockTables'
     */
    @Test
    public void comLockTablesTest() {
        // TODO: test comLockTables
    }

    /**
     * Test the property 'comLockTablesForBackup'
     */
    @Test
    public void comLockTablesForBackupTest() {
        // TODO: test comLockTablesForBackup
    }

    /**
     * Test the property 'comLockBinlogForBackup'
     */
    @Test
    public void comLockBinlogForBackupTest() {
        // TODO: test comLockBinlogForBackup
    }

    /**
     * Test the property 'comOptimize'
     */
    @Test
    public void comOptimizeTest() {
        // TODO: test comOptimize
    }

    /**
     * Test the property 'comPreloadKeys'
     */
    @Test
    public void comPreloadKeysTest() {
        // TODO: test comPreloadKeys
    }

    /**
     * Test the property 'comPrepareSql'
     */
    @Test
    public void comPrepareSqlTest() {
        // TODO: test comPrepareSql
    }

    /**
     * Test the property 'comPurge'
     */
    @Test
    public void comPurgeTest() {
        // TODO: test comPurge
    }

    /**
     * Test the property 'comPurgeBeforeDate'
     */
    @Test
    public void comPurgeBeforeDateTest() {
        // TODO: test comPurgeBeforeDate
    }

    /**
     * Test the property 'comReleaseSavepoint'
     */
    @Test
    public void comReleaseSavepointTest() {
        // TODO: test comReleaseSavepoint
    }

    /**
     * Test the property 'comRenameTable'
     */
    @Test
    public void comRenameTableTest() {
        // TODO: test comRenameTable
    }

    /**
     * Test the property 'comRenameUser'
     */
    @Test
    public void comRenameUserTest() {
        // TODO: test comRenameUser
    }

    /**
     * Test the property 'comRepair'
     */
    @Test
    public void comRepairTest() {
        // TODO: test comRepair
    }

    /**
     * Test the property 'comReplace'
     */
    @Test
    public void comReplaceTest() {
        // TODO: test comReplace
    }

    /**
     * Test the property 'comReplaceSelect'
     */
    @Test
    public void comReplaceSelectTest() {
        // TODO: test comReplaceSelect
    }

    /**
     * Test the property 'comReset'
     */
    @Test
    public void comResetTest() {
        // TODO: test comReset
    }

    /**
     * Test the property 'comResignal'
     */
    @Test
    public void comResignalTest() {
        // TODO: test comResignal
    }

    /**
     * Test the property 'comRevoke'
     */
    @Test
    public void comRevokeTest() {
        // TODO: test comRevoke
    }

    /**
     * Test the property 'comRevokeAll'
     */
    @Test
    public void comRevokeAllTest() {
        // TODO: test comRevokeAll
    }

    /**
     * Test the property 'comRollback'
     */
    @Test
    public void comRollbackTest() {
        // TODO: test comRollback
    }

    /**
     * Test the property 'comRollbackToSavepoint'
     */
    @Test
    public void comRollbackToSavepointTest() {
        // TODO: test comRollbackToSavepoint
    }

    /**
     * Test the property 'comSavepoint'
     */
    @Test
    public void comSavepointTest() {
        // TODO: test comSavepoint
    }

    /**
     * Test the property 'comSelect'
     */
    @Test
    public void comSelectTest() {
        // TODO: test comSelect
    }

    /**
     * Test the property 'comSetOption'
     */
    @Test
    public void comSetOptionTest() {
        // TODO: test comSetOption
    }

    /**
     * Test the property 'comSignal'
     */
    @Test
    public void comSignalTest() {
        // TODO: test comSignal
    }

    /**
     * Test the property 'comShowBinlogEvents'
     */
    @Test
    public void comShowBinlogEventsTest() {
        // TODO: test comShowBinlogEvents
    }

    /**
     * Test the property 'comShowBinlogs'
     */
    @Test
    public void comShowBinlogsTest() {
        // TODO: test comShowBinlogs
    }

    /**
     * Test the property 'comShowCharsets'
     */
    @Test
    public void comShowCharsetsTest() {
        // TODO: test comShowCharsets
    }

    /**
     * Test the property 'comShowClientStatistics'
     */
    @Test
    public void comShowClientStatisticsTest() {
        // TODO: test comShowClientStatistics
    }

    /**
     * Test the property 'comShowCollations'
     */
    @Test
    public void comShowCollationsTest() {
        // TODO: test comShowCollations
    }

    /**
     * Test the property 'comShowCreateDb'
     */
    @Test
    public void comShowCreateDbTest() {
        // TODO: test comShowCreateDb
    }

    /**
     * Test the property 'comShowCreateEvent'
     */
    @Test
    public void comShowCreateEventTest() {
        // TODO: test comShowCreateEvent
    }

    /**
     * Test the property 'comShowCreateFunc'
     */
    @Test
    public void comShowCreateFuncTest() {
        // TODO: test comShowCreateFunc
    }

    /**
     * Test the property 'comShowCreateProc'
     */
    @Test
    public void comShowCreateProcTest() {
        // TODO: test comShowCreateProc
    }

    /**
     * Test the property 'comShowCreateTable'
     */
    @Test
    public void comShowCreateTableTest() {
        // TODO: test comShowCreateTable
    }

    /**
     * Test the property 'comShowCreateTrigger'
     */
    @Test
    public void comShowCreateTriggerTest() {
        // TODO: test comShowCreateTrigger
    }

    /**
     * Test the property 'comShowDatabases'
     */
    @Test
    public void comShowDatabasesTest() {
        // TODO: test comShowDatabases
    }

    /**
     * Test the property 'comShowEngineLogs'
     */
    @Test
    public void comShowEngineLogsTest() {
        // TODO: test comShowEngineLogs
    }

    /**
     * Test the property 'comShowEngineMutex'
     */
    @Test
    public void comShowEngineMutexTest() {
        // TODO: test comShowEngineMutex
    }

    /**
     * Test the property 'comShowEngineStatus'
     */
    @Test
    public void comShowEngineStatusTest() {
        // TODO: test comShowEngineStatus
    }

    /**
     * Test the property 'comShowEvents'
     */
    @Test
    public void comShowEventsTest() {
        // TODO: test comShowEvents
    }

    /**
     * Test the property 'comShowErrors'
     */
    @Test
    public void comShowErrorsTest() {
        // TODO: test comShowErrors
    }

    /**
     * Test the property 'comShowFields'
     */
    @Test
    public void comShowFieldsTest() {
        // TODO: test comShowFields
    }

    /**
     * Test the property 'comShowFunctionCode'
     */
    @Test
    public void comShowFunctionCodeTest() {
        // TODO: test comShowFunctionCode
    }

    /**
     * Test the property 'comShowFunctionStatus'
     */
    @Test
    public void comShowFunctionStatusTest() {
        // TODO: test comShowFunctionStatus
    }

    /**
     * Test the property 'comShowGrants'
     */
    @Test
    public void comShowGrantsTest() {
        // TODO: test comShowGrants
    }

    /**
     * Test the property 'comShowIndexStatistics'
     */
    @Test
    public void comShowIndexStatisticsTest() {
        // TODO: test comShowIndexStatistics
    }

    /**
     * Test the property 'comShowKeys'
     */
    @Test
    public void comShowKeysTest() {
        // TODO: test comShowKeys
    }

    /**
     * Test the property 'comShowMasterStatus'
     */
    @Test
    public void comShowMasterStatusTest() {
        // TODO: test comShowMasterStatus
    }

    /**
     * Test the property 'comShowOpenTables'
     */
    @Test
    public void comShowOpenTablesTest() {
        // TODO: test comShowOpenTables
    }

    /**
     * Test the property 'comShowPlugins'
     */
    @Test
    public void comShowPluginsTest() {
        // TODO: test comShowPlugins
    }

    /**
     * Test the property 'comShowPrivileges'
     */
    @Test
    public void comShowPrivilegesTest() {
        // TODO: test comShowPrivileges
    }

    /**
     * Test the property 'comShowProcedureCode'
     */
    @Test
    public void comShowProcedureCodeTest() {
        // TODO: test comShowProcedureCode
    }

    /**
     * Test the property 'comShowProcedureStatus'
     */
    @Test
    public void comShowProcedureStatusTest() {
        // TODO: test comShowProcedureStatus
    }

    /**
     * Test the property 'comShowProcesslist'
     */
    @Test
    public void comShowProcesslistTest() {
        // TODO: test comShowProcesslist
    }

    /**
     * Test the property 'comShowProfile'
     */
    @Test
    public void comShowProfileTest() {
        // TODO: test comShowProfile
    }

    /**
     * Test the property 'comShowProfiles'
     */
    @Test
    public void comShowProfilesTest() {
        // TODO: test comShowProfiles
    }

    /**
     * Test the property 'comShowRelaylogEvents'
     */
    @Test
    public void comShowRelaylogEventsTest() {
        // TODO: test comShowRelaylogEvents
    }

    /**
     * Test the property 'comShowSlaveHosts'
     */
    @Test
    public void comShowSlaveHostsTest() {
        // TODO: test comShowSlaveHosts
    }

    /**
     * Test the property 'comShowSlaveStatus'
     */
    @Test
    public void comShowSlaveStatusTest() {
        // TODO: test comShowSlaveStatus
    }

    /**
     * Test the property 'comShowStatus'
     */
    @Test
    public void comShowStatusTest() {
        // TODO: test comShowStatus
    }

    /**
     * Test the property 'comShowStorageEngines'
     */
    @Test
    public void comShowStorageEnginesTest() {
        // TODO: test comShowStorageEngines
    }

    /**
     * Test the property 'comShowTableStatistics'
     */
    @Test
    public void comShowTableStatisticsTest() {
        // TODO: test comShowTableStatistics
    }

    /**
     * Test the property 'comShowTableStatus'
     */
    @Test
    public void comShowTableStatusTest() {
        // TODO: test comShowTableStatus
    }

    /**
     * Test the property 'comShowTables'
     */
    @Test
    public void comShowTablesTest() {
        // TODO: test comShowTables
    }

    /**
     * Test the property 'comShowThreadStatistics'
     */
    @Test
    public void comShowThreadStatisticsTest() {
        // TODO: test comShowThreadStatistics
    }

    /**
     * Test the property 'comShowTriggers'
     */
    @Test
    public void comShowTriggersTest() {
        // TODO: test comShowTriggers
    }

    /**
     * Test the property 'comShowUserStatistics'
     */
    @Test
    public void comShowUserStatisticsTest() {
        // TODO: test comShowUserStatistics
    }

    /**
     * Test the property 'comShowVariables'
     */
    @Test
    public void comShowVariablesTest() {
        // TODO: test comShowVariables
    }

    /**
     * Test the property 'comShowWarnings'
     */
    @Test
    public void comShowWarningsTest() {
        // TODO: test comShowWarnings
    }

    /**
     * Test the property 'comShowCreateUser'
     */
    @Test
    public void comShowCreateUserTest() {
        // TODO: test comShowCreateUser
    }

    /**
     * Test the property 'comShutdown'
     */
    @Test
    public void comShutdownTest() {
        // TODO: test comShutdown
    }

    /**
     * Test the property 'comSlaveStart'
     */
    @Test
    public void comSlaveStartTest() {
        // TODO: test comSlaveStart
    }

    /**
     * Test the property 'comSlaveStop'
     */
    @Test
    public void comSlaveStopTest() {
        // TODO: test comSlaveStop
    }

    /**
     * Test the property 'comGroupReplicationStart'
     */
    @Test
    public void comGroupReplicationStartTest() {
        // TODO: test comGroupReplicationStart
    }

    /**
     * Test the property 'comGroupReplicationStop'
     */
    @Test
    public void comGroupReplicationStopTest() {
        // TODO: test comGroupReplicationStop
    }

    /**
     * Test the property 'comStmtExecute'
     */
    @Test
    public void comStmtExecuteTest() {
        // TODO: test comStmtExecute
    }

    /**
     * Test the property 'comStmtClose'
     */
    @Test
    public void comStmtCloseTest() {
        // TODO: test comStmtClose
    }

    /**
     * Test the property 'comStmtFetch'
     */
    @Test
    public void comStmtFetchTest() {
        // TODO: test comStmtFetch
    }

    /**
     * Test the property 'comStmtPrepare'
     */
    @Test
    public void comStmtPrepareTest() {
        // TODO: test comStmtPrepare
    }

    /**
     * Test the property 'comStmtReset'
     */
    @Test
    public void comStmtResetTest() {
        // TODO: test comStmtReset
    }

    /**
     * Test the property 'comStmtSendLongData'
     */
    @Test
    public void comStmtSendLongDataTest() {
        // TODO: test comStmtSendLongData
    }

    /**
     * Test the property 'comTruncate'
     */
    @Test
    public void comTruncateTest() {
        // TODO: test comTruncate
    }

    /**
     * Test the property 'comUninstallPlugin'
     */
    @Test
    public void comUninstallPluginTest() {
        // TODO: test comUninstallPlugin
    }

    /**
     * Test the property 'comUnlockBinlog'
     */
    @Test
    public void comUnlockBinlogTest() {
        // TODO: test comUnlockBinlog
    }

    /**
     * Test the property 'comUnlockTables'
     */
    @Test
    public void comUnlockTablesTest() {
        // TODO: test comUnlockTables
    }

    /**
     * Test the property 'comUpdate'
     */
    @Test
    public void comUpdateTest() {
        // TODO: test comUpdate
    }

    /**
     * Test the property 'comUpdateMulti'
     */
    @Test
    public void comUpdateMultiTest() {
        // TODO: test comUpdateMulti
    }

    /**
     * Test the property 'comXaCommit'
     */
    @Test
    public void comXaCommitTest() {
        // TODO: test comXaCommit
    }

    /**
     * Test the property 'comXaEnd'
     */
    @Test
    public void comXaEndTest() {
        // TODO: test comXaEnd
    }

    /**
     * Test the property 'comXaPrepare'
     */
    @Test
    public void comXaPrepareTest() {
        // TODO: test comXaPrepare
    }

    /**
     * Test the property 'comXaRecover'
     */
    @Test
    public void comXaRecoverTest() {
        // TODO: test comXaRecover
    }

    /**
     * Test the property 'comXaRollback'
     */
    @Test
    public void comXaRollbackTest() {
        // TODO: test comXaRollback
    }

    /**
     * Test the property 'comXaStart'
     */
    @Test
    public void comXaStartTest() {
        // TODO: test comXaStart
    }

    /**
     * Test the property 'comStmtReprepare'
     */
    @Test
    public void comStmtReprepareTest() {
        // TODO: test comStmtReprepare
    }

    /**
     * Test the property 'compression'
     */
    @Test
    public void compressionTest() {
        // TODO: test compression
    }

    /**
     * Test the property 'connectionErrorsAccept'
     */
    @Test
    public void connectionErrorsAcceptTest() {
        // TODO: test connectionErrorsAccept
    }

    /**
     * Test the property 'connectionErrorsInternal'
     */
    @Test
    public void connectionErrorsInternalTest() {
        // TODO: test connectionErrorsInternal
    }

    /**
     * Test the property 'connectionErrorsMaxConnections'
     */
    @Test
    public void connectionErrorsMaxConnectionsTest() {
        // TODO: test connectionErrorsMaxConnections
    }

    /**
     * Test the property 'connectionErrorsPeerAddress'
     */
    @Test
    public void connectionErrorsPeerAddressTest() {
        // TODO: test connectionErrorsPeerAddress
    }

    /**
     * Test the property 'connectionErrorsSelect'
     */
    @Test
    public void connectionErrorsSelectTest() {
        // TODO: test connectionErrorsSelect
    }

    /**
     * Test the property 'connectionErrorsTcpwrap'
     */
    @Test
    public void connectionErrorsTcpwrapTest() {
        // TODO: test connectionErrorsTcpwrap
    }

    /**
     * Test the property 'connections'
     */
    @Test
    public void connectionsTest() {
        // TODO: test connections
    }

    /**
     * Test the property 'createdTmpDiskTables'
     */
    @Test
    public void createdTmpDiskTablesTest() {
        // TODO: test createdTmpDiskTables
    }

    /**
     * Test the property 'createdTmpFiles'
     */
    @Test
    public void createdTmpFilesTest() {
        // TODO: test createdTmpFiles
    }

    /**
     * Test the property 'createdTmpTables'
     */
    @Test
    public void createdTmpTablesTest() {
        // TODO: test createdTmpTables
    }

    /**
     * Test the property 'delayedErrors'
     */
    @Test
    public void delayedErrorsTest() {
        // TODO: test delayedErrors
    }

    /**
     * Test the property 'delayedInsertThreads'
     */
    @Test
    public void delayedInsertThreadsTest() {
        // TODO: test delayedInsertThreads
    }

    /**
     * Test the property 'delayedWrites'
     */
    @Test
    public void delayedWritesTest() {
        // TODO: test delayedWrites
    }

    /**
     * Test the property 'flushCommands'
     */
    @Test
    public void flushCommandsTest() {
        // TODO: test flushCommands
    }

    /**
     * Test the property 'handlerCommit'
     */
    @Test
    public void handlerCommitTest() {
        // TODO: test handlerCommit
    }

    /**
     * Test the property 'handlerDelete'
     */
    @Test
    public void handlerDeleteTest() {
        // TODO: test handlerDelete
    }

    /**
     * Test the property 'handlerDiscover'
     */
    @Test
    public void handlerDiscoverTest() {
        // TODO: test handlerDiscover
    }

    /**
     * Test the property 'handlerExternalLock'
     */
    @Test
    public void handlerExternalLockTest() {
        // TODO: test handlerExternalLock
    }

    /**
     * Test the property 'handlerMrrInit'
     */
    @Test
    public void handlerMrrInitTest() {
        // TODO: test handlerMrrInit
    }

    /**
     * Test the property 'handlerPrepare'
     */
    @Test
    public void handlerPrepareTest() {
        // TODO: test handlerPrepare
    }

    /**
     * Test the property 'handlerReadFirst'
     */
    @Test
    public void handlerReadFirstTest() {
        // TODO: test handlerReadFirst
    }

    /**
     * Test the property 'handlerReadKey'
     */
    @Test
    public void handlerReadKeyTest() {
        // TODO: test handlerReadKey
    }

    /**
     * Test the property 'handlerReadLast'
     */
    @Test
    public void handlerReadLastTest() {
        // TODO: test handlerReadLast
    }

    /**
     * Test the property 'handlerReadNext'
     */
    @Test
    public void handlerReadNextTest() {
        // TODO: test handlerReadNext
    }

    /**
     * Test the property 'handlerReadPrev'
     */
    @Test
    public void handlerReadPrevTest() {
        // TODO: test handlerReadPrev
    }

    /**
     * Test the property 'handlerReadRnd'
     */
    @Test
    public void handlerReadRndTest() {
        // TODO: test handlerReadRnd
    }

    /**
     * Test the property 'handlerReadRndNext'
     */
    @Test
    public void handlerReadRndNextTest() {
        // TODO: test handlerReadRndNext
    }

    /**
     * Test the property 'handlerRollback'
     */
    @Test
    public void handlerRollbackTest() {
        // TODO: test handlerRollback
    }

    /**
     * Test the property 'handlerSavepoint'
     */
    @Test
    public void handlerSavepointTest() {
        // TODO: test handlerSavepoint
    }

    /**
     * Test the property 'handlerSavepointRollback'
     */
    @Test
    public void handlerSavepointRollbackTest() {
        // TODO: test handlerSavepointRollback
    }

    /**
     * Test the property 'handlerUpdate'
     */
    @Test
    public void handlerUpdateTest() {
        // TODO: test handlerUpdate
    }

    /**
     * Test the property 'handlerWrite'
     */
    @Test
    public void handlerWriteTest() {
        // TODO: test handlerWrite
    }

    /**
     * Test the property 'innodbBackgroundLogSync'
     */
    @Test
    public void innodbBackgroundLogSyncTest() {
        // TODO: test innodbBackgroundLogSync
    }

    /**
     * Test the property 'innodbBufferPoolDumpStatus'
     */
    @Test
    public void innodbBufferPoolDumpStatusTest() {
        // TODO: test innodbBufferPoolDumpStatus
    }

    /**
     * Test the property 'innodbBufferPoolLoadStatus'
     */
    @Test
    public void innodbBufferPoolLoadStatusTest() {
        // TODO: test innodbBufferPoolLoadStatus
    }

    /**
     * Test the property 'innodbBufferPoolResizeStatus'
     */
    @Test
    public void innodbBufferPoolResizeStatusTest() {
        // TODO: test innodbBufferPoolResizeStatus
    }

    /**
     * Test the property 'innodbBufferPoolPagesData'
     */
    @Test
    public void innodbBufferPoolPagesDataTest() {
        // TODO: test innodbBufferPoolPagesData
    }

    /**
     * Test the property 'innodbBufferPoolBytesData'
     */
    @Test
    public void innodbBufferPoolBytesDataTest() {
        // TODO: test innodbBufferPoolBytesData
    }

    /**
     * Test the property 'innodbBufferPoolPagesDirty'
     */
    @Test
    public void innodbBufferPoolPagesDirtyTest() {
        // TODO: test innodbBufferPoolPagesDirty
    }

    /**
     * Test the property 'innodbBufferPoolBytesDirty'
     */
    @Test
    public void innodbBufferPoolBytesDirtyTest() {
        // TODO: test innodbBufferPoolBytesDirty
    }

    /**
     * Test the property 'innodbBufferPoolPagesFlushed'
     */
    @Test
    public void innodbBufferPoolPagesFlushedTest() {
        // TODO: test innodbBufferPoolPagesFlushed
    }

    /**
     * Test the property 'innodbBufferPoolPagesFree'
     */
    @Test
    public void innodbBufferPoolPagesFreeTest() {
        // TODO: test innodbBufferPoolPagesFree
    }

    /**
     * Test the property 'innodbBufferPoolPagesLRUFlushed'
     */
    @Test
    public void innodbBufferPoolPagesLRUFlushedTest() {
        // TODO: test innodbBufferPoolPagesLRUFlushed
    }

    /**
     * Test the property 'innodbBufferPoolPagesMadeNotYoung'
     */
    @Test
    public void innodbBufferPoolPagesMadeNotYoungTest() {
        // TODO: test innodbBufferPoolPagesMadeNotYoung
    }

    /**
     * Test the property 'innodbBufferPoolPagesMadeYoung'
     */
    @Test
    public void innodbBufferPoolPagesMadeYoungTest() {
        // TODO: test innodbBufferPoolPagesMadeYoung
    }

    /**
     * Test the property 'innodbBufferPoolPagesMisc'
     */
    @Test
    public void innodbBufferPoolPagesMiscTest() {
        // TODO: test innodbBufferPoolPagesMisc
    }

    /**
     * Test the property 'innodbBufferPoolPagesOld'
     */
    @Test
    public void innodbBufferPoolPagesOldTest() {
        // TODO: test innodbBufferPoolPagesOld
    }

    /**
     * Test the property 'innodbBufferPoolPagesTotal'
     */
    @Test
    public void innodbBufferPoolPagesTotalTest() {
        // TODO: test innodbBufferPoolPagesTotal
    }

    /**
     * Test the property 'innodbBufferPoolReadAheadRnd'
     */
    @Test
    public void innodbBufferPoolReadAheadRndTest() {
        // TODO: test innodbBufferPoolReadAheadRnd
    }

    /**
     * Test the property 'innodbBufferPoolReadAhead'
     */
    @Test
    public void innodbBufferPoolReadAheadTest() {
        // TODO: test innodbBufferPoolReadAhead
    }

    /**
     * Test the property 'innodbBufferPoolReadAheadEvicted'
     */
    @Test
    public void innodbBufferPoolReadAheadEvictedTest() {
        // TODO: test innodbBufferPoolReadAheadEvicted
    }

    /**
     * Test the property 'innodbBufferPoolReadRequests'
     */
    @Test
    public void innodbBufferPoolReadRequestsTest() {
        // TODO: test innodbBufferPoolReadRequests
    }

    /**
     * Test the property 'innodbBufferPoolReads'
     */
    @Test
    public void innodbBufferPoolReadsTest() {
        // TODO: test innodbBufferPoolReads
    }

    /**
     * Test the property 'innodbBufferPoolWaitFree'
     */
    @Test
    public void innodbBufferPoolWaitFreeTest() {
        // TODO: test innodbBufferPoolWaitFree
    }

    /**
     * Test the property 'innodbBufferPoolWriteRequests'
     */
    @Test
    public void innodbBufferPoolWriteRequestsTest() {
        // TODO: test innodbBufferPoolWriteRequests
    }

    /**
     * Test the property 'innodbCheckpointAge'
     */
    @Test
    public void innodbCheckpointAgeTest() {
        // TODO: test innodbCheckpointAge
    }

    /**
     * Test the property 'innodbCheckpointMaxAge'
     */
    @Test
    public void innodbCheckpointMaxAgeTest() {
        // TODO: test innodbCheckpointMaxAge
    }

    /**
     * Test the property 'innodbDataFsyncs'
     */
    @Test
    public void innodbDataFsyncsTest() {
        // TODO: test innodbDataFsyncs
    }

    /**
     * Test the property 'innodbDataPendingFsyncs'
     */
    @Test
    public void innodbDataPendingFsyncsTest() {
        // TODO: test innodbDataPendingFsyncs
    }

    /**
     * Test the property 'innodbDataPendingReads'
     */
    @Test
    public void innodbDataPendingReadsTest() {
        // TODO: test innodbDataPendingReads
    }

    /**
     * Test the property 'innodbDataPendingWrites'
     */
    @Test
    public void innodbDataPendingWritesTest() {
        // TODO: test innodbDataPendingWrites
    }

    /**
     * Test the property 'innodbDataRead'
     */
    @Test
    public void innodbDataReadTest() {
        // TODO: test innodbDataRead
    }

    /**
     * Test the property 'innodbDataReads'
     */
    @Test
    public void innodbDataReadsTest() {
        // TODO: test innodbDataReads
    }

    /**
     * Test the property 'innodbDataWrites'
     */
    @Test
    public void innodbDataWritesTest() {
        // TODO: test innodbDataWrites
    }

    /**
     * Test the property 'innodbDataWritten'
     */
    @Test
    public void innodbDataWrittenTest() {
        // TODO: test innodbDataWritten
    }

    /**
     * Test the property 'innodbDblwrPagesWritten'
     */
    @Test
    public void innodbDblwrPagesWrittenTest() {
        // TODO: test innodbDblwrPagesWritten
    }

    /**
     * Test the property 'innodbDblwrWrites'
     */
    @Test
    public void innodbDblwrWritesTest() {
        // TODO: test innodbDblwrWrites
    }

    /**
     * Test the property 'innodbIbufFreeList'
     */
    @Test
    public void innodbIbufFreeListTest() {
        // TODO: test innodbIbufFreeList
    }

    /**
     * Test the property 'innodbIbufSegmentSize'
     */
    @Test
    public void innodbIbufSegmentSizeTest() {
        // TODO: test innodbIbufSegmentSize
    }

    /**
     * Test the property 'innodbLogWaits'
     */
    @Test
    public void innodbLogWaitsTest() {
        // TODO: test innodbLogWaits
    }

    /**
     * Test the property 'innodbLogWriteRequests'
     */
    @Test
    public void innodbLogWriteRequestsTest() {
        // TODO: test innodbLogWriteRequests
    }

    /**
     * Test the property 'innodbLogWrites'
     */
    @Test
    public void innodbLogWritesTest() {
        // TODO: test innodbLogWrites
    }

    /**
     * Test the property 'innodbLsnCurrent'
     */
    @Test
    public void innodbLsnCurrentTest() {
        // TODO: test innodbLsnCurrent
    }

    /**
     * Test the property 'innodbLsnFlushed'
     */
    @Test
    public void innodbLsnFlushedTest() {
        // TODO: test innodbLsnFlushed
    }

    /**
     * Test the property 'innodbLsnLastCheckpoint'
     */
    @Test
    public void innodbLsnLastCheckpointTest() {
        // TODO: test innodbLsnLastCheckpoint
    }

    /**
     * Test the property 'innodbMasterThreadActiveLoops'
     */
    @Test
    public void innodbMasterThreadActiveLoopsTest() {
        // TODO: test innodbMasterThreadActiveLoops
    }

    /**
     * Test the property 'innodbMasterThreadIdleLoops'
     */
    @Test
    public void innodbMasterThreadIdleLoopsTest() {
        // TODO: test innodbMasterThreadIdleLoops
    }

    /**
     * Test the property 'innodbMaxTrxId'
     */
    @Test
    public void innodbMaxTrxIdTest() {
        // TODO: test innodbMaxTrxId
    }

    /**
     * Test the property 'innodbMemAdaptiveHash'
     */
    @Test
    public void innodbMemAdaptiveHashTest() {
        // TODO: test innodbMemAdaptiveHash
    }

    /**
     * Test the property 'innodbMemDictionary'
     */
    @Test
    public void innodbMemDictionaryTest() {
        // TODO: test innodbMemDictionary
    }

    /**
     * Test the property 'innodbOldestViewLowLimitTrxId'
     */
    @Test
    public void innodbOldestViewLowLimitTrxIdTest() {
        // TODO: test innodbOldestViewLowLimitTrxId
    }

    /**
     * Test the property 'innodbOsLogFsyncs'
     */
    @Test
    public void innodbOsLogFsyncsTest() {
        // TODO: test innodbOsLogFsyncs
    }

    /**
     * Test the property 'innodbOsLogPendingFsyncs'
     */
    @Test
    public void innodbOsLogPendingFsyncsTest() {
        // TODO: test innodbOsLogPendingFsyncs
    }

    /**
     * Test the property 'innodbOsLogPendingWrites'
     */
    @Test
    public void innodbOsLogPendingWritesTest() {
        // TODO: test innodbOsLogPendingWrites
    }

    /**
     * Test the property 'innodbOsLogWritten'
     */
    @Test
    public void innodbOsLogWrittenTest() {
        // TODO: test innodbOsLogWritten
    }

    /**
     * Test the property 'innodbPageSize'
     */
    @Test
    public void innodbPageSizeTest() {
        // TODO: test innodbPageSize
    }

    /**
     * Test the property 'innodbPagesCreated'
     */
    @Test
    public void innodbPagesCreatedTest() {
        // TODO: test innodbPagesCreated
    }

    /**
     * Test the property 'innodbPagesRead'
     */
    @Test
    public void innodbPagesReadTest() {
        // TODO: test innodbPagesRead
    }

    /**
     * Test the property 'innodbPages0Read'
     */
    @Test
    public void innodbPages0ReadTest() {
        // TODO: test innodbPages0Read
    }

    /**
     * Test the property 'innodbPagesWritten'
     */
    @Test
    public void innodbPagesWrittenTest() {
        // TODO: test innodbPagesWritten
    }

    /**
     * Test the property 'innodbPurgeTrxId'
     */
    @Test
    public void innodbPurgeTrxIdTest() {
        // TODO: test innodbPurgeTrxId
    }

    /**
     * Test the property 'innodbPurgeUndoNo'
     */
    @Test
    public void innodbPurgeUndoNoTest() {
        // TODO: test innodbPurgeUndoNo
    }

    /**
     * Test the property 'innodbRowLockCurrentWaits'
     */
    @Test
    public void innodbRowLockCurrentWaitsTest() {
        // TODO: test innodbRowLockCurrentWaits
    }

    /**
     * Test the property 'innodbRowLockTime'
     */
    @Test
    public void innodbRowLockTimeTest() {
        // TODO: test innodbRowLockTime
    }

    /**
     * Test the property 'innodbRowLockTimeAvg'
     */
    @Test
    public void innodbRowLockTimeAvgTest() {
        // TODO: test innodbRowLockTimeAvg
    }

    /**
     * Test the property 'innodbRowLockTimeMax'
     */
    @Test
    public void innodbRowLockTimeMaxTest() {
        // TODO: test innodbRowLockTimeMax
    }

    /**
     * Test the property 'innodbRowLockWaits'
     */
    @Test
    public void innodbRowLockWaitsTest() {
        // TODO: test innodbRowLockWaits
    }

    /**
     * Test the property 'innodbRowsDeleted'
     */
    @Test
    public void innodbRowsDeletedTest() {
        // TODO: test innodbRowsDeleted
    }

    /**
     * Test the property 'innodbRowsInserted'
     */
    @Test
    public void innodbRowsInsertedTest() {
        // TODO: test innodbRowsInserted
    }

    /**
     * Test the property 'innodbRowsRead'
     */
    @Test
    public void innodbRowsReadTest() {
        // TODO: test innodbRowsRead
    }

    /**
     * Test the property 'innodbRowsUpdated'
     */
    @Test
    public void innodbRowsUpdatedTest() {
        // TODO: test innodbRowsUpdated
    }

    /**
     * Test the property 'innodbNumOpenFiles'
     */
    @Test
    public void innodbNumOpenFilesTest() {
        // TODO: test innodbNumOpenFiles
    }

    /**
     * Test the property 'innodbTruncatedStatusWrites'
     */
    @Test
    public void innodbTruncatedStatusWritesTest() {
        // TODO: test innodbTruncatedStatusWrites
    }

    /**
     * Test the property 'innodbAvailableUndoLogs'
     */
    @Test
    public void innodbAvailableUndoLogsTest() {
        // TODO: test innodbAvailableUndoLogs
    }

    /**
     * Test the property 'innodbSecondaryIndexTriggeredClusterReads'
     */
    @Test
    public void innodbSecondaryIndexTriggeredClusterReadsTest() {
        // TODO: test innodbSecondaryIndexTriggeredClusterReads
    }

    /**
     * Test the property 'innodbSecondaryIndexTriggeredClusterReadsAvoided'
     */
    @Test
    public void innodbSecondaryIndexTriggeredClusterReadsAvoidedTest() {
        // TODO: test innodbSecondaryIndexTriggeredClusterReadsAvoided
    }

    /**
     * Test the property 'innodbBufferedAioSubmitted'
     */
    @Test
    public void innodbBufferedAioSubmittedTest() {
        // TODO: test innodbBufferedAioSubmitted
    }

    /**
     * Test the property 'innodbScanPagesContiguous'
     */
    @Test
    public void innodbScanPagesContiguousTest() {
        // TODO: test innodbScanPagesContiguous
    }

    /**
     * Test the property 'innodbScanPagesDisjointed'
     */
    @Test
    public void innodbScanPagesDisjointedTest() {
        // TODO: test innodbScanPagesDisjointed
    }

    /**
     * Test the property 'innodbScanPagesTotalSeekDistance'
     */
    @Test
    public void innodbScanPagesTotalSeekDistanceTest() {
        // TODO: test innodbScanPagesTotalSeekDistance
    }

    /**
     * Test the property 'innodbScanDataSize'
     */
    @Test
    public void innodbScanDataSizeTest() {
        // TODO: test innodbScanDataSize
    }

    /**
     * Test the property 'innodbScanDeletedRecsSize'
     */
    @Test
    public void innodbScanDeletedRecsSizeTest() {
        // TODO: test innodbScanDeletedRecsSize
    }

    /**
     * Test the property 'innodbScrubBackgroundPageReorganizations'
     */
    @Test
    public void innodbScrubBackgroundPageReorganizationsTest() {
        // TODO: test innodbScrubBackgroundPageReorganizations
    }

    /**
     * Test the property 'innodbScrubBackgroundPageSplits'
     */
    @Test
    public void innodbScrubBackgroundPageSplitsTest() {
        // TODO: test innodbScrubBackgroundPageSplits
    }

    /**
     * Test the property 'innodbScrubBackgroundPageSplitFailuresUnderflow'
     */
    @Test
    public void innodbScrubBackgroundPageSplitFailuresUnderflowTest() {
        // TODO: test innodbScrubBackgroundPageSplitFailuresUnderflow
    }

    /**
     * Test the property 'innodbScrubBackgroundPageSplitFailuresOutOfFilespace'
     */
    @Test
    public void innodbScrubBackgroundPageSplitFailuresOutOfFilespaceTest() {
        // TODO: test innodbScrubBackgroundPageSplitFailuresOutOfFilespace
    }

    /**
     * Test the property 'innodbScrubBackgroundPageSplitFailuresMissingIndex'
     */
    @Test
    public void innodbScrubBackgroundPageSplitFailuresMissingIndexTest() {
        // TODO: test innodbScrubBackgroundPageSplitFailuresMissingIndex
    }

    /**
     * Test the property 'innodbScrubBackgroundPageSplitFailuresUnknown'
     */
    @Test
    public void innodbScrubBackgroundPageSplitFailuresUnknownTest() {
        // TODO: test innodbScrubBackgroundPageSplitFailuresUnknown
    }

    /**
     * Test the property 'innodbScrubLog'
     */
    @Test
    public void innodbScrubLogTest() {
        // TODO: test innodbScrubLog
    }

    /**
     * Test the property 'innodbEncryptionRotationPagesReadFromCache'
     */
    @Test
    public void innodbEncryptionRotationPagesReadFromCacheTest() {
        // TODO: test innodbEncryptionRotationPagesReadFromCache
    }

    /**
     * Test the property 'innodbEncryptionRotationPagesReadFromDisk'
     */
    @Test
    public void innodbEncryptionRotationPagesReadFromDiskTest() {
        // TODO: test innodbEncryptionRotationPagesReadFromDisk
    }

    /**
     * Test the property 'innodbEncryptionRotationPagesModified'
     */
    @Test
    public void innodbEncryptionRotationPagesModifiedTest() {
        // TODO: test innodbEncryptionRotationPagesModified
    }

    /**
     * Test the property 'innodbEncryptionRotationPagesFlushed'
     */
    @Test
    public void innodbEncryptionRotationPagesFlushedTest() {
        // TODO: test innodbEncryptionRotationPagesFlushed
    }

    /**
     * Test the property 'innodbEncryptionRotationEstimatedIops'
     */
    @Test
    public void innodbEncryptionRotationEstimatedIopsTest() {
        // TODO: test innodbEncryptionRotationEstimatedIops
    }

    /**
     * Test the property 'innodbEncryptionKeyRotationListLength'
     */
    @Test
    public void innodbEncryptionKeyRotationListLengthTest() {
        // TODO: test innodbEncryptionKeyRotationListLength
    }

    /**
     * Test the property 'innodbEncryptionNMergeBlocksEncrypted'
     */
    @Test
    public void innodbEncryptionNMergeBlocksEncryptedTest() {
        // TODO: test innodbEncryptionNMergeBlocksEncrypted
    }

    /**
     * Test the property 'innodbEncryptionNMergeBlocksDecrypted'
     */
    @Test
    public void innodbEncryptionNMergeBlocksDecryptedTest() {
        // TODO: test innodbEncryptionNMergeBlocksDecrypted
    }

    /**
     * Test the property 'innodbEncryptionNRowlogBlocksEncrypted'
     */
    @Test
    public void innodbEncryptionNRowlogBlocksEncryptedTest() {
        // TODO: test innodbEncryptionNRowlogBlocksEncrypted
    }

    /**
     * Test the property 'innodbEncryptionNRowlogBlocksDecrypted'
     */
    @Test
    public void innodbEncryptionNRowlogBlocksDecryptedTest() {
        // TODO: test innodbEncryptionNRowlogBlocksDecrypted
    }

    /**
     * Test the property 'innodbNumPagesEncrypted'
     */
    @Test
    public void innodbNumPagesEncryptedTest() {
        // TODO: test innodbNumPagesEncrypted
    }

    /**
     * Test the property 'innodbNumPagesDecrypted'
     */
    @Test
    public void innodbNumPagesDecryptedTest() {
        // TODO: test innodbNumPagesDecrypted
    }

    /**
     * Test the property 'innodbEncryptionRedoKeyVersion'
     */
    @Test
    public void innodbEncryptionRedoKeyVersionTest() {
        // TODO: test innodbEncryptionRedoKeyVersion
    }

    /**
     * Test the property 'keyBlocksNotFlushed'
     */
    @Test
    public void keyBlocksNotFlushedTest() {
        // TODO: test keyBlocksNotFlushed
    }

    /**
     * Test the property 'keyBlocksUnused'
     */
    @Test
    public void keyBlocksUnusedTest() {
        // TODO: test keyBlocksUnused
    }

    /**
     * Test the property 'keyBlocksUsed'
     */
    @Test
    public void keyBlocksUsedTest() {
        // TODO: test keyBlocksUsed
    }

    /**
     * Test the property 'keyReadRequests'
     */
    @Test
    public void keyReadRequestsTest() {
        // TODO: test keyReadRequests
    }

    /**
     * Test the property 'keyReads'
     */
    @Test
    public void keyReadsTest() {
        // TODO: test keyReads
    }

    /**
     * Test the property 'keyWriteRequests'
     */
    @Test
    public void keyWriteRequestsTest() {
        // TODO: test keyWriteRequests
    }

    /**
     * Test the property 'keyWrites'
     */
    @Test
    public void keyWritesTest() {
        // TODO: test keyWrites
    }

    /**
     * Test the property 'lastQueryCost'
     */
    @Test
    public void lastQueryCostTest() {
        // TODO: test lastQueryCost
    }

    /**
     * Test the property 'lastQueryPartialPlans'
     */
    @Test
    public void lastQueryPartialPlansTest() {
        // TODO: test lastQueryPartialPlans
    }

    /**
     * Test the property 'lockedConnects'
     */
    @Test
    public void lockedConnectsTest() {
        // TODO: test lockedConnects
    }

    /**
     * Test the property 'maxExecutionTimeExceeded'
     */
    @Test
    public void maxExecutionTimeExceededTest() {
        // TODO: test maxExecutionTimeExceeded
    }

    /**
     * Test the property 'maxExecutionTimeSet'
     */
    @Test
    public void maxExecutionTimeSetTest() {
        // TODO: test maxExecutionTimeSet
    }

    /**
     * Test the property 'maxExecutionTimeSetFailed'
     */
    @Test
    public void maxExecutionTimeSetFailedTest() {
        // TODO: test maxExecutionTimeSetFailed
    }

    /**
     * Test the property 'maxUsedConnections'
     */
    @Test
    public void maxUsedConnectionsTest() {
        // TODO: test maxUsedConnections
    }

    /**
     * Test the property 'maxUsedConnectionsTime'
     */
    @Test
    public void maxUsedConnectionsTimeTest() {
        // TODO: test maxUsedConnectionsTime
    }

    /**
     * Test the property 'notFlushedDelayedRows'
     */
    @Test
    public void notFlushedDelayedRowsTest() {
        // TODO: test notFlushedDelayedRows
    }

    /**
     * Test the property 'ongoingAnonymousTransactionCount'
     */
    @Test
    public void ongoingAnonymousTransactionCountTest() {
        // TODO: test ongoingAnonymousTransactionCount
    }

    /**
     * Test the property 'openFiles'
     */
    @Test
    public void openFilesTest() {
        // TODO: test openFiles
    }

    /**
     * Test the property 'openStreams'
     */
    @Test
    public void openStreamsTest() {
        // TODO: test openStreams
    }

    /**
     * Test the property 'openTableDefinitions'
     */
    @Test
    public void openTableDefinitionsTest() {
        // TODO: test openTableDefinitions
    }

    /**
     * Test the property 'openTables'
     */
    @Test
    public void openTablesTest() {
        // TODO: test openTables
    }

    /**
     * Test the property 'openedFiles'
     */
    @Test
    public void openedFilesTest() {
        // TODO: test openedFiles
    }

    /**
     * Test the property 'openedTableDefinitions'
     */
    @Test
    public void openedTableDefinitionsTest() {
        // TODO: test openedTableDefinitions
    }

    /**
     * Test the property 'openedTables'
     */
    @Test
    public void openedTablesTest() {
        // TODO: test openedTables
    }

    /**
     * Test the property 'performanceSchemaAccountsLost'
     */
    @Test
    public void performanceSchemaAccountsLostTest() {
        // TODO: test performanceSchemaAccountsLost
    }

    /**
     * Test the property 'performanceSchemaCondClassesLost'
     */
    @Test
    public void performanceSchemaCondClassesLostTest() {
        // TODO: test performanceSchemaCondClassesLost
    }

    /**
     * Test the property 'performanceSchemaCondInstancesLost'
     */
    @Test
    public void performanceSchemaCondInstancesLostTest() {
        // TODO: test performanceSchemaCondInstancesLost
    }

    /**
     * Test the property 'performanceSchemaDigestLost'
     */
    @Test
    public void performanceSchemaDigestLostTest() {
        // TODO: test performanceSchemaDigestLost
    }

    /**
     * Test the property 'performanceSchemaFileClassesLost'
     */
    @Test
    public void performanceSchemaFileClassesLostTest() {
        // TODO: test performanceSchemaFileClassesLost
    }

    /**
     * Test the property 'performanceSchemaFileHandlesLost'
     */
    @Test
    public void performanceSchemaFileHandlesLostTest() {
        // TODO: test performanceSchemaFileHandlesLost
    }

    /**
     * Test the property 'performanceSchemaFileInstancesLost'
     */
    @Test
    public void performanceSchemaFileInstancesLostTest() {
        // TODO: test performanceSchemaFileInstancesLost
    }

    /**
     * Test the property 'performanceSchemaHostsLost'
     */
    @Test
    public void performanceSchemaHostsLostTest() {
        // TODO: test performanceSchemaHostsLost
    }

    /**
     * Test the property 'performanceSchemaIndexStatLost'
     */
    @Test
    public void performanceSchemaIndexStatLostTest() {
        // TODO: test performanceSchemaIndexStatLost
    }

    /**
     * Test the property 'performanceSchemaLockerLost'
     */
    @Test
    public void performanceSchemaLockerLostTest() {
        // TODO: test performanceSchemaLockerLost
    }

    /**
     * Test the property 'performanceSchemaMemoryClassesLost'
     */
    @Test
    public void performanceSchemaMemoryClassesLostTest() {
        // TODO: test performanceSchemaMemoryClassesLost
    }

    /**
     * Test the property 'performanceSchemaMetadataLockLost'
     */
    @Test
    public void performanceSchemaMetadataLockLostTest() {
        // TODO: test performanceSchemaMetadataLockLost
    }

    /**
     * Test the property 'performanceSchemaMutexClassesLost'
     */
    @Test
    public void performanceSchemaMutexClassesLostTest() {
        // TODO: test performanceSchemaMutexClassesLost
    }

    /**
     * Test the property 'performanceSchemaMutexInstancesLost'
     */
    @Test
    public void performanceSchemaMutexInstancesLostTest() {
        // TODO: test performanceSchemaMutexInstancesLost
    }

    /**
     * Test the property 'performanceSchemaNestedStatementLost'
     */
    @Test
    public void performanceSchemaNestedStatementLostTest() {
        // TODO: test performanceSchemaNestedStatementLost
    }

    /**
     * Test the property 'performanceSchemaPreparedStatementsLost'
     */
    @Test
    public void performanceSchemaPreparedStatementsLostTest() {
        // TODO: test performanceSchemaPreparedStatementsLost
    }

    /**
     * Test the property 'performanceSchemaProgramLost'
     */
    @Test
    public void performanceSchemaProgramLostTest() {
        // TODO: test performanceSchemaProgramLost
    }

    /**
     * Test the property 'performanceSchemaRwlockClassesLost'
     */
    @Test
    public void performanceSchemaRwlockClassesLostTest() {
        // TODO: test performanceSchemaRwlockClassesLost
    }

    /**
     * Test the property 'performanceSchemaRwlockInstancesLost'
     */
    @Test
    public void performanceSchemaRwlockInstancesLostTest() {
        // TODO: test performanceSchemaRwlockInstancesLost
    }

    /**
     * Test the property 'performanceSchemaSessionConnectAttrsLost'
     */
    @Test
    public void performanceSchemaSessionConnectAttrsLostTest() {
        // TODO: test performanceSchemaSessionConnectAttrsLost
    }

    /**
     * Test the property 'performanceSchemaSocketClassesLost'
     */
    @Test
    public void performanceSchemaSocketClassesLostTest() {
        // TODO: test performanceSchemaSocketClassesLost
    }

    /**
     * Test the property 'performanceSchemaSocketInstancesLost'
     */
    @Test
    public void performanceSchemaSocketInstancesLostTest() {
        // TODO: test performanceSchemaSocketInstancesLost
    }

    /**
     * Test the property 'performanceSchemaStageClassesLost'
     */
    @Test
    public void performanceSchemaStageClassesLostTest() {
        // TODO: test performanceSchemaStageClassesLost
    }

    /**
     * Test the property 'performanceSchemaStatementClassesLost'
     */
    @Test
    public void performanceSchemaStatementClassesLostTest() {
        // TODO: test performanceSchemaStatementClassesLost
    }

    /**
     * Test the property 'performanceSchemaTableHandlesLost'
     */
    @Test
    public void performanceSchemaTableHandlesLostTest() {
        // TODO: test performanceSchemaTableHandlesLost
    }

    /**
     * Test the property 'performanceSchemaTableInstancesLost'
     */
    @Test
    public void performanceSchemaTableInstancesLostTest() {
        // TODO: test performanceSchemaTableInstancesLost
    }

    /**
     * Test the property 'performanceSchemaTableLockStatLost'
     */
    @Test
    public void performanceSchemaTableLockStatLostTest() {
        // TODO: test performanceSchemaTableLockStatLost
    }

    /**
     * Test the property 'performanceSchemaThreadClassesLost'
     */
    @Test
    public void performanceSchemaThreadClassesLostTest() {
        // TODO: test performanceSchemaThreadClassesLost
    }

    /**
     * Test the property 'performanceSchemaThreadInstancesLost'
     */
    @Test
    public void performanceSchemaThreadInstancesLostTest() {
        // TODO: test performanceSchemaThreadInstancesLost
    }

    /**
     * Test the property 'performanceSchemaUsersLost'
     */
    @Test
    public void performanceSchemaUsersLostTest() {
        // TODO: test performanceSchemaUsersLost
    }

    /**
     * Test the property 'preparedStmtCount'
     */
    @Test
    public void preparedStmtCountTest() {
        // TODO: test preparedStmtCount
    }

    /**
     * Test the property 'qcacheFreeBlocks'
     */
    @Test
    public void qcacheFreeBlocksTest() {
        // TODO: test qcacheFreeBlocks
    }

    /**
     * Test the property 'qcacheFreeMemory'
     */
    @Test
    public void qcacheFreeMemoryTest() {
        // TODO: test qcacheFreeMemory
    }

    /**
     * Test the property 'qcacheHits'
     */
    @Test
    public void qcacheHitsTest() {
        // TODO: test qcacheHits
    }

    /**
     * Test the property 'qcacheInserts'
     */
    @Test
    public void qcacheInsertsTest() {
        // TODO: test qcacheInserts
    }

    /**
     * Test the property 'qcacheLowmemPrunes'
     */
    @Test
    public void qcacheLowmemPrunesTest() {
        // TODO: test qcacheLowmemPrunes
    }

    /**
     * Test the property 'qcacheNotCached'
     */
    @Test
    public void qcacheNotCachedTest() {
        // TODO: test qcacheNotCached
    }

    /**
     * Test the property 'qcacheQueriesInCache'
     */
    @Test
    public void qcacheQueriesInCacheTest() {
        // TODO: test qcacheQueriesInCache
    }

    /**
     * Test the property 'qcacheTotalBlocks'
     */
    @Test
    public void qcacheTotalBlocksTest() {
        // TODO: test qcacheTotalBlocks
    }

    /**
     * Test the property 'queries'
     */
    @Test
    public void queriesTest() {
        // TODO: test queries
    }

    /**
     * Test the property 'questions'
     */
    @Test
    public void questionsTest() {
        // TODO: test questions
    }

    /**
     * Test the property 'rsaPublicKey'
     */
    @Test
    public void rsaPublicKeyTest() {
        // TODO: test rsaPublicKey
    }

    /**
     * Test the property 'selectFullJoin'
     */
    @Test
    public void selectFullJoinTest() {
        // TODO: test selectFullJoin
    }

    /**
     * Test the property 'selectFullRangeJoin'
     */
    @Test
    public void selectFullRangeJoinTest() {
        // TODO: test selectFullRangeJoin
    }

    /**
     * Test the property 'selectRange'
     */
    @Test
    public void selectRangeTest() {
        // TODO: test selectRange
    }

    /**
     * Test the property 'selectRangeCheck'
     */
    @Test
    public void selectRangeCheckTest() {
        // TODO: test selectRangeCheck
    }

    /**
     * Test the property 'selectScan'
     */
    @Test
    public void selectScanTest() {
        // TODO: test selectScan
    }

    /**
     * Test the property 'slaveOpenTempTables'
     */
    @Test
    public void slaveOpenTempTablesTest() {
        // TODO: test slaveOpenTempTables
    }

    /**
     * Test the property 'slowLaunchThreads'
     */
    @Test
    public void slowLaunchThreadsTest() {
        // TODO: test slowLaunchThreads
    }

    /**
     * Test the property 'slowQueries'
     */
    @Test
    public void slowQueriesTest() {
        // TODO: test slowQueries
    }

    /**
     * Test the property 'sortMergePasses'
     */
    @Test
    public void sortMergePassesTest() {
        // TODO: test sortMergePasses
    }

    /**
     * Test the property 'sortRange'
     */
    @Test
    public void sortRangeTest() {
        // TODO: test sortRange
    }

    /**
     * Test the property 'sortRows'
     */
    @Test
    public void sortRowsTest() {
        // TODO: test sortRows
    }

    /**
     * Test the property 'sortScan'
     */
    @Test
    public void sortScanTest() {
        // TODO: test sortScan
    }

    /**
     * Test the property 'sslAcceptRenegotiates'
     */
    @Test
    public void sslAcceptRenegotiatesTest() {
        // TODO: test sslAcceptRenegotiates
    }

    /**
     * Test the property 'sslAccepts'
     */
    @Test
    public void sslAcceptsTest() {
        // TODO: test sslAccepts
    }

    /**
     * Test the property 'sslCallbackCacheHits'
     */
    @Test
    public void sslCallbackCacheHitsTest() {
        // TODO: test sslCallbackCacheHits
    }

    /**
     * Test the property 'sslCipher'
     */
    @Test
    public void sslCipherTest() {
        // TODO: test sslCipher
    }

    /**
     * Test the property 'sslCipherList'
     */
    @Test
    public void sslCipherListTest() {
        // TODO: test sslCipherList
    }

    /**
     * Test the property 'sslClientConnects'
     */
    @Test
    public void sslClientConnectsTest() {
        // TODO: test sslClientConnects
    }

    /**
     * Test the property 'sslConnectRenegotiates'
     */
    @Test
    public void sslConnectRenegotiatesTest() {
        // TODO: test sslConnectRenegotiates
    }

    /**
     * Test the property 'sslCtxVerifyDepth'
     */
    @Test
    public void sslCtxVerifyDepthTest() {
        // TODO: test sslCtxVerifyDepth
    }

    /**
     * Test the property 'sslCtxVerifyMode'
     */
    @Test
    public void sslCtxVerifyModeTest() {
        // TODO: test sslCtxVerifyMode
    }

    /**
     * Test the property 'sslDefaultTimeout'
     */
    @Test
    public void sslDefaultTimeoutTest() {
        // TODO: test sslDefaultTimeout
    }

    /**
     * Test the property 'sslFinishedAccepts'
     */
    @Test
    public void sslFinishedAcceptsTest() {
        // TODO: test sslFinishedAccepts
    }

    /**
     * Test the property 'sslFinishedConnects'
     */
    @Test
    public void sslFinishedConnectsTest() {
        // TODO: test sslFinishedConnects
    }

    /**
     * Test the property 'sslServerNotAfter'
     */
    @Test
    public void sslServerNotAfterTest() {
        // TODO: test sslServerNotAfter
    }

    /**
     * Test the property 'sslServerNotBefore'
     */
    @Test
    public void sslServerNotBeforeTest() {
        // TODO: test sslServerNotBefore
    }

    /**
     * Test the property 'sslSessionCacheHits'
     */
    @Test
    public void sslSessionCacheHitsTest() {
        // TODO: test sslSessionCacheHits
    }

    /**
     * Test the property 'sslSessionCacheMisses'
     */
    @Test
    public void sslSessionCacheMissesTest() {
        // TODO: test sslSessionCacheMisses
    }

    /**
     * Test the property 'sslSessionCacheMode'
     */
    @Test
    public void sslSessionCacheModeTest() {
        // TODO: test sslSessionCacheMode
    }

    /**
     * Test the property 'sslSessionCacheOverflows'
     */
    @Test
    public void sslSessionCacheOverflowsTest() {
        // TODO: test sslSessionCacheOverflows
    }

    /**
     * Test the property 'sslSessionCacheSize'
     */
    @Test
    public void sslSessionCacheSizeTest() {
        // TODO: test sslSessionCacheSize
    }

    /**
     * Test the property 'sslSessionCacheTimeouts'
     */
    @Test
    public void sslSessionCacheTimeoutsTest() {
        // TODO: test sslSessionCacheTimeouts
    }

    /**
     * Test the property 'sslSessionsReused'
     */
    @Test
    public void sslSessionsReusedTest() {
        // TODO: test sslSessionsReused
    }

    /**
     * Test the property 'sslUsedSessionCacheEntries'
     */
    @Test
    public void sslUsedSessionCacheEntriesTest() {
        // TODO: test sslUsedSessionCacheEntries
    }

    /**
     * Test the property 'sslVerifyDepth'
     */
    @Test
    public void sslVerifyDepthTest() {
        // TODO: test sslVerifyDepth
    }

    /**
     * Test the property 'sslVerifyMode'
     */
    @Test
    public void sslVerifyModeTest() {
        // TODO: test sslVerifyMode
    }

    /**
     * Test the property 'sslVersion'
     */
    @Test
    public void sslVersionTest() {
        // TODO: test sslVersion
    }

    /**
     * Test the property 'tableLocksImmediate'
     */
    @Test
    public void tableLocksImmediateTest() {
        // TODO: test tableLocksImmediate
    }

    /**
     * Test the property 'tableLocksWaited'
     */
    @Test
    public void tableLocksWaitedTest() {
        // TODO: test tableLocksWaited
    }

    /**
     * Test the property 'tableOpenCacheHits'
     */
    @Test
    public void tableOpenCacheHitsTest() {
        // TODO: test tableOpenCacheHits
    }

    /**
     * Test the property 'tableOpenCacheMisses'
     */
    @Test
    public void tableOpenCacheMissesTest() {
        // TODO: test tableOpenCacheMisses
    }

    /**
     * Test the property 'tableOpenCacheOverflows'
     */
    @Test
    public void tableOpenCacheOverflowsTest() {
        // TODO: test tableOpenCacheOverflows
    }

    /**
     * Test the property 'tcLogMaxPagesUsed'
     */
    @Test
    public void tcLogMaxPagesUsedTest() {
        // TODO: test tcLogMaxPagesUsed
    }

    /**
     * Test the property 'tcLogPageSize'
     */
    @Test
    public void tcLogPageSizeTest() {
        // TODO: test tcLogPageSize
    }

    /**
     * Test the property 'tcLogPageWaits'
     */
    @Test
    public void tcLogPageWaitsTest() {
        // TODO: test tcLogPageWaits
    }

    /**
     * Test the property 'threadpoolIdleThreads'
     */
    @Test
    public void threadpoolIdleThreadsTest() {
        // TODO: test threadpoolIdleThreads
    }

    /**
     * Test the property 'threadpoolThreads'
     */
    @Test
    public void threadpoolThreadsTest() {
        // TODO: test threadpoolThreads
    }

    /**
     * Test the property 'threadsCached'
     */
    @Test
    public void threadsCachedTest() {
        // TODO: test threadsCached
    }

    /**
     * Test the property 'threadsConnected'
     */
    @Test
    public void threadsConnectedTest() {
        // TODO: test threadsConnected
    }

    /**
     * Test the property 'threadsCreated'
     */
    @Test
    public void threadsCreatedTest() {
        // TODO: test threadsCreated
    }

    /**
     * Test the property 'threadsRunning'
     */
    @Test
    public void threadsRunningTest() {
        // TODO: test threadsRunning
    }

    /**
     * Test the property 'uptime'
     */
    @Test
    public void uptimeTest() {
        // TODO: test uptime
    }

    /**
     * Test the property 'uptimeSinceFlushStatus'
     */
    @Test
    public void uptimeSinceFlushStatusTest() {
        // TODO: test uptimeSinceFlushStatus
    }

    /**
     * Test the property 'wsrepLocalStateUuid'
     */
    @Test
    public void wsrepLocalStateUuidTest() {
        // TODO: test wsrepLocalStateUuid
    }

    /**
     * Test the property 'wsrepProtocolVersion'
     */
    @Test
    public void wsrepProtocolVersionTest() {
        // TODO: test wsrepProtocolVersion
    }

    /**
     * Test the property 'wsrepLastApplied'
     */
    @Test
    public void wsrepLastAppliedTest() {
        // TODO: test wsrepLastApplied
    }

    /**
     * Test the property 'wsrepLastCommitted'
     */
    @Test
    public void wsrepLastCommittedTest() {
        // TODO: test wsrepLastCommitted
    }

    /**
     * Test the property 'wsrepReplicated'
     */
    @Test
    public void wsrepReplicatedTest() {
        // TODO: test wsrepReplicated
    }

    /**
     * Test the property 'wsrepReplicatedBytes'
     */
    @Test
    public void wsrepReplicatedBytesTest() {
        // TODO: test wsrepReplicatedBytes
    }

    /**
     * Test the property 'wsrepReplKeys'
     */
    @Test
    public void wsrepReplKeysTest() {
        // TODO: test wsrepReplKeys
    }

    /**
     * Test the property 'wsrepReplKeysBytes'
     */
    @Test
    public void wsrepReplKeysBytesTest() {
        // TODO: test wsrepReplKeysBytes
    }

    /**
     * Test the property 'wsrepReplDataBytes'
     */
    @Test
    public void wsrepReplDataBytesTest() {
        // TODO: test wsrepReplDataBytes
    }

    /**
     * Test the property 'wsrepReplOtherBytes'
     */
    @Test
    public void wsrepReplOtherBytesTest() {
        // TODO: test wsrepReplOtherBytes
    }

    /**
     * Test the property 'wsrepReceived'
     */
    @Test
    public void wsrepReceivedTest() {
        // TODO: test wsrepReceived
    }

    /**
     * Test the property 'wsrepReceivedBytes'
     */
    @Test
    public void wsrepReceivedBytesTest() {
        // TODO: test wsrepReceivedBytes
    }

    /**
     * Test the property 'wsrepLocalCommits'
     */
    @Test
    public void wsrepLocalCommitsTest() {
        // TODO: test wsrepLocalCommits
    }

    /**
     * Test the property 'wsrepLocalCertFailures'
     */
    @Test
    public void wsrepLocalCertFailuresTest() {
        // TODO: test wsrepLocalCertFailures
    }

    /**
     * Test the property 'wsrepLocalReplays'
     */
    @Test
    public void wsrepLocalReplaysTest() {
        // TODO: test wsrepLocalReplays
    }

    /**
     * Test the property 'wsrepLocalSendQueue'
     */
    @Test
    public void wsrepLocalSendQueueTest() {
        // TODO: test wsrepLocalSendQueue
    }

    /**
     * Test the property 'wsrepLocalSendQueueMax'
     */
    @Test
    public void wsrepLocalSendQueueMaxTest() {
        // TODO: test wsrepLocalSendQueueMax
    }

    /**
     * Test the property 'wsrepLocalSendQueueMin'
     */
    @Test
    public void wsrepLocalSendQueueMinTest() {
        // TODO: test wsrepLocalSendQueueMin
    }

    /**
     * Test the property 'wsrepLocalSendQueueAvg'
     */
    @Test
    public void wsrepLocalSendQueueAvgTest() {
        // TODO: test wsrepLocalSendQueueAvg
    }

    /**
     * Test the property 'wsrepLocalRecvQueue'
     */
    @Test
    public void wsrepLocalRecvQueueTest() {
        // TODO: test wsrepLocalRecvQueue
    }

    /**
     * Test the property 'wsrepLocalRecvQueueMax'
     */
    @Test
    public void wsrepLocalRecvQueueMaxTest() {
        // TODO: test wsrepLocalRecvQueueMax
    }

    /**
     * Test the property 'wsrepLocalRecvQueueMin'
     */
    @Test
    public void wsrepLocalRecvQueueMinTest() {
        // TODO: test wsrepLocalRecvQueueMin
    }

    /**
     * Test the property 'wsrepLocalRecvQueueAvg'
     */
    @Test
    public void wsrepLocalRecvQueueAvgTest() {
        // TODO: test wsrepLocalRecvQueueAvg
    }

    /**
     * Test the property 'wsrepLocalCachedDownto'
     */
    @Test
    public void wsrepLocalCachedDowntoTest() {
        // TODO: test wsrepLocalCachedDownto
    }

    /**
     * Test the property 'wsrepFlowControlPausedNs'
     */
    @Test
    public void wsrepFlowControlPausedNsTest() {
        // TODO: test wsrepFlowControlPausedNs
    }

    /**
     * Test the property 'wsrepFlowControlPaused'
     */
    @Test
    public void wsrepFlowControlPausedTest() {
        // TODO: test wsrepFlowControlPaused
    }

    /**
     * Test the property 'wsrepFlowControlSent'
     */
    @Test
    public void wsrepFlowControlSentTest() {
        // TODO: test wsrepFlowControlSent
    }

    /**
     * Test the property 'wsrepFlowControlRecv'
     */
    @Test
    public void wsrepFlowControlRecvTest() {
        // TODO: test wsrepFlowControlRecv
    }

    /**
     * Test the property 'wsrepFlowControlInterval'
     */
    @Test
    public void wsrepFlowControlIntervalTest() {
        // TODO: test wsrepFlowControlInterval
    }

    /**
     * Test the property 'wsrepFlowControlIntervalLow'
     */
    @Test
    public void wsrepFlowControlIntervalLowTest() {
        // TODO: test wsrepFlowControlIntervalLow
    }

    /**
     * Test the property 'wsrepFlowControlIntervalHigh'
     */
    @Test
    public void wsrepFlowControlIntervalHighTest() {
        // TODO: test wsrepFlowControlIntervalHigh
    }

    /**
     * Test the property 'wsrepFlowControlStatus'
     */
    @Test
    public void wsrepFlowControlStatusTest() {
        // TODO: test wsrepFlowControlStatus
    }

    /**
     * Test the property 'wsrepFlowControlActive'
     */
    @Test
    public void wsrepFlowControlActiveTest() {
        // TODO: test wsrepFlowControlActive
    }

    /**
     * Test the property 'wsrepFlowControlRequested'
     */
    @Test
    public void wsrepFlowControlRequestedTest() {
        // TODO: test wsrepFlowControlRequested
    }

    /**
     * Test the property 'wsrepCertDepsDistance'
     */
    @Test
    public void wsrepCertDepsDistanceTest() {
        // TODO: test wsrepCertDepsDistance
    }

    /**
     * Test the property 'wsrepApplyOooe'
     */
    @Test
    public void wsrepApplyOooeTest() {
        // TODO: test wsrepApplyOooe
    }

    /**
     * Test the property 'wsrepApplyOool'
     */
    @Test
    public void wsrepApplyOoolTest() {
        // TODO: test wsrepApplyOool
    }

    /**
     * Test the property 'wsrepApplyWindow'
     */
    @Test
    public void wsrepApplyWindowTest() {
        // TODO: test wsrepApplyWindow
    }

    /**
     * Test the property 'wsrepCommitOooe'
     */
    @Test
    public void wsrepCommitOooeTest() {
        // TODO: test wsrepCommitOooe
    }

    /**
     * Test the property 'wsrepCommitOool'
     */
    @Test
    public void wsrepCommitOoolTest() {
        // TODO: test wsrepCommitOool
    }

    /**
     * Test the property 'wsrepCommitWindow'
     */
    @Test
    public void wsrepCommitWindowTest() {
        // TODO: test wsrepCommitWindow
    }

    /**
     * Test the property 'wsrepLocalState'
     */
    @Test
    public void wsrepLocalStateTest() {
        // TODO: test wsrepLocalState
    }

    /**
     * Test the property 'wsrepLocalStateComment'
     */
    @Test
    public void wsrepLocalStateCommentTest() {
        // TODO: test wsrepLocalStateComment
    }

    /**
     * Test the property 'wsrepCertIndexSize'
     */
    @Test
    public void wsrepCertIndexSizeTest() {
        // TODO: test wsrepCertIndexSize
    }

    /**
     * Test the property 'wsrepCertBucketCount'
     */
    @Test
    public void wsrepCertBucketCountTest() {
        // TODO: test wsrepCertBucketCount
    }

    /**
     * Test the property 'wsrepGcachePoolSize'
     */
    @Test
    public void wsrepGcachePoolSizeTest() {
        // TODO: test wsrepGcachePoolSize
    }

    /**
     * Test the property 'wsrepCausalReads'
     */
    @Test
    public void wsrepCausalReadsTest() {
        // TODO: test wsrepCausalReads
    }

    /**
     * Test the property 'wsrepCertInterval'
     */
    @Test
    public void wsrepCertIntervalTest() {
        // TODO: test wsrepCertInterval
    }

    /**
     * Test the property 'wsrepOpenTransactions'
     */
    @Test
    public void wsrepOpenTransactionsTest() {
        // TODO: test wsrepOpenTransactions
    }

    /**
     * Test the property 'wsrepOpenConnections'
     */
    @Test
    public void wsrepOpenConnectionsTest() {
        // TODO: test wsrepOpenConnections
    }

    /**
     * Test the property 'wsrepIstReceiveStatus'
     */
    @Test
    public void wsrepIstReceiveStatusTest() {
        // TODO: test wsrepIstReceiveStatus
    }

    /**
     * Test the property 'wsrepIstReceiveSeqnoStart'
     */
    @Test
    public void wsrepIstReceiveSeqnoStartTest() {
        // TODO: test wsrepIstReceiveSeqnoStart
    }

    /**
     * Test the property 'wsrepIstReceiveSeqnoCurrent'
     */
    @Test
    public void wsrepIstReceiveSeqnoCurrentTest() {
        // TODO: test wsrepIstReceiveSeqnoCurrent
    }

    /**
     * Test the property 'wsrepIstReceiveSeqnoEnd'
     */
    @Test
    public void wsrepIstReceiveSeqnoEndTest() {
        // TODO: test wsrepIstReceiveSeqnoEnd
    }

    /**
     * Test the property 'wsrepIncomingAddresses'
     */
    @Test
    public void wsrepIncomingAddressesTest() {
        // TODO: test wsrepIncomingAddresses
    }

    /**
     * Test the property 'wsrepClusterWeight'
     */
    @Test
    public void wsrepClusterWeightTest() {
        // TODO: test wsrepClusterWeight
    }

    /**
     * Test the property 'wsrepDesyncCount'
     */
    @Test
    public void wsrepDesyncCountTest() {
        // TODO: test wsrepDesyncCount
    }

    /**
     * Test the property 'wsrepEvsDelayed'
     */
    @Test
    public void wsrepEvsDelayedTest() {
        // TODO: test wsrepEvsDelayed
    }

    /**
     * Test the property 'wsrepEvsEvictList'
     */
    @Test
    public void wsrepEvsEvictListTest() {
        // TODO: test wsrepEvsEvictList
    }

    /**
     * Test the property 'wsrepEvsReplLatency'
     */
    @Test
    public void wsrepEvsReplLatencyTest() {
        // TODO: test wsrepEvsReplLatency
    }

    /**
     * Test the property 'wsrepEvsState'
     */
    @Test
    public void wsrepEvsStateTest() {
        // TODO: test wsrepEvsState
    }

    /**
     * Test the property 'wsrepGcommUuid'
     */
    @Test
    public void wsrepGcommUuidTest() {
        // TODO: test wsrepGcommUuid
    }

    /**
     * Test the property 'wsrepGmcastSegment'
     */
    @Test
    public void wsrepGmcastSegmentTest() {
        // TODO: test wsrepGmcastSegment
    }

    /**
     * Test the property 'wsrepClusterConfId'
     */
    @Test
    public void wsrepClusterConfIdTest() {
        // TODO: test wsrepClusterConfId
    }

    /**
     * Test the property 'wsrepClusterSize'
     */
    @Test
    public void wsrepClusterSizeTest() {
        // TODO: test wsrepClusterSize
    }

    /**
     * Test the property 'wsrepClusterStateUuid'
     */
    @Test
    public void wsrepClusterStateUuidTest() {
        // TODO: test wsrepClusterStateUuid
    }

    /**
     * Test the property 'wsrepClusterStatus'
     */
    @Test
    public void wsrepClusterStatusTest() {
        // TODO: test wsrepClusterStatus
    }

    /**
     * Test the property 'wsrepConnected'
     */
    @Test
    public void wsrepConnectedTest() {
        // TODO: test wsrepConnected
    }

    /**
     * Test the property 'wsrepLocalBfAborts'
     */
    @Test
    public void wsrepLocalBfAbortsTest() {
        // TODO: test wsrepLocalBfAborts
    }

    /**
     * Test the property 'wsrepLocalIndex'
     */
    @Test
    public void wsrepLocalIndexTest() {
        // TODO: test wsrepLocalIndex
    }

    /**
     * Test the property 'wsrepProviderName'
     */
    @Test
    public void wsrepProviderNameTest() {
        // TODO: test wsrepProviderName
    }

    /**
     * Test the property 'wsrepProviderVendor'
     */
    @Test
    public void wsrepProviderVendorTest() {
        // TODO: test wsrepProviderVendor
    }

    /**
     * Test the property 'wsrepProviderVersion'
     */
    @Test
    public void wsrepProviderVersionTest() {
        // TODO: test wsrepProviderVersion
    }

    /**
     * Test the property 'wsrepReady'
     */
    @Test
    public void wsrepReadyTest() {
        // TODO: test wsrepReady
    }

}
