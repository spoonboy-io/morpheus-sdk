/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ContainerTypeAccount;
import org.openapitools.client.model.ContainerTypeContainerPorts;
import org.openapitools.client.model.ContainerTypeProvisionType;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ContainerType
 */
public class ContainerTypeTest {
    private final ContainerType model = new ContainerType();

    /**
     * Model tests for ContainerType
     */
    @Test
    public void testContainerType() {
        // TODO: test ContainerType
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'account'
     */
    @Test
    public void accountTest() {
        // TODO: test account
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'shortName'
     */
    @Test
    public void shortNameTest() {
        // TODO: test shortName
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'containerVersion'
     */
    @Test
    public void containerVersionTest() {
        // TODO: test containerVersion
    }

    /**
     * Test the property 'provisionType'
     */
    @Test
    public void provisionTypeTest() {
        // TODO: test provisionType
    }

    /**
     * Test the property 'virtualImage'
     */
    @Test
    public void virtualImageTest() {
        // TODO: test virtualImage
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

    /**
     * Test the property 'containerPorts'
     */
    @Test
    public void containerPortsTest() {
        // TODO: test containerPorts
    }

    /**
     * Test the property 'containerScripts'
     */
    @Test
    public void containerScriptsTest() {
        // TODO: test containerScripts
    }

    /**
     * Test the property 'containerTemplates'
     */
    @Test
    public void containerTemplatesTest() {
        // TODO: test containerTemplates
    }

    /**
     * Test the property 'environmentVariables'
     */
    @Test
    public void environmentVariablesTest() {
        // TODO: test environmentVariables
    }

}
