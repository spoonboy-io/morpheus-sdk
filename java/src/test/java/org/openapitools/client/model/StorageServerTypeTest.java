/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.StorageServerTypeGroupOptionTypes;
import org.openapitools.client.model.StorageServerTypeOptionTypes;
import org.openapitools.client.model.StorageServerTypeStorageVolumeTypes;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for StorageServerType
 */
public class StorageServerTypeTest {
    private final StorageServerType model = new StorageServerType();

    /**
     * Model tests for StorageServerType
     */
    @Test
    public void testStorageServerType() {
        // TODO: test StorageServerType
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'creatable'
     */
    @Test
    public void creatableTest() {
        // TODO: test creatable
    }

    /**
     * Test the property 'hasNamespaces'
     */
    @Test
    public void hasNamespacesTest() {
        // TODO: test hasNamespaces
    }

    /**
     * Test the property 'hasGroups'
     */
    @Test
    public void hasGroupsTest() {
        // TODO: test hasGroups
    }

    /**
     * Test the property 'hasBlock'
     */
    @Test
    public void hasBlockTest() {
        // TODO: test hasBlock
    }

    /**
     * Test the property 'hasObject'
     */
    @Test
    public void hasObjectTest() {
        // TODO: test hasObject
    }

    /**
     * Test the property 'hasFile'
     */
    @Test
    public void hasFileTest() {
        // TODO: test hasFile
    }

    /**
     * Test the property 'hasDatastore'
     */
    @Test
    public void hasDatastoreTest() {
        // TODO: test hasDatastore
    }

    /**
     * Test the property 'hasDisks'
     */
    @Test
    public void hasDisksTest() {
        // TODO: test hasDisks
    }

    /**
     * Test the property 'hasHosts'
     */
    @Test
    public void hasHostsTest() {
        // TODO: test hasHosts
    }

    /**
     * Test the property 'createNamespaces'
     */
    @Test
    public void createNamespacesTest() {
        // TODO: test createNamespaces
    }

    /**
     * Test the property 'createGroup'
     */
    @Test
    public void createGroupTest() {
        // TODO: test createGroup
    }

    /**
     * Test the property 'createBlock'
     */
    @Test
    public void createBlockTest() {
        // TODO: test createBlock
    }

    /**
     * Test the property 'createObject'
     */
    @Test
    public void createObjectTest() {
        // TODO: test createObject
    }

    /**
     * Test the property 'createFile'
     */
    @Test
    public void createFileTest() {
        // TODO: test createFile
    }

    /**
     * Test the property 'createDatastore'
     */
    @Test
    public void createDatastoreTest() {
        // TODO: test createDatastore
    }

    /**
     * Test the property 'createDisk'
     */
    @Test
    public void createDiskTest() {
        // TODO: test createDisk
    }

    /**
     * Test the property 'createHost'
     */
    @Test
    public void createHostTest() {
        // TODO: test createHost
    }

    /**
     * Test the property 'iconCode'
     */
    @Test
    public void iconCodeTest() {
        // TODO: test iconCode
    }

    /**
     * Test the property 'hasFileBrowser'
     */
    @Test
    public void hasFileBrowserTest() {
        // TODO: test hasFileBrowser
    }

    /**
     * Test the property 'optionTypes'
     */
    @Test
    public void optionTypesTest() {
        // TODO: test optionTypes
    }

    /**
     * Test the property 'groupOptionTypes'
     */
    @Test
    public void groupOptionTypesTest() {
        // TODO: test groupOptionTypes
    }

    /**
     * Test the property 'bucketOptionTypes'
     */
    @Test
    public void bucketOptionTypesTest() {
        // TODO: test bucketOptionTypes
    }

    /**
     * Test the property 'shareOptionTypes'
     */
    @Test
    public void shareOptionTypesTest() {
        // TODO: test shareOptionTypes
    }

    /**
     * Test the property 'shareAccessOptionTypes'
     */
    @Test
    public void shareAccessOptionTypesTest() {
        // TODO: test shareAccessOptionTypes
    }

    /**
     * Test the property 'storageVolumeTypes'
     */
    @Test
    public void storageVolumeTypesTest() {
        // TODO: test storageVolumeTypes
    }

}
