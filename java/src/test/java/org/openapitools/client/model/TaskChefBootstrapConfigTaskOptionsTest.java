/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for TaskChefBootstrapConfigTaskOptions
 */
public class TaskChefBootstrapConfigTaskOptionsTest {
    private final TaskChefBootstrapConfigTaskOptions model = new TaskChefBootstrapConfigTaskOptions();

    /**
     * Model tests for TaskChefBootstrapConfigTaskOptions
     */
    @Test
    public void testTaskChefBootstrapConfigTaskOptions() {
        // TODO: test TaskChefBootstrapConfigTaskOptions
    }

    /**
     * Test the property 'chefDataKey'
     */
    @Test
    public void chefDataKeyTest() {
        // TODO: test chefDataKey
    }

    /**
     * Test the property 'chefDataKeyHash'
     */
    @Test
    public void chefDataKeyHashTest() {
        // TODO: test chefDataKeyHash
    }

    /**
     * Test the property 'chefRunList'
     */
    @Test
    public void chefRunListTest() {
        // TODO: test chefRunList
    }

    /**
     * Test the property 'localScriptGitRef'
     */
    @Test
    public void localScriptGitRefTest() {
        // TODO: test localScriptGitRef
    }

    /**
     * Test the property 'chefDataKeyPath'
     */
    @Test
    public void chefDataKeyPathTest() {
        // TODO: test chefDataKeyPath
    }

    /**
     * Test the property 'localScriptGitId'
     */
    @Test
    public void localScriptGitIdTest() {
        // TODO: test localScriptGitId
    }

    /**
     * Test the property 'port'
     */
    @Test
    public void portTest() {
        // TODO: test port
    }

    /**
     * Test the property 'chefEnv'
     */
    @Test
    public void chefEnvTest() {
        // TODO: test chefEnv
    }

    /**
     * Test the property 'chefNodeName'
     */
    @Test
    public void chefNodeNameTest() {
        // TODO: test chefNodeName
    }

    /**
     * Test the property 'host'
     */
    @Test
    public void hostTest() {
        // TODO: test host
    }

    /**
     * Test the property 'sshKey'
     */
    @Test
    public void sshKeyTest() {
        // TODO: test sshKey
    }

    /**
     * Test the property 'username'
     */
    @Test
    public void usernameTest() {
        // TODO: test username
    }

    /**
     * Test the property 'password'
     */
    @Test
    public void passwordTest() {
        // TODO: test password
    }

    /**
     * Test the property 'passwordHash'
     */
    @Test
    public void passwordHashTest() {
        // TODO: test passwordHash
    }

    /**
     * Test the property 'chefAttributes'
     */
    @Test
    public void chefAttributesTest() {
        // TODO: test chefAttributes
    }

}
