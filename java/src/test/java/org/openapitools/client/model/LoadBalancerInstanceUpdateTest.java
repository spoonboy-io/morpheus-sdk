/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for LoadBalancerInstanceUpdate
 */
public class LoadBalancerInstanceUpdateTest {
    private final LoadBalancerInstanceUpdate model = new LoadBalancerInstanceUpdate();

    /**
     * Model tests for LoadBalancerInstanceUpdate
     */
    @Test
    public void testLoadBalancerInstanceUpdate() {
        // TODO: test LoadBalancerInstanceUpdate
    }

    /**
     * Test the property 'vipName'
     */
    @Test
    public void vipNameTest() {
        // TODO: test vipName
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'vipAddress'
     */
    @Test
    public void vipAddressTest() {
        // TODO: test vipAddress
    }

    /**
     * Test the property 'vipPort'
     */
    @Test
    public void vipPortTest() {
        // TODO: test vipPort
    }

    /**
     * Test the property 'vipProtocol'
     */
    @Test
    public void vipProtocolTest() {
        // TODO: test vipProtocol
    }

    /**
     * Test the property 'vipHostname'
     */
    @Test
    public void vipHostnameTest() {
        // TODO: test vipHostname
    }

    /**
     * Test the property 'pool'
     */
    @Test
    public void poolTest() {
        // TODO: test pool
    }

    /**
     * Test the property 'sslCert'
     */
    @Test
    public void sslCertTest() {
        // TODO: test sslCert
    }

    /**
     * Test the property 'sslServerCert'
     */
    @Test
    public void sslServerCertTest() {
        // TODO: test sslServerCert
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

}
