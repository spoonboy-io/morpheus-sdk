/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.InlineResponse20079LoadBalancerMonitorLoadBalancer;
import org.openapitools.client.model.InlineResponse20082LoadBalancerInstanceSslCert;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for InlineResponse20082LoadBalancerInstance
 */
public class InlineResponse20082LoadBalancerInstanceTest {
    private final InlineResponse20082LoadBalancerInstance model = new InlineResponse20082LoadBalancerInstance();

    /**
     * Model tests for InlineResponse20082LoadBalancerInstance
     */
    @Test
    public void testInlineResponse20082LoadBalancerInstance() {
        // TODO: test InlineResponse20082LoadBalancerInstance
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'loadBalancer'
     */
    @Test
    public void loadBalancerTest() {
        // TODO: test loadBalancer
    }

    /**
     * Test the property 'instance'
     */
    @Test
    public void instanceTest() {
        // TODO: test instance
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'internalId'
     */
    @Test
    public void internalIdTest() {
        // TODO: test internalId
    }

    /**
     * Test the property 'externalId'
     */
    @Test
    public void externalIdTest() {
        // TODO: test externalId
    }

    /**
     * Test the property 'dateCreated'
     */
    @Test
    public void dateCreatedTest() {
        // TODO: test dateCreated
    }

    /**
     * Test the property 'lastUpdated'
     */
    @Test
    public void lastUpdatedTest() {
        // TODO: test lastUpdated
    }

    /**
     * Test the property 'active'
     */
    @Test
    public void activeTest() {
        // TODO: test active
    }

    /**
     * Test the property 'sticky'
     */
    @Test
    public void stickyTest() {
        // TODO: test sticky
    }

    /**
     * Test the property 'sslEnabled'
     */
    @Test
    public void sslEnabledTest() {
        // TODO: test sslEnabled
    }

    /**
     * Test the property 'externalAddress'
     */
    @Test
    public void externalAddressTest() {
        // TODO: test externalAddress
    }

    /**
     * Test the property 'backendPort'
     */
    @Test
    public void backendPortTest() {
        // TODO: test backendPort
    }

    /**
     * Test the property 'vipType'
     */
    @Test
    public void vipTypeTest() {
        // TODO: test vipType
    }

    /**
     * Test the property 'vipAddress'
     */
    @Test
    public void vipAddressTest() {
        // TODO: test vipAddress
    }

    /**
     * Test the property 'vipHostname'
     */
    @Test
    public void vipHostnameTest() {
        // TODO: test vipHostname
    }

    /**
     * Test the property 'vipProtocol'
     */
    @Test
    public void vipProtocolTest() {
        // TODO: test vipProtocol
    }

    /**
     * Test the property 'vipScheme'
     */
    @Test
    public void vipSchemeTest() {
        // TODO: test vipScheme
    }

    /**
     * Test the property 'vipMode'
     */
    @Test
    public void vipModeTest() {
        // TODO: test vipMode
    }

    /**
     * Test the property 'vipName'
     */
    @Test
    public void vipNameTest() {
        // TODO: test vipName
    }

    /**
     * Test the property 'vipPort'
     */
    @Test
    public void vipPortTest() {
        // TODO: test vipPort
    }

    /**
     * Test the property 'vipSticky'
     */
    @Test
    public void vipStickyTest() {
        // TODO: test vipSticky
    }

    /**
     * Test the property 'vipBalance'
     */
    @Test
    public void vipBalanceTest() {
        // TODO: test vipBalance
    }

    /**
     * Test the property 'servicePort'
     */
    @Test
    public void servicePortTest() {
        // TODO: test servicePort
    }

    /**
     * Test the property 'sourceAddress'
     */
    @Test
    public void sourceAddressTest() {
        // TODO: test sourceAddress
    }

    /**
     * Test the property 'sslCert'
     */
    @Test
    public void sslCertTest() {
        // TODO: test sslCert
    }

    /**
     * Test the property 'sslMode'
     */
    @Test
    public void sslModeTest() {
        // TODO: test sslMode
    }

    /**
     * Test the property 'sslRedirectMode'
     */
    @Test
    public void sslRedirectModeTest() {
        // TODO: test sslRedirectMode
    }

    /**
     * Test the property 'vipShared'
     */
    @Test
    public void vipSharedTest() {
        // TODO: test vipShared
    }

    /**
     * Test the property 'vipDirectAddress'
     */
    @Test
    public void vipDirectAddressTest() {
        // TODO: test vipDirectAddress
    }

    /**
     * Test the property 'serverName'
     */
    @Test
    public void serverNameTest() {
        // TODO: test serverName
    }

    /**
     * Test the property 'poolName'
     */
    @Test
    public void poolNameTest() {
        // TODO: test poolName
    }

    /**
     * Test the property 'removing'
     */
    @Test
    public void removingTest() {
        // TODO: test removing
    }

    /**
     * Test the property 'vipSource'
     */
    @Test
    public void vipSourceTest() {
        // TODO: test vipSource
    }

    /**
     * Test the property 'extraConfig'
     */
    @Test
    public void extraConfigTest() {
        // TODO: test extraConfig
    }

    /**
     * Test the property 'serviceAccess'
     */
    @Test
    public void serviceAccessTest() {
        // TODO: test serviceAccess
    }

    /**
     * Test the property 'networkId'
     */
    @Test
    public void networkIdTest() {
        // TODO: test networkId
    }

    /**
     * Test the property 'subnetId'
     */
    @Test
    public void subnetIdTest() {
        // TODO: test subnetId
    }

    /**
     * Test the property 'externalPortId'
     */
    @Test
    public void externalPortIdTest() {
        // TODO: test externalPortId
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'vipStatus'
     */
    @Test
    public void vipStatusTest() {
        // TODO: test vipStatus
    }

}
