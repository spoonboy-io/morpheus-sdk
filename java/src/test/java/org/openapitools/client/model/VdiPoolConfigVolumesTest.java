/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for VdiPoolConfigVolumes
 */
public class VdiPoolConfigVolumesTest {
    private final VdiPoolConfigVolumes model = new VdiPoolConfigVolumes();

    /**
     * Model tests for VdiPoolConfigVolumes
     */
    @Test
    public void testVdiPoolConfigVolumes() {
        // TODO: test VdiPoolConfigVolumes
    }

    /**
     * Test the property 'rootVolume'
     */
    @Test
    public void rootVolumeTest() {
        // TODO: test rootVolume
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'maxStorage'
     */
    @Test
    public void maxStorageTest() {
        // TODO: test maxStorage
    }

    /**
     * Test the property 'volumeCustomizable'
     */
    @Test
    public void volumeCustomizableTest() {
        // TODO: test volumeCustomizable
    }

    /**
     * Test the property 'readonlyName'
     */
    @Test
    public void readonlyNameTest() {
        // TODO: test readonlyName
    }

    /**
     * Test the property 'size'
     */
    @Test
    public void sizeTest() {
        // TODO: test size
    }

    /**
     * Test the property 'storageType'
     */
    @Test
    public void storageTypeTest() {
        // TODO: test storageType
    }

    /**
     * Test the property 'maxIOPS'
     */
    @Test
    public void maxIOPSTest() {
        // TODO: test maxIOPS
    }

    /**
     * Test the property 'datastoreId'
     */
    @Test
    public void datastoreIdTest() {
        // TODO: test datastoreId
    }

    /**
     * Test the property 'vId'
     */
    @Test
    public void vIdTest() {
        // TODO: test vId
    }

}
