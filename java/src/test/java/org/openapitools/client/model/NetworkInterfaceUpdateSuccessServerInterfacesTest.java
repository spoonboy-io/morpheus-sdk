/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ApiBlueprintsIdUpdatePermissionsResourcePermissionSites;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for NetworkInterfaceUpdateSuccessServerInterfaces
 */
public class NetworkInterfaceUpdateSuccessServerInterfacesTest {
    private final NetworkInterfaceUpdateSuccessServerInterfaces model = new NetworkInterfaceUpdateSuccessServerInterfaces();

    /**
     * Model tests for NetworkInterfaceUpdateSuccessServerInterfaces
     */
    @Test
    public void testNetworkInterfaceUpdateSuccessServerInterfaces() {
        // TODO: test NetworkInterfaceUpdateSuccessServerInterfaces
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'addresses'
     */
    @Test
    public void addressesTest() {
        // TODO: test addresses
    }

    /**
     * Test the property 'internalId'
     */
    @Test
    public void internalIdTest() {
        // TODO: test internalId
    }

    /**
     * Test the property 'interfaceId'
     */
    @Test
    public void interfaceIdTest() {
        // TODO: test interfaceId
    }

    /**
     * Test the property 'displayOrder'
     */
    @Test
    public void displayOrderTest() {
        // TODO: test displayOrder
    }

    /**
     * Test the property 'networkPool'
     */
    @Test
    public void networkPoolTest() {
        // TODO: test networkPool
    }

    /**
     * Test the property 'dhcp'
     */
    @Test
    public void dhcpTest() {
        // TODO: test dhcp
    }

    /**
     * Test the property 'uuid'
     */
    @Test
    public void uuidTest() {
        // TODO: test uuid
    }

    /**
     * Test the property 'active'
     */
    @Test
    public void activeTest() {
        // TODO: test active
    }

    /**
     * Test the property 'uniqueId'
     */
    @Test
    public void uniqueIdTest() {
        // TODO: test uniqueId
    }

    /**
     * Test the property 'subnet'
     */
    @Test
    public void subnetTest() {
        // TODO: test subnet
    }

    /**
     * Test the property 'replaceHostRecord'
     */
    @Test
    public void replaceHostRecordTest() {
        // TODO: test replaceHostRecord
    }

    /**
     * Test the property 'ipMode'
     */
    @Test
    public void ipModeTest() {
        // TODO: test ipMode
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'ipSubnet'
     */
    @Test
    public void ipSubnetTest() {
        // TODO: test ipSubnet
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

    /**
     * Test the property 'publicIpAddress'
     */
    @Test
    public void publicIpAddressTest() {
        // TODO: test publicIpAddress
    }

    /**
     * Test the property 'fabricId'
     */
    @Test
    public void fabricIdTest() {
        // TODO: test fabricId
    }

    /**
     * Test the property 'ipv6Subnet'
     */
    @Test
    public void ipv6SubnetTest() {
        // TODO: test ipv6Subnet
    }

    /**
     * Test the property 'macAddress'
     */
    @Test
    public void macAddressTest() {
        // TODO: test macAddress
    }

    /**
     * Test the property 'publicIpv6Address'
     */
    @Test
    public void publicIpv6AddressTest() {
        // TODO: test publicIpv6Address
    }

    /**
     * Test the property 'refType'
     */
    @Test
    public void refTypeTest() {
        // TODO: test refType
    }

    /**
     * Test the property 'networkGroup'
     */
    @Test
    public void networkGroupTest() {
        // TODO: test networkGroup
    }

    /**
     * Test the property 'refId'
     */
    @Test
    public void refIdTest() {
        // TODO: test refId
    }

    /**
     * Test the property 'networkDomain'
     */
    @Test
    public void networkDomainTest() {
        // TODO: test networkDomain
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'primaryInterface'
     */
    @Test
    public void primaryInterfaceTest() {
        // TODO: test primaryInterface
    }

    /**
     * Test the property 'networkPoolIPv6'
     */
    @Test
    public void networkPoolIPv6Test() {
        // TODO: test networkPoolIPv6
    }

    /**
     * Test the property 'network'
     */
    @Test
    public void networkTest() {
        // TODO: test network
    }

    /**
     * Test the property 'vlanId'
     */
    @Test
    public void vlanIdTest() {
        // TODO: test vlanId
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'networkPosition'
     */
    @Test
    public void networkPositionTest() {
        // TODO: test networkPosition
    }

    /**
     * Test the property 'poolAssigned'
     */
    @Test
    public void poolAssignedTest() {
        // TODO: test poolAssigned
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'externalType'
     */
    @Test
    public void externalTypeTest() {
        // TODO: test externalType
    }

    /**
     * Test the property 'externalId'
     */
    @Test
    public void externalIdTest() {
        // TODO: test externalId
    }

}
