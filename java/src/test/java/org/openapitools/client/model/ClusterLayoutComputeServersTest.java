/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.ClusterLayoutComputeServerType;
import org.openapitools.client.model.ClusterLayoutContainerType;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ClusterLayoutComputeServers
 */
public class ClusterLayoutComputeServersTest {
    private final ClusterLayoutComputeServers model = new ClusterLayoutComputeServers();

    /**
     * Model tests for ClusterLayoutComputeServers
     */
    @Test
    public void testClusterLayoutComputeServers() {
        // TODO: test ClusterLayoutComputeServers
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'priorityOrder'
     */
    @Test
    public void priorityOrderTest() {
        // TODO: test priorityOrder
    }

    /**
     * Test the property 'nodeCount'
     */
    @Test
    public void nodeCountTest() {
        // TODO: test nodeCount
    }

    /**
     * Test the property 'nodeType'
     */
    @Test
    public void nodeTypeTest() {
        // TODO: test nodeType
    }

    /**
     * Test the property 'minNodeCount'
     */
    @Test
    public void minNodeCountTest() {
        // TODO: test minNodeCount
    }

    /**
     * Test the property 'maxNodeCount'
     */
    @Test
    public void maxNodeCountTest() {
        // TODO: test maxNodeCount
    }

    /**
     * Test the property 'dynamicCount'
     */
    @Test
    public void dynamicCountTest() {
        // TODO: test dynamicCount
    }

    /**
     * Test the property 'installContainerRuntime'
     */
    @Test
    public void installContainerRuntimeTest() {
        // TODO: test installContainerRuntime
    }

    /**
     * Test the property 'installStorageRuntime'
     */
    @Test
    public void installStorageRuntimeTest() {
        // TODO: test installStorageRuntime
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

    /**
     * Test the property 'containerType'
     */
    @Test
    public void containerTypeTest() {
        // TODO: test containerType
    }

    /**
     * Test the property 'computeServerType'
     */
    @Test
    public void computeServerTypeTest() {
        // TODO: test computeServerType
    }

    /**
     * Test the property 'provisionService'
     */
    @Test
    public void provisionServiceTest() {
        // TODO: test provisionService
    }

    /**
     * Test the property 'planCategory'
     */
    @Test
    public void planCategoryTest() {
        // TODO: test planCategory
    }

    /**
     * Test the property 'namePrefix'
     */
    @Test
    public void namePrefixTest() {
        // TODO: test namePrefix
    }

    /**
     * Test the property 'nameSuffix'
     */
    @Test
    public void nameSuffixTest() {
        // TODO: test nameSuffix
    }

    /**
     * Test the property 'forceNameIndex'
     */
    @Test
    public void forceNameIndexTest() {
        // TODO: test forceNameIndex
    }

    /**
     * Test the property 'loadBalance'
     */
    @Test
    public void loadBalanceTest() {
        // TODO: test loadBalance
    }

}
