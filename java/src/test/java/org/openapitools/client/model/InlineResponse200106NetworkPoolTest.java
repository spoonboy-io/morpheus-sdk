/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.InlineResponse200106NetworkPoolIpRanges;
import org.openapitools.client.model.InlineResponse20040AppDeployInstance;
import org.openapitools.client.model.InlineResponse20094Network;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for InlineResponse200106NetworkPool
 */
public class InlineResponse200106NetworkPoolTest {
    private final InlineResponse200106NetworkPool model = new InlineResponse200106NetworkPool();

    /**
     * Model tests for InlineResponse200106NetworkPool
     */
    @Test
    public void testInlineResponse200106NetworkPool() {
        // TODO: test InlineResponse200106NetworkPool
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'account'
     */
    @Test
    public void accountTest() {
        // TODO: test account
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'internalId'
     */
    @Test
    public void internalIdTest() {
        // TODO: test internalId
    }

    /**
     * Test the property 'externalId'
     */
    @Test
    public void externalIdTest() {
        // TODO: test externalId
    }

    /**
     * Test the property 'dnsDomain'
     */
    @Test
    public void dnsDomainTest() {
        // TODO: test dnsDomain
    }

    /**
     * Test the property 'dnsSearchPath'
     */
    @Test
    public void dnsSearchPathTest() {
        // TODO: test dnsSearchPath
    }

    /**
     * Test the property 'hostPrefix'
     */
    @Test
    public void hostPrefixTest() {
        // TODO: test hostPrefix
    }

    /**
     * Test the property 'httpProxy'
     */
    @Test
    public void httpProxyTest() {
        // TODO: test httpProxy
    }

    /**
     * Test the property 'dnsServers'
     */
    @Test
    public void dnsServersTest() {
        // TODO: test dnsServers
    }

    /**
     * Test the property 'dnsSuffixList'
     */
    @Test
    public void dnsSuffixListTest() {
        // TODO: test dnsSuffixList
    }

    /**
     * Test the property 'dhcpServer'
     */
    @Test
    public void dhcpServerTest() {
        // TODO: test dhcpServer
    }

    /**
     * Test the property 'dhcpIp'
     */
    @Test
    public void dhcpIpTest() {
        // TODO: test dhcpIp
    }

    /**
     * Test the property 'gateway'
     */
    @Test
    public void gatewayTest() {
        // TODO: test gateway
    }

    /**
     * Test the property 'netmask'
     */
    @Test
    public void netmaskTest() {
        // TODO: test netmask
    }

    /**
     * Test the property 'subnetAddress'
     */
    @Test
    public void subnetAddressTest() {
        // TODO: test subnetAddress
    }

    /**
     * Test the property 'ipCount'
     */
    @Test
    public void ipCountTest() {
        // TODO: test ipCount
    }

    /**
     * Test the property 'freeCount'
     */
    @Test
    public void freeCountTest() {
        // TODO: test freeCount
    }

    /**
     * Test the property 'poolEnabled'
     */
    @Test
    public void poolEnabledTest() {
        // TODO: test poolEnabled
    }

    /**
     * Test the property 'tftpServer'
     */
    @Test
    public void tftpServerTest() {
        // TODO: test tftpServer
    }

    /**
     * Test the property 'bootFile'
     */
    @Test
    public void bootFileTest() {
        // TODO: test bootFile
    }

    /**
     * Test the property 'refType'
     */
    @Test
    public void refTypeTest() {
        // TODO: test refType
    }

    /**
     * Test the property 'refId'
     */
    @Test
    public void refIdTest() {
        // TODO: test refId
    }

    /**
     * Test the property 'parentType'
     */
    @Test
    public void parentTypeTest() {
        // TODO: test parentType
    }

    /**
     * Test the property 'parentId'
     */
    @Test
    public void parentIdTest() {
        // TODO: test parentId
    }

    /**
     * Test the property 'poolGroup'
     */
    @Test
    public void poolGroupTest() {
        // TODO: test poolGroup
    }

    /**
     * Test the property 'ipRanges'
     */
    @Test
    public void ipRangesTest() {
        // TODO: test ipRanges
    }

}
