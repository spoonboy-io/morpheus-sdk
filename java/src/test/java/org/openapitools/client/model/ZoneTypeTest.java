/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ZoneTypeOptionTypes1;
import org.openapitools.client.model.ZoneTypeServerTypes;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ZoneType
 */
public class ZoneTypeTest {
    private final ZoneType model = new ZoneType();

    /**
     * Model tests for ZoneType
     */
    @Test
    public void testZoneType() {
        // TODO: test ZoneType
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'provision'
     */
    @Test
    public void provisionTest() {
        // TODO: test provision
    }

    /**
     * Test the property 'autoCapacity'
     */
    @Test
    public void autoCapacityTest() {
        // TODO: test autoCapacity
    }

    /**
     * Test the property 'migrationTarget'
     */
    @Test
    public void migrationTargetTest() {
        // TODO: test migrationTarget
    }

    /**
     * Test the property 'hasDatastores'
     */
    @Test
    public void hasDatastoresTest() {
        // TODO: test hasDatastores
    }

    /**
     * Test the property 'hasNetworks'
     */
    @Test
    public void hasNetworksTest() {
        // TODO: test hasNetworks
    }

    /**
     * Test the property 'hasResourcePools'
     */
    @Test
    public void hasResourcePoolsTest() {
        // TODO: test hasResourcePools
    }

    /**
     * Test the property 'hasSecurityGroups'
     */
    @Test
    public void hasSecurityGroupsTest() {
        // TODO: test hasSecurityGroups
    }

    /**
     * Test the property 'hasContainers'
     */
    @Test
    public void hasContainersTest() {
        // TODO: test hasContainers
    }

    /**
     * Test the property 'hasBareMetal'
     */
    @Test
    public void hasBareMetalTest() {
        // TODO: test hasBareMetal
    }

    /**
     * Test the property 'hasServices'
     */
    @Test
    public void hasServicesTest() {
        // TODO: test hasServices
    }

    /**
     * Test the property 'hasFunctions'
     */
    @Test
    public void hasFunctionsTest() {
        // TODO: test hasFunctions
    }

    /**
     * Test the property 'hasJobs'
     */
    @Test
    public void hasJobsTest() {
        // TODO: test hasJobs
    }

    /**
     * Test the property 'hasDiscovery'
     */
    @Test
    public void hasDiscoveryTest() {
        // TODO: test hasDiscovery
    }

    /**
     * Test the property 'hasCloudInit'
     */
    @Test
    public void hasCloudInitTest() {
        // TODO: test hasCloudInit
    }

    /**
     * Test the property 'hasFolders'
     */
    @Test
    public void hasFoldersTest() {
        // TODO: test hasFolders
    }

    /**
     * Test the property 'hasFloatingIps'
     */
    @Test
    public void hasFloatingIpsTest() {
        // TODO: test hasFloatingIps
    }

    /**
     * Test the property 'hasMarketplace'
     */
    @Test
    public void hasMarketplaceTest() {
        // TODO: test hasMarketplace
    }

    /**
     * Test the property 'canCreateResourcePools'
     */
    @Test
    public void canCreateResourcePoolsTest() {
        // TODO: test canCreateResourcePools
    }

    /**
     * Test the property 'canDeleteResourcePools'
     */
    @Test
    public void canDeleteResourcePoolsTest() {
        // TODO: test canDeleteResourcePools
    }

    /**
     * Test the property 'canCreateDatastores'
     */
    @Test
    public void canCreateDatastoresTest() {
        // TODO: test canCreateDatastores
    }

    /**
     * Test the property 'canCreateNetworks'
     */
    @Test
    public void canCreateNetworksTest() {
        // TODO: test canCreateNetworks
    }

    /**
     * Test the property 'canChooseContainerMode'
     */
    @Test
    public void canChooseContainerModeTest() {
        // TODO: test canChooseContainerMode
    }

    /**
     * Test the property 'provisionRequiresResourcePool'
     */
    @Test
    public void provisionRequiresResourcePoolTest() {
        // TODO: test provisionRequiresResourcePool
    }

    /**
     * Test the property 'supportsDistributedWorker'
     */
    @Test
    public void supportsDistributedWorkerTest() {
        // TODO: test supportsDistributedWorker
    }

    /**
     * Test the property 'cloud'
     */
    @Test
    public void cloudTest() {
        // TODO: test cloud
    }

    /**
     * Test the property 'provisionTypes'
     */
    @Test
    public void provisionTypesTest() {
        // TODO: test provisionTypes
    }

    /**
     * Test the property 'zoneInstanceTypeLayoutId'
     */
    @Test
    public void zoneInstanceTypeLayoutIdTest() {
        // TODO: test zoneInstanceTypeLayoutId
    }

    /**
     * Test the property 'serverTypes'
     */
    @Test
    public void serverTypesTest() {
        // TODO: test serverTypes
    }

    /**
     * Test the property 'optionTypes'
     */
    @Test
    public void optionTypesTest() {
        // TODO: test optionTypes
    }

}
