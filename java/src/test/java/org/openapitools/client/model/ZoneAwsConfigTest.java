/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.ZoneVcenterConfigNetworkServer;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ZoneAwsConfig
 */
public class ZoneAwsConfigTest {
    private final ZoneAwsConfig model = new ZoneAwsConfig();

    /**
     * Model tests for ZoneAwsConfig
     */
    @Test
    public void testZoneAwsConfig() {
        // TODO: test ZoneAwsConfig
    }

    /**
     * Test the property 'endpoint'
     */
    @Test
    public void endpointTest() {
        // TODO: test endpoint
    }

    /**
     * Test the property 'accessKey'
     */
    @Test
    public void accessKeyTest() {
        // TODO: test accessKey
    }

    /**
     * Test the property 'secretKey'
     */
    @Test
    public void secretKeyTest() {
        // TODO: test secretKey
    }

    /**
     * Test the property 'useHostCredentials'
     */
    @Test
    public void useHostCredentialsTest() {
        // TODO: test useHostCredentials
    }

    /**
     * Test the property 'stsAssumeRole'
     */
    @Test
    public void stsAssumeRoleTest() {
        // TODO: test stsAssumeRole
    }

    /**
     * Test the property 'isVpc'
     */
    @Test
    public void isVpcTest() {
        // TODO: test isVpc
    }

    /**
     * Test the property 'vpc'
     */
    @Test
    public void vpcTest() {
        // TODO: test vpc
    }

    /**
     * Test the property 'imageStoreId'
     */
    @Test
    public void imageStoreIdTest() {
        // TODO: test imageStoreId
    }

    /**
     * Test the property 'ebsEncryption'
     */
    @Test
    public void ebsEncryptionTest() {
        // TODO: test ebsEncryption
    }

    /**
     * Test the property 'costingReport'
     */
    @Test
    public void costingReportTest() {
        // TODO: test costingReport
    }

    /**
     * Test the property 'costingFolder'
     */
    @Test
    public void costingFolderTest() {
        // TODO: test costingFolder
    }

    /**
     * Test the property 'costingBucket'
     */
    @Test
    public void costingBucketTest() {
        // TODO: test costingBucket
    }

    /**
     * Test the property 'costingBucketName'
     */
    @Test
    public void costingBucketNameTest() {
        // TODO: test costingBucketName
    }

    /**
     * Test the property 'costingRegion'
     */
    @Test
    public void costingRegionTest() {
        // TODO: test costingRegion
    }

    /**
     * Test the property 'costingAccessKey'
     */
    @Test
    public void costingAccessKeyTest() {
        // TODO: test costingAccessKey
    }

    /**
     * Test the property 'costingSecretKey'
     */
    @Test
    public void costingSecretKeyTest() {
        // TODO: test costingSecretKey
    }

    /**
     * Test the property 'costingReportName'
     */
    @Test
    public void costingReportNameTest() {
        // TODO: test costingReportName
    }

    /**
     * Test the property 'applianceUrl'
     */
    @Test
    public void applianceUrlTest() {
        // TODO: test applianceUrl
    }

    /**
     * Test the property 'datacenterName'
     */
    @Test
    public void datacenterNameTest() {
        // TODO: test datacenterName
    }

    /**
     * Test the property 'networkServerId'
     */
    @Test
    public void networkServerIdTest() {
        // TODO: test networkServerId
    }

    /**
     * Test the property 'networkServer'
     */
    @Test
    public void networkServerTest() {
        // TODO: test networkServer
    }

    /**
     * Test the property 'securityServer'
     */
    @Test
    public void securityServerTest() {
        // TODO: test securityServer
    }

    /**
     * Test the property 'certificateProvider'
     */
    @Test
    public void certificateProviderTest() {
        // TODO: test certificateProvider
    }

    /**
     * Test the property 'backupMode'
     */
    @Test
    public void backupModeTest() {
        // TODO: test backupMode
    }

    /**
     * Test the property 'replicationMode'
     */
    @Test
    public void replicationModeTest() {
        // TODO: test replicationMode
    }

    /**
     * Test the property 'dnsIntegrationId'
     */
    @Test
    public void dnsIntegrationIdTest() {
        // TODO: test dnsIntegrationId
    }

    /**
     * Test the property 'serviceRegistryId'
     */
    @Test
    public void serviceRegistryIdTest() {
        // TODO: test serviceRegistryId
    }

    /**
     * Test the property 'configManagementId'
     */
    @Test
    public void configManagementIdTest() {
        // TODO: test configManagementId
    }

    /**
     * Test the property 'configCmdbDiscovery'
     */
    @Test
    public void configCmdbDiscoveryTest() {
        // TODO: test configCmdbDiscovery
    }

    /**
     * Test the property 'secretKeyHash'
     */
    @Test
    public void secretKeyHashTest() {
        // TODO: test secretKeyHash
    }

    /**
     * Test the property 'costingSecretKeyHash'
     */
    @Test
    public void costingSecretKeyHashTest() {
        // TODO: test costingSecretKeyHash
    }

}
