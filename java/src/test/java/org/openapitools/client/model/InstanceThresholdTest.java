/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for InstanceThreshold
 */
public class InstanceThresholdTest {
    private final InstanceThreshold model = new InstanceThreshold();

    /**
     * Model tests for InstanceThreshold
     */
    @Test
    public void testInstanceThreshold() {
        // TODO: test InstanceThreshold
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'autoUp'
     */
    @Test
    public void autoUpTest() {
        // TODO: test autoUp
    }

    /**
     * Test the property 'autoDown'
     */
    @Test
    public void autoDownTest() {
        // TODO: test autoDown
    }

    /**
     * Test the property 'minCount'
     */
    @Test
    public void minCountTest() {
        // TODO: test minCount
    }

    /**
     * Test the property 'maxCount'
     */
    @Test
    public void maxCountTest() {
        // TODO: test maxCount
    }

    /**
     * Test the property 'scaleIncrement'
     */
    @Test
    public void scaleIncrementTest() {
        // TODO: test scaleIncrement
    }

    /**
     * Test the property 'cpuEnabled'
     */
    @Test
    public void cpuEnabledTest() {
        // TODO: test cpuEnabled
    }

    /**
     * Test the property 'minCpu'
     */
    @Test
    public void minCpuTest() {
        // TODO: test minCpu
    }

    /**
     * Test the property 'maxCpu'
     */
    @Test
    public void maxCpuTest() {
        // TODO: test maxCpu
    }

    /**
     * Test the property 'memoryEnabled'
     */
    @Test
    public void memoryEnabledTest() {
        // TODO: test memoryEnabled
    }

    /**
     * Test the property 'minMemory'
     */
    @Test
    public void minMemoryTest() {
        // TODO: test minMemory
    }

    /**
     * Test the property 'maxMemory'
     */
    @Test
    public void maxMemoryTest() {
        // TODO: test maxMemory
    }

    /**
     * Test the property 'diskEnabled'
     */
    @Test
    public void diskEnabledTest() {
        // TODO: test diskEnabled
    }

    /**
     * Test the property 'minDisk'
     */
    @Test
    public void minDiskTest() {
        // TODO: test minDisk
    }

    /**
     * Test the property 'maxDisk'
     */
    @Test
    public void maxDiskTest() {
        // TODO: test maxDisk
    }

    /**
     * Test the property 'minNetwork'
     */
    @Test
    public void minNetworkTest() {
        // TODO: test minNetwork
    }

    /**
     * Test the property 'networkEnabled'
     */
    @Test
    public void networkEnabledTest() {
        // TODO: test networkEnabled
    }

    /**
     * Test the property 'iopsEnabled'
     */
    @Test
    public void iopsEnabledTest() {
        // TODO: test iopsEnabled
    }

    /**
     * Test the property 'minIops'
     */
    @Test
    public void minIopsTest() {
        // TODO: test minIops
    }

    /**
     * Test the property 'maxIops'
     */
    @Test
    public void maxIopsTest() {
        // TODO: test maxIops
    }

    /**
     * Test the property 'comment'
     */
    @Test
    public void commentTest() {
        // TODO: test comment
    }

    /**
     * Test the property 'zoneId'
     */
    @Test
    public void zoneIdTest() {
        // TODO: test zoneId
    }

    /**
     * Test the property 'dateCreated'
     */
    @Test
    public void dateCreatedTest() {
        // TODO: test dateCreated
    }

    /**
     * Test the property 'lastUpdated'
     */
    @Test
    public void lastUpdatedTest() {
        // TODO: test lastUpdated
    }

}
