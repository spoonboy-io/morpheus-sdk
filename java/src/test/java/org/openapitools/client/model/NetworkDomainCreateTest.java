/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for NetworkDomainCreate
 */
public class NetworkDomainCreateTest {
    private final NetworkDomainCreate model = new NetworkDomainCreate();

    /**
     * Model tests for NetworkDomainCreate
     */
    @Test
    public void testNetworkDomainCreate() {
        // TODO: test NetworkDomainCreate
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'publicZone'
     */
    @Test
    public void publicZoneTest() {
        // TODO: test publicZone
    }

    /**
     * Test the property 'taskSetId'
     */
    @Test
    public void taskSetIdTest() {
        // TODO: test taskSetId
    }

    /**
     * Test the property 'active'
     */
    @Test
    public void activeTest() {
        // TODO: test active
    }

    /**
     * Test the property 'domainController'
     */
    @Test
    public void domainControllerTest() {
        // TODO: test domainController
    }

    /**
     * Test the property 'domainUsername'
     */
    @Test
    public void domainUsernameTest() {
        // TODO: test domainUsername
    }

    /**
     * Test the property 'domainPassword'
     */
    @Test
    public void domainPasswordTest() {
        // TODO: test domainPassword
    }

    /**
     * Test the property 'dcServer'
     */
    @Test
    public void dcServerTest() {
        // TODO: test dcServer
    }

    /**
     * Test the property 'ouPath'
     */
    @Test
    public void ouPathTest() {
        // TODO: test ouPath
    }

    /**
     * Test the property 'guestUsername'
     */
    @Test
    public void guestUsernameTest() {
        // TODO: test guestUsername
    }

    /**
     * Test the property 'guestPassword'
     */
    @Test
    public void guestPasswordTest() {
        // TODO: test guestPassword
    }

}
