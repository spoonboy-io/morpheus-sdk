/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ApiServicePlansIdServicePlanConfig;
import org.openapitools.client.model.ApiServicePlansIdServicePlanProvisionType;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ApiServicePlansIdServicePlan
 */
public class ApiServicePlansIdServicePlanTest {
    private final ApiServicePlansIdServicePlan model = new ApiServicePlansIdServicePlan();

    /**
     * Model tests for ApiServicePlansIdServicePlan
     */
    @Test
    public void testApiServicePlansIdServicePlan() {
        // TODO: test ApiServicePlansIdServicePlan
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'editable'
     */
    @Test
    public void editableTest() {
        // TODO: test editable
    }

    /**
     * Test the property 'maxStorage'
     */
    @Test
    public void maxStorageTest() {
        // TODO: test maxStorage
    }

    /**
     * Test the property 'maxMemory'
     */
    @Test
    public void maxMemoryTest() {
        // TODO: test maxMemory
    }

    /**
     * Test the property 'maxCores'
     */
    @Test
    public void maxCoresTest() {
        // TODO: test maxCores
    }

    /**
     * Test the property 'maxDisks'
     */
    @Test
    public void maxDisksTest() {
        // TODO: test maxDisks
    }

    /**
     * Test the property 'provisionType'
     */
    @Test
    public void provisionTypeTest() {
        // TODO: test provisionType
    }

    /**
     * Test the property 'customCores'
     */
    @Test
    public void customCoresTest() {
        // TODO: test customCores
    }

    /**
     * Test the property 'customMaxStorage'
     */
    @Test
    public void customMaxStorageTest() {
        // TODO: test customMaxStorage
    }

    /**
     * Test the property 'customMaxDataStorage'
     */
    @Test
    public void customMaxDataStorageTest() {
        // TODO: test customMaxDataStorage
    }

    /**
     * Test the property 'customMaxMemory'
     */
    @Test
    public void customMaxMemoryTest() {
        // TODO: test customMaxMemory
    }

    /**
     * Test the property 'addVolumes'
     */
    @Test
    public void addVolumesTest() {
        // TODO: test addVolumes
    }

    /**
     * Test the property 'sortOrder'
     */
    @Test
    public void sortOrderTest() {
        // TODO: test sortOrder
    }

    /**
     * Test the property 'priceSets'
     */
    @Test
    public void priceSetsTest() {
        // TODO: test priceSets
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

}
