/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ScriptUpdate
 */
public class ScriptUpdateTest {
    private final ScriptUpdate model = new ScriptUpdate();

    /**
     * Model tests for ScriptUpdate
     */
    @Test
    public void testScriptUpdate() {
        // TODO: test ScriptUpdate
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'scriptVersion'
     */
    @Test
    public void scriptVersionTest() {
        // TODO: test scriptVersion
    }

    /**
     * Test the property 'scriptPhase'
     */
    @Test
    public void scriptPhaseTest() {
        // TODO: test scriptPhase
    }

    /**
     * Test the property 'scriptType'
     */
    @Test
    public void scriptTypeTest() {
        // TODO: test scriptType
    }

    /**
     * Test the property 'script'
     */
    @Test
    public void scriptTest() {
        // TODO: test script
    }

    /**
     * Test the property 'runAsUser'
     */
    @Test
    public void runAsUserTest() {
        // TODO: test runAsUser
    }

    /**
     * Test the property 'sudoUser'
     */
    @Test
    public void sudoUserTest() {
        // TODO: test sudoUser
    }

}
