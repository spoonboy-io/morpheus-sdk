/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for HealthDatabaseScans
 */
public class HealthDatabaseScansTest {
    private final HealthDatabaseScans model = new HealthDatabaseScans();

    /**
     * Model tests for HealthDatabaseScans
     */
    @Test
    public void testHealthDatabaseScans() {
        // TODO: test HealthDatabaseScans
    }

    /**
     * Test the property 'handlerReadFirst'
     */
    @Test
    public void handlerReadFirstTest() {
        // TODO: test handlerReadFirst
    }

    /**
     * Test the property 'handlerReadKey'
     */
    @Test
    public void handlerReadKeyTest() {
        // TODO: test handlerReadKey
    }

    /**
     * Test the property 'handlerReadLast'
     */
    @Test
    public void handlerReadLastTest() {
        // TODO: test handlerReadLast
    }

    /**
     * Test the property 'handlerReadNext'
     */
    @Test
    public void handlerReadNextTest() {
        // TODO: test handlerReadNext
    }

    /**
     * Test the property 'handlerReadPrev'
     */
    @Test
    public void handlerReadPrevTest() {
        // TODO: test handlerReadPrev
    }

    /**
     * Test the property 'handlerReadRnd'
     */
    @Test
    public void handlerReadRndTest() {
        // TODO: test handlerReadRnd
    }

    /**
     * Test the property 'handlerReadRndNext'
     */
    @Test
    public void handlerReadRndNextTest() {
        // TODO: test handlerReadRndNext
    }

}
