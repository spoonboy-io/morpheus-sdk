/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.ProvisioningSettingsUpdateCloudInitKeyPair;
import org.openapitools.client.model.ProvisioningSettingsUpdateDefaultTemplateType;
import org.openapitools.client.model.ProvisioningSettingsUpdateDeployStorageProvider;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ProvisioningSettingsUpdate
 */
public class ProvisioningSettingsUpdateTest {
    private final ProvisioningSettingsUpdate model = new ProvisioningSettingsUpdate();

    /**
     * Model tests for ProvisioningSettingsUpdate
     */
    @Test
    public void testProvisioningSettingsUpdate() {
        // TODO: test ProvisioningSettingsUpdate
    }

    /**
     * Test the property 'allowZoneSelection'
     */
    @Test
    public void allowZoneSelectionTest() {
        // TODO: test allowZoneSelection
    }

    /**
     * Test the property 'allowServerSelection'
     */
    @Test
    public void allowServerSelectionTest() {
        // TODO: test allowServerSelection
    }

    /**
     * Test the property 'requireEnvironments'
     */
    @Test
    public void requireEnvironmentsTest() {
        // TODO: test requireEnvironments
    }

    /**
     * Test the property 'showPricing'
     */
    @Test
    public void showPricingTest() {
        // TODO: test showPricing
    }

    /**
     * Test the property 'hideDatastoreStats'
     */
    @Test
    public void hideDatastoreStatsTest() {
        // TODO: test hideDatastoreStats
    }

    /**
     * Test the property 'crossTenantNamingPolicies'
     */
    @Test
    public void crossTenantNamingPoliciesTest() {
        // TODO: test crossTenantNamingPolicies
    }

    /**
     * Test the property 'reuseSequence'
     */
    @Test
    public void reuseSequenceTest() {
        // TODO: test reuseSequence
    }

    /**
     * Test the property 'cloudInitUsername'
     */
    @Test
    public void cloudInitUsernameTest() {
        // TODO: test cloudInitUsername
    }

    /**
     * Test the property 'cloudInitPassword'
     */
    @Test
    public void cloudInitPasswordTest() {
        // TODO: test cloudInitPassword
    }

    /**
     * Test the property 'cloudInitKeyPair'
     */
    @Test
    public void cloudInitKeyPairTest() {
        // TODO: test cloudInitKeyPair
    }

    /**
     * Test the property 'deployStorageProvider'
     */
    @Test
    public void deployStorageProviderTest() {
        // TODO: test deployStorageProvider
    }

    /**
     * Test the property 'windowsPassword'
     */
    @Test
    public void windowsPasswordTest() {
        // TODO: test windowsPassword
    }

    /**
     * Test the property 'pxeRootPassword'
     */
    @Test
    public void pxeRootPasswordTest() {
        // TODO: test pxeRootPassword
    }

    /**
     * Test the property 'defaultTemplateType'
     */
    @Test
    public void defaultTemplateTypeTest() {
        // TODO: test defaultTemplateType
    }

}
