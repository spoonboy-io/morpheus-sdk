/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.Creds;
import org.openapitools.client.model.InlineResponse20079LoadBalancerMonitorLoadBalancerType;
import org.openapitools.client.model.IntegrationSaltMasterConfig;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for IntegrationSaltMaster
 */
public class IntegrationSaltMasterTest {
    private final IntegrationSaltMaster model = new IntegrationSaltMaster();

    /**
     * Model tests for IntegrationSaltMaster
     */
    @Test
    public void testIntegrationSaltMaster() {
        // TODO: test IntegrationSaltMaster
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'integrationType'
     */
    @Test
    public void integrationTypeTest() {
        // TODO: test integrationType
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'port'
     */
    @Test
    public void portTest() {
        // TODO: test port
    }

    /**
     * Test the property 'username'
     */
    @Test
    public void usernameTest() {
        // TODO: test username
    }

    /**
     * Test the property 'password'
     */
    @Test
    public void passwordTest() {
        // TODO: test password
    }

    /**
     * Test the property 'passwordHash'
     */
    @Test
    public void passwordHashTest() {
        // TODO: test passwordHash
    }

    /**
     * Test the property 'path'
     */
    @Test
    public void pathTest() {
        // TODO: test path
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'windowsVersion'
     */
    @Test
    public void windowsVersionTest() {
        // TODO: test windowsVersion
    }

    /**
     * Test the property 'repoUrl'
     */
    @Test
    public void repoUrlTest() {
        // TODO: test repoUrl
    }

    /**
     * Test the property 'serviceMode'
     */
    @Test
    public void serviceModeTest() {
        // TODO: test serviceMode
    }

    /**
     * Test the property 'isPlugin'
     */
    @Test
    public void isPluginTest() {
        // TODO: test isPlugin
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'statusDate'
     */
    @Test
    public void statusDateTest() {
        // TODO: test statusDate
    }

    /**
     * Test the property 'statusMessage'
     */
    @Test
    public void statusMessageTest() {
        // TODO: test statusMessage
    }

    /**
     * Test the property 'lastSync'
     */
    @Test
    public void lastSyncTest() {
        // TODO: test lastSync
    }

    /**
     * Test the property 'lastSyncDuration'
     */
    @Test
    public void lastSyncDurationTest() {
        // TODO: test lastSyncDuration
    }

    /**
     * Test the property 'credential'
     */
    @Test
    public void credentialTest() {
        // TODO: test credential
    }

}
