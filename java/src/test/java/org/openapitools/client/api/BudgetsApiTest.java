/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.1.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddBudgets200Response;
import org.openapitools.client.model.AddBudgetsRequest;
import org.openapitools.client.model.DefaultError;
import org.openapitools.client.model.GetBudgets200Response;
import org.openapitools.client.model.ListBudgets200Response;
import org.openapitools.client.model.Model200Success;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BudgetsApi
 */
@Disabled
public class BudgetsApiTest {

    private final BudgetsApi api = new BudgetsApi();

    /**
     * Creates a Budget
     *
     * Creates a budget. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addBudgetsTest() throws ApiException {
        AddBudgetsRequest addBudgetsRequest = null;
        AddBudgets200Response response = api.addBudgets(addBudgetsRequest);
        // TODO: test validations
    }

    /**
     * Retrieves a Specific Budget
     *
     * Retrieves a specific budget. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBudgetsTest() throws ApiException {
        Long id = null;
        GetBudgets200Response response = api.getBudgets(id);
        // TODO: test validations
    }

    /**
     * Retrieves all Budgets
     *
     * Retrieves all budgets. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listBudgetsTest() throws ApiException {
        Long max = null;
        Long offset = null;
        String sort = null;
        String direction = null;
        String phrase = null;
        String name = null;
        ListBudgets200Response response = api.listBudgets(max, offset, sort, direction, phrase, name);
        // TODO: test validations
    }

    /**
     * Deletes a Budget
     *
     * Deletes a specified Budget. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeBudgetsTest() throws ApiException {
        Long id = null;
        Model200Success response = api.removeBudgets(id);
        // TODO: test validations
    }

    /**
     * Updates a Budget
     *
     * Updates a budget. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBudgetsTest() throws ApiException {
        Long id = null;
        AddBudgetsRequest addBudgetsRequest = null;
        AddBudgets200Response response = api.updateBudgets(id, addBudgetsRequest);
        // TODO: test validations
    }

}
