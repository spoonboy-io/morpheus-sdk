/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccessToken;
import org.openapitools.client.model.DefaultError;
import org.openapitools.client.model.InlineObject10;
import org.openapitools.client.model.InlineObject11;
import org.openapitools.client.model.InlineResponse200167;
import org.openapitools.client.model.InlineResponse2006;
import org.openapitools.client.model.InlineResponse2007;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthenticationApi
 */
@Ignore
public class AuthenticationApiTest {

    private final AuthenticationApi api = new AuthenticationApi();

    
    /**
     * Request a reset password email
     *
     * This endpoint will trigger the Reset your password email to be sent to the specified user.  The User is identified by &#x60;username&#x60; and, if they exist, will be notified via their configured email address. The email notification will indicate a Reset Password Request was made and it will include a token.  Once you obtain the token from the email, it may be used to reset the password of your user.  **Note**: This is an unauthorized endpoint and the response will always appear successful, it is not possible determine from the response whether the user exists or if an email was sent. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void forgotPasswordTest() throws ApiException {
        InlineObject11 inlineObject11 = null;
        InlineResponse2007 response = api.forgotPassword(inlineObject11);

        // TODO: test validations
    }
    
    /**
     * Provides authentication via username and password
     *
     * This endpoint provides authentication via &#x60;username&#x60; and &#x60;password&#x60; of a Morpheus User. The response includes a valid access token. If your current token is expired, a new one will be created and returned.  Subtenant users will need to pass their subdomain prefix like subdomain\\username. The default subdomain is the tenant account ID.  This endpoint also allows refreshing your current access token to get a new token. This is done by passing your current &#x60;refresh_token&#x60;. This provides a way to renew your client’s session with the API, and extend the expiration date.  This will render your current access token invalid, so you will need to update any scripts relying on it. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAccessTokenTest() throws ApiException {
        String clientId = null;
        String grantType = null;
        String scope = null;
        String username = null;
        String password = null;
        Object refreshToken = null;
        AccessToken response = api.getAccessToken(clientId, grantType, scope, username, password, refreshToken);

        // TODO: test validations
    }
    
    /**
     * Reset user password
     *
     * This endpoint will reset the password for a user, updating it to the specified value. A secret token must be passed to identify the user who is being updated.  **Note**: You can obtain this token by inspecting the URL of the “Click here to reset” link seen in the email. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void resetPasswordTest() throws ApiException {
        InlineObject10 inlineObject10 = null;
        InlineResponse2006 response = api.resetPassword(inlineObject10);

        // TODO: test validations
    }
    
    /**
     * Retrieves information about current user roles and permissions
     *
     * Provides API to retrieve information about yourself, including your roles and permissions.  The appliance build version is also returned. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void whoamiTest() throws ApiException {
        InlineResponse200167 response = api.whoami();

        // TODO: test validations
    }
    
}
