/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.1.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddExecuteSchedules200Response;
import org.openapitools.client.model.AddExecuteSchedulesRequest;
import org.openapitools.client.model.DefaultError;
import org.openapitools.client.model.ExecuteExecutionRequest200Response;
import org.openapitools.client.model.ExecuteExecutionRequestRequest;
import org.openapitools.client.model.GetExecuteSchedules200Response;
import org.openapitools.client.model.GetExecutionRequest200Response;
import org.openapitools.client.model.ListExecuteSchedules200Response;
import org.openapitools.client.model.Model200Success;
import org.openapitools.client.model.UpdateExecuteSchedulesRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AutomationApi
 */
@Disabled
public class AutomationApiTest {

    private final AutomationApi api = new AutomationApi();

    /**
     * Creates a Execute Schedule
     *
     * Creates a execute schedule. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addExecuteSchedulesTest() throws ApiException {
        AddExecuteSchedulesRequest addExecuteSchedulesRequest = null;
        AddExecuteSchedules200Response response = api.addExecuteSchedules(addExecuteSchedulesRequest);
        // TODO: test validations
    }

    /**
     * Executes an Execution Request
     *
     * Provides API interfaces for executing an arbitrary script or command on an instance, container or host. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void executeExecutionRequestTest() throws ApiException {
        Long instanceId = null;
        Long containerId = null;
        Long serverId = null;
        ExecuteExecutionRequestRequest executeExecutionRequestRequest = null;
        ExecuteExecutionRequest200Response response = api.executeExecutionRequest(instanceId, containerId, serverId, executeExecutionRequestRequest);
        // TODO: test validations
    }

    /**
     * Retrieves a Specific Execute Schedule
     *
     * Retrieves a specific execute schedule. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExecuteSchedulesTest() throws ApiException {
        Long id = null;
        GetExecuteSchedules200Response response = api.getExecuteSchedules(id);
        // TODO: test validations
    }

    /**
     * Retrieves a Specific Execution Request
     *
     * Retrieves a specific execution request. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExecutionRequestTest() throws ApiException {
        String uniqueId = null;
        GetExecutionRequest200Response response = api.getExecutionRequest(uniqueId);
        // TODO: test validations
    }

    /**
     * Retrieves all Execute Schedules
     *
     * Retrieves all execute schedules. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listExecuteSchedulesTest() throws ApiException {
        Long max = null;
        Long offset = null;
        String sort = null;
        String direction = null;
        String phrase = null;
        String name = null;
        ListExecuteSchedules200Response response = api.listExecuteSchedules(max, offset, sort, direction, phrase, name);
        // TODO: test validations
    }

    /**
     * Deletes a Execute Schedule
     *
     * Deletes a specified execute schedule. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeExecuteSchedulesTest() throws ApiException {
        Long id = null;
        Model200Success response = api.removeExecuteSchedules(id);
        // TODO: test validations
    }

    /**
     * Updates a Execute Schedule
     *
     * Updates a execute schedule. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateExecuteSchedulesTest() throws ApiException {
        Long id = null;
        UpdateExecuteSchedulesRequest updateExecuteSchedulesRequest = null;
        AddExecuteSchedules200Response response = api.updateExecuteSchedules(id, updateExecuteSchedulesRequest);
        // TODO: test validations
    }

}
