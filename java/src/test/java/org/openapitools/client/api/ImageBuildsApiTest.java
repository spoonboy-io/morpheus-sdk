/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultError;
import org.openapitools.client.model.InlineObject196;
import org.openapitools.client.model.InlineObject197;
import org.openapitools.client.model.InlineObject83;
import org.openapitools.client.model.InlineObject84;
import org.openapitools.client.model.InlineObject85;
import org.openapitools.client.model.InlineObject86;
import org.openapitools.client.model.InlineResponse200122;
import org.openapitools.client.model.InlineResponse20052;
import org.openapitools.client.model.InlineResponse20053;
import org.openapitools.client.model.InlineResponse20054;
import org.openapitools.client.model.Model200Success;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ImageBuildsApi
 */
@Ignore
public class ImageBuildsApiTest {

    private final ImageBuildsApi api = new ImageBuildsApi();

    
    /**
     * Create a Boot Script
     *
     * Create a Boot Script
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addBootScriptTest() throws ApiException {
        InlineObject83 inlineObject83 = null;
        Object response = api.addBootScript(inlineObject83);

        // TODO: test validations
    }
    
    /**
     * Create an Image Build
     *
     * Create an Image Build
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addImageBuildTest() throws ApiException {
        InlineObject85 inlineObject85 = null;
        Object response = api.addImageBuild(inlineObject85);

        // TODO: test validations
    }
    
    /**
     * Create a Preseed Script
     *
     * Create a Preseed Script
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addPreseedScriptTest() throws ApiException {
        InlineObject196 inlineObject196 = null;
        Object response = api.addPreseedScript(inlineObject196);

        // TODO: test validations
    }
    
    /**
     * Delete a Boot Script
     *
     * Will delete a boot script from the system and make it no longer usable.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteBootScriptTest() throws ApiException {
        Long id = null;
        Model200Success response = api.deleteBootScript(id);

        // TODO: test validations
    }
    
    /**
     * Delete an Image Build
     *
     * Will delete an image build from the system and make it no longer usable.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteImageBuildTest() throws ApiException {
        Long id = null;
        Model200Success response = api.deleteImageBuild(id);

        // TODO: test validations
    }
    
    /**
     * Delete a Preseed Script
     *
     * Will delete a preseed script from the system and make it no longer usable.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePreseedScriptTest() throws ApiException {
        Long id = null;
        Model200Success response = api.deletePreseedScript(id);

        // TODO: test validations
    }
    
    /**
     * Run an Image Build
     *
     * Running an image build is done asynchronously. This api will kick off the new execution and update the image build status.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void executeImageBuildTest() throws ApiException {
        Long id = null;
        Model200Success response = api.executeImageBuild(id);

        // TODO: test validations
    }
    
    /**
     * Get a Specific Boot Script
     *
     * This endpoint retrieves a specific boot script.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBootScriptTest() throws ApiException {
        Long id = null;
        InlineResponse20052 response = api.getBootScript(id);

        // TODO: test validations
    }
    
    /**
     * Get a Specific Image Build
     *
     * This endpoint retrieves a specific image build.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getImageBuildTest() throws ApiException {
        Long id = null;
        InlineResponse20053 response = api.getImageBuild(id);

        // TODO: test validations
    }
    
    /**
     * List Image Build Executions
     *
     * List all executions for an image build. This same info is also returned by the image build GET api, which returns the 100 most recent executions.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getImageBuildExecutionsTest() throws ApiException {
        Long id = null;
        Long buildNumber = null;
        String status = null;
        Object response = api.getImageBuildExecutions(id, buildNumber, status);

        // TODO: test validations
    }
    
    /**
     * Get a Specific Preseed Script
     *
     * This endpoint retrieves a specific preseed script.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPreseedScriptTest() throws ApiException {
        Long id = null;
        InlineResponse200122 response = api.getPreseedScript(id);

        // TODO: test validations
    }
    
    /**
     * Boot Scripts
     *
     * Boot Scripts are used in the Image Builder service. See Image Builds.  This endpoint retrieves all boot scripts associated with the account. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listBootScriptsTest() throws ApiException {
        String name = null;
        String phrase = null;
        Object response = api.listBootScripts(name, phrase);

        // TODO: test validations
    }
    
    /**
     * Get All Image Builds
     *
     * This endpoint retrieves all image builds associated with the account.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listImageBuildsTest() throws ApiException {
        String name = null;
        String phrase = null;
        Object response = api.listImageBuilds(name, phrase);

        // TODO: test validations
    }
    
    /**
     * Preseed Scripts
     *
     * Preseed Scripts are used in the Image Builder service. See Image Builds.  This endpoint retrieves all preseed scripts associated with the account. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPreseedScriptsTest() throws ApiException {
        String name = null;
        String phrase = null;
        Object response = api.listPreseedScripts(name, phrase);

        // TODO: test validations
    }
    
    /**
     * Update a Boot Script
     *
     * Update a Boot Script
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateBootScriptTest() throws ApiException {
        Long id = null;
        InlineObject84 inlineObject84 = null;
        Object response = api.updateBootScript(id, inlineObject84);

        // TODO: test validations
    }
    
    /**
     * Update an Image Build
     *
     * Update an Image Build
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateImageBuildTest() throws ApiException {
        Long id = null;
        InlineObject86 inlineObject86 = null;
        InlineResponse20054 response = api.updateImageBuild(id, inlineObject86);

        // TODO: test validations
    }
    
    /**
     * Update a Preseed Script
     *
     * Update a Preseed Script
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePreseedScriptTest() throws ApiException {
        Long id = null;
        InlineObject197 inlineObject197 = null;
        Object response = api.updatePreseedScript(id, inlineObject197);

        // TODO: test validations
    }
    
}
