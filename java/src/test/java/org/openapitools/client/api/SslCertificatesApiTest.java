/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultError;
import org.openapitools.client.model.InlineObject230;
import org.openapitools.client.model.InlineObject231;
import org.openapitools.client.model.InlineResponse200143;
import org.openapitools.client.model.InlineResponse200144;
import org.openapitools.client.model.Model200Success;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SslCertificatesApi
 */
@Ignore
public class SslCertificatesApiTest {

    private final SslCertificatesApi api = new SslCertificatesApi();

    
    /**
     * Create a Certificate
     *
     * Create a Certificate
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCertificateTest() throws ApiException {
        InlineObject230 inlineObject230 = null;
        Object response = api.addCertificate(inlineObject230);

        // TODO: test validations
    }
    
    /**
     * Delete a Certificate
     *
     * Will delete a certificate from the system and make it no longer usable.  If a certificate is actively in use, a delete will fail.  
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCertificateTest() throws ApiException {
        Long id = null;
        Model200Success response = api.deleteCertificate(id);

        // TODO: test validations
    }
    
    /**
     * Get a Specific Certificate
     *
     * This endpoint retrieves a specific certificate.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCertificateTest() throws ApiException {
        Long id = null;
        InlineResponse200144 response = api.getCertificate(id);

        // TODO: test validations
    }
    
    /**
     * Get All SSL Certificates
     *
     * This endpoint retrieves all SSL certificates associated with the account.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listCertificatesTest() throws ApiException {
        String name = null;
        InlineResponse200143 response = api.listCertificates(name);

        // TODO: test validations
    }
    
    /**
     * Update a Certificate
     *
     * Update a Certificate.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCertificateTest() throws ApiException {
        Long id = null;
        InlineObject231 inlineObject231 = null;
        InlineResponse200144 response = api.updateCertificate(id, inlineObject231);

        // TODO: test validations
    }
    
}
