/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.1.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddAlerts200Response;
import org.openapitools.client.model.AddAlertsRequest;
import org.openapitools.client.model.DefaultError;
import org.openapitools.client.model.GetAlerts200Response;
import org.openapitools.client.model.ListAlerts200Response;
import org.openapitools.client.model.Model200Success;
import java.time.OffsetDateTime;
import org.openapitools.client.model.UpdateAlerts200Response;
import org.openapitools.client.model.UpdateAlertsRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AlertsApi
 */
@Disabled
public class AlertsApiTest {

    private final AlertsApi api = new AlertsApi();

    /**
     * Create a New Alert
     *
     * Create a new monitoring alert.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addAlertsTest() throws ApiException {
        AddAlertsRequest addAlertsRequest = null;
        AddAlerts200Response response = api.addAlerts(addAlertsRequest);
        // TODO: test validations
    }

    /**
     * Delete a Specific Alert
     *
     * Delete an existing monitoring alert.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAlertsTest() throws ApiException {
        Long id = null;
        Model200Success response = api.deleteAlerts(id);
        // TODO: test validations
    }

    /**
     * Get a Specific Alert
     *
     * Get details about a specific monitoring alert.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAlertsTest() throws ApiException {
        Long id = null;
        GetAlerts200Response response = api.getAlerts(id);
        // TODO: test validations
    }

    /**
     * List All Alerts
     *
     * Get a list of monitoring alerts.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAlertsTest() throws ApiException {
        Long max = null;
        Long offset = null;
        OffsetDateTime lastUpdated = null;
        ListAlerts200Response response = api.listAlerts(max, offset, lastUpdated);
        // TODO: test validations
    }

    /**
     * Update Alert
     *
     * Update an existing monitoring alert.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAlertsTest() throws ApiException {
        Long id = null;
        UpdateAlertsRequest updateAlertsRequest = null;
        UpdateAlerts200Response response = api.updateAlerts(id, updateAlertsRequest);
        // TODO: test validations
    }

}
