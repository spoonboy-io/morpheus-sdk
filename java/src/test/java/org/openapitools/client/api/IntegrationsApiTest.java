/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AnyOfobjectmeta;
import org.openapitools.client.model.DefaultError;
import org.openapitools.client.model.InlineObject100;
import org.openapitools.client.model.InlineObject101;
import org.openapitools.client.model.InlineResponse20061;
import org.openapitools.client.model.InlineResponse20062;
import org.openapitools.client.model.InlineResponse20063;
import org.openapitools.client.model.InlineResponse20064;
import org.openapitools.client.model.InlineResponse20065;
import org.openapitools.client.model.Model200Success;
import org.openapitools.client.model.OneOfintegrationConfigintegrationAnsibleConfigintegrationSNOWConfigintegrationSaltMasterConfigintegrationDockerRepoConfigintegrationGitRepoConfigintegrationGitHubConfig;
import org.openapitools.client.model.UNKNOWN_BASE_TYPE;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IntegrationsApi
 */
@Ignore
public class IntegrationsApiTest {

    private final IntegrationsApi api = new IntegrationsApi();

    
    /**
     * Creates an Exposed ServiceNow Catalog Item
     *
     * This endpoint creates an Exposed Catalog Item. This is an integration object of type &#x60;catalog&#x60; that references a &#x60;Catalog Item Type.&#x60; 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addIntegrationSnowObjectsTest() throws ApiException {
        Long id = null;
        InlineObject100 inlineObject100 = null;
        Object response = api.addIntegrationSnowObjects(id, inlineObject100);

        // TODO: test validations
    }
    
    /**
     * Creates an Integration
     *
     * Creates an integration. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addIntegrationsTest() throws ApiException {
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        Object response = api.addIntegrations(UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
    /**
     * Get a Specific Integration Inventory
     *
     * This endpoint retrieves a specific integration inventory. Only certain types of integrations support this operation, such as Ansible Tower. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIntegrationInventoryTest() throws ApiException {
        Long id = null;
        Long inventoryId = null;
        InlineResponse20065 response = api.getIntegrationInventory(id, inventoryId);

        // TODO: test validations
    }
    
    /**
     * Get a Specific ServiceNow Integration Object
     *
     * This endpoint retrieves a specific ServiceNow integration object.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIntegrationObjectsTest() throws ApiException {
        Long id = null;
        Long objectId = null;
        InlineResponse20064 response = api.getIntegrationObjects(id, objectId);

        // TODO: test validations
    }
    
    /**
     * Retrieves a Option Types for a Specific Integration Type
     *
     * This endpoint will retrieve the list of option types for a specific integration type. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIntegrationTypeOptionTypesTest() throws ApiException {
        Long id = null;
        InlineResponse20062 response = api.getIntegrationTypeOptionTypes(id);

        // TODO: test validations
    }
    
    /**
     * Retrieves a Specific Integration Type
     *
     * Retrieves a specific integration type. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIntegrationTypesTest() throws ApiException {
        Long id = null;
        Boolean optiontypes = null;
        InlineResponse20061 response = api.getIntegrationTypes(id, optiontypes);

        // TODO: test validations
    }
    
    /**
     * Retrieves a Specific Integration
     *
     * Retrieves a specific integration. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIntegrationsTest() throws ApiException {
        Long id = null;
        Object response = api.getIntegrations(id);

        // TODO: test validations
    }
    
    /**
     * Get All Integration Inventory
     *
     * This endpoint retrieves a list of inventory for a specific integration. Only certain types of integrations support this operation, such as Ansible Tower. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listIntegrationInventoryTest() throws ApiException {
        Long id = null;
        Long max = null;
        Long offset = null;
        String sort = null;
        String direction = null;
        String phrase = null;
        String name = null;
        Object response = api.listIntegrationInventory(id, max, offset, sort, direction, phrase, name);

        // TODO: test validations
    }
    
    /**
     * Get ServiceNow Integration Objects
     *
     * This endpoint retrieves a list of exposed objects for a specific ServiceNow integration. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listIntegrationObjectsTest() throws ApiException {
        Long id = null;
        Long max = null;
        Long offset = null;
        String sort = null;
        String direction = null;
        String phrase = null;
        String name = null;
        String value = null;
        Long refId = null;
        InlineResponse20063 response = api.listIntegrationObjects(id, max, offset, sort, direction, phrase, name, value, refId);

        // TODO: test validations
    }
    
    /**
     * Retrieves all Integration Types
     *
     * An Integration Type is specific third party software that the appliance can be configured to integrate with, such as Ansible, Chef, Git, ServiceNOW, etc. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listIntegrationTypesTest() throws ApiException {
        Long max = null;
        Long offset = null;
        String sort = null;
        String direction = null;
        String phrase = null;
        String name = null;
        String code = null;
        Boolean optiontypes = null;
        String description = null;
        String category = null;
        Boolean creatable = null;
        Boolean enabled = null;
        Boolean hasCMDB = null;
        Boolean hasCMDBDiscovery = null;
        Boolean hasCM = null;
        Boolean hasDNS = null;
        Boolean hasApprovals = null;
        Boolean isPlugin = null;
        Object response = api.listIntegrationTypes(max, offset, sort, direction, phrase, name, code, optiontypes, description, category, creatable, enabled, hasCMDB, hasCMDBDiscovery, hasCM, hasDNS, hasApprovals, isPlugin);

        // TODO: test validations
    }
    
    /**
     * Retrieves all Integrations
     *
     * Retrieves all integrations. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listIntegrationsTest() throws ApiException {
        Long max = null;
        Long offset = null;
        String sort = null;
        String direction = null;
        String phrase = null;
        String name = null;
        Long id = null;
        String url = null;
        String host = null;
        String port = null;
        String username = null;
        Long version = null;
        String windowsVersion = null;
        String status = null;
        Boolean objects = null;
        AnyOfobjectmeta response = api.listIntegrations(max, offset, sort, direction, phrase, name, id, url, host, port, username, version, windowsVersion, status, objects);

        // TODO: test validations
    }
    
    /**
     * Refresh an Integration
     *
     * This endpoint will refresh an existing Integration. Only some types support this and will actually perform an action as a result. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void refreshIntegrationsTest() throws ApiException {
        Long id = null;
        Object response = api.refreshIntegrations(id);

        // TODO: test validations
    }
    
    /**
     * Deletes a ServiceNow Integration object
     *
     * Deletes a specified ServiceNow integration object. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeIntegrationObjectsTest() throws ApiException {
        Long id = null;
        Long objectId = null;
        Model200Success response = api.removeIntegrationObjects(id, objectId);

        // TODO: test validations
    }
    
    /**
     * Deletes an Integration
     *
     * Deletes a specified integration. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeIntegrationsTest() throws ApiException {
        Long id = null;
        Model200Success response = api.removeIntegrations(id);

        // TODO: test validations
    }
    
    /**
     * Updating an Integration Inventory
     *
     * This endpoint provides updating of integration inventory
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateIntegrationInventoryTest() throws ApiException {
        Long id = null;
        Long inventoryId = null;
        InlineObject101 inlineObject101 = null;
        Object response = api.updateIntegrationInventory(id, inventoryId, inlineObject101);

        // TODO: test validations
    }
    
    /**
     * Updates an Integration
     *
     * Updates an integration. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateIntegrationsTest() throws ApiException {
        Long id = null;
        UNKNOWN_BASE_TYPE UNKNOWN_BASE_TYPE = null;
        Object response = api.updateIntegrations(id, UNKNOWN_BASE_TYPE);

        // TODO: test validations
    }
    
}
