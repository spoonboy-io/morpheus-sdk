/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultError;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BillingApi
 */
@Ignore
public class BillingApiTest {

    private final BillingApi api = new BillingApi();

    
    /**
     * This endpoint will retrieve a specific account by id if the user has permission to access it
     *
     * Will retrieve billing information for a specific tenant, if it is the current account or a sub account of the requesting user&#39;s account. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBillingAccountTest() throws ApiException {
        Long id = null;
        String startDate = null;
        String endDate = null;
        Boolean includeUsages = null;
        Long maxUsages = null;
        Long offsetUsages = null;
        Boolean includeComputeServers = null;
        Boolean includeInstances = null;
        Boolean includeDiscoveredServers = null;
        Boolean includeLoadBalancers = null;
        Boolean includeVirtualImages = null;
        Boolean includeSnapshots = null;
        Object response = api.getBillingAccount(id, startDate, endDate, includeUsages, maxUsages, offsetUsages, includeComputeServers, includeInstances, includeDiscoveredServers, includeLoadBalancers, includeVirtualImages, includeSnapshots);

        // TODO: test validations
    }
    
    /**
     * Retrieves billing information for an instance in the requestor&#39;s account. Use instanceUUID whenever possible.
     *
     * Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBillingInstancesIdentifierTest() throws ApiException {
        String identifier = null;
        String startDate = null;
        String endDate = null;
        Boolean includeUsages = null;
        Long maxUsages = null;
        Long offsetUsages = null;
        Boolean includeTenants = null;
        Long accountId = null;
        Object response = api.getBillingInstancesIdentifier(identifier, startDate, endDate, includeUsages, maxUsages, offsetUsages, includeTenants, accountId);

        // TODO: test validations
    }
    
    /**
     * Retrieves billing information for a specific server (container host) in the requestor&#39;s account. Use refUUID whenever possible.
     *
     * Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBillingServersIdentifierTest() throws ApiException {
        String identifier = null;
        String startDate = null;
        String endDate = null;
        Boolean includeUsages = null;
        Long maxUsages = null;
        Long offsetUsages = null;
        Boolean includeTenants = null;
        Long accountId = null;
        Object response = api.getBillingServersIdentifier(identifier, startDate, endDate, includeUsages, maxUsages, offsetUsages, includeTenants, accountId);

        // TODO: test validations
    }
    
    /**
     * Retrieves billing information for a specific zone in the requestor&#39;s account. Use zoneUUID whenever possible.
     *
     * Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBillingZoneIdentifierTest() throws ApiException {
        String identifier = null;
        String startDate = null;
        String endDate = null;
        Boolean includeUsages = null;
        Long maxUsages = null;
        Long offsetUsages = null;
        Boolean includeComputeServers = null;
        Boolean includeInstances = null;
        Boolean includeDiscoveredServers = null;
        Boolean includeLoadBalancers = null;
        Boolean includeVirtualImages = null;
        Boolean includeSnapshots = null;
        Object response = api.getBillingZoneIdentifier(identifier, startDate, endDate, includeUsages, maxUsages, offsetUsages, includeComputeServers, includeInstances, includeDiscoveredServers, includeLoadBalancers, includeVirtualImages, includeSnapshots);

        // TODO: test validations
    }
    
    /**
     * Retrieves billing information for the requesting user&#39;s account.
     *
     * Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listBillingAccountTest() throws ApiException {
        String startDate = null;
        String endDate = null;
        Boolean includeUsages = null;
        Long maxUsages = null;
        Long offsetUsages = null;
        Boolean includeComputeServers = null;
        Boolean includeInstances = null;
        Boolean includeDiscoveredServers = null;
        Boolean includeLoadBalancers = null;
        Boolean includeVirtualImages = null;
        Boolean includeSnapshots = null;
        Object response = api.listBillingAccount(startDate, endDate, includeUsages, maxUsages, offsetUsages, includeComputeServers, includeInstances, includeDiscoveredServers, includeLoadBalancers, includeVirtualImages, includeSnapshots);

        // TODO: test validations
    }
    
    /**
     * Retrieves billing information for all instances on the requestor&#39;s account.
     *
     * Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listBillingInstancesTest() throws ApiException {
        String startDate = null;
        String endDate = null;
        Boolean includeUsages = null;
        Long maxUsages = null;
        Long offsetUsages = null;
        Boolean includeTenants = null;
        Long accountId = null;
        Object response = api.listBillingInstances(startDate, endDate, includeUsages, maxUsages, offsetUsages, includeTenants, accountId);

        // TODO: test validations
    }
    
    /**
     * Retrieves billing information for all servers (container hosts) on the requestor&#39;s account.
     *
     * Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listBillingServersTest() throws ApiException {
        String startDate = null;
        String endDate = null;
        Boolean includeUsages = null;
        Long maxUsages = null;
        Long offsetUsages = null;
        Boolean includeTenants = null;
        Long accountId = null;
        Object response = api.listBillingServers(startDate, endDate, includeUsages, maxUsages, offsetUsages, includeTenants, accountId);

        // TODO: test validations
    }
    
    /**
     * Retrieves billing information for all zones on the requestor&#39;s account.
     *
     * Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listBillingZoneTest() throws ApiException {
        String startDate = null;
        String endDate = null;
        Boolean includeUsages = null;
        Long maxUsages = null;
        Long offsetUsages = null;
        Boolean includeComputeServers = null;
        Boolean includeInstances = null;
        Boolean includeDiscoveredServers = null;
        Boolean includeLoadBalancers = null;
        Boolean includeVirtualImages = null;
        Boolean includeSnapshots = null;
        Object response = api.listBillingZone(startDate, endDate, includeUsages, maxUsages, offsetUsages, includeComputeServers, includeInstances, includeDiscoveredServers, includeLoadBalancers, includeVirtualImages, includeSnapshots);

        // TODO: test validations
    }
    
}
