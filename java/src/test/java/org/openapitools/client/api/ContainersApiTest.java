/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultError;
import org.openapitools.client.model.InlineObject62;
import org.openapitools.client.model.InlineObject63;
import org.openapitools.client.model.InlineResponse20034;
import org.openapitools.client.model.InlineResponse20035;
import org.openapitools.client.model.InstancesCloneImage;
import org.openapitools.client.model.Model200Success;
import org.openapitools.client.model.SuccessMessage;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContainersApi
 */
@Ignore
public class ContainersApiTest {

    private final ContainersApi api = new ContainersApi();

    
    /**
     * Clone Specific Container to Image
     *
     * This endpoint clones and converts a Container in its current state to image in the source Cloud and adds Virtual Image Record with metadata matching the source configuration.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cloneImageContainerActionTest() throws ApiException {
        Long id = null;
        InstancesCloneImage instancesCloneImage = null;
        SuccessMessage response = api.cloneImageContainerAction(id, instancesCloneImage);

        // TODO: test validations
    }
    
    /**
     * Attach Floating IP to Container
     *
     * This endpoint attaches a floating IP to a container (node/VM).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void containersAttachFloatingIpTest() throws ApiException {
        Long id = null;
        InlineObject63 inlineObject63 = null;
        Model200Success response = api.containersAttachFloatingIp(id, inlineObject63);

        // TODO: test validations
    }
    
    /**
     * Detach Floating IP from Container
     *
     * This endpoint detaches a floating IP from a container (node/VM).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void containersDetachFloatingIpTest() throws ApiException {
        Long id = null;
        Model200Success response = api.containersDetachFloatingIp(id);

        // TODO: test validations
    }
    
    /**
     * Eject a Specific Container
     *
     * This endpoint ejects attached disk/iso of a specific container.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void ejectContainerActionTest() throws ApiException {
        Long id = null;
        SuccessMessage response = api.ejectContainerAction(id);

        // TODO: test validations
    }
    
    /**
     * Execute Container Action
     *
     * This endpoint executes a container action on specific container.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void executeContainerActionTest() throws ApiException {
        Long id = null;
        String code = null;
        SuccessMessage response = api.executeContainerAction(id, code);

        // TODO: test validations
    }
    
    /**
     * Get a Specific Container
     *
     * This endpoint retrieves a specific container.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getContainerTest() throws ApiException {
        Long id = null;
        InlineResponse20034 response = api.getContainer(id);

        // TODO: test validations
    }
    
    /**
     * List Container Actions
     *
     * This endpoint lists available actions for specific container.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getContainerActionsTest() throws ApiException {
        Long id = null;
        InlineResponse20035 response = api.getContainerActions(id);

        // TODO: test validations
    }
    
    /**
     * Import a Specific Container
     *
     * This endpoint clones and exports a Container in its current state to target Storage provider and adds Virtual Image Record with metadata matching the source configuration.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void importContainerActionTest() throws ApiException {
        Long id = null;
        InlineObject62 inlineObject62 = null;
        SuccessMessage response = api.importContainerAction(id, inlineObject62);

        // TODO: test validations
    }
    
    /**
     * Restart a Specific Container
     *
     * This endpoint restarts a specific container.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void restartContainerActionTest() throws ApiException {
        Long id = null;
        SuccessMessage response = api.restartContainerAction(id);

        // TODO: test validations
    }
    
    /**
     * Start a Specific Container
     *
     * This endpoint starts a specific container.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void startContainerActionTest() throws ApiException {
        Long id = null;
        SuccessMessage response = api.startContainerAction(id);

        // TODO: test validations
    }
    
    /**
     * Stop a Specific Container
     *
     * This endpoint stops a specific container.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void stopContainerActionTest() throws ApiException {
        Long id = null;
        SuccessMessage response = api.stopContainerAction(id);

        // TODO: test validations
    }
    
    /**
     * Suspend a Specific Container
     *
     * This endpoint suspends a specific container.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void suspendContainerActionTest() throws ApiException {
        Long id = null;
        SuccessMessage response = api.suspendContainerAction(id);

        // TODO: test validations
    }
    
}
