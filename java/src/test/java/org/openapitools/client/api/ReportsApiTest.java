/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultError;
import org.openapitools.client.model.InlineObject205;
import org.openapitools.client.model.InlineResponse200129;
import org.openapitools.client.model.InlineResponse200130;
import org.openapitools.client.model.Model200Success;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReportsApi
 */
@Ignore
public class ReportsApiTest {

    private final ReportsApi api = new ReportsApi();

    
    /**
     * Downloads a specific report result as a file attachment
     *
     * This endpoint downloads a specific report result as a file attachment. The default file format is &#x60;.json&#x60;. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void downloadReportsTest() throws ApiException {
        Long id = null;
        String format = null;
        Model200Success response = api.downloadReports(id, format);

        // TODO: test validations
    }
    
    /**
     * This endpoint retrieves all available report types
     *
     * This endpoint retrieves all available report types. A report type has optionTypes that define the parameters available when executing a report of that type. The sample response has been abbreviated. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReportTypesTest() throws ApiException {
        Long max = null;
        Long offset = null;
        String sort = null;
        String direction = null;
        String phrase = null;
        String name = null;
        String code = null;
        String category = null;
        InlineResponse200129 response = api.getReportTypes(max, offset, sort, direction, phrase, name, code, category);

        // TODO: test validations
    }
    
    /**
     * This endpoint returns a specific report result
     *
     * This endpoint retrieves a specific report result. The response includes the result data as rows which can be used to render the report. Each report type will have sections for data and headers that vary by type, use Download a Specific Report to get the results organized by section. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReportsTest() throws ApiException {
        Long id = null;
        InlineResponse200130 response = api.getReports(id);

        // TODO: test validations
    }
    
    /**
     * Returns all reports
     *
     * This endpoint returns all reports. This is results of reports that have been executed in the past. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listReportsTest() throws ApiException {
        Long max = null;
        Long offset = null;
        String sort = null;
        String direction = null;
        String phrase = null;
        String name = null;
        String reportType = null;
        String category = null;
        Object response = api.listReports(max, offset, sort, direction, phrase, name, reportType, category);

        // TODO: test validations
    }
    
    /**
     * This endpoint will delete a report result
     *
     * This endpoint will delete a report result. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeReportsTest() throws ApiException {
        Long id = null;
        Model200Success response = api.removeReports(id);

        // TODO: test validations
    }
    
    /**
     * Run specified report
     *
     * This endpoint execute the specified report type and create a new report result.  The available parameters vary by report type. Refer to the defined &#x60;inputs&#x60; for each report. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void runReportsTest() throws ApiException {
        InlineObject205 inlineObject205 = null;
        Object response = api.runReports(inlineObject205);

        // TODO: test validations
    }
    
}
