/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultError;
import org.openapitools.client.model.InlineObject72;
import org.openapitools.client.model.InlineObject73;
import org.openapitools.client.model.InlineObject92;
import org.openapitools.client.model.InlineResponse20040;
import org.openapitools.client.model.Model200Success;
import org.threeten.bp.OffsetDateTime;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DeploysApi
 */
@Ignore
public class DeploysApiTest {

    private final DeploysApi api = new DeploysApi();

    
    /**
     * Deploy to an Instance
     *
     * This endpoint will deploy the specified deployment version to specified instance. The version to deploy can be identified with deploymentId and version or with versionId alone.  By default, the deployment is executed right away. To prevent this so that it can be run manually later on. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addInstanceDeployTest() throws ApiException {
        Long id = null;
        InlineObject92 inlineObject92 = null;
        InlineResponse20040 response = api.addInstanceDeploy(id, inlineObject92);

        // TODO: test validations
    }
    
    /**
     * Delete a Deploy
     *
     * This endpoint will delete an archived instance deploy.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletedeployTest() throws ApiException {
        Long id = null;
        Model200Success response = api.deletedeploy(id);

        // TODO: test validations
    }
    
    /**
     * Get all Deploys for an Instance
     *
     * This endpoint retrieves all deploys for a specific instance.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInstanceDeploysTest() throws ApiException {
        Long id = null;
        Long max = null;
        Long offset = null;
        String phrase = null;
        String name = null;
        Long deploymentId = null;
        String instanceName = null;
        Long instanceId = null;
        Long version = null;
        Long versionId = null;
        Long createdById = null;
        String deployType = null;
        String dateCreated = null;
        OffsetDateTime lastUpdated = null;
        String deployDate = null;
        String status = null;
        Object response = api.getInstanceDeploys(id, max, offset, phrase, name, deploymentId, instanceName, instanceId, version, versionId, createdById, deployType, dateCreated, lastUpdated, deployDate, status);

        // TODO: test validations
    }
    
    /**
     * Get all Deploys
     *
     * This endpoint retrieves all deploys.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listDeploysTest() throws ApiException {
        Long max = null;
        Long offset = null;
        String phrase = null;
        String name = null;
        Long deploymentId = null;
        String instanceName = null;
        Long instanceId = null;
        Long version = null;
        Long versionId = null;
        Long createdById = null;
        String deployType = null;
        String dateCreated = null;
        OffsetDateTime lastUpdated = null;
        String deployDate = null;
        String status = null;
        Object response = api.listDeploys(max, offset, phrase, name, deploymentId, instanceName, instanceId, version, versionId, createdById, deployType, dateCreated, lastUpdated, deployDate, status);

        // TODO: test validations
    }
    
    /**
     * Run a Deploy
     *
     * This endpoint will run an existing instance deploy. This is for running a new staged deploy or to rollback to previous version by re-running a deploy that is archived.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void runDeployTest() throws ApiException {
        Long id = null;
        InlineObject73 inlineObject73 = null;
        InlineResponse20040 response = api.runDeploy(id, inlineObject73);

        // TODO: test validations
    }
    
    /**
     * Update a Deploy
     *
     * This endpoint will update an existing deploy. This is typically only needed to change settings on a deploy that is staged, before it is run.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateDeployTest() throws ApiException {
        Long id = null;
        InlineObject72 inlineObject72 = null;
        InlineResponse20040 response = api.updateDeploy(id, inlineObject72);

        // TODO: test validations
    }
    
}
