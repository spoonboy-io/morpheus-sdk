/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultError;
import org.openapitools.client.model.InlineObject105;
import org.openapitools.client.model.InlineObject106;
import org.openapitools.client.model.InlineResponse20066;
import org.openapitools.client.model.InlineResponse20067;
import org.openapitools.client.model.Model200Success;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for KeyPairsApi
 */
@Ignore
public class KeyPairsApiTest {

    private final KeyPairsApi api = new KeyPairsApi();

    
    /**
     * Creates a Key Pair
     *
     * Creates a Key Pair.  Private keys are typically optional. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addKeyPairsTest() throws ApiException {
        InlineObject105 inlineObject105 = null;
        Object response = api.addKeyPairs(inlineObject105);

        // TODO: test validations
    }
    
    /**
     * Generates a Key Pair
     *
     * Generates a Key Pair. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void generateKeyPairsTest() throws ApiException {
        InlineObject106 inlineObject106 = null;
        InlineResponse20066 response = api.generateKeyPairs(inlineObject106);

        // TODO: test validations
    }
    
    /**
     * Retrieves a Specific Key Pair
     *
     * Retrieves a specific key pair. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getKeyPairsTest() throws ApiException {
        Long id = null;
        InlineResponse20067 response = api.getKeyPairs(id);

        // TODO: test validations
    }
    
    /**
     * Deletes a Key Pair
     *
     * Deletes a specified key pair. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeKeyPairsTest() throws ApiException {
        Long id = null;
        Model200Success response = api.removeKeyPairs(id);

        // TODO: test validations
    }
    
}
