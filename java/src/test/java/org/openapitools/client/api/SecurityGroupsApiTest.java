/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.DefaultError;
import org.openapitools.client.model.InlineObject213;
import org.openapitools.client.model.InlineObject214;
import org.openapitools.client.model.InlineObject215;
import org.openapitools.client.model.InlineObject216;
import org.openapitools.client.model.InlineObject217;
import org.openapitools.client.model.InlineResponse200133;
import org.openapitools.client.model.InlineResponse200134;
import org.openapitools.client.model.InlineResponse200135;
import org.openapitools.client.model.Model200Success;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SecurityGroupsApi
 */
@Ignore
public class SecurityGroupsApiTest {

    private final SecurityGroupsApi api = new SecurityGroupsApi();

    
    /**
     * Creates a Security Group Location
     *
     * Creates a security group location. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addSecurityGroupLocationsTest() throws ApiException {
        Long id = null;
        InlineObject215 inlineObject215 = null;
        Object response = api.addSecurityGroupLocations(id, inlineObject215);

        // TODO: test validations
    }
    
    /**
     * Creates a Security Group Rule
     *
     * Creates a security group rule on specified security group. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addSecurityGroupRulesTest() throws ApiException {
        Long id = null;
        InlineObject216 inlineObject216 = null;
        Object response = api.addSecurityGroupRules(id, inlineObject216);

        // TODO: test validations
    }
    
    /**
     * Creates a Security Group
     *
     * Creates a security group. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addSecurityGroupsTest() throws ApiException {
        InlineObject213 inlineObject213 = null;
        InlineResponse200133 response = api.addSecurityGroups(inlineObject213);

        // TODO: test validations
    }
    
    /**
     * Retrieves a Specific Security Group Rule
     *
     * Retrieves a specific security group rule. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSecurityGroupRulesTest() throws ApiException {
        Long id = null;
        BigDecimal sgId = null;
        InlineResponse200135 response = api.getSecurityGroupRules(id, sgId);

        // TODO: test validations
    }
    
    /**
     * Retrieves a Specific Security Group
     *
     * Retrieves a specific security group. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSecurityGroupsTest() throws ApiException {
        Long id = null;
        InlineResponse200134 response = api.getSecurityGroups(id);

        // TODO: test validations
    }
    
    /**
     * Retrieves all Security Group Rules
     *
     * Retrieves all security group rules for specified security group. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listSecurityGroupRulesTest() throws ApiException {
        Long id = null;
        Long max = null;
        Long offset = null;
        String sort = null;
        String direction = null;
        String phrase = null;
        String name = null;
        Object response = api.listSecurityGroupRules(id, max, offset, sort, direction, phrase, name);

        // TODO: test validations
    }
    
    /**
     * Retrieves all Security Groups
     *
     * This endpoint retrieves all security groups and their JSON encoded configuration attributes. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listSecurityGroupsTest() throws ApiException {
        Long max = null;
        Long offset = null;
        String sort = null;
        String direction = null;
        String phrase = null;
        String name = null;
        Object response = api.listSecurityGroups(max, offset, sort, direction, phrase, name);

        // TODO: test validations
    }
    
    /**
     * Deletes a Security Group Location
     *
     * Deletes a security group location. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeSecurityGroupLocationsTest() throws ApiException {
        Long id = null;
        BigDecimal locationId = null;
        Model200Success response = api.removeSecurityGroupLocations(id, locationId);

        // TODO: test validations
    }
    
    /**
     * Deletes a Security Group Rule
     *
     * Deletes a security group rule. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeSecurityGroupRulesTest() throws ApiException {
        Long id = null;
        BigDecimal sgId = null;
        Model200Success response = api.removeSecurityGroupRules(id, sgId);

        // TODO: test validations
    }
    
    /**
     * Deletes a Security Group
     *
     * Deletes a specified security group. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeSecurityGroupsTest() throws ApiException {
        Long id = null;
        Model200Success response = api.removeSecurityGroups(id);

        // TODO: test validations
    }
    
    /**
     * Updates a Security Group Rule
     *
     * Updates a security group rule. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSecurityGroupRulesTest() throws ApiException {
        Long id = null;
        BigDecimal sgId = null;
        InlineObject217 inlineObject217 = null;
        Object response = api.updateSecurityGroupRules(id, sgId, inlineObject217);

        // TODO: test validations
    }
    
    /**
     * Updating a Security Group
     *
     * Updating a Security Group 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSecurityGroupsTest() throws ApiException {
        Long id = null;
        InlineObject214 inlineObject214 = null;
        InlineResponse200133 response = api.updateSecurityGroups(id, inlineObject214);

        // TODO: test validations
    }
    
}
