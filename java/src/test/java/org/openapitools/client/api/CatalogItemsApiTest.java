/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultError;
import java.io.File;
import org.openapitools.client.model.InlineObject24;
import org.openapitools.client.model.InlineObject25;
import org.openapitools.client.model.InlineResponse20015;
import org.openapitools.client.model.Model200Success;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CatalogItemsApi
 */
@Ignore
public class CatalogItemsApiTest {

    private final CatalogItemsApi api = new CatalogItemsApi();

    
    /**
     * Create a Catalog Item Type
     *
     * Use this command to create a catalog item type.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCatalogItemTypeTest() throws ApiException {
        InlineObject24 inlineObject24 = null;
        Object response = api.addCatalogItemType(inlineObject24);

        // TODO: test validations
    }
    
    /**
     * Get a Specific Catalog Item Type
     *
     * This endpoint retrieves a specific category item type.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCatalogItemTypeTest() throws ApiException {
        Long id = null;
        InlineResponse20015 response = api.getCatalogItemType(id);

        // TODO: test validations
    }
    
    /**
     * Get All Catalog Item Types
     *
     * This endpoint retrieves all catalog item types.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listCatalogItemTypesTest() throws ApiException {
        Long max = null;
        Long offset = null;
        String sort = null;
        String direction = null;
        String phrase = null;
        String name = null;
        String description = null;
        Boolean enabled = null;
        Boolean featured = null;
        String labels = null;
        String allLabels = null;
        String code = null;
        Object response = api.listCatalogItemTypes(max, offset, sort, direction, phrase, name, description, enabled, featured, labels, allLabels, code);

        // TODO: test validations
    }
    
    /**
     * Delete a Catalog Item Type
     *
     * Will delete a catalog item type.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeCatalogItemTypeTest() throws ApiException {
        Long id = null;
        Model200Success response = api.removeCatalogItemType(id);

        // TODO: test validations
    }
    
    /**
     * Update a Catalog Item Type
     *
     * Use this command to update an existing catalog item type.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCatalogItemTypeTest() throws ApiException {
        Long id = null;
        InlineObject25 inlineObject25 = null;
        Object response = api.updateCatalogItemType(id, inlineObject25);

        // TODO: test validations
    }
    
    /**
     * Update Logo For Catalog Item Type
     *
     * Use this command to update the logo and dark logo images for an existing catalog item type. This endpoint expects multipart form data as the request format, not JSON.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCatalogItemTypeLogoTest() throws ApiException {
        Long id = null;
        File catalogItemTypeLogo = null;
        File catalogItemTypeDarkLogo = null;
        Object response = api.updateCatalogItemTypeLogo(id, catalogItemTypeLogo, catalogItemTypeDarkLogo);

        // TODO: test validations
    }
    
}
