/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultError;
import org.openapitools.client.model.InlineObject269;
import org.openapitools.client.model.InlineObject76;
import org.openapitools.client.model.InlineObject77;
import org.openapitools.client.model.InlineObject78;
import org.openapitools.client.model.InlineResponse200168;
import org.openapitools.client.model.InlineResponse20042;
import org.openapitools.client.model.InlineResponse20043;
import org.openapitools.client.model.Model200Success;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GroupsApi
 */
@Ignore
public class GroupsApiTest {

    private final GroupsApi api = new GroupsApi();

    
    /**
     * Creates a Group
     *
     * Creates a group. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addGroupsTest() throws ApiException {
        InlineObject76 inlineObject76 = null;
        Object response = api.addGroups(inlineObject76);

        // TODO: test validations
    }
    
    /**
     * Retrieves a Specific Group
     *
     * Retrieves a specific group. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGroupsTest() throws ApiException {
        Long id = null;
        InlineResponse20042 response = api.getGroups(id);

        // TODO: test validations
    }
    
    /**
     * Retrieves a Group Wiki Page
     *
     * This endpoint retrieves a group Wiki page. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWikiGroupTest() throws ApiException {
        Long id = null;
        InlineResponse200168 response = api.getWikiGroup(id);

        // TODO: test validations
    }
    
    /**
     * Retrieves all Groups
     *
     * Retrieves all groups. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listGroupsTest() throws ApiException {
        Long max = null;
        Long offset = null;
        String sort = null;
        String direction = null;
        String phrase = null;
        String name = null;
        Object response = api.listGroups(max, offset, sort, direction, phrase, name);

        // TODO: test validations
    }
    
    /**
     * Deletes a Group
     *
     * Deletes a specified Group. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeGroupsTest() throws ApiException {
        Long id = null;
        Model200Success response = api.removeGroups(id);

        // TODO: test validations
    }
    
    /**
     * Updates a Group
     *
     * Updates a group. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateGroupsTest() throws ApiException {
        Long id = null;
        InlineObject77 inlineObject77 = null;
        InlineResponse20043 response = api.updateGroups(id, inlineObject77);

        // TODO: test validations
    }
    
    /**
     * Updates a Group&#39;s Zones
     *
     * Updates a group&#39;s zones. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateGroupsZonesTest() throws ApiException {
        Long id = null;
        InlineObject78 inlineObject78 = null;
        Model200Success response = api.updateGroupsZones(id, inlineObject78);

        // TODO: test validations
    }
    
    /**
     * Update a Group Wiki Page
     *
     * Updates a group Wiki page. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateWikiGroupTest() throws ApiException {
        Long id = null;
        InlineObject269 inlineObject269 = null;
        Object response = api.updateWikiGroup(id, inlineObject269);

        // TODO: test validations
    }
    
}
