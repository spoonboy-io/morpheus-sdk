/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultError;
import org.openapitools.client.model.InlineObject2;
import org.openapitools.client.model.InlineResponse200;
import org.openapitools.client.model.Model200Success;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApplianceSettingsApi
 */
@Ignore
public class ApplianceSettingsApiTest {

    private final ApplianceSettingsApi api = new ApplianceSettingsApi();

    
    /**
     * Get Appliance Settings
     *
     * This endpoint retrieves appliance settings.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listApplianceSettingsTest() throws ApiException {
        InlineResponse200 response = api.listApplianceSettings();

        // TODO: test validations
    }
    
    /**
     * Reindex Search
     *
     * Reindex all searchable data
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void reindexTest() throws ApiException {
        Model200Success response = api.reindex();

        // TODO: test validations
    }
    
    /**
     * Toggle Maintenance Mode
     *
     * This endpoint allows toggling the appliance maintenance mode.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setApplianceSettingsMaintenanceModeTest() throws ApiException {
        Boolean enabled = null;
        Model200Success response = api.setApplianceSettingsMaintenanceMode(enabled);

        // TODO: test validations
    }
    
    /**
     * Update Appliance Settings
     *
     * Update Appliance Settings
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateApplianceSettingsTest() throws ApiException {
        InlineObject2 inlineObject2 = null;
        Model200Success response = api.updateApplianceSettings(inlineObject2);

        // TODO: test validations
    }
    
}
