/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultError;
import org.openapitools.client.model.InlineObject64;
import org.openapitools.client.model.InlineObject65;
import org.openapitools.client.model.InlineResponse20036;
import org.openapitools.client.model.InlineResponse20037;
import org.openapitools.client.model.Model200Success;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CredentialsApi
 */
@Ignore
public class CredentialsApiTest {

    private final CredentialsApi api = new CredentialsApi();

    
    /**
     * Creates a Credential
     *
     * Creates a credential. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCredentialsTest() throws ApiException {
        InlineObject64 inlineObject64 = null;
        Object response = api.addCredentials(inlineObject64);

        // TODO: test validations
    }
    
    /**
     * Get a Specific Credential Type
     *
     * This endpoint retrieves a specific credential type. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCredentialTypeTest() throws ApiException {
        Long id = null;
        InlineResponse20036 response = api.getCredentialType(id);

        // TODO: test validations
    }
    
    /**
     * Retrieves a Specific Credential
     *
     * Retrieves a specific credential. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCredentialsTest() throws ApiException {
        Long id = null;
        InlineResponse20037 response = api.getCredentials(id);

        // TODO: test validations
    }
    
    /**
     * Get All Credential Types
     *
     * Get All Credential Types. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listCredentialTypesTest() throws ApiException {
        Long max = null;
        Long offset = null;
        String sort = null;
        String direction = null;
        String phrase = null;
        String name = null;
        String code = null;
        Object response = api.listCredentialTypes(max, offset, sort, direction, phrase, name, code);

        // TODO: test validations
    }
    
    /**
     * Retrieves all Credentials
     *
     * Retrieves all credentials. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listCredentialsTest() throws ApiException {
        Long max = null;
        Long offset = null;
        String sort = null;
        String direction = null;
        String phrase = null;
        String name = null;
        String type = null;
        Object response = api.listCredentials(max, offset, sort, direction, phrase, name, type);

        // TODO: test validations
    }
    
    /**
     * Deletes a Credential
     *
     * Deletes a specified credential. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeCredentialsTest() throws ApiException {
        Long id = null;
        Model200Success response = api.removeCredentials(id);

        // TODO: test validations
    }
    
    /**
     * Updates a Credential
     *
     * Updates a credential. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCredentialsTest() throws ApiException {
        Long id = null;
        InlineObject65 inlineObject65 = null;
        Object response = api.updateCredentials(id, inlineObject65);

        // TODO: test validations
    }
    
}
