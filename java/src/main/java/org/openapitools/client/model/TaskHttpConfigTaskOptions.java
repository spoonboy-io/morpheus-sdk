/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TaskHttpConfigTaskOptions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class TaskHttpConfigTaskOptions {
  public static final String SERIALIZED_NAME_WEB_PASSWORD = "webPassword";
  @SerializedName(SERIALIZED_NAME_WEB_PASSWORD)
  private String webPassword;

  public static final String SERIALIZED_NAME_WEB_PASSWORD_HASH = "webPasswordHash";
  @SerializedName(SERIALIZED_NAME_WEB_PASSWORD_HASH)
  private String webPasswordHash;

  public static final String SERIALIZED_NAME_LOCAL_SCRIPT_GIT_ID = "localScriptGitId";
  @SerializedName(SERIALIZED_NAME_LOCAL_SCRIPT_GIT_ID)
  private String localScriptGitId;

  public static final String SERIALIZED_NAME_LOCAL_SCRIPT_GIT_REF = "localScriptGitRef";
  @SerializedName(SERIALIZED_NAME_LOCAL_SCRIPT_GIT_REF)
  private String localScriptGitRef;

  public static final String SERIALIZED_NAME_WEB_USER = "webUser";
  @SerializedName(SERIALIZED_NAME_WEB_USER)
  private String webUser;

  public static final String SERIALIZED_NAME_WEB_BODY = "webBody";
  @SerializedName(SERIALIZED_NAME_WEB_BODY)
  private String webBody;

  public static final String SERIALIZED_NAME_WEB_HEADERS = "webHeaders";
  @SerializedName(SERIALIZED_NAME_WEB_HEADERS)
  private String webHeaders;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_PASSWORD_HASH = "passwordHash";
  @SerializedName(SERIALIZED_NAME_PASSWORD_HASH)
  private String passwordHash;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_IGNORE_S_S_L = "ignoreSSL";
  @SerializedName(SERIALIZED_NAME_IGNORE_S_S_L)
  private String ignoreSSL;

  public static final String SERIALIZED_NAME_WEB_METHOD = "webMethod";
  @SerializedName(SERIALIZED_NAME_WEB_METHOD)
  private String webMethod;

  public static final String SERIALIZED_NAME_WEB_URL = "webUrl";
  @SerializedName(SERIALIZED_NAME_WEB_URL)
  private String webUrl;

  public static final String SERIALIZED_NAME_HOST = "host";
  @SerializedName(SERIALIZED_NAME_HOST)
  private String host;

  public static final String SERIALIZED_NAME_PORT = "port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private String port;

  public static final String SERIALIZED_NAME_SSH_KEY = "sshKey";
  @SerializedName(SERIALIZED_NAME_SSH_KEY)
  private String sshKey;


  public TaskHttpConfigTaskOptions webPassword(String webPassword) {
    
    this.webPassword = webPassword;
    return this;
  }

   /**
   * Get webPassword
   * @return webPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWebPassword() {
    return webPassword;
  }


  public void setWebPassword(String webPassword) {
    this.webPassword = webPassword;
  }


  public TaskHttpConfigTaskOptions webPasswordHash(String webPasswordHash) {
    
    this.webPasswordHash = webPasswordHash;
    return this;
  }

   /**
   * Get webPasswordHash
   * @return webPasswordHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWebPasswordHash() {
    return webPasswordHash;
  }


  public void setWebPasswordHash(String webPasswordHash) {
    this.webPasswordHash = webPasswordHash;
  }


  public TaskHttpConfigTaskOptions localScriptGitId(String localScriptGitId) {
    
    this.localScriptGitId = localScriptGitId;
    return this;
  }

   /**
   * Get localScriptGitId
   * @return localScriptGitId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocalScriptGitId() {
    return localScriptGitId;
  }


  public void setLocalScriptGitId(String localScriptGitId) {
    this.localScriptGitId = localScriptGitId;
  }


  public TaskHttpConfigTaskOptions localScriptGitRef(String localScriptGitRef) {
    
    this.localScriptGitRef = localScriptGitRef;
    return this;
  }

   /**
   * Get localScriptGitRef
   * @return localScriptGitRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocalScriptGitRef() {
    return localScriptGitRef;
  }


  public void setLocalScriptGitRef(String localScriptGitRef) {
    this.localScriptGitRef = localScriptGitRef;
  }


  public TaskHttpConfigTaskOptions webUser(String webUser) {
    
    this.webUser = webUser;
    return this;
  }

   /**
   * Get webUser
   * @return webUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWebUser() {
    return webUser;
  }


  public void setWebUser(String webUser) {
    this.webUser = webUser;
  }


  public TaskHttpConfigTaskOptions webBody(String webBody) {
    
    this.webBody = webBody;
    return this;
  }

   /**
   * Get webBody
   * @return webBody
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWebBody() {
    return webBody;
  }


  public void setWebBody(String webBody) {
    this.webBody = webBody;
  }


  public TaskHttpConfigTaskOptions webHeaders(String webHeaders) {
    
    this.webHeaders = webHeaders;
    return this;
  }

   /**
   * Get webHeaders
   * @return webHeaders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWebHeaders() {
    return webHeaders;
  }


  public void setWebHeaders(String webHeaders) {
    this.webHeaders = webHeaders;
  }


  public TaskHttpConfigTaskOptions password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }


  public TaskHttpConfigTaskOptions passwordHash(String passwordHash) {
    
    this.passwordHash = passwordHash;
    return this;
  }

   /**
   * Get passwordHash
   * @return passwordHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPasswordHash() {
    return passwordHash;
  }


  public void setPasswordHash(String passwordHash) {
    this.passwordHash = passwordHash;
  }


  public TaskHttpConfigTaskOptions username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsername() {
    return username;
  }


  public void setUsername(String username) {
    this.username = username;
  }


  public TaskHttpConfigTaskOptions ignoreSSL(String ignoreSSL) {
    
    this.ignoreSSL = ignoreSSL;
    return this;
  }

   /**
   * Get ignoreSSL
   * @return ignoreSSL
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIgnoreSSL() {
    return ignoreSSL;
  }


  public void setIgnoreSSL(String ignoreSSL) {
    this.ignoreSSL = ignoreSSL;
  }


  public TaskHttpConfigTaskOptions webMethod(String webMethod) {
    
    this.webMethod = webMethod;
    return this;
  }

   /**
   * Get webMethod
   * @return webMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWebMethod() {
    return webMethod;
  }


  public void setWebMethod(String webMethod) {
    this.webMethod = webMethod;
  }


  public TaskHttpConfigTaskOptions webUrl(String webUrl) {
    
    this.webUrl = webUrl;
    return this;
  }

   /**
   * Get webUrl
   * @return webUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWebUrl() {
    return webUrl;
  }


  public void setWebUrl(String webUrl) {
    this.webUrl = webUrl;
  }


  public TaskHttpConfigTaskOptions host(String host) {
    
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHost() {
    return host;
  }


  public void setHost(String host) {
    this.host = host;
  }


  public TaskHttpConfigTaskOptions port(String port) {
    
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPort() {
    return port;
  }


  public void setPort(String port) {
    this.port = port;
  }


  public TaskHttpConfigTaskOptions sshKey(String sshKey) {
    
    this.sshKey = sshKey;
    return this;
  }

   /**
   * Get sshKey
   * @return sshKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSshKey() {
    return sshKey;
  }


  public void setSshKey(String sshKey) {
    this.sshKey = sshKey;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskHttpConfigTaskOptions taskHttpConfigTaskOptions = (TaskHttpConfigTaskOptions) o;
    return Objects.equals(this.webPassword, taskHttpConfigTaskOptions.webPassword) &&
        Objects.equals(this.webPasswordHash, taskHttpConfigTaskOptions.webPasswordHash) &&
        Objects.equals(this.localScriptGitId, taskHttpConfigTaskOptions.localScriptGitId) &&
        Objects.equals(this.localScriptGitRef, taskHttpConfigTaskOptions.localScriptGitRef) &&
        Objects.equals(this.webUser, taskHttpConfigTaskOptions.webUser) &&
        Objects.equals(this.webBody, taskHttpConfigTaskOptions.webBody) &&
        Objects.equals(this.webHeaders, taskHttpConfigTaskOptions.webHeaders) &&
        Objects.equals(this.password, taskHttpConfigTaskOptions.password) &&
        Objects.equals(this.passwordHash, taskHttpConfigTaskOptions.passwordHash) &&
        Objects.equals(this.username, taskHttpConfigTaskOptions.username) &&
        Objects.equals(this.ignoreSSL, taskHttpConfigTaskOptions.ignoreSSL) &&
        Objects.equals(this.webMethod, taskHttpConfigTaskOptions.webMethod) &&
        Objects.equals(this.webUrl, taskHttpConfigTaskOptions.webUrl) &&
        Objects.equals(this.host, taskHttpConfigTaskOptions.host) &&
        Objects.equals(this.port, taskHttpConfigTaskOptions.port) &&
        Objects.equals(this.sshKey, taskHttpConfigTaskOptions.sshKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(webPassword, webPasswordHash, localScriptGitId, localScriptGitRef, webUser, webBody, webHeaders, password, passwordHash, username, ignoreSSL, webMethod, webUrl, host, port, sshKey);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskHttpConfigTaskOptions {\n");
    sb.append("    webPassword: ").append(toIndentedString(webPassword)).append("\n");
    sb.append("    webPasswordHash: ").append(toIndentedString(webPasswordHash)).append("\n");
    sb.append("    localScriptGitId: ").append(toIndentedString(localScriptGitId)).append("\n");
    sb.append("    localScriptGitRef: ").append(toIndentedString(localScriptGitRef)).append("\n");
    sb.append("    webUser: ").append(toIndentedString(webUser)).append("\n");
    sb.append("    webBody: ").append(toIndentedString(webBody)).append("\n");
    sb.append("    webHeaders: ").append(toIndentedString(webHeaders)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    passwordHash: ").append(toIndentedString(passwordHash)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    ignoreSSL: ").append(toIndentedString(ignoreSSL)).append("\n");
    sb.append("    webMethod: ").append(toIndentedString(webMethod)).append("\n");
    sb.append("    webUrl: ").append(toIndentedString(webUrl)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    sshKey: ").append(toIndentedString(sshKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

