/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ApiServersIdInstallAgentServerServerOs;
import org.openapitools.client.model.ApiServersIdMakeManagedServerAccount;
import org.openapitools.client.model.ApiServersIdMakeManagedServerConfig;
import org.openapitools.client.model.ApiServersIdMakeManagedServerPlan;
import org.openapitools.client.model.ApiServersIdMakeManagedServerTags;

/**
 * Object containing server configuration parameters
 */
@ApiModel(description = "Object containing server configuration parameters")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ApiServersIdMakeManagedServer {
  public static final String SERIALIZED_NAME_SSH_USERNAME = "sshUsername";
  @SerializedName(SERIALIZED_NAME_SSH_USERNAME)
  private String sshUsername;

  public static final String SERIALIZED_NAME_SSH_PASSWORD = "sshPassword";
  @SerializedName(SERIALIZED_NAME_SSH_PASSWORD)
  private String sshPassword;

  public static final String SERIALIZED_NAME_SERVER_OS = "serverOs";
  @SerializedName(SERIALIZED_NAME_SERVER_OS)
  private ApiServersIdInstallAgentServerServerOs serverOs;

  public static final String SERIALIZED_NAME_PLAN = "plan";
  @SerializedName(SERIALIZED_NAME_PLAN)
  private ApiServersIdMakeManagedServerPlan plan;

  public static final String SERIALIZED_NAME_ACCOUNT = "account";
  @SerializedName(SERIALIZED_NAME_ACCOUNT)
  private ApiServersIdMakeManagedServerAccount account;

  public static final String SERIALIZED_NAME_PROVISION_SITE_ID = "provisionSiteId";
  @SerializedName(SERIALIZED_NAME_PROVISION_SITE_ID)
  private Long provisionSiteId;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<ApiServersIdMakeManagedServerTags> tags = null;

  public static final String SERIALIZED_NAME_CONFIG = "config";
  @SerializedName(SERIALIZED_NAME_CONFIG)
  private ApiServersIdMakeManagedServerConfig config;


  public ApiServersIdMakeManagedServer sshUsername(String sshUsername) {
    
    this.sshUsername = sshUsername;
    return this;
  }

   /**
   * SSH username to use when provisioning
   * @return sshUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "SSH username to use when provisioning")

  public String getSshUsername() {
    return sshUsername;
  }


  public void setSshUsername(String sshUsername) {
    this.sshUsername = sshUsername;
  }


  public ApiServersIdMakeManagedServer sshPassword(String sshPassword) {
    
    this.sshPassword = sshPassword;
    return this;
  }

   /**
   * SSH password to use, if not specified the account public key can be used
   * @return sshPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "SSH password to use, if not specified the account public key can be used")

  public String getSshPassword() {
    return sshPassword;
  }


  public void setSshPassword(String sshPassword) {
    this.sshPassword = sshPassword;
  }


  public ApiServersIdMakeManagedServer serverOs(ApiServersIdInstallAgentServerServerOs serverOs) {
    
    this.serverOs = serverOs;
    return this;
  }

   /**
   * Get serverOs
   * @return serverOs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ApiServersIdInstallAgentServerServerOs getServerOs() {
    return serverOs;
  }


  public void setServerOs(ApiServersIdInstallAgentServerServerOs serverOs) {
    this.serverOs = serverOs;
  }


  public ApiServersIdMakeManagedServer plan(ApiServersIdMakeManagedServerPlan plan) {
    
    this.plan = plan;
    return this;
  }

   /**
   * Get plan
   * @return plan
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ApiServersIdMakeManagedServerPlan getPlan() {
    return plan;
  }


  public void setPlan(ApiServersIdMakeManagedServerPlan plan) {
    this.plan = plan;
  }


  public ApiServersIdMakeManagedServer account(ApiServersIdMakeManagedServerAccount account) {
    
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ApiServersIdMakeManagedServerAccount getAccount() {
    return account;
  }


  public void setAccount(ApiServersIdMakeManagedServerAccount account) {
    this.account = account;
  }


  public ApiServersIdMakeManagedServer provisionSiteId(Long provisionSiteId) {
    
    this.provisionSiteId = provisionSiteId;
    return this;
  }

   /**
   * Specific group to assign the server
   * @return provisionSiteId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specific group to assign the server")

  public Long getProvisionSiteId() {
    return provisionSiteId;
  }


  public void setProvisionSiteId(Long provisionSiteId) {
    this.provisionSiteId = provisionSiteId;
  }


  public ApiServersIdMakeManagedServer tags(List<ApiServersIdMakeManagedServerTags> tags) {
    
    this.tags = tags;
    return this;
  }

  public ApiServersIdMakeManagedServer addTagsItem(ApiServersIdMakeManagedServerTags tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<ApiServersIdMakeManagedServerTags>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Metadata tags, Array of objects having a name and value, this adds or updates the specified tags and removes any tags not specified.
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Metadata tags, Array of objects having a name and value, this adds or updates the specified tags and removes any tags not specified.")

  public List<ApiServersIdMakeManagedServerTags> getTags() {
    return tags;
  }


  public void setTags(List<ApiServersIdMakeManagedServerTags> tags) {
    this.tags = tags;
  }


  public ApiServersIdMakeManagedServer config(ApiServersIdMakeManagedServerConfig config) {
    
    this.config = config;
    return this;
  }

   /**
   * Get config
   * @return config
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ApiServersIdMakeManagedServerConfig getConfig() {
    return config;
  }


  public void setConfig(ApiServersIdMakeManagedServerConfig config) {
    this.config = config;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiServersIdMakeManagedServer apiServersIdMakeManagedServer = (ApiServersIdMakeManagedServer) o;
    return Objects.equals(this.sshUsername, apiServersIdMakeManagedServer.sshUsername) &&
        Objects.equals(this.sshPassword, apiServersIdMakeManagedServer.sshPassword) &&
        Objects.equals(this.serverOs, apiServersIdMakeManagedServer.serverOs) &&
        Objects.equals(this.plan, apiServersIdMakeManagedServer.plan) &&
        Objects.equals(this.account, apiServersIdMakeManagedServer.account) &&
        Objects.equals(this.provisionSiteId, apiServersIdMakeManagedServer.provisionSiteId) &&
        Objects.equals(this.tags, apiServersIdMakeManagedServer.tags) &&
        Objects.equals(this.config, apiServersIdMakeManagedServer.config);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sshUsername, sshPassword, serverOs, plan, account, provisionSiteId, tags, config);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiServersIdMakeManagedServer {\n");
    sb.append("    sshUsername: ").append(toIndentedString(sshUsername)).append("\n");
    sb.append("    sshPassword: ").append(toIndentedString(sshPassword)).append("\n");
    sb.append("    serverOs: ").append(toIndentedString(serverOs)).append("\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    provisionSiteId: ").append(toIndentedString(provisionSiteId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

