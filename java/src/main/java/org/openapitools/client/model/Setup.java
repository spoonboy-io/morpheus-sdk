/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Setup
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class Setup {
  public static final String SERIALIZED_NAME_SUCCESS = "success";
  @SerializedName(SERIALIZED_NAME_SUCCESS)
  private Boolean success;

  public static final String SERIALIZED_NAME_BUILD_VERSION = "buildVersion";
  @SerializedName(SERIALIZED_NAME_BUILD_VERSION)
  private String buildVersion;

  public static final String SERIALIZED_NAME_APPLIANCE_URL = "applianceUrl";
  @SerializedName(SERIALIZED_NAME_APPLIANCE_URL)
  private String applianceUrl;

  public static final String SERIALIZED_NAME_SETUP_NEEDED = "setupNeeded";
  @SerializedName(SERIALIZED_NAME_SETUP_NEEDED)
  private Boolean setupNeeded;


  public Setup success(Boolean success) {
    
    this.success = success;
    return this;
  }

   /**
   * Get success
   * @return success
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSuccess() {
    return success;
  }


  public void setSuccess(Boolean success) {
    this.success = success;
  }


  public Setup buildVersion(String buildVersion) {
    
    this.buildVersion = buildVersion;
    return this;
  }

   /**
   * Morpheus build version that the server is running.
   * @return buildVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Morpheus build version that the server is running.")

  public String getBuildVersion() {
    return buildVersion;
  }


  public void setBuildVersion(String buildVersion) {
    this.buildVersion = buildVersion;
  }


  public Setup applianceUrl(String applianceUrl) {
    
    this.applianceUrl = applianceUrl;
    return this;
  }

   /**
   * The Appliance Server URL as defined under Appliance Settings.
   * @return applianceUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Appliance Server URL as defined under Appliance Settings.")

  public String getApplianceUrl() {
    return applianceUrl;
  }


  public void setApplianceUrl(String applianceUrl) {
    this.applianceUrl = applianceUrl;
  }


  public Setup setupNeeded(Boolean setupNeeded) {
    
    this.setupNeeded = setupNeeded;
    return this;
  }

   /**
   * Flag to determine if the appliance has been setup, only true when appliance is a fresh install and has not been initialized.
   * @return setupNeeded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Flag to determine if the appliance has been setup, only true when appliance is a fresh install and has not been initialized.")

  public Boolean getSetupNeeded() {
    return setupNeeded;
  }


  public void setSetupNeeded(Boolean setupNeeded) {
    this.setupNeeded = setupNeeded;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Setup setup = (Setup) o;
    return Objects.equals(this.success, setup.success) &&
        Objects.equals(this.buildVersion, setup.buildVersion) &&
        Objects.equals(this.applianceUrl, setup.applianceUrl) &&
        Objects.equals(this.setupNeeded, setup.setupNeeded);
  }

  @Override
  public int hashCode() {
    return Objects.hash(success, buildVersion, applianceUrl, setupNeeded);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Setup {\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    buildVersion: ").append(toIndentedString(buildVersion)).append("\n");
    sb.append("    applianceUrl: ").append(toIndentedString(applianceUrl)).append("\n");
    sb.append("    setupNeeded: ").append(toIndentedString(setupNeeded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

