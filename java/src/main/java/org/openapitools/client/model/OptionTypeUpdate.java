/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.OptionTypeCreateOptionList;

/**
 * OptionTypeUpdate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class OptionTypeUpdate {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private List<String> labels = null;

  public static final String SERIALIZED_NAME_FIELD_NAME = "fieldName";
  @SerializedName(SERIALIZED_NAME_FIELD_NAME)
  private String fieldName;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type = "text";

  public static final String SERIALIZED_NAME_FIELD_LABEL = "fieldLabel";
  @SerializedName(SERIALIZED_NAME_FIELD_LABEL)
  private String fieldLabel;

  public static final String SERIALIZED_NAME_PLACEHOLDER = "placeholder";
  @SerializedName(SERIALIZED_NAME_PLACEHOLDER)
  private String placeholder;

  public static final String SERIALIZED_NAME_VERIFY_PATTERN = "verifyPattern";
  @SerializedName(SERIALIZED_NAME_VERIFY_PATTERN)
  private String verifyPattern;

  public static final String SERIALIZED_NAME_DEFAULT_VALUE = "defaultValue";
  @SerializedName(SERIALIZED_NAME_DEFAULT_VALUE)
  private String defaultValue;

  public static final String SERIALIZED_NAME_REQUIRED = "required";
  @SerializedName(SERIALIZED_NAME_REQUIRED)
  private Boolean required = false;

  public static final String SERIALIZED_NAME_EXPORT_META = "exportMeta";
  @SerializedName(SERIALIZED_NAME_EXPORT_META)
  private Boolean exportMeta = false;

  public static final String SERIALIZED_NAME_EDITABLE = "editable";
  @SerializedName(SERIALIZED_NAME_EDITABLE)
  private Boolean editable = false;

  public static final String SERIALIZED_NAME_OPTION_LIST = "optionList";
  @SerializedName(SERIALIZED_NAME_OPTION_LIST)
  private OptionTypeCreateOptionList optionList;


  public OptionTypeUpdate name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name of the option type for handy reference
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the option type for handy reference")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public OptionTypeUpdate description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Short description of the option type
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Short description of the option type")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public OptionTypeUpdate labels(List<String> labels) {
    
    this.labels = labels;
    return this;
  }

  public OptionTypeUpdate addLabelsItem(String labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<String>();
    }
    this.labels.add(labelsItem);
    return this;
  }

   /**
   * Array of label strings, can be used for filtering.
   * @return labels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array of label strings, can be used for filtering.")

  public List<String> getLabels() {
    return labels;
  }


  public void setLabels(List<String> labels) {
    this.labels = labels;
  }


  public OptionTypeUpdate fieldName(String fieldName) {
    
    this.fieldName = fieldName;
    return this;
  }

   /**
   * Field Name, the name for user input. This along with fieldContext determines the configuration property name.  The property key for when posting this option type to a JSON POST request
   * @return fieldName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Field Name, the name for user input. This along with fieldContext determines the configuration property name.  The property key for when posting this option type to a JSON POST request")

  public String getFieldName() {
    return fieldName;
  }


  public void setFieldName(String fieldName) {
    this.fieldName = fieldName;
  }


  public OptionTypeUpdate type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Type, the type of input. eg. text, checkbox, select, etc.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type, the type of input. eg. text, checkbox, select, etc.")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public OptionTypeUpdate fieldLabel(String fieldLabel) {
    
    this.fieldLabel = fieldLabel;
    return this;
  }

   /**
   * Field Label, the label for user input.
   * @return fieldLabel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Field Label, the label for user input.")

  public String getFieldLabel() {
    return fieldLabel;
  }


  public void setFieldLabel(String fieldLabel) {
    this.fieldLabel = fieldLabel;
  }


  public OptionTypeUpdate placeholder(String placeholder) {
    
    this.placeholder = placeholder;
    return this;
  }

   /**
   * Any placeholder text when nothing is yet entered
   * @return placeholder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Any placeholder text when nothing is yet entered")

  public String getPlaceholder() {
    return placeholder;
  }


  public void setPlaceholder(String placeholder) {
    this.placeholder = placeholder;
  }


  public OptionTypeUpdate verifyPattern(String verifyPattern) {
    
    this.verifyPattern = verifyPattern;
    return this;
  }

   /**
   * Verify Pattern, A regexp string that validates the input, use (?i) to make the matcher case insensitive
   * @return verifyPattern
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Verify Pattern, A regexp string that validates the input, use (?i) to make the matcher case insensitive")

  public String getVerifyPattern() {
    return verifyPattern;
  }


  public void setVerifyPattern(String verifyPattern) {
    this.verifyPattern = verifyPattern;
  }


  public OptionTypeUpdate defaultValue(String defaultValue) {
    
    this.defaultValue = defaultValue;
    return this;
  }

   /**
   * The default value if no user entry is specified. This value should be passed to the desired JSON Map if nothing else is entered
   * @return defaultValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The default value if no user entry is specified. This value should be passed to the desired JSON Map if nothing else is entered")

  public String getDefaultValue() {
    return defaultValue;
  }


  public void setDefaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
  }


  public OptionTypeUpdate required(Boolean required) {
    
    this.required = required;
    return this;
  }

   /**
   * Is this field entry required for the request
   * @return required
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Is this field entry required for the request")

  public Boolean getRequired() {
    return required;
  }


  public void setRequired(Boolean required) {
    this.required = required;
  }


  public OptionTypeUpdate exportMeta(Boolean exportMeta) {
    
    this.exportMeta = exportMeta;
    return this;
  }

   /**
   * Export as Tag
   * @return exportMeta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Export as Tag")

  public Boolean getExportMeta() {
    return exportMeta;
  }


  public void setExportMeta(Boolean exportMeta) {
    this.exportMeta = exportMeta;
  }


  public OptionTypeUpdate editable(Boolean editable) {
    
    this.editable = editable;
    return this;
  }

   /**
   * Used primarily on tasks and workflows. Basically wether or not the field can be overridden optionally when the object is run
   * @return editable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Used primarily on tasks and workflows. Basically wether or not the field can be overridden optionally when the object is run")

  public Boolean getEditable() {
    return editable;
  }


  public void setEditable(Boolean editable) {
    this.editable = editable;
  }


  public OptionTypeUpdate optionList(OptionTypeCreateOptionList optionList) {
    
    this.optionList = optionList;
    return this;
  }

   /**
   * Get optionList
   * @return optionList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OptionTypeCreateOptionList getOptionList() {
    return optionList;
  }


  public void setOptionList(OptionTypeCreateOptionList optionList) {
    this.optionList = optionList;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OptionTypeUpdate optionTypeUpdate = (OptionTypeUpdate) o;
    return Objects.equals(this.name, optionTypeUpdate.name) &&
        Objects.equals(this.description, optionTypeUpdate.description) &&
        Objects.equals(this.labels, optionTypeUpdate.labels) &&
        Objects.equals(this.fieldName, optionTypeUpdate.fieldName) &&
        Objects.equals(this.type, optionTypeUpdate.type) &&
        Objects.equals(this.fieldLabel, optionTypeUpdate.fieldLabel) &&
        Objects.equals(this.placeholder, optionTypeUpdate.placeholder) &&
        Objects.equals(this.verifyPattern, optionTypeUpdate.verifyPattern) &&
        Objects.equals(this.defaultValue, optionTypeUpdate.defaultValue) &&
        Objects.equals(this.required, optionTypeUpdate.required) &&
        Objects.equals(this.exportMeta, optionTypeUpdate.exportMeta) &&
        Objects.equals(this.editable, optionTypeUpdate.editable) &&
        Objects.equals(this.optionList, optionTypeUpdate.optionList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, labels, fieldName, type, fieldLabel, placeholder, verifyPattern, defaultValue, required, exportMeta, editable, optionList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OptionTypeUpdate {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    fieldLabel: ").append(toIndentedString(fieldLabel)).append("\n");
    sb.append("    placeholder: ").append(toIndentedString(placeholder)).append("\n");
    sb.append("    verifyPattern: ").append(toIndentedString(verifyPattern)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    exportMeta: ").append(toIndentedString(exportMeta)).append("\n");
    sb.append("    editable: ").append(toIndentedString(editable)).append("\n");
    sb.append("    optionList: ").append(toIndentedString(optionList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

