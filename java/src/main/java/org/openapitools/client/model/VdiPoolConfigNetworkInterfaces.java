/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.VdiPoolConfigNetwork;

/**
 * VdiPoolConfigNetworkInterfaces
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class VdiPoolConfigNetworkInterfaces {
  public static final String SERIALIZED_NAME_PRIMARY_INTERFACE = "primaryInterface";
  @SerializedName(SERIALIZED_NAME_PRIMARY_INTERFACE)
  private Boolean primaryInterface;

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  private VdiPoolConfigNetwork network;

  public static final String SERIALIZED_NAME_IP_MODE = "ipMode";
  @SerializedName(SERIALIZED_NAME_IP_MODE)
  private String ipMode;

  public static final String SERIALIZED_NAME_SHOW_NETWORK_POOL_LABEL = "showNetworkPoolLabel";
  @SerializedName(SERIALIZED_NAME_SHOW_NETWORK_POOL_LABEL)
  private Boolean showNetworkPoolLabel;

  public static final String SERIALIZED_NAME_SHOW_NETWORK_DHCP_LABEL = "showNetworkDhcpLabel";
  @SerializedName(SERIALIZED_NAME_SHOW_NETWORK_DHCP_LABEL)
  private Boolean showNetworkDhcpLabel;


  public VdiPoolConfigNetworkInterfaces primaryInterface(Boolean primaryInterface) {
    
    this.primaryInterface = primaryInterface;
    return this;
  }

   /**
   * Get primaryInterface
   * @return primaryInterface
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPrimaryInterface() {
    return primaryInterface;
  }


  public void setPrimaryInterface(Boolean primaryInterface) {
    this.primaryInterface = primaryInterface;
  }


  public VdiPoolConfigNetworkInterfaces network(VdiPoolConfigNetwork network) {
    
    this.network = network;
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public VdiPoolConfigNetwork getNetwork() {
    return network;
  }


  public void setNetwork(VdiPoolConfigNetwork network) {
    this.network = network;
  }


  public VdiPoolConfigNetworkInterfaces ipMode(String ipMode) {
    
    this.ipMode = ipMode;
    return this;
  }

   /**
   * Get ipMode
   * @return ipMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIpMode() {
    return ipMode;
  }


  public void setIpMode(String ipMode) {
    this.ipMode = ipMode;
  }


  public VdiPoolConfigNetworkInterfaces showNetworkPoolLabel(Boolean showNetworkPoolLabel) {
    
    this.showNetworkPoolLabel = showNetworkPoolLabel;
    return this;
  }

   /**
   * Get showNetworkPoolLabel
   * @return showNetworkPoolLabel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getShowNetworkPoolLabel() {
    return showNetworkPoolLabel;
  }


  public void setShowNetworkPoolLabel(Boolean showNetworkPoolLabel) {
    this.showNetworkPoolLabel = showNetworkPoolLabel;
  }


  public VdiPoolConfigNetworkInterfaces showNetworkDhcpLabel(Boolean showNetworkDhcpLabel) {
    
    this.showNetworkDhcpLabel = showNetworkDhcpLabel;
    return this;
  }

   /**
   * Get showNetworkDhcpLabel
   * @return showNetworkDhcpLabel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getShowNetworkDhcpLabel() {
    return showNetworkDhcpLabel;
  }


  public void setShowNetworkDhcpLabel(Boolean showNetworkDhcpLabel) {
    this.showNetworkDhcpLabel = showNetworkDhcpLabel;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VdiPoolConfigNetworkInterfaces vdiPoolConfigNetworkInterfaces = (VdiPoolConfigNetworkInterfaces) o;
    return Objects.equals(this.primaryInterface, vdiPoolConfigNetworkInterfaces.primaryInterface) &&
        Objects.equals(this.network, vdiPoolConfigNetworkInterfaces.network) &&
        Objects.equals(this.ipMode, vdiPoolConfigNetworkInterfaces.ipMode) &&
        Objects.equals(this.showNetworkPoolLabel, vdiPoolConfigNetworkInterfaces.showNetworkPoolLabel) &&
        Objects.equals(this.showNetworkDhcpLabel, vdiPoolConfigNetworkInterfaces.showNetworkDhcpLabel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(primaryInterface, network, ipMode, showNetworkPoolLabel, showNetworkDhcpLabel);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VdiPoolConfigNetworkInterfaces {\n");
    sb.append("    primaryInterface: ").append(toIndentedString(primaryInterface)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    ipMode: ").append(toIndentedString(ipMode)).append("\n");
    sb.append("    showNetworkPoolLabel: ").append(toIndentedString(showNetworkPoolLabel)).append("\n");
    sb.append("    showNetworkDhcpLabel: ").append(toIndentedString(showNetworkDhcpLabel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

