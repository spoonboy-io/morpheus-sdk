/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.ApiBlueprintsIdUpdatePermissionsResourcePermissionSites;
import org.openapitools.client.model.ArchiveBucketCreateStorageProvider;

/**
 * ArchiveBucketCreate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ArchiveBucketCreate {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_STORAGE_PROVIDER = "storageProvider";
  @SerializedName(SERIALIZED_NAME_STORAGE_PROVIDER)
  private ArchiveBucketCreateStorageProvider storageProvider;

  /**
   * Visibility - Set to public to allow all tenants
   */
  @JsonAdapter(VisibilityEnum.Adapter.class)
  public enum VisibilityEnum {
    PUBLIC("public"),
    
    PRIVATE("private");

    private String value;

    VisibilityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VisibilityEnum fromValue(String value) {
      for (VisibilityEnum b : VisibilityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<VisibilityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VisibilityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VisibilityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return VisibilityEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_VISIBILITY = "visibility";
  @SerializedName(SERIALIZED_NAME_VISIBILITY)
  private VisibilityEnum visibility = VisibilityEnum.PRIVATE;

  public static final String SERIALIZED_NAME_IS_PUBLIC = "isPublic";
  @SerializedName(SERIALIZED_NAME_IS_PUBLIC)
  private Boolean isPublic = false;

  public static final String SERIALIZED_NAME_ACCOUNTS = "accounts";
  @SerializedName(SERIALIZED_NAME_ACCOUNTS)
  private ApiBlueprintsIdUpdatePermissionsResourcePermissionSites accounts;


  public ArchiveBucketCreate name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * A name for the archive bucket. Must be globally unique.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A name for the archive bucket. Must be globally unique.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ArchiveBucketCreate description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A description for the archive bucket
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for the archive bucket")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ArchiveBucketCreate storageProvider(ArchiveBucketCreateStorageProvider storageProvider) {
    
    this.storageProvider = storageProvider;
    return this;
  }

   /**
   * Get storageProvider
   * @return storageProvider
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ArchiveBucketCreateStorageProvider getStorageProvider() {
    return storageProvider;
  }


  public void setStorageProvider(ArchiveBucketCreateStorageProvider storageProvider) {
    this.storageProvider = storageProvider;
  }


  public ArchiveBucketCreate visibility(VisibilityEnum visibility) {
    
    this.visibility = visibility;
    return this;
  }

   /**
   * Visibility - Set to public to allow all tenants
   * @return visibility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Visibility - Set to public to allow all tenants")

  public VisibilityEnum getVisibility() {
    return visibility;
  }


  public void setVisibility(VisibilityEnum visibility) {
    this.visibility = visibility;
  }


  public ArchiveBucketCreate isPublic(Boolean isPublic) {
    
    this.isPublic = isPublic;
    return this;
  }

   /**
   * Public URL - Set to true to allow anonymous access
   * @return isPublic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Public URL - Set to true to allow anonymous access")

  public Boolean getIsPublic() {
    return isPublic;
  }


  public void setIsPublic(Boolean isPublic) {
    this.isPublic = isPublic;
  }


  public ArchiveBucketCreate accounts(ApiBlueprintsIdUpdatePermissionsResourcePermissionSites accounts) {
    
    this.accounts = accounts;
    return this;
  }

   /**
   * Get accounts
   * @return accounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ApiBlueprintsIdUpdatePermissionsResourcePermissionSites getAccounts() {
    return accounts;
  }


  public void setAccounts(ApiBlueprintsIdUpdatePermissionsResourcePermissionSites accounts) {
    this.accounts = accounts;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ArchiveBucketCreate archiveBucketCreate = (ArchiveBucketCreate) o;
    return Objects.equals(this.name, archiveBucketCreate.name) &&
        Objects.equals(this.description, archiveBucketCreate.description) &&
        Objects.equals(this.storageProvider, archiveBucketCreate.storageProvider) &&
        Objects.equals(this.visibility, archiveBucketCreate.visibility) &&
        Objects.equals(this.isPublic, archiveBucketCreate.isPublic) &&
        Objects.equals(this.accounts, archiveBucketCreate.accounts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, storageProvider, visibility, isPublic, accounts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ArchiveBucketCreate {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    storageProvider: ").append(toIndentedString(storageProvider)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("    accounts: ").append(toIndentedString(accounts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

