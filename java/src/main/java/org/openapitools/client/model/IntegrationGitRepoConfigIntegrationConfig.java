/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * IntegrationGitRepoConfigIntegrationConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class IntegrationGitRepoConfigIntegrationConfig {
  /**
   * Default Branch
   */
  @JsonAdapter(DefaultBranchEnum.Adapter.class)
  public enum DefaultBranchEnum {
    MAIN("main"),
    
    MASTER("master");

    private String value;

    DefaultBranchEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DefaultBranchEnum fromValue(String value) {
      for (DefaultBranchEnum b : DefaultBranchEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DefaultBranchEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DefaultBranchEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DefaultBranchEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DefaultBranchEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_DEFAULT_BRANCH = "defaultBranch";
  @SerializedName(SERIALIZED_NAME_DEFAULT_BRANCH)
  private DefaultBranchEnum defaultBranch;

  public static final String SERIALIZED_NAME_CACHE_ENABLED = "cacheEnabled";
  @SerializedName(SERIALIZED_NAME_CACHE_ENABLED)
  private Boolean cacheEnabled;


  public IntegrationGitRepoConfigIntegrationConfig defaultBranch(DefaultBranchEnum defaultBranch) {
    
    this.defaultBranch = defaultBranch;
    return this;
  }

   /**
   * Default Branch
   * @return defaultBranch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Default Branch")

  public DefaultBranchEnum getDefaultBranch() {
    return defaultBranch;
  }


  public void setDefaultBranch(DefaultBranchEnum defaultBranch) {
    this.defaultBranch = defaultBranch;
  }


  public IntegrationGitRepoConfigIntegrationConfig cacheEnabled(Boolean cacheEnabled) {
    
    this.cacheEnabled = cacheEnabled;
    return this;
  }

   /**
   * Enable Git Repository Caching
   * @return cacheEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Enable Git Repository Caching")

  public Boolean getCacheEnabled() {
    return cacheEnabled;
  }


  public void setCacheEnabled(Boolean cacheEnabled) {
    this.cacheEnabled = cacheEnabled;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntegrationGitRepoConfigIntegrationConfig integrationGitRepoConfigIntegrationConfig = (IntegrationGitRepoConfigIntegrationConfig) o;
    return Objects.equals(this.defaultBranch, integrationGitRepoConfigIntegrationConfig.defaultBranch) &&
        Objects.equals(this.cacheEnabled, integrationGitRepoConfigIntegrationConfig.cacheEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultBranch, cacheEnabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntegrationGitRepoConfigIntegrationConfig {\n");
    sb.append("    defaultBranch: ").append(toIndentedString(defaultBranch)).append("\n");
    sb.append("    cacheEnabled: ").append(toIndentedString(cacheEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

