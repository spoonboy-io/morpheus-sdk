/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.RoleAppTemplatePermissions;
import org.openapitools.client.model.RoleFeaturePermissions;
import org.openapitools.client.model.RoleInstanceTypePermissions;
import org.openapitools.client.model.RoleRole;
import org.openapitools.client.model.RoleSites;

/**
 * Role
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class Role {
  public static final String SERIALIZED_NAME_ROLE = "role";
  @SerializedName(SERIALIZED_NAME_ROLE)
  private RoleRole role;

  public static final String SERIALIZED_NAME_FEATURE_PERMISSIONS = "featurePermissions";
  @SerializedName(SERIALIZED_NAME_FEATURE_PERMISSIONS)
  private List<RoleFeaturePermissions> featurePermissions = null;

  public static final String SERIALIZED_NAME_GLOBAL_SITE_ACCESS = "globalSiteAccess";
  @SerializedName(SERIALIZED_NAME_GLOBAL_SITE_ACCESS)
  private String globalSiteAccess;

  public static final String SERIALIZED_NAME_SITES = "sites";
  @SerializedName(SERIALIZED_NAME_SITES)
  private List<RoleSites> sites = null;

  public static final String SERIALIZED_NAME_GLOBAL_ZONE_ACCESS = "globalZoneAccess";
  @SerializedName(SERIALIZED_NAME_GLOBAL_ZONE_ACCESS)
  private String globalZoneAccess;

  public static final String SERIALIZED_NAME_ZONES = "zones";
  @SerializedName(SERIALIZED_NAME_ZONES)
  private List<RoleSites> zones = null;

  public static final String SERIALIZED_NAME_GLOBAL_INSTANCE_TYPE_ACCESS = "globalInstanceTypeAccess";
  @SerializedName(SERIALIZED_NAME_GLOBAL_INSTANCE_TYPE_ACCESS)
  private String globalInstanceTypeAccess;

  public static final String SERIALIZED_NAME_INSTANCE_TYPE_PERMISSIONS = "instanceTypePermissions";
  @SerializedName(SERIALIZED_NAME_INSTANCE_TYPE_PERMISSIONS)
  private List<RoleInstanceTypePermissions> instanceTypePermissions = null;

  public static final String SERIALIZED_NAME_GLOBAL_APP_TEMPLATE_ACCESS = "globalAppTemplateAccess";
  @SerializedName(SERIALIZED_NAME_GLOBAL_APP_TEMPLATE_ACCESS)
  private String globalAppTemplateAccess;

  public static final String SERIALIZED_NAME_APP_TEMPLATE_PERMISSIONS = "appTemplatePermissions";
  @SerializedName(SERIALIZED_NAME_APP_TEMPLATE_PERMISSIONS)
  private List<RoleAppTemplatePermissions> appTemplatePermissions = null;

  public static final String SERIALIZED_NAME_GLOBAL_CATALOG_ITEM_TYPE_ACCESS = "globalCatalogItemTypeAccess";
  @SerializedName(SERIALIZED_NAME_GLOBAL_CATALOG_ITEM_TYPE_ACCESS)
  private String globalCatalogItemTypeAccess;

  public static final String SERIALIZED_NAME_CATALOG_ITEM_TYPE_PERMISSIONS = "catalogItemTypePermissions";
  @SerializedName(SERIALIZED_NAME_CATALOG_ITEM_TYPE_PERMISSIONS)
  private List<RoleSites> catalogItemTypePermissions = null;

  public static final String SERIALIZED_NAME_GLOBAL_PERSONA_ACCESS = "globalPersonaAccess";
  @SerializedName(SERIALIZED_NAME_GLOBAL_PERSONA_ACCESS)
  private String globalPersonaAccess;

  public static final String SERIALIZED_NAME_PERSONA_PERMISSIONS = "personaPermissions";
  @SerializedName(SERIALIZED_NAME_PERSONA_PERMISSIONS)
  private List<RoleInstanceTypePermissions> personaPermissions = null;

  public static final String SERIALIZED_NAME_GLOBAL_VDI_POOL_ACCESS = "globalVdiPoolAccess";
  @SerializedName(SERIALIZED_NAME_GLOBAL_VDI_POOL_ACCESS)
  private String globalVdiPoolAccess;

  public static final String SERIALIZED_NAME_VDI_POOL_PERMISSIONS = "vdiPoolPermissions";
  @SerializedName(SERIALIZED_NAME_VDI_POOL_PERMISSIONS)
  private List<RoleSites> vdiPoolPermissions = null;

  public static final String SERIALIZED_NAME_GLOBAL_REPORT_TYPE_ACCESS = "globalReportTypeAccess";
  @SerializedName(SERIALIZED_NAME_GLOBAL_REPORT_TYPE_ACCESS)
  private String globalReportTypeAccess;

  public static final String SERIALIZED_NAME_REPORT_TYPE_PERMISSIONS = "reportTypePermissions";
  @SerializedName(SERIALIZED_NAME_REPORT_TYPE_PERMISSIONS)
  private List<RoleInstanceTypePermissions> reportTypePermissions = null;

  public static final String SERIALIZED_NAME_GLOBAL_TASK_ACCESS = "globalTaskAccess";
  @SerializedName(SERIALIZED_NAME_GLOBAL_TASK_ACCESS)
  private String globalTaskAccess;

  public static final String SERIALIZED_NAME_TASK_PERMISSIONS = "taskPermissions";
  @SerializedName(SERIALIZED_NAME_TASK_PERMISSIONS)
  private List<RoleAppTemplatePermissions> taskPermissions = null;

  public static final String SERIALIZED_NAME_GLOBAL_TASK_SET_ACCESS = "globalTaskSetAccess";
  @SerializedName(SERIALIZED_NAME_GLOBAL_TASK_SET_ACCESS)
  private String globalTaskSetAccess;

  public static final String SERIALIZED_NAME_TASK_SET_PERMISSIONS = "taskSetPermissions";
  @SerializedName(SERIALIZED_NAME_TASK_SET_PERMISSIONS)
  private List<RoleAppTemplatePermissions> taskSetPermissions = null;


  public Role role(RoleRole role) {
    
    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RoleRole getRole() {
    return role;
  }


  public void setRole(RoleRole role) {
    this.role = role;
  }


  public Role featurePermissions(List<RoleFeaturePermissions> featurePermissions) {
    
    this.featurePermissions = featurePermissions;
    return this;
  }

  public Role addFeaturePermissionsItem(RoleFeaturePermissions featurePermissionsItem) {
    if (this.featurePermissions == null) {
      this.featurePermissions = new ArrayList<RoleFeaturePermissions>();
    }
    this.featurePermissions.add(featurePermissionsItem);
    return this;
  }

   /**
   * Get featurePermissions
   * @return featurePermissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RoleFeaturePermissions> getFeaturePermissions() {
    return featurePermissions;
  }


  public void setFeaturePermissions(List<RoleFeaturePermissions> featurePermissions) {
    this.featurePermissions = featurePermissions;
  }


  public Role globalSiteAccess(String globalSiteAccess) {
    
    this.globalSiteAccess = globalSiteAccess;
    return this;
  }

   /**
   * Get globalSiteAccess
   * @return globalSiteAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGlobalSiteAccess() {
    return globalSiteAccess;
  }


  public void setGlobalSiteAccess(String globalSiteAccess) {
    this.globalSiteAccess = globalSiteAccess;
  }


  public Role sites(List<RoleSites> sites) {
    
    this.sites = sites;
    return this;
  }

  public Role addSitesItem(RoleSites sitesItem) {
    if (this.sites == null) {
      this.sites = new ArrayList<RoleSites>();
    }
    this.sites.add(sitesItem);
    return this;
  }

   /**
   * Get sites
   * @return sites
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RoleSites> getSites() {
    return sites;
  }


  public void setSites(List<RoleSites> sites) {
    this.sites = sites;
  }


  public Role globalZoneAccess(String globalZoneAccess) {
    
    this.globalZoneAccess = globalZoneAccess;
    return this;
  }

   /**
   * Get globalZoneAccess
   * @return globalZoneAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGlobalZoneAccess() {
    return globalZoneAccess;
  }


  public void setGlobalZoneAccess(String globalZoneAccess) {
    this.globalZoneAccess = globalZoneAccess;
  }


  public Role zones(List<RoleSites> zones) {
    
    this.zones = zones;
    return this;
  }

  public Role addZonesItem(RoleSites zonesItem) {
    if (this.zones == null) {
      this.zones = new ArrayList<RoleSites>();
    }
    this.zones.add(zonesItem);
    return this;
  }

   /**
   * Get zones
   * @return zones
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RoleSites> getZones() {
    return zones;
  }


  public void setZones(List<RoleSites> zones) {
    this.zones = zones;
  }


  public Role globalInstanceTypeAccess(String globalInstanceTypeAccess) {
    
    this.globalInstanceTypeAccess = globalInstanceTypeAccess;
    return this;
  }

   /**
   * Get globalInstanceTypeAccess
   * @return globalInstanceTypeAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGlobalInstanceTypeAccess() {
    return globalInstanceTypeAccess;
  }


  public void setGlobalInstanceTypeAccess(String globalInstanceTypeAccess) {
    this.globalInstanceTypeAccess = globalInstanceTypeAccess;
  }


  public Role instanceTypePermissions(List<RoleInstanceTypePermissions> instanceTypePermissions) {
    
    this.instanceTypePermissions = instanceTypePermissions;
    return this;
  }

  public Role addInstanceTypePermissionsItem(RoleInstanceTypePermissions instanceTypePermissionsItem) {
    if (this.instanceTypePermissions == null) {
      this.instanceTypePermissions = new ArrayList<RoleInstanceTypePermissions>();
    }
    this.instanceTypePermissions.add(instanceTypePermissionsItem);
    return this;
  }

   /**
   * Get instanceTypePermissions
   * @return instanceTypePermissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RoleInstanceTypePermissions> getInstanceTypePermissions() {
    return instanceTypePermissions;
  }


  public void setInstanceTypePermissions(List<RoleInstanceTypePermissions> instanceTypePermissions) {
    this.instanceTypePermissions = instanceTypePermissions;
  }


  public Role globalAppTemplateAccess(String globalAppTemplateAccess) {
    
    this.globalAppTemplateAccess = globalAppTemplateAccess;
    return this;
  }

   /**
   * Get globalAppTemplateAccess
   * @return globalAppTemplateAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGlobalAppTemplateAccess() {
    return globalAppTemplateAccess;
  }


  public void setGlobalAppTemplateAccess(String globalAppTemplateAccess) {
    this.globalAppTemplateAccess = globalAppTemplateAccess;
  }


  public Role appTemplatePermissions(List<RoleAppTemplatePermissions> appTemplatePermissions) {
    
    this.appTemplatePermissions = appTemplatePermissions;
    return this;
  }

  public Role addAppTemplatePermissionsItem(RoleAppTemplatePermissions appTemplatePermissionsItem) {
    if (this.appTemplatePermissions == null) {
      this.appTemplatePermissions = new ArrayList<RoleAppTemplatePermissions>();
    }
    this.appTemplatePermissions.add(appTemplatePermissionsItem);
    return this;
  }

   /**
   * Get appTemplatePermissions
   * @return appTemplatePermissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RoleAppTemplatePermissions> getAppTemplatePermissions() {
    return appTemplatePermissions;
  }


  public void setAppTemplatePermissions(List<RoleAppTemplatePermissions> appTemplatePermissions) {
    this.appTemplatePermissions = appTemplatePermissions;
  }


  public Role globalCatalogItemTypeAccess(String globalCatalogItemTypeAccess) {
    
    this.globalCatalogItemTypeAccess = globalCatalogItemTypeAccess;
    return this;
  }

   /**
   * Get globalCatalogItemTypeAccess
   * @return globalCatalogItemTypeAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGlobalCatalogItemTypeAccess() {
    return globalCatalogItemTypeAccess;
  }


  public void setGlobalCatalogItemTypeAccess(String globalCatalogItemTypeAccess) {
    this.globalCatalogItemTypeAccess = globalCatalogItemTypeAccess;
  }


  public Role catalogItemTypePermissions(List<RoleSites> catalogItemTypePermissions) {
    
    this.catalogItemTypePermissions = catalogItemTypePermissions;
    return this;
  }

  public Role addCatalogItemTypePermissionsItem(RoleSites catalogItemTypePermissionsItem) {
    if (this.catalogItemTypePermissions == null) {
      this.catalogItemTypePermissions = new ArrayList<RoleSites>();
    }
    this.catalogItemTypePermissions.add(catalogItemTypePermissionsItem);
    return this;
  }

   /**
   * Get catalogItemTypePermissions
   * @return catalogItemTypePermissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RoleSites> getCatalogItemTypePermissions() {
    return catalogItemTypePermissions;
  }


  public void setCatalogItemTypePermissions(List<RoleSites> catalogItemTypePermissions) {
    this.catalogItemTypePermissions = catalogItemTypePermissions;
  }


  public Role globalPersonaAccess(String globalPersonaAccess) {
    
    this.globalPersonaAccess = globalPersonaAccess;
    return this;
  }

   /**
   * Get globalPersonaAccess
   * @return globalPersonaAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGlobalPersonaAccess() {
    return globalPersonaAccess;
  }


  public void setGlobalPersonaAccess(String globalPersonaAccess) {
    this.globalPersonaAccess = globalPersonaAccess;
  }


  public Role personaPermissions(List<RoleInstanceTypePermissions> personaPermissions) {
    
    this.personaPermissions = personaPermissions;
    return this;
  }

  public Role addPersonaPermissionsItem(RoleInstanceTypePermissions personaPermissionsItem) {
    if (this.personaPermissions == null) {
      this.personaPermissions = new ArrayList<RoleInstanceTypePermissions>();
    }
    this.personaPermissions.add(personaPermissionsItem);
    return this;
  }

   /**
   * Get personaPermissions
   * @return personaPermissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RoleInstanceTypePermissions> getPersonaPermissions() {
    return personaPermissions;
  }


  public void setPersonaPermissions(List<RoleInstanceTypePermissions> personaPermissions) {
    this.personaPermissions = personaPermissions;
  }


  public Role globalVdiPoolAccess(String globalVdiPoolAccess) {
    
    this.globalVdiPoolAccess = globalVdiPoolAccess;
    return this;
  }

   /**
   * Get globalVdiPoolAccess
   * @return globalVdiPoolAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGlobalVdiPoolAccess() {
    return globalVdiPoolAccess;
  }


  public void setGlobalVdiPoolAccess(String globalVdiPoolAccess) {
    this.globalVdiPoolAccess = globalVdiPoolAccess;
  }


  public Role vdiPoolPermissions(List<RoleSites> vdiPoolPermissions) {
    
    this.vdiPoolPermissions = vdiPoolPermissions;
    return this;
  }

  public Role addVdiPoolPermissionsItem(RoleSites vdiPoolPermissionsItem) {
    if (this.vdiPoolPermissions == null) {
      this.vdiPoolPermissions = new ArrayList<RoleSites>();
    }
    this.vdiPoolPermissions.add(vdiPoolPermissionsItem);
    return this;
  }

   /**
   * Get vdiPoolPermissions
   * @return vdiPoolPermissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RoleSites> getVdiPoolPermissions() {
    return vdiPoolPermissions;
  }


  public void setVdiPoolPermissions(List<RoleSites> vdiPoolPermissions) {
    this.vdiPoolPermissions = vdiPoolPermissions;
  }


  public Role globalReportTypeAccess(String globalReportTypeAccess) {
    
    this.globalReportTypeAccess = globalReportTypeAccess;
    return this;
  }

   /**
   * Get globalReportTypeAccess
   * @return globalReportTypeAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGlobalReportTypeAccess() {
    return globalReportTypeAccess;
  }


  public void setGlobalReportTypeAccess(String globalReportTypeAccess) {
    this.globalReportTypeAccess = globalReportTypeAccess;
  }


  public Role reportTypePermissions(List<RoleInstanceTypePermissions> reportTypePermissions) {
    
    this.reportTypePermissions = reportTypePermissions;
    return this;
  }

  public Role addReportTypePermissionsItem(RoleInstanceTypePermissions reportTypePermissionsItem) {
    if (this.reportTypePermissions == null) {
      this.reportTypePermissions = new ArrayList<RoleInstanceTypePermissions>();
    }
    this.reportTypePermissions.add(reportTypePermissionsItem);
    return this;
  }

   /**
   * Get reportTypePermissions
   * @return reportTypePermissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RoleInstanceTypePermissions> getReportTypePermissions() {
    return reportTypePermissions;
  }


  public void setReportTypePermissions(List<RoleInstanceTypePermissions> reportTypePermissions) {
    this.reportTypePermissions = reportTypePermissions;
  }


  public Role globalTaskAccess(String globalTaskAccess) {
    
    this.globalTaskAccess = globalTaskAccess;
    return this;
  }

   /**
   * Get globalTaskAccess
   * @return globalTaskAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGlobalTaskAccess() {
    return globalTaskAccess;
  }


  public void setGlobalTaskAccess(String globalTaskAccess) {
    this.globalTaskAccess = globalTaskAccess;
  }


  public Role taskPermissions(List<RoleAppTemplatePermissions> taskPermissions) {
    
    this.taskPermissions = taskPermissions;
    return this;
  }

  public Role addTaskPermissionsItem(RoleAppTemplatePermissions taskPermissionsItem) {
    if (this.taskPermissions == null) {
      this.taskPermissions = new ArrayList<RoleAppTemplatePermissions>();
    }
    this.taskPermissions.add(taskPermissionsItem);
    return this;
  }

   /**
   * Get taskPermissions
   * @return taskPermissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RoleAppTemplatePermissions> getTaskPermissions() {
    return taskPermissions;
  }


  public void setTaskPermissions(List<RoleAppTemplatePermissions> taskPermissions) {
    this.taskPermissions = taskPermissions;
  }


  public Role globalTaskSetAccess(String globalTaskSetAccess) {
    
    this.globalTaskSetAccess = globalTaskSetAccess;
    return this;
  }

   /**
   * Get globalTaskSetAccess
   * @return globalTaskSetAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGlobalTaskSetAccess() {
    return globalTaskSetAccess;
  }


  public void setGlobalTaskSetAccess(String globalTaskSetAccess) {
    this.globalTaskSetAccess = globalTaskSetAccess;
  }


  public Role taskSetPermissions(List<RoleAppTemplatePermissions> taskSetPermissions) {
    
    this.taskSetPermissions = taskSetPermissions;
    return this;
  }

  public Role addTaskSetPermissionsItem(RoleAppTemplatePermissions taskSetPermissionsItem) {
    if (this.taskSetPermissions == null) {
      this.taskSetPermissions = new ArrayList<RoleAppTemplatePermissions>();
    }
    this.taskSetPermissions.add(taskSetPermissionsItem);
    return this;
  }

   /**
   * Get taskSetPermissions
   * @return taskSetPermissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RoleAppTemplatePermissions> getTaskSetPermissions() {
    return taskSetPermissions;
  }


  public void setTaskSetPermissions(List<RoleAppTemplatePermissions> taskSetPermissions) {
    this.taskSetPermissions = taskSetPermissions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Role role = (Role) o;
    return Objects.equals(this.role, role.role) &&
        Objects.equals(this.featurePermissions, role.featurePermissions) &&
        Objects.equals(this.globalSiteAccess, role.globalSiteAccess) &&
        Objects.equals(this.sites, role.sites) &&
        Objects.equals(this.globalZoneAccess, role.globalZoneAccess) &&
        Objects.equals(this.zones, role.zones) &&
        Objects.equals(this.globalInstanceTypeAccess, role.globalInstanceTypeAccess) &&
        Objects.equals(this.instanceTypePermissions, role.instanceTypePermissions) &&
        Objects.equals(this.globalAppTemplateAccess, role.globalAppTemplateAccess) &&
        Objects.equals(this.appTemplatePermissions, role.appTemplatePermissions) &&
        Objects.equals(this.globalCatalogItemTypeAccess, role.globalCatalogItemTypeAccess) &&
        Objects.equals(this.catalogItemTypePermissions, role.catalogItemTypePermissions) &&
        Objects.equals(this.globalPersonaAccess, role.globalPersonaAccess) &&
        Objects.equals(this.personaPermissions, role.personaPermissions) &&
        Objects.equals(this.globalVdiPoolAccess, role.globalVdiPoolAccess) &&
        Objects.equals(this.vdiPoolPermissions, role.vdiPoolPermissions) &&
        Objects.equals(this.globalReportTypeAccess, role.globalReportTypeAccess) &&
        Objects.equals(this.reportTypePermissions, role.reportTypePermissions) &&
        Objects.equals(this.globalTaskAccess, role.globalTaskAccess) &&
        Objects.equals(this.taskPermissions, role.taskPermissions) &&
        Objects.equals(this.globalTaskSetAccess, role.globalTaskSetAccess) &&
        Objects.equals(this.taskSetPermissions, role.taskSetPermissions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(role, featurePermissions, globalSiteAccess, sites, globalZoneAccess, zones, globalInstanceTypeAccess, instanceTypePermissions, globalAppTemplateAccess, appTemplatePermissions, globalCatalogItemTypeAccess, catalogItemTypePermissions, globalPersonaAccess, personaPermissions, globalVdiPoolAccess, vdiPoolPermissions, globalReportTypeAccess, reportTypePermissions, globalTaskAccess, taskPermissions, globalTaskSetAccess, taskSetPermissions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Role {\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    featurePermissions: ").append(toIndentedString(featurePermissions)).append("\n");
    sb.append("    globalSiteAccess: ").append(toIndentedString(globalSiteAccess)).append("\n");
    sb.append("    sites: ").append(toIndentedString(sites)).append("\n");
    sb.append("    globalZoneAccess: ").append(toIndentedString(globalZoneAccess)).append("\n");
    sb.append("    zones: ").append(toIndentedString(zones)).append("\n");
    sb.append("    globalInstanceTypeAccess: ").append(toIndentedString(globalInstanceTypeAccess)).append("\n");
    sb.append("    instanceTypePermissions: ").append(toIndentedString(instanceTypePermissions)).append("\n");
    sb.append("    globalAppTemplateAccess: ").append(toIndentedString(globalAppTemplateAccess)).append("\n");
    sb.append("    appTemplatePermissions: ").append(toIndentedString(appTemplatePermissions)).append("\n");
    sb.append("    globalCatalogItemTypeAccess: ").append(toIndentedString(globalCatalogItemTypeAccess)).append("\n");
    sb.append("    catalogItemTypePermissions: ").append(toIndentedString(catalogItemTypePermissions)).append("\n");
    sb.append("    globalPersonaAccess: ").append(toIndentedString(globalPersonaAccess)).append("\n");
    sb.append("    personaPermissions: ").append(toIndentedString(personaPermissions)).append("\n");
    sb.append("    globalVdiPoolAccess: ").append(toIndentedString(globalVdiPoolAccess)).append("\n");
    sb.append("    vdiPoolPermissions: ").append(toIndentedString(vdiPoolPermissions)).append("\n");
    sb.append("    globalReportTypeAccess: ").append(toIndentedString(globalReportTypeAccess)).append("\n");
    sb.append("    reportTypePermissions: ").append(toIndentedString(reportTypePermissions)).append("\n");
    sb.append("    globalTaskAccess: ").append(toIndentedString(globalTaskAccess)).append("\n");
    sb.append("    taskPermissions: ").append(toIndentedString(taskPermissions)).append("\n");
    sb.append("    globalTaskSetAccess: ").append(toIndentedString(globalTaskSetAccess)).append("\n");
    sb.append("    taskSetPermissions: ").append(toIndentedString(taskSetPermissions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

