/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.InlineResponse20079LoadBalancerMonitorLoadBalancerType;
import org.openapitools.client.model.VirtualImageLocationVirtualImage;

/**
 * VirtualImageLocation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class VirtualImageLocation {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_CLOUD = "cloud";
  @SerializedName(SERIALIZED_NAME_CLOUD)
  private InlineResponse20079LoadBalancerMonitorLoadBalancerType cloud;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_INTERNAL_ID = "internalId";
  @SerializedName(SERIALIZED_NAME_INTERNAL_ID)
  private String internalId;

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "externalId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  private String externalId;

  public static final String SERIALIZED_NAME_EXTERNAL_DISK_ID = "externalDiskId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_DISK_ID)
  private String externalDiskId;

  public static final String SERIALIZED_NAME_REMOTE_PATH = "remotePath";
  @SerializedName(SERIALIZED_NAME_REMOTE_PATH)
  private String remotePath;

  public static final String SERIALIZED_NAME_IMAGE_PATH = "imagePath";
  @SerializedName(SERIALIZED_NAME_IMAGE_PATH)
  private String imagePath;

  public static final String SERIALIZED_NAME_IMAGE_NAME = "imageName";
  @SerializedName(SERIALIZED_NAME_IMAGE_NAME)
  private String imageName;

  public static final String SERIALIZED_NAME_IMAGE_REGION = "imageRegion";
  @SerializedName(SERIALIZED_NAME_IMAGE_REGION)
  private String imageRegion;

  public static final String SERIALIZED_NAME_IMAGE_FOLDER = "imageFolder";
  @SerializedName(SERIALIZED_NAME_IMAGE_FOLDER)
  private String imageFolder;

  public static final String SERIALIZED_NAME_REF_TYPE = "refType";
  @SerializedName(SERIALIZED_NAME_REF_TYPE)
  private String refType;

  public static final String SERIALIZED_NAME_REF_ID = "refId";
  @SerializedName(SERIALIZED_NAME_REF_ID)
  private Long refId;

  public static final String SERIALIZED_NAME_NODE_REF_TYPE = "nodeRefType";
  @SerializedName(SERIALIZED_NAME_NODE_REF_TYPE)
  private String nodeRefType;

  public static final String SERIALIZED_NAME_NODE_REF_ID = "nodeRefId";
  @SerializedName(SERIALIZED_NAME_NODE_REF_ID)
  private String nodeRefId;

  public static final String SERIALIZED_NAME_SUB_REF_TYPE = "subRefType";
  @SerializedName(SERIALIZED_NAME_SUB_REF_TYPE)
  private String subRefType;

  public static final String SERIALIZED_NAME_SUB_REF_ID = "subRefId";
  @SerializedName(SERIALIZED_NAME_SUB_REF_ID)
  private String subRefId;

  public static final String SERIALIZED_NAME_IS_PUBLIC = "isPublic";
  @SerializedName(SERIALIZED_NAME_IS_PUBLIC)
  private Boolean isPublic;

  public static final String SERIALIZED_NAME_SYSTEM_IMAGE = "systemImage";
  @SerializedName(SERIALIZED_NAME_SYSTEM_IMAGE)
  private Boolean systemImage;

  public static final String SERIALIZED_NAME_DISK_INDEX = "diskIndex";
  @SerializedName(SERIALIZED_NAME_DISK_INDEX)
  private Long diskIndex;

  public static final String SERIALIZED_NAME_PRICE_PLAN = "pricePlan";
  @SerializedName(SERIALIZED_NAME_PRICE_PLAN)
  private String pricePlan;

  public static final String SERIALIZED_NAME_VOLUMES = "volumes";
  @SerializedName(SERIALIZED_NAME_VOLUMES)
  private List<Object> volumes = null;

  public static final String SERIALIZED_NAME_STORAGE_CONTROLLERS = "storageControllers";
  @SerializedName(SERIALIZED_NAME_STORAGE_CONTROLLERS)
  private List<Object> storageControllers = null;

  public static final String SERIALIZED_NAME_NETWORK_INTERFACES = "networkInterfaces";
  @SerializedName(SERIALIZED_NAME_NETWORK_INTERFACES)
  private List<Object> networkInterfaces = null;

  public static final String SERIALIZED_NAME_VIRTUAL_IMAGE = "virtualImage";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_IMAGE)
  private VirtualImageLocationVirtualImage virtualImage;


  public VirtualImageLocation id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public VirtualImageLocation cloud(InlineResponse20079LoadBalancerMonitorLoadBalancerType cloud) {
    
    this.cloud = cloud;
    return this;
  }

   /**
   * Get cloud
   * @return cloud
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InlineResponse20079LoadBalancerMonitorLoadBalancerType getCloud() {
    return cloud;
  }


  public void setCloud(InlineResponse20079LoadBalancerMonitorLoadBalancerType cloud) {
    this.cloud = cloud;
  }


  public VirtualImageLocation code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


  public VirtualImageLocation internalId(String internalId) {
    
    this.internalId = internalId;
    return this;
  }

   /**
   * Get internalId
   * @return internalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInternalId() {
    return internalId;
  }


  public void setInternalId(String internalId) {
    this.internalId = internalId;
  }


  public VirtualImageLocation externalId(String externalId) {
    
    this.externalId = externalId;
    return this;
  }

   /**
   * Get externalId
   * @return externalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExternalId() {
    return externalId;
  }


  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public VirtualImageLocation externalDiskId(String externalDiskId) {
    
    this.externalDiskId = externalDiskId;
    return this;
  }

   /**
   * Get externalDiskId
   * @return externalDiskId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExternalDiskId() {
    return externalDiskId;
  }


  public void setExternalDiskId(String externalDiskId) {
    this.externalDiskId = externalDiskId;
  }


  public VirtualImageLocation remotePath(String remotePath) {
    
    this.remotePath = remotePath;
    return this;
  }

   /**
   * Get remotePath
   * @return remotePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRemotePath() {
    return remotePath;
  }


  public void setRemotePath(String remotePath) {
    this.remotePath = remotePath;
  }


  public VirtualImageLocation imagePath(String imagePath) {
    
    this.imagePath = imagePath;
    return this;
  }

   /**
   * Get imagePath
   * @return imagePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImagePath() {
    return imagePath;
  }


  public void setImagePath(String imagePath) {
    this.imagePath = imagePath;
  }


  public VirtualImageLocation imageName(String imageName) {
    
    this.imageName = imageName;
    return this;
  }

   /**
   * Get imageName
   * @return imageName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImageName() {
    return imageName;
  }


  public void setImageName(String imageName) {
    this.imageName = imageName;
  }


  public VirtualImageLocation imageRegion(String imageRegion) {
    
    this.imageRegion = imageRegion;
    return this;
  }

   /**
   * Get imageRegion
   * @return imageRegion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImageRegion() {
    return imageRegion;
  }


  public void setImageRegion(String imageRegion) {
    this.imageRegion = imageRegion;
  }


  public VirtualImageLocation imageFolder(String imageFolder) {
    
    this.imageFolder = imageFolder;
    return this;
  }

   /**
   * Get imageFolder
   * @return imageFolder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImageFolder() {
    return imageFolder;
  }


  public void setImageFolder(String imageFolder) {
    this.imageFolder = imageFolder;
  }


  public VirtualImageLocation refType(String refType) {
    
    this.refType = refType;
    return this;
  }

   /**
   * Get refType
   * @return refType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRefType() {
    return refType;
  }


  public void setRefType(String refType) {
    this.refType = refType;
  }


  public VirtualImageLocation refId(Long refId) {
    
    this.refId = refId;
    return this;
  }

   /**
   * Get refId
   * @return refId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getRefId() {
    return refId;
  }


  public void setRefId(Long refId) {
    this.refId = refId;
  }


  public VirtualImageLocation nodeRefType(String nodeRefType) {
    
    this.nodeRefType = nodeRefType;
    return this;
  }

   /**
   * Get nodeRefType
   * @return nodeRefType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNodeRefType() {
    return nodeRefType;
  }


  public void setNodeRefType(String nodeRefType) {
    this.nodeRefType = nodeRefType;
  }


  public VirtualImageLocation nodeRefId(String nodeRefId) {
    
    this.nodeRefId = nodeRefId;
    return this;
  }

   /**
   * Get nodeRefId
   * @return nodeRefId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNodeRefId() {
    return nodeRefId;
  }


  public void setNodeRefId(String nodeRefId) {
    this.nodeRefId = nodeRefId;
  }


  public VirtualImageLocation subRefType(String subRefType) {
    
    this.subRefType = subRefType;
    return this;
  }

   /**
   * Get subRefType
   * @return subRefType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSubRefType() {
    return subRefType;
  }


  public void setSubRefType(String subRefType) {
    this.subRefType = subRefType;
  }


  public VirtualImageLocation subRefId(String subRefId) {
    
    this.subRefId = subRefId;
    return this;
  }

   /**
   * Get subRefId
   * @return subRefId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSubRefId() {
    return subRefId;
  }


  public void setSubRefId(String subRefId) {
    this.subRefId = subRefId;
  }


  public VirtualImageLocation isPublic(Boolean isPublic) {
    
    this.isPublic = isPublic;
    return this;
  }

   /**
   * Get isPublic
   * @return isPublic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsPublic() {
    return isPublic;
  }


  public void setIsPublic(Boolean isPublic) {
    this.isPublic = isPublic;
  }


  public VirtualImageLocation systemImage(Boolean systemImage) {
    
    this.systemImage = systemImage;
    return this;
  }

   /**
   * Get systemImage
   * @return systemImage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSystemImage() {
    return systemImage;
  }


  public void setSystemImage(Boolean systemImage) {
    this.systemImage = systemImage;
  }


  public VirtualImageLocation diskIndex(Long diskIndex) {
    
    this.diskIndex = diskIndex;
    return this;
  }

   /**
   * Get diskIndex
   * @return diskIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getDiskIndex() {
    return diskIndex;
  }


  public void setDiskIndex(Long diskIndex) {
    this.diskIndex = diskIndex;
  }


  public VirtualImageLocation pricePlan(String pricePlan) {
    
    this.pricePlan = pricePlan;
    return this;
  }

   /**
   * Get pricePlan
   * @return pricePlan
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPricePlan() {
    return pricePlan;
  }


  public void setPricePlan(String pricePlan) {
    this.pricePlan = pricePlan;
  }


  public VirtualImageLocation volumes(List<Object> volumes) {
    
    this.volumes = volumes;
    return this;
  }

  public VirtualImageLocation addVolumesItem(Object volumesItem) {
    if (this.volumes == null) {
      this.volumes = new ArrayList<Object>();
    }
    this.volumes.add(volumesItem);
    return this;
  }

   /**
   * Get volumes
   * @return volumes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getVolumes() {
    return volumes;
  }


  public void setVolumes(List<Object> volumes) {
    this.volumes = volumes;
  }


  public VirtualImageLocation storageControllers(List<Object> storageControllers) {
    
    this.storageControllers = storageControllers;
    return this;
  }

  public VirtualImageLocation addStorageControllersItem(Object storageControllersItem) {
    if (this.storageControllers == null) {
      this.storageControllers = new ArrayList<Object>();
    }
    this.storageControllers.add(storageControllersItem);
    return this;
  }

   /**
   * Get storageControllers
   * @return storageControllers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getStorageControllers() {
    return storageControllers;
  }


  public void setStorageControllers(List<Object> storageControllers) {
    this.storageControllers = storageControllers;
  }


  public VirtualImageLocation networkInterfaces(List<Object> networkInterfaces) {
    
    this.networkInterfaces = networkInterfaces;
    return this;
  }

  public VirtualImageLocation addNetworkInterfacesItem(Object networkInterfacesItem) {
    if (this.networkInterfaces == null) {
      this.networkInterfaces = new ArrayList<Object>();
    }
    this.networkInterfaces.add(networkInterfacesItem);
    return this;
  }

   /**
   * Get networkInterfaces
   * @return networkInterfaces
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getNetworkInterfaces() {
    return networkInterfaces;
  }


  public void setNetworkInterfaces(List<Object> networkInterfaces) {
    this.networkInterfaces = networkInterfaces;
  }


  public VirtualImageLocation virtualImage(VirtualImageLocationVirtualImage virtualImage) {
    
    this.virtualImage = virtualImage;
    return this;
  }

   /**
   * Get virtualImage
   * @return virtualImage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public VirtualImageLocationVirtualImage getVirtualImage() {
    return virtualImage;
  }


  public void setVirtualImage(VirtualImageLocationVirtualImage virtualImage) {
    this.virtualImage = virtualImage;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualImageLocation virtualImageLocation = (VirtualImageLocation) o;
    return Objects.equals(this.id, virtualImageLocation.id) &&
        Objects.equals(this.cloud, virtualImageLocation.cloud) &&
        Objects.equals(this.code, virtualImageLocation.code) &&
        Objects.equals(this.internalId, virtualImageLocation.internalId) &&
        Objects.equals(this.externalId, virtualImageLocation.externalId) &&
        Objects.equals(this.externalDiskId, virtualImageLocation.externalDiskId) &&
        Objects.equals(this.remotePath, virtualImageLocation.remotePath) &&
        Objects.equals(this.imagePath, virtualImageLocation.imagePath) &&
        Objects.equals(this.imageName, virtualImageLocation.imageName) &&
        Objects.equals(this.imageRegion, virtualImageLocation.imageRegion) &&
        Objects.equals(this.imageFolder, virtualImageLocation.imageFolder) &&
        Objects.equals(this.refType, virtualImageLocation.refType) &&
        Objects.equals(this.refId, virtualImageLocation.refId) &&
        Objects.equals(this.nodeRefType, virtualImageLocation.nodeRefType) &&
        Objects.equals(this.nodeRefId, virtualImageLocation.nodeRefId) &&
        Objects.equals(this.subRefType, virtualImageLocation.subRefType) &&
        Objects.equals(this.subRefId, virtualImageLocation.subRefId) &&
        Objects.equals(this.isPublic, virtualImageLocation.isPublic) &&
        Objects.equals(this.systemImage, virtualImageLocation.systemImage) &&
        Objects.equals(this.diskIndex, virtualImageLocation.diskIndex) &&
        Objects.equals(this.pricePlan, virtualImageLocation.pricePlan) &&
        Objects.equals(this.volumes, virtualImageLocation.volumes) &&
        Objects.equals(this.storageControllers, virtualImageLocation.storageControllers) &&
        Objects.equals(this.networkInterfaces, virtualImageLocation.networkInterfaces) &&
        Objects.equals(this.virtualImage, virtualImageLocation.virtualImage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, cloud, code, internalId, externalId, externalDiskId, remotePath, imagePath, imageName, imageRegion, imageFolder, refType, refId, nodeRefType, nodeRefId, subRefType, subRefId, isPublic, systemImage, diskIndex, pricePlan, volumes, storageControllers, networkInterfaces, virtualImage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualImageLocation {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    cloud: ").append(toIndentedString(cloud)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    internalId: ").append(toIndentedString(internalId)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    externalDiskId: ").append(toIndentedString(externalDiskId)).append("\n");
    sb.append("    remotePath: ").append(toIndentedString(remotePath)).append("\n");
    sb.append("    imagePath: ").append(toIndentedString(imagePath)).append("\n");
    sb.append("    imageName: ").append(toIndentedString(imageName)).append("\n");
    sb.append("    imageRegion: ").append(toIndentedString(imageRegion)).append("\n");
    sb.append("    imageFolder: ").append(toIndentedString(imageFolder)).append("\n");
    sb.append("    refType: ").append(toIndentedString(refType)).append("\n");
    sb.append("    refId: ").append(toIndentedString(refId)).append("\n");
    sb.append("    nodeRefType: ").append(toIndentedString(nodeRefType)).append("\n");
    sb.append("    nodeRefId: ").append(toIndentedString(nodeRefId)).append("\n");
    sb.append("    subRefType: ").append(toIndentedString(subRefType)).append("\n");
    sb.append("    subRefId: ").append(toIndentedString(subRefId)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("    systemImage: ").append(toIndentedString(systemImage)).append("\n");
    sb.append("    diskIndex: ").append(toIndentedString(diskIndex)).append("\n");
    sb.append("    pricePlan: ").append(toIndentedString(pricePlan)).append("\n");
    sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
    sb.append("    storageControllers: ").append(toIndentedString(storageControllers)).append("\n");
    sb.append("    networkInterfaces: ").append(toIndentedString(networkInterfaces)).append("\n");
    sb.append("    virtualImage: ").append(toIndentedString(virtualImage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

