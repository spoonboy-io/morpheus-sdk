/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * ApiBudgetsBudget
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ApiBudgetsBudget {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  /**
   * Gets or Sets scope
   */
  @JsonAdapter(ScopeEnum.Adapter.class)
  public enum ScopeEnum {
    ACCOUNT("account"),
    
    GROUP("group"),
    
    CLOUD("cloud"),
    
    USER("user");

    private String value;

    ScopeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ScopeEnum fromValue(String value) {
      for (ScopeEnum b : ScopeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ScopeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ScopeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ScopeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ScopeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SCOPE = "scope";
  @SerializedName(SERIALIZED_NAME_SCOPE)
  private ScopeEnum scope = ScopeEnum.ACCOUNT;

  public static final String SERIALIZED_NAME_PERIOD = "period";
  @SerializedName(SERIALIZED_NAME_PERIOD)
  private String period = "year";

  public static final String SERIALIZED_NAME_YEAR = "year";
  @SerializedName(SERIALIZED_NAME_YEAR)
  private Long year;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  /**
   * Gets or Sets interval
   */
  @JsonAdapter(IntervalEnum.Adapter.class)
  public enum IntervalEnum {
    YEAR("year"),
    
    QUARTER("quarter"),
    
    MONTH("month");

    private String value;

    IntervalEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IntervalEnum fromValue(String value) {
      for (IntervalEnum b : IntervalEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<IntervalEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IntervalEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IntervalEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return IntervalEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_INTERVAL = "interval";
  @SerializedName(SERIALIZED_NAME_INTERVAL)
  private IntervalEnum interval = IntervalEnum.YEAR;

  public static final String SERIALIZED_NAME_SCOPE_TENANT_ID = "scopeTenantId";
  @SerializedName(SERIALIZED_NAME_SCOPE_TENANT_ID)
  private Long scopeTenantId;

  public static final String SERIALIZED_NAME_SCOPE_GROUP_ID = "scopeGroupId";
  @SerializedName(SERIALIZED_NAME_SCOPE_GROUP_ID)
  private Long scopeGroupId;

  public static final String SERIALIZED_NAME_SCOPE_CLOUD_ID = "scopeCloudId";
  @SerializedName(SERIALIZED_NAME_SCOPE_CLOUD_ID)
  private Long scopeCloudId;

  public static final String SERIALIZED_NAME_SCOPE_USER_ID = "scopeUserId";
  @SerializedName(SERIALIZED_NAME_SCOPE_USER_ID)
  private Long scopeUserId;

  public static final String SERIALIZED_NAME_COSTS = "costs";
  @SerializedName(SERIALIZED_NAME_COSTS)
  private List<Long> costs = null;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled = true;


  public ApiBudgetsBudget name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ApiBudgetsBudget description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ApiBudgetsBudget scope(ScopeEnum scope) {
    
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ScopeEnum getScope() {
    return scope;
  }


  public void setScope(ScopeEnum scope) {
    this.scope = scope;
  }


  public ApiBudgetsBudget period(String period) {
    
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPeriod() {
    return period;
  }


  public void setPeriod(String period) {
    this.period = period;
  }


  public ApiBudgetsBudget year(Long year) {
    
    this.year = year;
    return this;
  }

   /**
   * Get year
   * @return year
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2020", value = "")

  public Long getYear() {
    return year;
  }


  public void setYear(Long year) {
    this.year = year;
  }


  public ApiBudgetsBudget startDate(OffsetDateTime startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getStartDate() {
    return startDate;
  }


  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public ApiBudgetsBudget endDate(OffsetDateTime endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEndDate() {
    return endDate;
  }


  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public ApiBudgetsBudget interval(IntervalEnum interval) {
    
    this.interval = interval;
    return this;
  }

   /**
   * Get interval
   * @return interval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IntervalEnum getInterval() {
    return interval;
  }


  public void setInterval(IntervalEnum interval) {
    this.interval = interval;
  }


  public ApiBudgetsBudget scopeTenantId(Long scopeTenantId) {
    
    this.scopeTenantId = scopeTenantId;
    return this;
  }

   /**
   * The Tenant ID to scope to, for use with &#x60;&#x60;scope&#x60;&#x60;&#x3D;tenant 
   * @return scopeTenantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Tenant ID to scope to, for use with ``scope``=tenant ")

  public Long getScopeTenantId() {
    return scopeTenantId;
  }


  public void setScopeTenantId(Long scopeTenantId) {
    this.scopeTenantId = scopeTenantId;
  }


  public ApiBudgetsBudget scopeGroupId(Long scopeGroupId) {
    
    this.scopeGroupId = scopeGroupId;
    return this;
  }

   /**
   * The Tenant ID to scope to, for use with &#x60;&#x60;scope&#x60;&#x60;&#x3D;group  
   * @return scopeGroupId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Tenant ID to scope to, for use with ``scope``=group  ")

  public Long getScopeGroupId() {
    return scopeGroupId;
  }


  public void setScopeGroupId(Long scopeGroupId) {
    this.scopeGroupId = scopeGroupId;
  }


  public ApiBudgetsBudget scopeCloudId(Long scopeCloudId) {
    
    this.scopeCloudId = scopeCloudId;
    return this;
  }

   /**
   * The Tenant ID to scope to, for use with &#x60;&#x60;scope&#x60;&#x60;&#x3D;cloud 
   * @return scopeCloudId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Tenant ID to scope to, for use with ``scope``=cloud ")

  public Long getScopeCloudId() {
    return scopeCloudId;
  }


  public void setScopeCloudId(Long scopeCloudId) {
    this.scopeCloudId = scopeCloudId;
  }


  public ApiBudgetsBudget scopeUserId(Long scopeUserId) {
    
    this.scopeUserId = scopeUserId;
    return this;
  }

   /**
   * The Tenant ID to scope to, for use with &#x60;&#x60;scope&#x60;&#x60;&#x3D;user 
   * @return scopeUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Tenant ID to scope to, for use with ``scope``=user ")

  public Long getScopeUserId() {
    return scopeUserId;
  }


  public void setScopeUserId(Long scopeUserId) {
    this.scopeUserId = scopeUserId;
  }


  public ApiBudgetsBudget costs(List<Long> costs) {
    
    this.costs = costs;
    return this;
  }

  public ApiBudgetsBudget addCostsItem(Long costsItem) {
    if (this.costs == null) {
      this.costs = new ArrayList<Long>();
    }
    this.costs.add(costsItem);
    return this;
  }

   /**
   * Get costs
   * @return costs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[100,100,110,120]", value = "")

  public List<Long> getCosts() {
    return costs;
  }


  public void setCosts(List<Long> costs) {
    this.costs = costs;
  }


  public ApiBudgetsBudget enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiBudgetsBudget apiBudgetsBudget = (ApiBudgetsBudget) o;
    return Objects.equals(this.name, apiBudgetsBudget.name) &&
        Objects.equals(this.description, apiBudgetsBudget.description) &&
        Objects.equals(this.scope, apiBudgetsBudget.scope) &&
        Objects.equals(this.period, apiBudgetsBudget.period) &&
        Objects.equals(this.year, apiBudgetsBudget.year) &&
        Objects.equals(this.startDate, apiBudgetsBudget.startDate) &&
        Objects.equals(this.endDate, apiBudgetsBudget.endDate) &&
        Objects.equals(this.interval, apiBudgetsBudget.interval) &&
        Objects.equals(this.scopeTenantId, apiBudgetsBudget.scopeTenantId) &&
        Objects.equals(this.scopeGroupId, apiBudgetsBudget.scopeGroupId) &&
        Objects.equals(this.scopeCloudId, apiBudgetsBudget.scopeCloudId) &&
        Objects.equals(this.scopeUserId, apiBudgetsBudget.scopeUserId) &&
        Objects.equals(this.costs, apiBudgetsBudget.costs) &&
        Objects.equals(this.enabled, apiBudgetsBudget.enabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, scope, period, year, startDate, endDate, interval, scopeTenantId, scopeGroupId, scopeCloudId, scopeUserId, costs, enabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiBudgetsBudget {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    scopeTenantId: ").append(toIndentedString(scopeTenantId)).append("\n");
    sb.append("    scopeGroupId: ").append(toIndentedString(scopeGroupId)).append("\n");
    sb.append("    scopeCloudId: ").append(toIndentedString(scopeCloudId)).append("\n");
    sb.append("    scopeUserId: ").append(toIndentedString(scopeUserId)).append("\n");
    sb.append("    costs: ").append(toIndentedString(costs)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

