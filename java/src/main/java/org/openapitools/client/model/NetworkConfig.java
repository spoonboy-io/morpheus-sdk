/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NetworkConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class NetworkConfig {
  public static final String SERIALIZED_NAME_VLAN_I_DS = "vlanIDs";
  @SerializedName(SERIALIZED_NAME_VLAN_I_DS)
  private String vlanIDs;

  public static final String SERIALIZED_NAME_CONNECTED_GATEWAY = "connectedGateway";
  @SerializedName(SERIALIZED_NAME_CONNECTED_GATEWAY)
  private String connectedGateway;

  public static final String SERIALIZED_NAME_SUBNET_IP_MANAGEMENT_TYPE = "subnetIpManagementType";
  @SerializedName(SERIALIZED_NAME_SUBNET_IP_MANAGEMENT_TYPE)
  private String subnetIpManagementType;

  public static final String SERIALIZED_NAME_SUBNET_IP_SERVER_ID = "subnetIpServerId";
  @SerializedName(SERIALIZED_NAME_SUBNET_IP_SERVER_ID)
  private String subnetIpServerId;

  public static final String SERIALIZED_NAME_DHCP_RANGE = "dhcpRange";
  @SerializedName(SERIALIZED_NAME_DHCP_RANGE)
  private String dhcpRange;

  public static final String SERIALIZED_NAME_SUBNET_DHCP_SERVER_ADDRESS = "subnetDhcpServerAddress";
  @SerializedName(SERIALIZED_NAME_SUBNET_DHCP_SERVER_ADDRESS)
  private String subnetDhcpServerAddress;

  public static final String SERIALIZED_NAME_SUBNET_DHCP_LEASE_TIME = "subnetDhcpLeaseTime";
  @SerializedName(SERIALIZED_NAME_SUBNET_DHCP_LEASE_TIME)
  private String subnetDhcpLeaseTime;


  public NetworkConfig vlanIDs(String vlanIDs) {
    
    this.vlanIDs = vlanIDs;
    return this;
  }

   /**
   * Get vlanIDs
   * @return vlanIDs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVlanIDs() {
    return vlanIDs;
  }


  public void setVlanIDs(String vlanIDs) {
    this.vlanIDs = vlanIDs;
  }


  public NetworkConfig connectedGateway(String connectedGateway) {
    
    this.connectedGateway = connectedGateway;
    return this;
  }

   /**
   * Get connectedGateway
   * @return connectedGateway
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getConnectedGateway() {
    return connectedGateway;
  }


  public void setConnectedGateway(String connectedGateway) {
    this.connectedGateway = connectedGateway;
  }


  public NetworkConfig subnetIpManagementType(String subnetIpManagementType) {
    
    this.subnetIpManagementType = subnetIpManagementType;
    return this;
  }

   /**
   * Get subnetIpManagementType
   * @return subnetIpManagementType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSubnetIpManagementType() {
    return subnetIpManagementType;
  }


  public void setSubnetIpManagementType(String subnetIpManagementType) {
    this.subnetIpManagementType = subnetIpManagementType;
  }


  public NetworkConfig subnetIpServerId(String subnetIpServerId) {
    
    this.subnetIpServerId = subnetIpServerId;
    return this;
  }

   /**
   * Get subnetIpServerId
   * @return subnetIpServerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSubnetIpServerId() {
    return subnetIpServerId;
  }


  public void setSubnetIpServerId(String subnetIpServerId) {
    this.subnetIpServerId = subnetIpServerId;
  }


  public NetworkConfig dhcpRange(String dhcpRange) {
    
    this.dhcpRange = dhcpRange;
    return this;
  }

   /**
   * Get dhcpRange
   * @return dhcpRange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDhcpRange() {
    return dhcpRange;
  }


  public void setDhcpRange(String dhcpRange) {
    this.dhcpRange = dhcpRange;
  }


  public NetworkConfig subnetDhcpServerAddress(String subnetDhcpServerAddress) {
    
    this.subnetDhcpServerAddress = subnetDhcpServerAddress;
    return this;
  }

   /**
   * Get subnetDhcpServerAddress
   * @return subnetDhcpServerAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSubnetDhcpServerAddress() {
    return subnetDhcpServerAddress;
  }


  public void setSubnetDhcpServerAddress(String subnetDhcpServerAddress) {
    this.subnetDhcpServerAddress = subnetDhcpServerAddress;
  }


  public NetworkConfig subnetDhcpLeaseTime(String subnetDhcpLeaseTime) {
    
    this.subnetDhcpLeaseTime = subnetDhcpLeaseTime;
    return this;
  }

   /**
   * Get subnetDhcpLeaseTime
   * @return subnetDhcpLeaseTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSubnetDhcpLeaseTime() {
    return subnetDhcpLeaseTime;
  }


  public void setSubnetDhcpLeaseTime(String subnetDhcpLeaseTime) {
    this.subnetDhcpLeaseTime = subnetDhcpLeaseTime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkConfig networkConfig = (NetworkConfig) o;
    return Objects.equals(this.vlanIDs, networkConfig.vlanIDs) &&
        Objects.equals(this.connectedGateway, networkConfig.connectedGateway) &&
        Objects.equals(this.subnetIpManagementType, networkConfig.subnetIpManagementType) &&
        Objects.equals(this.subnetIpServerId, networkConfig.subnetIpServerId) &&
        Objects.equals(this.dhcpRange, networkConfig.dhcpRange) &&
        Objects.equals(this.subnetDhcpServerAddress, networkConfig.subnetDhcpServerAddress) &&
        Objects.equals(this.subnetDhcpLeaseTime, networkConfig.subnetDhcpLeaseTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vlanIDs, connectedGateway, subnetIpManagementType, subnetIpServerId, dhcpRange, subnetDhcpServerAddress, subnetDhcpLeaseTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkConfig {\n");
    sb.append("    vlanIDs: ").append(toIndentedString(vlanIDs)).append("\n");
    sb.append("    connectedGateway: ").append(toIndentedString(connectedGateway)).append("\n");
    sb.append("    subnetIpManagementType: ").append(toIndentedString(subnetIpManagementType)).append("\n");
    sb.append("    subnetIpServerId: ").append(toIndentedString(subnetIpServerId)).append("\n");
    sb.append("    dhcpRange: ").append(toIndentedString(dhcpRange)).append("\n");
    sb.append("    subnetDhcpServerAddress: ").append(toIndentedString(subnetDhcpServerAddress)).append("\n");
    sb.append("    subnetDhcpLeaseTime: ").append(toIndentedString(subnetDhcpLeaseTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

