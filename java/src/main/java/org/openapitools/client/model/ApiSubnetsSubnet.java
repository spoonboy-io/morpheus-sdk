/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ApiBlueprintsIdUpdatePermissionsResourcePermissionSites;
import org.openapitools.client.model.ApiSubnetsSubnetType;

/**
 * ApiSubnetsSubnet
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ApiSubnetsSubnet {
  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private ApiSubnetsSubnetType type;

  public static final String SERIALIZED_NAME_CONFIG = "config";
  @SerializedName(SERIALIZED_NAME_CONFIG)
  private Object config;

  public static final String SERIALIZED_NAME_TENANTS = "tenants";
  @SerializedName(SERIALIZED_NAME_TENANTS)
  private List<ApiBlueprintsIdUpdatePermissionsResourcePermissionSites> tenants = null;

  public static final String SERIALIZED_NAME_VISIBILITY = "visibility";
  @SerializedName(SERIALIZED_NAME_VISIBILITY)
  private String visibility = "private";

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private List<String> labels = null;


  public ApiSubnetsSubnet type(ApiSubnetsSubnetType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ApiSubnetsSubnetType getType() {
    return type;
  }


  public void setType(ApiSubnetsSubnetType type) {
    this.type = type;
  }


  public ApiSubnetsSubnet config(Object config) {
    
    this.config = config;
    return this;
  }

   /**
   * Configuration object. Settings vary by type.
   * @return config
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Configuration object. Settings vary by type.")

  public Object getConfig() {
    return config;
  }


  public void setConfig(Object config) {
    this.config = config;
  }


  public ApiSubnetsSubnet tenants(List<ApiBlueprintsIdUpdatePermissionsResourcePermissionSites> tenants) {
    
    this.tenants = tenants;
    return this;
  }

  public ApiSubnetsSubnet addTenantsItem(ApiBlueprintsIdUpdatePermissionsResourcePermissionSites tenantsItem) {
    if (this.tenants == null) {
      this.tenants = new ArrayList<ApiBlueprintsIdUpdatePermissionsResourcePermissionSites>();
    }
    this.tenants.add(tenantsItem);
    return this;
  }

   /**
   * Array of tenant account ID objects that are allowed access
   * @return tenants
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array of tenant account ID objects that are allowed access")

  public List<ApiBlueprintsIdUpdatePermissionsResourcePermissionSites> getTenants() {
    return tenants;
  }


  public void setTenants(List<ApiBlueprintsIdUpdatePermissionsResourcePermissionSites> tenants) {
    this.tenants = tenants;
  }


  public ApiSubnetsSubnet visibility(String visibility) {
    
    this.visibility = visibility;
    return this;
  }

   /**
   * private or public
   * @return visibility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "private or public")

  public String getVisibility() {
    return visibility;
  }


  public void setVisibility(String visibility) {
    this.visibility = visibility;
  }


  public ApiSubnetsSubnet labels(List<String> labels) {
    
    this.labels = labels;
    return this;
  }

  public ApiSubnetsSubnet addLabelsItem(String labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<String>();
    }
    this.labels.add(labelsItem);
    return this;
  }

   /**
   * Array of label strings, can be used for filtering.
   * @return labels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array of label strings, can be used for filtering.")

  public List<String> getLabels() {
    return labels;
  }


  public void setLabels(List<String> labels) {
    this.labels = labels;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiSubnetsSubnet apiSubnetsSubnet = (ApiSubnetsSubnet) o;
    return Objects.equals(this.type, apiSubnetsSubnet.type) &&
        Objects.equals(this.config, apiSubnetsSubnet.config) &&
        Objects.equals(this.tenants, apiSubnetsSubnet.tenants) &&
        Objects.equals(this.visibility, apiSubnetsSubnet.visibility) &&
        Objects.equals(this.labels, apiSubnetsSubnet.labels);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, config, tenants, visibility, labels);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiSubnetsSubnet {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    tenants: ").append(toIndentedString(tenants)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

