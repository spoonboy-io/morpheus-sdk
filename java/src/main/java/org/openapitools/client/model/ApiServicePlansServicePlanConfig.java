/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.ApiServicePlansServicePlanConfigRanges;

/**
 * ApiServicePlansServicePlanConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ApiServicePlansServicePlanConfig {
  /**
   * Specifies range min / max storage multiplier
   */
  @JsonAdapter(StorageSizeTypeEnum.Adapter.class)
  public enum StorageSizeTypeEnum {
    GB("gb"),
    
    MB("mb");

    private String value;

    StorageSizeTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StorageSizeTypeEnum fromValue(String value) {
      for (StorageSizeTypeEnum b : StorageSizeTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StorageSizeTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StorageSizeTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StorageSizeTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StorageSizeTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STORAGE_SIZE_TYPE = "storageSizeType";
  @SerializedName(SERIALIZED_NAME_STORAGE_SIZE_TYPE)
  private StorageSizeTypeEnum storageSizeType = StorageSizeTypeEnum.GB;

  /**
   * Specifies range min / max memory multiplier
   */
  @JsonAdapter(MemorySizeTypeEnum.Adapter.class)
  public enum MemorySizeTypeEnum {
    GB("gb"),
    
    MB("mb");

    private String value;

    MemorySizeTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MemorySizeTypeEnum fromValue(String value) {
      for (MemorySizeTypeEnum b : MemorySizeTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MemorySizeTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MemorySizeTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MemorySizeTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MemorySizeTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_MEMORY_SIZE_TYPE = "memorySizeType";
  @SerializedName(SERIALIZED_NAME_MEMORY_SIZE_TYPE)
  private MemorySizeTypeEnum memorySizeType = MemorySizeTypeEnum.MB;

  public static final String SERIALIZED_NAME_RANGES = "ranges";
  @SerializedName(SERIALIZED_NAME_RANGES)
  private ApiServicePlansServicePlanConfigRanges ranges;


  public ApiServicePlansServicePlanConfig storageSizeType(StorageSizeTypeEnum storageSizeType) {
    
    this.storageSizeType = storageSizeType;
    return this;
  }

   /**
   * Specifies range min / max storage multiplier
   * @return storageSizeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies range min / max storage multiplier")

  public StorageSizeTypeEnum getStorageSizeType() {
    return storageSizeType;
  }


  public void setStorageSizeType(StorageSizeTypeEnum storageSizeType) {
    this.storageSizeType = storageSizeType;
  }


  public ApiServicePlansServicePlanConfig memorySizeType(MemorySizeTypeEnum memorySizeType) {
    
    this.memorySizeType = memorySizeType;
    return this;
  }

   /**
   * Specifies range min / max memory multiplier
   * @return memorySizeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies range min / max memory multiplier")

  public MemorySizeTypeEnum getMemorySizeType() {
    return memorySizeType;
  }


  public void setMemorySizeType(MemorySizeTypeEnum memorySizeType) {
    this.memorySizeType = memorySizeType;
  }


  public ApiServicePlansServicePlanConfig ranges(ApiServicePlansServicePlanConfigRanges ranges) {
    
    this.ranges = ranges;
    return this;
  }

   /**
   * Get ranges
   * @return ranges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ApiServicePlansServicePlanConfigRanges getRanges() {
    return ranges;
  }


  public void setRanges(ApiServicePlansServicePlanConfigRanges ranges) {
    this.ranges = ranges;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiServicePlansServicePlanConfig apiServicePlansServicePlanConfig = (ApiServicePlansServicePlanConfig) o;
    return Objects.equals(this.storageSizeType, apiServicePlansServicePlanConfig.storageSizeType) &&
        Objects.equals(this.memorySizeType, apiServicePlansServicePlanConfig.memorySizeType) &&
        Objects.equals(this.ranges, apiServicePlansServicePlanConfig.ranges);
  }

  @Override
  public int hashCode() {
    return Objects.hash(storageSizeType, memorySizeType, ranges);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiServicePlansServicePlanConfig {\n");
    sb.append("    storageSizeType: ").append(toIndentedString(storageSizeType)).append("\n");
    sb.append("    memorySizeType: ").append(toIndentedString(memorySizeType)).append("\n");
    sb.append("    ranges: ").append(toIndentedString(ranges)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

