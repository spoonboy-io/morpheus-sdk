/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * IdentitySourcesSAMLConfigProviderSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class IdentitySourcesSAMLConfigProviderSettings {
  public static final String SERIALIZED_NAME_ENTITY_ID = "entityId";
  @SerializedName(SERIALIZED_NAME_ENTITY_ID)
  private String entityId;

  public static final String SERIALIZED_NAME_ACS_URL = "acsUrl";
  @SerializedName(SERIALIZED_NAME_ACS_URL)
  private String acsUrl;

  public static final String SERIALIZED_NAME_SP_METADATA = "spMetadata";
  @SerializedName(SERIALIZED_NAME_SP_METADATA)
  private String spMetadata;


  public IdentitySourcesSAMLConfigProviderSettings entityId(String entityId) {
    
    this.entityId = entityId;
    return this;
  }

   /**
   * Get entityId
   * @return entityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEntityId() {
    return entityId;
  }


  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }


  public IdentitySourcesSAMLConfigProviderSettings acsUrl(String acsUrl) {
    
    this.acsUrl = acsUrl;
    return this;
  }

   /**
   * Get acsUrl
   * @return acsUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAcsUrl() {
    return acsUrl;
  }


  public void setAcsUrl(String acsUrl) {
    this.acsUrl = acsUrl;
  }


  public IdentitySourcesSAMLConfigProviderSettings spMetadata(String spMetadata) {
    
    this.spMetadata = spMetadata;
    return this;
  }

   /**
   * Get spMetadata
   * @return spMetadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSpMetadata() {
    return spMetadata;
  }


  public void setSpMetadata(String spMetadata) {
    this.spMetadata = spMetadata;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdentitySourcesSAMLConfigProviderSettings identitySourcesSAMLConfigProviderSettings = (IdentitySourcesSAMLConfigProviderSettings) o;
    return Objects.equals(this.entityId, identitySourcesSAMLConfigProviderSettings.entityId) &&
        Objects.equals(this.acsUrl, identitySourcesSAMLConfigProviderSettings.acsUrl) &&
        Objects.equals(this.spMetadata, identitySourcesSAMLConfigProviderSettings.spMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityId, acsUrl, spMetadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdentitySourcesSAMLConfigProviderSettings {\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    acsUrl: ").append(toIndentedString(acsUrl)).append("\n");
    sb.append("    spMetadata: ").append(toIndentedString(spMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

