/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ClusterLayoutCreateEnvironmentVariables;
import org.openapitools.client.model.ContainerTypeCreateContainerPorts;

/**
 * ContainerTypeUpdate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ContainerTypeUpdate {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private List<String> labels = null;

  public static final String SERIALIZED_NAME_SHORT_NAME = "shortName";
  @SerializedName(SERIALIZED_NAME_SHORT_NAME)
  private String shortName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_CONTAINER_VERSION = "containerVersion";
  @SerializedName(SERIALIZED_NAME_CONTAINER_VERSION)
  private String containerVersion;

  public static final String SERIALIZED_NAME_PROVISION_TYPE_CODE = "provisionTypeCode";
  @SerializedName(SERIALIZED_NAME_PROVISION_TYPE_CODE)
  private String provisionTypeCode;

  public static final String SERIALIZED_NAME_SCRIPTS = "scripts";
  @SerializedName(SERIALIZED_NAME_SCRIPTS)
  private List<Long> scripts = null;

  public static final String SERIALIZED_NAME_TEMPLATES = "templates";
  @SerializedName(SERIALIZED_NAME_TEMPLATES)
  private List<Long> templates = null;

  public static final String SERIALIZED_NAME_VIRTUAL_IMAGE_ID = "virtualImageId";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_IMAGE_ID)
  private Long virtualImageId;

  public static final String SERIALIZED_NAME_STAT_TYPE_CODE = "statTypeCode";
  @SerializedName(SERIALIZED_NAME_STAT_TYPE_CODE)
  private String statTypeCode;

  public static final String SERIALIZED_NAME_LOG_TYPE_CODE = "logTypeCode";
  @SerializedName(SERIALIZED_NAME_LOG_TYPE_CODE)
  private String logTypeCode;

  public static final String SERIALIZED_NAME_SERVER_TYPE = "serverType";
  @SerializedName(SERIALIZED_NAME_SERVER_TYPE)
  private String serverType;

  public static final String SERIALIZED_NAME_CONTAINER_PORTS = "containerPorts";
  @SerializedName(SERIALIZED_NAME_CONTAINER_PORTS)
  private List<ContainerTypeCreateContainerPorts> containerPorts = null;

  public static final String SERIALIZED_NAME_ENVIRONMENT_VARIABLES = "environmentVariables";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_VARIABLES)
  private List<ClusterLayoutCreateEnvironmentVariables> environmentVariables = null;

  public static final String SERIALIZED_NAME_CONFIG = "config";
  @SerializedName(SERIALIZED_NAME_CONFIG)
  private Object config;


  public ContainerTypeUpdate name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Node type name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Node type name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ContainerTypeUpdate labels(List<String> labels) {
    
    this.labels = labels;
    return this;
  }

  public ContainerTypeUpdate addLabelsItem(String labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<String>();
    }
    this.labels.add(labelsItem);
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getLabels() {
    return labels;
  }


  public void setLabels(List<String> labels) {
    this.labels = labels;
  }


  public ContainerTypeUpdate shortName(String shortName) {
    
    this.shortName = shortName;
    return this;
  }

   /**
   * The short name is a name with no spaces used for display in your container list.
   * @return shortName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The short name is a name with no spaces used for display in your container list.")

  public String getShortName() {
    return shortName;
  }


  public void setShortName(String shortName) {
    this.shortName = shortName;
  }


  public ContainerTypeUpdate description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Node type description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Node type description")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ContainerTypeUpdate containerVersion(String containerVersion) {
    
    this.containerVersion = containerVersion;
    return this;
  }

   /**
   * Version of the node type
   * @return containerVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Version of the node type")

  public String getContainerVersion() {
    return containerVersion;
  }


  public void setContainerVersion(String containerVersion) {
    this.containerVersion = containerVersion;
  }


  public ContainerTypeUpdate provisionTypeCode(String provisionTypeCode) {
    
    this.provisionTypeCode = provisionTypeCode;
    return this;
  }

   /**
   * Provision type code, eg. &#x60;amazon&#x60;, etc.
   * @return provisionTypeCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Provision type code, eg. `amazon`, etc.")

  public String getProvisionTypeCode() {
    return provisionTypeCode;
  }


  public void setProvisionTypeCode(String provisionTypeCode) {
    this.provisionTypeCode = provisionTypeCode;
  }


  public ContainerTypeUpdate scripts(List<Long> scripts) {
    
    this.scripts = scripts;
    return this;
  }

  public ContainerTypeUpdate addScriptsItem(Long scriptsItem) {
    if (this.scripts == null) {
      this.scripts = new ArrayList<Long>();
    }
    this.scripts.add(scriptsItem);
    return this;
  }

   /**
   * Array of script IDs.
   * @return scripts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array of script IDs.")

  public List<Long> getScripts() {
    return scripts;
  }


  public void setScripts(List<Long> scripts) {
    this.scripts = scripts;
  }


  public ContainerTypeUpdate templates(List<Long> templates) {
    
    this.templates = templates;
    return this;
  }

  public ContainerTypeUpdate addTemplatesItem(Long templatesItem) {
    if (this.templates == null) {
      this.templates = new ArrayList<Long>();
    }
    this.templates.add(templatesItem);
    return this;
  }

   /**
   * Array of file template IDs.
   * @return templates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array of file template IDs.")

  public List<Long> getTemplates() {
    return templates;
  }


  public void setTemplates(List<Long> templates) {
    this.templates = templates;
  }


  public ContainerTypeUpdate virtualImageId(Long virtualImageId) {
    
    this.virtualImageId = virtualImageId;
    return this;
  }

   /**
   * Virtual image ID
   * @return virtualImageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Virtual image ID")

  public Long getVirtualImageId() {
    return virtualImageId;
  }


  public void setVirtualImageId(Long virtualImageId) {
    this.virtualImageId = virtualImageId;
  }


  public ContainerTypeUpdate statTypeCode(String statTypeCode) {
    
    this.statTypeCode = statTypeCode;
    return this;
  }

   /**
   * Stat type code.  Varies with node type, see Provision Types (customOptionTypes) for allowed values within selected type.
   * @return statTypeCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stat type code.  Varies with node type, see Provision Types (customOptionTypes) for allowed values within selected type.")

  public String getStatTypeCode() {
    return statTypeCode;
  }


  public void setStatTypeCode(String statTypeCode) {
    this.statTypeCode = statTypeCode;
  }


  public ContainerTypeUpdate logTypeCode(String logTypeCode) {
    
    this.logTypeCode = logTypeCode;
    return this;
  }

   /**
   * Log type code.  Varies with node type, see Provision Types (customOptionTypes) for allowed values within selected type.
   * @return logTypeCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Log type code.  Varies with node type, see Provision Types (customOptionTypes) for allowed values within selected type.")

  public String getLogTypeCode() {
    return logTypeCode;
  }


  public void setLogTypeCode(String logTypeCode) {
    this.logTypeCode = logTypeCode;
  }


  public ContainerTypeUpdate serverType(String serverType) {
    
    this.serverType = serverType;
    return this;
  }

   /**
   * Server type.  Always pass \&quot;vm\&quot;.
   * @return serverType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Server type.  Always pass \"vm\".")

  public String getServerType() {
    return serverType;
  }


  public void setServerType(String serverType) {
    this.serverType = serverType;
  }


  public ContainerTypeUpdate containerPorts(List<ContainerTypeCreateContainerPorts> containerPorts) {
    
    this.containerPorts = containerPorts;
    return this;
  }

  public ContainerTypeUpdate addContainerPortsItem(ContainerTypeCreateContainerPorts containerPortsItem) {
    if (this.containerPorts == null) {
      this.containerPorts = new ArrayList<ContainerTypeCreateContainerPorts>();
    }
    this.containerPorts.add(containerPortsItem);
    return this;
  }

   /**
   * List of exposed port definitions in the format NAME&#x3D;PORT|PROTOCOL
   * @return containerPorts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[{\"name\":\"WEB\",\"port\":80,\"loadBalanceProtocol\":\"HTTP\"},{\"name\":\"SECURE\",\"port\":443,\"loadBalanceProtocol\":\"HTTPS\"}]", value = "List of exposed port definitions in the format NAME=PORT|PROTOCOL")

  public List<ContainerTypeCreateContainerPorts> getContainerPorts() {
    return containerPorts;
  }


  public void setContainerPorts(List<ContainerTypeCreateContainerPorts> containerPorts) {
    this.containerPorts = containerPorts;
  }


  public ContainerTypeUpdate environmentVariables(List<ClusterLayoutCreateEnvironmentVariables> environmentVariables) {
    
    this.environmentVariables = environmentVariables;
    return this;
  }

  public ContainerTypeUpdate addEnvironmentVariablesItem(ClusterLayoutCreateEnvironmentVariables environmentVariablesItem) {
    if (this.environmentVariables == null) {
      this.environmentVariables = new ArrayList<ClusterLayoutCreateEnvironmentVariables>();
    }
    this.environmentVariables.add(environmentVariablesItem);
    return this;
  }

   /**
   * The environmentVariables parameter is array of env objects.
   * @return environmentVariables
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The environmentVariables parameter is array of env objects.")

  public List<ClusterLayoutCreateEnvironmentVariables> getEnvironmentVariables() {
    return environmentVariables;
  }


  public void setEnvironmentVariables(List<ClusterLayoutCreateEnvironmentVariables> environmentVariables) {
    this.environmentVariables = environmentVariables;
  }


  public ContainerTypeUpdate config(Object config) {
    
    this.config = config;
    return this;
  }

   /**
   * Config object varies with node type.  If using docker, scvmm, ARM, hyperv, or cloudformation, look up provision type details (customOptionTypes) for information.
   * @return config
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Config object varies with node type.  If using docker, scvmm, ARM, hyperv, or cloudformation, look up provision type details (customOptionTypes) for information.")

  public Object getConfig() {
    return config;
  }


  public void setConfig(Object config) {
    this.config = config;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContainerTypeUpdate containerTypeUpdate = (ContainerTypeUpdate) o;
    return Objects.equals(this.name, containerTypeUpdate.name) &&
        Objects.equals(this.labels, containerTypeUpdate.labels) &&
        Objects.equals(this.shortName, containerTypeUpdate.shortName) &&
        Objects.equals(this.description, containerTypeUpdate.description) &&
        Objects.equals(this.containerVersion, containerTypeUpdate.containerVersion) &&
        Objects.equals(this.provisionTypeCode, containerTypeUpdate.provisionTypeCode) &&
        Objects.equals(this.scripts, containerTypeUpdate.scripts) &&
        Objects.equals(this.templates, containerTypeUpdate.templates) &&
        Objects.equals(this.virtualImageId, containerTypeUpdate.virtualImageId) &&
        Objects.equals(this.statTypeCode, containerTypeUpdate.statTypeCode) &&
        Objects.equals(this.logTypeCode, containerTypeUpdate.logTypeCode) &&
        Objects.equals(this.serverType, containerTypeUpdate.serverType) &&
        Objects.equals(this.containerPorts, containerTypeUpdate.containerPorts) &&
        Objects.equals(this.environmentVariables, containerTypeUpdate.environmentVariables) &&
        Objects.equals(this.config, containerTypeUpdate.config);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, labels, shortName, description, containerVersion, provisionTypeCode, scripts, templates, virtualImageId, statTypeCode, logTypeCode, serverType, containerPorts, environmentVariables, config);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContainerTypeUpdate {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    containerVersion: ").append(toIndentedString(containerVersion)).append("\n");
    sb.append("    provisionTypeCode: ").append(toIndentedString(provisionTypeCode)).append("\n");
    sb.append("    scripts: ").append(toIndentedString(scripts)).append("\n");
    sb.append("    templates: ").append(toIndentedString(templates)).append("\n");
    sb.append("    virtualImageId: ").append(toIndentedString(virtualImageId)).append("\n");
    sb.append("    statTypeCode: ").append(toIndentedString(statTypeCode)).append("\n");
    sb.append("    logTypeCode: ").append(toIndentedString(logTypeCode)).append("\n");
    sb.append("    serverType: ").append(toIndentedString(serverType)).append("\n");
    sb.append("    containerPorts: ").append(toIndentedString(containerPorts)).append("\n");
    sb.append("    environmentVariables: ").append(toIndentedString(environmentVariables)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

