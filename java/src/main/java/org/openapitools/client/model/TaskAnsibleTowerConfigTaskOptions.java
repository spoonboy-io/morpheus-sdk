/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TaskAnsibleTowerConfigTaskOptions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class TaskAnsibleTowerConfigTaskOptions {
  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_PASSWORD_HASH = "passwordHash";
  @SerializedName(SERIALIZED_NAME_PASSWORD_HASH)
  private String passwordHash;

  public static final String SERIALIZED_NAME_ANSIBLE_TOWER_GIT_REF = "ansibleTowerGitRef";
  @SerializedName(SERIALIZED_NAME_ANSIBLE_TOWER_GIT_REF)
  private String ansibleTowerGitRef;

  public static final String SERIALIZED_NAME_LOCAL_SCRIPT_GIT_ID = "localScriptGitId";
  @SerializedName(SERIALIZED_NAME_LOCAL_SCRIPT_GIT_ID)
  private String localScriptGitId;

  public static final String SERIALIZED_NAME_HOST = "host";
  @SerializedName(SERIALIZED_NAME_HOST)
  private String host;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_SSH_KEY = "sshKey";
  @SerializedName(SERIALIZED_NAME_SSH_KEY)
  private String sshKey;

  public static final String SERIALIZED_NAME_ANSIBLE_GROUP = "ansibleGroup";
  @SerializedName(SERIALIZED_NAME_ANSIBLE_GROUP)
  private String ansibleGroup;

  public static final String SERIALIZED_NAME_ANSIBLE_TOWER_EXECUTE_MODE = "ansibleTowerExecuteMode";
  @SerializedName(SERIALIZED_NAME_ANSIBLE_TOWER_EXECUTE_MODE)
  private String ansibleTowerExecuteMode;

  public static final String SERIALIZED_NAME_LOCAL_SCRIPT_GIT_REF = "localScriptGitRef";
  @SerializedName(SERIALIZED_NAME_LOCAL_SCRIPT_GIT_REF)
  private String localScriptGitRef;

  public static final String SERIALIZED_NAME_PORT = "port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private String port;


  public TaskAnsibleTowerConfigTaskOptions password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }


  public TaskAnsibleTowerConfigTaskOptions passwordHash(String passwordHash) {
    
    this.passwordHash = passwordHash;
    return this;
  }

   /**
   * Get passwordHash
   * @return passwordHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPasswordHash() {
    return passwordHash;
  }


  public void setPasswordHash(String passwordHash) {
    this.passwordHash = passwordHash;
  }


  public TaskAnsibleTowerConfigTaskOptions ansibleTowerGitRef(String ansibleTowerGitRef) {
    
    this.ansibleTowerGitRef = ansibleTowerGitRef;
    return this;
  }

   /**
   * Get ansibleTowerGitRef
   * @return ansibleTowerGitRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAnsibleTowerGitRef() {
    return ansibleTowerGitRef;
  }


  public void setAnsibleTowerGitRef(String ansibleTowerGitRef) {
    this.ansibleTowerGitRef = ansibleTowerGitRef;
  }


  public TaskAnsibleTowerConfigTaskOptions localScriptGitId(String localScriptGitId) {
    
    this.localScriptGitId = localScriptGitId;
    return this;
  }

   /**
   * Get localScriptGitId
   * @return localScriptGitId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocalScriptGitId() {
    return localScriptGitId;
  }


  public void setLocalScriptGitId(String localScriptGitId) {
    this.localScriptGitId = localScriptGitId;
  }


  public TaskAnsibleTowerConfigTaskOptions host(String host) {
    
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHost() {
    return host;
  }


  public void setHost(String host) {
    this.host = host;
  }


  public TaskAnsibleTowerConfigTaskOptions username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsername() {
    return username;
  }


  public void setUsername(String username) {
    this.username = username;
  }


  public TaskAnsibleTowerConfigTaskOptions sshKey(String sshKey) {
    
    this.sshKey = sshKey;
    return this;
  }

   /**
   * Get sshKey
   * @return sshKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSshKey() {
    return sshKey;
  }


  public void setSshKey(String sshKey) {
    this.sshKey = sshKey;
  }


  public TaskAnsibleTowerConfigTaskOptions ansibleGroup(String ansibleGroup) {
    
    this.ansibleGroup = ansibleGroup;
    return this;
  }

   /**
   * Get ansibleGroup
   * @return ansibleGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAnsibleGroup() {
    return ansibleGroup;
  }


  public void setAnsibleGroup(String ansibleGroup) {
    this.ansibleGroup = ansibleGroup;
  }


  public TaskAnsibleTowerConfigTaskOptions ansibleTowerExecuteMode(String ansibleTowerExecuteMode) {
    
    this.ansibleTowerExecuteMode = ansibleTowerExecuteMode;
    return this;
  }

   /**
   * Get ansibleTowerExecuteMode
   * @return ansibleTowerExecuteMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAnsibleTowerExecuteMode() {
    return ansibleTowerExecuteMode;
  }


  public void setAnsibleTowerExecuteMode(String ansibleTowerExecuteMode) {
    this.ansibleTowerExecuteMode = ansibleTowerExecuteMode;
  }


  public TaskAnsibleTowerConfigTaskOptions localScriptGitRef(String localScriptGitRef) {
    
    this.localScriptGitRef = localScriptGitRef;
    return this;
  }

   /**
   * Get localScriptGitRef
   * @return localScriptGitRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocalScriptGitRef() {
    return localScriptGitRef;
  }


  public void setLocalScriptGitRef(String localScriptGitRef) {
    this.localScriptGitRef = localScriptGitRef;
  }


  public TaskAnsibleTowerConfigTaskOptions port(String port) {
    
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPort() {
    return port;
  }


  public void setPort(String port) {
    this.port = port;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskAnsibleTowerConfigTaskOptions taskAnsibleTowerConfigTaskOptions = (TaskAnsibleTowerConfigTaskOptions) o;
    return Objects.equals(this.password, taskAnsibleTowerConfigTaskOptions.password) &&
        Objects.equals(this.passwordHash, taskAnsibleTowerConfigTaskOptions.passwordHash) &&
        Objects.equals(this.ansibleTowerGitRef, taskAnsibleTowerConfigTaskOptions.ansibleTowerGitRef) &&
        Objects.equals(this.localScriptGitId, taskAnsibleTowerConfigTaskOptions.localScriptGitId) &&
        Objects.equals(this.host, taskAnsibleTowerConfigTaskOptions.host) &&
        Objects.equals(this.username, taskAnsibleTowerConfigTaskOptions.username) &&
        Objects.equals(this.sshKey, taskAnsibleTowerConfigTaskOptions.sshKey) &&
        Objects.equals(this.ansibleGroup, taskAnsibleTowerConfigTaskOptions.ansibleGroup) &&
        Objects.equals(this.ansibleTowerExecuteMode, taskAnsibleTowerConfigTaskOptions.ansibleTowerExecuteMode) &&
        Objects.equals(this.localScriptGitRef, taskAnsibleTowerConfigTaskOptions.localScriptGitRef) &&
        Objects.equals(this.port, taskAnsibleTowerConfigTaskOptions.port);
  }

  @Override
  public int hashCode() {
    return Objects.hash(password, passwordHash, ansibleTowerGitRef, localScriptGitId, host, username, sshKey, ansibleGroup, ansibleTowerExecuteMode, localScriptGitRef, port);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskAnsibleTowerConfigTaskOptions {\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    passwordHash: ").append(toIndentedString(passwordHash)).append("\n");
    sb.append("    ansibleTowerGitRef: ").append(toIndentedString(ansibleTowerGitRef)).append("\n");
    sb.append("    localScriptGitId: ").append(toIndentedString(localScriptGitId)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    sshKey: ").append(toIndentedString(sshKey)).append("\n");
    sb.append("    ansibleGroup: ").append(toIndentedString(ansibleGroup)).append("\n");
    sb.append("    ansibleTowerExecuteMode: ").append(toIndentedString(ansibleTowerExecuteMode)).append("\n");
    sb.append("    localScriptGitRef: ").append(toIndentedString(localScriptGitRef)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

