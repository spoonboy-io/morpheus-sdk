/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ProvisioningLicensesUpdate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ProvisioningLicensesUpdate {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_LICENSE_VERSION = "licenseVersion";
  @SerializedName(SERIALIZED_NAME_LICENSE_VERSION)
  private String licenseVersion;

  public static final String SERIALIZED_NAME_COPIES = "copies";
  @SerializedName(SERIALIZED_NAME_COPIES)
  private Long copies = 1l;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_VIRTUAL_IMAGES = "virtualImages";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_IMAGES)
  private List<Long> virtualImages = null;

  public static final String SERIALIZED_NAME_TENANTS = "tenants";
  @SerializedName(SERIALIZED_NAME_TENANTS)
  private List<Long> tenants = null;


  public ProvisioningLicensesUpdate name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ProvisioningLicensesUpdate licenseVersion(String licenseVersion) {
    
    this.licenseVersion = licenseVersion;
    return this;
  }

   /**
   * License Version
   * @return licenseVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "License Version")

  public String getLicenseVersion() {
    return licenseVersion;
  }


  public void setLicenseVersion(String licenseVersion) {
    this.licenseVersion = licenseVersion;
  }


  public ProvisioningLicensesUpdate copies(Long copies) {
    
    this.copies = copies;
    return this;
  }

   /**
   * Copies - The number of times the key can be used.
   * @return copies
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Copies - The number of times the key can be used.")

  public Long getCopies() {
    return copies;
  }


  public void setCopies(Long copies) {
    this.copies = copies;
  }


  public ProvisioningLicensesUpdate description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ProvisioningLicensesUpdate virtualImages(List<Long> virtualImages) {
    
    this.virtualImages = virtualImages;
    return this;
  }

  public ProvisioningLicensesUpdate addVirtualImagesItem(Long virtualImagesItem) {
    if (this.virtualImages == null) {
      this.virtualImages = new ArrayList<Long>();
    }
    this.virtualImages.add(virtualImagesItem);
    return this;
  }

   /**
   * Virtual Images - Array of Virtual Image IDs to associate with license.
   * @return virtualImages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Virtual Images - Array of Virtual Image IDs to associate with license.")

  public List<Long> getVirtualImages() {
    return virtualImages;
  }


  public void setVirtualImages(List<Long> virtualImages) {
    this.virtualImages = virtualImages;
  }


  public ProvisioningLicensesUpdate tenants(List<Long> tenants) {
    
    this.tenants = tenants;
    return this;
  }

  public ProvisioningLicensesUpdate addTenantsItem(Long tenantsItem) {
    if (this.tenants == null) {
      this.tenants = new ArrayList<Long>();
    }
    this.tenants.add(tenantsItem);
    return this;
  }

   /**
   * Tenants - Array of tenants that are allowed to use the key.
   * @return tenants
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tenants - Array of tenants that are allowed to use the key.")

  public List<Long> getTenants() {
    return tenants;
  }


  public void setTenants(List<Long> tenants) {
    this.tenants = tenants;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProvisioningLicensesUpdate provisioningLicensesUpdate = (ProvisioningLicensesUpdate) o;
    return Objects.equals(this.name, provisioningLicensesUpdate.name) &&
        Objects.equals(this.licenseVersion, provisioningLicensesUpdate.licenseVersion) &&
        Objects.equals(this.copies, provisioningLicensesUpdate.copies) &&
        Objects.equals(this.description, provisioningLicensesUpdate.description) &&
        Objects.equals(this.virtualImages, provisioningLicensesUpdate.virtualImages) &&
        Objects.equals(this.tenants, provisioningLicensesUpdate.tenants);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, licenseVersion, copies, description, virtualImages, tenants);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProvisioningLicensesUpdate {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    licenseVersion: ").append(toIndentedString(licenseVersion)).append("\n");
    sb.append("    copies: ").append(toIndentedString(copies)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    virtualImages: ").append(toIndentedString(virtualImages)).append("\n");
    sb.append("    tenants: ").append(toIndentedString(tenants)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

