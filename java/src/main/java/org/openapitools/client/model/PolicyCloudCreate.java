/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.PolicyCloudCreatePolicyType;

/**
 * PolicyCloudCreate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class PolicyCloudCreate {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_POLICY_TYPE = "policyType";
  @SerializedName(SERIALIZED_NAME_POLICY_TYPE)
  private PolicyCloudCreatePolicyType policyType;


  public PolicyCloudCreate name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * A name for the policy
   * @return name
  **/
  @ApiModelProperty(example = "Sample Policy", required = true, value = "A name for the policy")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public PolicyCloudCreate description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A description for the policy
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for the policy")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public PolicyCloudCreate policyType(PolicyCloudCreatePolicyType policyType) {
    
    this.policyType = policyType;
    return this;
  }

   /**
   * Get policyType
   * @return policyType
  **/
  @ApiModelProperty(required = true, value = "")

  public PolicyCloudCreatePolicyType getPolicyType() {
    return policyType;
  }


  public void setPolicyType(PolicyCloudCreatePolicyType policyType) {
    this.policyType = policyType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PolicyCloudCreate policyCloudCreate = (PolicyCloudCreate) o;
    return Objects.equals(this.name, policyCloudCreate.name) &&
        Objects.equals(this.description, policyCloudCreate.description) &&
        Objects.equals(this.policyType, policyCloudCreate.policyType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, policyType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PolicyCloudCreate {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    policyType: ").append(toIndentedString(policyType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

