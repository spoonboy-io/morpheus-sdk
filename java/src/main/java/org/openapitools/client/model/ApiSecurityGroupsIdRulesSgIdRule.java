/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.ApiSecurityGroupsIdRulesRuleDestinationGroup;
import org.openapitools.client.model.ApiSecurityGroupsIdRulesRuleDestinationTier;
import org.openapitools.client.model.ApiSecurityGroupsIdRulesRuleSourceGroup;
import org.openapitools.client.model.ApiSecurityGroupsIdRulesRuleSourceTier;

/**
 * ApiSecurityGroupsIdRulesSgIdRule
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ApiSecurityGroupsIdRulesSgIdRule {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Either &#x60;ingress&#x60; or &#x60;egress&#x60;
   */
  @JsonAdapter(DirectionEnum.Adapter.class)
  public enum DirectionEnum {
    INGRESS("ingress"),
    
    EGRESS("egress");

    private String value;

    DirectionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DirectionEnum fromValue(String value) {
      for (DirectionEnum b : DirectionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DirectionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DirectionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DirectionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DirectionEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_DIRECTION = "direction";
  @SerializedName(SERIALIZED_NAME_DIRECTION)
  private DirectionEnum direction = DirectionEnum.INGRESS;

  /**
   * Either &#x60;cidr&#x60;, &#x60;group&#x60;, &#x60;tier&#x60;, &#x60;all&#x60;.
   */
  @JsonAdapter(SourceTypeEnum.Adapter.class)
  public enum SourceTypeEnum {
    CIDR("cidr"),
    
    GROUP("group"),
    
    TIER("tier"),
    
    ALL("all");

    private String value;

    SourceTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SourceTypeEnum fromValue(String value) {
      for (SourceTypeEnum b : SourceTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SourceTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SourceTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SourceTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SourceTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SOURCE_TYPE = "sourceType";
  @SerializedName(SERIALIZED_NAME_SOURCE_TYPE)
  private SourceTypeEnum sourceType = SourceTypeEnum.CIDR;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private String source;

  public static final String SERIALIZED_NAME_SOURCE_GROUP = "sourceGroup";
  @SerializedName(SERIALIZED_NAME_SOURCE_GROUP)
  private ApiSecurityGroupsIdRulesRuleSourceGroup sourceGroup;

  public static final String SERIALIZED_NAME_SOURCE_TIER = "sourceTier";
  @SerializedName(SERIALIZED_NAME_SOURCE_TIER)
  private ApiSecurityGroupsIdRulesRuleSourceTier sourceTier;

  public static final String SERIALIZED_NAME_PORT_RANGE = "portRange";
  @SerializedName(SERIALIZED_NAME_PORT_RANGE)
  private String portRange;

  /**
   * Either tcp, udp, icmp. Required if customRule is true, otherwise, ignored.
   */
  @JsonAdapter(ProtocolEnum.Adapter.class)
  public enum ProtocolEnum {
    TCP("tcp"),
    
    UDP("udp"),
    
    ICMP("icmp");

    private String value;

    ProtocolEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ProtocolEnum fromValue(String value) {
      for (ProtocolEnum b : ProtocolEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ProtocolEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProtocolEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ProtocolEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ProtocolEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PROTOCOL = "protocol";
  @SerializedName(SERIALIZED_NAME_PROTOCOL)
  private ProtocolEnum protocol;

  /**
   * Either cidr, group, tier, instance.
   */
  @JsonAdapter(DestinationTypeEnum.Adapter.class)
  public enum DestinationTypeEnum {
    CIDR("cidr"),
    
    GROUP("group"),
    
    TIER("tier"),
    
    INSTANCE("instance");

    private String value;

    DestinationTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DestinationTypeEnum fromValue(String value) {
      for (DestinationTypeEnum b : DestinationTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DestinationTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DestinationTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DestinationTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DestinationTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_DESTINATION_TYPE = "destinationType";
  @SerializedName(SERIALIZED_NAME_DESTINATION_TYPE)
  private DestinationTypeEnum destinationType = DestinationTypeEnum.CIDR;

  public static final String SERIALIZED_NAME_DESTINATION = "destination";
  @SerializedName(SERIALIZED_NAME_DESTINATION)
  private String destination;

  public static final String SERIALIZED_NAME_DESTINATION_GROUP = "destinationGroup";
  @SerializedName(SERIALIZED_NAME_DESTINATION_GROUP)
  private ApiSecurityGroupsIdRulesRuleDestinationGroup destinationGroup;

  public static final String SERIALIZED_NAME_DESTINATION_TIER = "destinationTier";
  @SerializedName(SERIALIZED_NAME_DESTINATION_TIER)
  private ApiSecurityGroupsIdRulesRuleDestinationTier destinationTier;

  public static final String SERIALIZED_NAME_RULE_TYPE = "ruleType";
  @SerializedName(SERIALIZED_NAME_RULE_TYPE)
  private String ruleType = "customRule";

  /**
   * Either &#x60;accept&#x60; or &#x60;deny&#x60;.
   */
  @JsonAdapter(PolicyEnum.Adapter.class)
  public enum PolicyEnum {
    ACCEPT("accept"),
    
    DENY("deny");

    private String value;

    PolicyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PolicyEnum fromValue(String value) {
      for (PolicyEnum b : PolicyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PolicyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PolicyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PolicyEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PolicyEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_POLICY = "policy";
  @SerializedName(SERIALIZED_NAME_POLICY)
  private PolicyEnum policy;

  public static final String SERIALIZED_NAME_INSTANCE_TYPE_ID = "instanceTypeId";
  @SerializedName(SERIALIZED_NAME_INSTANCE_TYPE_ID)
  private Long instanceTypeId;


  public ApiSecurityGroupsIdRulesSgIdRule name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * A name for the rule
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A name for the rule")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ApiSecurityGroupsIdRulesSgIdRule direction(DirectionEnum direction) {
    
    this.direction = direction;
    return this;
  }

   /**
   * Either &#x60;ingress&#x60; or &#x60;egress&#x60;
   * @return direction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Either `ingress` or `egress`")

  public DirectionEnum getDirection() {
    return direction;
  }


  public void setDirection(DirectionEnum direction) {
    this.direction = direction;
  }


  public ApiSecurityGroupsIdRulesSgIdRule sourceType(SourceTypeEnum sourceType) {
    
    this.sourceType = sourceType;
    return this;
  }

   /**
   * Either &#x60;cidr&#x60;, &#x60;group&#x60;, &#x60;tier&#x60;, &#x60;all&#x60;.
   * @return sourceType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Either `cidr`, `group`, `tier`, `all`.")

  public SourceTypeEnum getSourceType() {
    return sourceType;
  }


  public void setSourceType(SourceTypeEnum sourceType) {
    this.sourceType = sourceType;
  }


  public ApiSecurityGroupsIdRulesSgIdRule source(String source) {
    
    this.source = source;
    return this;
  }

   /**
   * CIDR representing the source IP(s) which should receive access. Required for &#x60;sourceType&#x60;&#x3D;cidr
   * @return source
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "50.22.10.10/32", value = "CIDR representing the source IP(s) which should receive access. Required for `sourceType`=cidr")

  public String getSource() {
    return source;
  }


  public void setSource(String source) {
    this.source = source;
  }


  public ApiSecurityGroupsIdRulesSgIdRule sourceGroup(ApiSecurityGroupsIdRulesRuleSourceGroup sourceGroup) {
    
    this.sourceGroup = sourceGroup;
    return this;
  }

   /**
   * Get sourceGroup
   * @return sourceGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ApiSecurityGroupsIdRulesRuleSourceGroup getSourceGroup() {
    return sourceGroup;
  }


  public void setSourceGroup(ApiSecurityGroupsIdRulesRuleSourceGroup sourceGroup) {
    this.sourceGroup = sourceGroup;
  }


  public ApiSecurityGroupsIdRulesSgIdRule sourceTier(ApiSecurityGroupsIdRulesRuleSourceTier sourceTier) {
    
    this.sourceTier = sourceTier;
    return this;
  }

   /**
   * Get sourceTier
   * @return sourceTier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ApiSecurityGroupsIdRulesRuleSourceTier getSourceTier() {
    return sourceTier;
  }


  public void setSourceTier(ApiSecurityGroupsIdRulesRuleSourceTier sourceTier) {
    this.sourceTier = sourceTier;
  }


  public ApiSecurityGroupsIdRulesSgIdRule portRange(String portRange) {
    
    this.portRange = portRange;
    return this;
  }

   /**
   * Either a single value (i.e. 55) or a port range (i.e. 1-65535) for which to open access to the source. Required if customRule is true, otherwise, ignored. 
   * @return portRange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "55-72", value = "Either a single value (i.e. 55) or a port range (i.e. 1-65535) for which to open access to the source. Required if customRule is true, otherwise, ignored. ")

  public String getPortRange() {
    return portRange;
  }


  public void setPortRange(String portRange) {
    this.portRange = portRange;
  }


  public ApiSecurityGroupsIdRulesSgIdRule protocol(ProtocolEnum protocol) {
    
    this.protocol = protocol;
    return this;
  }

   /**
   * Either tcp, udp, icmp. Required if customRule is true, otherwise, ignored.
   * @return protocol
  **/
  @ApiModelProperty(required = true, value = "Either tcp, udp, icmp. Required if customRule is true, otherwise, ignored.")

  public ProtocolEnum getProtocol() {
    return protocol;
  }


  public void setProtocol(ProtocolEnum protocol) {
    this.protocol = protocol;
  }


  public ApiSecurityGroupsIdRulesSgIdRule destinationType(DestinationTypeEnum destinationType) {
    
    this.destinationType = destinationType;
    return this;
  }

   /**
   * Either cidr, group, tier, instance.
   * @return destinationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Either cidr, group, tier, instance.")

  public DestinationTypeEnum getDestinationType() {
    return destinationType;
  }


  public void setDestinationType(DestinationTypeEnum destinationType) {
    this.destinationType = destinationType;
  }


  public ApiSecurityGroupsIdRulesSgIdRule destination(String destination) {
    
    this.destination = destination;
    return this;
  }

   /**
   * CIDR representing the destination IP(s) which should receive access. Required for &#x60;destinationType&#x60;&#x3D;cidr.
   * @return destination
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "50.22.10.10/32", value = "CIDR representing the destination IP(s) which should receive access. Required for `destinationType`=cidr.")

  public String getDestination() {
    return destination;
  }


  public void setDestination(String destination) {
    this.destination = destination;
  }


  public ApiSecurityGroupsIdRulesSgIdRule destinationGroup(ApiSecurityGroupsIdRulesRuleDestinationGroup destinationGroup) {
    
    this.destinationGroup = destinationGroup;
    return this;
  }

   /**
   * Get destinationGroup
   * @return destinationGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ApiSecurityGroupsIdRulesRuleDestinationGroup getDestinationGroup() {
    return destinationGroup;
  }


  public void setDestinationGroup(ApiSecurityGroupsIdRulesRuleDestinationGroup destinationGroup) {
    this.destinationGroup = destinationGroup;
  }


  public ApiSecurityGroupsIdRulesSgIdRule destinationTier(ApiSecurityGroupsIdRulesRuleDestinationTier destinationTier) {
    
    this.destinationTier = destinationTier;
    return this;
  }

   /**
   * Get destinationTier
   * @return destinationTier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ApiSecurityGroupsIdRulesRuleDestinationTier getDestinationTier() {
    return destinationTier;
  }


  public void setDestinationTier(ApiSecurityGroupsIdRulesRuleDestinationTier destinationTier) {
    this.destinationTier = destinationTier;
  }


  public ApiSecurityGroupsIdRulesSgIdRule ruleType(String ruleType) {
    
    this.ruleType = ruleType;
    return this;
  }

   /**
   * Either &#x60;customRule&#x60; or an &#x60;instance type&#x60; code.
   * @return ruleType
  **/
  @ApiModelProperty(required = true, value = "Either `customRule` or an `instance type` code.")

  public String getRuleType() {
    return ruleType;
  }


  public void setRuleType(String ruleType) {
    this.ruleType = ruleType;
  }


  public ApiSecurityGroupsIdRulesSgIdRule policy(PolicyEnum policy) {
    
    this.policy = policy;
    return this;
  }

   /**
   * Either &#x60;accept&#x60; or &#x60;deny&#x60;.
   * @return policy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Either `accept` or `deny`.")

  public PolicyEnum getPolicy() {
    return policy;
  }


  public void setPolicy(PolicyEnum policy) {
    this.policy = policy;
  }


  public ApiSecurityGroupsIdRulesSgIdRule instanceTypeId(Long instanceTypeId) {
    
    this.instanceTypeId = instanceTypeId;
    return this;
  }

   /**
   * The id of an Instance Type. If specified, the source CIDR will have access to all ports exposed by the particular instance in the cloud, app, or instance. Required if customRule is false, otherwise ignored. 
   * @return instanceTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "54568", value = "The id of an Instance Type. If specified, the source CIDR will have access to all ports exposed by the particular instance in the cloud, app, or instance. Required if customRule is false, otherwise ignored. ")

  public Long getInstanceTypeId() {
    return instanceTypeId;
  }


  public void setInstanceTypeId(Long instanceTypeId) {
    this.instanceTypeId = instanceTypeId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiSecurityGroupsIdRulesSgIdRule apiSecurityGroupsIdRulesSgIdRule = (ApiSecurityGroupsIdRulesSgIdRule) o;
    return Objects.equals(this.name, apiSecurityGroupsIdRulesSgIdRule.name) &&
        Objects.equals(this.direction, apiSecurityGroupsIdRulesSgIdRule.direction) &&
        Objects.equals(this.sourceType, apiSecurityGroupsIdRulesSgIdRule.sourceType) &&
        Objects.equals(this.source, apiSecurityGroupsIdRulesSgIdRule.source) &&
        Objects.equals(this.sourceGroup, apiSecurityGroupsIdRulesSgIdRule.sourceGroup) &&
        Objects.equals(this.sourceTier, apiSecurityGroupsIdRulesSgIdRule.sourceTier) &&
        Objects.equals(this.portRange, apiSecurityGroupsIdRulesSgIdRule.portRange) &&
        Objects.equals(this.protocol, apiSecurityGroupsIdRulesSgIdRule.protocol) &&
        Objects.equals(this.destinationType, apiSecurityGroupsIdRulesSgIdRule.destinationType) &&
        Objects.equals(this.destination, apiSecurityGroupsIdRulesSgIdRule.destination) &&
        Objects.equals(this.destinationGroup, apiSecurityGroupsIdRulesSgIdRule.destinationGroup) &&
        Objects.equals(this.destinationTier, apiSecurityGroupsIdRulesSgIdRule.destinationTier) &&
        Objects.equals(this.ruleType, apiSecurityGroupsIdRulesSgIdRule.ruleType) &&
        Objects.equals(this.policy, apiSecurityGroupsIdRulesSgIdRule.policy) &&
        Objects.equals(this.instanceTypeId, apiSecurityGroupsIdRulesSgIdRule.instanceTypeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, direction, sourceType, source, sourceGroup, sourceTier, portRange, protocol, destinationType, destination, destinationGroup, destinationTier, ruleType, policy, instanceTypeId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiSecurityGroupsIdRulesSgIdRule {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    sourceGroup: ").append(toIndentedString(sourceGroup)).append("\n");
    sb.append("    sourceTier: ").append(toIndentedString(sourceTier)).append("\n");
    sb.append("    portRange: ").append(toIndentedString(portRange)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    destinationType: ").append(toIndentedString(destinationType)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    destinationGroup: ").append(toIndentedString(destinationGroup)).append("\n");
    sb.append("    destinationTier: ").append(toIndentedString(destinationTier)).append("\n");
    sb.append("    ruleType: ").append(toIndentedString(ruleType)).append("\n");
    sb.append("    policy: ").append(toIndentedString(policy)).append("\n");
    sb.append("    instanceTypeId: ").append(toIndentedString(instanceTypeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

