/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.AppPrepareApplyDataGroup;

/**
 * ImageBuildsConfigNetwork
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ImageBuildsConfigNetwork {
  public static final String SERIALIZED_NAME_ID_NAME = "idName";
  @SerializedName(SERIALIZED_NAME_ID_NAME)
  private String idName;

  public static final String SERIALIZED_NAME_POOL = "pool";
  @SerializedName(SERIALIZED_NAME_POOL)
  private AppPrepareApplyDataGroup pool;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_HAS_POOL = "hasPool";
  @SerializedName(SERIALIZED_NAME_HAS_POOL)
  private Boolean hasPool;


  public ImageBuildsConfigNetwork idName(String idName) {
    
    this.idName = idName;
    return this;
  }

   /**
   * Get idName
   * @return idName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdName() {
    return idName;
  }


  public void setIdName(String idName) {
    this.idName = idName;
  }


  public ImageBuildsConfigNetwork pool(AppPrepareApplyDataGroup pool) {
    
    this.pool = pool;
    return this;
  }

   /**
   * Get pool
   * @return pool
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AppPrepareApplyDataGroup getPool() {
    return pool;
  }


  public void setPool(AppPrepareApplyDataGroup pool) {
    this.pool = pool;
  }


  public ImageBuildsConfigNetwork id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ImageBuildsConfigNetwork hasPool(Boolean hasPool) {
    
    this.hasPool = hasPool;
    return this;
  }

   /**
   * Get hasPool
   * @return hasPool
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHasPool() {
    return hasPool;
  }


  public void setHasPool(Boolean hasPool) {
    this.hasPool = hasPool;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImageBuildsConfigNetwork imageBuildsConfigNetwork = (ImageBuildsConfigNetwork) o;
    return Objects.equals(this.idName, imageBuildsConfigNetwork.idName) &&
        Objects.equals(this.pool, imageBuildsConfigNetwork.pool) &&
        Objects.equals(this.id, imageBuildsConfigNetwork.id) &&
        Objects.equals(this.hasPool, imageBuildsConfigNetwork.hasPool);
  }

  @Override
  public int hashCode() {
    return Objects.hash(idName, pool, id, hasPool);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImageBuildsConfigNetwork {\n");
    sb.append("    idName: ").append(toIndentedString(idName)).append("\n");
    sb.append("    pool: ").append(toIndentedString(pool)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    hasPool: ").append(toIndentedString(hasPool)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

