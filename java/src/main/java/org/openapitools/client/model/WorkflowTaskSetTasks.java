/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.WorkflowTask;

/**
 * WorkflowTaskSetTasks
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class WorkflowTaskSetTasks {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_TASK_PHASE = "taskPhase";
  @SerializedName(SERIALIZED_NAME_TASK_PHASE)
  private String taskPhase;

  public static final String SERIALIZED_NAME_TASK_ORDER = "taskOrder";
  @SerializedName(SERIALIZED_NAME_TASK_ORDER)
  private Long taskOrder;

  public static final String SERIALIZED_NAME_TASK = "task";
  @SerializedName(SERIALIZED_NAME_TASK)
  private WorkflowTask task;


  public WorkflowTaskSetTasks id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public WorkflowTaskSetTasks taskPhase(String taskPhase) {
    
    this.taskPhase = taskPhase;
    return this;
  }

   /**
   * Get taskPhase
   * @return taskPhase
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTaskPhase() {
    return taskPhase;
  }


  public void setTaskPhase(String taskPhase) {
    this.taskPhase = taskPhase;
  }


  public WorkflowTaskSetTasks taskOrder(Long taskOrder) {
    
    this.taskOrder = taskOrder;
    return this;
  }

   /**
   * Get taskOrder
   * @return taskOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getTaskOrder() {
    return taskOrder;
  }


  public void setTaskOrder(Long taskOrder) {
    this.taskOrder = taskOrder;
  }


  public WorkflowTaskSetTasks task(WorkflowTask task) {
    
    this.task = task;
    return this;
  }

   /**
   * Get task
   * @return task
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkflowTask getTask() {
    return task;
  }


  public void setTask(WorkflowTask task) {
    this.task = task;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowTaskSetTasks workflowTaskSetTasks = (WorkflowTaskSetTasks) o;
    return Objects.equals(this.id, workflowTaskSetTasks.id) &&
        Objects.equals(this.taskPhase, workflowTaskSetTasks.taskPhase) &&
        Objects.equals(this.taskOrder, workflowTaskSetTasks.taskOrder) &&
        Objects.equals(this.task, workflowTaskSetTasks.task);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, taskPhase, taskOrder, task);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowTaskSetTasks {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    taskPhase: ").append(toIndentedString(taskPhase)).append("\n");
    sb.append("    taskOrder: ").append(toIndentedString(taskOrder)).append("\n");
    sb.append("    task: ").append(toIndentedString(task)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

