/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.InstanceCreateInstanceInstanceType;
import org.openapitools.client.model.InstanceCreateInstanceLayout;
import org.openapitools.client.model.InstanceCreateInstancePlan;
import org.openapitools.client.model.InstanceCreateInstanceSite;

/**
 * Key for name, site, instanceType layout, and plan.
 */
@ApiModel(description = "Key for name, site, instanceType layout, and plan.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class InstanceCreateInstance {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SITE = "site";
  @SerializedName(SERIALIZED_NAME_SITE)
  private InstanceCreateInstanceSite site;

  public static final String SERIALIZED_NAME_INSTANCE_TYPE = "instanceType";
  @SerializedName(SERIALIZED_NAME_INSTANCE_TYPE)
  private InstanceCreateInstanceInstanceType instanceType;

  public static final String SERIALIZED_NAME_LAYOUT = "layout";
  @SerializedName(SERIALIZED_NAME_LAYOUT)
  private InstanceCreateInstanceLayout layout;

  public static final String SERIALIZED_NAME_PLAN = "plan";
  @SerializedName(SERIALIZED_NAME_PLAN)
  private InstanceCreateInstancePlan plan;

  public static final String SERIALIZED_NAME_INSTANCE_CONTEXT = "instanceContext";
  @SerializedName(SERIALIZED_NAME_INSTANCE_CONTEXT)
  private String instanceContext;


  public InstanceCreateInstance name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the instance to be created.
   * @return name
  **/
  @ApiModelProperty(example = "myinstance", required = true, value = "Name of the instance to be created.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public InstanceCreateInstance site(InstanceCreateInstanceSite site) {
    
    this.site = site;
    return this;
  }

   /**
   * Get site
   * @return site
  **/
  @ApiModelProperty(required = true, value = "")

  public InstanceCreateInstanceSite getSite() {
    return site;
  }


  public void setSite(InstanceCreateInstanceSite site) {
    this.site = site;
  }


  public InstanceCreateInstance instanceType(InstanceCreateInstanceInstanceType instanceType) {
    
    this.instanceType = instanceType;
    return this;
  }

   /**
   * Get instanceType
   * @return instanceType
  **/
  @ApiModelProperty(required = true, value = "")

  public InstanceCreateInstanceInstanceType getInstanceType() {
    return instanceType;
  }


  public void setInstanceType(InstanceCreateInstanceInstanceType instanceType) {
    this.instanceType = instanceType;
  }


  public InstanceCreateInstance layout(InstanceCreateInstanceLayout layout) {
    
    this.layout = layout;
    return this;
  }

   /**
   * Get layout
   * @return layout
  **/
  @ApiModelProperty(required = true, value = "")

  public InstanceCreateInstanceLayout getLayout() {
    return layout;
  }


  public void setLayout(InstanceCreateInstanceLayout layout) {
    this.layout = layout;
  }


  public InstanceCreateInstance plan(InstanceCreateInstancePlan plan) {
    
    this.plan = plan;
    return this;
  }

   /**
   * Get plan
   * @return plan
  **/
  @ApiModelProperty(required = true, value = "")

  public InstanceCreateInstancePlan getPlan() {
    return plan;
  }


  public void setPlan(InstanceCreateInstancePlan plan) {
    this.plan = plan;
  }


  public InstanceCreateInstance instanceContext(String instanceContext) {
    
    this.instanceContext = instanceContext;
    return this;
  }

   /**
   * Environment
   * @return instanceContext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "dev", value = "Environment")

  public String getInstanceContext() {
    return instanceContext;
  }


  public void setInstanceContext(String instanceContext) {
    this.instanceContext = instanceContext;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceCreateInstance instanceCreateInstance = (InstanceCreateInstance) o;
    return Objects.equals(this.name, instanceCreateInstance.name) &&
        Objects.equals(this.site, instanceCreateInstance.site) &&
        Objects.equals(this.instanceType, instanceCreateInstance.instanceType) &&
        Objects.equals(this.layout, instanceCreateInstance.layout) &&
        Objects.equals(this.plan, instanceCreateInstance.plan) &&
        Objects.equals(this.instanceContext, instanceCreateInstance.instanceContext);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, site, instanceType, layout, plan, instanceContext);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceCreateInstance {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    site: ").append(toIndentedString(site)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    layout: ").append(toIndentedString(layout)).append("\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("    instanceContext: ").append(toIndentedString(instanceContext)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

