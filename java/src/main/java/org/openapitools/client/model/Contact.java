/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Contact
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class Contact {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_EMAIL_ADDRESS = "emailAddress";
  @SerializedName(SERIALIZED_NAME_EMAIL_ADDRESS)
  private String emailAddress;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SMS_ADDRESS = "smsAddress";
  @SerializedName(SERIALIZED_NAME_SMS_ADDRESS)
  private String smsAddress;

  public static final String SERIALIZED_NAME_SLACK_HOOK = "slackHook";
  @SerializedName(SERIALIZED_NAME_SLACK_HOOK)
  private String slackHook;


  public Contact id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public Contact emailAddress(String emailAddress) {
    
    this.emailAddress = emailAddress;
    return this;
  }

   /**
   * Get emailAddress
   * @return emailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmailAddress() {
    return emailAddress;
  }


  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }


  public Contact name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Contact smsAddress(String smsAddress) {
    
    this.smsAddress = smsAddress;
    return this;
  }

   /**
   * Get smsAddress
   * @return smsAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSmsAddress() {
    return smsAddress;
  }


  public void setSmsAddress(String smsAddress) {
    this.smsAddress = smsAddress;
  }


  public Contact slackHook(String slackHook) {
    
    this.slackHook = slackHook;
    return this;
  }

   /**
   * Get slackHook
   * @return slackHook
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSlackHook() {
    return slackHook;
  }


  public void setSlackHook(String slackHook) {
    this.slackHook = slackHook;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Contact contact = (Contact) o;
    return Objects.equals(this.id, contact.id) &&
        Objects.equals(this.emailAddress, contact.emailAddress) &&
        Objects.equals(this.name, contact.name) &&
        Objects.equals(this.smsAddress, contact.smsAddress) &&
        Objects.equals(this.slackHook, contact.slackHook);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, emailAddress, name, smsAddress, slackHook);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Contact {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    smsAddress: ").append(toIndentedString(smsAddress)).append("\n");
    sb.append("    slackHook: ").append(toIndentedString(slackHook)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

