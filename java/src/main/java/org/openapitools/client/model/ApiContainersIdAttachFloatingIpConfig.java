/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * ApiContainersIdAttachFloatingIpConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ApiContainersIdAttachFloatingIpConfig {
  public static final String SERIALIZED_NAME_OS_EXTERNAL_NETWORK_ID = "osExternalNetworkId";
  @SerializedName(SERIALIZED_NAME_OS_EXTERNAL_NETWORK_ID)
  private String osExternalNetworkId;

  public static final String SERIALIZED_NAME_FLOATING_IP_BANDWIDTH = "floatingIpBandwidth";
  @SerializedName(SERIALIZED_NAME_FLOATING_IP_BANDWIDTH)
  private BigDecimal floatingIpBandwidth;


  public ApiContainersIdAttachFloatingIpConfig osExternalNetworkId(String osExternalNetworkId) {
    
    this.osExternalNetworkId = osExternalNetworkId;
    return this;
  }

   /**
   * The Floating IP identifier in the format: \&quot;ip-ID\&quot; or \&quot;pool-ID\&quot;.  The Options API /api/options/openStack/openstackFloatingIpOptions?containerId&#x3D;{{containerId}} can be used to see which options are available. 
   * @return osExternalNetworkId
  **/
  @ApiModelProperty(example = "ip-42", required = true, value = "The Floating IP identifier in the format: \"ip-ID\" or \"pool-ID\".  The Options API /api/options/openStack/openstackFloatingIpOptions?containerId={{containerId}} can be used to see which options are available. ")

  public String getOsExternalNetworkId() {
    return osExternalNetworkId;
  }


  public void setOsExternalNetworkId(String osExternalNetworkId) {
    this.osExternalNetworkId = osExternalNetworkId;
  }


  public ApiContainersIdAttachFloatingIpConfig floatingIpBandwidth(BigDecimal floatingIpBandwidth) {
    
    this.floatingIpBandwidth = floatingIpBandwidth;
    return this;
  }

   /**
   * Bandwidth (Mbit/s) Only the following cloud types support this parameter: Huawei, OpenTelekom 
   * @return floatingIpBandwidth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1024", value = "Bandwidth (Mbit/s) Only the following cloud types support this parameter: Huawei, OpenTelekom ")

  public BigDecimal getFloatingIpBandwidth() {
    return floatingIpBandwidth;
  }


  public void setFloatingIpBandwidth(BigDecimal floatingIpBandwidth) {
    this.floatingIpBandwidth = floatingIpBandwidth;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiContainersIdAttachFloatingIpConfig apiContainersIdAttachFloatingIpConfig = (ApiContainersIdAttachFloatingIpConfig) o;
    return Objects.equals(this.osExternalNetworkId, apiContainersIdAttachFloatingIpConfig.osExternalNetworkId) &&
        Objects.equals(this.floatingIpBandwidth, apiContainersIdAttachFloatingIpConfig.floatingIpBandwidth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(osExternalNetworkId, floatingIpBandwidth);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiContainersIdAttachFloatingIpConfig {\n");
    sb.append("    osExternalNetworkId: ").append(toIndentedString(osExternalNetworkId)).append("\n");
    sb.append("    floatingIpBandwidth: ").append(toIndentedString(floatingIpBandwidth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

