/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Payload for creating a new incident
 */
@ApiModel(description = "Payload for creating a new incident")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ApiMonitoringIncidentsIncident {
  public static final String SERIALIZED_NAME_RESOLUTION = "resolution";
  @SerializedName(SERIALIZED_NAME_RESOLUTION)
  private String resolution;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  /**
   * Set status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    OPEN("open"),
    
    CLOSED("closed");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  /**
   * Set severity
   */
  @JsonAdapter(SeverityEnum.Adapter.class)
  public enum SeverityEnum {
    INFO("info"),
    
    WARNING("warning"),
    
    CRITICAL("critical");

    private String value;

    SeverityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SeverityEnum fromValue(String value) {
      for (SeverityEnum b : SeverityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SeverityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SeverityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SeverityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SeverityEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SEVERITY = "severity";
  @SerializedName(SERIALIZED_NAME_SEVERITY)
  private SeverityEnum severity;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_IN_UPTIME = "inUptime";
  @SerializedName(SERIALIZED_NAME_IN_UPTIME)
  private Boolean inUptime;


  public ApiMonitoringIncidentsIncident resolution(String resolution) {
    
    this.resolution = resolution;
    return this;
  }

   /**
   * Description of the resolution to this incident
   * @return resolution
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "I plugged it back in", value = "Description of the resolution to this incident")

  public String getResolution() {
    return resolution;
  }


  public void setResolution(String resolution) {
    this.resolution = resolution;
  }


  public ApiMonitoringIncidentsIncident comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * Comment on this incident, updates summary field
   * @return comment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "This is a summary of the incident", value = "Comment on this incident, updates summary field")

  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    this.comment = comment;
  }


  public ApiMonitoringIncidentsIncident status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Set status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set status")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public ApiMonitoringIncidentsIncident severity(SeverityEnum severity) {
    
    this.severity = severity;
    return this;
  }

   /**
   * Set severity
   * @return severity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set severity")

  public SeverityEnum getSeverity() {
    return severity;
  }


  public void setSeverity(SeverityEnum severity) {
    this.severity = severity;
  }


  public ApiMonitoringIncidentsIncident name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Set display name
   * @return name
  **/
  @ApiModelProperty(example = "Incident Name", required = true, value = "Set display name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ApiMonitoringIncidentsIncident startDate(OffsetDateTime startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Set start time
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2019-10-20T19:42Z", value = "Set start time")

  public OffsetDateTime getStartDate() {
    return startDate;
  }


  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public ApiMonitoringIncidentsIncident endDate(OffsetDateTime endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Set start time
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2019-10-20T19:42Z", value = "Set start time")

  public OffsetDateTime getEndDate() {
    return endDate;
  }


  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public ApiMonitoringIncidentsIncident inUptime(Boolean inUptime) {
    
    this.inUptime = inUptime;
    return this;
  }

   /**
   * Set &#39;In Availability&#39;
   * @return inUptime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Set 'In Availability'")

  public Boolean getInUptime() {
    return inUptime;
  }


  public void setInUptime(Boolean inUptime) {
    this.inUptime = inUptime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiMonitoringIncidentsIncident apiMonitoringIncidentsIncident = (ApiMonitoringIncidentsIncident) o;
    return Objects.equals(this.resolution, apiMonitoringIncidentsIncident.resolution) &&
        Objects.equals(this.comment, apiMonitoringIncidentsIncident.comment) &&
        Objects.equals(this.status, apiMonitoringIncidentsIncident.status) &&
        Objects.equals(this.severity, apiMonitoringIncidentsIncident.severity) &&
        Objects.equals(this.name, apiMonitoringIncidentsIncident.name) &&
        Objects.equals(this.startDate, apiMonitoringIncidentsIncident.startDate) &&
        Objects.equals(this.endDate, apiMonitoringIncidentsIncident.endDate) &&
        Objects.equals(this.inUptime, apiMonitoringIncidentsIncident.inUptime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resolution, comment, status, severity, name, startDate, endDate, inUptime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiMonitoringIncidentsIncident {\n");
    sb.append("    resolution: ").append(toIndentedString(resolution)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    inUptime: ").append(toIndentedString(inUptime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

