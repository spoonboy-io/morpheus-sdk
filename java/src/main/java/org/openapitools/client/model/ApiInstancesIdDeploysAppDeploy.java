/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ApiInstancesIdDeploysAppDeploy
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ApiInstancesIdDeploysAppDeploy {
  public static final String SERIALIZED_NAME_DEPLOYMENT_ID = "deploymentId";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_ID)
  private Long deploymentId;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_VERSION_ID = "versionId";
  @SerializedName(SERIALIZED_NAME_VERSION_ID)
  private Long versionId;

  public static final String SERIALIZED_NAME_CONFIG = "config";
  @SerializedName(SERIALIZED_NAME_CONFIG)
  private Object config;

  public static final String SERIALIZED_NAME_STAGE_ONLY = "stageOnly";
  @SerializedName(SERIALIZED_NAME_STAGE_ONLY)
  private Boolean stageOnly = false;


  public ApiInstancesIdDeploysAppDeploy deploymentId(Long deploymentId) {
    
    this.deploymentId = deploymentId;
    return this;
  }

   /**
   * Deployment ID.
   * @return deploymentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deployment ID.")

  public Long getDeploymentId() {
    return deploymentId;
  }


  public void setDeploymentId(Long deploymentId) {
    this.deploymentId = deploymentId;
  }


  public ApiInstancesIdDeploysAppDeploy version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * Deployment Version number identifier (userVersion). Can be passed along with deploymentId to identify the version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deployment Version number identifier (userVersion). Can be passed along with deploymentId to identify the version")

  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  public ApiInstancesIdDeploysAppDeploy versionId(Long versionId) {
    
    this.versionId = versionId;
    return this;
  }

   /**
   * Deployment Version ID. This can be passed instead of deploymentId and version.
   * @return versionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deployment Version ID. This can be passed instead of deploymentId and version.")

  public Long getVersionId() {
    return versionId;
  }


  public void setVersionId(Long versionId) {
    this.versionId = versionId;
  }


  public ApiInstancesIdDeploysAppDeploy config(Object config) {
    
    this.config = config;
    return this;
  }

   /**
   * Map of configuration properties that vary by instance type.
   * @return config
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Map of configuration properties that vary by instance type.")

  public Object getConfig() {
    return config;
  }


  public void setConfig(Object config) {
    this.config = config;
  }


  public ApiInstancesIdDeploysAppDeploy stageOnly(Boolean stageOnly) {
    
    this.stageOnly = stageOnly;
    return this;
  }

   /**
   * Stage Only, do not run the deploy right away and instead set status to staged so it can be deployed later on.
   * @return stageOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stage Only, do not run the deploy right away and instead set status to staged so it can be deployed later on.")

  public Boolean getStageOnly() {
    return stageOnly;
  }


  public void setStageOnly(Boolean stageOnly) {
    this.stageOnly = stageOnly;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiInstancesIdDeploysAppDeploy apiInstancesIdDeploysAppDeploy = (ApiInstancesIdDeploysAppDeploy) o;
    return Objects.equals(this.deploymentId, apiInstancesIdDeploysAppDeploy.deploymentId) &&
        Objects.equals(this.version, apiInstancesIdDeploysAppDeploy.version) &&
        Objects.equals(this.versionId, apiInstancesIdDeploysAppDeploy.versionId) &&
        Objects.equals(this.config, apiInstancesIdDeploysAppDeploy.config) &&
        Objects.equals(this.stageOnly, apiInstancesIdDeploysAppDeploy.stageOnly);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deploymentId, version, versionId, config, stageOnly);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiInstancesIdDeploysAppDeploy {\n");
    sb.append("    deploymentId: ").append(toIndentedString(deploymentId)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    versionId: ").append(toIndentedString(versionId)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    stageOnly: ").append(toIndentedString(stageOnly)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

