/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Payload for creating a new monitoring contact
 */
@ApiModel(description = "Payload for creating a new monitoring contact")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ApiMonitoringContactsContact {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_EMAIL_ADDRESS = "emailAddress";
  @SerializedName(SERIALIZED_NAME_EMAIL_ADDRESS)
  private String emailAddress;

  public static final String SERIALIZED_NAME_SMS_ADDRESS = "smsAddress";
  @SerializedName(SERIALIZED_NAME_SMS_ADDRESS)
  private String smsAddress;

  public static final String SERIALIZED_NAME_SLACK_HOOK = "slackHook";
  @SerializedName(SERIALIZED_NAME_SLACK_HOOK)
  private String slackHook;


  public ApiMonitoringContactsContact name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Unique name scoped to your account for the contact
   * @return name
  **/
  @ApiModelProperty(example = "John Smith", required = true, value = "Unique name scoped to your account for the contact")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ApiMonitoringContactsContact emailAddress(String emailAddress) {
    
    this.emailAddress = emailAddress;
    return this;
  }

   /**
   * Email notification address
   * @return emailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "jsmith@email.com", value = "Email notification address")

  public String getEmailAddress() {
    return emailAddress;
  }


  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }


  public ApiMonitoringContactsContact smsAddress(String smsAddress) {
    
    this.smsAddress = smsAddress;
    return this;
  }

   /**
   * SMS notification address
   * @return smsAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "555-555-5555", value = "SMS notification address")

  public String getSmsAddress() {
    return smsAddress;
  }


  public void setSmsAddress(String smsAddress) {
    this.smsAddress = smsAddress;
  }


  public ApiMonitoringContactsContact slackHook(String slackHook) {
    
    this.slackHook = slackHook;
    return this;
  }

   /**
   * Slack Hook
   * @return slackHook
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX", value = "Slack Hook")

  public String getSlackHook() {
    return slackHook;
  }


  public void setSlackHook(String slackHook) {
    this.slackHook = slackHook;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiMonitoringContactsContact apiMonitoringContactsContact = (ApiMonitoringContactsContact) o;
    return Objects.equals(this.name, apiMonitoringContactsContact.name) &&
        Objects.equals(this.emailAddress, apiMonitoringContactsContact.emailAddress) &&
        Objects.equals(this.smsAddress, apiMonitoringContactsContact.smsAddress) &&
        Objects.equals(this.slackHook, apiMonitoringContactsContact.slackHook);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, emailAddress, smsAddress, slackHook);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiMonitoringContactsContact {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    smsAddress: ").append(toIndentedString(smsAddress)).append("\n");
    sb.append("    slackHook: ").append(toIndentedString(slackHook)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

