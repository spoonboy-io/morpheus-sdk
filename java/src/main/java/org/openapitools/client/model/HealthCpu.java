/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * HealthCpu
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class HealthCpu {
  public static final String SERIALIZED_NAME_SUCCESS = "success";
  @SerializedName(SERIALIZED_NAME_SUCCESS)
  private Boolean success;

  public static final String SERIALIZED_NAME_CPU_LOAD = "cpuLoad";
  @SerializedName(SERIALIZED_NAME_CPU_LOAD)
  private Long cpuLoad;

  public static final String SERIALIZED_NAME_CPU_TOTAL_LOAD = "cpuTotalLoad";
  @SerializedName(SERIALIZED_NAME_CPU_TOTAL_LOAD)
  private Long cpuTotalLoad;

  public static final String SERIALIZED_NAME_PROCESSOR_COUNT = "processorCount";
  @SerializedName(SERIALIZED_NAME_PROCESSOR_COUNT)
  private Long processorCount;

  public static final String SERIALIZED_NAME_PROCESS_TIME = "processTime";
  @SerializedName(SERIALIZED_NAME_PROCESS_TIME)
  private Long processTime;

  public static final String SERIALIZED_NAME_SYSTEM_LOAD = "systemLoad";
  @SerializedName(SERIALIZED_NAME_SYSTEM_LOAD)
  private BigDecimal systemLoad;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;


  public HealthCpu success(Boolean success) {
    
    this.success = success;
    return this;
  }

   /**
   * Get success
   * @return success
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSuccess() {
    return success;
  }


  public void setSuccess(Boolean success) {
    this.success = success;
  }


  public HealthCpu cpuLoad(Long cpuLoad) {
    
    this.cpuLoad = cpuLoad;
    return this;
  }

   /**
   * Get cpuLoad
   * @return cpuLoad
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getCpuLoad() {
    return cpuLoad;
  }


  public void setCpuLoad(Long cpuLoad) {
    this.cpuLoad = cpuLoad;
  }


  public HealthCpu cpuTotalLoad(Long cpuTotalLoad) {
    
    this.cpuTotalLoad = cpuTotalLoad;
    return this;
  }

   /**
   * Get cpuTotalLoad
   * @return cpuTotalLoad
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getCpuTotalLoad() {
    return cpuTotalLoad;
  }


  public void setCpuTotalLoad(Long cpuTotalLoad) {
    this.cpuTotalLoad = cpuTotalLoad;
  }


  public HealthCpu processorCount(Long processorCount) {
    
    this.processorCount = processorCount;
    return this;
  }

   /**
   * Get processorCount
   * @return processorCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getProcessorCount() {
    return processorCount;
  }


  public void setProcessorCount(Long processorCount) {
    this.processorCount = processorCount;
  }


  public HealthCpu processTime(Long processTime) {
    
    this.processTime = processTime;
    return this;
  }

   /**
   * Get processTime
   * @return processTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getProcessTime() {
    return processTime;
  }


  public void setProcessTime(Long processTime) {
    this.processTime = processTime;
  }


  public HealthCpu systemLoad(BigDecimal systemLoad) {
    
    this.systemLoad = systemLoad;
    return this;
  }

   /**
   * Get systemLoad
   * @return systemLoad
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getSystemLoad() {
    return systemLoad;
  }


  public void setSystemLoad(BigDecimal systemLoad) {
    this.systemLoad = systemLoad;
  }


  public HealthCpu status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HealthCpu healthCpu = (HealthCpu) o;
    return Objects.equals(this.success, healthCpu.success) &&
        Objects.equals(this.cpuLoad, healthCpu.cpuLoad) &&
        Objects.equals(this.cpuTotalLoad, healthCpu.cpuTotalLoad) &&
        Objects.equals(this.processorCount, healthCpu.processorCount) &&
        Objects.equals(this.processTime, healthCpu.processTime) &&
        Objects.equals(this.systemLoad, healthCpu.systemLoad) &&
        Objects.equals(this.status, healthCpu.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(success, cpuLoad, cpuTotalLoad, processorCount, processTime, systemLoad, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HealthCpu {\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    cpuLoad: ").append(toIndentedString(cpuLoad)).append("\n");
    sb.append("    cpuTotalLoad: ").append(toIndentedString(cpuTotalLoad)).append("\n");
    sb.append("    processorCount: ").append(toIndentedString(processorCount)).append("\n");
    sb.append("    processTime: ").append(toIndentedString(processTime)).append("\n");
    sb.append("    systemLoad: ").append(toIndentedString(systemLoad)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

