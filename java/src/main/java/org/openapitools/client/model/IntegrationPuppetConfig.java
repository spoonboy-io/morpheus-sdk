/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * IntegrationPuppetConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class IntegrationPuppetConfig {
  public static final String SERIALIZED_NAME_PUPPET_MASTER = "puppetMaster";
  @SerializedName(SERIALIZED_NAME_PUPPET_MASTER)
  private String puppetMaster;

  public static final String SERIALIZED_NAME_PUPPET_FIRE_NOW = "puppetFireNow";
  @SerializedName(SERIALIZED_NAME_PUPPET_FIRE_NOW)
  private String puppetFireNow;

  public static final String SERIALIZED_NAME_PUPPET_SSH_USER = "puppetSshUser";
  @SerializedName(SERIALIZED_NAME_PUPPET_SSH_USER)
  private String puppetSshUser;

  public static final String SERIALIZED_NAME_PUPPET_SSH_PASSWORD = "puppetSshPassword";
  @SerializedName(SERIALIZED_NAME_PUPPET_SSH_PASSWORD)
  private String puppetSshPassword;

  public static final String SERIALIZED_NAME_PUPPET_SSH_PASSWORD_HASH = "puppetSshPasswordHash";
  @SerializedName(SERIALIZED_NAME_PUPPET_SSH_PASSWORD_HASH)
  private String puppetSshPasswordHash;


  public IntegrationPuppetConfig puppetMaster(String puppetMaster) {
    
    this.puppetMaster = puppetMaster;
    return this;
  }

   /**
   * Get puppetMaster
   * @return puppetMaster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPuppetMaster() {
    return puppetMaster;
  }


  public void setPuppetMaster(String puppetMaster) {
    this.puppetMaster = puppetMaster;
  }


  public IntegrationPuppetConfig puppetFireNow(String puppetFireNow) {
    
    this.puppetFireNow = puppetFireNow;
    return this;
  }

   /**
   * Get puppetFireNow
   * @return puppetFireNow
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPuppetFireNow() {
    return puppetFireNow;
  }


  public void setPuppetFireNow(String puppetFireNow) {
    this.puppetFireNow = puppetFireNow;
  }


  public IntegrationPuppetConfig puppetSshUser(String puppetSshUser) {
    
    this.puppetSshUser = puppetSshUser;
    return this;
  }

   /**
   * Get puppetSshUser
   * @return puppetSshUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPuppetSshUser() {
    return puppetSshUser;
  }


  public void setPuppetSshUser(String puppetSshUser) {
    this.puppetSshUser = puppetSshUser;
  }


  public IntegrationPuppetConfig puppetSshPassword(String puppetSshPassword) {
    
    this.puppetSshPassword = puppetSshPassword;
    return this;
  }

   /**
   * Get puppetSshPassword
   * @return puppetSshPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPuppetSshPassword() {
    return puppetSshPassword;
  }


  public void setPuppetSshPassword(String puppetSshPassword) {
    this.puppetSshPassword = puppetSshPassword;
  }


  public IntegrationPuppetConfig puppetSshPasswordHash(String puppetSshPasswordHash) {
    
    this.puppetSshPasswordHash = puppetSshPasswordHash;
    return this;
  }

   /**
   * Get puppetSshPasswordHash
   * @return puppetSshPasswordHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPuppetSshPasswordHash() {
    return puppetSshPasswordHash;
  }


  public void setPuppetSshPasswordHash(String puppetSshPasswordHash) {
    this.puppetSshPasswordHash = puppetSshPasswordHash;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntegrationPuppetConfig integrationPuppetConfig = (IntegrationPuppetConfig) o;
    return Objects.equals(this.puppetMaster, integrationPuppetConfig.puppetMaster) &&
        Objects.equals(this.puppetFireNow, integrationPuppetConfig.puppetFireNow) &&
        Objects.equals(this.puppetSshUser, integrationPuppetConfig.puppetSshUser) &&
        Objects.equals(this.puppetSshPassword, integrationPuppetConfig.puppetSshPassword) &&
        Objects.equals(this.puppetSshPasswordHash, integrationPuppetConfig.puppetSshPasswordHash);
  }

  @Override
  public int hashCode() {
    return Objects.hash(puppetMaster, puppetFireNow, puppetSshUser, puppetSshPassword, puppetSshPasswordHash);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntegrationPuppetConfig {\n");
    sb.append("    puppetMaster: ").append(toIndentedString(puppetMaster)).append("\n");
    sb.append("    puppetFireNow: ").append(toIndentedString(puppetFireNow)).append("\n");
    sb.append("    puppetSshUser: ").append(toIndentedString(puppetSshUser)).append("\n");
    sb.append("    puppetSshPassword: ").append(toIndentedString(puppetSshPassword)).append("\n");
    sb.append("    puppetSshPasswordHash: ").append(toIndentedString(puppetSshPasswordHash)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

