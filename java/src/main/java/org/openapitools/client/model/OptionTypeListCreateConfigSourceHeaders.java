/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * OptionTypeListCreateConfigSourceHeaders
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class OptionTypeListCreateConfigSourceHeaders {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  private String value;

  public static final String SERIALIZED_NAME_MASKED = "masked";
  @SerializedName(SERIALIZED_NAME_MASKED)
  private Boolean masked = false;


  public OptionTypeListCreateConfigSourceHeaders name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Header name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Header name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public OptionTypeListCreateConfigSourceHeaders value(String value) {
    
    this.value = value;
    return this;
  }

   /**
   * Header value
   * @return value
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Header value")

  public String getValue() {
    return value;
  }


  public void setValue(String value) {
    this.value = value;
  }


  public OptionTypeListCreateConfigSourceHeaders masked(Boolean masked) {
    
    this.masked = masked;
    return this;
  }

   /**
   * Can be used to enable / disable masking of value
   * @return masked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Can be used to enable / disable masking of value")

  public Boolean getMasked() {
    return masked;
  }


  public void setMasked(Boolean masked) {
    this.masked = masked;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OptionTypeListCreateConfigSourceHeaders optionTypeListCreateConfigSourceHeaders = (OptionTypeListCreateConfigSourceHeaders) o;
    return Objects.equals(this.name, optionTypeListCreateConfigSourceHeaders.name) &&
        Objects.equals(this.value, optionTypeListCreateConfigSourceHeaders.value) &&
        Objects.equals(this.masked, optionTypeListCreateConfigSourceHeaders.masked);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, value, masked);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OptionTypeListCreateConfigSourceHeaders {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    masked: ").append(toIndentedString(masked)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

