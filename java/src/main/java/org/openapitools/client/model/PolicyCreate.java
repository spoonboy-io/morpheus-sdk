/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.AnyOfobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobject;
import org.openapitools.client.model.PolicyCreatePolicyType;

/**
 * PolicyCreate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class PolicyCreate {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_POLICY_TYPE = "policyType";
  @SerializedName(SERIALIZED_NAME_POLICY_TYPE)
  private PolicyCreatePolicyType policyType;

  public static final String SERIALIZED_NAME_CONFIG = "config";
  @SerializedName(SERIALIZED_NAME_CONFIG)
  private AnyOfobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobject config = null;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled = true;

  /**
   * Scope object type.  If none specified, will default to Global (null)
   */
  @JsonAdapter(RefTypeEnum.Adapter.class)
  public enum RefTypeEnum {
    NULL("null"),
    
    COMPUTESITE("ComputeSite"),
    
    COMPUTEZONE("ComputeZone"),
    
    USER("User"),
    
    ROLE("Role"),
    
    NETWORK("Network"),
    
    PLAN("Plan");

    private String value;

    RefTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RefTypeEnum fromValue(String value) {
      for (RefTypeEnum b : RefTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<RefTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RefTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RefTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RefTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_REF_TYPE = "refType";
  @SerializedName(SERIALIZED_NAME_REF_TYPE)
  private RefTypeEnum refType = RefTypeEnum.NULL;

  public static final String SERIALIZED_NAME_REF_ID = "refId";
  @SerializedName(SERIALIZED_NAME_REF_ID)
  private Long refId;

  public static final String SERIALIZED_NAME_ACCOUNTS = "accounts";
  @SerializedName(SERIALIZED_NAME_ACCOUNTS)
  private List<Long> accounts = null;

  public static final String SERIALIZED_NAME_EACH_USER = "eachUser";
  @SerializedName(SERIALIZED_NAME_EACH_USER)
  private Boolean eachUser;


  public PolicyCreate name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * A name for the policy
   * @return name
  **/
  @ApiModelProperty(example = "Sample Policy", required = true, value = "A name for the policy")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public PolicyCreate description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A description for the policy
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for the policy")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public PolicyCreate policyType(PolicyCreatePolicyType policyType) {
    
    this.policyType = policyType;
    return this;
  }

   /**
   * Get policyType
   * @return policyType
  **/
  @ApiModelProperty(required = true, value = "")

  public PolicyCreatePolicyType getPolicyType() {
    return policyType;
  }


  public void setPolicyType(PolicyCreatePolicyType policyType) {
    this.policyType = policyType;
  }


  public PolicyCreate config(AnyOfobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobject config) {
    
    this.config = config;
    return this;
  }

   /**
   * A map of config values. The expected values vary by policy type. See &#x60;Retrieves all Policy Types&#x60; endpoint for &#x60;fieldName&#x60;(s) of required options.
   * @return config
  **/
  @ApiModelProperty(required = true, value = "A map of config values. The expected values vary by policy type. See `Retrieves all Policy Types` endpoint for `fieldName`(s) of required options.")

  public AnyOfobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobject getConfig() {
    return config;
  }


  public void setConfig(AnyOfobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobjectobject config) {
    this.config = config;
  }


  public PolicyCreate enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Set to false to disable
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set to false to disable")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public PolicyCreate refType(RefTypeEnum refType) {
    
    this.refType = refType;
    return this;
  }

   /**
   * Scope object type.  If none specified, will default to Global (null)
   * @return refType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Scope object type.  If none specified, will default to Global (null)")

  public RefTypeEnum getRefType() {
    return refType;
  }


  public void setRefType(RefTypeEnum refType) {
    this.refType = refType;
  }


  public PolicyCreate refId(Long refId) {
    
    this.refId = refId;
    return this;
  }

   /**
   * Scope object ID (&#x60;group&#x60;,&#x60;cloud&#x60;,&#x60;user&#x60;, etc)
   * @return refId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Scope object ID (`group`,`cloud`,`user`, etc)")

  public Long getRefId() {
    return refId;
  }


  public void setRefId(Long refId) {
    this.refId = refId;
  }


  public PolicyCreate accounts(List<Long> accounts) {
    
    this.accounts = accounts;
    return this;
  }

  public PolicyCreate addAccountsItem(Long accountsItem) {
    if (this.accounts == null) {
      this.accounts = new ArrayList<Long>();
    }
    this.accounts.add(accountsItem);
    return this;
  }

   /**
   * Array of tenants to scope the policy to
   * @return accounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array of tenants to scope the policy to")

  public List<Long> getAccounts() {
    return accounts;
  }


  public void setAccounts(List<Long> accounts) {
    this.accounts = accounts;
  }


  public PolicyCreate eachUser(Boolean eachUser) {
    
    this.eachUser = eachUser;
    return this;
  }

   /**
   * Apply individually to each user in role.  Only when &#x60;refType&#x60; equals &#x60;Role&#x60;
   * @return eachUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Apply individually to each user in role.  Only when `refType` equals `Role`")

  public Boolean getEachUser() {
    return eachUser;
  }


  public void setEachUser(Boolean eachUser) {
    this.eachUser = eachUser;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PolicyCreate policyCreate = (PolicyCreate) o;
    return Objects.equals(this.name, policyCreate.name) &&
        Objects.equals(this.description, policyCreate.description) &&
        Objects.equals(this.policyType, policyCreate.policyType) &&
        Objects.equals(this.config, policyCreate.config) &&
        Objects.equals(this.enabled, policyCreate.enabled) &&
        Objects.equals(this.refType, policyCreate.refType) &&
        Objects.equals(this.refId, policyCreate.refId) &&
        Objects.equals(this.accounts, policyCreate.accounts) &&
        Objects.equals(this.eachUser, policyCreate.eachUser);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, policyType, config, enabled, refType, refId, accounts, eachUser);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PolicyCreate {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    policyType: ").append(toIndentedString(policyType)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    refType: ").append(toIndentedString(refType)).append("\n");
    sb.append("    refId: ").append(toIndentedString(refId)).append("\n");
    sb.append("    accounts: ").append(toIndentedString(accounts)).append("\n");
    sb.append("    eachUser: ").append(toIndentedString(eachUser)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

