/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.ApiServersIdInstallAgentServerServerOs;

/**
 * Object containing server configuration parameters
 */
@ApiModel(description = "Object containing server configuration parameters")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ApiServersIdInstallAgentServer {
  public static final String SERIALIZED_NAME_SSH_USERNAME = "sshUsername";
  @SerializedName(SERIALIZED_NAME_SSH_USERNAME)
  private String sshUsername;

  public static final String SERIALIZED_NAME_SSH_PASSWORD = "sshPassword";
  @SerializedName(SERIALIZED_NAME_SSH_PASSWORD)
  private String sshPassword;

  public static final String SERIALIZED_NAME_SERVER_OS = "serverOs";
  @SerializedName(SERIALIZED_NAME_SERVER_OS)
  private ApiServersIdInstallAgentServerServerOs serverOs;


  public ApiServersIdInstallAgentServer sshUsername(String sshUsername) {
    
    this.sshUsername = sshUsername;
    return this;
  }

   /**
   * SSH username to use when provisioning
   * @return sshUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "SSH username to use when provisioning")

  public String getSshUsername() {
    return sshUsername;
  }


  public void setSshUsername(String sshUsername) {
    this.sshUsername = sshUsername;
  }


  public ApiServersIdInstallAgentServer sshPassword(String sshPassword) {
    
    this.sshPassword = sshPassword;
    return this;
  }

   /**
   * SSH password to use, if not specified the account public key can be used
   * @return sshPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "SSH password to use, if not specified the account public key can be used")

  public String getSshPassword() {
    return sshPassword;
  }


  public void setSshPassword(String sshPassword) {
    this.sshPassword = sshPassword;
  }


  public ApiServersIdInstallAgentServer serverOs(ApiServersIdInstallAgentServerServerOs serverOs) {
    
    this.serverOs = serverOs;
    return this;
  }

   /**
   * Get serverOs
   * @return serverOs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ApiServersIdInstallAgentServerServerOs getServerOs() {
    return serverOs;
  }


  public void setServerOs(ApiServersIdInstallAgentServerServerOs serverOs) {
    this.serverOs = serverOs;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiServersIdInstallAgentServer apiServersIdInstallAgentServer = (ApiServersIdInstallAgentServer) o;
    return Objects.equals(this.sshUsername, apiServersIdInstallAgentServer.sshUsername) &&
        Objects.equals(this.sshPassword, apiServersIdInstallAgentServer.sshPassword) &&
        Objects.equals(this.serverOs, apiServersIdInstallAgentServer.serverOs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sshUsername, sshPassword, serverOs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiServersIdInstallAgentServer {\n");
    sb.append("    sshUsername: ").append(toIndentedString(sshUsername)).append("\n");
    sb.append("    sshPassword: ").append(toIndentedString(sshPassword)).append("\n");
    sb.append("    serverOs: ").append(toIndentedString(serverOs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

