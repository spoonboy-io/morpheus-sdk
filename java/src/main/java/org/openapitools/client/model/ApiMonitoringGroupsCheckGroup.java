/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Payload for creating a new monitoring check group
 */
@ApiModel(description = "Payload for creating a new monitoring check group")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ApiMonitoringGroupsCheckGroup {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_MIN_HAPPY = "minHappy";
  @SerializedName(SERIALIZED_NAME_MIN_HAPPY)
  private Integer minHappy = 1;

  public static final String SERIALIZED_NAME_IN_UPTIME = "inUptime";
  @SerializedName(SERIALIZED_NAME_IN_UPTIME)
  private Boolean inUptime = true;

  /**
   * Determines the maximum severity level this group can incur on an incident when failing
   */
  @JsonAdapter(SeverityEnum.Adapter.class)
  public enum SeverityEnum {
    INFO("info"),
    
    WARNING("warning"),
    
    CRITICAL("critical");

    private String value;

    SeverityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SeverityEnum fromValue(String value) {
      for (SeverityEnum b : SeverityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SeverityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SeverityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SeverityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SeverityEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SEVERITY = "severity";
  @SerializedName(SERIALIZED_NAME_SEVERITY)
  private SeverityEnum severity = SeverityEnum.CRITICAL;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active = true;

  public static final String SERIALIZED_NAME_CHECKS = "checks";
  @SerializedName(SERIALIZED_NAME_CHECKS)
  private List<Integer> checks = null;


  public ApiMonitoringGroupsCheckGroup name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Unique name scoped to your account for the check group
   * @return name
  **/
  @ApiModelProperty(example = "My Check Group", required = true, value = "Unique name scoped to your account for the check group")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ApiMonitoringGroupsCheckGroup description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Optional description field
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "My cool description", value = "Optional description field")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ApiMonitoringGroupsCheckGroup minHappy(Integer minHappy) {
    
    this.minHappy = minHappy;
    return this;
  }

   /**
   * This specifies the minimum number of checks within the group that must be happy to keep the group from becoming unhealthy.
   * @return minHappy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This specifies the minimum number of checks within the group that must be happy to keep the group from becoming unhealthy.")

  public Integer getMinHappy() {
    return minHappy;
  }


  public void setMinHappy(Integer minHappy) {
    this.minHappy = minHappy;
  }


  public ApiMonitoringGroupsCheckGroup inUptime(Boolean inUptime) {
    
    this.inUptime = inUptime;
    return this;
  }

   /**
   * Used to determine if check should affect account wide availability calculations
   * @return inUptime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Used to determine if check should affect account wide availability calculations")

  public Boolean getInUptime() {
    return inUptime;
  }


  public void setInUptime(Boolean inUptime) {
    this.inUptime = inUptime;
  }


  public ApiMonitoringGroupsCheckGroup severity(SeverityEnum severity) {
    
    this.severity = severity;
    return this;
  }

   /**
   * Determines the maximum severity level this group can incur on an incident when failing
   * @return severity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Determines the maximum severity level this group can incur on an incident when failing")

  public SeverityEnum getSeverity() {
    return severity;
  }


  public void setSeverity(SeverityEnum severity) {
    this.severity = severity;
  }


  public ApiMonitoringGroupsCheckGroup active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Used to determine if check group is active
   * @return active
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Used to determine if check group is active")

  public Boolean getActive() {
    return active;
  }


  public void setActive(Boolean active) {
    this.active = active;
  }


  public ApiMonitoringGroupsCheckGroup checks(List<Integer> checks) {
    
    this.checks = checks;
    return this;
  }

  public ApiMonitoringGroupsCheckGroup addChecksItem(Integer checksItem) {
    if (this.checks == null) {
      this.checks = new ArrayList<Integer>();
    }
    this.checks.add(checksItem);
    return this;
  }

   /**
   * Get checks
   * @return checks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getChecks() {
    return checks;
  }


  public void setChecks(List<Integer> checks) {
    this.checks = checks;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiMonitoringGroupsCheckGroup apiMonitoringGroupsCheckGroup = (ApiMonitoringGroupsCheckGroup) o;
    return Objects.equals(this.name, apiMonitoringGroupsCheckGroup.name) &&
        Objects.equals(this.description, apiMonitoringGroupsCheckGroup.description) &&
        Objects.equals(this.minHappy, apiMonitoringGroupsCheckGroup.minHappy) &&
        Objects.equals(this.inUptime, apiMonitoringGroupsCheckGroup.inUptime) &&
        Objects.equals(this.severity, apiMonitoringGroupsCheckGroup.severity) &&
        Objects.equals(this.active, apiMonitoringGroupsCheckGroup.active) &&
        Objects.equals(this.checks, apiMonitoringGroupsCheckGroup.checks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, minHappy, inUptime, severity, active, checks);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiMonitoringGroupsCheckGroup {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    minHappy: ").append(toIndentedString(minHappy)).append("\n");
    sb.append("    inUptime: ").append(toIndentedString(inUptime)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    checks: ").append(toIndentedString(checks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

