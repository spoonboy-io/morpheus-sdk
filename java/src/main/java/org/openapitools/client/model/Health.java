/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.HealthCpu;
import org.openapitools.client.model.HealthDatabase;
import org.openapitools.client.model.HealthElastic;
import org.openapitools.client.model.HealthMemory;
import org.openapitools.client.model.HealthRabbit;
import org.openapitools.client.model.HealthThreads;
import org.threeten.bp.OffsetDateTime;

/**
 * Health
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class Health {
  public static final String SERIALIZED_NAME_SUCCESS = "success";
  @SerializedName(SERIALIZED_NAME_SUCCESS)
  private Boolean success;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "statusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public static final String SERIALIZED_NAME_APPLIANCE_URL = "applianceUrl";
  @SerializedName(SERIALIZED_NAME_APPLIANCE_URL)
  private String applianceUrl;

  public static final String SERIALIZED_NAME_BUILD_VERSION = "buildVersion";
  @SerializedName(SERIALIZED_NAME_BUILD_VERSION)
  private String buildVersion;

  public static final String SERIALIZED_NAME_SETUP_NEEDED = "setupNeeded";
  @SerializedName(SERIALIZED_NAME_SETUP_NEEDED)
  private Boolean setupNeeded;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private OffsetDateTime date;

  public static final String SERIALIZED_NAME_CPU = "cpu";
  @SerializedName(SERIALIZED_NAME_CPU)
  private HealthCpu cpu;

  public static final String SERIALIZED_NAME_MEMORY = "memory";
  @SerializedName(SERIALIZED_NAME_MEMORY)
  private HealthMemory memory;

  public static final String SERIALIZED_NAME_THREADS = "threads";
  @SerializedName(SERIALIZED_NAME_THREADS)
  private HealthThreads threads;

  public static final String SERIALIZED_NAME_DATABASE = "database";
  @SerializedName(SERIALIZED_NAME_DATABASE)
  private HealthDatabase database;

  public static final String SERIALIZED_NAME_ELASTIC = "elastic";
  @SerializedName(SERIALIZED_NAME_ELASTIC)
  private HealthElastic elastic;

  public static final String SERIALIZED_NAME_RABBIT = "rabbit";
  @SerializedName(SERIALIZED_NAME_RABBIT)
  private HealthRabbit rabbit;


  public Health success(Boolean success) {
    
    this.success = success;
    return this;
  }

   /**
   * Get success
   * @return success
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSuccess() {
    return success;
  }


  public void setSuccess(Boolean success) {
    this.success = success;
  }


  public Health statusMessage(String statusMessage) {
    
    this.statusMessage = statusMessage;
    return this;
  }

   /**
   * Get statusMessage
   * @return statusMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatusMessage() {
    return statusMessage;
  }


  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }


  public Health applianceUrl(String applianceUrl) {
    
    this.applianceUrl = applianceUrl;
    return this;
  }

   /**
   * Get applianceUrl
   * @return applianceUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getApplianceUrl() {
    return applianceUrl;
  }


  public void setApplianceUrl(String applianceUrl) {
    this.applianceUrl = applianceUrl;
  }


  public Health buildVersion(String buildVersion) {
    
    this.buildVersion = buildVersion;
    return this;
  }

   /**
   * Get buildVersion
   * @return buildVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBuildVersion() {
    return buildVersion;
  }


  public void setBuildVersion(String buildVersion) {
    this.buildVersion = buildVersion;
  }


  public Health setupNeeded(Boolean setupNeeded) {
    
    this.setupNeeded = setupNeeded;
    return this;
  }

   /**
   * Get setupNeeded
   * @return setupNeeded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSetupNeeded() {
    return setupNeeded;
  }


  public void setSetupNeeded(Boolean setupNeeded) {
    this.setupNeeded = setupNeeded;
  }


  public Health date(OffsetDateTime date) {
    
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDate() {
    return date;
  }


  public void setDate(OffsetDateTime date) {
    this.date = date;
  }


  public Health cpu(HealthCpu cpu) {
    
    this.cpu = cpu;
    return this;
  }

   /**
   * Get cpu
   * @return cpu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HealthCpu getCpu() {
    return cpu;
  }


  public void setCpu(HealthCpu cpu) {
    this.cpu = cpu;
  }


  public Health memory(HealthMemory memory) {
    
    this.memory = memory;
    return this;
  }

   /**
   * Get memory
   * @return memory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HealthMemory getMemory() {
    return memory;
  }


  public void setMemory(HealthMemory memory) {
    this.memory = memory;
  }


  public Health threads(HealthThreads threads) {
    
    this.threads = threads;
    return this;
  }

   /**
   * Get threads
   * @return threads
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HealthThreads getThreads() {
    return threads;
  }


  public void setThreads(HealthThreads threads) {
    this.threads = threads;
  }


  public Health database(HealthDatabase database) {
    
    this.database = database;
    return this;
  }

   /**
   * Get database
   * @return database
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HealthDatabase getDatabase() {
    return database;
  }


  public void setDatabase(HealthDatabase database) {
    this.database = database;
  }


  public Health elastic(HealthElastic elastic) {
    
    this.elastic = elastic;
    return this;
  }

   /**
   * Get elastic
   * @return elastic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HealthElastic getElastic() {
    return elastic;
  }


  public void setElastic(HealthElastic elastic) {
    this.elastic = elastic;
  }


  public Health rabbit(HealthRabbit rabbit) {
    
    this.rabbit = rabbit;
    return this;
  }

   /**
   * Get rabbit
   * @return rabbit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HealthRabbit getRabbit() {
    return rabbit;
  }


  public void setRabbit(HealthRabbit rabbit) {
    this.rabbit = rabbit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Health health = (Health) o;
    return Objects.equals(this.success, health.success) &&
        Objects.equals(this.statusMessage, health.statusMessage) &&
        Objects.equals(this.applianceUrl, health.applianceUrl) &&
        Objects.equals(this.buildVersion, health.buildVersion) &&
        Objects.equals(this.setupNeeded, health.setupNeeded) &&
        Objects.equals(this.date, health.date) &&
        Objects.equals(this.cpu, health.cpu) &&
        Objects.equals(this.memory, health.memory) &&
        Objects.equals(this.threads, health.threads) &&
        Objects.equals(this.database, health.database) &&
        Objects.equals(this.elastic, health.elastic) &&
        Objects.equals(this.rabbit, health.rabbit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(success, statusMessage, applianceUrl, buildVersion, setupNeeded, date, cpu, memory, threads, database, elastic, rabbit);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Health {\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    applianceUrl: ").append(toIndentedString(applianceUrl)).append("\n");
    sb.append("    buildVersion: ").append(toIndentedString(buildVersion)).append("\n");
    sb.append("    setupNeeded: ").append(toIndentedString(setupNeeded)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    cpu: ").append(toIndentedString(cpu)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    threads: ").append(toIndentedString(threads)).append("\n");
    sb.append("    database: ").append(toIndentedString(database)).append("\n");
    sb.append("    elastic: ").append(toIndentedString(elastic)).append("\n");
    sb.append("    rabbit: ").append(toIndentedString(rabbit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

