/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.AppStateInput;
import org.openapitools.client.model.AppStateOutput;
import org.openapitools.client.model.AppStateSpecs;
import org.openapitools.client.model.AppStateWorkloads;

/**
 * AppState
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class AppState {
  public static final String SERIALIZED_NAME_WORKLOADS = "workloads";
  @SerializedName(SERIALIZED_NAME_WORKLOADS)
  private List<AppStateWorkloads> workloads = null;

  public static final String SERIALIZED_NAME_IAC_DRIFT = "iacDrift";
  @SerializedName(SERIALIZED_NAME_IAC_DRIFT)
  private Boolean iacDrift;

  public static final String SERIALIZED_NAME_PLAN_RESOURCES = "planResources";
  @SerializedName(SERIALIZED_NAME_PLAN_RESOURCES)
  private List<Object> planResources = null;

  public static final String SERIALIZED_NAME_SPECS = "specs";
  @SerializedName(SERIALIZED_NAME_SPECS)
  private List<AppStateSpecs> specs = null;

  public static final String SERIALIZED_NAME_STATE_DATA = "stateData";
  @SerializedName(SERIALIZED_NAME_STATE_DATA)
  private String stateData;

  public static final String SERIALIZED_NAME_PLAN_DATA = "planData";
  @SerializedName(SERIALIZED_NAME_PLAN_DATA)
  private String planData;

  public static final String SERIALIZED_NAME_INPUT = "input";
  @SerializedName(SERIALIZED_NAME_INPUT)
  private AppStateInput input;

  public static final String SERIALIZED_NAME_OUTPUT = "output";
  @SerializedName(SERIALIZED_NAME_OUTPUT)
  private AppStateOutput output;


  public AppState workloads(List<AppStateWorkloads> workloads) {
    
    this.workloads = workloads;
    return this;
  }

  public AppState addWorkloadsItem(AppStateWorkloads workloadsItem) {
    if (this.workloads == null) {
      this.workloads = new ArrayList<AppStateWorkloads>();
    }
    this.workloads.add(workloadsItem);
    return this;
  }

   /**
   * Get workloads
   * @return workloads
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AppStateWorkloads> getWorkloads() {
    return workloads;
  }


  public void setWorkloads(List<AppStateWorkloads> workloads) {
    this.workloads = workloads;
  }


  public AppState iacDrift(Boolean iacDrift) {
    
    this.iacDrift = iacDrift;
    return this;
  }

   /**
   * Get iacDrift
   * @return iacDrift
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIacDrift() {
    return iacDrift;
  }


  public void setIacDrift(Boolean iacDrift) {
    this.iacDrift = iacDrift;
  }


  public AppState planResources(List<Object> planResources) {
    
    this.planResources = planResources;
    return this;
  }

  public AppState addPlanResourcesItem(Object planResourcesItem) {
    if (this.planResources == null) {
      this.planResources = new ArrayList<Object>();
    }
    this.planResources.add(planResourcesItem);
    return this;
  }

   /**
   * Get planResources
   * @return planResources
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getPlanResources() {
    return planResources;
  }


  public void setPlanResources(List<Object> planResources) {
    this.planResources = planResources;
  }


  public AppState specs(List<AppStateSpecs> specs) {
    
    this.specs = specs;
    return this;
  }

  public AppState addSpecsItem(AppStateSpecs specsItem) {
    if (this.specs == null) {
      this.specs = new ArrayList<AppStateSpecs>();
    }
    this.specs.add(specsItem);
    return this;
  }

   /**
   * Get specs
   * @return specs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AppStateSpecs> getSpecs() {
    return specs;
  }


  public void setSpecs(List<AppStateSpecs> specs) {
    this.specs = specs;
  }


  public AppState stateData(String stateData) {
    
    this.stateData = stateData;
    return this;
  }

   /**
   * Get stateData
   * @return stateData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStateData() {
    return stateData;
  }


  public void setStateData(String stateData) {
    this.stateData = stateData;
  }


  public AppState planData(String planData) {
    
    this.planData = planData;
    return this;
  }

   /**
   * Get planData
   * @return planData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPlanData() {
    return planData;
  }


  public void setPlanData(String planData) {
    this.planData = planData;
  }


  public AppState input(AppStateInput input) {
    
    this.input = input;
    return this;
  }

   /**
   * Get input
   * @return input
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AppStateInput getInput() {
    return input;
  }


  public void setInput(AppStateInput input) {
    this.input = input;
  }


  public AppState output(AppStateOutput output) {
    
    this.output = output;
    return this;
  }

   /**
   * Get output
   * @return output
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AppStateOutput getOutput() {
    return output;
  }


  public void setOutput(AppStateOutput output) {
    this.output = output;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppState appState = (AppState) o;
    return Objects.equals(this.workloads, appState.workloads) &&
        Objects.equals(this.iacDrift, appState.iacDrift) &&
        Objects.equals(this.planResources, appState.planResources) &&
        Objects.equals(this.specs, appState.specs) &&
        Objects.equals(this.stateData, appState.stateData) &&
        Objects.equals(this.planData, appState.planData) &&
        Objects.equals(this.input, appState.input) &&
        Objects.equals(this.output, appState.output);
  }

  @Override
  public int hashCode() {
    return Objects.hash(workloads, iacDrift, planResources, specs, stateData, planData, input, output);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppState {\n");
    sb.append("    workloads: ").append(toIndentedString(workloads)).append("\n");
    sb.append("    iacDrift: ").append(toIndentedString(iacDrift)).append("\n");
    sb.append("    planResources: ").append(toIndentedString(planResources)).append("\n");
    sb.append("    specs: ").append(toIndentedString(specs)).append("\n");
    sb.append("    stateData: ").append(toIndentedString(stateData)).append("\n");
    sb.append("    planData: ").append(toIndentedString(planData)).append("\n");
    sb.append("    input: ").append(toIndentedString(input)).append("\n");
    sb.append("    output: ").append(toIndentedString(output)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

