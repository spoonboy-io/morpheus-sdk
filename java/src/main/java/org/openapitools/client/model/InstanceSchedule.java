/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.InstanceScheduleThreshold;
import org.threeten.bp.OffsetDateTime;

/**
 * InstanceSchedule
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class InstanceSchedule {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  /**
   * Gets or Sets scheduleType
   */
  @JsonAdapter(ScheduleTypeEnum.Adapter.class)
  public enum ScheduleTypeEnum {
    DAYOFWEEK("dayOfWeek"),
    
    EXACT("exact");

    private String value;

    ScheduleTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ScheduleTypeEnum fromValue(String value) {
      for (ScheduleTypeEnum b : ScheduleTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ScheduleTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ScheduleTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ScheduleTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ScheduleTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SCHEDULE_TYPE = "scheduleType";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_TYPE)
  private ScheduleTypeEnum scheduleType = ScheduleTypeEnum.DAYOFWEEK;

  public static final String SERIALIZED_NAME_SCHEDULE_TIMEZONE = "scheduleTimezone";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_TIMEZONE)
  private String scheduleTimezone = "UTC";

  public static final String SERIALIZED_NAME_START_DAY_OF_WEEK = "startDayOfWeek";
  @SerializedName(SERIALIZED_NAME_START_DAY_OF_WEEK)
  private Integer startDayOfWeek;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  public static final String SERIALIZED_NAME_END_DAY_OF_WEEK = "endDayOfWeek";
  @SerializedName(SERIALIZED_NAME_END_DAY_OF_WEEK)
  private Integer endDayOfWeek;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_START_DISPLAY = "startDisplay";
  @SerializedName(SERIALIZED_NAME_START_DISPLAY)
  private String startDisplay;

  public static final String SERIALIZED_NAME_END_DISPLAY = "endDisplay";
  @SerializedName(SERIALIZED_NAME_END_DISPLAY)
  private String endDisplay;

  public static final String SERIALIZED_NAME_THRESHOLD = "threshold";
  @SerializedName(SERIALIZED_NAME_THRESHOLD)
  private InstanceScheduleThreshold threshold;

  public static final String SERIALIZED_NAME_DATE_CREATED = "dateCreated";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_LAST_UPDATED = "lastUpdated";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
  private OffsetDateTime lastUpdated;


  public InstanceSchedule id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public InstanceSchedule scheduleType(ScheduleTypeEnum scheduleType) {
    
    this.scheduleType = scheduleType;
    return this;
  }

   /**
   * Get scheduleType
   * @return scheduleType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ScheduleTypeEnum getScheduleType() {
    return scheduleType;
  }


  public void setScheduleType(ScheduleTypeEnum scheduleType) {
    this.scheduleType = scheduleType;
  }


  public InstanceSchedule scheduleTimezone(String scheduleTimezone) {
    
    this.scheduleTimezone = scheduleTimezone;
    return this;
  }

   /**
   * Time Zone eg. America/New_York, Europe/Amsterdam, etc. Only used and required for scheduleType &#x60;dayOfWeek&#x60;
   * @return scheduleTimezone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Time Zone eg. America/New_York, Europe/Amsterdam, etc. Only used and required for scheduleType `dayOfWeek`")

  public String getScheduleTimezone() {
    return scheduleTimezone;
  }


  public void setScheduleTimezone(String scheduleTimezone) {
    this.scheduleTimezone = scheduleTimezone;
  }


  public InstanceSchedule startDayOfWeek(Integer startDayOfWeek) {
    
    this.startDayOfWeek = startDayOfWeek;
    return this;
  }

   /**
   * Start day of the week 1-7 (Sun-Sat). Only used and required for scheduleType &#x60;dayOfWeek&#x60;
   * @return startDayOfWeek
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Start day of the week 1-7 (Sun-Sat). Only used and required for scheduleType `dayOfWeek`")

  public Integer getStartDayOfWeek() {
    return startDayOfWeek;
  }


  public void setStartDayOfWeek(Integer startDayOfWeek) {
    this.startDayOfWeek = startDayOfWeek;
  }


  public InstanceSchedule startTime(String startTime) {
    
    this.startTime = startTime;
    return this;
  }

   /**
   * Start time of the day in 24-hour format. Only used and required for scheduleType &#x60;dayOfWeek&#x60;
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "01:00", value = "Start time of the day in 24-hour format. Only used and required for scheduleType `dayOfWeek`")

  public String getStartTime() {
    return startTime;
  }


  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public InstanceSchedule endDayOfWeek(Integer endDayOfWeek) {
    
    this.endDayOfWeek = endDayOfWeek;
    return this;
  }

   /**
   * End day of the week 1-7 (Sun-Sat). Only used and required for scheduleType &#x60;dayOfWeek&#x60;
   * @return endDayOfWeek
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "7", value = "End day of the week 1-7 (Sun-Sat). Only used and required for scheduleType `dayOfWeek`")

  public Integer getEndDayOfWeek() {
    return endDayOfWeek;
  }


  public void setEndDayOfWeek(Integer endDayOfWeek) {
    this.endDayOfWeek = endDayOfWeek;
  }


  public InstanceSchedule endTime(String endTime) {
    
    this.endTime = endTime;
    return this;
  }

   /**
   * End time of the day in 24-hour format. Only used and required for scheduleType &#x60;dayOfWeek&#x60;
   * @return endTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20:15", value = "End time of the day in 24-hour format. Only used and required for scheduleType `dayOfWeek`")

  public String getEndTime() {
    return endTime;
  }


  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }


  public InstanceSchedule startDate(OffsetDateTime startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Start Date. Only used and required for scheduleType &#x60;exact&#x60;
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-12-25T00:00Z", value = "Start Date. Only used and required for scheduleType `exact`")

  public OffsetDateTime getStartDate() {
    return startDate;
  }


  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public InstanceSchedule endDate(OffsetDateTime endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * End Date. Only used and required for scheduleType &#x60;exact&#x60;
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2023-01-01T00:00Z", value = "End Date. Only used and required for scheduleType `exact`")

  public OffsetDateTime getEndDate() {
    return endDate;
  }


  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public InstanceSchedule startDisplay(String startDisplay) {
    
    this.startDisplay = startDisplay;
    return this;
  }

   /**
   * Start day and time or start date formatted for display
   * @return startDisplay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Sun@1:00AM", value = "Start day and time or start date formatted for display")

  public String getStartDisplay() {
    return startDisplay;
  }


  public void setStartDisplay(String startDisplay) {
    this.startDisplay = startDisplay;
  }


  public InstanceSchedule endDisplay(String endDisplay) {
    
    this.endDisplay = endDisplay;
    return this;
  }

   /**
   * End day and time or end date formatted for display
   * @return endDisplay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Fri@8:15PM", value = "End day and time or end date formatted for display")

  public String getEndDisplay() {
    return endDisplay;
  }


  public void setEndDisplay(String endDisplay) {
    this.endDisplay = endDisplay;
  }


  public InstanceSchedule threshold(InstanceScheduleThreshold threshold) {
    
    this.threshold = threshold;
    return this;
  }

   /**
   * Get threshold
   * @return threshold
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InstanceScheduleThreshold getThreshold() {
    return threshold;
  }


  public void setThreshold(InstanceScheduleThreshold threshold) {
    this.threshold = threshold;
  }


  public InstanceSchedule dateCreated(OffsetDateTime dateCreated) {
    
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * Get dateCreated
   * @return dateCreated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }


  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public InstanceSchedule lastUpdated(OffsetDateTime lastUpdated) {
    
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }


  public void setLastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceSchedule instanceSchedule = (InstanceSchedule) o;
    return Objects.equals(this.id, instanceSchedule.id) &&
        Objects.equals(this.scheduleType, instanceSchedule.scheduleType) &&
        Objects.equals(this.scheduleTimezone, instanceSchedule.scheduleTimezone) &&
        Objects.equals(this.startDayOfWeek, instanceSchedule.startDayOfWeek) &&
        Objects.equals(this.startTime, instanceSchedule.startTime) &&
        Objects.equals(this.endDayOfWeek, instanceSchedule.endDayOfWeek) &&
        Objects.equals(this.endTime, instanceSchedule.endTime) &&
        Objects.equals(this.startDate, instanceSchedule.startDate) &&
        Objects.equals(this.endDate, instanceSchedule.endDate) &&
        Objects.equals(this.startDisplay, instanceSchedule.startDisplay) &&
        Objects.equals(this.endDisplay, instanceSchedule.endDisplay) &&
        Objects.equals(this.threshold, instanceSchedule.threshold) &&
        Objects.equals(this.dateCreated, instanceSchedule.dateCreated) &&
        Objects.equals(this.lastUpdated, instanceSchedule.lastUpdated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, scheduleType, scheduleTimezone, startDayOfWeek, startTime, endDayOfWeek, endTime, startDate, endDate, startDisplay, endDisplay, threshold, dateCreated, lastUpdated);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceSchedule {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    scheduleType: ").append(toIndentedString(scheduleType)).append("\n");
    sb.append("    scheduleTimezone: ").append(toIndentedString(scheduleTimezone)).append("\n");
    sb.append("    startDayOfWeek: ").append(toIndentedString(startDayOfWeek)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endDayOfWeek: ").append(toIndentedString(endDayOfWeek)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    startDisplay: ").append(toIndentedString(startDisplay)).append("\n");
    sb.append("    endDisplay: ").append(toIndentedString(endDisplay)).append("\n");
    sb.append("    threshold: ").append(toIndentedString(threshold)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

