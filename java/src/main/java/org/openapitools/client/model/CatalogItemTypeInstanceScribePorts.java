/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CatalogItemTypeInstanceScribePorts
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class CatalogItemTypeInstanceScribePorts {
  public static final String SERIALIZED_NAME_PORT = "port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private Long port;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_LB = "lb";
  @SerializedName(SERIALIZED_NAME_LB)
  private String lb;


  public CatalogItemTypeInstanceScribePorts port(Long port) {
    
    this.port = port;
    return this;
  }

   /**
   * Port number.
   * @return port
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8080", value = "Port number.")

  public Long getPort() {
    return port;
  }


  public void setPort(Long port) {
    this.port = port;
  }


  public CatalogItemTypeInstanceScribePorts name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * A name for the port.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A name for the port.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CatalogItemTypeInstanceScribePorts lb(String lb) {
    
    this.lb = lb;
    return this;
  }

   /**
   * The load balancer protocol. HTTP, HTTPS, or TCP.
   * @return lb
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The load balancer protocol. HTTP, HTTPS, or TCP.")

  public String getLb() {
    return lb;
  }


  public void setLb(String lb) {
    this.lb = lb;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatalogItemTypeInstanceScribePorts catalogItemTypeInstanceScribePorts = (CatalogItemTypeInstanceScribePorts) o;
    return Objects.equals(this.port, catalogItemTypeInstanceScribePorts.port) &&
        Objects.equals(this.name, catalogItemTypeInstanceScribePorts.name) &&
        Objects.equals(this.lb, catalogItemTypeInstanceScribePorts.lb);
  }

  @Override
  public int hashCode() {
    return Objects.hash(port, name, lb);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatalogItemTypeInstanceScribePorts {\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    lb: ").append(toIndentedString(lb)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

