/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ApiRolesRoleAppTemplates;
import org.openapitools.client.model.ApiRolesRoleCatalogItemTypes;
import org.openapitools.client.model.ApiRolesRoleInstanceTypes;
import org.openapitools.client.model.ApiRolesRolePermissions;
import org.openapitools.client.model.ApiRolesRolePersonas;
import org.openapitools.client.model.ApiRolesRoleReportTypes;
import org.openapitools.client.model.ApiRolesRoleSites;
import org.openapitools.client.model.ApiRolesRoleTaskSets;
import org.openapitools.client.model.ApiRolesRoleTasks;
import org.openapitools.client.model.ApiRolesRoleVdiPools;
import org.openapitools.client.model.ApiRolesRoleZones;

/**
 * Payload for updating an existing role
 */
@ApiModel(description = "Payload for updating an existing role")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ApiRolesIdRole {
  public static final String SERIALIZED_NAME_AUTHORITY = "authority";
  @SerializedName(SERIALIZED_NAME_AUTHORITY)
  private String authority;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  /**
   * Set the default persona by code.
   */
  @JsonAdapter(DefaultPersonaEnum.Adapter.class)
  public enum DefaultPersonaEnum {
    STANDARD("standard"),
    
    SERVICECATALOG("serviceCatalog"),
    
    VDI("vdi");

    private String value;

    DefaultPersonaEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DefaultPersonaEnum fromValue(String value) {
      for (DefaultPersonaEnum b : DefaultPersonaEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DefaultPersonaEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DefaultPersonaEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DefaultPersonaEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DefaultPersonaEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_DEFAULT_PERSONA = "defaultPersona";
  @SerializedName(SERIALIZED_NAME_DEFAULT_PERSONA)
  private DefaultPersonaEnum defaultPersona;

  public static final String SERIALIZED_NAME_PERMISSIONS = "permissions";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS)
  private List<ApiRolesRolePermissions> permissions = null;

  /**
   * Set the default access level for for groups (sites). Only applies to user roles.
   */
  @JsonAdapter(GlobalSiteAccessEnum.Adapter.class)
  public enum GlobalSiteAccessEnum {
    FULL("full"),
    
    READ("read"),
    
    NONE("none");

    private String value;

    GlobalSiteAccessEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GlobalSiteAccessEnum fromValue(String value) {
      for (GlobalSiteAccessEnum b : GlobalSiteAccessEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<GlobalSiteAccessEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GlobalSiteAccessEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GlobalSiteAccessEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return GlobalSiteAccessEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_GLOBAL_SITE_ACCESS = "globalSiteAccess";
  @SerializedName(SERIALIZED_NAME_GLOBAL_SITE_ACCESS)
  private GlobalSiteAccessEnum globalSiteAccess;

  public static final String SERIALIZED_NAME_SITES = "sites";
  @SerializedName(SERIALIZED_NAME_SITES)
  private List<ApiRolesRoleSites> sites = null;

  /**
   * Set the default access level for for clouds (zones). Only applies to base account (tenant) roles.
   */
  @JsonAdapter(GlobalZoneAccessEnum.Adapter.class)
  public enum GlobalZoneAccessEnum {
    FULL("full"),
    
    READ("read"),
    
    NONE("none");

    private String value;

    GlobalZoneAccessEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GlobalZoneAccessEnum fromValue(String value) {
      for (GlobalZoneAccessEnum b : GlobalZoneAccessEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<GlobalZoneAccessEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GlobalZoneAccessEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GlobalZoneAccessEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return GlobalZoneAccessEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_GLOBAL_ZONE_ACCESS = "globalZoneAccess";
  @SerializedName(SERIALIZED_NAME_GLOBAL_ZONE_ACCESS)
  private GlobalZoneAccessEnum globalZoneAccess;

  public static final String SERIALIZED_NAME_ZONES = "zones";
  @SerializedName(SERIALIZED_NAME_ZONES)
  private List<ApiRolesRoleZones> zones = null;

  /**
   * Set the default access level for for instance types
   */
  @JsonAdapter(GlobalInstanceTypeAccessEnum.Adapter.class)
  public enum GlobalInstanceTypeAccessEnum {
    FULL("full"),
    
    NONE("none");

    private String value;

    GlobalInstanceTypeAccessEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GlobalInstanceTypeAccessEnum fromValue(String value) {
      for (GlobalInstanceTypeAccessEnum b : GlobalInstanceTypeAccessEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<GlobalInstanceTypeAccessEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GlobalInstanceTypeAccessEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GlobalInstanceTypeAccessEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return GlobalInstanceTypeAccessEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_GLOBAL_INSTANCE_TYPE_ACCESS = "globalInstanceTypeAccess";
  @SerializedName(SERIALIZED_NAME_GLOBAL_INSTANCE_TYPE_ACCESS)
  private GlobalInstanceTypeAccessEnum globalInstanceTypeAccess;

  public static final String SERIALIZED_NAME_INSTANCE_TYPES = "instanceTypes";
  @SerializedName(SERIALIZED_NAME_INSTANCE_TYPES)
  private List<ApiRolesRoleInstanceTypes> instanceTypes = null;

  /**
   * Set the default access level for blueprints
   */
  @JsonAdapter(GlobalAppTemplateAccessEnum.Adapter.class)
  public enum GlobalAppTemplateAccessEnum {
    FULL("full"),
    
    NONE("none");

    private String value;

    GlobalAppTemplateAccessEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GlobalAppTemplateAccessEnum fromValue(String value) {
      for (GlobalAppTemplateAccessEnum b : GlobalAppTemplateAccessEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<GlobalAppTemplateAccessEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GlobalAppTemplateAccessEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GlobalAppTemplateAccessEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return GlobalAppTemplateAccessEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_GLOBAL_APP_TEMPLATE_ACCESS = "globalAppTemplateAccess";
  @SerializedName(SERIALIZED_NAME_GLOBAL_APP_TEMPLATE_ACCESS)
  private GlobalAppTemplateAccessEnum globalAppTemplateAccess;

  public static final String SERIALIZED_NAME_APP_TEMPLATES = "appTemplates";
  @SerializedName(SERIALIZED_NAME_APP_TEMPLATES)
  private List<ApiRolesRoleAppTemplates> appTemplates = null;

  /**
   * Set the default access level for catalog item types
   */
  @JsonAdapter(GlobalCatalogItemTypeAccessEnum.Adapter.class)
  public enum GlobalCatalogItemTypeAccessEnum {
    FULL("full"),
    
    NONE("none");

    private String value;

    GlobalCatalogItemTypeAccessEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GlobalCatalogItemTypeAccessEnum fromValue(String value) {
      for (GlobalCatalogItemTypeAccessEnum b : GlobalCatalogItemTypeAccessEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<GlobalCatalogItemTypeAccessEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GlobalCatalogItemTypeAccessEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GlobalCatalogItemTypeAccessEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return GlobalCatalogItemTypeAccessEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_GLOBAL_CATALOG_ITEM_TYPE_ACCESS = "globalCatalogItemTypeAccess";
  @SerializedName(SERIALIZED_NAME_GLOBAL_CATALOG_ITEM_TYPE_ACCESS)
  private GlobalCatalogItemTypeAccessEnum globalCatalogItemTypeAccess;

  public static final String SERIALIZED_NAME_CATALOG_ITEM_TYPES = "catalogItemTypes";
  @SerializedName(SERIALIZED_NAME_CATALOG_ITEM_TYPES)
  private List<ApiRolesRoleCatalogItemTypes> catalogItemTypes = null;

  /**
   * Set the default access level for personas
   */
  @JsonAdapter(GlobalPersonaAccessEnum.Adapter.class)
  public enum GlobalPersonaAccessEnum {
    FULL("full"),
    
    NONE("none");

    private String value;

    GlobalPersonaAccessEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GlobalPersonaAccessEnum fromValue(String value) {
      for (GlobalPersonaAccessEnum b : GlobalPersonaAccessEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<GlobalPersonaAccessEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GlobalPersonaAccessEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GlobalPersonaAccessEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return GlobalPersonaAccessEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_GLOBAL_PERSONA_ACCESS = "globalPersonaAccess";
  @SerializedName(SERIALIZED_NAME_GLOBAL_PERSONA_ACCESS)
  private GlobalPersonaAccessEnum globalPersonaAccess;

  public static final String SERIALIZED_NAME_PERSONAS = "personas";
  @SerializedName(SERIALIZED_NAME_PERSONAS)
  private List<ApiRolesRolePersonas> personas = null;

  /**
   * Set the default access level for VDI pools
   */
  @JsonAdapter(GlobalVdiPoolAccessEnum.Adapter.class)
  public enum GlobalVdiPoolAccessEnum {
    FULL("full"),
    
    NONE("none");

    private String value;

    GlobalVdiPoolAccessEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GlobalVdiPoolAccessEnum fromValue(String value) {
      for (GlobalVdiPoolAccessEnum b : GlobalVdiPoolAccessEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<GlobalVdiPoolAccessEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GlobalVdiPoolAccessEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GlobalVdiPoolAccessEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return GlobalVdiPoolAccessEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_GLOBAL_VDI_POOL_ACCESS = "globalVdiPoolAccess";
  @SerializedName(SERIALIZED_NAME_GLOBAL_VDI_POOL_ACCESS)
  private GlobalVdiPoolAccessEnum globalVdiPoolAccess;

  public static final String SERIALIZED_NAME_VDI_POOLS = "vdiPools";
  @SerializedName(SERIALIZED_NAME_VDI_POOLS)
  private List<ApiRolesRoleVdiPools> vdiPools = null;

  /**
   * Set the default access level for report types
   */
  @JsonAdapter(GlobalReportTypeAccessEnum.Adapter.class)
  public enum GlobalReportTypeAccessEnum {
    FULL("full"),
    
    NONE("none");

    private String value;

    GlobalReportTypeAccessEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GlobalReportTypeAccessEnum fromValue(String value) {
      for (GlobalReportTypeAccessEnum b : GlobalReportTypeAccessEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<GlobalReportTypeAccessEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GlobalReportTypeAccessEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GlobalReportTypeAccessEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return GlobalReportTypeAccessEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_GLOBAL_REPORT_TYPE_ACCESS = "globalReportTypeAccess";
  @SerializedName(SERIALIZED_NAME_GLOBAL_REPORT_TYPE_ACCESS)
  private GlobalReportTypeAccessEnum globalReportTypeAccess;

  public static final String SERIALIZED_NAME_REPORT_TYPES = "reportTypes";
  @SerializedName(SERIALIZED_NAME_REPORT_TYPES)
  private List<ApiRolesRoleReportTypes> reportTypes = null;

  /**
   * Set the default access level for tasks
   */
  @JsonAdapter(GlobalTaskAccessEnum.Adapter.class)
  public enum GlobalTaskAccessEnum {
    FULL("full"),
    
    NONE("none");

    private String value;

    GlobalTaskAccessEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GlobalTaskAccessEnum fromValue(String value) {
      for (GlobalTaskAccessEnum b : GlobalTaskAccessEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<GlobalTaskAccessEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GlobalTaskAccessEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GlobalTaskAccessEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return GlobalTaskAccessEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_GLOBAL_TASK_ACCESS = "globalTaskAccess";
  @SerializedName(SERIALIZED_NAME_GLOBAL_TASK_ACCESS)
  private GlobalTaskAccessEnum globalTaskAccess;

  public static final String SERIALIZED_NAME_TASKS = "tasks";
  @SerializedName(SERIALIZED_NAME_TASKS)
  private List<ApiRolesRoleTasks> tasks = null;

  /**
   * Set the default access level for workflows (taskSets)
   */
  @JsonAdapter(GlobalTaskSetAccessEnum.Adapter.class)
  public enum GlobalTaskSetAccessEnum {
    FULL("full"),
    
    NONE("none");

    private String value;

    GlobalTaskSetAccessEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GlobalTaskSetAccessEnum fromValue(String value) {
      for (GlobalTaskSetAccessEnum b : GlobalTaskSetAccessEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<GlobalTaskSetAccessEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GlobalTaskSetAccessEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GlobalTaskSetAccessEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return GlobalTaskSetAccessEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_GLOBAL_TASK_SET_ACCESS = "globalTaskSetAccess";
  @SerializedName(SERIALIZED_NAME_GLOBAL_TASK_SET_ACCESS)
  private GlobalTaskSetAccessEnum globalTaskSetAccess;

  public static final String SERIALIZED_NAME_TASK_SETS = "taskSets";
  @SerializedName(SERIALIZED_NAME_TASK_SETS)
  private List<ApiRolesRoleTaskSets> taskSets = null;


  public ApiRolesIdRole authority(String authority) {
    
    this.authority = authority;
    return this;
  }

   /**
   * Authority (Name)
   * @return authority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Authority (Name)")

  public String getAuthority() {
    return authority;
  }


  public void setAuthority(String authority) {
    this.authority = authority;
  }


  public ApiRolesIdRole description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ApiRolesIdRole defaultPersona(DefaultPersonaEnum defaultPersona) {
    
    this.defaultPersona = defaultPersona;
    return this;
  }

   /**
   * Set the default persona by code.
   * @return defaultPersona
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the default persona by code.")

  public DefaultPersonaEnum getDefaultPersona() {
    return defaultPersona;
  }


  public void setDefaultPersona(DefaultPersonaEnum defaultPersona) {
    this.defaultPersona = defaultPersona;
  }


  public ApiRolesIdRole permissions(List<ApiRolesRolePermissions> permissions) {
    
    this.permissions = permissions;
    return this;
  }

  public ApiRolesIdRole addPermissionsItem(ApiRolesRolePermissions permissionsItem) {
    if (this.permissions == null) {
      this.permissions = new ArrayList<ApiRolesRolePermissions>();
    }
    this.permissions.add(permissionsItem);
    return this;
  }

   /**
   * Set the access level for the specified permissions.
   * @return permissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the access level for the specified permissions.")

  public List<ApiRolesRolePermissions> getPermissions() {
    return permissions;
  }


  public void setPermissions(List<ApiRolesRolePermissions> permissions) {
    this.permissions = permissions;
  }


  public ApiRolesIdRole globalSiteAccess(GlobalSiteAccessEnum globalSiteAccess) {
    
    this.globalSiteAccess = globalSiteAccess;
    return this;
  }

   /**
   * Set the default access level for for groups (sites). Only applies to user roles.
   * @return globalSiteAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the default access level for for groups (sites). Only applies to user roles.")

  public GlobalSiteAccessEnum getGlobalSiteAccess() {
    return globalSiteAccess;
  }


  public void setGlobalSiteAccess(GlobalSiteAccessEnum globalSiteAccess) {
    this.globalSiteAccess = globalSiteAccess;
  }


  public ApiRolesIdRole sites(List<ApiRolesRoleSites> sites) {
    
    this.sites = sites;
    return this;
  }

  public ApiRolesIdRole addSitesItem(ApiRolesRoleSites sitesItem) {
    if (this.sites == null) {
      this.sites = new ArrayList<ApiRolesRoleSites>();
    }
    this.sites.add(sitesItem);
    return this;
  }

   /**
   * Set the access level for the specified groups (sites). Only applies to user roles.
   * @return sites
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the access level for the specified groups (sites). Only applies to user roles.")

  public List<ApiRolesRoleSites> getSites() {
    return sites;
  }


  public void setSites(List<ApiRolesRoleSites> sites) {
    this.sites = sites;
  }


  public ApiRolesIdRole globalZoneAccess(GlobalZoneAccessEnum globalZoneAccess) {
    
    this.globalZoneAccess = globalZoneAccess;
    return this;
  }

   /**
   * Set the default access level for for clouds (zones). Only applies to base account (tenant) roles.
   * @return globalZoneAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the default access level for for clouds (zones). Only applies to base account (tenant) roles.")

  public GlobalZoneAccessEnum getGlobalZoneAccess() {
    return globalZoneAccess;
  }


  public void setGlobalZoneAccess(GlobalZoneAccessEnum globalZoneAccess) {
    this.globalZoneAccess = globalZoneAccess;
  }


  public ApiRolesIdRole zones(List<ApiRolesRoleZones> zones) {
    
    this.zones = zones;
    return this;
  }

  public ApiRolesIdRole addZonesItem(ApiRolesRoleZones zonesItem) {
    if (this.zones == null) {
      this.zones = new ArrayList<ApiRolesRoleZones>();
    }
    this.zones.add(zonesItem);
    return this;
  }

   /**
   * Set the access level for the specified clouds (zones). Only applies to base account (tenant) roles.
   * @return zones
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the access level for the specified clouds (zones). Only applies to base account (tenant) roles.")

  public List<ApiRolesRoleZones> getZones() {
    return zones;
  }


  public void setZones(List<ApiRolesRoleZones> zones) {
    this.zones = zones;
  }


  public ApiRolesIdRole globalInstanceTypeAccess(GlobalInstanceTypeAccessEnum globalInstanceTypeAccess) {
    
    this.globalInstanceTypeAccess = globalInstanceTypeAccess;
    return this;
  }

   /**
   * Set the default access level for for instance types
   * @return globalInstanceTypeAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the default access level for for instance types")

  public GlobalInstanceTypeAccessEnum getGlobalInstanceTypeAccess() {
    return globalInstanceTypeAccess;
  }


  public void setGlobalInstanceTypeAccess(GlobalInstanceTypeAccessEnum globalInstanceTypeAccess) {
    this.globalInstanceTypeAccess = globalInstanceTypeAccess;
  }


  public ApiRolesIdRole instanceTypes(List<ApiRolesRoleInstanceTypes> instanceTypes) {
    
    this.instanceTypes = instanceTypes;
    return this;
  }

  public ApiRolesIdRole addInstanceTypesItem(ApiRolesRoleInstanceTypes instanceTypesItem) {
    if (this.instanceTypes == null) {
      this.instanceTypes = new ArrayList<ApiRolesRoleInstanceTypes>();
    }
    this.instanceTypes.add(instanceTypesItem);
    return this;
  }

   /**
   * Set the access level for the specified instance types
   * @return instanceTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the access level for the specified instance types")

  public List<ApiRolesRoleInstanceTypes> getInstanceTypes() {
    return instanceTypes;
  }


  public void setInstanceTypes(List<ApiRolesRoleInstanceTypes> instanceTypes) {
    this.instanceTypes = instanceTypes;
  }


  public ApiRolesIdRole globalAppTemplateAccess(GlobalAppTemplateAccessEnum globalAppTemplateAccess) {
    
    this.globalAppTemplateAccess = globalAppTemplateAccess;
    return this;
  }

   /**
   * Set the default access level for blueprints
   * @return globalAppTemplateAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the default access level for blueprints")

  public GlobalAppTemplateAccessEnum getGlobalAppTemplateAccess() {
    return globalAppTemplateAccess;
  }


  public void setGlobalAppTemplateAccess(GlobalAppTemplateAccessEnum globalAppTemplateAccess) {
    this.globalAppTemplateAccess = globalAppTemplateAccess;
  }


  public ApiRolesIdRole appTemplates(List<ApiRolesRoleAppTemplates> appTemplates) {
    
    this.appTemplates = appTemplates;
    return this;
  }

  public ApiRolesIdRole addAppTemplatesItem(ApiRolesRoleAppTemplates appTemplatesItem) {
    if (this.appTemplates == null) {
      this.appTemplates = new ArrayList<ApiRolesRoleAppTemplates>();
    }
    this.appTemplates.add(appTemplatesItem);
    return this;
  }

   /**
   * Set the access level for the specified blueprints (appTemplates)
   * @return appTemplates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the access level for the specified blueprints (appTemplates)")

  public List<ApiRolesRoleAppTemplates> getAppTemplates() {
    return appTemplates;
  }


  public void setAppTemplates(List<ApiRolesRoleAppTemplates> appTemplates) {
    this.appTemplates = appTemplates;
  }


  public ApiRolesIdRole globalCatalogItemTypeAccess(GlobalCatalogItemTypeAccessEnum globalCatalogItemTypeAccess) {
    
    this.globalCatalogItemTypeAccess = globalCatalogItemTypeAccess;
    return this;
  }

   /**
   * Set the default access level for catalog item types
   * @return globalCatalogItemTypeAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the default access level for catalog item types")

  public GlobalCatalogItemTypeAccessEnum getGlobalCatalogItemTypeAccess() {
    return globalCatalogItemTypeAccess;
  }


  public void setGlobalCatalogItemTypeAccess(GlobalCatalogItemTypeAccessEnum globalCatalogItemTypeAccess) {
    this.globalCatalogItemTypeAccess = globalCatalogItemTypeAccess;
  }


  public ApiRolesIdRole catalogItemTypes(List<ApiRolesRoleCatalogItemTypes> catalogItemTypes) {
    
    this.catalogItemTypes = catalogItemTypes;
    return this;
  }

  public ApiRolesIdRole addCatalogItemTypesItem(ApiRolesRoleCatalogItemTypes catalogItemTypesItem) {
    if (this.catalogItemTypes == null) {
      this.catalogItemTypes = new ArrayList<ApiRolesRoleCatalogItemTypes>();
    }
    this.catalogItemTypes.add(catalogItemTypesItem);
    return this;
  }

   /**
   * Set the access level for the specified catalog item types
   * @return catalogItemTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the access level for the specified catalog item types")

  public List<ApiRolesRoleCatalogItemTypes> getCatalogItemTypes() {
    return catalogItemTypes;
  }


  public void setCatalogItemTypes(List<ApiRolesRoleCatalogItemTypes> catalogItemTypes) {
    this.catalogItemTypes = catalogItemTypes;
  }


  public ApiRolesIdRole globalPersonaAccess(GlobalPersonaAccessEnum globalPersonaAccess) {
    
    this.globalPersonaAccess = globalPersonaAccess;
    return this;
  }

   /**
   * Set the default access level for personas
   * @return globalPersonaAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the default access level for personas")

  public GlobalPersonaAccessEnum getGlobalPersonaAccess() {
    return globalPersonaAccess;
  }


  public void setGlobalPersonaAccess(GlobalPersonaAccessEnum globalPersonaAccess) {
    this.globalPersonaAccess = globalPersonaAccess;
  }


  public ApiRolesIdRole personas(List<ApiRolesRolePersonas> personas) {
    
    this.personas = personas;
    return this;
  }

  public ApiRolesIdRole addPersonasItem(ApiRolesRolePersonas personasItem) {
    if (this.personas == null) {
      this.personas = new ArrayList<ApiRolesRolePersonas>();
    }
    this.personas.add(personasItem);
    return this;
  }

   /**
   * Set the access level for the specified personas
   * @return personas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the access level for the specified personas")

  public List<ApiRolesRolePersonas> getPersonas() {
    return personas;
  }


  public void setPersonas(List<ApiRolesRolePersonas> personas) {
    this.personas = personas;
  }


  public ApiRolesIdRole globalVdiPoolAccess(GlobalVdiPoolAccessEnum globalVdiPoolAccess) {
    
    this.globalVdiPoolAccess = globalVdiPoolAccess;
    return this;
  }

   /**
   * Set the default access level for VDI pools
   * @return globalVdiPoolAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the default access level for VDI pools")

  public GlobalVdiPoolAccessEnum getGlobalVdiPoolAccess() {
    return globalVdiPoolAccess;
  }


  public void setGlobalVdiPoolAccess(GlobalVdiPoolAccessEnum globalVdiPoolAccess) {
    this.globalVdiPoolAccess = globalVdiPoolAccess;
  }


  public ApiRolesIdRole vdiPools(List<ApiRolesRoleVdiPools> vdiPools) {
    
    this.vdiPools = vdiPools;
    return this;
  }

  public ApiRolesIdRole addVdiPoolsItem(ApiRolesRoleVdiPools vdiPoolsItem) {
    if (this.vdiPools == null) {
      this.vdiPools = new ArrayList<ApiRolesRoleVdiPools>();
    }
    this.vdiPools.add(vdiPoolsItem);
    return this;
  }

   /**
   * Set the access level for the specified VDI pools
   * @return vdiPools
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the access level for the specified VDI pools")

  public List<ApiRolesRoleVdiPools> getVdiPools() {
    return vdiPools;
  }


  public void setVdiPools(List<ApiRolesRoleVdiPools> vdiPools) {
    this.vdiPools = vdiPools;
  }


  public ApiRolesIdRole globalReportTypeAccess(GlobalReportTypeAccessEnum globalReportTypeAccess) {
    
    this.globalReportTypeAccess = globalReportTypeAccess;
    return this;
  }

   /**
   * Set the default access level for report types
   * @return globalReportTypeAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the default access level for report types")

  public GlobalReportTypeAccessEnum getGlobalReportTypeAccess() {
    return globalReportTypeAccess;
  }


  public void setGlobalReportTypeAccess(GlobalReportTypeAccessEnum globalReportTypeAccess) {
    this.globalReportTypeAccess = globalReportTypeAccess;
  }


  public ApiRolesIdRole reportTypes(List<ApiRolesRoleReportTypes> reportTypes) {
    
    this.reportTypes = reportTypes;
    return this;
  }

  public ApiRolesIdRole addReportTypesItem(ApiRolesRoleReportTypes reportTypesItem) {
    if (this.reportTypes == null) {
      this.reportTypes = new ArrayList<ApiRolesRoleReportTypes>();
    }
    this.reportTypes.add(reportTypesItem);
    return this;
  }

   /**
   * Set the access level for the specified report types
   * @return reportTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the access level for the specified report types")

  public List<ApiRolesRoleReportTypes> getReportTypes() {
    return reportTypes;
  }


  public void setReportTypes(List<ApiRolesRoleReportTypes> reportTypes) {
    this.reportTypes = reportTypes;
  }


  public ApiRolesIdRole globalTaskAccess(GlobalTaskAccessEnum globalTaskAccess) {
    
    this.globalTaskAccess = globalTaskAccess;
    return this;
  }

   /**
   * Set the default access level for tasks
   * @return globalTaskAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the default access level for tasks")

  public GlobalTaskAccessEnum getGlobalTaskAccess() {
    return globalTaskAccess;
  }


  public void setGlobalTaskAccess(GlobalTaskAccessEnum globalTaskAccess) {
    this.globalTaskAccess = globalTaskAccess;
  }


  public ApiRolesIdRole tasks(List<ApiRolesRoleTasks> tasks) {
    
    this.tasks = tasks;
    return this;
  }

  public ApiRolesIdRole addTasksItem(ApiRolesRoleTasks tasksItem) {
    if (this.tasks == null) {
      this.tasks = new ArrayList<ApiRolesRoleTasks>();
    }
    this.tasks.add(tasksItem);
    return this;
  }

   /**
   * Set the access level for the specified tasks
   * @return tasks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the access level for the specified tasks")

  public List<ApiRolesRoleTasks> getTasks() {
    return tasks;
  }


  public void setTasks(List<ApiRolesRoleTasks> tasks) {
    this.tasks = tasks;
  }


  public ApiRolesIdRole globalTaskSetAccess(GlobalTaskSetAccessEnum globalTaskSetAccess) {
    
    this.globalTaskSetAccess = globalTaskSetAccess;
    return this;
  }

   /**
   * Set the default access level for workflows (taskSets)
   * @return globalTaskSetAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the default access level for workflows (taskSets)")

  public GlobalTaskSetAccessEnum getGlobalTaskSetAccess() {
    return globalTaskSetAccess;
  }


  public void setGlobalTaskSetAccess(GlobalTaskSetAccessEnum globalTaskSetAccess) {
    this.globalTaskSetAccess = globalTaskSetAccess;
  }


  public ApiRolesIdRole taskSets(List<ApiRolesRoleTaskSets> taskSets) {
    
    this.taskSets = taskSets;
    return this;
  }

  public ApiRolesIdRole addTaskSetsItem(ApiRolesRoleTaskSets taskSetsItem) {
    if (this.taskSets == null) {
      this.taskSets = new ArrayList<ApiRolesRoleTaskSets>();
    }
    this.taskSets.add(taskSetsItem);
    return this;
  }

   /**
   * Set the access level for the specified workflows (taskSets)
   * @return taskSets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set the access level for the specified workflows (taskSets)")

  public List<ApiRolesRoleTaskSets> getTaskSets() {
    return taskSets;
  }


  public void setTaskSets(List<ApiRolesRoleTaskSets> taskSets) {
    this.taskSets = taskSets;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiRolesIdRole apiRolesIdRole = (ApiRolesIdRole) o;
    return Objects.equals(this.authority, apiRolesIdRole.authority) &&
        Objects.equals(this.description, apiRolesIdRole.description) &&
        Objects.equals(this.defaultPersona, apiRolesIdRole.defaultPersona) &&
        Objects.equals(this.permissions, apiRolesIdRole.permissions) &&
        Objects.equals(this.globalSiteAccess, apiRolesIdRole.globalSiteAccess) &&
        Objects.equals(this.sites, apiRolesIdRole.sites) &&
        Objects.equals(this.globalZoneAccess, apiRolesIdRole.globalZoneAccess) &&
        Objects.equals(this.zones, apiRolesIdRole.zones) &&
        Objects.equals(this.globalInstanceTypeAccess, apiRolesIdRole.globalInstanceTypeAccess) &&
        Objects.equals(this.instanceTypes, apiRolesIdRole.instanceTypes) &&
        Objects.equals(this.globalAppTemplateAccess, apiRolesIdRole.globalAppTemplateAccess) &&
        Objects.equals(this.appTemplates, apiRolesIdRole.appTemplates) &&
        Objects.equals(this.globalCatalogItemTypeAccess, apiRolesIdRole.globalCatalogItemTypeAccess) &&
        Objects.equals(this.catalogItemTypes, apiRolesIdRole.catalogItemTypes) &&
        Objects.equals(this.globalPersonaAccess, apiRolesIdRole.globalPersonaAccess) &&
        Objects.equals(this.personas, apiRolesIdRole.personas) &&
        Objects.equals(this.globalVdiPoolAccess, apiRolesIdRole.globalVdiPoolAccess) &&
        Objects.equals(this.vdiPools, apiRolesIdRole.vdiPools) &&
        Objects.equals(this.globalReportTypeAccess, apiRolesIdRole.globalReportTypeAccess) &&
        Objects.equals(this.reportTypes, apiRolesIdRole.reportTypes) &&
        Objects.equals(this.globalTaskAccess, apiRolesIdRole.globalTaskAccess) &&
        Objects.equals(this.tasks, apiRolesIdRole.tasks) &&
        Objects.equals(this.globalTaskSetAccess, apiRolesIdRole.globalTaskSetAccess) &&
        Objects.equals(this.taskSets, apiRolesIdRole.taskSets);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authority, description, defaultPersona, permissions, globalSiteAccess, sites, globalZoneAccess, zones, globalInstanceTypeAccess, instanceTypes, globalAppTemplateAccess, appTemplates, globalCatalogItemTypeAccess, catalogItemTypes, globalPersonaAccess, personas, globalVdiPoolAccess, vdiPools, globalReportTypeAccess, reportTypes, globalTaskAccess, tasks, globalTaskSetAccess, taskSets);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiRolesIdRole {\n");
    sb.append("    authority: ").append(toIndentedString(authority)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    defaultPersona: ").append(toIndentedString(defaultPersona)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    globalSiteAccess: ").append(toIndentedString(globalSiteAccess)).append("\n");
    sb.append("    sites: ").append(toIndentedString(sites)).append("\n");
    sb.append("    globalZoneAccess: ").append(toIndentedString(globalZoneAccess)).append("\n");
    sb.append("    zones: ").append(toIndentedString(zones)).append("\n");
    sb.append("    globalInstanceTypeAccess: ").append(toIndentedString(globalInstanceTypeAccess)).append("\n");
    sb.append("    instanceTypes: ").append(toIndentedString(instanceTypes)).append("\n");
    sb.append("    globalAppTemplateAccess: ").append(toIndentedString(globalAppTemplateAccess)).append("\n");
    sb.append("    appTemplates: ").append(toIndentedString(appTemplates)).append("\n");
    sb.append("    globalCatalogItemTypeAccess: ").append(toIndentedString(globalCatalogItemTypeAccess)).append("\n");
    sb.append("    catalogItemTypes: ").append(toIndentedString(catalogItemTypes)).append("\n");
    sb.append("    globalPersonaAccess: ").append(toIndentedString(globalPersonaAccess)).append("\n");
    sb.append("    personas: ").append(toIndentedString(personas)).append("\n");
    sb.append("    globalVdiPoolAccess: ").append(toIndentedString(globalVdiPoolAccess)).append("\n");
    sb.append("    vdiPools: ").append(toIndentedString(vdiPools)).append("\n");
    sb.append("    globalReportTypeAccess: ").append(toIndentedString(globalReportTypeAccess)).append("\n");
    sb.append("    reportTypes: ").append(toIndentedString(reportTypes)).append("\n");
    sb.append("    globalTaskAccess: ").append(toIndentedString(globalTaskAccess)).append("\n");
    sb.append("    tasks: ").append(toIndentedString(tasks)).append("\n");
    sb.append("    globalTaskSetAccess: ").append(toIndentedString(globalTaskSetAccess)).append("\n");
    sb.append("    taskSets: ").append(toIndentedString(taskSets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

