/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.InstanceCreateNetwork;
import org.openapitools.client.model.InstanceCreateVolume;
import org.openapitools.client.model.InstanceResizeInstance;
import org.openapitools.client.model.ServicePlanOptions;

/**
 * InstanceResize
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class InstanceResize {
  public static final String SERIALIZED_NAME_INSTANCE = "instance";
  @SerializedName(SERIALIZED_NAME_INSTANCE)
  private InstanceResizeInstance instance;

  public static final String SERIALIZED_NAME_SERVICE_PLAN_OPTIONS = "servicePlanOptions";
  @SerializedName(SERIALIZED_NAME_SERVICE_PLAN_OPTIONS)
  private ServicePlanOptions servicePlanOptions;

  public static final String SERIALIZED_NAME_VOLUMES = "volumes";
  @SerializedName(SERIALIZED_NAME_VOLUMES)
  private List<InstanceCreateVolume> volumes = null;

  public static final String SERIALIZED_NAME_DELETE_ORIGINAL_VOLUMES = "deleteOriginalVolumes";
  @SerializedName(SERIALIZED_NAME_DELETE_ORIGINAL_VOLUMES)
  private Boolean deleteOriginalVolumes = false;

  public static final String SERIALIZED_NAME_NETWORK_INTERFACES = "networkInterfaces";
  @SerializedName(SERIALIZED_NAME_NETWORK_INTERFACES)
  private List<InstanceCreateNetwork> networkInterfaces = null;


  public InstanceResize instance(InstanceResizeInstance instance) {
    
    this.instance = instance;
    return this;
  }

   /**
   * Get instance
   * @return instance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InstanceResizeInstance getInstance() {
    return instance;
  }


  public void setInstance(InstanceResizeInstance instance) {
    this.instance = instance;
  }


  public InstanceResize servicePlanOptions(ServicePlanOptions servicePlanOptions) {
    
    this.servicePlanOptions = servicePlanOptions;
    return this;
  }

   /**
   * Get servicePlanOptions
   * @return servicePlanOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ServicePlanOptions getServicePlanOptions() {
    return servicePlanOptions;
  }


  public void setServicePlanOptions(ServicePlanOptions servicePlanOptions) {
    this.servicePlanOptions = servicePlanOptions;
  }


  public InstanceResize volumes(List<InstanceCreateVolume> volumes) {
    
    this.volumes = volumes;
    return this;
  }

  public InstanceResize addVolumesItem(InstanceCreateVolume volumesItem) {
    if (this.volumes == null) {
      this.volumes = new ArrayList<InstanceCreateVolume>();
    }
    this.volumes.add(volumesItem);
    return this;
  }

   /**
   * Can be used to grow just the logical volume of the instance instead of choosing a plan
   * @return volumes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Can be used to grow just the logical volume of the instance instead of choosing a plan")

  public List<InstanceCreateVolume> getVolumes() {
    return volumes;
  }


  public void setVolumes(List<InstanceCreateVolume> volumes) {
    this.volumes = volumes;
  }


  public InstanceResize deleteOriginalVolumes(Boolean deleteOriginalVolumes) {
    
    this.deleteOriginalVolumes = deleteOriginalVolumes;
    return this;
  }

   /**
   * Delete the original volumes after resizing. (Amazon only)
   * @return deleteOriginalVolumes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Delete the original volumes after resizing. (Amazon only)")

  public Boolean getDeleteOriginalVolumes() {
    return deleteOriginalVolumes;
  }


  public void setDeleteOriginalVolumes(Boolean deleteOriginalVolumes) {
    this.deleteOriginalVolumes = deleteOriginalVolumes;
  }


  public InstanceResize networkInterfaces(List<InstanceCreateNetwork> networkInterfaces) {
    
    this.networkInterfaces = networkInterfaces;
    return this;
  }

  public InstanceResize addNetworkInterfacesItem(InstanceCreateNetwork networkInterfacesItem) {
    if (this.networkInterfaces == null) {
      this.networkInterfaces = new ArrayList<InstanceCreateNetwork>();
    }
    this.networkInterfaces.add(networkInterfacesItem);
    return this;
  }

   /**
   * Key for network configuration. Include id to update an existing interface. The existing interfaces and their id can be retrieved with the hosts API.
   * @return networkInterfaces
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Key for network configuration. Include id to update an existing interface. The existing interfaces and their id can be retrieved with the hosts API.")

  public List<InstanceCreateNetwork> getNetworkInterfaces() {
    return networkInterfaces;
  }


  public void setNetworkInterfaces(List<InstanceCreateNetwork> networkInterfaces) {
    this.networkInterfaces = networkInterfaces;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceResize instanceResize = (InstanceResize) o;
    return Objects.equals(this.instance, instanceResize.instance) &&
        Objects.equals(this.servicePlanOptions, instanceResize.servicePlanOptions) &&
        Objects.equals(this.volumes, instanceResize.volumes) &&
        Objects.equals(this.deleteOriginalVolumes, instanceResize.deleteOriginalVolumes) &&
        Objects.equals(this.networkInterfaces, instanceResize.networkInterfaces);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instance, servicePlanOptions, volumes, deleteOriginalVolumes, networkInterfaces);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceResize {\n");
    sb.append("    instance: ").append(toIndentedString(instance)).append("\n");
    sb.append("    servicePlanOptions: ").append(toIndentedString(servicePlanOptions)).append("\n");
    sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
    sb.append("    deleteOriginalVolumes: ").append(toIndentedString(deleteOriginalVolumes)).append("\n");
    sb.append("    networkInterfaces: ").append(toIndentedString(networkInterfaces)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

