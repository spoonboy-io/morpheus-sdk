/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * LicenseCurrentUsage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class LicenseCurrentUsage {
  public static final String SERIALIZED_NAME_MEMORY = "memory";
  @SerializedName(SERIALIZED_NAME_MEMORY)
  private Long memory;

  public static final String SERIALIZED_NAME_STORAGE = "storage";
  @SerializedName(SERIALIZED_NAME_STORAGE)
  private Long storage;

  public static final String SERIALIZED_NAME_WORKLOADS = "workloads";
  @SerializedName(SERIALIZED_NAME_WORKLOADS)
  private Long workloads;


  public LicenseCurrentUsage memory(Long memory) {
    
    this.memory = memory;
    return this;
  }

   /**
   * Get memory
   * @return memory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getMemory() {
    return memory;
  }


  public void setMemory(Long memory) {
    this.memory = memory;
  }


  public LicenseCurrentUsage storage(Long storage) {
    
    this.storage = storage;
    return this;
  }

   /**
   * Get storage
   * @return storage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getStorage() {
    return storage;
  }


  public void setStorage(Long storage) {
    this.storage = storage;
  }


  public LicenseCurrentUsage workloads(Long workloads) {
    
    this.workloads = workloads;
    return this;
  }

   /**
   * Get workloads
   * @return workloads
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getWorkloads() {
    return workloads;
  }


  public void setWorkloads(Long workloads) {
    this.workloads = workloads;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LicenseCurrentUsage licenseCurrentUsage = (LicenseCurrentUsage) o;
    return Objects.equals(this.memory, licenseCurrentUsage.memory) &&
        Objects.equals(this.storage, licenseCurrentUsage.storage) &&
        Objects.equals(this.workloads, licenseCurrentUsage.workloads);
  }

  @Override
  public int hashCode() {
    return Objects.hash(memory, storage, workloads);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LicenseCurrentUsage {\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    storage: ").append(toIndentedString(storage)).append("\n");
    sb.append("    workloads: ").append(toIndentedString(workloads)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

