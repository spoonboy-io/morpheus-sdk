/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ZoneStatsServerCounts
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ZoneStatsServerCounts {
  public static final String SERIALIZED_NAME_ALL = "all";
  @SerializedName(SERIALIZED_NAME_ALL)
  private Long all;

  public static final String SERIALIZED_NAME_HOST = "host";
  @SerializedName(SERIALIZED_NAME_HOST)
  private Long host;

  public static final String SERIALIZED_NAME_HYPERVISOR = "hypervisor";
  @SerializedName(SERIALIZED_NAME_HYPERVISOR)
  private Long hypervisor;

  public static final String SERIALIZED_NAME_CONTAINER_HOST = "containerHost";
  @SerializedName(SERIALIZED_NAME_CONTAINER_HOST)
  private Long containerHost;

  public static final String SERIALIZED_NAME_VM = "vm";
  @SerializedName(SERIALIZED_NAME_VM)
  private Long vm;

  public static final String SERIALIZED_NAME_BAREMETAL = "baremetal";
  @SerializedName(SERIALIZED_NAME_BAREMETAL)
  private Long baremetal;

  public static final String SERIALIZED_NAME_UNMANAGED = "unmanaged";
  @SerializedName(SERIALIZED_NAME_UNMANAGED)
  private Long unmanaged;


  public ZoneStatsServerCounts all(Long all) {
    
    this.all = all;
    return this;
  }

   /**
   * Get all
   * @return all
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getAll() {
    return all;
  }


  public void setAll(Long all) {
    this.all = all;
  }


  public ZoneStatsServerCounts host(Long host) {
    
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getHost() {
    return host;
  }


  public void setHost(Long host) {
    this.host = host;
  }


  public ZoneStatsServerCounts hypervisor(Long hypervisor) {
    
    this.hypervisor = hypervisor;
    return this;
  }

   /**
   * Get hypervisor
   * @return hypervisor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getHypervisor() {
    return hypervisor;
  }


  public void setHypervisor(Long hypervisor) {
    this.hypervisor = hypervisor;
  }


  public ZoneStatsServerCounts containerHost(Long containerHost) {
    
    this.containerHost = containerHost;
    return this;
  }

   /**
   * Get containerHost
   * @return containerHost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getContainerHost() {
    return containerHost;
  }


  public void setContainerHost(Long containerHost) {
    this.containerHost = containerHost;
  }


  public ZoneStatsServerCounts vm(Long vm) {
    
    this.vm = vm;
    return this;
  }

   /**
   * Get vm
   * @return vm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getVm() {
    return vm;
  }


  public void setVm(Long vm) {
    this.vm = vm;
  }


  public ZoneStatsServerCounts baremetal(Long baremetal) {
    
    this.baremetal = baremetal;
    return this;
  }

   /**
   * Get baremetal
   * @return baremetal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getBaremetal() {
    return baremetal;
  }


  public void setBaremetal(Long baremetal) {
    this.baremetal = baremetal;
  }


  public ZoneStatsServerCounts unmanaged(Long unmanaged) {
    
    this.unmanaged = unmanaged;
    return this;
  }

   /**
   * Get unmanaged
   * @return unmanaged
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getUnmanaged() {
    return unmanaged;
  }


  public void setUnmanaged(Long unmanaged) {
    this.unmanaged = unmanaged;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ZoneStatsServerCounts zoneStatsServerCounts = (ZoneStatsServerCounts) o;
    return Objects.equals(this.all, zoneStatsServerCounts.all) &&
        Objects.equals(this.host, zoneStatsServerCounts.host) &&
        Objects.equals(this.hypervisor, zoneStatsServerCounts.hypervisor) &&
        Objects.equals(this.containerHost, zoneStatsServerCounts.containerHost) &&
        Objects.equals(this.vm, zoneStatsServerCounts.vm) &&
        Objects.equals(this.baremetal, zoneStatsServerCounts.baremetal) &&
        Objects.equals(this.unmanaged, zoneStatsServerCounts.unmanaged);
  }

  @Override
  public int hashCode() {
    return Objects.hash(all, host, hypervisor, containerHost, vm, baremetal, unmanaged);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ZoneStatsServerCounts {\n");
    sb.append("    all: ").append(toIndentedString(all)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    hypervisor: ").append(toIndentedString(hypervisor)).append("\n");
    sb.append("    containerHost: ").append(toIndentedString(containerHost)).append("\n");
    sb.append("    vm: ").append(toIndentedString(vm)).append("\n");
    sb.append("    baremetal: ").append(toIndentedString(baremetal)).append("\n");
    sb.append("    unmanaged: ").append(toIndentedString(unmanaged)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

