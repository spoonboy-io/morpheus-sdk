/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NetworkTypeAzureConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class NetworkTypeAzureConfig {
  public static final String SERIALIZED_NAME_RESOURCE_GROUP_ID = "resourceGroupId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_GROUP_ID)
  private String resourceGroupId;

  public static final String SERIALIZED_NAME_SUBNET_NAME = "subnetName";
  @SerializedName(SERIALIZED_NAME_SUBNET_NAME)
  private String subnetName;

  public static final String SERIALIZED_NAME_SUBNET_CIDR = "subnetCidr";
  @SerializedName(SERIALIZED_NAME_SUBNET_CIDR)
  private String subnetCidr;


  public NetworkTypeAzureConfig resourceGroupId(String resourceGroupId) {
    
    this.resourceGroupId = resourceGroupId;
    return this;
  }

   /**
   * Resource Group Name
   * @return resourceGroupId
  **/
  @ApiModelProperty(required = true, value = "Resource Group Name")

  public String getResourceGroupId() {
    return resourceGroupId;
  }


  public void setResourceGroupId(String resourceGroupId) {
    this.resourceGroupId = resourceGroupId;
  }


  public NetworkTypeAzureConfig subnetName(String subnetName) {
    
    this.subnetName = subnetName;
    return this;
  }

   /**
   * Subnet Name
   * @return subnetName
  **/
  @ApiModelProperty(required = true, value = "Subnet Name")

  public String getSubnetName() {
    return subnetName;
  }


  public void setSubnetName(String subnetName) {
    this.subnetName = subnetName;
  }


  public NetworkTypeAzureConfig subnetCidr(String subnetCidr) {
    
    this.subnetCidr = subnetCidr;
    return this;
  }

   /**
   * The subnet&#39;s address range in CIDR notation (e.g. 192.168.1.0/24). It must be contained by the address space of the virtual network.
   * @return subnetCidr
  **/
  @ApiModelProperty(required = true, value = "The subnet's address range in CIDR notation (e.g. 192.168.1.0/24). It must be contained by the address space of the virtual network.")

  public String getSubnetCidr() {
    return subnetCidr;
  }


  public void setSubnetCidr(String subnetCidr) {
    this.subnetCidr = subnetCidr;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkTypeAzureConfig networkTypeAzureConfig = (NetworkTypeAzureConfig) o;
    return Objects.equals(this.resourceGroupId, networkTypeAzureConfig.resourceGroupId) &&
        Objects.equals(this.subnetName, networkTypeAzureConfig.subnetName) &&
        Objects.equals(this.subnetCidr, networkTypeAzureConfig.subnetCidr);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resourceGroupId, subnetName, subnetCidr);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkTypeAzureConfig {\n");
    sb.append("    resourceGroupId: ").append(toIndentedString(resourceGroupId)).append("\n");
    sb.append("    subnetName: ").append(toIndentedString(subnetName)).append("\n");
    sb.append("    subnetCidr: ").append(toIndentedString(subnetCidr)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

