/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TaskChefBootstrapConfigTaskOptions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class TaskChefBootstrapConfigTaskOptions {
  public static final String SERIALIZED_NAME_CHEF_DATA_KEY = "chefDataKey";
  @SerializedName(SERIALIZED_NAME_CHEF_DATA_KEY)
  private String chefDataKey;

  public static final String SERIALIZED_NAME_CHEF_DATA_KEY_HASH = "chefDataKeyHash";
  @SerializedName(SERIALIZED_NAME_CHEF_DATA_KEY_HASH)
  private String chefDataKeyHash;

  public static final String SERIALIZED_NAME_CHEF_RUN_LIST = "chefRunList";
  @SerializedName(SERIALIZED_NAME_CHEF_RUN_LIST)
  private String chefRunList;

  public static final String SERIALIZED_NAME_LOCAL_SCRIPT_GIT_REF = "localScriptGitRef";
  @SerializedName(SERIALIZED_NAME_LOCAL_SCRIPT_GIT_REF)
  private String localScriptGitRef;

  public static final String SERIALIZED_NAME_CHEF_DATA_KEY_PATH = "chefDataKeyPath";
  @SerializedName(SERIALIZED_NAME_CHEF_DATA_KEY_PATH)
  private String chefDataKeyPath;

  public static final String SERIALIZED_NAME_LOCAL_SCRIPT_GIT_ID = "localScriptGitId";
  @SerializedName(SERIALIZED_NAME_LOCAL_SCRIPT_GIT_ID)
  private String localScriptGitId;

  public static final String SERIALIZED_NAME_PORT = "port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private String port;

  public static final String SERIALIZED_NAME_CHEF_ENV = "chefEnv";
  @SerializedName(SERIALIZED_NAME_CHEF_ENV)
  private String chefEnv;

  public static final String SERIALIZED_NAME_CHEF_NODE_NAME = "chefNodeName";
  @SerializedName(SERIALIZED_NAME_CHEF_NODE_NAME)
  private String chefNodeName;

  public static final String SERIALIZED_NAME_HOST = "host";
  @SerializedName(SERIALIZED_NAME_HOST)
  private String host;

  public static final String SERIALIZED_NAME_SSH_KEY = "sshKey";
  @SerializedName(SERIALIZED_NAME_SSH_KEY)
  private String sshKey;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_PASSWORD_HASH = "passwordHash";
  @SerializedName(SERIALIZED_NAME_PASSWORD_HASH)
  private String passwordHash;

  public static final String SERIALIZED_NAME_CHEF_ATTRIBUTES = "chefAttributes";
  @SerializedName(SERIALIZED_NAME_CHEF_ATTRIBUTES)
  private String chefAttributes;


  public TaskChefBootstrapConfigTaskOptions chefDataKey(String chefDataKey) {
    
    this.chefDataKey = chefDataKey;
    return this;
  }

   /**
   * Get chefDataKey
   * @return chefDataKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChefDataKey() {
    return chefDataKey;
  }


  public void setChefDataKey(String chefDataKey) {
    this.chefDataKey = chefDataKey;
  }


  public TaskChefBootstrapConfigTaskOptions chefDataKeyHash(String chefDataKeyHash) {
    
    this.chefDataKeyHash = chefDataKeyHash;
    return this;
  }

   /**
   * Get chefDataKeyHash
   * @return chefDataKeyHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChefDataKeyHash() {
    return chefDataKeyHash;
  }


  public void setChefDataKeyHash(String chefDataKeyHash) {
    this.chefDataKeyHash = chefDataKeyHash;
  }


  public TaskChefBootstrapConfigTaskOptions chefRunList(String chefRunList) {
    
    this.chefRunList = chefRunList;
    return this;
  }

   /**
   * Get chefRunList
   * @return chefRunList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChefRunList() {
    return chefRunList;
  }


  public void setChefRunList(String chefRunList) {
    this.chefRunList = chefRunList;
  }


  public TaskChefBootstrapConfigTaskOptions localScriptGitRef(String localScriptGitRef) {
    
    this.localScriptGitRef = localScriptGitRef;
    return this;
  }

   /**
   * Get localScriptGitRef
   * @return localScriptGitRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocalScriptGitRef() {
    return localScriptGitRef;
  }


  public void setLocalScriptGitRef(String localScriptGitRef) {
    this.localScriptGitRef = localScriptGitRef;
  }


  public TaskChefBootstrapConfigTaskOptions chefDataKeyPath(String chefDataKeyPath) {
    
    this.chefDataKeyPath = chefDataKeyPath;
    return this;
  }

   /**
   * Get chefDataKeyPath
   * @return chefDataKeyPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChefDataKeyPath() {
    return chefDataKeyPath;
  }


  public void setChefDataKeyPath(String chefDataKeyPath) {
    this.chefDataKeyPath = chefDataKeyPath;
  }


  public TaskChefBootstrapConfigTaskOptions localScriptGitId(String localScriptGitId) {
    
    this.localScriptGitId = localScriptGitId;
    return this;
  }

   /**
   * Get localScriptGitId
   * @return localScriptGitId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocalScriptGitId() {
    return localScriptGitId;
  }


  public void setLocalScriptGitId(String localScriptGitId) {
    this.localScriptGitId = localScriptGitId;
  }


  public TaskChefBootstrapConfigTaskOptions port(String port) {
    
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPort() {
    return port;
  }


  public void setPort(String port) {
    this.port = port;
  }


  public TaskChefBootstrapConfigTaskOptions chefEnv(String chefEnv) {
    
    this.chefEnv = chefEnv;
    return this;
  }

   /**
   * Get chefEnv
   * @return chefEnv
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChefEnv() {
    return chefEnv;
  }


  public void setChefEnv(String chefEnv) {
    this.chefEnv = chefEnv;
  }


  public TaskChefBootstrapConfigTaskOptions chefNodeName(String chefNodeName) {
    
    this.chefNodeName = chefNodeName;
    return this;
  }

   /**
   * Get chefNodeName
   * @return chefNodeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChefNodeName() {
    return chefNodeName;
  }


  public void setChefNodeName(String chefNodeName) {
    this.chefNodeName = chefNodeName;
  }


  public TaskChefBootstrapConfigTaskOptions host(String host) {
    
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHost() {
    return host;
  }


  public void setHost(String host) {
    this.host = host;
  }


  public TaskChefBootstrapConfigTaskOptions sshKey(String sshKey) {
    
    this.sshKey = sshKey;
    return this;
  }

   /**
   * Get sshKey
   * @return sshKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSshKey() {
    return sshKey;
  }


  public void setSshKey(String sshKey) {
    this.sshKey = sshKey;
  }


  public TaskChefBootstrapConfigTaskOptions username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsername() {
    return username;
  }


  public void setUsername(String username) {
    this.username = username;
  }


  public TaskChefBootstrapConfigTaskOptions password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }


  public TaskChefBootstrapConfigTaskOptions passwordHash(String passwordHash) {
    
    this.passwordHash = passwordHash;
    return this;
  }

   /**
   * Get passwordHash
   * @return passwordHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPasswordHash() {
    return passwordHash;
  }


  public void setPasswordHash(String passwordHash) {
    this.passwordHash = passwordHash;
  }


  public TaskChefBootstrapConfigTaskOptions chefAttributes(String chefAttributes) {
    
    this.chefAttributes = chefAttributes;
    return this;
  }

   /**
   * Get chefAttributes
   * @return chefAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChefAttributes() {
    return chefAttributes;
  }


  public void setChefAttributes(String chefAttributes) {
    this.chefAttributes = chefAttributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskChefBootstrapConfigTaskOptions taskChefBootstrapConfigTaskOptions = (TaskChefBootstrapConfigTaskOptions) o;
    return Objects.equals(this.chefDataKey, taskChefBootstrapConfigTaskOptions.chefDataKey) &&
        Objects.equals(this.chefDataKeyHash, taskChefBootstrapConfigTaskOptions.chefDataKeyHash) &&
        Objects.equals(this.chefRunList, taskChefBootstrapConfigTaskOptions.chefRunList) &&
        Objects.equals(this.localScriptGitRef, taskChefBootstrapConfigTaskOptions.localScriptGitRef) &&
        Objects.equals(this.chefDataKeyPath, taskChefBootstrapConfigTaskOptions.chefDataKeyPath) &&
        Objects.equals(this.localScriptGitId, taskChefBootstrapConfigTaskOptions.localScriptGitId) &&
        Objects.equals(this.port, taskChefBootstrapConfigTaskOptions.port) &&
        Objects.equals(this.chefEnv, taskChefBootstrapConfigTaskOptions.chefEnv) &&
        Objects.equals(this.chefNodeName, taskChefBootstrapConfigTaskOptions.chefNodeName) &&
        Objects.equals(this.host, taskChefBootstrapConfigTaskOptions.host) &&
        Objects.equals(this.sshKey, taskChefBootstrapConfigTaskOptions.sshKey) &&
        Objects.equals(this.username, taskChefBootstrapConfigTaskOptions.username) &&
        Objects.equals(this.password, taskChefBootstrapConfigTaskOptions.password) &&
        Objects.equals(this.passwordHash, taskChefBootstrapConfigTaskOptions.passwordHash) &&
        Objects.equals(this.chefAttributes, taskChefBootstrapConfigTaskOptions.chefAttributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chefDataKey, chefDataKeyHash, chefRunList, localScriptGitRef, chefDataKeyPath, localScriptGitId, port, chefEnv, chefNodeName, host, sshKey, username, password, passwordHash, chefAttributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskChefBootstrapConfigTaskOptions {\n");
    sb.append("    chefDataKey: ").append(toIndentedString(chefDataKey)).append("\n");
    sb.append("    chefDataKeyHash: ").append(toIndentedString(chefDataKeyHash)).append("\n");
    sb.append("    chefRunList: ").append(toIndentedString(chefRunList)).append("\n");
    sb.append("    localScriptGitRef: ").append(toIndentedString(localScriptGitRef)).append("\n");
    sb.append("    chefDataKeyPath: ").append(toIndentedString(chefDataKeyPath)).append("\n");
    sb.append("    localScriptGitId: ").append(toIndentedString(localScriptGitId)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    chefEnv: ").append(toIndentedString(chefEnv)).append("\n");
    sb.append("    chefNodeName: ").append(toIndentedString(chefNodeName)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    sshKey: ").append(toIndentedString(sshKey)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    passwordHash: ").append(toIndentedString(passwordHash)).append("\n");
    sb.append("    chefAttributes: ").append(toIndentedString(chefAttributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

