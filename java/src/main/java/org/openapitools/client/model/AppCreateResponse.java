/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.1.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ActivityActivityInnerUser;
import org.openapitools.client.model.AppBlueprint;
import org.openapitools.client.model.ApplianceSettingsEnabledZoneTypesInner;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AppCreateResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-17T13:37:08.123540Z[Etc/UTC]")
public class AppCreateResponse {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private List<String> labels;

  public static final String SERIALIZED_NAME_ENVIRONMENT = "environment";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT)
  private String environment;

  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private Long accountId;

  public static final String SERIALIZED_NAME_ACCOUNT = "account";
  @SerializedName(SERIALIZED_NAME_ACCOUNT)
  private ApplianceSettingsEnabledZoneTypesInner account;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private ActivityActivityInnerUser owner;

  public static final String SERIALIZED_NAME_SITE_ID = "siteId";
  @SerializedName(SERIALIZED_NAME_SITE_ID)
  private Long siteId;

  public static final String SERIALIZED_NAME_GROUP = "group";
  @SerializedName(SERIALIZED_NAME_GROUP)
  private ApplianceSettingsEnabledZoneTypesInner group;

  public static final String SERIALIZED_NAME_BLUEPRINT = "blueprint";
  @SerializedName(SERIALIZED_NAME_BLUEPRINT)
  private AppBlueprint blueprint;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_DATE_CREATED = "dateCreated";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_LAST_UPDATED = "lastUpdated";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
  private OffsetDateTime lastUpdated;

  public static final String SERIALIZED_NAME_REMOVAL_DATE = "removalDate";
  @SerializedName(SERIALIZED_NAME_REMOVAL_DATE)
  private OffsetDateTime removalDate;

  public static final String SERIALIZED_NAME_APP_CONTEXT = "appContext";
  @SerializedName(SERIALIZED_NAME_APP_CONTEXT)
  private String appContext;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_APP_STATUS = "appStatus";
  @SerializedName(SERIALIZED_NAME_APP_STATUS)
  private String appStatus;

  public static final String SERIALIZED_NAME_INSTANCE_COUNT = "instanceCount";
  @SerializedName(SERIALIZED_NAME_INSTANCE_COUNT)
  private Long instanceCount;

  public static final String SERIALIZED_NAME_CONTAINER_COUNT = "containerCount";
  @SerializedName(SERIALIZED_NAME_CONTAINER_COUNT)
  private Long containerCount;

  public static final String SERIALIZED_NAME_APP_TIERS = "appTiers";
  @SerializedName(SERIALIZED_NAME_APP_TIERS)
  private List<Object> appTiers;

  public static final String SERIALIZED_NAME_INSTANCES = "instances";
  @SerializedName(SERIALIZED_NAME_INSTANCES)
  private List<ApplianceSettingsEnabledZoneTypesInner> instances;

  public AppCreateResponse() {
  }

  public AppCreateResponse id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public AppCreateResponse name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public AppCreateResponse description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public AppCreateResponse labels(List<String> labels) {
    
    this.labels = labels;
    return this;
  }

  public AppCreateResponse addLabelsItem(String labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<>();
    }
    this.labels.add(labelsItem);
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @javax.annotation.Nullable
  public List<String> getLabels() {
    return labels;
  }


  public void setLabels(List<String> labels) {
    this.labels = labels;
  }


  public AppCreateResponse environment(String environment) {
    
    this.environment = environment;
    return this;
  }

   /**
   * Get environment
   * @return environment
  **/
  @javax.annotation.Nullable
  public String getEnvironment() {
    return environment;
  }


  public void setEnvironment(String environment) {
    this.environment = environment;
  }


  public AppCreateResponse accountId(Long accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @javax.annotation.Nullable
  public Long getAccountId() {
    return accountId;
  }


  public void setAccountId(Long accountId) {
    this.accountId = accountId;
  }


  public AppCreateResponse account(ApplianceSettingsEnabledZoneTypesInner account) {
    
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @javax.annotation.Nullable
  public ApplianceSettingsEnabledZoneTypesInner getAccount() {
    return account;
  }


  public void setAccount(ApplianceSettingsEnabledZoneTypesInner account) {
    this.account = account;
  }


  public AppCreateResponse owner(ActivityActivityInnerUser owner) {
    
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @javax.annotation.Nullable
  public ActivityActivityInnerUser getOwner() {
    return owner;
  }


  public void setOwner(ActivityActivityInnerUser owner) {
    this.owner = owner;
  }


  public AppCreateResponse siteId(Long siteId) {
    
    this.siteId = siteId;
    return this;
  }

   /**
   * Get siteId
   * @return siteId
  **/
  @javax.annotation.Nullable
  public Long getSiteId() {
    return siteId;
  }


  public void setSiteId(Long siteId) {
    this.siteId = siteId;
  }


  public AppCreateResponse group(ApplianceSettingsEnabledZoneTypesInner group) {
    
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @javax.annotation.Nullable
  public ApplianceSettingsEnabledZoneTypesInner getGroup() {
    return group;
  }


  public void setGroup(ApplianceSettingsEnabledZoneTypesInner group) {
    this.group = group;
  }


  public AppCreateResponse blueprint(AppBlueprint blueprint) {
    
    this.blueprint = blueprint;
    return this;
  }

   /**
   * Get blueprint
   * @return blueprint
  **/
  @javax.annotation.Nullable
  public AppBlueprint getBlueprint() {
    return blueprint;
  }


  public void setBlueprint(AppBlueprint blueprint) {
    this.blueprint = blueprint;
  }


  public AppCreateResponse type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public AppCreateResponse dateCreated(OffsetDateTime dateCreated) {
    
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * Get dateCreated
   * @return dateCreated
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }


  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public AppCreateResponse lastUpdated(OffsetDateTime lastUpdated) {
    
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }


  public void setLastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  public AppCreateResponse removalDate(OffsetDateTime removalDate) {
    
    this.removalDate = removalDate;
    return this;
  }

   /**
   * Get removalDate
   * @return removalDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getRemovalDate() {
    return removalDate;
  }


  public void setRemovalDate(OffsetDateTime removalDate) {
    this.removalDate = removalDate;
  }


  public AppCreateResponse appContext(String appContext) {
    
    this.appContext = appContext;
    return this;
  }

   /**
   * Get appContext
   * @return appContext
  **/
  @javax.annotation.Nullable
  public String getAppContext() {
    return appContext;
  }


  public void setAppContext(String appContext) {
    this.appContext = appContext;
  }


  public AppCreateResponse status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public AppCreateResponse appStatus(String appStatus) {
    
    this.appStatus = appStatus;
    return this;
  }

   /**
   * Get appStatus
   * @return appStatus
  **/
  @javax.annotation.Nullable
  public String getAppStatus() {
    return appStatus;
  }


  public void setAppStatus(String appStatus) {
    this.appStatus = appStatus;
  }


  public AppCreateResponse instanceCount(Long instanceCount) {
    
    this.instanceCount = instanceCount;
    return this;
  }

   /**
   * Get instanceCount
   * @return instanceCount
  **/
  @javax.annotation.Nullable
  public Long getInstanceCount() {
    return instanceCount;
  }


  public void setInstanceCount(Long instanceCount) {
    this.instanceCount = instanceCount;
  }


  public AppCreateResponse containerCount(Long containerCount) {
    
    this.containerCount = containerCount;
    return this;
  }

   /**
   * Get containerCount
   * @return containerCount
  **/
  @javax.annotation.Nullable
  public Long getContainerCount() {
    return containerCount;
  }


  public void setContainerCount(Long containerCount) {
    this.containerCount = containerCount;
  }


  public AppCreateResponse appTiers(List<Object> appTiers) {
    
    this.appTiers = appTiers;
    return this;
  }

  public AppCreateResponse addAppTiersItem(Object appTiersItem) {
    if (this.appTiers == null) {
      this.appTiers = new ArrayList<>();
    }
    this.appTiers.add(appTiersItem);
    return this;
  }

   /**
   * Get appTiers
   * @return appTiers
  **/
  @javax.annotation.Nullable
  public List<Object> getAppTiers() {
    return appTiers;
  }


  public void setAppTiers(List<Object> appTiers) {
    this.appTiers = appTiers;
  }


  public AppCreateResponse instances(List<ApplianceSettingsEnabledZoneTypesInner> instances) {
    
    this.instances = instances;
    return this;
  }

  public AppCreateResponse addInstancesItem(ApplianceSettingsEnabledZoneTypesInner instancesItem) {
    if (this.instances == null) {
      this.instances = new ArrayList<>();
    }
    this.instances.add(instancesItem);
    return this;
  }

   /**
   * Get instances
   * @return instances
  **/
  @javax.annotation.Nullable
  public List<ApplianceSettingsEnabledZoneTypesInner> getInstances() {
    return instances;
  }


  public void setInstances(List<ApplianceSettingsEnabledZoneTypesInner> instances) {
    this.instances = instances;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppCreateResponse appCreateResponse = (AppCreateResponse) o;
    return Objects.equals(this.id, appCreateResponse.id) &&
        Objects.equals(this.name, appCreateResponse.name) &&
        Objects.equals(this.description, appCreateResponse.description) &&
        Objects.equals(this.labels, appCreateResponse.labels) &&
        Objects.equals(this.environment, appCreateResponse.environment) &&
        Objects.equals(this.accountId, appCreateResponse.accountId) &&
        Objects.equals(this.account, appCreateResponse.account) &&
        Objects.equals(this.owner, appCreateResponse.owner) &&
        Objects.equals(this.siteId, appCreateResponse.siteId) &&
        Objects.equals(this.group, appCreateResponse.group) &&
        Objects.equals(this.blueprint, appCreateResponse.blueprint) &&
        Objects.equals(this.type, appCreateResponse.type) &&
        Objects.equals(this.dateCreated, appCreateResponse.dateCreated) &&
        Objects.equals(this.lastUpdated, appCreateResponse.lastUpdated) &&
        Objects.equals(this.removalDate, appCreateResponse.removalDate) &&
        Objects.equals(this.appContext, appCreateResponse.appContext) &&
        Objects.equals(this.status, appCreateResponse.status) &&
        Objects.equals(this.appStatus, appCreateResponse.appStatus) &&
        Objects.equals(this.instanceCount, appCreateResponse.instanceCount) &&
        Objects.equals(this.containerCount, appCreateResponse.containerCount) &&
        Objects.equals(this.appTiers, appCreateResponse.appTiers) &&
        Objects.equals(this.instances, appCreateResponse.instances);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, labels, environment, accountId, account, owner, siteId, group, blueprint, type, dateCreated, lastUpdated, removalDate, appContext, status, appStatus, instanceCount, containerCount, appTiers, instances);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppCreateResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    siteId: ").append(toIndentedString(siteId)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    blueprint: ").append(toIndentedString(blueprint)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    removalDate: ").append(toIndentedString(removalDate)).append("\n");
    sb.append("    appContext: ").append(toIndentedString(appContext)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    appStatus: ").append(toIndentedString(appStatus)).append("\n");
    sb.append("    instanceCount: ").append(toIndentedString(instanceCount)).append("\n");
    sb.append("    containerCount: ").append(toIndentedString(containerCount)).append("\n");
    sb.append("    appTiers: ").append(toIndentedString(appTiers)).append("\n");
    sb.append("    instances: ").append(toIndentedString(instances)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("labels");
    openapiFields.add("environment");
    openapiFields.add("accountId");
    openapiFields.add("account");
    openapiFields.add("owner");
    openapiFields.add("siteId");
    openapiFields.add("group");
    openapiFields.add("blueprint");
    openapiFields.add("type");
    openapiFields.add("dateCreated");
    openapiFields.add("lastUpdated");
    openapiFields.add("removalDate");
    openapiFields.add("appContext");
    openapiFields.add("status");
    openapiFields.add("appStatus");
    openapiFields.add("instanceCount");
    openapiFields.add("containerCount");
    openapiFields.add("appTiers");
    openapiFields.add("instances");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to AppCreateResponse
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AppCreateResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppCreateResponse is not found in the empty JSON string", AppCreateResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AppCreateResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppCreateResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("labels") != null && !jsonObj.get("labels").isJsonNull() && !jsonObj.get("labels").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `labels` to be an array in the JSON string but got `%s`", jsonObj.get("labels").toString()));
      }
      if ((jsonObj.get("environment") != null && !jsonObj.get("environment").isJsonNull()) && !jsonObj.get("environment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `environment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("environment").toString()));
      }
      // validate the optional field `account`
      if (jsonObj.get("account") != null && !jsonObj.get("account").isJsonNull()) {
        ApplianceSettingsEnabledZoneTypesInner.validateJsonElement(jsonObj.get("account"));
      }
      // validate the optional field `owner`
      if (jsonObj.get("owner") != null && !jsonObj.get("owner").isJsonNull()) {
        ActivityActivityInnerUser.validateJsonElement(jsonObj.get("owner"));
      }
      // validate the optional field `group`
      if (jsonObj.get("group") != null && !jsonObj.get("group").isJsonNull()) {
        ApplianceSettingsEnabledZoneTypesInner.validateJsonElement(jsonObj.get("group"));
      }
      // validate the optional field `blueprint`
      if (jsonObj.get("blueprint") != null && !jsonObj.get("blueprint").isJsonNull()) {
        AppBlueprint.validateJsonElement(jsonObj.get("blueprint"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("appContext") != null && !jsonObj.get("appContext").isJsonNull()) && !jsonObj.get("appContext").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appContext` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appContext").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("appStatus") != null && !jsonObj.get("appStatus").isJsonNull()) && !jsonObj.get("appStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appStatus").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("appTiers") != null && !jsonObj.get("appTiers").isJsonNull() && !jsonObj.get("appTiers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `appTiers` to be an array in the JSON string but got `%s`", jsonObj.get("appTiers").toString()));
      }
      if (jsonObj.get("instances") != null && !jsonObj.get("instances").isJsonNull()) {
        JsonArray jsonArrayinstances = jsonObj.getAsJsonArray("instances");
        if (jsonArrayinstances != null) {
          // ensure the json data is an array
          if (!jsonObj.get("instances").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `instances` to be an array in the JSON string but got `%s`", jsonObj.get("instances").toString()));
          }

          // validate the optional field `instances` (array)
          for (int i = 0; i < jsonArrayinstances.size(); i++) {
            ApplianceSettingsEnabledZoneTypesInner.validateJsonElement(jsonArrayinstances.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppCreateResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppCreateResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppCreateResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppCreateResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<AppCreateResponse>() {
           @Override
           public void write(JsonWriter out, AppCreateResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppCreateResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AppCreateResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AppCreateResponse
  * @throws IOException if the JSON string is invalid with respect to AppCreateResponse
  */
  public static AppCreateResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppCreateResponse.class);
  }

 /**
  * Convert an instance of AppCreateResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

