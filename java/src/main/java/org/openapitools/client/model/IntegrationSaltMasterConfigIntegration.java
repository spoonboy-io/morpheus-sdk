/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.IntegrationSaltMasterConfigIntegrationConfig;

/**
 * IntegrationSaltMasterConfigIntegration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class IntegrationSaltMasterConfigIntegration {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Integration Type Code
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    SALTMASTER("saltMaster");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_SERVICE_MODE = "serviceMode";
  @SerializedName(SERIALIZED_NAME_SERVICE_MODE)
  private String serviceMode = "single";

  public static final String SERIALIZED_NAME_SERVICE_URL = "serviceUrl";
  @SerializedName(SERIALIZED_NAME_SERVICE_URL)
  private String serviceUrl;

  public static final String SERIALIZED_NAME_SECONDARY = "secondary";
  @SerializedName(SERIALIZED_NAME_SECONDARY)
  private String secondary;

  public static final String SERIALIZED_NAME_SERVICE_PORT = "servicePort";
  @SerializedName(SERIALIZED_NAME_SERVICE_PORT)
  private Integer servicePort = 22;

  public static final String SERIALIZED_NAME_SERVICE_USERNAME = "serviceUsername";
  @SerializedName(SERIALIZED_NAME_SERVICE_USERNAME)
  private String serviceUsername;

  public static final String SERIALIZED_NAME_SERVICE_PASSWORD = "servicePassword";
  @SerializedName(SERIALIZED_NAME_SERVICE_PASSWORD)
  private String servicePassword;

  public static final String SERIALIZED_NAME_SERVICE_KEY = "serviceKey";
  @SerializedName(SERIALIZED_NAME_SERVICE_KEY)
  private String serviceKey;

  public static final String SERIALIZED_NAME_AUTH_KEY = "authKey";
  @SerializedName(SERIALIZED_NAME_AUTH_KEY)
  private String authKey;

  public static final String SERIALIZED_NAME_SERVICE_PATH = "servicePath";
  @SerializedName(SERIALIZED_NAME_SERVICE_PATH)
  private String servicePath;

  public static final String SERIALIZED_NAME_SERVICE_VERSION = "serviceVersion";
  @SerializedName(SERIALIZED_NAME_SERVICE_VERSION)
  private String serviceVersion;

  public static final String SERIALIZED_NAME_SERVICE_WINDOWS_VERSION = "serviceWindowsVersion";
  @SerializedName(SERIALIZED_NAME_SERVICE_WINDOWS_VERSION)
  private String serviceWindowsVersion;

  public static final String SERIALIZED_NAME_REPO_URL = "repoUrl";
  @SerializedName(SERIALIZED_NAME_REPO_URL)
  private String repoUrl;

  public static final String SERIALIZED_NAME_SERVICE_CONFIG = "serviceConfig";
  @SerializedName(SERIALIZED_NAME_SERVICE_CONFIG)
  private String serviceConfig;

  public static final String SERIALIZED_NAME_SERVICE_COMMAND = "serviceCommand";
  @SerializedName(SERIALIZED_NAME_SERVICE_COMMAND)
  private String serviceCommand;

  public static final String SERIALIZED_NAME_CONFIG = "config";
  @SerializedName(SERIALIZED_NAME_CONFIG)
  private IntegrationSaltMasterConfigIntegrationConfig config;


  public IntegrationSaltMasterConfigIntegration name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name, a unique identifier for the integration
   * @return name
  **/
  @ApiModelProperty(example = "Sample Integration", required = true, value = "Name, a unique identifier for the integration")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public IntegrationSaltMasterConfigIntegration type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Integration Type Code
   * @return type
  **/
  @ApiModelProperty(required = true, value = "Integration Type Code")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public IntegrationSaltMasterConfigIntegration serviceMode(String serviceMode) {
    
    this.serviceMode = serviceMode;
    return this;
  }

   /**
   * Topology
   * @return serviceMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Topology")

  public String getServiceMode() {
    return serviceMode;
  }


  public void setServiceMode(String serviceMode) {
    this.serviceMode = serviceMode;
  }


  public IntegrationSaltMasterConfigIntegration serviceUrl(String serviceUrl) {
    
    this.serviceUrl = serviceUrl;
    return this;
  }

   /**
   * Salt Master
   * @return serviceUrl
  **/
  @ApiModelProperty(required = true, value = "Salt Master")

  public String getServiceUrl() {
    return serviceUrl;
  }


  public void setServiceUrl(String serviceUrl) {
    this.serviceUrl = serviceUrl;
  }


  public IntegrationSaltMasterConfigIntegration secondary(String secondary) {
    
    this.secondary = secondary;
    return this;
  }

   /**
   * Salt Syndic
   * @return secondary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Salt Syndic")

  public String getSecondary() {
    return secondary;
  }


  public void setSecondary(String secondary) {
    this.secondary = secondary;
  }


  public IntegrationSaltMasterConfigIntegration servicePort(Integer servicePort) {
    
    this.servicePort = servicePort;
    return this;
  }

   /**
   * SSH Port
   * @return servicePort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "SSH Port")

  public Integer getServicePort() {
    return servicePort;
  }


  public void setServicePort(Integer servicePort) {
    this.servicePort = servicePort;
  }


  public IntegrationSaltMasterConfigIntegration serviceUsername(String serviceUsername) {
    
    this.serviceUsername = serviceUsername;
    return this;
  }

   /**
   * Username
   * @return serviceUsername
  **/
  @ApiModelProperty(required = true, value = "Username")

  public String getServiceUsername() {
    return serviceUsername;
  }


  public void setServiceUsername(String serviceUsername) {
    this.serviceUsername = serviceUsername;
  }


  public IntegrationSaltMasterConfigIntegration servicePassword(String servicePassword) {
    
    this.servicePassword = servicePassword;
    return this;
  }

   /**
   * Password
   * @return servicePassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Password")

  public String getServicePassword() {
    return servicePassword;
  }


  public void setServicePassword(String servicePassword) {
    this.servicePassword = servicePassword;
  }


  public IntegrationSaltMasterConfigIntegration serviceKey(String serviceKey) {
    
    this.serviceKey = serviceKey;
    return this;
  }

   /**
   * Master Key Pair
   * @return serviceKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Master Key Pair")

  public String getServiceKey() {
    return serviceKey;
  }


  public void setServiceKey(String serviceKey) {
    this.serviceKey = serviceKey;
  }


  public IntegrationSaltMasterConfigIntegration authKey(String authKey) {
    
    this.authKey = authKey;
    return this;
  }

   /**
   * Signing Key
   * @return authKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Signing Key")

  public String getAuthKey() {
    return authKey;
  }


  public void setAuthKey(String authKey) {
    this.authKey = authKey;
  }


  public IntegrationSaltMasterConfigIntegration servicePath(String servicePath) {
    
    this.servicePath = servicePath;
    return this;
  }

   /**
   * Working Directory
   * @return servicePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Working Directory")

  public String getServicePath() {
    return servicePath;
  }


  public void setServicePath(String servicePath) {
    this.servicePath = servicePath;
  }


  public IntegrationSaltMasterConfigIntegration serviceVersion(String serviceVersion) {
    
    this.serviceVersion = serviceVersion;
    return this;
  }

   /**
   * Salt Version
   * @return serviceVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Salt Version")

  public String getServiceVersion() {
    return serviceVersion;
  }


  public void setServiceVersion(String serviceVersion) {
    this.serviceVersion = serviceVersion;
  }


  public IntegrationSaltMasterConfigIntegration serviceWindowsVersion(String serviceWindowsVersion) {
    
    this.serviceWindowsVersion = serviceWindowsVersion;
    return this;
  }

   /**
   * Salt Version (Windows)
   * @return serviceWindowsVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Salt Version (Windows)")

  public String getServiceWindowsVersion() {
    return serviceWindowsVersion;
  }


  public void setServiceWindowsVersion(String serviceWindowsVersion) {
    this.serviceWindowsVersion = serviceWindowsVersion;
  }


  public IntegrationSaltMasterConfigIntegration repoUrl(String repoUrl) {
    
    this.repoUrl = repoUrl;
    return this;
  }

   /**
   * Repo URL
   * @return repoUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Repo URL")

  public String getRepoUrl() {
    return repoUrl;
  }


  public void setRepoUrl(String repoUrl) {
    this.repoUrl = repoUrl;
  }


  public IntegrationSaltMasterConfigIntegration serviceConfig(String serviceConfig) {
    
    this.serviceConfig = serviceConfig;
    return this;
  }

   /**
   * Minion Config
   * @return serviceConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minion Config")

  public String getServiceConfig() {
    return serviceConfig;
  }


  public void setServiceConfig(String serviceConfig) {
    this.serviceConfig = serviceConfig;
  }


  public IntegrationSaltMasterConfigIntegration serviceCommand(String serviceCommand) {
    
    this.serviceCommand = serviceCommand;
    return this;
  }

   /**
   * Post Provision Commands
   * @return serviceCommand
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Post Provision Commands")

  public String getServiceCommand() {
    return serviceCommand;
  }


  public void setServiceCommand(String serviceCommand) {
    this.serviceCommand = serviceCommand;
  }


  public IntegrationSaltMasterConfigIntegration config(IntegrationSaltMasterConfigIntegrationConfig config) {
    
    this.config = config;
    return this;
  }

   /**
   * Get config
   * @return config
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IntegrationSaltMasterConfigIntegrationConfig getConfig() {
    return config;
  }


  public void setConfig(IntegrationSaltMasterConfigIntegrationConfig config) {
    this.config = config;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntegrationSaltMasterConfigIntegration integrationSaltMasterConfigIntegration = (IntegrationSaltMasterConfigIntegration) o;
    return Objects.equals(this.name, integrationSaltMasterConfigIntegration.name) &&
        Objects.equals(this.type, integrationSaltMasterConfigIntegration.type) &&
        Objects.equals(this.serviceMode, integrationSaltMasterConfigIntegration.serviceMode) &&
        Objects.equals(this.serviceUrl, integrationSaltMasterConfigIntegration.serviceUrl) &&
        Objects.equals(this.secondary, integrationSaltMasterConfigIntegration.secondary) &&
        Objects.equals(this.servicePort, integrationSaltMasterConfigIntegration.servicePort) &&
        Objects.equals(this.serviceUsername, integrationSaltMasterConfigIntegration.serviceUsername) &&
        Objects.equals(this.servicePassword, integrationSaltMasterConfigIntegration.servicePassword) &&
        Objects.equals(this.serviceKey, integrationSaltMasterConfigIntegration.serviceKey) &&
        Objects.equals(this.authKey, integrationSaltMasterConfigIntegration.authKey) &&
        Objects.equals(this.servicePath, integrationSaltMasterConfigIntegration.servicePath) &&
        Objects.equals(this.serviceVersion, integrationSaltMasterConfigIntegration.serviceVersion) &&
        Objects.equals(this.serviceWindowsVersion, integrationSaltMasterConfigIntegration.serviceWindowsVersion) &&
        Objects.equals(this.repoUrl, integrationSaltMasterConfigIntegration.repoUrl) &&
        Objects.equals(this.serviceConfig, integrationSaltMasterConfigIntegration.serviceConfig) &&
        Objects.equals(this.serviceCommand, integrationSaltMasterConfigIntegration.serviceCommand) &&
        Objects.equals(this.config, integrationSaltMasterConfigIntegration.config);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, type, serviceMode, serviceUrl, secondary, servicePort, serviceUsername, servicePassword, serviceKey, authKey, servicePath, serviceVersion, serviceWindowsVersion, repoUrl, serviceConfig, serviceCommand, config);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntegrationSaltMasterConfigIntegration {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    serviceMode: ").append(toIndentedString(serviceMode)).append("\n");
    sb.append("    serviceUrl: ").append(toIndentedString(serviceUrl)).append("\n");
    sb.append("    secondary: ").append(toIndentedString(secondary)).append("\n");
    sb.append("    servicePort: ").append(toIndentedString(servicePort)).append("\n");
    sb.append("    serviceUsername: ").append(toIndentedString(serviceUsername)).append("\n");
    sb.append("    servicePassword: ").append(toIndentedString(servicePassword)).append("\n");
    sb.append("    serviceKey: ").append(toIndentedString(serviceKey)).append("\n");
    sb.append("    authKey: ").append(toIndentedString(authKey)).append("\n");
    sb.append("    servicePath: ").append(toIndentedString(servicePath)).append("\n");
    sb.append("    serviceVersion: ").append(toIndentedString(serviceVersion)).append("\n");
    sb.append("    serviceWindowsVersion: ").append(toIndentedString(serviceWindowsVersion)).append("\n");
    sb.append("    repoUrl: ").append(toIndentedString(repoUrl)).append("\n");
    sb.append("    serviceConfig: ").append(toIndentedString(serviceConfig)).append("\n");
    sb.append("    serviceCommand: ").append(toIndentedString(serviceCommand)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

