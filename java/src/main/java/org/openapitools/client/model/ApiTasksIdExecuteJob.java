/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ApiTasksIdExecuteJob
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ApiTasksIdExecuteJob {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * The target context for task execution. This is required for tasks with &#x60;executeTarget&#x60; set to &#x60;resource&#x60;.
   */
  @JsonAdapter(TargetTypeEnum.Adapter.class)
  public enum TargetTypeEnum {
    APPLIANCE("appliance"),
    
    INSTANCE("instance"),
    
    INSTANCE_LABEL("instance-label"),
    
    SERVER("server"),
    
    SERVER_LABEL("server-label");

    private String value;

    TargetTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TargetTypeEnum fromValue(String value) {
      for (TargetTypeEnum b : TargetTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TargetTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TargetTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TargetTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TargetTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TARGET_TYPE = "targetType";
  @SerializedName(SERIALIZED_NAME_TARGET_TYPE)
  private TargetTypeEnum targetType;

  public static final String SERIALIZED_NAME_INSTANCES = "instances";
  @SerializedName(SERIALIZED_NAME_INSTANCES)
  private List<Long> instances = null;

  public static final String SERIALIZED_NAME_SERVERS = "servers";
  @SerializedName(SERIALIZED_NAME_SERVERS)
  private List<Long> servers = null;

  public static final String SERIALIZED_NAME_INSTANCE_LABEL = "instanceLabel";
  @SerializedName(SERIALIZED_NAME_INSTANCE_LABEL)
  private String instanceLabel;

  public static final String SERIALIZED_NAME_SERVER_LABEL = "serverLabel";
  @SerializedName(SERIALIZED_NAME_SERVER_LABEL)
  private String serverLabel;

  public static final String SERIALIZED_NAME_CUSTOM_OPTIONS = "customOptions";
  @SerializedName(SERIALIZED_NAME_CUSTOM_OPTIONS)
  private Object customOptions;

  public static final String SERIALIZED_NAME_CUSTOM_CONFIG = "customConfig";
  @SerializedName(SERIALIZED_NAME_CUSTOM_CONFIG)
  private String customConfig;


  public ApiTasksIdExecuteJob name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * A name for the execution job. Can be used to find execution results with &#x60;/api/processes?name&#x3D;&#x60;
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A name for the execution job. Can be used to find execution results with `/api/processes?name=`")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ApiTasksIdExecuteJob targetType(TargetTypeEnum targetType) {
    
    this.targetType = targetType;
    return this;
  }

   /**
   * The target context for task execution. This is required for tasks with &#x60;executeTarget&#x60; set to &#x60;resource&#x60;.
   * @return targetType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The target context for task execution. This is required for tasks with `executeTarget` set to `resource`.")

  public TargetTypeEnum getTargetType() {
    return targetType;
  }


  public void setTargetType(TargetTypeEnum targetType) {
    this.targetType = targetType;
  }


  public ApiTasksIdExecuteJob instances(List<Long> instances) {
    
    this.instances = instances;
    return this;
  }

  public ApiTasksIdExecuteJob addInstancesItem(Long instancesItem) {
    if (this.instances == null) {
      this.instances = new ArrayList<Long>();
    }
    this.instances.add(instancesItem);
    return this;
  }

   /**
   * Array of Instance IDs. Only applicable if &#x60;targetType&#x60; is instance.
   * @return instances
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array of Instance IDs. Only applicable if `targetType` is instance.")

  public List<Long> getInstances() {
    return instances;
  }


  public void setInstances(List<Long> instances) {
    this.instances = instances;
  }


  public ApiTasksIdExecuteJob servers(List<Long> servers) {
    
    this.servers = servers;
    return this;
  }

  public ApiTasksIdExecuteJob addServersItem(Long serversItem) {
    if (this.servers == null) {
      this.servers = new ArrayList<Long>();
    }
    this.servers.add(serversItem);
    return this;
  }

   /**
   * Array of Server IDs. Only applicable if &#x60;targetType&#x60; is &#x60;server&#x60;.
   * @return servers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array of Server IDs. Only applicable if `targetType` is `server`.")

  public List<Long> getServers() {
    return servers;
  }


  public void setServers(List<Long> servers) {
    this.servers = servers;
  }


  public ApiTasksIdExecuteJob instanceLabel(String instanceLabel) {
    
    this.instanceLabel = instanceLabel;
    return this;
  }

   /**
   * Instance Label. Only applicable if &#x60;targetType&#x60; is &#x60;instance-label&#x60;.
   * @return instanceLabel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Instance Label. Only applicable if `targetType` is `instance-label`.")

  public String getInstanceLabel() {
    return instanceLabel;
  }


  public void setInstanceLabel(String instanceLabel) {
    this.instanceLabel = instanceLabel;
  }


  public ApiTasksIdExecuteJob serverLabel(String serverLabel) {
    
    this.serverLabel = serverLabel;
    return this;
  }

   /**
   * Server Label. Only applicable if &#x60;targetType&#x60; is &#x60;server-label&#x60;.
   * @return serverLabel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Server Label. Only applicable if `targetType` is `server-label`.")

  public String getServerLabel() {
    return serverLabel;
  }


  public void setServerLabel(String serverLabel) {
    this.serverLabel = serverLabel;
  }


  public ApiTasksIdExecuteJob customOptions(Object customOptions) {
    
    this.customOptions = customOptions;
    return this;
  }

   /**
   * Map of options to be used as values in the task. These correspond to option types.
   * @return customOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Map of options to be used as values in the task. These correspond to option types.")

  public Object getCustomOptions() {
    return customOptions;
  }


  public void setCustomOptions(Object customOptions) {
    this.customOptions = customOptions;
  }


  public ApiTasksIdExecuteJob customConfig(String customConfig) {
    
    this.customConfig = customConfig;
    return this;
  }

   /**
   * String of custom configuration values as JSON.
   * @return customConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "String of custom configuration values as JSON.")

  public String getCustomConfig() {
    return customConfig;
  }


  public void setCustomConfig(String customConfig) {
    this.customConfig = customConfig;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiTasksIdExecuteJob apiTasksIdExecuteJob = (ApiTasksIdExecuteJob) o;
    return Objects.equals(this.name, apiTasksIdExecuteJob.name) &&
        Objects.equals(this.targetType, apiTasksIdExecuteJob.targetType) &&
        Objects.equals(this.instances, apiTasksIdExecuteJob.instances) &&
        Objects.equals(this.servers, apiTasksIdExecuteJob.servers) &&
        Objects.equals(this.instanceLabel, apiTasksIdExecuteJob.instanceLabel) &&
        Objects.equals(this.serverLabel, apiTasksIdExecuteJob.serverLabel) &&
        Objects.equals(this.customOptions, apiTasksIdExecuteJob.customOptions) &&
        Objects.equals(this.customConfig, apiTasksIdExecuteJob.customConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, targetType, instances, servers, instanceLabel, serverLabel, customOptions, customConfig);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiTasksIdExecuteJob {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    targetType: ").append(toIndentedString(targetType)).append("\n");
    sb.append("    instances: ").append(toIndentedString(instances)).append("\n");
    sb.append("    servers: ").append(toIndentedString(servers)).append("\n");
    sb.append("    instanceLabel: ").append(toIndentedString(instanceLabel)).append("\n");
    sb.append("    serverLabel: ").append(toIndentedString(serverLabel)).append("\n");
    sb.append("    customOptions: ").append(toIndentedString(customOptions)).append("\n");
    sb.append("    customConfig: ").append(toIndentedString(customConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

