/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.ApiServersIdWorkflowTaskSet;

/**
 * InlineObject225
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class InlineObject225 {
  public static final String SERIALIZED_NAME_TASK_SET = "taskSet";
  @SerializedName(SERIALIZED_NAME_TASK_SET)
  private ApiServersIdWorkflowTaskSet taskSet;

  /**
   * Task Phase to run for Provisioning workflows. The default is &#x60;provision&#x60;.
   */
  @JsonAdapter(TaskPhaseEnum.Adapter.class)
  public enum TaskPhaseEnum {
    START("start"),
    
    STOP("stop"),
    
    PREPROVISION("preProvision"),
    
    PROVISION("provision"),
    
    POSTPROVISION("postProvision"),
    
    PREDEPLOY("preDeploy"),
    
    DEPLOY("deploy"),
    
    RECONFIGURE("reconfigure"),
    
    TEARDOWN("teardown"),
    
    STARTUP("startup"),
    
    SHUTDOWN("shutdown");

    private String value;

    TaskPhaseEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TaskPhaseEnum fromValue(String value) {
      for (TaskPhaseEnum b : TaskPhaseEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TaskPhaseEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TaskPhaseEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TaskPhaseEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TaskPhaseEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TASK_PHASE = "taskPhase";
  @SerializedName(SERIALIZED_NAME_TASK_PHASE)
  private TaskPhaseEnum taskPhase = TaskPhaseEnum.PROVISION;


  public InlineObject225 taskSet(ApiServersIdWorkflowTaskSet taskSet) {
    
    this.taskSet = taskSet;
    return this;
  }

   /**
   * Get taskSet
   * @return taskSet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ApiServersIdWorkflowTaskSet getTaskSet() {
    return taskSet;
  }


  public void setTaskSet(ApiServersIdWorkflowTaskSet taskSet) {
    this.taskSet = taskSet;
  }


  public InlineObject225 taskPhase(TaskPhaseEnum taskPhase) {
    
    this.taskPhase = taskPhase;
    return this;
  }

   /**
   * Task Phase to run for Provisioning workflows. The default is &#x60;provision&#x60;.
   * @return taskPhase
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Task Phase to run for Provisioning workflows. The default is `provision`.")

  public TaskPhaseEnum getTaskPhase() {
    return taskPhase;
  }


  public void setTaskPhase(TaskPhaseEnum taskPhase) {
    this.taskPhase = taskPhase;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineObject225 inlineObject225 = (InlineObject225) o;
    return Objects.equals(this.taskSet, inlineObject225.taskSet) &&
        Objects.equals(this.taskPhase, inlineObject225.taskPhase);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taskSet, taskPhase);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineObject225 {\n");
    sb.append("    taskSet: ").append(toIndentedString(taskSet)).append("\n");
    sb.append("    taskPhase: ").append(toIndentedString(taskPhase)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

