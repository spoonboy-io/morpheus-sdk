/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.BackupBackupProvider;
import org.openapitools.client.model.BackupBackupRespository;
import org.openapitools.client.model.BackupBackupType;
import org.openapitools.client.model.BackupInstance;
import org.openapitools.client.model.BackupJob;
import org.openapitools.client.model.BackupLastResult;
import org.openapitools.client.model.BackupSchedule;
import org.openapitools.client.model.BackupStats;
import org.openapitools.client.model.BackupStorageProvider;
import org.threeten.bp.OffsetDateTime;

/**
 * Backup
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class Backup {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_LOCATION_TYPE = "locationType";
  @SerializedName(SERIALIZED_NAME_LOCATION_TYPE)
  private String locationType;

  public static final String SERIALIZED_NAME_INSTANCE = "instance";
  @SerializedName(SERIALIZED_NAME_INSTANCE)
  private BackupInstance instance;

  public static final String SERIALIZED_NAME_CONTAINER_ID = "containerId";
  @SerializedName(SERIALIZED_NAME_CONTAINER_ID)
  private Long containerId;

  public static final String SERIALIZED_NAME_JOB = "job";
  @SerializedName(SERIALIZED_NAME_JOB)
  private BackupJob job;

  public static final String SERIALIZED_NAME_SCHEDULE = "schedule";
  @SerializedName(SERIALIZED_NAME_SCHEDULE)
  private BackupSchedule schedule;

  public static final String SERIALIZED_NAME_RETENTION_COUNT = "retentionCount";
  @SerializedName(SERIALIZED_NAME_RETENTION_COUNT)
  private Long retentionCount;

  public static final String SERIALIZED_NAME_BACKUP_TYPE = "backupType";
  @SerializedName(SERIALIZED_NAME_BACKUP_TYPE)
  private BackupBackupType backupType;

  public static final String SERIALIZED_NAME_STORAGE_PROVIDER = "storageProvider";
  @SerializedName(SERIALIZED_NAME_STORAGE_PROVIDER)
  private BackupStorageProvider storageProvider;

  public static final String SERIALIZED_NAME_BACKUP_PROVIDER = "backupProvider";
  @SerializedName(SERIALIZED_NAME_BACKUP_PROVIDER)
  private BackupBackupProvider backupProvider;

  public static final String SERIALIZED_NAME_BACKUP_RESPOSITORY = "backupRespository";
  @SerializedName(SERIALIZED_NAME_BACKUP_RESPOSITORY)
  private BackupBackupRespository backupRespository;

  public static final String SERIALIZED_NAME_CRON_EXPRESSION = "cronExpression";
  @SerializedName(SERIALIZED_NAME_CRON_EXPRESSION)
  private String cronExpression;

  public static final String SERIALIZED_NAME_NEXT_FIRE = "nextFire";
  @SerializedName(SERIALIZED_NAME_NEXT_FIRE)
  private OffsetDateTime nextFire;

  public static final String SERIALIZED_NAME_LAST_STATUS = "lastStatus";
  @SerializedName(SERIALIZED_NAME_LAST_STATUS)
  private String lastStatus;

  public static final String SERIALIZED_NAME_LAST_RESULT = "lastResult";
  @SerializedName(SERIALIZED_NAME_LAST_RESULT)
  private BackupLastResult lastResult;

  public static final String SERIALIZED_NAME_STATS = "stats";
  @SerializedName(SERIALIZED_NAME_STATS)
  private BackupStats stats;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_DATE_CREATED = "dateCreated";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_LAST_UPDATED = "lastUpdated";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
  private OffsetDateTime lastUpdated;


  public Backup id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Backup ID
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Backup ID")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public Backup name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Backup locationType(String locationType) {
    
    this.locationType = locationType;
    return this;
  }

   /**
   * Source Type (instance, server, storage)
   * @return locationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Source Type (instance, server, storage)")

  public String getLocationType() {
    return locationType;
  }


  public void setLocationType(String locationType) {
    this.locationType = locationType;
  }


  public Backup instance(BackupInstance instance) {
    
    this.instance = instance;
    return this;
  }

   /**
   * Get instance
   * @return instance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BackupInstance getInstance() {
    return instance;
  }


  public void setInstance(BackupInstance instance) {
    this.instance = instance;
  }


  public Backup containerId(Long containerId) {
    
    this.containerId = containerId;
    return this;
  }

   /**
   * Get containerId
   * @return containerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getContainerId() {
    return containerId;
  }


  public void setContainerId(Long containerId) {
    this.containerId = containerId;
  }


  public Backup job(BackupJob job) {
    
    this.job = job;
    return this;
  }

   /**
   * Get job
   * @return job
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BackupJob getJob() {
    return job;
  }


  public void setJob(BackupJob job) {
    this.job = job;
  }


  public Backup schedule(BackupSchedule schedule) {
    
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BackupSchedule getSchedule() {
    return schedule;
  }


  public void setSchedule(BackupSchedule schedule) {
    this.schedule = schedule;
  }


  public Backup retentionCount(Long retentionCount) {
    
    this.retentionCount = retentionCount;
    return this;
  }

   /**
   * Get retentionCount
   * @return retentionCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getRetentionCount() {
    return retentionCount;
  }


  public void setRetentionCount(Long retentionCount) {
    this.retentionCount = retentionCount;
  }


  public Backup backupType(BackupBackupType backupType) {
    
    this.backupType = backupType;
    return this;
  }

   /**
   * Get backupType
   * @return backupType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BackupBackupType getBackupType() {
    return backupType;
  }


  public void setBackupType(BackupBackupType backupType) {
    this.backupType = backupType;
  }


  public Backup storageProvider(BackupStorageProvider storageProvider) {
    
    this.storageProvider = storageProvider;
    return this;
  }

   /**
   * Get storageProvider
   * @return storageProvider
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BackupStorageProvider getStorageProvider() {
    return storageProvider;
  }


  public void setStorageProvider(BackupStorageProvider storageProvider) {
    this.storageProvider = storageProvider;
  }


  public Backup backupProvider(BackupBackupProvider backupProvider) {
    
    this.backupProvider = backupProvider;
    return this;
  }

   /**
   * Get backupProvider
   * @return backupProvider
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BackupBackupProvider getBackupProvider() {
    return backupProvider;
  }


  public void setBackupProvider(BackupBackupProvider backupProvider) {
    this.backupProvider = backupProvider;
  }


  public Backup backupRespository(BackupBackupRespository backupRespository) {
    
    this.backupRespository = backupRespository;
    return this;
  }

   /**
   * Get backupRespository
   * @return backupRespository
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BackupBackupRespository getBackupRespository() {
    return backupRespository;
  }


  public void setBackupRespository(BackupBackupRespository backupRespository) {
    this.backupRespository = backupRespository;
  }


  public Backup cronExpression(String cronExpression) {
    
    this.cronExpression = cronExpression;
    return this;
  }

   /**
   * Cron Expression
   * @return cronExpression
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Cron Expression")

  public String getCronExpression() {
    return cronExpression;
  }


  public void setCronExpression(String cronExpression) {
    this.cronExpression = cronExpression;
  }


  public Backup nextFire(OffsetDateTime nextFire) {
    
    this.nextFire = nextFire;
    return this;
  }

   /**
   * Next Fire
   * @return nextFire
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Next Fire")

  public OffsetDateTime getNextFire() {
    return nextFire;
  }


  public void setNextFire(OffsetDateTime nextFire) {
    this.nextFire = nextFire;
  }


  public Backup lastStatus(String lastStatus) {
    
    this.lastStatus = lastStatus;
    return this;
  }

   /**
   * Last Status
   * @return lastStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last Status")

  public String getLastStatus() {
    return lastStatus;
  }


  public void setLastStatus(String lastStatus) {
    this.lastStatus = lastStatus;
  }


  public Backup lastResult(BackupLastResult lastResult) {
    
    this.lastResult = lastResult;
    return this;
  }

   /**
   * Get lastResult
   * @return lastResult
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BackupLastResult getLastResult() {
    return lastResult;
  }


  public void setLastResult(BackupLastResult lastResult) {
    this.lastResult = lastResult;
  }


  public Backup stats(BackupStats stats) {
    
    this.stats = stats;
    return this;
  }

   /**
   * Get stats
   * @return stats
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BackupStats getStats() {
    return stats;
  }


  public void setStats(BackupStats stats) {
    this.stats = stats;
  }


  public Backup enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Enabled
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Enabled")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public Backup dateCreated(OffsetDateTime dateCreated) {
    
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * Date Created
   * @return dateCreated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date Created")

  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }


  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public Backup lastUpdated(OffsetDateTime lastUpdated) {
    
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * Last Updated
   * @return lastUpdated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last Updated")

  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }


  public void setLastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Backup backup = (Backup) o;
    return Objects.equals(this.id, backup.id) &&
        Objects.equals(this.name, backup.name) &&
        Objects.equals(this.locationType, backup.locationType) &&
        Objects.equals(this.instance, backup.instance) &&
        Objects.equals(this.containerId, backup.containerId) &&
        Objects.equals(this.job, backup.job) &&
        Objects.equals(this.schedule, backup.schedule) &&
        Objects.equals(this.retentionCount, backup.retentionCount) &&
        Objects.equals(this.backupType, backup.backupType) &&
        Objects.equals(this.storageProvider, backup.storageProvider) &&
        Objects.equals(this.backupProvider, backup.backupProvider) &&
        Objects.equals(this.backupRespository, backup.backupRespository) &&
        Objects.equals(this.cronExpression, backup.cronExpression) &&
        Objects.equals(this.nextFire, backup.nextFire) &&
        Objects.equals(this.lastStatus, backup.lastStatus) &&
        Objects.equals(this.lastResult, backup.lastResult) &&
        Objects.equals(this.stats, backup.stats) &&
        Objects.equals(this.enabled, backup.enabled) &&
        Objects.equals(this.dateCreated, backup.dateCreated) &&
        Objects.equals(this.lastUpdated, backup.lastUpdated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, locationType, instance, containerId, job, schedule, retentionCount, backupType, storageProvider, backupProvider, backupRespository, cronExpression, nextFire, lastStatus, lastResult, stats, enabled, dateCreated, lastUpdated);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Backup {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    locationType: ").append(toIndentedString(locationType)).append("\n");
    sb.append("    instance: ").append(toIndentedString(instance)).append("\n");
    sb.append("    containerId: ").append(toIndentedString(containerId)).append("\n");
    sb.append("    job: ").append(toIndentedString(job)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    retentionCount: ").append(toIndentedString(retentionCount)).append("\n");
    sb.append("    backupType: ").append(toIndentedString(backupType)).append("\n");
    sb.append("    storageProvider: ").append(toIndentedString(storageProvider)).append("\n");
    sb.append("    backupProvider: ").append(toIndentedString(backupProvider)).append("\n");
    sb.append("    backupRespository: ").append(toIndentedString(backupRespository)).append("\n");
    sb.append("    cronExpression: ").append(toIndentedString(cronExpression)).append("\n");
    sb.append("    nextFire: ").append(toIndentedString(nextFire)).append("\n");
    sb.append("    lastStatus: ").append(toIndentedString(lastStatus)).append("\n");
    sb.append("    lastResult: ").append(toIndentedString(lastResult)).append("\n");
    sb.append("    stats: ").append(toIndentedString(stats)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

