/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Custom External Configuration
 */
@ApiModel(description = "Custom External Configuration")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class UserSourceCreateCustomExternal {
  public static final String SERIALIZED_NAME_LOGIN_URL = "loginUrl";
  @SerializedName(SERIALIZED_NAME_LOGIN_URL)
  private String loginUrl;

  public static final String SERIALIZED_NAME_DO_NOT_INCLUDE_S_A_M_L_REQUEST = "doNotIncludeSAMLRequest";
  @SerializedName(SERIALIZED_NAME_DO_NOT_INCLUDE_S_A_M_L_REQUEST)
  private Boolean doNotIncludeSAMLRequest = false;

  public static final String SERIALIZED_NAME_LOGOUT = "logout";
  @SerializedName(SERIALIZED_NAME_LOGOUT)
  private String logout;

  /**
   * Encryption Algorithm
   */
  @JsonAdapter(EncryptionAlgoEnum.Adapter.class)
  public enum EncryptionAlgoEnum {
    NONE("NONE"),
    
    AES("AES"),
    
    DES("DES"),
    
    DESEDE("DESede"),
    
    HMACSHA1("HmacSHA1"),
    
    HMACSHA256("HmacSHA256");

    private String value;

    EncryptionAlgoEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EncryptionAlgoEnum fromValue(String value) {
      for (EncryptionAlgoEnum b : EncryptionAlgoEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EncryptionAlgoEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EncryptionAlgoEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EncryptionAlgoEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EncryptionAlgoEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ENCRYPTION_ALGO = "encryptionAlgo";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_ALGO)
  private EncryptionAlgoEnum encryptionAlgo;

  public static final String SERIALIZED_NAME_ENCRYPTION_KEY = "encryptionKey";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_KEY)
  private String encryptionKey;


  public UserSourceCreateCustomExternal loginUrl(String loginUrl) {
    
    this.loginUrl = loginUrl;
    return this;
  }

   /**
   * External Login URL
   * @return loginUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://fqdn", value = "External Login URL")

  public String getLoginUrl() {
    return loginUrl;
  }


  public void setLoginUrl(String loginUrl) {
    this.loginUrl = loginUrl;
  }


  public UserSourceCreateCustomExternal doNotIncludeSAMLRequest(Boolean doNotIncludeSAMLRequest) {
    
    this.doNotIncludeSAMLRequest = doNotIncludeSAMLRequest;
    return this;
  }

   /**
   * Do not include SAMLRequest
   * @return doNotIncludeSAMLRequest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Do not include SAMLRequest")

  public Boolean getDoNotIncludeSAMLRequest() {
    return doNotIncludeSAMLRequest;
  }


  public void setDoNotIncludeSAMLRequest(Boolean doNotIncludeSAMLRequest) {
    this.doNotIncludeSAMLRequest = doNotIncludeSAMLRequest;
  }


  public UserSourceCreateCustomExternal logout(String logout) {
    
    this.logout = logout;
    return this;
  }

   /**
   * External Logout URL
   * @return logout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://fqdn/logout", value = "External Logout URL")

  public String getLogout() {
    return logout;
  }


  public void setLogout(String logout) {
    this.logout = logout;
  }


  public UserSourceCreateCustomExternal encryptionAlgo(EncryptionAlgoEnum encryptionAlgo) {
    
    this.encryptionAlgo = encryptionAlgo;
    return this;
  }

   /**
   * Encryption Algorithm
   * @return encryptionAlgo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Encryption Algorithm")

  public EncryptionAlgoEnum getEncryptionAlgo() {
    return encryptionAlgo;
  }


  public void setEncryptionAlgo(EncryptionAlgoEnum encryptionAlgo) {
    this.encryptionAlgo = encryptionAlgo;
  }


  public UserSourceCreateCustomExternal encryptionKey(String encryptionKey) {
    
    this.encryptionKey = encryptionKey;
    return this;
  }

   /**
   * Encryption Key
   * @return encryptionKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "MIIEIDCCAwigAwcNAQEF  BQAwWzELMoZXVzIF", value = "Encryption Key")

  public String getEncryptionKey() {
    return encryptionKey;
  }


  public void setEncryptionKey(String encryptionKey) {
    this.encryptionKey = encryptionKey;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserSourceCreateCustomExternal userSourceCreateCustomExternal = (UserSourceCreateCustomExternal) o;
    return Objects.equals(this.loginUrl, userSourceCreateCustomExternal.loginUrl) &&
        Objects.equals(this.doNotIncludeSAMLRequest, userSourceCreateCustomExternal.doNotIncludeSAMLRequest) &&
        Objects.equals(this.logout, userSourceCreateCustomExternal.logout) &&
        Objects.equals(this.encryptionAlgo, userSourceCreateCustomExternal.encryptionAlgo) &&
        Objects.equals(this.encryptionKey, userSourceCreateCustomExternal.encryptionKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loginUrl, doNotIncludeSAMLRequest, logout, encryptionAlgo, encryptionKey);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserSourceCreateCustomExternal {\n");
    sb.append("    loginUrl: ").append(toIndentedString(loginUrl)).append("\n");
    sb.append("    doNotIncludeSAMLRequest: ").append(toIndentedString(doNotIncludeSAMLRequest)).append("\n");
    sb.append("    logout: ").append(toIndentedString(logout)).append("\n");
    sb.append("    encryptionAlgo: ").append(toIndentedString(encryptionAlgo)).append("\n");
    sb.append("    encryptionKey: ").append(toIndentedString(encryptionKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

