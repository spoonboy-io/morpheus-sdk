/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * HealthDatabaseInnodbStats
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class HealthDatabaseInnodbStats {
  public static final String SERIALIZED_NAME_LARGE_MEMORY = "largeMemory";
  @SerializedName(SERIALIZED_NAME_LARGE_MEMORY)
  private Long largeMemory;

  public static final String SERIALIZED_NAME_DICTIONARY_MEMORY = "dictionaryMemory";
  @SerializedName(SERIALIZED_NAME_DICTIONARY_MEMORY)
  private Long dictionaryMemory;

  public static final String SERIALIZED_NAME_BUFFER_POOL_SIZE = "bufferPoolSize";
  @SerializedName(SERIALIZED_NAME_BUFFER_POOL_SIZE)
  private Long bufferPoolSize;

  public static final String SERIALIZED_NAME_FREE_BUFFERS = "freeBuffers";
  @SerializedName(SERIALIZED_NAME_FREE_BUFFERS)
  private Long freeBuffers;

  public static final String SERIALIZED_NAME_DATABASE_PAGES = "databasePages";
  @SerializedName(SERIALIZED_NAME_DATABASE_PAGES)
  private Long databasePages;

  public static final String SERIALIZED_NAME_OLD_PAGES = "oldPages";
  @SerializedName(SERIALIZED_NAME_OLD_PAGES)
  private Long oldPages;

  public static final String SERIALIZED_NAME_PENDING_READS = "pendingReads";
  @SerializedName(SERIALIZED_NAME_PENDING_READS)
  private Long pendingReads;

  public static final String SERIALIZED_NAME_INSERTS_PER_SECOND = "insertsPerSecond";
  @SerializedName(SERIALIZED_NAME_INSERTS_PER_SECOND)
  private BigDecimal insertsPerSecond;

  public static final String SERIALIZED_NAME_UPDATES_PER_SECOND = "updatesPerSecond";
  @SerializedName(SERIALIZED_NAME_UPDATES_PER_SECOND)
  private BigDecimal updatesPerSecond;

  public static final String SERIALIZED_NAME_DELETES_PER_SECOND = "deletesPerSecond";
  @SerializedName(SERIALIZED_NAME_DELETES_PER_SECOND)
  private BigDecimal deletesPerSecond;

  public static final String SERIALIZED_NAME_READS_PER_SECOND = "readsPerSecond";
  @SerializedName(SERIALIZED_NAME_READS_PER_SECOND)
  private BigDecimal readsPerSecond;

  public static final String SERIALIZED_NAME_BUFFER_HIT_RATE = "bufferHitRate";
  @SerializedName(SERIALIZED_NAME_BUFFER_HIT_RATE)
  private Long bufferHitRate;


  public HealthDatabaseInnodbStats largeMemory(Long largeMemory) {
    
    this.largeMemory = largeMemory;
    return this;
  }

   /**
   * Get largeMemory
   * @return largeMemory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getLargeMemory() {
    return largeMemory;
  }


  public void setLargeMemory(Long largeMemory) {
    this.largeMemory = largeMemory;
  }


  public HealthDatabaseInnodbStats dictionaryMemory(Long dictionaryMemory) {
    
    this.dictionaryMemory = dictionaryMemory;
    return this;
  }

   /**
   * Get dictionaryMemory
   * @return dictionaryMemory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getDictionaryMemory() {
    return dictionaryMemory;
  }


  public void setDictionaryMemory(Long dictionaryMemory) {
    this.dictionaryMemory = dictionaryMemory;
  }


  public HealthDatabaseInnodbStats bufferPoolSize(Long bufferPoolSize) {
    
    this.bufferPoolSize = bufferPoolSize;
    return this;
  }

   /**
   * Get bufferPoolSize
   * @return bufferPoolSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getBufferPoolSize() {
    return bufferPoolSize;
  }


  public void setBufferPoolSize(Long bufferPoolSize) {
    this.bufferPoolSize = bufferPoolSize;
  }


  public HealthDatabaseInnodbStats freeBuffers(Long freeBuffers) {
    
    this.freeBuffers = freeBuffers;
    return this;
  }

   /**
   * Get freeBuffers
   * @return freeBuffers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getFreeBuffers() {
    return freeBuffers;
  }


  public void setFreeBuffers(Long freeBuffers) {
    this.freeBuffers = freeBuffers;
  }


  public HealthDatabaseInnodbStats databasePages(Long databasePages) {
    
    this.databasePages = databasePages;
    return this;
  }

   /**
   * Get databasePages
   * @return databasePages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getDatabasePages() {
    return databasePages;
  }


  public void setDatabasePages(Long databasePages) {
    this.databasePages = databasePages;
  }


  public HealthDatabaseInnodbStats oldPages(Long oldPages) {
    
    this.oldPages = oldPages;
    return this;
  }

   /**
   * Get oldPages
   * @return oldPages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getOldPages() {
    return oldPages;
  }


  public void setOldPages(Long oldPages) {
    this.oldPages = oldPages;
  }


  public HealthDatabaseInnodbStats pendingReads(Long pendingReads) {
    
    this.pendingReads = pendingReads;
    return this;
  }

   /**
   * Get pendingReads
   * @return pendingReads
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getPendingReads() {
    return pendingReads;
  }


  public void setPendingReads(Long pendingReads) {
    this.pendingReads = pendingReads;
  }


  public HealthDatabaseInnodbStats insertsPerSecond(BigDecimal insertsPerSecond) {
    
    this.insertsPerSecond = insertsPerSecond;
    return this;
  }

   /**
   * Get insertsPerSecond
   * @return insertsPerSecond
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getInsertsPerSecond() {
    return insertsPerSecond;
  }


  public void setInsertsPerSecond(BigDecimal insertsPerSecond) {
    this.insertsPerSecond = insertsPerSecond;
  }


  public HealthDatabaseInnodbStats updatesPerSecond(BigDecimal updatesPerSecond) {
    
    this.updatesPerSecond = updatesPerSecond;
    return this;
  }

   /**
   * Get updatesPerSecond
   * @return updatesPerSecond
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getUpdatesPerSecond() {
    return updatesPerSecond;
  }


  public void setUpdatesPerSecond(BigDecimal updatesPerSecond) {
    this.updatesPerSecond = updatesPerSecond;
  }


  public HealthDatabaseInnodbStats deletesPerSecond(BigDecimal deletesPerSecond) {
    
    this.deletesPerSecond = deletesPerSecond;
    return this;
  }

   /**
   * Get deletesPerSecond
   * @return deletesPerSecond
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getDeletesPerSecond() {
    return deletesPerSecond;
  }


  public void setDeletesPerSecond(BigDecimal deletesPerSecond) {
    this.deletesPerSecond = deletesPerSecond;
  }


  public HealthDatabaseInnodbStats readsPerSecond(BigDecimal readsPerSecond) {
    
    this.readsPerSecond = readsPerSecond;
    return this;
  }

   /**
   * Get readsPerSecond
   * @return readsPerSecond
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getReadsPerSecond() {
    return readsPerSecond;
  }


  public void setReadsPerSecond(BigDecimal readsPerSecond) {
    this.readsPerSecond = readsPerSecond;
  }


  public HealthDatabaseInnodbStats bufferHitRate(Long bufferHitRate) {
    
    this.bufferHitRate = bufferHitRate;
    return this;
  }

   /**
   * Get bufferHitRate
   * @return bufferHitRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getBufferHitRate() {
    return bufferHitRate;
  }


  public void setBufferHitRate(Long bufferHitRate) {
    this.bufferHitRate = bufferHitRate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HealthDatabaseInnodbStats healthDatabaseInnodbStats = (HealthDatabaseInnodbStats) o;
    return Objects.equals(this.largeMemory, healthDatabaseInnodbStats.largeMemory) &&
        Objects.equals(this.dictionaryMemory, healthDatabaseInnodbStats.dictionaryMemory) &&
        Objects.equals(this.bufferPoolSize, healthDatabaseInnodbStats.bufferPoolSize) &&
        Objects.equals(this.freeBuffers, healthDatabaseInnodbStats.freeBuffers) &&
        Objects.equals(this.databasePages, healthDatabaseInnodbStats.databasePages) &&
        Objects.equals(this.oldPages, healthDatabaseInnodbStats.oldPages) &&
        Objects.equals(this.pendingReads, healthDatabaseInnodbStats.pendingReads) &&
        Objects.equals(this.insertsPerSecond, healthDatabaseInnodbStats.insertsPerSecond) &&
        Objects.equals(this.updatesPerSecond, healthDatabaseInnodbStats.updatesPerSecond) &&
        Objects.equals(this.deletesPerSecond, healthDatabaseInnodbStats.deletesPerSecond) &&
        Objects.equals(this.readsPerSecond, healthDatabaseInnodbStats.readsPerSecond) &&
        Objects.equals(this.bufferHitRate, healthDatabaseInnodbStats.bufferHitRate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(largeMemory, dictionaryMemory, bufferPoolSize, freeBuffers, databasePages, oldPages, pendingReads, insertsPerSecond, updatesPerSecond, deletesPerSecond, readsPerSecond, bufferHitRate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HealthDatabaseInnodbStats {\n");
    sb.append("    largeMemory: ").append(toIndentedString(largeMemory)).append("\n");
    sb.append("    dictionaryMemory: ").append(toIndentedString(dictionaryMemory)).append("\n");
    sb.append("    bufferPoolSize: ").append(toIndentedString(bufferPoolSize)).append("\n");
    sb.append("    freeBuffers: ").append(toIndentedString(freeBuffers)).append("\n");
    sb.append("    databasePages: ").append(toIndentedString(databasePages)).append("\n");
    sb.append("    oldPages: ").append(toIndentedString(oldPages)).append("\n");
    sb.append("    pendingReads: ").append(toIndentedString(pendingReads)).append("\n");
    sb.append("    insertsPerSecond: ").append(toIndentedString(insertsPerSecond)).append("\n");
    sb.append("    updatesPerSecond: ").append(toIndentedString(updatesPerSecond)).append("\n");
    sb.append("    deletesPerSecond: ").append(toIndentedString(deletesPerSecond)).append("\n");
    sb.append("    readsPerSecond: ").append(toIndentedString(readsPerSecond)).append("\n");
    sb.append("    bufferHitRate: ").append(toIndentedString(bufferHitRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

