/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ApiTaskSetsTaskSetTasks;

/**
 * ApiTaskSetsIdTaskSet
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ApiTaskSetsIdTaskSet {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private List<String> labels = null;

  /**
   * Workflow type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    PROVISION("provision"),
    
    OPERATION("operation");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type = TypeEnum.PROVISION;

  public static final String SERIALIZED_NAME_OPTION_TYPES = "optionTypes";
  @SerializedName(SERIALIZED_NAME_OPTION_TYPES)
  private List<Long> optionTypes = null;

  public static final String SERIALIZED_NAME_TASKS = "tasks";
  @SerializedName(SERIALIZED_NAME_TASKS)
  private ApiTaskSetsTaskSetTasks tasks;


  public ApiTaskSetsIdTaskSet name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * A unique name for the workflow
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Sample Workflow", value = "A unique name for the workflow")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ApiTaskSetsIdTaskSet description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A description of the workflow
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description of the workflow")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ApiTaskSetsIdTaskSet labels(List<String> labels) {
    
    this.labels = labels;
    return this;
  }

  public ApiTaskSetsIdTaskSet addLabelsItem(String labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<String>();
    }
    this.labels.add(labelsItem);
    return this;
  }

   /**
   * An array of Category labels for filtering
   * @return labels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of Category labels for filtering")

  public List<String> getLabels() {
    return labels;
  }


  public void setLabels(List<String> labels) {
    this.labels = labels;
  }


  public ApiTaskSetsIdTaskSet type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Workflow type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Workflow type")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public ApiTaskSetsIdTaskSet optionTypes(List<Long> optionTypes) {
    
    this.optionTypes = optionTypes;
    return this;
  }

  public ApiTaskSetsIdTaskSet addOptionTypesItem(Long optionTypesItem) {
    if (this.optionTypes == null) {
      this.optionTypes = new ArrayList<Long>();
    }
    this.optionTypes.add(optionTypesItem);
    return this;
  }

   /**
   * List of option type IDs for use with operational workflow configuration.
   * @return optionTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of option type IDs for use with operational workflow configuration.")

  public List<Long> getOptionTypes() {
    return optionTypes;
  }


  public void setOptionTypes(List<Long> optionTypes) {
    this.optionTypes = optionTypes;
  }


  public ApiTaskSetsIdTaskSet tasks(ApiTaskSetsTaskSetTasks tasks) {
    
    this.tasks = tasks;
    return this;
  }

   /**
   * Get tasks
   * @return tasks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ApiTaskSetsTaskSetTasks getTasks() {
    return tasks;
  }


  public void setTasks(ApiTaskSetsTaskSetTasks tasks) {
    this.tasks = tasks;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiTaskSetsIdTaskSet apiTaskSetsIdTaskSet = (ApiTaskSetsIdTaskSet) o;
    return Objects.equals(this.name, apiTaskSetsIdTaskSet.name) &&
        Objects.equals(this.description, apiTaskSetsIdTaskSet.description) &&
        Objects.equals(this.labels, apiTaskSetsIdTaskSet.labels) &&
        Objects.equals(this.type, apiTaskSetsIdTaskSet.type) &&
        Objects.equals(this.optionTypes, apiTaskSetsIdTaskSet.optionTypes) &&
        Objects.equals(this.tasks, apiTaskSetsIdTaskSet.tasks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, labels, type, optionTypes, tasks);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiTaskSetsIdTaskSet {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    optionTypes: ").append(toIndentedString(optionTypes)).append("\n");
    sb.append("    tasks: ").append(toIndentedString(tasks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

