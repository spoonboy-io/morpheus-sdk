/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.HealthDatabaseInnodbStats;
import org.openapitools.client.model.HealthDatabaseScans;
import org.openapitools.client.model.HealthDatabaseSlowQueries;
import org.openapitools.client.model.HealthDatabaseStats;

/**
 * HealthDatabase
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class HealthDatabase {
  public static final String SERIALIZED_NAME_SUCCESS = "success";
  @SerializedName(SERIALIZED_NAME_SUCCESS)
  private Boolean success;

  public static final String SERIALIZED_NAME_CONNECTION_LIST = "connectionList";
  @SerializedName(SERIALIZED_NAME_CONNECTION_LIST)
  private List<Object> connectionList = null;

  public static final String SERIALIZED_NAME_BUSY_CONNECTIONS = "busyConnections";
  @SerializedName(SERIALIZED_NAME_BUSY_CONNECTIONS)
  private List<String> busyConnections = null;

  public static final String SERIALIZED_NAME_MAX_CONNECTIONS = "maxConnections";
  @SerializedName(SERIALIZED_NAME_MAX_CONNECTIONS)
  private Long maxConnections;

  public static final String SERIALIZED_NAME_MAX_USED_CONNECTIONS = "maxUsedConnections";
  @SerializedName(SERIALIZED_NAME_MAX_USED_CONNECTIONS)
  private Long maxUsedConnections;

  public static final String SERIALIZED_NAME_USED_CONNECTIONS = "usedConnections";
  @SerializedName(SERIALIZED_NAME_USED_CONNECTIONS)
  private Long usedConnections;

  public static final String SERIALIZED_NAME_ABORTED_CONNECTIONS = "abortedConnections";
  @SerializedName(SERIALIZED_NAME_ABORTED_CONNECTIONS)
  private Long abortedConnections;

  public static final String SERIALIZED_NAME_INNODB_STATUS = "innodbStatus";
  @SerializedName(SERIALIZED_NAME_INNODB_STATUS)
  private String innodbStatus;

  public static final String SERIALIZED_NAME_STATS = "stats";
  @SerializedName(SERIALIZED_NAME_STATS)
  private HealthDatabaseStats stats;

  public static final String SERIALIZED_NAME_SCANS = "scans";
  @SerializedName(SERIALIZED_NAME_SCANS)
  private HealthDatabaseScans scans;

  public static final String SERIALIZED_NAME_SLOW_QUERIES = "slowQueries";
  @SerializedName(SERIALIZED_NAME_SLOW_QUERIES)
  private List<HealthDatabaseSlowQueries> slowQueries = null;

  public static final String SERIALIZED_NAME_INNODB_STATS = "innodbStats";
  @SerializedName(SERIALIZED_NAME_INNODB_STATS)
  private HealthDatabaseInnodbStats innodbStats;

  public static final String SERIALIZED_NAME_SCAN_PERCENT = "scanPercent";
  @SerializedName(SERIALIZED_NAME_SCAN_PERCENT)
  private BigDecimal scanPercent;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;


  public HealthDatabase success(Boolean success) {
    
    this.success = success;
    return this;
  }

   /**
   * Get success
   * @return success
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSuccess() {
    return success;
  }


  public void setSuccess(Boolean success) {
    this.success = success;
  }


  public HealthDatabase connectionList(List<Object> connectionList) {
    
    this.connectionList = connectionList;
    return this;
  }

  public HealthDatabase addConnectionListItem(Object connectionListItem) {
    if (this.connectionList == null) {
      this.connectionList = new ArrayList<Object>();
    }
    this.connectionList.add(connectionListItem);
    return this;
  }

   /**
   * Get connectionList
   * @return connectionList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getConnectionList() {
    return connectionList;
  }


  public void setConnectionList(List<Object> connectionList) {
    this.connectionList = connectionList;
  }


  public HealthDatabase busyConnections(List<String> busyConnections) {
    
    this.busyConnections = busyConnections;
    return this;
  }

  public HealthDatabase addBusyConnectionsItem(String busyConnectionsItem) {
    if (this.busyConnections == null) {
      this.busyConnections = new ArrayList<String>();
    }
    this.busyConnections.add(busyConnectionsItem);
    return this;
  }

   /**
   * Get busyConnections
   * @return busyConnections
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getBusyConnections() {
    return busyConnections;
  }


  public void setBusyConnections(List<String> busyConnections) {
    this.busyConnections = busyConnections;
  }


  public HealthDatabase maxConnections(Long maxConnections) {
    
    this.maxConnections = maxConnections;
    return this;
  }

   /**
   * Get maxConnections
   * @return maxConnections
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getMaxConnections() {
    return maxConnections;
  }


  public void setMaxConnections(Long maxConnections) {
    this.maxConnections = maxConnections;
  }


  public HealthDatabase maxUsedConnections(Long maxUsedConnections) {
    
    this.maxUsedConnections = maxUsedConnections;
    return this;
  }

   /**
   * Get maxUsedConnections
   * @return maxUsedConnections
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getMaxUsedConnections() {
    return maxUsedConnections;
  }


  public void setMaxUsedConnections(Long maxUsedConnections) {
    this.maxUsedConnections = maxUsedConnections;
  }


  public HealthDatabase usedConnections(Long usedConnections) {
    
    this.usedConnections = usedConnections;
    return this;
  }

   /**
   * Get usedConnections
   * @return usedConnections
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getUsedConnections() {
    return usedConnections;
  }


  public void setUsedConnections(Long usedConnections) {
    this.usedConnections = usedConnections;
  }


  public HealthDatabase abortedConnections(Long abortedConnections) {
    
    this.abortedConnections = abortedConnections;
    return this;
  }

   /**
   * Get abortedConnections
   * @return abortedConnections
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getAbortedConnections() {
    return abortedConnections;
  }


  public void setAbortedConnections(Long abortedConnections) {
    this.abortedConnections = abortedConnections;
  }


  public HealthDatabase innodbStatus(String innodbStatus) {
    
    this.innodbStatus = innodbStatus;
    return this;
  }

   /**
   * Get innodbStatus
   * @return innodbStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInnodbStatus() {
    return innodbStatus;
  }


  public void setInnodbStatus(String innodbStatus) {
    this.innodbStatus = innodbStatus;
  }


  public HealthDatabase stats(HealthDatabaseStats stats) {
    
    this.stats = stats;
    return this;
  }

   /**
   * Get stats
   * @return stats
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HealthDatabaseStats getStats() {
    return stats;
  }


  public void setStats(HealthDatabaseStats stats) {
    this.stats = stats;
  }


  public HealthDatabase scans(HealthDatabaseScans scans) {
    
    this.scans = scans;
    return this;
  }

   /**
   * Get scans
   * @return scans
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HealthDatabaseScans getScans() {
    return scans;
  }


  public void setScans(HealthDatabaseScans scans) {
    this.scans = scans;
  }


  public HealthDatabase slowQueries(List<HealthDatabaseSlowQueries> slowQueries) {
    
    this.slowQueries = slowQueries;
    return this;
  }

  public HealthDatabase addSlowQueriesItem(HealthDatabaseSlowQueries slowQueriesItem) {
    if (this.slowQueries == null) {
      this.slowQueries = new ArrayList<HealthDatabaseSlowQueries>();
    }
    this.slowQueries.add(slowQueriesItem);
    return this;
  }

   /**
   * Get slowQueries
   * @return slowQueries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<HealthDatabaseSlowQueries> getSlowQueries() {
    return slowQueries;
  }


  public void setSlowQueries(List<HealthDatabaseSlowQueries> slowQueries) {
    this.slowQueries = slowQueries;
  }


  public HealthDatabase innodbStats(HealthDatabaseInnodbStats innodbStats) {
    
    this.innodbStats = innodbStats;
    return this;
  }

   /**
   * Get innodbStats
   * @return innodbStats
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HealthDatabaseInnodbStats getInnodbStats() {
    return innodbStats;
  }


  public void setInnodbStats(HealthDatabaseInnodbStats innodbStats) {
    this.innodbStats = innodbStats;
  }


  public HealthDatabase scanPercent(BigDecimal scanPercent) {
    
    this.scanPercent = scanPercent;
    return this;
  }

   /**
   * Get scanPercent
   * @return scanPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getScanPercent() {
    return scanPercent;
  }


  public void setScanPercent(BigDecimal scanPercent) {
    this.scanPercent = scanPercent;
  }


  public HealthDatabase status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HealthDatabase healthDatabase = (HealthDatabase) o;
    return Objects.equals(this.success, healthDatabase.success) &&
        Objects.equals(this.connectionList, healthDatabase.connectionList) &&
        Objects.equals(this.busyConnections, healthDatabase.busyConnections) &&
        Objects.equals(this.maxConnections, healthDatabase.maxConnections) &&
        Objects.equals(this.maxUsedConnections, healthDatabase.maxUsedConnections) &&
        Objects.equals(this.usedConnections, healthDatabase.usedConnections) &&
        Objects.equals(this.abortedConnections, healthDatabase.abortedConnections) &&
        Objects.equals(this.innodbStatus, healthDatabase.innodbStatus) &&
        Objects.equals(this.stats, healthDatabase.stats) &&
        Objects.equals(this.scans, healthDatabase.scans) &&
        Objects.equals(this.slowQueries, healthDatabase.slowQueries) &&
        Objects.equals(this.innodbStats, healthDatabase.innodbStats) &&
        Objects.equals(this.scanPercent, healthDatabase.scanPercent) &&
        Objects.equals(this.status, healthDatabase.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(success, connectionList, busyConnections, maxConnections, maxUsedConnections, usedConnections, abortedConnections, innodbStatus, stats, scans, slowQueries, innodbStats, scanPercent, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HealthDatabase {\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    connectionList: ").append(toIndentedString(connectionList)).append("\n");
    sb.append("    busyConnections: ").append(toIndentedString(busyConnections)).append("\n");
    sb.append("    maxConnections: ").append(toIndentedString(maxConnections)).append("\n");
    sb.append("    maxUsedConnections: ").append(toIndentedString(maxUsedConnections)).append("\n");
    sb.append("    usedConnections: ").append(toIndentedString(usedConnections)).append("\n");
    sb.append("    abortedConnections: ").append(toIndentedString(abortedConnections)).append("\n");
    sb.append("    innodbStatus: ").append(toIndentedString(innodbStatus)).append("\n");
    sb.append("    stats: ").append(toIndentedString(stats)).append("\n");
    sb.append("    scans: ").append(toIndentedString(scans)).append("\n");
    sb.append("    slowQueries: ").append(toIndentedString(slowQueries)).append("\n");
    sb.append("    innodbStats: ").append(toIndentedString(innodbStats)).append("\n");
    sb.append("    scanPercent: ").append(toIndentedString(scanPercent)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

