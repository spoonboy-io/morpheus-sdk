/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.HealthRabbitQueues;

/**
 * HealthRabbit
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class HealthRabbit {
  public static final String SERIALIZED_NAME_SUCCESS = "success";
  @SerializedName(SERIALIZED_NAME_SUCCESS)
  private Boolean success;

  public static final String SERIALIZED_NAME_BUSY_QUEUES = "busyQueues";
  @SerializedName(SERIALIZED_NAME_BUSY_QUEUES)
  private List<Object> busyQueues = null;

  public static final String SERIALIZED_NAME_ERROR_QUEUES = "errorQueues";
  @SerializedName(SERIALIZED_NAME_ERROR_QUEUES)
  private List<Object> errorQueues = null;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_QUEUES = "queues";
  @SerializedName(SERIALIZED_NAME_QUEUES)
  private List<HealthRabbitQueues> queues = null;


  public HealthRabbit success(Boolean success) {
    
    this.success = success;
    return this;
  }

   /**
   * Get success
   * @return success
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSuccess() {
    return success;
  }


  public void setSuccess(Boolean success) {
    this.success = success;
  }


  public HealthRabbit busyQueues(List<Object> busyQueues) {
    
    this.busyQueues = busyQueues;
    return this;
  }

  public HealthRabbit addBusyQueuesItem(Object busyQueuesItem) {
    if (this.busyQueues == null) {
      this.busyQueues = new ArrayList<Object>();
    }
    this.busyQueues.add(busyQueuesItem);
    return this;
  }

   /**
   * Get busyQueues
   * @return busyQueues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getBusyQueues() {
    return busyQueues;
  }


  public void setBusyQueues(List<Object> busyQueues) {
    this.busyQueues = busyQueues;
  }


  public HealthRabbit errorQueues(List<Object> errorQueues) {
    
    this.errorQueues = errorQueues;
    return this;
  }

  public HealthRabbit addErrorQueuesItem(Object errorQueuesItem) {
    if (this.errorQueues == null) {
      this.errorQueues = new ArrayList<Object>();
    }
    this.errorQueues.add(errorQueuesItem);
    return this;
  }

   /**
   * Get errorQueues
   * @return errorQueues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getErrorQueues() {
    return errorQueues;
  }


  public void setErrorQueues(List<Object> errorQueues) {
    this.errorQueues = errorQueues;
  }


  public HealthRabbit status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public HealthRabbit queues(List<HealthRabbitQueues> queues) {
    
    this.queues = queues;
    return this;
  }

  public HealthRabbit addQueuesItem(HealthRabbitQueues queuesItem) {
    if (this.queues == null) {
      this.queues = new ArrayList<HealthRabbitQueues>();
    }
    this.queues.add(queuesItem);
    return this;
  }

   /**
   * Get queues
   * @return queues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<HealthRabbitQueues> getQueues() {
    return queues;
  }


  public void setQueues(List<HealthRabbitQueues> queues) {
    this.queues = queues;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HealthRabbit healthRabbit = (HealthRabbit) o;
    return Objects.equals(this.success, healthRabbit.success) &&
        Objects.equals(this.busyQueues, healthRabbit.busyQueues) &&
        Objects.equals(this.errorQueues, healthRabbit.errorQueues) &&
        Objects.equals(this.status, healthRabbit.status) &&
        Objects.equals(this.queues, healthRabbit.queues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(success, busyQueues, errorQueues, status, queues);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HealthRabbit {\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    busyQueues: ").append(toIndentedString(busyQueues)).append("\n");
    sb.append("    errorQueues: ").append(toIndentedString(errorQueues)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    queues: ").append(toIndentedString(queues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

