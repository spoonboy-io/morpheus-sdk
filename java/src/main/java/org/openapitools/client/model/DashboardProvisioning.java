/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * DashboardProvisioning
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class DashboardProvisioning {
  public static final String SERIALIZED_NAME_INSTANCE_COUNT = "instanceCount";
  @SerializedName(SERIALIZED_NAME_INSTANCE_COUNT)
  private Long instanceCount;

  public static final String SERIALIZED_NAME_FAVORITE_INSTANCES = "favoriteInstances";
  @SerializedName(SERIALIZED_NAME_FAVORITE_INSTANCES)
  private List<Object> favoriteInstances = null;


  public DashboardProvisioning instanceCount(Long instanceCount) {
    
    this.instanceCount = instanceCount;
    return this;
  }

   /**
   * Get instanceCount
   * @return instanceCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getInstanceCount() {
    return instanceCount;
  }


  public void setInstanceCount(Long instanceCount) {
    this.instanceCount = instanceCount;
  }


  public DashboardProvisioning favoriteInstances(List<Object> favoriteInstances) {
    
    this.favoriteInstances = favoriteInstances;
    return this;
  }

  public DashboardProvisioning addFavoriteInstancesItem(Object favoriteInstancesItem) {
    if (this.favoriteInstances == null) {
      this.favoriteInstances = new ArrayList<Object>();
    }
    this.favoriteInstances.add(favoriteInstancesItem);
    return this;
  }

   /**
   * Get favoriteInstances
   * @return favoriteInstances
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getFavoriteInstances() {
    return favoriteInstances;
  }


  public void setFavoriteInstances(List<Object> favoriteInstances) {
    this.favoriteInstances = favoriteInstances;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DashboardProvisioning dashboardProvisioning = (DashboardProvisioning) o;
    return Objects.equals(this.instanceCount, dashboardProvisioning.instanceCount) &&
        Objects.equals(this.favoriteInstances, dashboardProvisioning.favoriteInstances);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instanceCount, favoriteInstances);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DashboardProvisioning {\n");
    sb.append("    instanceCount: ").append(toIndentedString(instanceCount)).append("\n");
    sb.append("    favoriteInstances: ").append(toIndentedString(favoriteInstances)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

