/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.DashboardActivity;
import org.openapitools.client.model.DashboardBackups;
import org.openapitools.client.model.DashboardInstanceStats;
import org.openapitools.client.model.DashboardLogStats;
import org.openapitools.client.model.DashboardMonitoring;
import org.openapitools.client.model.DashboardProvisioning;

/**
 * Dashboard
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class Dashboard {
  public static final String SERIALIZED_NAME_SUCCESS = "success";
  @SerializedName(SERIALIZED_NAME_SUCCESS)
  private Boolean success;

  public static final String SERIALIZED_NAME_INSTANCE_STATS = "instanceStats";
  @SerializedName(SERIALIZED_NAME_INSTANCE_STATS)
  private DashboardInstanceStats instanceStats;

  public static final String SERIALIZED_NAME_PROVISIONING = "provisioning";
  @SerializedName(SERIALIZED_NAME_PROVISIONING)
  private DashboardProvisioning provisioning;

  public static final String SERIALIZED_NAME_MONITORING = "monitoring";
  @SerializedName(SERIALIZED_NAME_MONITORING)
  private DashboardMonitoring monitoring;

  public static final String SERIALIZED_NAME_BACKUPS = "backups";
  @SerializedName(SERIALIZED_NAME_BACKUPS)
  private DashboardBackups backups;

  public static final String SERIALIZED_NAME_ACTIVITY = "activity";
  @SerializedName(SERIALIZED_NAME_ACTIVITY)
  private List<DashboardActivity> activity = null;

  public static final String SERIALIZED_NAME_LOG_STATS = "logStats";
  @SerializedName(SERIALIZED_NAME_LOG_STATS)
  private DashboardLogStats logStats;


  public Dashboard success(Boolean success) {
    
    this.success = success;
    return this;
  }

   /**
   * Get success
   * @return success
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSuccess() {
    return success;
  }


  public void setSuccess(Boolean success) {
    this.success = success;
  }


  public Dashboard instanceStats(DashboardInstanceStats instanceStats) {
    
    this.instanceStats = instanceStats;
    return this;
  }

   /**
   * Get instanceStats
   * @return instanceStats
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DashboardInstanceStats getInstanceStats() {
    return instanceStats;
  }


  public void setInstanceStats(DashboardInstanceStats instanceStats) {
    this.instanceStats = instanceStats;
  }


  public Dashboard provisioning(DashboardProvisioning provisioning) {
    
    this.provisioning = provisioning;
    return this;
  }

   /**
   * Get provisioning
   * @return provisioning
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DashboardProvisioning getProvisioning() {
    return provisioning;
  }


  public void setProvisioning(DashboardProvisioning provisioning) {
    this.provisioning = provisioning;
  }


  public Dashboard monitoring(DashboardMonitoring monitoring) {
    
    this.monitoring = monitoring;
    return this;
  }

   /**
   * Get monitoring
   * @return monitoring
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DashboardMonitoring getMonitoring() {
    return monitoring;
  }


  public void setMonitoring(DashboardMonitoring monitoring) {
    this.monitoring = monitoring;
  }


  public Dashboard backups(DashboardBackups backups) {
    
    this.backups = backups;
    return this;
  }

   /**
   * Get backups
   * @return backups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DashboardBackups getBackups() {
    return backups;
  }


  public void setBackups(DashboardBackups backups) {
    this.backups = backups;
  }


  public Dashboard activity(List<DashboardActivity> activity) {
    
    this.activity = activity;
    return this;
  }

  public Dashboard addActivityItem(DashboardActivity activityItem) {
    if (this.activity == null) {
      this.activity = new ArrayList<DashboardActivity>();
    }
    this.activity.add(activityItem);
    return this;
  }

   /**
   * Get activity
   * @return activity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<DashboardActivity> getActivity() {
    return activity;
  }


  public void setActivity(List<DashboardActivity> activity) {
    this.activity = activity;
  }


  public Dashboard logStats(DashboardLogStats logStats) {
    
    this.logStats = logStats;
    return this;
  }

   /**
   * Get logStats
   * @return logStats
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DashboardLogStats getLogStats() {
    return logStats;
  }


  public void setLogStats(DashboardLogStats logStats) {
    this.logStats = logStats;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dashboard dashboard = (Dashboard) o;
    return Objects.equals(this.success, dashboard.success) &&
        Objects.equals(this.instanceStats, dashboard.instanceStats) &&
        Objects.equals(this.provisioning, dashboard.provisioning) &&
        Objects.equals(this.monitoring, dashboard.monitoring) &&
        Objects.equals(this.backups, dashboard.backups) &&
        Objects.equals(this.activity, dashboard.activity) &&
        Objects.equals(this.logStats, dashboard.logStats);
  }

  @Override
  public int hashCode() {
    return Objects.hash(success, instanceStats, provisioning, monitoring, backups, activity, logStats);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dashboard {\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    instanceStats: ").append(toIndentedString(instanceStats)).append("\n");
    sb.append("    provisioning: ").append(toIndentedString(provisioning)).append("\n");
    sb.append("    monitoring: ").append(toIndentedString(monitoring)).append("\n");
    sb.append("    backups: ").append(toIndentedString(backups)).append("\n");
    sb.append("    activity: ").append(toIndentedString(activity)).append("\n");
    sb.append("    logStats: ").append(toIndentedString(logStats)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

