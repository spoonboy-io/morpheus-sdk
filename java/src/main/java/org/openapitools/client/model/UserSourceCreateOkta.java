/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Okta Configuration
 */
@ApiModel(description = "Okta Configuration")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class UserSourceCreateOkta {
  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_ADMINISTRATOR_A_P_I_TOKEN = "administratorAPIToken";
  @SerializedName(SERIALIZED_NAME_ADMINISTRATOR_A_P_I_TOKEN)
  private String administratorAPIToken;

  public static final String SERIALIZED_NAME_REQUIRED_GROUP = "requiredGroup";
  @SerializedName(SERIALIZED_NAME_REQUIRED_GROUP)
  private String requiredGroup;


  public UserSourceCreateOkta url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Okta URL
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://test.okta.com", value = "Okta URL")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public UserSourceCreateOkta administratorAPIToken(String administratorAPIToken) {
    
    this.administratorAPIToken = administratorAPIToken;
    return this;
  }

   /**
   * Administrator API Token
   * @return administratorAPIToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "9875023985039285", value = "Administrator API Token")

  public String getAdministratorAPIToken() {
    return administratorAPIToken;
  }


  public void setAdministratorAPIToken(String administratorAPIToken) {
    this.administratorAPIToken = administratorAPIToken;
  }


  public UserSourceCreateOkta requiredGroup(String requiredGroup) {
    
    this.requiredGroup = requiredGroup;
    return this;
  }

   /**
   * Required Group
   * @return requiredGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "dev", value = "Required Group")

  public String getRequiredGroup() {
    return requiredGroup;
  }


  public void setRequiredGroup(String requiredGroup) {
    this.requiredGroup = requiredGroup;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserSourceCreateOkta userSourceCreateOkta = (UserSourceCreateOkta) o;
    return Objects.equals(this.url, userSourceCreateOkta.url) &&
        Objects.equals(this.administratorAPIToken, userSourceCreateOkta.administratorAPIToken) &&
        Objects.equals(this.requiredGroup, userSourceCreateOkta.requiredGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, administratorAPIToken, requiredGroup);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserSourceCreateOkta {\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    administratorAPIToken: ").append(toIndentedString(administratorAPIToken)).append("\n");
    sb.append("    requiredGroup: ").append(toIndentedString(requiredGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

