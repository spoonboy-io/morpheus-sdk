/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TaskAnsiblePlaybookConfigTaskOptions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class TaskAnsiblePlaybookConfigTaskOptions {
  public static final String SERIALIZED_NAME_ANSIBLE_OPTIONS = "ansibleOptions";
  @SerializedName(SERIALIZED_NAME_ANSIBLE_OPTIONS)
  private String ansibleOptions;

  public static final String SERIALIZED_NAME_ANSIBLE_PLAYBOOK = "ansiblePlaybook";
  @SerializedName(SERIALIZED_NAME_ANSIBLE_PLAYBOOK)
  private String ansiblePlaybook;

  public static final String SERIALIZED_NAME_SSH_KEY = "sshKey";
  @SerializedName(SERIALIZED_NAME_SSH_KEY)
  private String sshKey;

  public static final String SERIALIZED_NAME_PORT = "port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private String port;

  public static final String SERIALIZED_NAME_LOCAL_SCRIPT_GIT_REF = "localScriptGitRef";
  @SerializedName(SERIALIZED_NAME_LOCAL_SCRIPT_GIT_REF)
  private String localScriptGitRef;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_PASSWORD_HASH = "passwordHash";
  @SerializedName(SERIALIZED_NAME_PASSWORD_HASH)
  private String passwordHash;

  public static final String SERIALIZED_NAME_LOCAL_SCRIPT_GIT_ID = "localScriptGitId";
  @SerializedName(SERIALIZED_NAME_LOCAL_SCRIPT_GIT_ID)
  private String localScriptGitId;

  public static final String SERIALIZED_NAME_ANSIBLE_GIT_ID = "ansibleGitId";
  @SerializedName(SERIALIZED_NAME_ANSIBLE_GIT_ID)
  private String ansibleGitId;

  public static final String SERIALIZED_NAME_HOST = "host";
  @SerializedName(SERIALIZED_NAME_HOST)
  private String host;

  public static final String SERIALIZED_NAME_ANSIBLE_SKIP_TAGS = "ansibleSkipTags";
  @SerializedName(SERIALIZED_NAME_ANSIBLE_SKIP_TAGS)
  private String ansibleSkipTags;

  public static final String SERIALIZED_NAME_ANSIBLE_TAGS = "ansibleTags";
  @SerializedName(SERIALIZED_NAME_ANSIBLE_TAGS)
  private String ansibleTags;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_ANSIBLE_GIT_REF = "ansibleGitRef";
  @SerializedName(SERIALIZED_NAME_ANSIBLE_GIT_REF)
  private String ansibleGitRef;


  public TaskAnsiblePlaybookConfigTaskOptions ansibleOptions(String ansibleOptions) {
    
    this.ansibleOptions = ansibleOptions;
    return this;
  }

   /**
   * Get ansibleOptions
   * @return ansibleOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAnsibleOptions() {
    return ansibleOptions;
  }


  public void setAnsibleOptions(String ansibleOptions) {
    this.ansibleOptions = ansibleOptions;
  }


  public TaskAnsiblePlaybookConfigTaskOptions ansiblePlaybook(String ansiblePlaybook) {
    
    this.ansiblePlaybook = ansiblePlaybook;
    return this;
  }

   /**
   * Get ansiblePlaybook
   * @return ansiblePlaybook
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAnsiblePlaybook() {
    return ansiblePlaybook;
  }


  public void setAnsiblePlaybook(String ansiblePlaybook) {
    this.ansiblePlaybook = ansiblePlaybook;
  }


  public TaskAnsiblePlaybookConfigTaskOptions sshKey(String sshKey) {
    
    this.sshKey = sshKey;
    return this;
  }

   /**
   * Get sshKey
   * @return sshKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSshKey() {
    return sshKey;
  }


  public void setSshKey(String sshKey) {
    this.sshKey = sshKey;
  }


  public TaskAnsiblePlaybookConfigTaskOptions port(String port) {
    
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPort() {
    return port;
  }


  public void setPort(String port) {
    this.port = port;
  }


  public TaskAnsiblePlaybookConfigTaskOptions localScriptGitRef(String localScriptGitRef) {
    
    this.localScriptGitRef = localScriptGitRef;
    return this;
  }

   /**
   * Get localScriptGitRef
   * @return localScriptGitRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocalScriptGitRef() {
    return localScriptGitRef;
  }


  public void setLocalScriptGitRef(String localScriptGitRef) {
    this.localScriptGitRef = localScriptGitRef;
  }


  public TaskAnsiblePlaybookConfigTaskOptions password(String password) {
    
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }


  public TaskAnsiblePlaybookConfigTaskOptions passwordHash(String passwordHash) {
    
    this.passwordHash = passwordHash;
    return this;
  }

   /**
   * Get passwordHash
   * @return passwordHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPasswordHash() {
    return passwordHash;
  }


  public void setPasswordHash(String passwordHash) {
    this.passwordHash = passwordHash;
  }


  public TaskAnsiblePlaybookConfigTaskOptions localScriptGitId(String localScriptGitId) {
    
    this.localScriptGitId = localScriptGitId;
    return this;
  }

   /**
   * Get localScriptGitId
   * @return localScriptGitId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocalScriptGitId() {
    return localScriptGitId;
  }


  public void setLocalScriptGitId(String localScriptGitId) {
    this.localScriptGitId = localScriptGitId;
  }


  public TaskAnsiblePlaybookConfigTaskOptions ansibleGitId(String ansibleGitId) {
    
    this.ansibleGitId = ansibleGitId;
    return this;
  }

   /**
   * Get ansibleGitId
   * @return ansibleGitId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAnsibleGitId() {
    return ansibleGitId;
  }


  public void setAnsibleGitId(String ansibleGitId) {
    this.ansibleGitId = ansibleGitId;
  }


  public TaskAnsiblePlaybookConfigTaskOptions host(String host) {
    
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHost() {
    return host;
  }


  public void setHost(String host) {
    this.host = host;
  }


  public TaskAnsiblePlaybookConfigTaskOptions ansibleSkipTags(String ansibleSkipTags) {
    
    this.ansibleSkipTags = ansibleSkipTags;
    return this;
  }

   /**
   * Get ansibleSkipTags
   * @return ansibleSkipTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAnsibleSkipTags() {
    return ansibleSkipTags;
  }


  public void setAnsibleSkipTags(String ansibleSkipTags) {
    this.ansibleSkipTags = ansibleSkipTags;
  }


  public TaskAnsiblePlaybookConfigTaskOptions ansibleTags(String ansibleTags) {
    
    this.ansibleTags = ansibleTags;
    return this;
  }

   /**
   * Get ansibleTags
   * @return ansibleTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAnsibleTags() {
    return ansibleTags;
  }


  public void setAnsibleTags(String ansibleTags) {
    this.ansibleTags = ansibleTags;
  }


  public TaskAnsiblePlaybookConfigTaskOptions username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsername() {
    return username;
  }


  public void setUsername(String username) {
    this.username = username;
  }


  public TaskAnsiblePlaybookConfigTaskOptions ansibleGitRef(String ansibleGitRef) {
    
    this.ansibleGitRef = ansibleGitRef;
    return this;
  }

   /**
   * Get ansibleGitRef
   * @return ansibleGitRef
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAnsibleGitRef() {
    return ansibleGitRef;
  }


  public void setAnsibleGitRef(String ansibleGitRef) {
    this.ansibleGitRef = ansibleGitRef;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskAnsiblePlaybookConfigTaskOptions taskAnsiblePlaybookConfigTaskOptions = (TaskAnsiblePlaybookConfigTaskOptions) o;
    return Objects.equals(this.ansibleOptions, taskAnsiblePlaybookConfigTaskOptions.ansibleOptions) &&
        Objects.equals(this.ansiblePlaybook, taskAnsiblePlaybookConfigTaskOptions.ansiblePlaybook) &&
        Objects.equals(this.sshKey, taskAnsiblePlaybookConfigTaskOptions.sshKey) &&
        Objects.equals(this.port, taskAnsiblePlaybookConfigTaskOptions.port) &&
        Objects.equals(this.localScriptGitRef, taskAnsiblePlaybookConfigTaskOptions.localScriptGitRef) &&
        Objects.equals(this.password, taskAnsiblePlaybookConfigTaskOptions.password) &&
        Objects.equals(this.passwordHash, taskAnsiblePlaybookConfigTaskOptions.passwordHash) &&
        Objects.equals(this.localScriptGitId, taskAnsiblePlaybookConfigTaskOptions.localScriptGitId) &&
        Objects.equals(this.ansibleGitId, taskAnsiblePlaybookConfigTaskOptions.ansibleGitId) &&
        Objects.equals(this.host, taskAnsiblePlaybookConfigTaskOptions.host) &&
        Objects.equals(this.ansibleSkipTags, taskAnsiblePlaybookConfigTaskOptions.ansibleSkipTags) &&
        Objects.equals(this.ansibleTags, taskAnsiblePlaybookConfigTaskOptions.ansibleTags) &&
        Objects.equals(this.username, taskAnsiblePlaybookConfigTaskOptions.username) &&
        Objects.equals(this.ansibleGitRef, taskAnsiblePlaybookConfigTaskOptions.ansibleGitRef);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ansibleOptions, ansiblePlaybook, sshKey, port, localScriptGitRef, password, passwordHash, localScriptGitId, ansibleGitId, host, ansibleSkipTags, ansibleTags, username, ansibleGitRef);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskAnsiblePlaybookConfigTaskOptions {\n");
    sb.append("    ansibleOptions: ").append(toIndentedString(ansibleOptions)).append("\n");
    sb.append("    ansiblePlaybook: ").append(toIndentedString(ansiblePlaybook)).append("\n");
    sb.append("    sshKey: ").append(toIndentedString(sshKey)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    localScriptGitRef: ").append(toIndentedString(localScriptGitRef)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    passwordHash: ").append(toIndentedString(passwordHash)).append("\n");
    sb.append("    localScriptGitId: ").append(toIndentedString(localScriptGitId)).append("\n");
    sb.append("    ansibleGitId: ").append(toIndentedString(ansibleGitId)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    ansibleSkipTags: ").append(toIndentedString(ansibleSkipTags)).append("\n");
    sb.append("    ansibleTags: ").append(toIndentedString(ansibleTags)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    ansibleGitRef: ").append(toIndentedString(ansibleGitRef)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

