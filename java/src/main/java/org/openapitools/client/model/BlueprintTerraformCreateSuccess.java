/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.BlueprintTerraformCreateConfig;
import org.openapitools.client.model.BlueprintTerraformCreateTerraform;

/**
 * BlueprintTerraformCreateSuccess
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class BlueprintTerraformCreateSuccess {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private String image;

  /**
   * Blueprint Type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    TERRAFORM("terraform");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_TERRAFORM = "terraform";
  @SerializedName(SERIALIZED_NAME_TERRAFORM)
  private BlueprintTerraformCreateTerraform terraform;

  public static final String SERIALIZED_NAME_CONFIG = "config";
  @SerializedName(SERIALIZED_NAME_CONFIG)
  private BlueprintTerraformCreateConfig config;

  /**
   * Private or Public Access
   */
  @JsonAdapter(VisibilityEnum.Adapter.class)
  public enum VisibilityEnum {
    PRIVATE("private"),
    
    PUBLIC("public");

    private String value;

    VisibilityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VisibilityEnum fromValue(String value) {
      for (VisibilityEnum b : VisibilityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<VisibilityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VisibilityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VisibilityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return VisibilityEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_VISIBILITY = "visibility";
  @SerializedName(SERIALIZED_NAME_VISIBILITY)
  private VisibilityEnum visibility = VisibilityEnum.PRIVATE;

  public static final String SERIALIZED_NAME_RESOURCE_PERMISSION = "resourcePermission";
  @SerializedName(SERIALIZED_NAME_RESOURCE_PERMISSION)
  private Object resourcePermission;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private Object owner;

  public static final String SERIALIZED_NAME_TENANT = "tenant";
  @SerializedName(SERIALIZED_NAME_TENANT)
  private Object tenant;


  public BlueprintTerraformCreateSuccess name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * A name for the blueprint
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A name for the blueprint")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public BlueprintTerraformCreateSuccess image(String image) {
    
    this.image = image;
    return this;
  }

   /**
   * Path to display image. Defaults to an internal Morpheus image.
   * @return image
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Path to display image. Defaults to an internal Morpheus image.")

  public String getImage() {
    return image;
  }


  public void setImage(String image) {
    this.image = image;
  }


  public BlueprintTerraformCreateSuccess type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Blueprint Type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Blueprint Type")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public BlueprintTerraformCreateSuccess terraform(BlueprintTerraformCreateTerraform terraform) {
    
    this.terraform = terraform;
    return this;
  }

   /**
   * Get terraform
   * @return terraform
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BlueprintTerraformCreateTerraform getTerraform() {
    return terraform;
  }


  public void setTerraform(BlueprintTerraformCreateTerraform terraform) {
    this.terraform = terraform;
  }


  public BlueprintTerraformCreateSuccess config(BlueprintTerraformCreateConfig config) {
    
    this.config = config;
    return this;
  }

   /**
   * Get config
   * @return config
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BlueprintTerraformCreateConfig getConfig() {
    return config;
  }


  public void setConfig(BlueprintTerraformCreateConfig config) {
    this.config = config;
  }


  public BlueprintTerraformCreateSuccess visibility(VisibilityEnum visibility) {
    
    this.visibility = visibility;
    return this;
  }

   /**
   * Private or Public Access
   * @return visibility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Private or Public Access")

  public VisibilityEnum getVisibility() {
    return visibility;
  }


  public void setVisibility(VisibilityEnum visibility) {
    this.visibility = visibility;
  }


  public BlueprintTerraformCreateSuccess resourcePermission(Object resourcePermission) {
    
    this.resourcePermission = resourcePermission;
    return this;
  }

   /**
   * Resource Permission Block
   * @return resourcePermission
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Resource Permission Block")

  public Object getResourcePermission() {
    return resourcePermission;
  }


  public void setResourcePermission(Object resourcePermission) {
    this.resourcePermission = resourcePermission;
  }


  public BlueprintTerraformCreateSuccess owner(Object owner) {
    
    this.owner = owner;
    return this;
  }

   /**
   * Owner
   * @return owner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Owner")

  public Object getOwner() {
    return owner;
  }


  public void setOwner(Object owner) {
    this.owner = owner;
  }


  public BlueprintTerraformCreateSuccess tenant(Object tenant) {
    
    this.tenant = tenant;
    return this;
  }

   /**
   * Tenant
   * @return tenant
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tenant")

  public Object getTenant() {
    return tenant;
  }


  public void setTenant(Object tenant) {
    this.tenant = tenant;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BlueprintTerraformCreateSuccess blueprintTerraformCreateSuccess = (BlueprintTerraformCreateSuccess) o;
    return Objects.equals(this.name, blueprintTerraformCreateSuccess.name) &&
        Objects.equals(this.image, blueprintTerraformCreateSuccess.image) &&
        Objects.equals(this.type, blueprintTerraformCreateSuccess.type) &&
        Objects.equals(this.terraform, blueprintTerraformCreateSuccess.terraform) &&
        Objects.equals(this.config, blueprintTerraformCreateSuccess.config) &&
        Objects.equals(this.visibility, blueprintTerraformCreateSuccess.visibility) &&
        Objects.equals(this.resourcePermission, blueprintTerraformCreateSuccess.resourcePermission) &&
        Objects.equals(this.owner, blueprintTerraformCreateSuccess.owner) &&
        Objects.equals(this.tenant, blueprintTerraformCreateSuccess.tenant);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, image, type, terraform, config, visibility, resourcePermission, owner, tenant);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BlueprintTerraformCreateSuccess {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    terraform: ").append(toIndentedString(terraform)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    resourcePermission: ").append(toIndentedString(resourcePermission)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    tenant: ").append(toIndentedString(tenant)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

