/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NetworkPoolServerCreatePhpIpamConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class NetworkPoolServerCreatePhpIpamConfig {
  public static final String SERIALIZED_NAME_APP_ID = "appId";
  @SerializedName(SERIALIZED_NAME_APP_ID)
  private String appId;

  /**
   * Inventory Existing
   */
  @JsonAdapter(InventoryExistingEnum.Adapter.class)
  public enum InventoryExistingEnum {
    ON("on"),
    
    OFF("off");

    private String value;

    InventoryExistingEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InventoryExistingEnum fromValue(String value) {
      for (InventoryExistingEnum b : InventoryExistingEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<InventoryExistingEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InventoryExistingEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InventoryExistingEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return InventoryExistingEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_INVENTORY_EXISTING = "inventoryExisting";
  @SerializedName(SERIALIZED_NAME_INVENTORY_EXISTING)
  private InventoryExistingEnum inventoryExisting = InventoryExistingEnum.OFF;


  public NetworkPoolServerCreatePhpIpamConfig appId(String appId) {
    
    this.appId = appId;
    return this;
  }

   /**
   * App ID (Your App name in phpIPAM)
   * @return appId
  **/
  @ApiModelProperty(required = true, value = "App ID (Your App name in phpIPAM)")

  public String getAppId() {
    return appId;
  }


  public void setAppId(String appId) {
    this.appId = appId;
  }


  public NetworkPoolServerCreatePhpIpamConfig inventoryExisting(InventoryExistingEnum inventoryExisting) {
    
    this.inventoryExisting = inventoryExisting;
    return this;
  }

   /**
   * Inventory Existing
   * @return inventoryExisting
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Inventory Existing")

  public InventoryExistingEnum getInventoryExisting() {
    return inventoryExisting;
  }


  public void setInventoryExisting(InventoryExistingEnum inventoryExisting) {
    this.inventoryExisting = inventoryExisting;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkPoolServerCreatePhpIpamConfig networkPoolServerCreatePhpIpamConfig = (NetworkPoolServerCreatePhpIpamConfig) o;
    return Objects.equals(this.appId, networkPoolServerCreatePhpIpamConfig.appId) &&
        Objects.equals(this.inventoryExisting, networkPoolServerCreatePhpIpamConfig.inventoryExisting);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appId, inventoryExisting);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkPoolServerCreatePhpIpamConfig {\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    inventoryExisting: ").append(toIndentedString(inventoryExisting)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

