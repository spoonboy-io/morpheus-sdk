/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * DashboardInstanceStats
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class DashboardInstanceStats {
  public static final String SERIALIZED_NAME_MAX_CPU = "maxCpu";
  @SerializedName(SERIALIZED_NAME_MAX_CPU)
  private BigDecimal maxCpu;

  public static final String SERIALIZED_NAME_MAX_CORES = "maxCores";
  @SerializedName(SERIALIZED_NAME_MAX_CORES)
  private BigDecimal maxCores;

  public static final String SERIALIZED_NAME_CPU_USAGE = "cpuUsage";
  @SerializedName(SERIALIZED_NAME_CPU_USAGE)
  private BigDecimal cpuUsage;

  public static final String SERIALIZED_NAME_CPU_USAGE_AVERAGE = "cpuUsageAverage";
  @SerializedName(SERIALIZED_NAME_CPU_USAGE_AVERAGE)
  private BigDecimal cpuUsageAverage;

  public static final String SERIALIZED_NAME_CPU_USAGE_PEAK = "cpuUsagePeak";
  @SerializedName(SERIALIZED_NAME_CPU_USAGE_PEAK)
  private BigDecimal cpuUsagePeak;

  public static final String SERIALIZED_NAME_USED_MEMORY = "usedMemory";
  @SerializedName(SERIALIZED_NAME_USED_MEMORY)
  private BigDecimal usedMemory;

  public static final String SERIALIZED_NAME_MAX_MEMORY = "maxMemory";
  @SerializedName(SERIALIZED_NAME_MAX_MEMORY)
  private BigDecimal maxMemory;

  public static final String SERIALIZED_NAME_USED_STORAGE = "usedStorage";
  @SerializedName(SERIALIZED_NAME_USED_STORAGE)
  private BigDecimal usedStorage;

  public static final String SERIALIZED_NAME_MAX_STORAGE = "maxStorage";
  @SerializedName(SERIALIZED_NAME_MAX_STORAGE)
  private BigDecimal maxStorage;

  public static final String SERIALIZED_NAME_RUNNING = "running";
  @SerializedName(SERIALIZED_NAME_RUNNING)
  private BigDecimal running;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private BigDecimal total;

  public static final String SERIALIZED_NAME_TOTAL_CONTAINERS = "totalContainers";
  @SerializedName(SERIALIZED_NAME_TOTAL_CONTAINERS)
  private BigDecimal totalContainers;


  public DashboardInstanceStats maxCpu(BigDecimal maxCpu) {
    
    this.maxCpu = maxCpu;
    return this;
  }

   /**
   * Get maxCpu
   * @return maxCpu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getMaxCpu() {
    return maxCpu;
  }


  public void setMaxCpu(BigDecimal maxCpu) {
    this.maxCpu = maxCpu;
  }


  public DashboardInstanceStats maxCores(BigDecimal maxCores) {
    
    this.maxCores = maxCores;
    return this;
  }

   /**
   * Get maxCores
   * @return maxCores
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getMaxCores() {
    return maxCores;
  }


  public void setMaxCores(BigDecimal maxCores) {
    this.maxCores = maxCores;
  }


  public DashboardInstanceStats cpuUsage(BigDecimal cpuUsage) {
    
    this.cpuUsage = cpuUsage;
    return this;
  }

   /**
   * Get cpuUsage
   * @return cpuUsage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getCpuUsage() {
    return cpuUsage;
  }


  public void setCpuUsage(BigDecimal cpuUsage) {
    this.cpuUsage = cpuUsage;
  }


  public DashboardInstanceStats cpuUsageAverage(BigDecimal cpuUsageAverage) {
    
    this.cpuUsageAverage = cpuUsageAverage;
    return this;
  }

   /**
   * Get cpuUsageAverage
   * @return cpuUsageAverage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getCpuUsageAverage() {
    return cpuUsageAverage;
  }


  public void setCpuUsageAverage(BigDecimal cpuUsageAverage) {
    this.cpuUsageAverage = cpuUsageAverage;
  }


  public DashboardInstanceStats cpuUsagePeak(BigDecimal cpuUsagePeak) {
    
    this.cpuUsagePeak = cpuUsagePeak;
    return this;
  }

   /**
   * Get cpuUsagePeak
   * @return cpuUsagePeak
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getCpuUsagePeak() {
    return cpuUsagePeak;
  }


  public void setCpuUsagePeak(BigDecimal cpuUsagePeak) {
    this.cpuUsagePeak = cpuUsagePeak;
  }


  public DashboardInstanceStats usedMemory(BigDecimal usedMemory) {
    
    this.usedMemory = usedMemory;
    return this;
  }

   /**
   * Get usedMemory
   * @return usedMemory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getUsedMemory() {
    return usedMemory;
  }


  public void setUsedMemory(BigDecimal usedMemory) {
    this.usedMemory = usedMemory;
  }


  public DashboardInstanceStats maxMemory(BigDecimal maxMemory) {
    
    this.maxMemory = maxMemory;
    return this;
  }

   /**
   * Get maxMemory
   * @return maxMemory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getMaxMemory() {
    return maxMemory;
  }


  public void setMaxMemory(BigDecimal maxMemory) {
    this.maxMemory = maxMemory;
  }


  public DashboardInstanceStats usedStorage(BigDecimal usedStorage) {
    
    this.usedStorage = usedStorage;
    return this;
  }

   /**
   * Get usedStorage
   * @return usedStorage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getUsedStorage() {
    return usedStorage;
  }


  public void setUsedStorage(BigDecimal usedStorage) {
    this.usedStorage = usedStorage;
  }


  public DashboardInstanceStats maxStorage(BigDecimal maxStorage) {
    
    this.maxStorage = maxStorage;
    return this;
  }

   /**
   * Get maxStorage
   * @return maxStorage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getMaxStorage() {
    return maxStorage;
  }


  public void setMaxStorage(BigDecimal maxStorage) {
    this.maxStorage = maxStorage;
  }


  public DashboardInstanceStats running(BigDecimal running) {
    
    this.running = running;
    return this;
  }

   /**
   * Get running
   * @return running
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getRunning() {
    return running;
  }


  public void setRunning(BigDecimal running) {
    this.running = running;
  }


  public DashboardInstanceStats total(BigDecimal total) {
    
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getTotal() {
    return total;
  }


  public void setTotal(BigDecimal total) {
    this.total = total;
  }


  public DashboardInstanceStats totalContainers(BigDecimal totalContainers) {
    
    this.totalContainers = totalContainers;
    return this;
  }

   /**
   * Get totalContainers
   * @return totalContainers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getTotalContainers() {
    return totalContainers;
  }


  public void setTotalContainers(BigDecimal totalContainers) {
    this.totalContainers = totalContainers;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DashboardInstanceStats dashboardInstanceStats = (DashboardInstanceStats) o;
    return Objects.equals(this.maxCpu, dashboardInstanceStats.maxCpu) &&
        Objects.equals(this.maxCores, dashboardInstanceStats.maxCores) &&
        Objects.equals(this.cpuUsage, dashboardInstanceStats.cpuUsage) &&
        Objects.equals(this.cpuUsageAverage, dashboardInstanceStats.cpuUsageAverage) &&
        Objects.equals(this.cpuUsagePeak, dashboardInstanceStats.cpuUsagePeak) &&
        Objects.equals(this.usedMemory, dashboardInstanceStats.usedMemory) &&
        Objects.equals(this.maxMemory, dashboardInstanceStats.maxMemory) &&
        Objects.equals(this.usedStorage, dashboardInstanceStats.usedStorage) &&
        Objects.equals(this.maxStorage, dashboardInstanceStats.maxStorage) &&
        Objects.equals(this.running, dashboardInstanceStats.running) &&
        Objects.equals(this.total, dashboardInstanceStats.total) &&
        Objects.equals(this.totalContainers, dashboardInstanceStats.totalContainers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxCpu, maxCores, cpuUsage, cpuUsageAverage, cpuUsagePeak, usedMemory, maxMemory, usedStorage, maxStorage, running, total, totalContainers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DashboardInstanceStats {\n");
    sb.append("    maxCpu: ").append(toIndentedString(maxCpu)).append("\n");
    sb.append("    maxCores: ").append(toIndentedString(maxCores)).append("\n");
    sb.append("    cpuUsage: ").append(toIndentedString(cpuUsage)).append("\n");
    sb.append("    cpuUsageAverage: ").append(toIndentedString(cpuUsageAverage)).append("\n");
    sb.append("    cpuUsagePeak: ").append(toIndentedString(cpuUsagePeak)).append("\n");
    sb.append("    usedMemory: ").append(toIndentedString(usedMemory)).append("\n");
    sb.append("    maxMemory: ").append(toIndentedString(maxMemory)).append("\n");
    sb.append("    usedStorage: ").append(toIndentedString(usedStorage)).append("\n");
    sb.append("    maxStorage: ").append(toIndentedString(maxStorage)).append("\n");
    sb.append("    running: ").append(toIndentedString(running)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    totalContainers: ").append(toIndentedString(totalContainers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

