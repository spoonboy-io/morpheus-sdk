/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ApiBlueprintsIdUpdatePermissionsResourcePermissionSites;

/**
 * ApiStorageServersIdStorageServer
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ApiStorageServersIdStorageServer {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled = true;

  public static final String SERIALIZED_NAME_CONFIG = "config";
  @SerializedName(SERIALIZED_NAME_CONFIG)
  private Object config;

  /**
   * private or public
   */
  @JsonAdapter(VisibilityEnum.Adapter.class)
  public enum VisibilityEnum {
    PRIVATE("private"),
    
    PUBLIC("public");

    private String value;

    VisibilityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VisibilityEnum fromValue(String value) {
      for (VisibilityEnum b : VisibilityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<VisibilityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VisibilityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VisibilityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return VisibilityEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_VISIBILITY = "visibility";
  @SerializedName(SERIALIZED_NAME_VISIBILITY)
  private VisibilityEnum visibility = VisibilityEnum.PRIVATE;

  public static final String SERIALIZED_NAME_TENANTS = "tenants";
  @SerializedName(SERIALIZED_NAME_TENANTS)
  private List<ApiBlueprintsIdUpdatePermissionsResourcePermissionSites> tenants = null;


  public ApiStorageServersIdStorageServer name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ApiStorageServersIdStorageServer type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The &#x60;Storage Type&#x60; Code or ID
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The `Storage Type` Code or ID")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public ApiStorageServersIdStorageServer description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "description")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ApiStorageServersIdStorageServer enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * The enabled flag
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The enabled flag")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public ApiStorageServersIdStorageServer config(Object config) {
    
    this.config = config;
    return this;
  }

   /**
   * Configuration object with parameters that vary by &#x60;type&#x60;
   * @return config
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Configuration object with parameters that vary by `type`")

  public Object getConfig() {
    return config;
  }


  public void setConfig(Object config) {
    this.config = config;
  }


  public ApiStorageServersIdStorageServer visibility(VisibilityEnum visibility) {
    
    this.visibility = visibility;
    return this;
  }

   /**
   * private or public
   * @return visibility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "private or public")

  public VisibilityEnum getVisibility() {
    return visibility;
  }


  public void setVisibility(VisibilityEnum visibility) {
    this.visibility = visibility;
  }


  public ApiStorageServersIdStorageServer tenants(List<ApiBlueprintsIdUpdatePermissionsResourcePermissionSites> tenants) {
    
    this.tenants = tenants;
    return this;
  }

  public ApiStorageServersIdStorageServer addTenantsItem(ApiBlueprintsIdUpdatePermissionsResourcePermissionSites tenantsItem) {
    if (this.tenants == null) {
      this.tenants = new ArrayList<ApiBlueprintsIdUpdatePermissionsResourcePermissionSites>();
    }
    this.tenants.add(tenantsItem);
    return this;
  }

   /**
   * Array of tenant account ids that are allowed access
   * @return tenants
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array of tenant account ids that are allowed access")

  public List<ApiBlueprintsIdUpdatePermissionsResourcePermissionSites> getTenants() {
    return tenants;
  }


  public void setTenants(List<ApiBlueprintsIdUpdatePermissionsResourcePermissionSites> tenants) {
    this.tenants = tenants;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiStorageServersIdStorageServer apiStorageServersIdStorageServer = (ApiStorageServersIdStorageServer) o;
    return Objects.equals(this.name, apiStorageServersIdStorageServer.name) &&
        Objects.equals(this.type, apiStorageServersIdStorageServer.type) &&
        Objects.equals(this.description, apiStorageServersIdStorageServer.description) &&
        Objects.equals(this.enabled, apiStorageServersIdStorageServer.enabled) &&
        Objects.equals(this.config, apiStorageServersIdStorageServer.config) &&
        Objects.equals(this.visibility, apiStorageServersIdStorageServer.visibility) &&
        Objects.equals(this.tenants, apiStorageServersIdStorageServer.tenants);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, type, description, enabled, config, visibility, tenants);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiStorageServersIdStorageServer {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    tenants: ").append(toIndentedString(tenants)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

