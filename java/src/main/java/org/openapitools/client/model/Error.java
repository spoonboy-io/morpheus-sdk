/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * The standard response object that is returned when a request fails to complete successfully
 */
@ApiModel(description = "The standard response object that is returned when a request fails to complete successfully")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class Error {
  public static final String SERIALIZED_NAME_SUCCESS = "success";
  @SerializedName(SERIALIZED_NAME_SUCCESS)
  private Boolean success = true;

  public static final String SERIALIZED_NAME_MSG = "msg";
  @SerializedName(SERIALIZED_NAME_MSG)
  private String msg;

  public static final String SERIALIZED_NAME_ERRORS = "errors";
  @SerializedName(SERIALIZED_NAME_ERRORS)
  private Object errors;


  public Error success(Boolean success) {
    
    this.success = success;
    return this;
  }

   /**
   * Success indicator, true when the request succeeded and false when an error occurred
   * @return success
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Success indicator, true when the request succeeded and false when an error occurred")

  public Boolean getSuccess() {
    return success;
  }


  public void setSuccess(Boolean success) {
    this.success = success;
  }


  public Error msg(String msg) {
    
    this.msg = msg;
    return this;
  }

   /**
   * Message containing a description of the result, usually a message about the error that occurred
   * @return msg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Message containing a description of the result, usually a message about the error that occurred")

  public String getMsg() {
    return msg;
  }


  public void setMsg(String msg) {
    this.msg = msg;
  }


  public Error errors(Object errors) {
    
    this.errors = errors;
    return this;
  }

   /**
   * Validation errors, with a key for Object containing error messages for each invalid parameter (key)
   * @return errors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Validation errors, with a key for Object containing error messages for each invalid parameter (key)")

  public Object getErrors() {
    return errors;
  }


  public void setErrors(Object errors) {
    this.errors = errors;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Error error = (Error) o;
    return Objects.equals(this.success, error.success) &&
        Objects.equals(this.msg, error.msg) &&
        Objects.equals(this.errors, error.errors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(success, msg, errors);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Error {\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    msg: ").append(toIndentedString(msg)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

