/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * UserSettingsAccessTokens
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class UserSettingsAccessTokens {
  public static final String SERIALIZED_NAME_CLIENT_ID = "clientId";
  @SerializedName(SERIALIZED_NAME_CLIENT_ID)
  private String clientId;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_EXPIRATION = "expiration";
  @SerializedName(SERIALIZED_NAME_EXPIRATION)
  private OffsetDateTime expiration;

  public static final String SERIALIZED_NAME_TOKEN_TYPE = "tokenType";
  @SerializedName(SERIALIZED_NAME_TOKEN_TYPE)
  private String tokenType;

  public static final String SERIALIZED_NAME_MASKED_ACCESS_TOKEN = "maskedAccessToken";
  @SerializedName(SERIALIZED_NAME_MASKED_ACCESS_TOKEN)
  private String maskedAccessToken;

  public static final String SERIALIZED_NAME_MASKED_REFRESH_TOKEN = "maskedRefreshToken";
  @SerializedName(SERIALIZED_NAME_MASKED_REFRESH_TOKEN)
  private String maskedRefreshToken;


  public UserSettingsAccessTokens clientId(String clientId) {
    
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getClientId() {
    return clientId;
  }


  public void setClientId(String clientId) {
    this.clientId = clientId;
  }


  public UserSettingsAccessTokens username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsername() {
    return username;
  }


  public void setUsername(String username) {
    this.username = username;
  }


  public UserSettingsAccessTokens expiration(OffsetDateTime expiration) {
    
    this.expiration = expiration;
    return this;
  }

   /**
   * Get expiration
   * @return expiration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getExpiration() {
    return expiration;
  }


  public void setExpiration(OffsetDateTime expiration) {
    this.expiration = expiration;
  }


  public UserSettingsAccessTokens tokenType(String tokenType) {
    
    this.tokenType = tokenType;
    return this;
  }

   /**
   * Get tokenType
   * @return tokenType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTokenType() {
    return tokenType;
  }


  public void setTokenType(String tokenType) {
    this.tokenType = tokenType;
  }


  public UserSettingsAccessTokens maskedAccessToken(String maskedAccessToken) {
    
    this.maskedAccessToken = maskedAccessToken;
    return this;
  }

   /**
   * Get maskedAccessToken
   * @return maskedAccessToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMaskedAccessToken() {
    return maskedAccessToken;
  }


  public void setMaskedAccessToken(String maskedAccessToken) {
    this.maskedAccessToken = maskedAccessToken;
  }


  public UserSettingsAccessTokens maskedRefreshToken(String maskedRefreshToken) {
    
    this.maskedRefreshToken = maskedRefreshToken;
    return this;
  }

   /**
   * Get maskedRefreshToken
   * @return maskedRefreshToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMaskedRefreshToken() {
    return maskedRefreshToken;
  }


  public void setMaskedRefreshToken(String maskedRefreshToken) {
    this.maskedRefreshToken = maskedRefreshToken;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserSettingsAccessTokens userSettingsAccessTokens = (UserSettingsAccessTokens) o;
    return Objects.equals(this.clientId, userSettingsAccessTokens.clientId) &&
        Objects.equals(this.username, userSettingsAccessTokens.username) &&
        Objects.equals(this.expiration, userSettingsAccessTokens.expiration) &&
        Objects.equals(this.tokenType, userSettingsAccessTokens.tokenType) &&
        Objects.equals(this.maskedAccessToken, userSettingsAccessTokens.maskedAccessToken) &&
        Objects.equals(this.maskedRefreshToken, userSettingsAccessTokens.maskedRefreshToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, username, expiration, tokenType, maskedAccessToken, maskedRefreshToken);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserSettingsAccessTokens {\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    tokenType: ").append(toIndentedString(tokenType)).append("\n");
    sb.append("    maskedAccessToken: ").append(toIndentedString(maskedAccessToken)).append("\n");
    sb.append("    maskedRefreshToken: ").append(toIndentedString(maskedRefreshToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

