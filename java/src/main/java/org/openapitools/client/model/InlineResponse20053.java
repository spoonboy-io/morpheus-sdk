/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ImageBuild;
import org.openapitools.client.model.ImageBuildExecution;

/**
 * InlineResponse20053
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class InlineResponse20053 {
  public static final String SERIALIZED_NAME_IMAGE_BUILD = "imageBuild";
  @SerializedName(SERIALIZED_NAME_IMAGE_BUILD)
  private ImageBuild imageBuild;

  public static final String SERIALIZED_NAME_IMAGE_BUILD_EXECUTIONS = "imageBuildExecutions";
  @SerializedName(SERIALIZED_NAME_IMAGE_BUILD_EXECUTIONS)
  private List<ImageBuildExecution> imageBuildExecutions = null;


  public InlineResponse20053 imageBuild(ImageBuild imageBuild) {
    
    this.imageBuild = imageBuild;
    return this;
  }

   /**
   * Get imageBuild
   * @return imageBuild
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ImageBuild getImageBuild() {
    return imageBuild;
  }


  public void setImageBuild(ImageBuild imageBuild) {
    this.imageBuild = imageBuild;
  }


  public InlineResponse20053 imageBuildExecutions(List<ImageBuildExecution> imageBuildExecutions) {
    
    this.imageBuildExecutions = imageBuildExecutions;
    return this;
  }

  public InlineResponse20053 addImageBuildExecutionsItem(ImageBuildExecution imageBuildExecutionsItem) {
    if (this.imageBuildExecutions == null) {
      this.imageBuildExecutions = new ArrayList<ImageBuildExecution>();
    }
    this.imageBuildExecutions.add(imageBuildExecutionsItem);
    return this;
  }

   /**
   * Get imageBuildExecutions
   * @return imageBuildExecutions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ImageBuildExecution> getImageBuildExecutions() {
    return imageBuildExecutions;
  }


  public void setImageBuildExecutions(List<ImageBuildExecution> imageBuildExecutions) {
    this.imageBuildExecutions = imageBuildExecutions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20053 inlineResponse20053 = (InlineResponse20053) o;
    return Objects.equals(this.imageBuild, inlineResponse20053.imageBuild) &&
        Objects.equals(this.imageBuildExecutions, inlineResponse20053.imageBuildExecutions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(imageBuild, imageBuildExecutions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20053 {\n");
    sb.append("    imageBuild: ").append(toIndentedString(imageBuild)).append("\n");
    sb.append("    imageBuildExecutions: ").append(toIndentedString(imageBuildExecutions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

