/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * StorageBucketConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class StorageBucketConfig {
  public static final String SERIALIZED_NAME_ACCESS_KEY = "accessKey";
  @SerializedName(SERIALIZED_NAME_ACCESS_KEY)
  private String accessKey;

  public static final String SERIALIZED_NAME_SECRET_KEY = "secretKey";
  @SerializedName(SERIALIZED_NAME_SECRET_KEY)
  private String secretKey;

  public static final String SERIALIZED_NAME_STS_ASSUME_ROLE = "stsAssumeRole";
  @SerializedName(SERIALIZED_NAME_STS_ASSUME_ROLE)
  private String stsAssumeRole;

  public static final String SERIALIZED_NAME_USE_HOST_CREDENTIALS = "useHostCredentials";
  @SerializedName(SERIALIZED_NAME_USE_HOST_CREDENTIALS)
  private Boolean useHostCredentials;

  public static final String SERIALIZED_NAME_ENDPOINT = "endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  private String endpoint;

  public static final String SERIALIZED_NAME_SECRET_KEY_HASH = "secretKeyHash";
  @SerializedName(SERIALIZED_NAME_SECRET_KEY_HASH)
  private String secretKeyHash;


  public StorageBucketConfig accessKey(String accessKey) {
    
    this.accessKey = accessKey;
    return this;
  }

   /**
   * Get accessKey
   * @return accessKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccessKey() {
    return accessKey;
  }


  public void setAccessKey(String accessKey) {
    this.accessKey = accessKey;
  }


  public StorageBucketConfig secretKey(String secretKey) {
    
    this.secretKey = secretKey;
    return this;
  }

   /**
   * Get secretKey
   * @return secretKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSecretKey() {
    return secretKey;
  }


  public void setSecretKey(String secretKey) {
    this.secretKey = secretKey;
  }


  public StorageBucketConfig stsAssumeRole(String stsAssumeRole) {
    
    this.stsAssumeRole = stsAssumeRole;
    return this;
  }

   /**
   * Get stsAssumeRole
   * @return stsAssumeRole
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStsAssumeRole() {
    return stsAssumeRole;
  }


  public void setStsAssumeRole(String stsAssumeRole) {
    this.stsAssumeRole = stsAssumeRole;
  }


  public StorageBucketConfig useHostCredentials(Boolean useHostCredentials) {
    
    this.useHostCredentials = useHostCredentials;
    return this;
  }

   /**
   * Get useHostCredentials
   * @return useHostCredentials
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getUseHostCredentials() {
    return useHostCredentials;
  }


  public void setUseHostCredentials(Boolean useHostCredentials) {
    this.useHostCredentials = useHostCredentials;
  }


  public StorageBucketConfig endpoint(String endpoint) {
    
    this.endpoint = endpoint;
    return this;
  }

   /**
   * Get endpoint
   * @return endpoint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEndpoint() {
    return endpoint;
  }


  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }


  public StorageBucketConfig secretKeyHash(String secretKeyHash) {
    
    this.secretKeyHash = secretKeyHash;
    return this;
  }

   /**
   * Get secretKeyHash
   * @return secretKeyHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSecretKeyHash() {
    return secretKeyHash;
  }


  public void setSecretKeyHash(String secretKeyHash) {
    this.secretKeyHash = secretKeyHash;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StorageBucketConfig storageBucketConfig = (StorageBucketConfig) o;
    return Objects.equals(this.accessKey, storageBucketConfig.accessKey) &&
        Objects.equals(this.secretKey, storageBucketConfig.secretKey) &&
        Objects.equals(this.stsAssumeRole, storageBucketConfig.stsAssumeRole) &&
        Objects.equals(this.useHostCredentials, storageBucketConfig.useHostCredentials) &&
        Objects.equals(this.endpoint, storageBucketConfig.endpoint) &&
        Objects.equals(this.secretKeyHash, storageBucketConfig.secretKeyHash);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessKey, secretKey, stsAssumeRole, useHostCredentials, endpoint, secretKeyHash);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StorageBucketConfig {\n");
    sb.append("    accessKey: ").append(toIndentedString(accessKey)).append("\n");
    sb.append("    secretKey: ").append(toIndentedString(secretKey)).append("\n");
    sb.append("    stsAssumeRole: ").append(toIndentedString(stsAssumeRole)).append("\n");
    sb.append("    useHostCredentials: ").append(toIndentedString(useHostCredentials)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    secretKeyHash: ").append(toIndentedString(secretKeyHash)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

