/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.1.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BillingInstancesInstancesInnerContainersInnerUsagesInnerApplicablePricesInner;
import org.openapitools.client.model.BillingInstancesInstancesInnerContainersInnerUsagesInnerPricesUsedInner;
import org.openapitools.client.model.BillingInstancesInstancesInnerContainersInnerUsagesInnerVolumesInner;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BillingInstancesInstancesInnerContainersInnerUsagesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-17T13:37:08.123540Z[Etc/UTC]")
public class BillingInstancesInstancesInnerContainersInnerUsagesInner {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_INSTANCE_NAME = "instanceName";
  @SerializedName(SERIALIZED_NAME_INSTANCE_NAME)
  private String instanceName;

  public static final String SERIALIZED_NAME_ZONE_NAME = "zoneName";
  @SerializedName(SERIALIZED_NAME_ZONE_NAME)
  private String zoneName;

  public static final String SERIALIZED_NAME_ACCOUNT_NAME = "accountName";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NAME)
  private String accountName;

  public static final String SERIALIZED_NAME_VOLUMES = "volumes";
  @SerializedName(SERIALIZED_NAME_VOLUMES)
  private List<BillingInstancesInstancesInnerContainersInnerUsagesInnerVolumesInner> volumes;

  public static final String SERIALIZED_NAME_MAX_MEMORY = "maxMemory";
  @SerializedName(SERIALIZED_NAME_MAX_MEMORY)
  private Long maxMemory;

  public static final String SERIALIZED_NAME_MAX_CPU = "maxCpu";
  @SerializedName(SERIALIZED_NAME_MAX_CPU)
  private String maxCpu;

  public static final String SERIALIZED_NAME_MAX_CORES = "maxCores";
  @SerializedName(SERIALIZED_NAME_MAX_CORES)
  private Long maxCores;

  public static final String SERIALIZED_NAME_SERVER_EXTERNAL_ID = "serverExternalId";
  @SerializedName(SERIALIZED_NAME_SERVER_EXTERNAL_ID)
  private String serverExternalId;

  public static final String SERIALIZED_NAME_SERVER_INTERNAL_ID = "serverInternalId";
  @SerializedName(SERIALIZED_NAME_SERVER_INTERNAL_ID)
  private String serverInternalId;

  public static final String SERIALIZED_NAME_PLAN_NAME = "planName";
  @SerializedName(SERIALIZED_NAME_PLAN_NAME)
  private String planName;

  public static final String SERIALIZED_NAME_HOURLY_PRICE = "hourlyPrice";
  @SerializedName(SERIALIZED_NAME_HOURLY_PRICE)
  private BigDecimal hourlyPrice;

  public static final String SERIALIZED_NAME_HOURLY_COST = "hourlyCost";
  @SerializedName(SERIALIZED_NAME_HOURLY_COST)
  private BigDecimal hourlyCost;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_PRICES_USED = "pricesUsed";
  @SerializedName(SERIALIZED_NAME_PRICES_USED)
  private List<BillingInstancesInstancesInnerContainersInnerUsagesInnerPricesUsedInner> pricesUsed;

  public static final String SERIALIZED_NAME_COST = "cost";
  @SerializedName(SERIALIZED_NAME_COST)
  private BigDecimal cost;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private BigDecimal price;

  public static final String SERIALIZED_NAME_CREATED_BY_USER = "createdByUser";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_USER)
  private String createdByUser;

  public static final String SERIALIZED_NAME_CREATED_BY_USER_ID = "createdByUserId";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_USER_ID)
  private Long createdByUserId;

  public static final String SERIALIZED_NAME_SITE_ID = "siteId";
  @SerializedName(SERIALIZED_NAME_SITE_ID)
  private Long siteId;

  public static final String SERIALIZED_NAME_SITE_NAME = "siteName";
  @SerializedName(SERIALIZED_NAME_SITE_NAME)
  private String siteName;

  public static final String SERIALIZED_NAME_SITE_U_U_I_D = "siteUUID";
  @SerializedName(SERIALIZED_NAME_SITE_U_U_I_D)
  private String siteUUID;

  public static final String SERIALIZED_NAME_SITE_CODE = "siteCode";
  @SerializedName(SERIALIZED_NAME_SITE_CODE)
  private String siteCode;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<Object> tags;

  public static final String SERIALIZED_NAME_APPLICABLE_PRICES = "applicablePrices";
  @SerializedName(SERIALIZED_NAME_APPLICABLE_PRICES)
  private List<BillingInstancesInstancesInnerContainersInnerUsagesInnerApplicablePricesInner> applicablePrices;

  public static final String SERIALIZED_NAME_SERVICE_PLAN_ID = "servicePlanId";
  @SerializedName(SERIALIZED_NAME_SERVICE_PLAN_ID)
  private Long servicePlanId;

  public static final String SERIALIZED_NAME_SERVICE_PLAN_NAME = "servicePlanName";
  @SerializedName(SERIALIZED_NAME_SERVICE_PLAN_NAME)
  private String servicePlanName;

  public static final String SERIALIZED_NAME_RESOURCE_POOL_ID = "resourcePoolId";
  @SerializedName(SERIALIZED_NAME_RESOURCE_POOL_ID)
  private Long resourcePoolId;

  public static final String SERIALIZED_NAME_RESOURCE_POOL_NAME = "resourcePoolName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_POOL_NAME)
  private String resourcePoolName;

  public BillingInstancesInstancesInnerContainersInnerUsagesInner() {
  }

  public BillingInstancesInstancesInnerContainersInnerUsagesInner name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner instanceName(String instanceName) {
    
    this.instanceName = instanceName;
    return this;
  }

   /**
   * Get instanceName
   * @return instanceName
  **/
  @javax.annotation.Nullable
  public String getInstanceName() {
    return instanceName;
  }


  public void setInstanceName(String instanceName) {
    this.instanceName = instanceName;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner zoneName(String zoneName) {
    
    this.zoneName = zoneName;
    return this;
  }

   /**
   * Get zoneName
   * @return zoneName
  **/
  @javax.annotation.Nullable
  public String getZoneName() {
    return zoneName;
  }


  public void setZoneName(String zoneName) {
    this.zoneName = zoneName;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner accountName(String accountName) {
    
    this.accountName = accountName;
    return this;
  }

   /**
   * Get accountName
   * @return accountName
  **/
  @javax.annotation.Nullable
  public String getAccountName() {
    return accountName;
  }


  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner volumes(List<BillingInstancesInstancesInnerContainersInnerUsagesInnerVolumesInner> volumes) {
    
    this.volumes = volumes;
    return this;
  }

  public BillingInstancesInstancesInnerContainersInnerUsagesInner addVolumesItem(BillingInstancesInstancesInnerContainersInnerUsagesInnerVolumesInner volumesItem) {
    if (this.volumes == null) {
      this.volumes = new ArrayList<>();
    }
    this.volumes.add(volumesItem);
    return this;
  }

   /**
   * Get volumes
   * @return volumes
  **/
  @javax.annotation.Nullable
  public List<BillingInstancesInstancesInnerContainersInnerUsagesInnerVolumesInner> getVolumes() {
    return volumes;
  }


  public void setVolumes(List<BillingInstancesInstancesInnerContainersInnerUsagesInnerVolumesInner> volumes) {
    this.volumes = volumes;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner maxMemory(Long maxMemory) {
    
    this.maxMemory = maxMemory;
    return this;
  }

   /**
   * Get maxMemory
   * @return maxMemory
  **/
  @javax.annotation.Nullable
  public Long getMaxMemory() {
    return maxMemory;
  }


  public void setMaxMemory(Long maxMemory) {
    this.maxMemory = maxMemory;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner maxCpu(String maxCpu) {
    
    this.maxCpu = maxCpu;
    return this;
  }

   /**
   * Get maxCpu
   * @return maxCpu
  **/
  @javax.annotation.Nullable
  public String getMaxCpu() {
    return maxCpu;
  }


  public void setMaxCpu(String maxCpu) {
    this.maxCpu = maxCpu;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner maxCores(Long maxCores) {
    
    this.maxCores = maxCores;
    return this;
  }

   /**
   * Get maxCores
   * @return maxCores
  **/
  @javax.annotation.Nullable
  public Long getMaxCores() {
    return maxCores;
  }


  public void setMaxCores(Long maxCores) {
    this.maxCores = maxCores;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner serverExternalId(String serverExternalId) {
    
    this.serverExternalId = serverExternalId;
    return this;
  }

   /**
   * Get serverExternalId
   * @return serverExternalId
  **/
  @javax.annotation.Nullable
  public String getServerExternalId() {
    return serverExternalId;
  }


  public void setServerExternalId(String serverExternalId) {
    this.serverExternalId = serverExternalId;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner serverInternalId(String serverInternalId) {
    
    this.serverInternalId = serverInternalId;
    return this;
  }

   /**
   * Get serverInternalId
   * @return serverInternalId
  **/
  @javax.annotation.Nullable
  public String getServerInternalId() {
    return serverInternalId;
  }


  public void setServerInternalId(String serverInternalId) {
    this.serverInternalId = serverInternalId;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner planName(String planName) {
    
    this.planName = planName;
    return this;
  }

   /**
   * Get planName
   * @return planName
  **/
  @javax.annotation.Nullable
  public String getPlanName() {
    return planName;
  }


  public void setPlanName(String planName) {
    this.planName = planName;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner hourlyPrice(BigDecimal hourlyPrice) {
    
    this.hourlyPrice = hourlyPrice;
    return this;
  }

   /**
   * Get hourlyPrice
   * @return hourlyPrice
  **/
  @javax.annotation.Nullable
  public BigDecimal getHourlyPrice() {
    return hourlyPrice;
  }


  public void setHourlyPrice(BigDecimal hourlyPrice) {
    this.hourlyPrice = hourlyPrice;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner hourlyCost(BigDecimal hourlyCost) {
    
    this.hourlyCost = hourlyCost;
    return this;
  }

   /**
   * Get hourlyCost
   * @return hourlyCost
  **/
  @javax.annotation.Nullable
  public BigDecimal getHourlyCost() {
    return hourlyCost;
  }


  public void setHourlyCost(BigDecimal hourlyCost) {
    this.hourlyCost = hourlyCost;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner pricesUsed(List<BillingInstancesInstancesInnerContainersInnerUsagesInnerPricesUsedInner> pricesUsed) {
    
    this.pricesUsed = pricesUsed;
    return this;
  }

  public BillingInstancesInstancesInnerContainersInnerUsagesInner addPricesUsedItem(BillingInstancesInstancesInnerContainersInnerUsagesInnerPricesUsedInner pricesUsedItem) {
    if (this.pricesUsed == null) {
      this.pricesUsed = new ArrayList<>();
    }
    this.pricesUsed.add(pricesUsedItem);
    return this;
  }

   /**
   * Get pricesUsed
   * @return pricesUsed
  **/
  @javax.annotation.Nullable
  public List<BillingInstancesInstancesInnerContainersInnerUsagesInnerPricesUsedInner> getPricesUsed() {
    return pricesUsed;
  }


  public void setPricesUsed(List<BillingInstancesInstancesInnerContainersInnerUsagesInnerPricesUsedInner> pricesUsed) {
    this.pricesUsed = pricesUsed;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner cost(BigDecimal cost) {
    
    this.cost = cost;
    return this;
  }

   /**
   * Get cost
   * @return cost
  **/
  @javax.annotation.Nullable
  public BigDecimal getCost() {
    return cost;
  }


  public void setCost(BigDecimal cost) {
    this.cost = cost;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner price(BigDecimal price) {
    
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @javax.annotation.Nullable
  public BigDecimal getPrice() {
    return price;
  }


  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner createdByUser(String createdByUser) {
    
    this.createdByUser = createdByUser;
    return this;
  }

   /**
   * Get createdByUser
   * @return createdByUser
  **/
  @javax.annotation.Nullable
  public String getCreatedByUser() {
    return createdByUser;
  }


  public void setCreatedByUser(String createdByUser) {
    this.createdByUser = createdByUser;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner createdByUserId(Long createdByUserId) {
    
    this.createdByUserId = createdByUserId;
    return this;
  }

   /**
   * Get createdByUserId
   * @return createdByUserId
  **/
  @javax.annotation.Nullable
  public Long getCreatedByUserId() {
    return createdByUserId;
  }


  public void setCreatedByUserId(Long createdByUserId) {
    this.createdByUserId = createdByUserId;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner siteId(Long siteId) {
    
    this.siteId = siteId;
    return this;
  }

   /**
   * Get siteId
   * @return siteId
  **/
  @javax.annotation.Nullable
  public Long getSiteId() {
    return siteId;
  }


  public void setSiteId(Long siteId) {
    this.siteId = siteId;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner siteName(String siteName) {
    
    this.siteName = siteName;
    return this;
  }

   /**
   * Get siteName
   * @return siteName
  **/
  @javax.annotation.Nullable
  public String getSiteName() {
    return siteName;
  }


  public void setSiteName(String siteName) {
    this.siteName = siteName;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner siteUUID(String siteUUID) {
    
    this.siteUUID = siteUUID;
    return this;
  }

   /**
   * Get siteUUID
   * @return siteUUID
  **/
  @javax.annotation.Nullable
  public String getSiteUUID() {
    return siteUUID;
  }


  public void setSiteUUID(String siteUUID) {
    this.siteUUID = siteUUID;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner siteCode(String siteCode) {
    
    this.siteCode = siteCode;
    return this;
  }

   /**
   * Get siteCode
   * @return siteCode
  **/
  @javax.annotation.Nullable
  public String getSiteCode() {
    return siteCode;
  }


  public void setSiteCode(String siteCode) {
    this.siteCode = siteCode;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner startDate(OffsetDateTime startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getStartDate() {
    return startDate;
  }


  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner endDate(OffsetDateTime endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getEndDate() {
    return endDate;
  }


  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner tags(List<Object> tags) {
    
    this.tags = tags;
    return this;
  }

  public BillingInstancesInstancesInnerContainersInnerUsagesInner addTagsItem(Object tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  public List<Object> getTags() {
    return tags;
  }


  public void setTags(List<Object> tags) {
    this.tags = tags;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner applicablePrices(List<BillingInstancesInstancesInnerContainersInnerUsagesInnerApplicablePricesInner> applicablePrices) {
    
    this.applicablePrices = applicablePrices;
    return this;
  }

  public BillingInstancesInstancesInnerContainersInnerUsagesInner addApplicablePricesItem(BillingInstancesInstancesInnerContainersInnerUsagesInnerApplicablePricesInner applicablePricesItem) {
    if (this.applicablePrices == null) {
      this.applicablePrices = new ArrayList<>();
    }
    this.applicablePrices.add(applicablePricesItem);
    return this;
  }

   /**
   * Get applicablePrices
   * @return applicablePrices
  **/
  @javax.annotation.Nullable
  public List<BillingInstancesInstancesInnerContainersInnerUsagesInnerApplicablePricesInner> getApplicablePrices() {
    return applicablePrices;
  }


  public void setApplicablePrices(List<BillingInstancesInstancesInnerContainersInnerUsagesInnerApplicablePricesInner> applicablePrices) {
    this.applicablePrices = applicablePrices;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner servicePlanId(Long servicePlanId) {
    
    this.servicePlanId = servicePlanId;
    return this;
  }

   /**
   * Get servicePlanId
   * @return servicePlanId
  **/
  @javax.annotation.Nullable
  public Long getServicePlanId() {
    return servicePlanId;
  }


  public void setServicePlanId(Long servicePlanId) {
    this.servicePlanId = servicePlanId;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner servicePlanName(String servicePlanName) {
    
    this.servicePlanName = servicePlanName;
    return this;
  }

   /**
   * Get servicePlanName
   * @return servicePlanName
  **/
  @javax.annotation.Nullable
  public String getServicePlanName() {
    return servicePlanName;
  }


  public void setServicePlanName(String servicePlanName) {
    this.servicePlanName = servicePlanName;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner resourcePoolId(Long resourcePoolId) {
    
    this.resourcePoolId = resourcePoolId;
    return this;
  }

   /**
   * Get resourcePoolId
   * @return resourcePoolId
  **/
  @javax.annotation.Nullable
  public Long getResourcePoolId() {
    return resourcePoolId;
  }


  public void setResourcePoolId(Long resourcePoolId) {
    this.resourcePoolId = resourcePoolId;
  }


  public BillingInstancesInstancesInnerContainersInnerUsagesInner resourcePoolName(String resourcePoolName) {
    
    this.resourcePoolName = resourcePoolName;
    return this;
  }

   /**
   * Get resourcePoolName
   * @return resourcePoolName
  **/
  @javax.annotation.Nullable
  public String getResourcePoolName() {
    return resourcePoolName;
  }


  public void setResourcePoolName(String resourcePoolName) {
    this.resourcePoolName = resourcePoolName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BillingInstancesInstancesInnerContainersInnerUsagesInner billingInstancesInstancesInnerContainersInnerUsagesInner = (BillingInstancesInstancesInnerContainersInnerUsagesInner) o;
    return Objects.equals(this.name, billingInstancesInstancesInnerContainersInnerUsagesInner.name) &&
        Objects.equals(this.instanceName, billingInstancesInstancesInnerContainersInnerUsagesInner.instanceName) &&
        Objects.equals(this.zoneName, billingInstancesInstancesInnerContainersInnerUsagesInner.zoneName) &&
        Objects.equals(this.accountName, billingInstancesInstancesInnerContainersInnerUsagesInner.accountName) &&
        Objects.equals(this.volumes, billingInstancesInstancesInnerContainersInnerUsagesInner.volumes) &&
        Objects.equals(this.maxMemory, billingInstancesInstancesInnerContainersInnerUsagesInner.maxMemory) &&
        Objects.equals(this.maxCpu, billingInstancesInstancesInnerContainersInnerUsagesInner.maxCpu) &&
        Objects.equals(this.maxCores, billingInstancesInstancesInnerContainersInnerUsagesInner.maxCores) &&
        Objects.equals(this.serverExternalId, billingInstancesInstancesInnerContainersInnerUsagesInner.serverExternalId) &&
        Objects.equals(this.serverInternalId, billingInstancesInstancesInnerContainersInnerUsagesInner.serverInternalId) &&
        Objects.equals(this.planName, billingInstancesInstancesInnerContainersInnerUsagesInner.planName) &&
        Objects.equals(this.hourlyPrice, billingInstancesInstancesInnerContainersInnerUsagesInner.hourlyPrice) &&
        Objects.equals(this.hourlyCost, billingInstancesInstancesInnerContainersInnerUsagesInner.hourlyCost) &&
        Objects.equals(this.currency, billingInstancesInstancesInnerContainersInnerUsagesInner.currency) &&
        Objects.equals(this.pricesUsed, billingInstancesInstancesInnerContainersInnerUsagesInner.pricesUsed) &&
        Objects.equals(this.cost, billingInstancesInstancesInnerContainersInnerUsagesInner.cost) &&
        Objects.equals(this.price, billingInstancesInstancesInnerContainersInnerUsagesInner.price) &&
        Objects.equals(this.createdByUser, billingInstancesInstancesInnerContainersInnerUsagesInner.createdByUser) &&
        Objects.equals(this.createdByUserId, billingInstancesInstancesInnerContainersInnerUsagesInner.createdByUserId) &&
        Objects.equals(this.siteId, billingInstancesInstancesInnerContainersInnerUsagesInner.siteId) &&
        Objects.equals(this.siteName, billingInstancesInstancesInnerContainersInnerUsagesInner.siteName) &&
        Objects.equals(this.siteUUID, billingInstancesInstancesInnerContainersInnerUsagesInner.siteUUID) &&
        Objects.equals(this.siteCode, billingInstancesInstancesInnerContainersInnerUsagesInner.siteCode) &&
        Objects.equals(this.startDate, billingInstancesInstancesInnerContainersInnerUsagesInner.startDate) &&
        Objects.equals(this.endDate, billingInstancesInstancesInnerContainersInnerUsagesInner.endDate) &&
        Objects.equals(this.status, billingInstancesInstancesInnerContainersInnerUsagesInner.status) &&
        Objects.equals(this.tags, billingInstancesInstancesInnerContainersInnerUsagesInner.tags) &&
        Objects.equals(this.applicablePrices, billingInstancesInstancesInnerContainersInnerUsagesInner.applicablePrices) &&
        Objects.equals(this.servicePlanId, billingInstancesInstancesInnerContainersInnerUsagesInner.servicePlanId) &&
        Objects.equals(this.servicePlanName, billingInstancesInstancesInnerContainersInnerUsagesInner.servicePlanName) &&
        Objects.equals(this.resourcePoolId, billingInstancesInstancesInnerContainersInnerUsagesInner.resourcePoolId) &&
        Objects.equals(this.resourcePoolName, billingInstancesInstancesInnerContainersInnerUsagesInner.resourcePoolName);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, instanceName, zoneName, accountName, volumes, maxMemory, maxCpu, maxCores, serverExternalId, serverInternalId, planName, hourlyPrice, hourlyCost, currency, pricesUsed, cost, price, createdByUser, createdByUserId, siteId, siteName, siteUUID, siteCode, startDate, endDate, status, tags, applicablePrices, servicePlanId, servicePlanName, resourcePoolId, resourcePoolName);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BillingInstancesInstancesInnerContainersInnerUsagesInner {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    instanceName: ").append(toIndentedString(instanceName)).append("\n");
    sb.append("    zoneName: ").append(toIndentedString(zoneName)).append("\n");
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
    sb.append("    maxMemory: ").append(toIndentedString(maxMemory)).append("\n");
    sb.append("    maxCpu: ").append(toIndentedString(maxCpu)).append("\n");
    sb.append("    maxCores: ").append(toIndentedString(maxCores)).append("\n");
    sb.append("    serverExternalId: ").append(toIndentedString(serverExternalId)).append("\n");
    sb.append("    serverInternalId: ").append(toIndentedString(serverInternalId)).append("\n");
    sb.append("    planName: ").append(toIndentedString(planName)).append("\n");
    sb.append("    hourlyPrice: ").append(toIndentedString(hourlyPrice)).append("\n");
    sb.append("    hourlyCost: ").append(toIndentedString(hourlyCost)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    pricesUsed: ").append(toIndentedString(pricesUsed)).append("\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    createdByUser: ").append(toIndentedString(createdByUser)).append("\n");
    sb.append("    createdByUserId: ").append(toIndentedString(createdByUserId)).append("\n");
    sb.append("    siteId: ").append(toIndentedString(siteId)).append("\n");
    sb.append("    siteName: ").append(toIndentedString(siteName)).append("\n");
    sb.append("    siteUUID: ").append(toIndentedString(siteUUID)).append("\n");
    sb.append("    siteCode: ").append(toIndentedString(siteCode)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    applicablePrices: ").append(toIndentedString(applicablePrices)).append("\n");
    sb.append("    servicePlanId: ").append(toIndentedString(servicePlanId)).append("\n");
    sb.append("    servicePlanName: ").append(toIndentedString(servicePlanName)).append("\n");
    sb.append("    resourcePoolId: ").append(toIndentedString(resourcePoolId)).append("\n");
    sb.append("    resourcePoolName: ").append(toIndentedString(resourcePoolName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("instanceName");
    openapiFields.add("zoneName");
    openapiFields.add("accountName");
    openapiFields.add("volumes");
    openapiFields.add("maxMemory");
    openapiFields.add("maxCpu");
    openapiFields.add("maxCores");
    openapiFields.add("serverExternalId");
    openapiFields.add("serverInternalId");
    openapiFields.add("planName");
    openapiFields.add("hourlyPrice");
    openapiFields.add("hourlyCost");
    openapiFields.add("currency");
    openapiFields.add("pricesUsed");
    openapiFields.add("cost");
    openapiFields.add("price");
    openapiFields.add("createdByUser");
    openapiFields.add("createdByUserId");
    openapiFields.add("siteId");
    openapiFields.add("siteName");
    openapiFields.add("siteUUID");
    openapiFields.add("siteCode");
    openapiFields.add("startDate");
    openapiFields.add("endDate");
    openapiFields.add("status");
    openapiFields.add("tags");
    openapiFields.add("applicablePrices");
    openapiFields.add("servicePlanId");
    openapiFields.add("servicePlanName");
    openapiFields.add("resourcePoolId");
    openapiFields.add("resourcePoolName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to BillingInstancesInstancesInnerContainersInnerUsagesInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BillingInstancesInstancesInnerContainersInnerUsagesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BillingInstancesInstancesInnerContainersInnerUsagesInner is not found in the empty JSON string", BillingInstancesInstancesInnerContainersInnerUsagesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!BillingInstancesInstancesInnerContainersInnerUsagesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BillingInstancesInstancesInnerContainersInnerUsagesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("instanceName") != null && !jsonObj.get("instanceName").isJsonNull()) && !jsonObj.get("instanceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `instanceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("instanceName").toString()));
      }
      if ((jsonObj.get("zoneName") != null && !jsonObj.get("zoneName").isJsonNull()) && !jsonObj.get("zoneName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zoneName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zoneName").toString()));
      }
      if ((jsonObj.get("accountName") != null && !jsonObj.get("accountName").isJsonNull()) && !jsonObj.get("accountName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountName").toString()));
      }
      if (jsonObj.get("volumes") != null && !jsonObj.get("volumes").isJsonNull()) {
        JsonArray jsonArrayvolumes = jsonObj.getAsJsonArray("volumes");
        if (jsonArrayvolumes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("volumes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `volumes` to be an array in the JSON string but got `%s`", jsonObj.get("volumes").toString()));
          }

          // validate the optional field `volumes` (array)
          for (int i = 0; i < jsonArrayvolumes.size(); i++) {
            BillingInstancesInstancesInnerContainersInnerUsagesInnerVolumesInner.validateJsonElement(jsonArrayvolumes.get(i));
          };
        }
      }
      if ((jsonObj.get("maxCpu") != null && !jsonObj.get("maxCpu").isJsonNull()) && !jsonObj.get("maxCpu").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxCpu` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxCpu").toString()));
      }
      if ((jsonObj.get("serverExternalId") != null && !jsonObj.get("serverExternalId").isJsonNull()) && !jsonObj.get("serverExternalId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serverExternalId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serverExternalId").toString()));
      }
      if ((jsonObj.get("serverInternalId") != null && !jsonObj.get("serverInternalId").isJsonNull()) && !jsonObj.get("serverInternalId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serverInternalId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serverInternalId").toString()));
      }
      if ((jsonObj.get("planName") != null && !jsonObj.get("planName").isJsonNull()) && !jsonObj.get("planName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `planName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("planName").toString()));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if (jsonObj.get("pricesUsed") != null && !jsonObj.get("pricesUsed").isJsonNull()) {
        JsonArray jsonArraypricesUsed = jsonObj.getAsJsonArray("pricesUsed");
        if (jsonArraypricesUsed != null) {
          // ensure the json data is an array
          if (!jsonObj.get("pricesUsed").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `pricesUsed` to be an array in the JSON string but got `%s`", jsonObj.get("pricesUsed").toString()));
          }

          // validate the optional field `pricesUsed` (array)
          for (int i = 0; i < jsonArraypricesUsed.size(); i++) {
            BillingInstancesInstancesInnerContainersInnerUsagesInnerPricesUsedInner.validateJsonElement(jsonArraypricesUsed.get(i));
          };
        }
      }
      if ((jsonObj.get("createdByUser") != null && !jsonObj.get("createdByUser").isJsonNull()) && !jsonObj.get("createdByUser").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdByUser` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdByUser").toString()));
      }
      if ((jsonObj.get("siteName") != null && !jsonObj.get("siteName").isJsonNull()) && !jsonObj.get("siteName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `siteName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("siteName").toString()));
      }
      if ((jsonObj.get("siteUUID") != null && !jsonObj.get("siteUUID").isJsonNull()) && !jsonObj.get("siteUUID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `siteUUID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("siteUUID").toString()));
      }
      if ((jsonObj.get("siteCode") != null && !jsonObj.get("siteCode").isJsonNull()) && !jsonObj.get("siteCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `siteCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("siteCode").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull() && !jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if (jsonObj.get("applicablePrices") != null && !jsonObj.get("applicablePrices").isJsonNull()) {
        JsonArray jsonArrayapplicablePrices = jsonObj.getAsJsonArray("applicablePrices");
        if (jsonArrayapplicablePrices != null) {
          // ensure the json data is an array
          if (!jsonObj.get("applicablePrices").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `applicablePrices` to be an array in the JSON string but got `%s`", jsonObj.get("applicablePrices").toString()));
          }

          // validate the optional field `applicablePrices` (array)
          for (int i = 0; i < jsonArrayapplicablePrices.size(); i++) {
            BillingInstancesInstancesInnerContainersInnerUsagesInnerApplicablePricesInner.validateJsonElement(jsonArrayapplicablePrices.get(i));
          };
        }
      }
      if ((jsonObj.get("servicePlanName") != null && !jsonObj.get("servicePlanName").isJsonNull()) && !jsonObj.get("servicePlanName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `servicePlanName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("servicePlanName").toString()));
      }
      if ((jsonObj.get("resourcePoolName") != null && !jsonObj.get("resourcePoolName").isJsonNull()) && !jsonObj.get("resourcePoolName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourcePoolName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourcePoolName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BillingInstancesInstancesInnerContainersInnerUsagesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BillingInstancesInstancesInnerContainersInnerUsagesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BillingInstancesInstancesInnerContainersInnerUsagesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BillingInstancesInstancesInnerContainersInnerUsagesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<BillingInstancesInstancesInnerContainersInnerUsagesInner>() {
           @Override
           public void write(JsonWriter out, BillingInstancesInstancesInnerContainersInnerUsagesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BillingInstancesInstancesInnerContainersInnerUsagesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of BillingInstancesInstancesInnerContainersInnerUsagesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of BillingInstancesInstancesInnerContainersInnerUsagesInner
  * @throws IOException if the JSON string is invalid with respect to BillingInstancesInstancesInnerContainersInnerUsagesInner
  */
  public static BillingInstancesInstancesInnerContainersInnerUsagesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BillingInstancesInstancesInnerContainersInnerUsagesInner.class);
  }

 /**
  * Convert an instance of BillingInstancesInstancesInnerContainersInnerUsagesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

