/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.AnyOfnetworkTypeAzureConfignetworkTypeAwsConfignetworkTypeGcpConfigobject;
import org.openapitools.client.model.ApiBlueprintsIdUpdatePermissionsResourcePermissionSites;
import org.openapitools.client.model.NetworkCreateNetworkDomain;
import org.openapitools.client.model.NetworkCreateNetworkProxy;
import org.openapitools.client.model.NetworkCreateResourcePermissions;
import org.openapitools.client.model.NetworkCreateSite;
import org.openapitools.client.model.NetworkCreateType;
import org.openapitools.client.model.NetworkCreateZone;

/**
 * NetworkCreate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class NetworkCreate {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private List<String> labels = null;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SITE = "site";
  @SerializedName(SERIALIZED_NAME_SITE)
  private NetworkCreateSite site;

  public static final String SERIALIZED_NAME_ZONE = "zone";
  @SerializedName(SERIALIZED_NAME_ZONE)
  private NetworkCreateZone zone;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private NetworkCreateType type;

  public static final String SERIALIZED_NAME_IPV4_ENABLED = "ipv4Enabled";
  @SerializedName(SERIALIZED_NAME_IPV4_ENABLED)
  private Boolean ipv4Enabled;

  public static final String SERIALIZED_NAME_IPV6_ENABLED = "ipv6Enabled";
  @SerializedName(SERIALIZED_NAME_IPV6_ENABLED)
  private Boolean ipv6Enabled;

  public static final String SERIALIZED_NAME_CIDR = "cidr";
  @SerializedName(SERIALIZED_NAME_CIDR)
  private String cidr;

  public static final String SERIALIZED_NAME_GATEWAY = "gateway";
  @SerializedName(SERIALIZED_NAME_GATEWAY)
  private String gateway;

  public static final String SERIALIZED_NAME_DNS_PRIMARY = "dnsPrimary";
  @SerializedName(SERIALIZED_NAME_DNS_PRIMARY)
  private String dnsPrimary;

  public static final String SERIALIZED_NAME_DNS_SECONDARY = "dnsSecondary";
  @SerializedName(SERIALIZED_NAME_DNS_SECONDARY)
  private String dnsSecondary;

  public static final String SERIALIZED_NAME_GATEWAY_I_PV6 = "gatewayIPv6";
  @SerializedName(SERIALIZED_NAME_GATEWAY_I_PV6)
  private String gatewayIPv6;

  public static final String SERIALIZED_NAME_NETMASK_I_PV6 = "netmaskIPv6";
  @SerializedName(SERIALIZED_NAME_NETMASK_I_PV6)
  private String netmaskIPv6;

  public static final String SERIALIZED_NAME_DNS_PRIMARY_I_PV6 = "dnsPrimaryIPv6";
  @SerializedName(SERIALIZED_NAME_DNS_PRIMARY_I_PV6)
  private String dnsPrimaryIPv6;

  public static final String SERIALIZED_NAME_DNS_SECONDARY_I_PV6 = "dnsSecondaryIPv6";
  @SerializedName(SERIALIZED_NAME_DNS_SECONDARY_I_PV6)
  private String dnsSecondaryIPv6;

  public static final String SERIALIZED_NAME_CIDR_I_PV6 = "cidrIPv6";
  @SerializedName(SERIALIZED_NAME_CIDR_I_PV6)
  private String cidrIPv6;

  public static final String SERIALIZED_NAME_VLAN_ID = "vlanId";
  @SerializedName(SERIALIZED_NAME_VLAN_ID)
  private Long vlanId;

  public static final String SERIALIZED_NAME_POOL = "pool";
  @SerializedName(SERIALIZED_NAME_POOL)
  private Long pool;

  public static final String SERIALIZED_NAME_POOL_I_PV6 = "poolIPv6";
  @SerializedName(SERIALIZED_NAME_POOL_I_PV6)
  private Long poolIPv6;

  public static final String SERIALIZED_NAME_ALLOW_STATIC_OVERRIDE = "allowStaticOverride";
  @SerializedName(SERIALIZED_NAME_ALLOW_STATIC_OVERRIDE)
  private Boolean allowStaticOverride;

  public static final String SERIALIZED_NAME_ASSIGN_PUBLIC_IP = "assignPublicIp";
  @SerializedName(SERIALIZED_NAME_ASSIGN_PUBLIC_IP)
  private Boolean assignPublicIp;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_DHCP_SERVER = "dhcpServer";
  @SerializedName(SERIALIZED_NAME_DHCP_SERVER)
  private Boolean dhcpServer;

  public static final String SERIALIZED_NAME_DHCP_SERVER_I_PV6 = "dhcpServerIPv6";
  @SerializedName(SERIALIZED_NAME_DHCP_SERVER_I_PV6)
  private Boolean dhcpServerIPv6;

  public static final String SERIALIZED_NAME_NETWORK_DOMAIN = "networkDomain";
  @SerializedName(SERIALIZED_NAME_NETWORK_DOMAIN)
  private NetworkCreateNetworkDomain networkDomain;

  public static final String SERIALIZED_NAME_SEARCH_DOMAINS = "searchDomains";
  @SerializedName(SERIALIZED_NAME_SEARCH_DOMAINS)
  private String searchDomains;

  public static final String SERIALIZED_NAME_NETWORK_PROXY = "networkProxy";
  @SerializedName(SERIALIZED_NAME_NETWORK_PROXY)
  private NetworkCreateNetworkProxy networkProxy;

  public static final String SERIALIZED_NAME_APPLIANCE_URL_PROXY_BYPASS = "applianceUrlProxyBypass";
  @SerializedName(SERIALIZED_NAME_APPLIANCE_URL_PROXY_BYPASS)
  private Boolean applianceUrlProxyBypass;

  public static final String SERIALIZED_NAME_NO_PROXY = "noProxy";
  @SerializedName(SERIALIZED_NAME_NO_PROXY)
  private String noProxy;

  /**
   * Visibility, private or public.
   */
  @JsonAdapter(VisibilityEnum.Adapter.class)
  public enum VisibilityEnum {
    PRIVATE("private"),
    
    PUBLIC("public");

    private String value;

    VisibilityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VisibilityEnum fromValue(String value) {
      for (VisibilityEnum b : VisibilityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<VisibilityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VisibilityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VisibilityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return VisibilityEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_VISIBILITY = "visibility";
  @SerializedName(SERIALIZED_NAME_VISIBILITY)
  private VisibilityEnum visibility = VisibilityEnum.PRIVATE;

  public static final String SERIALIZED_NAME_CONFIG = "config";
  @SerializedName(SERIALIZED_NAME_CONFIG)
  private AnyOfnetworkTypeAzureConfignetworkTypeAwsConfignetworkTypeGcpConfigobject config;

  public static final String SERIALIZED_NAME_TENANTS = "tenants";
  @SerializedName(SERIALIZED_NAME_TENANTS)
  private List<ApiBlueprintsIdUpdatePermissionsResourcePermissionSites> tenants = null;

  public static final String SERIALIZED_NAME_RESOURCE_PERMISSIONS = "resourcePermissions";
  @SerializedName(SERIALIZED_NAME_RESOURCE_PERMISSIONS)
  private NetworkCreateResourcePermissions resourcePermissions;


  public NetworkCreate name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public NetworkCreate displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Display Name
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Display Name")

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public NetworkCreate labels(List<String> labels) {
    
    this.labels = labels;
    return this;
  }

  public NetworkCreate addLabelsItem(String labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<String>();
    }
    this.labels.add(labelsItem);
    return this;
  }

   /**
   * Array of label strings, can be used for filtering.
   * @return labels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array of label strings, can be used for filtering.")

  public List<String> getLabels() {
    return labels;
  }


  public void setLabels(List<String> labels) {
    this.labels = labels;
  }


  public NetworkCreate description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public NetworkCreate site(NetworkCreateSite site) {
    
    this.site = site;
    return this;
  }

   /**
   * Get site
   * @return site
  **/
  @ApiModelProperty(required = true, value = "")

  public NetworkCreateSite getSite() {
    return site;
  }


  public void setSite(NetworkCreateSite site) {
    this.site = site;
  }


  public NetworkCreate zone(NetworkCreateZone zone) {
    
    this.zone = zone;
    return this;
  }

   /**
   * Get zone
   * @return zone
  **/
  @ApiModelProperty(required = true, value = "")

  public NetworkCreateZone getZone() {
    return zone;
  }


  public void setZone(NetworkCreateZone zone) {
    this.zone = zone;
  }


  public NetworkCreate type(NetworkCreateType type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NetworkCreateType getType() {
    return type;
  }


  public void setType(NetworkCreateType type) {
    this.type = type;
  }


  public NetworkCreate ipv4Enabled(Boolean ipv4Enabled) {
    
    this.ipv4Enabled = ipv4Enabled;
    return this;
  }

   /**
   * Get ipv4Enabled
   * @return ipv4Enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIpv4Enabled() {
    return ipv4Enabled;
  }


  public void setIpv4Enabled(Boolean ipv4Enabled) {
    this.ipv4Enabled = ipv4Enabled;
  }


  public NetworkCreate ipv6Enabled(Boolean ipv6Enabled) {
    
    this.ipv6Enabled = ipv6Enabled;
    return this;
  }

   /**
   * Get ipv6Enabled
   * @return ipv6Enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIpv6Enabled() {
    return ipv6Enabled;
  }


  public void setIpv6Enabled(Boolean ipv6Enabled) {
    this.ipv6Enabled = ipv6Enabled;
  }


  public NetworkCreate cidr(String cidr) {
    
    this.cidr = cidr;
    return this;
  }

   /**
   * CIDR Network
   * @return cidr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "CIDR Network")

  public String getCidr() {
    return cidr;
  }


  public void setCidr(String cidr) {
    this.cidr = cidr;
  }


  public NetworkCreate gateway(String gateway) {
    
    this.gateway = gateway;
    return this;
  }

   /**
   * Network Gateway
   * @return gateway
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Network Gateway")

  public String getGateway() {
    return gateway;
  }


  public void setGateway(String gateway) {
    this.gateway = gateway;
  }


  public NetworkCreate dnsPrimary(String dnsPrimary) {
    
    this.dnsPrimary = dnsPrimary;
    return this;
  }

   /**
   * Primary DNS Server
   * @return dnsPrimary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Primary DNS Server")

  public String getDnsPrimary() {
    return dnsPrimary;
  }


  public void setDnsPrimary(String dnsPrimary) {
    this.dnsPrimary = dnsPrimary;
  }


  public NetworkCreate dnsSecondary(String dnsSecondary) {
    
    this.dnsSecondary = dnsSecondary;
    return this;
  }

   /**
   * Secondary DNS Server
   * @return dnsSecondary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Secondary DNS Server")

  public String getDnsSecondary() {
    return dnsSecondary;
  }


  public void setDnsSecondary(String dnsSecondary) {
    this.dnsSecondary = dnsSecondary;
  }


  public NetworkCreate gatewayIPv6(String gatewayIPv6) {
    
    this.gatewayIPv6 = gatewayIPv6;
    return this;
  }

   /**
   * IPv6 Network Gateway
   * @return gatewayIPv6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "IPv6 Network Gateway")

  public String getGatewayIPv6() {
    return gatewayIPv6;
  }


  public void setGatewayIPv6(String gatewayIPv6) {
    this.gatewayIPv6 = gatewayIPv6;
  }


  public NetworkCreate netmaskIPv6(String netmaskIPv6) {
    
    this.netmaskIPv6 = netmaskIPv6;
    return this;
  }

   /**
   * Get netmaskIPv6
   * @return netmaskIPv6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNetmaskIPv6() {
    return netmaskIPv6;
  }


  public void setNetmaskIPv6(String netmaskIPv6) {
    this.netmaskIPv6 = netmaskIPv6;
  }


  public NetworkCreate dnsPrimaryIPv6(String dnsPrimaryIPv6) {
    
    this.dnsPrimaryIPv6 = dnsPrimaryIPv6;
    return this;
  }

   /**
   * Primary IPv6 DNS Server
   * @return dnsPrimaryIPv6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Primary IPv6 DNS Server")

  public String getDnsPrimaryIPv6() {
    return dnsPrimaryIPv6;
  }


  public void setDnsPrimaryIPv6(String dnsPrimaryIPv6) {
    this.dnsPrimaryIPv6 = dnsPrimaryIPv6;
  }


  public NetworkCreate dnsSecondaryIPv6(String dnsSecondaryIPv6) {
    
    this.dnsSecondaryIPv6 = dnsSecondaryIPv6;
    return this;
  }

   /**
   * Secondary IPv6 DNS Server
   * @return dnsSecondaryIPv6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Secondary IPv6 DNS Server")

  public String getDnsSecondaryIPv6() {
    return dnsSecondaryIPv6;
  }


  public void setDnsSecondaryIPv6(String dnsSecondaryIPv6) {
    this.dnsSecondaryIPv6 = dnsSecondaryIPv6;
  }


  public NetworkCreate cidrIPv6(String cidrIPv6) {
    
    this.cidrIPv6 = cidrIPv6;
    return this;
  }

   /**
   * IPv6 Network CIDR
   * @return cidrIPv6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "IPv6 Network CIDR")

  public String getCidrIPv6() {
    return cidrIPv6;
  }


  public void setCidrIPv6(String cidrIPv6) {
    this.cidrIPv6 = cidrIPv6;
  }


  public NetworkCreate vlanId(Long vlanId) {
    
    this.vlanId = vlanId;
    return this;
  }

   /**
   * Get vlanId
   * @return vlanId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getVlanId() {
    return vlanId;
  }


  public void setVlanId(Long vlanId) {
    this.vlanId = vlanId;
  }


  public NetworkCreate pool(Long pool) {
    
    this.pool = pool;
    return this;
  }

   /**
   * Network Pool ID
   * @return pool
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Network Pool ID")

  public Long getPool() {
    return pool;
  }


  public void setPool(Long pool) {
    this.pool = pool;
  }


  public NetworkCreate poolIPv6(Long poolIPv6) {
    
    this.poolIPv6 = poolIPv6;
    return this;
  }

   /**
   * IPv6 Network Pool ID
   * @return poolIPv6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "IPv6 Network Pool ID")

  public Long getPoolIPv6() {
    return poolIPv6;
  }


  public void setPoolIPv6(Long poolIPv6) {
    this.poolIPv6 = poolIPv6;
  }


  public NetworkCreate allowStaticOverride(Boolean allowStaticOverride) {
    
    this.allowStaticOverride = allowStaticOverride;
    return this;
  }

   /**
   * Allow IP Override
   * @return allowStaticOverride
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allow IP Override")

  public Boolean getAllowStaticOverride() {
    return allowStaticOverride;
  }


  public void setAllowStaticOverride(Boolean allowStaticOverride) {
    this.allowStaticOverride = allowStaticOverride;
  }


  public NetworkCreate assignPublicIp(Boolean assignPublicIp) {
    
    this.assignPublicIp = assignPublicIp;
    return this;
  }

   /**
   * Assign Public IP
   * @return assignPublicIp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Assign Public IP")

  public Boolean getAssignPublicIp() {
    return assignPublicIp;
  }


  public void setAssignPublicIp(Boolean assignPublicIp) {
    this.assignPublicIp = assignPublicIp;
  }


  public NetworkCreate active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Activate (true) or disable (false) the network
   * @return active
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Activate (true) or disable (false) the network")

  public Boolean getActive() {
    return active;
  }


  public void setActive(Boolean active) {
    this.active = active;
  }


  public NetworkCreate dhcpServer(Boolean dhcpServer) {
    
    this.dhcpServer = dhcpServer;
    return this;
  }

   /**
   * DHCP Server enabled network
   * @return dhcpServer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "DHCP Server enabled network")

  public Boolean getDhcpServer() {
    return dhcpServer;
  }


  public void setDhcpServer(Boolean dhcpServer) {
    this.dhcpServer = dhcpServer;
  }


  public NetworkCreate dhcpServerIPv6(Boolean dhcpServerIPv6) {
    
    this.dhcpServerIPv6 = dhcpServerIPv6;
    return this;
  }

   /**
   * IPv6 DHCP Server enabled network
   * @return dhcpServerIPv6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "IPv6 DHCP Server enabled network")

  public Boolean getDhcpServerIPv6() {
    return dhcpServerIPv6;
  }


  public void setDhcpServerIPv6(Boolean dhcpServerIPv6) {
    this.dhcpServerIPv6 = dhcpServerIPv6;
  }


  public NetworkCreate networkDomain(NetworkCreateNetworkDomain networkDomain) {
    
    this.networkDomain = networkDomain;
    return this;
  }

   /**
   * Get networkDomain
   * @return networkDomain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NetworkCreateNetworkDomain getNetworkDomain() {
    return networkDomain;
  }


  public void setNetworkDomain(NetworkCreateNetworkDomain networkDomain) {
    this.networkDomain = networkDomain;
  }


  public NetworkCreate searchDomains(String searchDomains) {
    
    this.searchDomains = searchDomains;
    return this;
  }

   /**
   * Search Domains
   * @return searchDomains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Search Domains")

  public String getSearchDomains() {
    return searchDomains;
  }


  public void setSearchDomains(String searchDomains) {
    this.searchDomains = searchDomains;
  }


  public NetworkCreate networkProxy(NetworkCreateNetworkProxy networkProxy) {
    
    this.networkProxy = networkProxy;
    return this;
  }

   /**
   * Get networkProxy
   * @return networkProxy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NetworkCreateNetworkProxy getNetworkProxy() {
    return networkProxy;
  }


  public void setNetworkProxy(NetworkCreateNetworkProxy networkProxy) {
    this.networkProxy = networkProxy;
  }


  public NetworkCreate applianceUrlProxyBypass(Boolean applianceUrlProxyBypass) {
    
    this.applianceUrlProxyBypass = applianceUrlProxyBypass;
    return this;
  }

   /**
   * Bypass Proxy for Appliance URL
   * @return applianceUrlProxyBypass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Bypass Proxy for Appliance URL")

  public Boolean getApplianceUrlProxyBypass() {
    return applianceUrlProxyBypass;
  }


  public void setApplianceUrlProxyBypass(Boolean applianceUrlProxyBypass) {
    this.applianceUrlProxyBypass = applianceUrlProxyBypass;
  }


  public NetworkCreate noProxy(String noProxy) {
    
    this.noProxy = noProxy;
    return this;
  }

   /**
   * Comma-separated list of ip addresses or name servers to exclude proxy traversal for. Typically locally routable servers are excluded.
   * @return noProxy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Comma-separated list of ip addresses or name servers to exclude proxy traversal for. Typically locally routable servers are excluded.")

  public String getNoProxy() {
    return noProxy;
  }


  public void setNoProxy(String noProxy) {
    this.noProxy = noProxy;
  }


  public NetworkCreate visibility(VisibilityEnum visibility) {
    
    this.visibility = visibility;
    return this;
  }

   /**
   * Visibility, private or public.
   * @return visibility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Visibility, private or public.")

  public VisibilityEnum getVisibility() {
    return visibility;
  }


  public void setVisibility(VisibilityEnum visibility) {
    this.visibility = visibility;
  }


  public NetworkCreate config(AnyOfnetworkTypeAzureConfignetworkTypeAwsConfignetworkTypeGcpConfigobject config) {
    
    this.config = config;
    return this;
  }

   /**
   * Configuration object. Settings vary by type.
   * @return config
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Configuration object. Settings vary by type.")

  public AnyOfnetworkTypeAzureConfignetworkTypeAwsConfignetworkTypeGcpConfigobject getConfig() {
    return config;
  }


  public void setConfig(AnyOfnetworkTypeAzureConfignetworkTypeAwsConfignetworkTypeGcpConfigobject config) {
    this.config = config;
  }


  public NetworkCreate tenants(List<ApiBlueprintsIdUpdatePermissionsResourcePermissionSites> tenants) {
    
    this.tenants = tenants;
    return this;
  }

  public NetworkCreate addTenantsItem(ApiBlueprintsIdUpdatePermissionsResourcePermissionSites tenantsItem) {
    if (this.tenants == null) {
      this.tenants = new ArrayList<ApiBlueprintsIdUpdatePermissionsResourcePermissionSites>();
    }
    this.tenants.add(tenantsItem);
    return this;
  }

   /**
   * Array of tenant account ids that are allowed access
   * @return tenants
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Array of tenant account ids that are allowed access")

  public List<ApiBlueprintsIdUpdatePermissionsResourcePermissionSites> getTenants() {
    return tenants;
  }


  public void setTenants(List<ApiBlueprintsIdUpdatePermissionsResourcePermissionSites> tenants) {
    this.tenants = tenants;
  }


  public NetworkCreate resourcePermissions(NetworkCreateResourcePermissions resourcePermissions) {
    
    this.resourcePermissions = resourcePermissions;
    return this;
  }

   /**
   * Get resourcePermissions
   * @return resourcePermissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public NetworkCreateResourcePermissions getResourcePermissions() {
    return resourcePermissions;
  }


  public void setResourcePermissions(NetworkCreateResourcePermissions resourcePermissions) {
    this.resourcePermissions = resourcePermissions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkCreate networkCreate = (NetworkCreate) o;
    return Objects.equals(this.name, networkCreate.name) &&
        Objects.equals(this.displayName, networkCreate.displayName) &&
        Objects.equals(this.labels, networkCreate.labels) &&
        Objects.equals(this.description, networkCreate.description) &&
        Objects.equals(this.site, networkCreate.site) &&
        Objects.equals(this.zone, networkCreate.zone) &&
        Objects.equals(this.type, networkCreate.type) &&
        Objects.equals(this.ipv4Enabled, networkCreate.ipv4Enabled) &&
        Objects.equals(this.ipv6Enabled, networkCreate.ipv6Enabled) &&
        Objects.equals(this.cidr, networkCreate.cidr) &&
        Objects.equals(this.gateway, networkCreate.gateway) &&
        Objects.equals(this.dnsPrimary, networkCreate.dnsPrimary) &&
        Objects.equals(this.dnsSecondary, networkCreate.dnsSecondary) &&
        Objects.equals(this.gatewayIPv6, networkCreate.gatewayIPv6) &&
        Objects.equals(this.netmaskIPv6, networkCreate.netmaskIPv6) &&
        Objects.equals(this.dnsPrimaryIPv6, networkCreate.dnsPrimaryIPv6) &&
        Objects.equals(this.dnsSecondaryIPv6, networkCreate.dnsSecondaryIPv6) &&
        Objects.equals(this.cidrIPv6, networkCreate.cidrIPv6) &&
        Objects.equals(this.vlanId, networkCreate.vlanId) &&
        Objects.equals(this.pool, networkCreate.pool) &&
        Objects.equals(this.poolIPv6, networkCreate.poolIPv6) &&
        Objects.equals(this.allowStaticOverride, networkCreate.allowStaticOverride) &&
        Objects.equals(this.assignPublicIp, networkCreate.assignPublicIp) &&
        Objects.equals(this.active, networkCreate.active) &&
        Objects.equals(this.dhcpServer, networkCreate.dhcpServer) &&
        Objects.equals(this.dhcpServerIPv6, networkCreate.dhcpServerIPv6) &&
        Objects.equals(this.networkDomain, networkCreate.networkDomain) &&
        Objects.equals(this.searchDomains, networkCreate.searchDomains) &&
        Objects.equals(this.networkProxy, networkCreate.networkProxy) &&
        Objects.equals(this.applianceUrlProxyBypass, networkCreate.applianceUrlProxyBypass) &&
        Objects.equals(this.noProxy, networkCreate.noProxy) &&
        Objects.equals(this.visibility, networkCreate.visibility) &&
        Objects.equals(this.config, networkCreate.config) &&
        Objects.equals(this.tenants, networkCreate.tenants) &&
        Objects.equals(this.resourcePermissions, networkCreate.resourcePermissions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, displayName, labels, description, site, zone, type, ipv4Enabled, ipv6Enabled, cidr, gateway, dnsPrimary, dnsSecondary, gatewayIPv6, netmaskIPv6, dnsPrimaryIPv6, dnsSecondaryIPv6, cidrIPv6, vlanId, pool, poolIPv6, allowStaticOverride, assignPublicIp, active, dhcpServer, dhcpServerIPv6, networkDomain, searchDomains, networkProxy, applianceUrlProxyBypass, noProxy, visibility, config, tenants, resourcePermissions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkCreate {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    site: ").append(toIndentedString(site)).append("\n");
    sb.append("    zone: ").append(toIndentedString(zone)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    ipv4Enabled: ").append(toIndentedString(ipv4Enabled)).append("\n");
    sb.append("    ipv6Enabled: ").append(toIndentedString(ipv6Enabled)).append("\n");
    sb.append("    cidr: ").append(toIndentedString(cidr)).append("\n");
    sb.append("    gateway: ").append(toIndentedString(gateway)).append("\n");
    sb.append("    dnsPrimary: ").append(toIndentedString(dnsPrimary)).append("\n");
    sb.append("    dnsSecondary: ").append(toIndentedString(dnsSecondary)).append("\n");
    sb.append("    gatewayIPv6: ").append(toIndentedString(gatewayIPv6)).append("\n");
    sb.append("    netmaskIPv6: ").append(toIndentedString(netmaskIPv6)).append("\n");
    sb.append("    dnsPrimaryIPv6: ").append(toIndentedString(dnsPrimaryIPv6)).append("\n");
    sb.append("    dnsSecondaryIPv6: ").append(toIndentedString(dnsSecondaryIPv6)).append("\n");
    sb.append("    cidrIPv6: ").append(toIndentedString(cidrIPv6)).append("\n");
    sb.append("    vlanId: ").append(toIndentedString(vlanId)).append("\n");
    sb.append("    pool: ").append(toIndentedString(pool)).append("\n");
    sb.append("    poolIPv6: ").append(toIndentedString(poolIPv6)).append("\n");
    sb.append("    allowStaticOverride: ").append(toIndentedString(allowStaticOverride)).append("\n");
    sb.append("    assignPublicIp: ").append(toIndentedString(assignPublicIp)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    dhcpServer: ").append(toIndentedString(dhcpServer)).append("\n");
    sb.append("    dhcpServerIPv6: ").append(toIndentedString(dhcpServerIPv6)).append("\n");
    sb.append("    networkDomain: ").append(toIndentedString(networkDomain)).append("\n");
    sb.append("    searchDomains: ").append(toIndentedString(searchDomains)).append("\n");
    sb.append("    networkProxy: ").append(toIndentedString(networkProxy)).append("\n");
    sb.append("    applianceUrlProxyBypass: ").append(toIndentedString(applianceUrlProxyBypass)).append("\n");
    sb.append("    noProxy: ").append(toIndentedString(noProxy)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    tenants: ").append(toIndentedString(tenants)).append("\n");
    sb.append("    resourcePermissions: ").append(toIndentedString(resourcePermissions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

