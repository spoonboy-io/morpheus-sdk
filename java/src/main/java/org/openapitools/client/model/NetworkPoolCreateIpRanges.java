/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NetworkPoolCreateIpRanges
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class NetworkPoolCreateIpRanges {
  public static final String SERIALIZED_NAME_START_ADDRESS = "startAddress";
  @SerializedName(SERIALIZED_NAME_START_ADDRESS)
  private String startAddress;

  public static final String SERIALIZED_NAME_END_ADDRESS = "endAddress";
  @SerializedName(SERIALIZED_NAME_END_ADDRESS)
  private String endAddress;

  public static final String SERIALIZED_NAME_CIDR_I_PV6 = "cidrIPv6";
  @SerializedName(SERIALIZED_NAME_CIDR_I_PV6)
  private String cidrIPv6;


  public NetworkPoolCreateIpRanges startAddress(String startAddress) {
    
    this.startAddress = startAddress;
    return this;
  }

   /**
   * Starting IP Address
   * @return startAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Starting IP Address")

  public String getStartAddress() {
    return startAddress;
  }


  public void setStartAddress(String startAddress) {
    this.startAddress = startAddress;
  }


  public NetworkPoolCreateIpRanges endAddress(String endAddress) {
    
    this.endAddress = endAddress;
    return this;
  }

   /**
   * Ending IP Address
   * @return endAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Ending IP Address")

  public String getEndAddress() {
    return endAddress;
  }


  public void setEndAddress(String endAddress) {
    this.endAddress = endAddress;
  }


  public NetworkPoolCreateIpRanges cidrIPv6(String cidrIPv6) {
    
    this.cidrIPv6 = cidrIPv6;
    return this;
  }

   /**
   * IPv6 Network CIDR
   * @return cidrIPv6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "IPv6 Network CIDR")

  public String getCidrIPv6() {
    return cidrIPv6;
  }


  public void setCidrIPv6(String cidrIPv6) {
    this.cidrIPv6 = cidrIPv6;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkPoolCreateIpRanges networkPoolCreateIpRanges = (NetworkPoolCreateIpRanges) o;
    return Objects.equals(this.startAddress, networkPoolCreateIpRanges.startAddress) &&
        Objects.equals(this.endAddress, networkPoolCreateIpRanges.endAddress) &&
        Objects.equals(this.cidrIPv6, networkPoolCreateIpRanges.cidrIPv6);
  }

  @Override
  public int hashCode() {
    return Objects.hash(startAddress, endAddress, cidrIPv6);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkPoolCreateIpRanges {\n");
    sb.append("    startAddress: ").append(toIndentedString(startAddress)).append("\n");
    sb.append("    endAddress: ").append(toIndentedString(endAddress)).append("\n");
    sb.append("    cidrIPv6: ").append(toIndentedString(cidrIPv6)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

