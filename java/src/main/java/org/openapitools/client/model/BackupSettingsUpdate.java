/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.BackupSettingsUpdateDefaultSchedule;
import org.openapitools.client.model.BackupSettingsUpdateDefaultStorageBucket;

/**
 * BackupSettingsUpdate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class BackupSettingsUpdate {
  public static final String SERIALIZED_NAME_BACKUPS_ENABLED = "backupsEnabled";
  @SerializedName(SERIALIZED_NAME_BACKUPS_ENABLED)
  private Boolean backupsEnabled;

  public static final String SERIALIZED_NAME_RETENTION_COUNT = "retentionCount";
  @SerializedName(SERIALIZED_NAME_RETENTION_COUNT)
  private Long retentionCount;

  public static final String SERIALIZED_NAME_CREATE_BACKUPS = "createBackups";
  @SerializedName(SERIALIZED_NAME_CREATE_BACKUPS)
  private Boolean createBackups;

  public static final String SERIALIZED_NAME_BACKUP_APPLIANCE = "backupAppliance";
  @SerializedName(SERIALIZED_NAME_BACKUP_APPLIANCE)
  private Boolean backupAppliance;

  public static final String SERIALIZED_NAME_UPDATE_EXISTING = "updateExisting";
  @SerializedName(SERIALIZED_NAME_UPDATE_EXISTING)
  private Boolean updateExisting;

  public static final String SERIALIZED_NAME_DEFAULT_SCHEDULE = "defaultSchedule";
  @SerializedName(SERIALIZED_NAME_DEFAULT_SCHEDULE)
  private BackupSettingsUpdateDefaultSchedule defaultSchedule;

  public static final String SERIALIZED_NAME_CLEAR_DEFAULT_SCHEDULE = "clearDefaultSchedule";
  @SerializedName(SERIALIZED_NAME_CLEAR_DEFAULT_SCHEDULE)
  private Boolean clearDefaultSchedule;

  public static final String SERIALIZED_NAME_DEFAULT_STORAGE_BUCKET = "defaultStorageBucket";
  @SerializedName(SERIALIZED_NAME_DEFAULT_STORAGE_BUCKET)
  private BackupSettingsUpdateDefaultStorageBucket defaultStorageBucket;

  public static final String SERIALIZED_NAME_CLEAR_DEFAULT_STORAGE_BUCKET = "clearDefaultStorageBucket";
  @SerializedName(SERIALIZED_NAME_CLEAR_DEFAULT_STORAGE_BUCKET)
  private Boolean clearDefaultStorageBucket;


  public BackupSettingsUpdate backupsEnabled(Boolean backupsEnabled) {
    
    this.backupsEnabled = backupsEnabled;
    return this;
  }

   /**
   * Use this to enable / disable scheduled backups
   * @return backupsEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Use this to enable / disable scheduled backups")

  public Boolean getBackupsEnabled() {
    return backupsEnabled;
  }


  public void setBackupsEnabled(Boolean backupsEnabled) {
    this.backupsEnabled = backupsEnabled;
  }


  public BackupSettingsUpdate retentionCount(Long retentionCount) {
    
    this.retentionCount = retentionCount;
    return this;
  }

   /**
   * Maximum number of successful backups to retain
   * @return retentionCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Maximum number of successful backups to retain")

  public Long getRetentionCount() {
    return retentionCount;
  }


  public void setRetentionCount(Long retentionCount) {
    this.retentionCount = retentionCount;
  }


  public BackupSettingsUpdate createBackups(Boolean createBackups) {
    
    this.createBackups = createBackups;
    return this;
  }

   /**
   * Use this to enable / disable create backups
   * @return createBackups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Use this to enable / disable create backups")

  public Boolean getCreateBackups() {
    return createBackups;
  }


  public void setCreateBackups(Boolean createBackups) {
    this.createBackups = createBackups;
  }


  public BackupSettingsUpdate backupAppliance(Boolean backupAppliance) {
    
    this.backupAppliance = backupAppliance;
    return this;
  }

   /**
   * When enabled, a Backup will be created to backup the Morpheus appliance database
   * @return backupAppliance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When enabled, a Backup will be created to backup the Morpheus appliance database")

  public Boolean getBackupAppliance() {
    return backupAppliance;
  }


  public void setBackupAppliance(Boolean backupAppliance) {
    this.backupAppliance = backupAppliance;
  }


  public BackupSettingsUpdate updateExisting(Boolean updateExisting) {
    
    this.updateExisting = updateExisting;
    return this;
  }

   /**
   * Use this to update existing backups with new settings
   * @return updateExisting
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Use this to update existing backups with new settings")

  public Boolean getUpdateExisting() {
    return updateExisting;
  }


  public void setUpdateExisting(Boolean updateExisting) {
    this.updateExisting = updateExisting;
  }


  public BackupSettingsUpdate defaultSchedule(BackupSettingsUpdateDefaultSchedule defaultSchedule) {
    
    this.defaultSchedule = defaultSchedule;
    return this;
  }

   /**
   * Get defaultSchedule
   * @return defaultSchedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BackupSettingsUpdateDefaultSchedule getDefaultSchedule() {
    return defaultSchedule;
  }


  public void setDefaultSchedule(BackupSettingsUpdateDefaultSchedule defaultSchedule) {
    this.defaultSchedule = defaultSchedule;
  }


  public BackupSettingsUpdate clearDefaultSchedule(Boolean clearDefaultSchedule) {
    
    this.clearDefaultSchedule = clearDefaultSchedule;
    return this;
  }

   /**
   * Use this to clear existing default backup schedule
   * @return clearDefaultSchedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Use this to clear existing default backup schedule")

  public Boolean getClearDefaultSchedule() {
    return clearDefaultSchedule;
  }


  public void setClearDefaultSchedule(Boolean clearDefaultSchedule) {
    this.clearDefaultSchedule = clearDefaultSchedule;
  }


  public BackupSettingsUpdate defaultStorageBucket(BackupSettingsUpdateDefaultStorageBucket defaultStorageBucket) {
    
    this.defaultStorageBucket = defaultStorageBucket;
    return this;
  }

   /**
   * Get defaultStorageBucket
   * @return defaultStorageBucket
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BackupSettingsUpdateDefaultStorageBucket getDefaultStorageBucket() {
    return defaultStorageBucket;
  }


  public void setDefaultStorageBucket(BackupSettingsUpdateDefaultStorageBucket defaultStorageBucket) {
    this.defaultStorageBucket = defaultStorageBucket;
  }


  public BackupSettingsUpdate clearDefaultStorageBucket(Boolean clearDefaultStorageBucket) {
    
    this.clearDefaultStorageBucket = clearDefaultStorageBucket;
    return this;
  }

   /**
   * Use this to clear default store bucket
   * @return clearDefaultStorageBucket
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Use this to clear default store bucket")

  public Boolean getClearDefaultStorageBucket() {
    return clearDefaultStorageBucket;
  }


  public void setClearDefaultStorageBucket(Boolean clearDefaultStorageBucket) {
    this.clearDefaultStorageBucket = clearDefaultStorageBucket;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BackupSettingsUpdate backupSettingsUpdate = (BackupSettingsUpdate) o;
    return Objects.equals(this.backupsEnabled, backupSettingsUpdate.backupsEnabled) &&
        Objects.equals(this.retentionCount, backupSettingsUpdate.retentionCount) &&
        Objects.equals(this.createBackups, backupSettingsUpdate.createBackups) &&
        Objects.equals(this.backupAppliance, backupSettingsUpdate.backupAppliance) &&
        Objects.equals(this.updateExisting, backupSettingsUpdate.updateExisting) &&
        Objects.equals(this.defaultSchedule, backupSettingsUpdate.defaultSchedule) &&
        Objects.equals(this.clearDefaultSchedule, backupSettingsUpdate.clearDefaultSchedule) &&
        Objects.equals(this.defaultStorageBucket, backupSettingsUpdate.defaultStorageBucket) &&
        Objects.equals(this.clearDefaultStorageBucket, backupSettingsUpdate.clearDefaultStorageBucket);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupsEnabled, retentionCount, createBackups, backupAppliance, updateExisting, defaultSchedule, clearDefaultSchedule, defaultStorageBucket, clearDefaultStorageBucket);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BackupSettingsUpdate {\n");
    sb.append("    backupsEnabled: ").append(toIndentedString(backupsEnabled)).append("\n");
    sb.append("    retentionCount: ").append(toIndentedString(retentionCount)).append("\n");
    sb.append("    createBackups: ").append(toIndentedString(createBackups)).append("\n");
    sb.append("    backupAppliance: ").append(toIndentedString(backupAppliance)).append("\n");
    sb.append("    updateExisting: ").append(toIndentedString(updateExisting)).append("\n");
    sb.append("    defaultSchedule: ").append(toIndentedString(defaultSchedule)).append("\n");
    sb.append("    clearDefaultSchedule: ").append(toIndentedString(clearDefaultSchedule)).append("\n");
    sb.append("    defaultStorageBucket: ").append(toIndentedString(defaultStorageBucket)).append("\n");
    sb.append("    clearDefaultStorageBucket: ").append(toIndentedString(clearDefaultStorageBucket)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

