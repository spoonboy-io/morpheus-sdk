/*
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ApplianceSettingsUpdate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-21T11:26:47.028Z[GMT]")
public class ApplianceSettingsUpdate {
  public static final String SERIALIZED_NAME_APPLIANCE_URL = "applianceUrl";
  @SerializedName(SERIALIZED_NAME_APPLIANCE_URL)
  private String applianceUrl;

  public static final String SERIALIZED_NAME_INTERNAL_APPLIANCE_URL = "internalApplianceUrl";
  @SerializedName(SERIALIZED_NAME_INTERNAL_APPLIANCE_URL)
  private String internalApplianceUrl;

  public static final String SERIALIZED_NAME_CORS_ALLOWED = "corsAllowed";
  @SerializedName(SERIALIZED_NAME_CORS_ALLOWED)
  private String corsAllowed;

  public static final String SERIALIZED_NAME_REGISTRATION_ENABLED = "registrationEnabled";
  @SerializedName(SERIALIZED_NAME_REGISTRATION_ENABLED)
  private Boolean registrationEnabled;

  public static final String SERIALIZED_NAME_DEFAULT_ROLE_ID = "defaultRoleId";
  @SerializedName(SERIALIZED_NAME_DEFAULT_ROLE_ID)
  private Long defaultRoleId;

  public static final String SERIALIZED_NAME_DEFAULT_USER_ROLE_ID = "defaultUserRoleId";
  @SerializedName(SERIALIZED_NAME_DEFAULT_USER_ROLE_ID)
  private Long defaultUserRoleId;

  public static final String SERIALIZED_NAME_DOCKER_PRIVILEGED_MODE = "dockerPrivilegedMode";
  @SerializedName(SERIALIZED_NAME_DOCKER_PRIVILEGED_MODE)
  private Boolean dockerPrivilegedMode;

  public static final String SERIALIZED_NAME_PASSWORD_MIN_LENGTH = "passwordMinLength";
  @SerializedName(SERIALIZED_NAME_PASSWORD_MIN_LENGTH)
  private String passwordMinLength;

  public static final String SERIALIZED_NAME_PASSWORD_MIN_UPPER_CASE = "passwordMinUpperCase";
  @SerializedName(SERIALIZED_NAME_PASSWORD_MIN_UPPER_CASE)
  private String passwordMinUpperCase;

  public static final String SERIALIZED_NAME_PASSWORD_MIN_NUMBERS = "passwordMinNumbers";
  @SerializedName(SERIALIZED_NAME_PASSWORD_MIN_NUMBERS)
  private String passwordMinNumbers;

  public static final String SERIALIZED_NAME_PASSWORD_MIN_SYMBOLS = "passwordMinSymbols";
  @SerializedName(SERIALIZED_NAME_PASSWORD_MIN_SYMBOLS)
  private String passwordMinSymbols;

  public static final String SERIALIZED_NAME_USER_BROWSER_SESSION_TIMEOUT = "userBrowserSessionTimeout";
  @SerializedName(SERIALIZED_NAME_USER_BROWSER_SESSION_TIMEOUT)
  private String userBrowserSessionTimeout;

  public static final String SERIALIZED_NAME_USER_BROWSER_SESSION_WARNING = "userBrowserSessionWarning";
  @SerializedName(SERIALIZED_NAME_USER_BROWSER_SESSION_WARNING)
  private String userBrowserSessionWarning;

  public static final String SERIALIZED_NAME_EXPIRE_PWD_DAYS = "expirePwdDays";
  @SerializedName(SERIALIZED_NAME_EXPIRE_PWD_DAYS)
  private Long expirePwdDays;

  public static final String SERIALIZED_NAME_DISABLE_AFTER_ATTEMPTS = "disableAfterAttempts";
  @SerializedName(SERIALIZED_NAME_DISABLE_AFTER_ATTEMPTS)
  private Long disableAfterAttempts;

  public static final String SERIALIZED_NAME_DISABLE_AFTER_DAYS_INACTIVE = "disableAfterDaysInactive";
  @SerializedName(SERIALIZED_NAME_DISABLE_AFTER_DAYS_INACTIVE)
  private Long disableAfterDaysInactive;

  public static final String SERIALIZED_NAME_WARN_USER_DAYS_BEFORE = "warnUserDaysBefore";
  @SerializedName(SERIALIZED_NAME_WARN_USER_DAYS_BEFORE)
  private Long warnUserDaysBefore;

  public static final String SERIALIZED_NAME_SMTP_MAIL_FROM = "smtpMailFrom";
  @SerializedName(SERIALIZED_NAME_SMTP_MAIL_FROM)
  private String smtpMailFrom;

  public static final String SERIALIZED_NAME_SMTP_SERVER = "smtpServer";
  @SerializedName(SERIALIZED_NAME_SMTP_SERVER)
  private String smtpServer;

  public static final String SERIALIZED_NAME_SMTP_PORT = "smtpPort";
  @SerializedName(SERIALIZED_NAME_SMTP_PORT)
  private Long smtpPort;

  public static final String SERIALIZED_NAME_SMTP_S_S_L = "smtpSSL";
  @SerializedName(SERIALIZED_NAME_SMTP_S_S_L)
  private Boolean smtpSSL;

  public static final String SERIALIZED_NAME_SMTP_T_L_S = "smtpTLS";
  @SerializedName(SERIALIZED_NAME_SMTP_T_L_S)
  private Boolean smtpTLS;

  public static final String SERIALIZED_NAME_SMTP_USER = "smtpUser";
  @SerializedName(SERIALIZED_NAME_SMTP_USER)
  private String smtpUser;

  public static final String SERIALIZED_NAME_SMTP_PASSWORD = "smtpPassword";
  @SerializedName(SERIALIZED_NAME_SMTP_PASSWORD)
  private String smtpPassword;

  public static final String SERIALIZED_NAME_PROXY_HOST = "proxyHost";
  @SerializedName(SERIALIZED_NAME_PROXY_HOST)
  private String proxyHost;

  public static final String SERIALIZED_NAME_PROXY_PORT = "proxyPort";
  @SerializedName(SERIALIZED_NAME_PROXY_PORT)
  private String proxyPort;

  public static final String SERIALIZED_NAME_PROXY_USER = "proxyUser";
  @SerializedName(SERIALIZED_NAME_PROXY_USER)
  private String proxyUser;

  public static final String SERIALIZED_NAME_PROXY_PASSWORD = "proxyPassword";
  @SerializedName(SERIALIZED_NAME_PROXY_PASSWORD)
  private String proxyPassword;

  public static final String SERIALIZED_NAME_PROXY_DOMAIN = "proxyDomain";
  @SerializedName(SERIALIZED_NAME_PROXY_DOMAIN)
  private String proxyDomain;

  public static final String SERIALIZED_NAME_PROXY_WORKSTATION = "proxyWorkstation";
  @SerializedName(SERIALIZED_NAME_PROXY_WORKSTATION)
  private String proxyWorkstation;

  public static final String SERIALIZED_NAME_CURRENCY_PROVIDER = "currencyProvider";
  @SerializedName(SERIALIZED_NAME_CURRENCY_PROVIDER)
  private String currencyProvider;

  public static final String SERIALIZED_NAME_CURRENCY_KEY = "currencyKey";
  @SerializedName(SERIALIZED_NAME_CURRENCY_KEY)
  private String currencyKey;

  public static final String SERIALIZED_NAME_ENABLE_ALL_ZONE_TYPES = "enableAllZoneTypes";
  @SerializedName(SERIALIZED_NAME_ENABLE_ALL_ZONE_TYPES)
  private Boolean enableAllZoneTypes;

  public static final String SERIALIZED_NAME_ENABLE_ZONE_TYPES = "enableZoneTypes";
  @SerializedName(SERIALIZED_NAME_ENABLE_ZONE_TYPES)
  private List<Long> enableZoneTypes = null;

  public static final String SERIALIZED_NAME_DISABLE_ZONE_TYPES = "disableZoneTypes";
  @SerializedName(SERIALIZED_NAME_DISABLE_ZONE_TYPES)
  private List<Long> disableZoneTypes = null;

  public static final String SERIALIZED_NAME_DISABLE_ALL_ZONE_TYPES = "disableAllZoneTypes";
  @SerializedName(SERIALIZED_NAME_DISABLE_ALL_ZONE_TYPES)
  private Boolean disableAllZoneTypes;


  public ApplianceSettingsUpdate applianceUrl(String applianceUrl) {
    
    this.applianceUrl = applianceUrl;
    return this;
  }

   /**
   * Appliance URL
   * @return applianceUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Appliance URL")

  public String getApplianceUrl() {
    return applianceUrl;
  }


  public void setApplianceUrl(String applianceUrl) {
    this.applianceUrl = applianceUrl;
  }


  public ApplianceSettingsUpdate internalApplianceUrl(String internalApplianceUrl) {
    
    this.internalApplianceUrl = internalApplianceUrl;
    return this;
  }

   /**
   * Internal Appliance URL (PXE)
   * @return internalApplianceUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Internal Appliance URL (PXE)")

  public String getInternalApplianceUrl() {
    return internalApplianceUrl;
  }


  public void setInternalApplianceUrl(String internalApplianceUrl) {
    this.internalApplianceUrl = internalApplianceUrl;
  }


  public ApplianceSettingsUpdate corsAllowed(String corsAllowed) {
    
    this.corsAllowed = corsAllowed;
    return this;
  }

   /**
   * API Allowed Origins
   * @return corsAllowed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "API Allowed Origins")

  public String getCorsAllowed() {
    return corsAllowed;
  }


  public void setCorsAllowed(String corsAllowed) {
    this.corsAllowed = corsAllowed;
  }


  public ApplianceSettingsUpdate registrationEnabled(Boolean registrationEnabled) {
    
    this.registrationEnabled = registrationEnabled;
    return this;
  }

   /**
   * Registration enabled (true, false)
   * @return registrationEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Registration enabled (true, false)")

  public Boolean getRegistrationEnabled() {
    return registrationEnabled;
  }


  public void setRegistrationEnabled(Boolean registrationEnabled) {
    this.registrationEnabled = registrationEnabled;
  }


  public ApplianceSettingsUpdate defaultRoleId(Long defaultRoleId) {
    
    this.defaultRoleId = defaultRoleId;
    return this;
  }

   /**
   * Default tenant role ID
   * @return defaultRoleId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Default tenant role ID")

  public Long getDefaultRoleId() {
    return defaultRoleId;
  }


  public void setDefaultRoleId(Long defaultRoleId) {
    this.defaultRoleId = defaultRoleId;
  }


  public ApplianceSettingsUpdate defaultUserRoleId(Long defaultUserRoleId) {
    
    this.defaultUserRoleId = defaultUserRoleId;
    return this;
  }

   /**
   * Default user role ID
   * @return defaultUserRoleId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Default user role ID")

  public Long getDefaultUserRoleId() {
    return defaultUserRoleId;
  }


  public void setDefaultUserRoleId(Long defaultUserRoleId) {
    this.defaultUserRoleId = defaultUserRoleId;
  }


  public ApplianceSettingsUpdate dockerPrivilegedMode(Boolean dockerPrivilegedMode) {
    
    this.dockerPrivilegedMode = dockerPrivilegedMode;
    return this;
  }

   /**
   * Docker privileged mode (true, false)
   * @return dockerPrivilegedMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Docker privileged mode (true, false)")

  public Boolean getDockerPrivilegedMode() {
    return dockerPrivilegedMode;
  }


  public void setDockerPrivilegedMode(Boolean dockerPrivilegedMode) {
    this.dockerPrivilegedMode = dockerPrivilegedMode;
  }


  public ApplianceSettingsUpdate passwordMinLength(String passwordMinLength) {
    
    this.passwordMinLength = passwordMinLength;
    return this;
  }

   /**
   * Min Password Length
   * @return passwordMinLength
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Min Password Length")

  public String getPasswordMinLength() {
    return passwordMinLength;
  }


  public void setPasswordMinLength(String passwordMinLength) {
    this.passwordMinLength = passwordMinLength;
  }


  public ApplianceSettingsUpdate passwordMinUpperCase(String passwordMinUpperCase) {
    
    this.passwordMinUpperCase = passwordMinUpperCase;
    return this;
  }

   /**
   * Min Password Uppercase
   * @return passwordMinUpperCase
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Min Password Uppercase")

  public String getPasswordMinUpperCase() {
    return passwordMinUpperCase;
  }


  public void setPasswordMinUpperCase(String passwordMinUpperCase) {
    this.passwordMinUpperCase = passwordMinUpperCase;
  }


  public ApplianceSettingsUpdate passwordMinNumbers(String passwordMinNumbers) {
    
    this.passwordMinNumbers = passwordMinNumbers;
    return this;
  }

   /**
   * Min Password Numbers
   * @return passwordMinNumbers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Min Password Numbers")

  public String getPasswordMinNumbers() {
    return passwordMinNumbers;
  }


  public void setPasswordMinNumbers(String passwordMinNumbers) {
    this.passwordMinNumbers = passwordMinNumbers;
  }


  public ApplianceSettingsUpdate passwordMinSymbols(String passwordMinSymbols) {
    
    this.passwordMinSymbols = passwordMinSymbols;
    return this;
  }

   /**
   * Min Password Symbols
   * @return passwordMinSymbols
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Min Password Symbols")

  public String getPasswordMinSymbols() {
    return passwordMinSymbols;
  }


  public void setPasswordMinSymbols(String passwordMinSymbols) {
    this.passwordMinSymbols = passwordMinSymbols;
  }


  public ApplianceSettingsUpdate userBrowserSessionTimeout(String userBrowserSessionTimeout) {
    
    this.userBrowserSessionTimeout = userBrowserSessionTimeout;
    return this;
  }

   /**
   * User Browser Session Timeout (Minutes)
   * @return userBrowserSessionTimeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User Browser Session Timeout (Minutes)")

  public String getUserBrowserSessionTimeout() {
    return userBrowserSessionTimeout;
  }


  public void setUserBrowserSessionTimeout(String userBrowserSessionTimeout) {
    this.userBrowserSessionTimeout = userBrowserSessionTimeout;
  }


  public ApplianceSettingsUpdate userBrowserSessionWarning(String userBrowserSessionWarning) {
    
    this.userBrowserSessionWarning = userBrowserSessionWarning;
    return this;
  }

   /**
   * User Browser Session Warning (Minutes)
   * @return userBrowserSessionWarning
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User Browser Session Warning (Minutes)")

  public String getUserBrowserSessionWarning() {
    return userBrowserSessionWarning;
  }


  public void setUserBrowserSessionWarning(String userBrowserSessionWarning) {
    this.userBrowserSessionWarning = userBrowserSessionWarning;
  }


  public ApplianceSettingsUpdate expirePwdDays(Long expirePwdDays) {
    
    this.expirePwdDays = expirePwdDays;
    return this;
  }

   /**
   * Expire password after days. Setting to 0 disabled this feature
   * @return expirePwdDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Expire password after days. Setting to 0 disabled this feature")

  public Long getExpirePwdDays() {
    return expirePwdDays;
  }


  public void setExpirePwdDays(Long expirePwdDays) {
    this.expirePwdDays = expirePwdDays;
  }


  public ApplianceSettingsUpdate disableAfterAttempts(Long disableAfterAttempts) {
    
    this.disableAfterAttempts = disableAfterAttempts;
    return this;
  }

   /**
   * Disable user after number of attempts. Set to 0 to disable this feature
   * @return disableAfterAttempts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Disable user after number of attempts. Set to 0 to disable this feature")

  public Long getDisableAfterAttempts() {
    return disableAfterAttempts;
  }


  public void setDisableAfterAttempts(Long disableAfterAttempts) {
    this.disableAfterAttempts = disableAfterAttempts;
  }


  public ApplianceSettingsUpdate disableAfterDaysInactive(Long disableAfterDaysInactive) {
    
    this.disableAfterDaysInactive = disableAfterDaysInactive;
    return this;
  }

   /**
   * Disable user if inactive for specified days. Set to 0 to disable this feature
   * @return disableAfterDaysInactive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Disable user if inactive for specified days. Set to 0 to disable this feature")

  public Long getDisableAfterDaysInactive() {
    return disableAfterDaysInactive;
  }


  public void setDisableAfterDaysInactive(Long disableAfterDaysInactive) {
    this.disableAfterDaysInactive = disableAfterDaysInactive;
  }


  public ApplianceSettingsUpdate warnUserDaysBefore(Long warnUserDaysBefore) {
    
    this.warnUserDaysBefore = warnUserDaysBefore;
    return this;
  }

   /**
   * Send warning email number of days in advance before deactivating. Set to 0 to disable this feature
   * @return warnUserDaysBefore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Send warning email number of days in advance before deactivating. Set to 0 to disable this feature")

  public Long getWarnUserDaysBefore() {
    return warnUserDaysBefore;
  }


  public void setWarnUserDaysBefore(Long warnUserDaysBefore) {
    this.warnUserDaysBefore = warnUserDaysBefore;
  }


  public ApplianceSettingsUpdate smtpMailFrom(String smtpMailFrom) {
    
    this.smtpMailFrom = smtpMailFrom;
    return this;
  }

   /**
   * From email address
   * @return smtpMailFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "From email address")

  public String getSmtpMailFrom() {
    return smtpMailFrom;
  }


  public void setSmtpMailFrom(String smtpMailFrom) {
    this.smtpMailFrom = smtpMailFrom;
  }


  public ApplianceSettingsUpdate smtpServer(String smtpServer) {
    
    this.smtpServer = smtpServer;
    return this;
  }

   /**
   * SMTP server / host
   * @return smtpServer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "SMTP server / host")

  public String getSmtpServer() {
    return smtpServer;
  }


  public void setSmtpServer(String smtpServer) {
    this.smtpServer = smtpServer;
  }


  public ApplianceSettingsUpdate smtpPort(Long smtpPort) {
    
    this.smtpPort = smtpPort;
    return this;
  }

   /**
   * SMTP port
   * @return smtpPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "SMTP port")

  public Long getSmtpPort() {
    return smtpPort;
  }


  public void setSmtpPort(Long smtpPort) {
    this.smtpPort = smtpPort;
  }


  public ApplianceSettingsUpdate smtpSSL(Boolean smtpSSL) {
    
    this.smtpSSL = smtpSSL;
    return this;
  }

   /**
   * Use SSL for SMTP connection
   * @return smtpSSL
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Use SSL for SMTP connection")

  public Boolean getSmtpSSL() {
    return smtpSSL;
  }


  public void setSmtpSSL(Boolean smtpSSL) {
    this.smtpSSL = smtpSSL;
  }


  public ApplianceSettingsUpdate smtpTLS(Boolean smtpTLS) {
    
    this.smtpTLS = smtpTLS;
    return this;
  }

   /**
   * Use TLS for SMTP connections
   * @return smtpTLS
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Use TLS for SMTP connections")

  public Boolean getSmtpTLS() {
    return smtpTLS;
  }


  public void setSmtpTLS(Boolean smtpTLS) {
    this.smtpTLS = smtpTLS;
  }


  public ApplianceSettingsUpdate smtpUser(String smtpUser) {
    
    this.smtpUser = smtpUser;
    return this;
  }

   /**
   * SMTP username
   * @return smtpUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "SMTP username")

  public String getSmtpUser() {
    return smtpUser;
  }


  public void setSmtpUser(String smtpUser) {
    this.smtpUser = smtpUser;
  }


  public ApplianceSettingsUpdate smtpPassword(String smtpPassword) {
    
    this.smtpPassword = smtpPassword;
    return this;
  }

   /**
   * SMTP password
   * @return smtpPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "SMTP password")

  public String getSmtpPassword() {
    return smtpPassword;
  }


  public void setSmtpPassword(String smtpPassword) {
    this.smtpPassword = smtpPassword;
  }


  public ApplianceSettingsUpdate proxyHost(String proxyHost) {
    
    this.proxyHost = proxyHost;
    return this;
  }

   /**
   * Proxy host
   * @return proxyHost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Proxy host")

  public String getProxyHost() {
    return proxyHost;
  }


  public void setProxyHost(String proxyHost) {
    this.proxyHost = proxyHost;
  }


  public ApplianceSettingsUpdate proxyPort(String proxyPort) {
    
    this.proxyPort = proxyPort;
    return this;
  }

   /**
   * Proxy port
   * @return proxyPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Proxy port")

  public String getProxyPort() {
    return proxyPort;
  }


  public void setProxyPort(String proxyPort) {
    this.proxyPort = proxyPort;
  }


  public ApplianceSettingsUpdate proxyUser(String proxyUser) {
    
    this.proxyUser = proxyUser;
    return this;
  }

   /**
   * Proxy username
   * @return proxyUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Proxy username")

  public String getProxyUser() {
    return proxyUser;
  }


  public void setProxyUser(String proxyUser) {
    this.proxyUser = proxyUser;
  }


  public ApplianceSettingsUpdate proxyPassword(String proxyPassword) {
    
    this.proxyPassword = proxyPassword;
    return this;
  }

   /**
   * Proxy password
   * @return proxyPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Proxy password")

  public String getProxyPassword() {
    return proxyPassword;
  }


  public void setProxyPassword(String proxyPassword) {
    this.proxyPassword = proxyPassword;
  }


  public ApplianceSettingsUpdate proxyDomain(String proxyDomain) {
    
    this.proxyDomain = proxyDomain;
    return this;
  }

   /**
   * Proxy domain
   * @return proxyDomain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Proxy domain")

  public String getProxyDomain() {
    return proxyDomain;
  }


  public void setProxyDomain(String proxyDomain) {
    this.proxyDomain = proxyDomain;
  }


  public ApplianceSettingsUpdate proxyWorkstation(String proxyWorkstation) {
    
    this.proxyWorkstation = proxyWorkstation;
    return this;
  }

   /**
   * Proxy workstation
   * @return proxyWorkstation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Proxy workstation")

  public String getProxyWorkstation() {
    return proxyWorkstation;
  }


  public void setProxyWorkstation(String proxyWorkstation) {
    this.proxyWorkstation = proxyWorkstation;
  }


  public ApplianceSettingsUpdate currencyProvider(String currencyProvider) {
    
    this.currencyProvider = currencyProvider;
    return this;
  }

   /**
   * Currency provider
   * @return currencyProvider
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Currency provider")

  public String getCurrencyProvider() {
    return currencyProvider;
  }


  public void setCurrencyProvider(String currencyProvider) {
    this.currencyProvider = currencyProvider;
  }


  public ApplianceSettingsUpdate currencyKey(String currencyKey) {
    
    this.currencyKey = currencyKey;
    return this;
  }

   /**
   * Currency provider API key
   * @return currencyKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Currency provider API key")

  public String getCurrencyKey() {
    return currencyKey;
  }


  public void setCurrencyKey(String currencyKey) {
    this.currencyKey = currencyKey;
  }


  public ApplianceSettingsUpdate enableAllZoneTypes(Boolean enableAllZoneTypes) {
    
    this.enableAllZoneTypes = enableAllZoneTypes;
    return this;
  }

   /**
   * Set all cloud types enabled status on, overrides enableZoneTypes and disableZoneTypes parameters
   * @return enableAllZoneTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set all cloud types enabled status on, overrides enableZoneTypes and disableZoneTypes parameters")

  public Boolean getEnableAllZoneTypes() {
    return enableAllZoneTypes;
  }


  public void setEnableAllZoneTypes(Boolean enableAllZoneTypes) {
    this.enableAllZoneTypes = enableAllZoneTypes;
  }


  public ApplianceSettingsUpdate enableZoneTypes(List<Long> enableZoneTypes) {
    
    this.enableZoneTypes = enableZoneTypes;
    return this;
  }

  public ApplianceSettingsUpdate addEnableZoneTypesItem(Long enableZoneTypesItem) {
    if (this.enableZoneTypes == null) {
      this.enableZoneTypes = new ArrayList<Long>();
    }
    this.enableZoneTypes.add(enableZoneTypesItem);
    return this;
  }

   /**
   * List of cloud type IDs to set enabled status on
   * @return enableZoneTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of cloud type IDs to set enabled status on")

  public List<Long> getEnableZoneTypes() {
    return enableZoneTypes;
  }


  public void setEnableZoneTypes(List<Long> enableZoneTypes) {
    this.enableZoneTypes = enableZoneTypes;
  }


  public ApplianceSettingsUpdate disableZoneTypes(List<Long> disableZoneTypes) {
    
    this.disableZoneTypes = disableZoneTypes;
    return this;
  }

  public ApplianceSettingsUpdate addDisableZoneTypesItem(Long disableZoneTypesItem) {
    if (this.disableZoneTypes == null) {
      this.disableZoneTypes = new ArrayList<Long>();
    }
    this.disableZoneTypes.add(disableZoneTypesItem);
    return this;
  }

   /**
   * List of cloud type IDs to set enabled status off
   * @return disableZoneTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of cloud type IDs to set enabled status off")

  public List<Long> getDisableZoneTypes() {
    return disableZoneTypes;
  }


  public void setDisableZoneTypes(List<Long> disableZoneTypes) {
    this.disableZoneTypes = disableZoneTypes;
  }


  public ApplianceSettingsUpdate disableAllZoneTypes(Boolean disableAllZoneTypes) {
    
    this.disableAllZoneTypes = disableAllZoneTypes;
    return this;
  }

   /**
   * Set all cloud types enabled status off, can be used in conjunction with enableZoneTypes
   * @return disableAllZoneTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set all cloud types enabled status off, can be used in conjunction with enableZoneTypes")

  public Boolean getDisableAllZoneTypes() {
    return disableAllZoneTypes;
  }


  public void setDisableAllZoneTypes(Boolean disableAllZoneTypes) {
    this.disableAllZoneTypes = disableAllZoneTypes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplianceSettingsUpdate applianceSettingsUpdate = (ApplianceSettingsUpdate) o;
    return Objects.equals(this.applianceUrl, applianceSettingsUpdate.applianceUrl) &&
        Objects.equals(this.internalApplianceUrl, applianceSettingsUpdate.internalApplianceUrl) &&
        Objects.equals(this.corsAllowed, applianceSettingsUpdate.corsAllowed) &&
        Objects.equals(this.registrationEnabled, applianceSettingsUpdate.registrationEnabled) &&
        Objects.equals(this.defaultRoleId, applianceSettingsUpdate.defaultRoleId) &&
        Objects.equals(this.defaultUserRoleId, applianceSettingsUpdate.defaultUserRoleId) &&
        Objects.equals(this.dockerPrivilegedMode, applianceSettingsUpdate.dockerPrivilegedMode) &&
        Objects.equals(this.passwordMinLength, applianceSettingsUpdate.passwordMinLength) &&
        Objects.equals(this.passwordMinUpperCase, applianceSettingsUpdate.passwordMinUpperCase) &&
        Objects.equals(this.passwordMinNumbers, applianceSettingsUpdate.passwordMinNumbers) &&
        Objects.equals(this.passwordMinSymbols, applianceSettingsUpdate.passwordMinSymbols) &&
        Objects.equals(this.userBrowserSessionTimeout, applianceSettingsUpdate.userBrowserSessionTimeout) &&
        Objects.equals(this.userBrowserSessionWarning, applianceSettingsUpdate.userBrowserSessionWarning) &&
        Objects.equals(this.expirePwdDays, applianceSettingsUpdate.expirePwdDays) &&
        Objects.equals(this.disableAfterAttempts, applianceSettingsUpdate.disableAfterAttempts) &&
        Objects.equals(this.disableAfterDaysInactive, applianceSettingsUpdate.disableAfterDaysInactive) &&
        Objects.equals(this.warnUserDaysBefore, applianceSettingsUpdate.warnUserDaysBefore) &&
        Objects.equals(this.smtpMailFrom, applianceSettingsUpdate.smtpMailFrom) &&
        Objects.equals(this.smtpServer, applianceSettingsUpdate.smtpServer) &&
        Objects.equals(this.smtpPort, applianceSettingsUpdate.smtpPort) &&
        Objects.equals(this.smtpSSL, applianceSettingsUpdate.smtpSSL) &&
        Objects.equals(this.smtpTLS, applianceSettingsUpdate.smtpTLS) &&
        Objects.equals(this.smtpUser, applianceSettingsUpdate.smtpUser) &&
        Objects.equals(this.smtpPassword, applianceSettingsUpdate.smtpPassword) &&
        Objects.equals(this.proxyHost, applianceSettingsUpdate.proxyHost) &&
        Objects.equals(this.proxyPort, applianceSettingsUpdate.proxyPort) &&
        Objects.equals(this.proxyUser, applianceSettingsUpdate.proxyUser) &&
        Objects.equals(this.proxyPassword, applianceSettingsUpdate.proxyPassword) &&
        Objects.equals(this.proxyDomain, applianceSettingsUpdate.proxyDomain) &&
        Objects.equals(this.proxyWorkstation, applianceSettingsUpdate.proxyWorkstation) &&
        Objects.equals(this.currencyProvider, applianceSettingsUpdate.currencyProvider) &&
        Objects.equals(this.currencyKey, applianceSettingsUpdate.currencyKey) &&
        Objects.equals(this.enableAllZoneTypes, applianceSettingsUpdate.enableAllZoneTypes) &&
        Objects.equals(this.enableZoneTypes, applianceSettingsUpdate.enableZoneTypes) &&
        Objects.equals(this.disableZoneTypes, applianceSettingsUpdate.disableZoneTypes) &&
        Objects.equals(this.disableAllZoneTypes, applianceSettingsUpdate.disableAllZoneTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applianceUrl, internalApplianceUrl, corsAllowed, registrationEnabled, defaultRoleId, defaultUserRoleId, dockerPrivilegedMode, passwordMinLength, passwordMinUpperCase, passwordMinNumbers, passwordMinSymbols, userBrowserSessionTimeout, userBrowserSessionWarning, expirePwdDays, disableAfterAttempts, disableAfterDaysInactive, warnUserDaysBefore, smtpMailFrom, smtpServer, smtpPort, smtpSSL, smtpTLS, smtpUser, smtpPassword, proxyHost, proxyPort, proxyUser, proxyPassword, proxyDomain, proxyWorkstation, currencyProvider, currencyKey, enableAllZoneTypes, enableZoneTypes, disableZoneTypes, disableAllZoneTypes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplianceSettingsUpdate {\n");
    sb.append("    applianceUrl: ").append(toIndentedString(applianceUrl)).append("\n");
    sb.append("    internalApplianceUrl: ").append(toIndentedString(internalApplianceUrl)).append("\n");
    sb.append("    corsAllowed: ").append(toIndentedString(corsAllowed)).append("\n");
    sb.append("    registrationEnabled: ").append(toIndentedString(registrationEnabled)).append("\n");
    sb.append("    defaultRoleId: ").append(toIndentedString(defaultRoleId)).append("\n");
    sb.append("    defaultUserRoleId: ").append(toIndentedString(defaultUserRoleId)).append("\n");
    sb.append("    dockerPrivilegedMode: ").append(toIndentedString(dockerPrivilegedMode)).append("\n");
    sb.append("    passwordMinLength: ").append(toIndentedString(passwordMinLength)).append("\n");
    sb.append("    passwordMinUpperCase: ").append(toIndentedString(passwordMinUpperCase)).append("\n");
    sb.append("    passwordMinNumbers: ").append(toIndentedString(passwordMinNumbers)).append("\n");
    sb.append("    passwordMinSymbols: ").append(toIndentedString(passwordMinSymbols)).append("\n");
    sb.append("    userBrowserSessionTimeout: ").append(toIndentedString(userBrowserSessionTimeout)).append("\n");
    sb.append("    userBrowserSessionWarning: ").append(toIndentedString(userBrowserSessionWarning)).append("\n");
    sb.append("    expirePwdDays: ").append(toIndentedString(expirePwdDays)).append("\n");
    sb.append("    disableAfterAttempts: ").append(toIndentedString(disableAfterAttempts)).append("\n");
    sb.append("    disableAfterDaysInactive: ").append(toIndentedString(disableAfterDaysInactive)).append("\n");
    sb.append("    warnUserDaysBefore: ").append(toIndentedString(warnUserDaysBefore)).append("\n");
    sb.append("    smtpMailFrom: ").append(toIndentedString(smtpMailFrom)).append("\n");
    sb.append("    smtpServer: ").append(toIndentedString(smtpServer)).append("\n");
    sb.append("    smtpPort: ").append(toIndentedString(smtpPort)).append("\n");
    sb.append("    smtpSSL: ").append(toIndentedString(smtpSSL)).append("\n");
    sb.append("    smtpTLS: ").append(toIndentedString(smtpTLS)).append("\n");
    sb.append("    smtpUser: ").append(toIndentedString(smtpUser)).append("\n");
    sb.append("    smtpPassword: ").append(toIndentedString(smtpPassword)).append("\n");
    sb.append("    proxyHost: ").append(toIndentedString(proxyHost)).append("\n");
    sb.append("    proxyPort: ").append(toIndentedString(proxyPort)).append("\n");
    sb.append("    proxyUser: ").append(toIndentedString(proxyUser)).append("\n");
    sb.append("    proxyPassword: ").append(toIndentedString(proxyPassword)).append("\n");
    sb.append("    proxyDomain: ").append(toIndentedString(proxyDomain)).append("\n");
    sb.append("    proxyWorkstation: ").append(toIndentedString(proxyWorkstation)).append("\n");
    sb.append("    currencyProvider: ").append(toIndentedString(currencyProvider)).append("\n");
    sb.append("    currencyKey: ").append(toIndentedString(currencyKey)).append("\n");
    sb.append("    enableAllZoneTypes: ").append(toIndentedString(enableAllZoneTypes)).append("\n");
    sb.append("    enableZoneTypes: ").append(toIndentedString(enableZoneTypes)).append("\n");
    sb.append("    disableZoneTypes: ").append(toIndentedString(disableZoneTypes)).append("\n");
    sb.append("    disableAllZoneTypes: ").append(toIndentedString(disableAllZoneTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

