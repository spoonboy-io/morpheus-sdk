/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MorpheusApi);
  }
}(this, function(expect, MorpheusApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MorpheusApi.ZoneCreate();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ZoneCreate', function() {
    it('should create an instance of ZoneCreate', function() {
      // uncomment below and update the code to test ZoneCreate
      //var instane = new MorpheusApi.ZoneCreate();
      //expect(instance).to.be.a(MorpheusApi.ZoneCreate);
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new MorpheusApi.ZoneCreate();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new MorpheusApi.ZoneCreate();
      //expect(instance).to.be();
    });

    it('should have the property code (base name: "code")', function() {
      // uncomment below and update the code to test the property code
      //var instance = new MorpheusApi.ZoneCreate();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new MorpheusApi.ZoneCreate();
      //expect(instance).to.be();
    });

    it('should have the property visibility (base name: "visibility")', function() {
      // uncomment below and update the code to test the property visibility
      //var instance = new MorpheusApi.ZoneCreate();
      //expect(instance).to.be();
    });

    it('should have the property zoneType (base name: "zoneType")', function() {
      // uncomment below and update the code to test the property zoneType
      //var instance = new MorpheusApi.ZoneCreate();
      //expect(instance).to.be();
    });

    it('should have the property groupId (base name: "groupId")', function() {
      // uncomment below and update the code to test the property groupId
      //var instance = new MorpheusApi.ZoneCreate();
      //expect(instance).to.be();
    });

    it('should have the property accountId (base name: "accountId")', function() {
      // uncomment below and update the code to test the property accountId
      //var instance = new MorpheusApi.ZoneCreate();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instance = new MorpheusApi.ZoneCreate();
      //expect(instance).to.be();
    });

    it('should have the property autoRecoverPowerState (base name: "autoRecoverPowerState")', function() {
      // uncomment below and update the code to test the property autoRecoverPowerState
      //var instance = new MorpheusApi.ZoneCreate();
      //expect(instance).to.be();
    });

    it('should have the property scalePriority (base name: "scalePriority")', function() {
      // uncomment below and update the code to test the property scalePriority
      //var instance = new MorpheusApi.ZoneCreate();
      //expect(instance).to.be();
    });

    it('should have the property linkedAccountId (base name: "linkedAccountId")', function() {
      // uncomment below and update the code to test the property linkedAccountId
      //var instance = new MorpheusApi.ZoneCreate();
      //expect(instance).to.be();
    });

    it('should have the property config (base name: "config")', function() {
      // uncomment below and update the code to test the property config
      //var instance = new MorpheusApi.ZoneCreate();
      //expect(instance).to.be();
    });

    it('should have the property securityMode (base name: "securityMode")', function() {
      // uncomment below and update the code to test the property securityMode
      //var instance = new MorpheusApi.ZoneCreate();
      //expect(instance).to.be();
    });

    it('should have the property credential (base name: "credential")', function() {
      // uncomment below and update the code to test the property credential
      //var instance = new MorpheusApi.ZoneCreate();
      //expect(instance).to.be();
    });

  });

}));
