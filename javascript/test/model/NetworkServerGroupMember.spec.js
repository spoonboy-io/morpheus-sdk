/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MorpheusApi);
  }
}(this, function(expect, MorpheusApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MorpheusApi.NetworkServerGroupMember();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NetworkServerGroupMember', function() {
    it('should create an instance of NetworkServerGroupMember', function() {
      // uncomment below and update the code to test NetworkServerGroupMember
      //var instane = new MorpheusApi.NetworkServerGroupMember();
      //expect(instance).to.be.a(MorpheusApi.NetworkServerGroupMember);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new MorpheusApi.NetworkServerGroupMember();
      //expect(instance).to.be();
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new MorpheusApi.NetworkServerGroupMember();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new MorpheusApi.NetworkServerGroupMember();
      //expect(instance).to.be();
    });

    it('should have the property memberName (base name: "memberName")', function() {
      // uncomment below and update the code to test the property memberName
      //var instance = new MorpheusApi.NetworkServerGroupMember();
      //expect(instance).to.be();
    });

    it('should have the property memberType (base name: "memberType")', function() {
      // uncomment below and update the code to test the property memberType
      //var instance = new MorpheusApi.NetworkServerGroupMember();
      //expect(instance).to.be();
    });

    it('should have the property memberValue (base name: "memberValue")', function() {
      // uncomment below and update the code to test the property memberValue
      //var instance = new MorpheusApi.NetworkServerGroupMember();
      //expect(instance).to.be();
    });

    it('should have the property memberExpression (base name: "memberExpression")', function() {
      // uncomment below and update the code to test the property memberExpression
      //var instance = new MorpheusApi.NetworkServerGroupMember();
      //expect(instance).to.be();
    });

    it('should have the property displayOrder (base name: "displayOrder")', function() {
      // uncomment below and update the code to test the property displayOrder
      //var instance = new MorpheusApi.NetworkServerGroupMember();
      //expect(instance).to.be();
    });

    it('should have the property internalId (base name: "internalId")', function() {
      // uncomment below and update the code to test the property internalId
      //var instance = new MorpheusApi.NetworkServerGroupMember();
      //expect(instance).to.be();
    });

    it('should have the property externalId (base name: "externalId")', function() {
      // uncomment below and update the code to test the property externalId
      //var instance = new MorpheusApi.NetworkServerGroupMember();
      //expect(instance).to.be();
    });

    it('should have the property members (base name: "members")', function() {
      // uncomment below and update the code to test the property members
      //var instance = new MorpheusApi.NetworkServerGroupMember();
      //expect(instance).to.be();
    });

  });

}));
