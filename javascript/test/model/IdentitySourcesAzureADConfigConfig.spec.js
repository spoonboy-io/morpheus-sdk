/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MorpheusApi);
  }
}(this, function(expect, MorpheusApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('IdentitySourcesAzureADConfigConfig', function() {
    it('should create an instance of IdentitySourcesAzureADConfigConfig', function() {
      // uncomment below and update the code to test IdentitySourcesAzureADConfigConfig
      //var instane = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be.a(MorpheusApi.IdentitySourcesAzureADConfigConfig);
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be();
    });

    it('should have the property logoutUrl (base name: "logoutUrl")', function() {
      // uncomment below and update the code to test the property logoutUrl
      //var instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be();
    });

    it('should have the property doNotIncludeSAMLRequest (base name: "doNotIncludeSAMLRequest")', function() {
      // uncomment below and update the code to test the property doNotIncludeSAMLRequest
      //var instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be();
    });

    it('should have the property sAMLSignatureMode (base name: "SAMLSignatureMode")', function() {
      // uncomment below and update the code to test the property sAMLSignatureMode
      //var instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be();
    });

    it('should have the property doNotValidateSignature (base name: "doNotValidateSignature")', function() {
      // uncomment below and update the code to test the property doNotValidateSignature
      //var instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be();
    });

    it('should have the property doNotValidateStatusCode (base name: "doNotValidateStatusCode")', function() {
      // uncomment below and update the code to test the property doNotValidateStatusCode
      //var instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be();
    });

    it('should have the property doNotValidateDestination (base name: "doNotValidateDestination")', function() {
      // uncomment below and update the code to test the property doNotValidateDestination
      //var instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be();
    });

    it('should have the property doNotValidateIssueInstants (base name: "doNotValidateIssueInstants")', function() {
      // uncomment below and update the code to test the property doNotValidateIssueInstants
      //var instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be();
    });

    it('should have the property doNotValidateAssertions (base name: "doNotValidateAssertions")', function() {
      // uncomment below and update the code to test the property doNotValidateAssertions
      //var instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be();
    });

    it('should have the property givenNameAttribute (base name: "givenNameAttribute")', function() {
      // uncomment below and update the code to test the property givenNameAttribute
      //var instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be();
    });

    it('should have the property surnameAttribute (base name: "surnameAttribute")', function() {
      // uncomment below and update the code to test the property surnameAttribute
      //var instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be();
    });

    it('should have the property emailAttribute (base name: "emailAttribute")', function() {
      // uncomment below and update the code to test the property emailAttribute
      //var instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be();
    });

    it('should have the property requiredAttributeValue (base name: "requiredAttributeValue")', function() {
      // uncomment below and update the code to test the property requiredAttributeValue
      //var instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be();
    });

    it('should have the property roleAttributeName (base name: "roleAttributeName")', function() {
      // uncomment below and update the code to test the property roleAttributeName
      //var instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be();
    });

    it('should have the property azureTenantId (base name: "azureTenantId")', function() {
      // uncomment below and update the code to test the property azureTenantId
      //var instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be();
    });

    it('should have the property azureAppId (base name: "azureAppId")', function() {
      // uncomment below and update the code to test the property azureAppId
      //var instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be();
    });

    it('should have the property azureAppSecret (base name: "azureAppSecret")', function() {
      // uncomment below and update the code to test the property azureAppSecret
      //var instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be();
    });

    it('should have the property roleLinkAttributeName (base name: "roleLinkAttributeName")', function() {
      // uncomment below and update the code to test the property roleLinkAttributeName
      //var instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be();
    });

    it('should have the property publicKey (base name: "publicKey")', function() {
      // uncomment below and update the code to test the property publicKey
      //var instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be();
    });

    it('should have the property azureAppSecretHash (base name: "azureAppSecretHash")', function() {
      // uncomment below and update the code to test the property azureAppSecretHash
      //var instance = new MorpheusApi.IdentitySourcesAzureADConfigConfig();
      //expect(instance).to.be();
    });

  });

}));
