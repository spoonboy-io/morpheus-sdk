/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MorpheusApi);
  }
}(this, function(expect, MorpheusApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MorpheusApi.LicenseLicenseFeatures();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LicenseLicenseFeatures', function() {
    it('should create an instance of LicenseLicenseFeatures', function() {
      // uncomment below and update the code to test LicenseLicenseFeatures
      //var instane = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be.a(MorpheusApi.LicenseLicenseFeatures);
    });

    it('should have the property dashboard (base name: "dashboard")', function() {
      // uncomment below and update the code to test the property dashboard
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property guidance (base name: "guidance")', function() {
      // uncomment below and update the code to test the property guidance
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property discovery (base name: "discovery")', function() {
      // uncomment below and update the code to test the property discovery
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property analytics (base name: "analytics")', function() {
      // uncomment below and update the code to test the property analytics
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property scheduling (base name: "scheduling")', function() {
      // uncomment below and update the code to test the property scheduling
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property approvals (base name: "approvals")', function() {
      // uncomment below and update the code to test the property approvals
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property usage (base name: "usage")', function() {
      // uncomment below and update the code to test the property usage
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property activity (base name: "activity")', function() {
      // uncomment below and update the code to test the property activity
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property instances (base name: "instances")', function() {
      // uncomment below and update the code to test the property instances
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property apps (base name: "apps")', function() {
      // uncomment below and update the code to test the property apps
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property templates (base name: "templates")', function() {
      // uncomment below and update the code to test the property templates
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property automation (base name: "automation")', function() {
      // uncomment below and update the code to test the property automation
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property virtualImages (base name: "virtualImages")', function() {
      // uncomment below and update the code to test the property virtualImages
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property library (base name: "library")', function() {
      // uncomment below and update the code to test the property library
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property migrations (base name: "migrations")', function() {
      // uncomment below and update the code to test the property migrations
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property deployments (base name: "deployments")', function() {
      // uncomment below and update the code to test the property deployments
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property groups (base name: "groups")', function() {
      // uncomment below and update the code to test the property groups
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property clouds (base name: "clouds")', function() {
      // uncomment below and update the code to test the property clouds
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property hosts (base name: "hosts")', function() {
      // uncomment below and update the code to test the property hosts
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property network (base name: "network")', function() {
      // uncomment below and update the code to test the property network
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property loadBalancers (base name: "loadBalancers")', function() {
      // uncomment below and update the code to test the property loadBalancers
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property storage (base name: "storage")', function() {
      // uncomment below and update the code to test the property storage
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property keyPairs (base name: "keyPairs")', function() {
      // uncomment below and update the code to test the property keyPairs
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property sslCertificates (base name: "sslCertificates")', function() {
      // uncomment below and update the code to test the property sslCertificates
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property boot (base name: "boot")', function() {
      // uncomment below and update the code to test the property boot
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property backups (base name: "backups")', function() {
      // uncomment below and update the code to test the property backups
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property cypher (base name: "cypher")', function() {
      // uncomment below and update the code to test the property cypher
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property archives (base name: "archives")', function() {
      // uncomment below and update the code to test the property archives
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property imageBuilder (base name: "imageBuilder")', function() {
      // uncomment below and update the code to test the property imageBuilder
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property tenants (base name: "tenants")', function() {
      // uncomment below and update the code to test the property tenants
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property plans (base name: "plans")', function() {
      // uncomment below and update the code to test the property plans
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property pricing (base name: "pricing")', function() {
      // uncomment below and update the code to test the property pricing
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property users (base name: "users")', function() {
      // uncomment below and update the code to test the property users
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property userGroups (base name: "userGroups")', function() {
      // uncomment below and update the code to test the property userGroups
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property monitoring (base name: "monitoring")', function() {
      // uncomment below and update the code to test the property monitoring
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property logging (base name: "logging")', function() {
      // uncomment below and update the code to test the property logging
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property monitoringServices (base name: "monitoringServices")', function() {
      // uncomment below and update the code to test the property monitoringServices
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property loggingServices (base name: "loggingServices")', function() {
      // uncomment below and update the code to test the property loggingServices
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property backupServices (base name: "backupServices")', function() {
      // uncomment below and update the code to test the property backupServices
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property dnsServices (base name: "dnsServices")', function() {
      // uncomment below and update the code to test the property dnsServices
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property codeService (base name: "codeService")', function() {
      // uncomment below and update the code to test the property codeService
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property buildServices (base name: "buildServices")', function() {
      // uncomment below and update the code to test the property buildServices
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property loadBalancerServices (base name: "loadBalancerServices")', function() {
      // uncomment below and update the code to test the property loadBalancerServices
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property ipamServices (base name: "ipamServices")', function() {
      // uncomment below and update the code to test the property ipamServices
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property approvalServices (base name: "approvalServices")', function() {
      // uncomment below and update the code to test the property approvalServices
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property cmdbServices (base name: "cmdbServices")', function() {
      // uncomment below and update the code to test the property cmdbServices
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property deploymentServices (base name: "deploymentServices")', function() {
      // uncomment below and update the code to test the property deploymentServices
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property automationServices (base name: "automationServices")', function() {
      // uncomment below and update the code to test the property automationServices
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property serviceDiscoveryServices (base name: "serviceDiscoveryServices")', function() {
      // uncomment below and update the code to test the property serviceDiscoveryServices
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property identityServices (base name: "identityServices")', function() {
      // uncomment below and update the code to test the property identityServices
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property trustServices (base name: "trustServices")', function() {
      // uncomment below and update the code to test the property trustServices
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

    it('should have the property securityServices (base name: "securityServices")', function() {
      // uncomment below and update the code to test the property securityServices
      //var instance = new MorpheusApi.LicenseLicenseFeatures();
      //expect(instance).to.be();
    });

  });

}));
