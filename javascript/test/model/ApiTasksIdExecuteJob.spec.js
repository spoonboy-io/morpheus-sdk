/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MorpheusApi);
  }
}(this, function(expect, MorpheusApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MorpheusApi.ApiTasksIdExecuteJob();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApiTasksIdExecuteJob', function() {
    it('should create an instance of ApiTasksIdExecuteJob', function() {
      // uncomment below and update the code to test ApiTasksIdExecuteJob
      //var instane = new MorpheusApi.ApiTasksIdExecuteJob();
      //expect(instance).to.be.a(MorpheusApi.ApiTasksIdExecuteJob);
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new MorpheusApi.ApiTasksIdExecuteJob();
      //expect(instance).to.be();
    });

    it('should have the property targetType (base name: "targetType")', function() {
      // uncomment below and update the code to test the property targetType
      //var instance = new MorpheusApi.ApiTasksIdExecuteJob();
      //expect(instance).to.be();
    });

    it('should have the property instances (base name: "instances")', function() {
      // uncomment below and update the code to test the property instances
      //var instance = new MorpheusApi.ApiTasksIdExecuteJob();
      //expect(instance).to.be();
    });

    it('should have the property servers (base name: "servers")', function() {
      // uncomment below and update the code to test the property servers
      //var instance = new MorpheusApi.ApiTasksIdExecuteJob();
      //expect(instance).to.be();
    });

    it('should have the property instanceLabel (base name: "instanceLabel")', function() {
      // uncomment below and update the code to test the property instanceLabel
      //var instance = new MorpheusApi.ApiTasksIdExecuteJob();
      //expect(instance).to.be();
    });

    it('should have the property serverLabel (base name: "serverLabel")', function() {
      // uncomment below and update the code to test the property serverLabel
      //var instance = new MorpheusApi.ApiTasksIdExecuteJob();
      //expect(instance).to.be();
    });

    it('should have the property customOptions (base name: "customOptions")', function() {
      // uncomment below and update the code to test the property customOptions
      //var instance = new MorpheusApi.ApiTasksIdExecuteJob();
      //expect(instance).to.be();
    });

    it('should have the property customConfig (base name: "customConfig")', function() {
      // uncomment below and update the code to test the property customConfig
      //var instance = new MorpheusApi.ApiTasksIdExecuteJob();
      //expect(instance).to.be();
    });

  });

}));
