/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MorpheusApi);
  }
}(this, function(expect, MorpheusApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MorpheusApi.InlineResponse20095NetworkRouterFirewallRuleGroups();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InlineResponse20095NetworkRouterFirewallRuleGroups', function() {
    it('should create an instance of InlineResponse20095NetworkRouterFirewallRuleGroups', function() {
      // uncomment below and update the code to test InlineResponse20095NetworkRouterFirewallRuleGroups
      //var instane = new MorpheusApi.InlineResponse20095NetworkRouterFirewallRuleGroups();
      //expect(instance).to.be.a(MorpheusApi.InlineResponse20095NetworkRouterFirewallRuleGroups);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new MorpheusApi.InlineResponse20095NetworkRouterFirewallRuleGroups();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new MorpheusApi.InlineResponse20095NetworkRouterFirewallRuleGroups();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new MorpheusApi.InlineResponse20095NetworkRouterFirewallRuleGroups();
      //expect(instance).to.be();
    });

    it('should have the property externalId (base name: "externalId")', function() {
      // uncomment below and update the code to test the property externalId
      //var instance = new MorpheusApi.InlineResponse20095NetworkRouterFirewallRuleGroups();
      //expect(instance).to.be();
    });

    it('should have the property iacId (base name: "iacId")', function() {
      // uncomment below and update the code to test the property iacId
      //var instance = new MorpheusApi.InlineResponse20095NetworkRouterFirewallRuleGroups();
      //expect(instance).to.be();
    });

    it('should have the property zone (base name: "zone")', function() {
      // uncomment below and update the code to test the property zone
      //var instance = new MorpheusApi.InlineResponse20095NetworkRouterFirewallRuleGroups();
      //expect(instance).to.be();
    });

    it('should have the property zonePool (base name: "zonePool")', function() {
      // uncomment below and update the code to test the property zonePool
      //var instance = new MorpheusApi.InlineResponse20095NetworkRouterFirewallRuleGroups();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new MorpheusApi.InlineResponse20095NetworkRouterFirewallRuleGroups();
      //expect(instance).to.be();
    });

    it('should have the property priority (base name: "priority")', function() {
      // uncomment below and update the code to test the property priority
      //var instance = new MorpheusApi.InlineResponse20095NetworkRouterFirewallRuleGroups();
      //expect(instance).to.be();
    });

    it('should have the property groupLayer (base name: "groupLayer")', function() {
      // uncomment below and update the code to test the property groupLayer
      //var instance = new MorpheusApi.InlineResponse20095NetworkRouterFirewallRuleGroups();
      //expect(instance).to.be();
    });

    it('should have the property rules (base name: "rules")', function() {
      // uncomment below and update the code to test the property rules
      //var instance = new MorpheusApi.InlineResponse20095NetworkRouterFirewallRuleGroups();
      //expect(instance).to.be();
    });

  });

}));
