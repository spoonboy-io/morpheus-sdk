/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MorpheusApi);
  }
}(this, function(expect, MorpheusApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MorpheusApi.RolesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RolesApi', function() {
    describe('addRoles', function() {
      it('should call addRoles successfully', function(done) {
        //uncomment below and update the code to test addRoles
        //instance.addRoles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRole', function() {
      it('should call deleteRole successfully', function(done) {
        //uncomment below and update the code to test deleteRole
        //instance.deleteRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRole', function() {
      it('should call getRole successfully', function(done) {
        //uncomment below and update the code to test getRole
        //instance.getRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRoles', function() {
      it('should call listRoles successfully', function(done) {
        //uncomment below and update the code to test listRoles
        //instance.listRoles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRole', function() {
      it('should call updateRole successfully', function(done) {
        //uncomment below and update the code to test updateRole
        //instance.updateRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRoleBlueprintAccess', function() {
      it('should call updateRoleBlueprintAccess successfully', function(done) {
        //uncomment below and update the code to test updateRoleBlueprintAccess
        //instance.updateRoleBlueprintAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRoleCatalogItemTypeAccess', function() {
      it('should call updateRoleCatalogItemTypeAccess successfully', function(done) {
        //uncomment below and update the code to test updateRoleCatalogItemTypeAccess
        //instance.updateRoleCatalogItemTypeAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRoleCloudAccess', function() {
      it('should call updateRoleCloudAccess successfully', function(done) {
        //uncomment below and update the code to test updateRoleCloudAccess
        //instance.updateRoleCloudAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRoleGroupAccess', function() {
      it('should call updateRoleGroupAccess successfully', function(done) {
        //uncomment below and update the code to test updateRoleGroupAccess
        //instance.updateRoleGroupAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRoleInstanceTypeAccess', function() {
      it('should call updateRoleInstanceTypeAccess successfully', function(done) {
        //uncomment below and update the code to test updateRoleInstanceTypeAccess
        //instance.updateRoleInstanceTypeAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRolePermission', function() {
      it('should call updateRolePermission successfully', function(done) {
        //uncomment below and update the code to test updateRolePermission
        //instance.updateRolePermission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRolePersonaAccess', function() {
      it('should call updateRolePersonaAccess successfully', function(done) {
        //uncomment below and update the code to test updateRolePersonaAccess
        //instance.updateRolePersonaAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRoleReportTypeAccess', function() {
      it('should call updateRoleReportTypeAccess successfully', function(done) {
        //uncomment below and update the code to test updateRoleReportTypeAccess
        //instance.updateRoleReportTypeAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRoleTaskAccess', function() {
      it('should call updateRoleTaskAccess successfully', function(done) {
        //uncomment below and update the code to test updateRoleTaskAccess
        //instance.updateRoleTaskAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRoleVDIPoolAccess', function() {
      it('should call updateRoleVDIPoolAccess successfully', function(done) {
        //uncomment below and update the code to test updateRoleVDIPoolAccess
        //instance.updateRoleVDIPoolAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRoleWorkflowAccess', function() {
      it('should call updateRoleWorkflowAccess successfully', function(done) {
        //uncomment below and update the code to test updateRoleWorkflowAccess
        //instance.updateRoleWorkflowAccess(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
