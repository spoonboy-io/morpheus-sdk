/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MorpheusApi);
  }
}(this, function(expect, MorpheusApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MorpheusApi.ClustersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ClustersApi', function() {
    describe('addCluster', function() {
      it('should call addCluster successfully', function(done) {
        //uncomment below and update the code to test addCluster
        //instance.addCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addClusterNamespace', function() {
      it('should call addClusterNamespace successfully', function(done) {
        //uncomment below and update the code to test addClusterNamespace
        //instance.addClusterNamespace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addClusterWorker', function() {
      it('should call addClusterWorker successfully', function(done) {
        //uncomment below and update the code to test addClusterWorker
        //instance.addClusterWorker(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('applyTemplate', function() {
      it('should call applyTemplate successfully', function(done) {
        //uncomment below and update the code to test applyTemplate
        //instance.applyTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCluster', function() {
      it('should call deleteCluster successfully', function(done) {
        //uncomment below and update the code to test deleteCluster
        //instance.deleteCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteClusterContainer', function() {
      it('should call deleteClusterContainer successfully', function(done) {
        //uncomment below and update the code to test deleteClusterContainer
        //instance.deleteClusterContainer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteClusterDeployment', function() {
      it('should call deleteClusterDeployment successfully', function(done) {
        //uncomment below and update the code to test deleteClusterDeployment
        //instance.deleteClusterDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteClusterJob', function() {
      it('should call deleteClusterJob successfully', function(done) {
        //uncomment below and update the code to test deleteClusterJob
        //instance.deleteClusterJob(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteClusterNamespace', function() {
      it('should call deleteClusterNamespace successfully', function(done) {
        //uncomment below and update the code to test deleteClusterNamespace
        //instance.deleteClusterNamespace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteClusterService', function() {
      it('should call deleteClusterService successfully', function(done) {
        //uncomment below and update the code to test deleteClusterService
        //instance.deleteClusterService(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteClusterStatefulSet', function() {
      it('should call deleteClusterStatefulSet successfully', function(done) {
        //uncomment below and update the code to test deleteClusterStatefulSet
        //instance.deleteClusterStatefulSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteClusterVolume', function() {
      it('should call deleteClusterVolume successfully', function(done) {
        //uncomment below and update the code to test deleteClusterVolume
        //instance.deleteClusterVolume(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteClusterWorker', function() {
      it('should call deleteClusterWorker successfully', function(done) {
        //uncomment below and update the code to test deleteClusterWorker
        //instance.deleteClusterWorker(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCluster', function() {
      it('should call getCluster successfully', function(done) {
        //uncomment below and update the code to test getCluster
        //instance.getCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClusterApiConfig', function() {
      it('should call getClusterApiConfig successfully', function(done) {
        //uncomment below and update the code to test getClusterApiConfig
        //instance.getClusterApiConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClusterDatastore', function() {
      it('should call getClusterDatastore successfully', function(done) {
        //uncomment below and update the code to test getClusterDatastore
        //instance.getClusterDatastore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClusterHistory', function() {
      it('should call getClusterHistory successfully', function(done) {
        //uncomment below and update the code to test getClusterHistory
        //instance.getClusterHistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClusterHistoryDetail', function() {
      it('should call getClusterHistoryDetail successfully', function(done) {
        //uncomment below and update the code to test getClusterHistoryDetail
        //instance.getClusterHistoryDetail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClusterHistoryEventDetail', function() {
      it('should call getClusterHistoryEventDetail successfully', function(done) {
        //uncomment below and update the code to test getClusterHistoryEventDetail
        //instance.getClusterHistoryEventDetail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClusterMasters', function() {
      it('should call getClusterMasters successfully', function(done) {
        //uncomment below and update the code to test getClusterMasters
        //instance.getClusterMasters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClusterNamespace', function() {
      it('should call getClusterNamespace successfully', function(done) {
        //uncomment below and update the code to test getClusterNamespace
        //instance.getClusterNamespace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClusterNamespaces', function() {
      it('should call getClusterNamespaces successfully', function(done) {
        //uncomment below and update the code to test getClusterNamespaces
        //instance.getClusterNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getClusterUpgradeVersions', function() {
      it('should call getClusterUpgradeVersions successfully', function(done) {
        //uncomment below and update the code to test getClusterUpgradeVersions
        //instance.getClusterUpgradeVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWikiCluster', function() {
      it('should call getWikiCluster successfully', function(done) {
        //uncomment below and update the code to test getWikiCluster
        //instance.getWikiCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listClusterContainers', function() {
      it('should call listClusterContainers successfully', function(done) {
        //uncomment below and update the code to test listClusterContainers
        //instance.listClusterContainers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listClusterDatastores', function() {
      it('should call listClusterDatastores successfully', function(done) {
        //uncomment below and update the code to test listClusterDatastores
        //instance.listClusterDatastores(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listClusterDeployments', function() {
      it('should call listClusterDeployments successfully', function(done) {
        //uncomment below and update the code to test listClusterDeployments
        //instance.listClusterDeployments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listClusterJobs', function() {
      it('should call listClusterJobs successfully', function(done) {
        //uncomment below and update the code to test listClusterJobs
        //instance.listClusterJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listClusterPods', function() {
      it('should call listClusterPods successfully', function(done) {
        //uncomment below and update the code to test listClusterPods
        //instance.listClusterPods(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listClusterServices', function() {
      it('should call listClusterServices successfully', function(done) {
        //uncomment below and update the code to test listClusterServices
        //instance.listClusterServices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listClusterStatefulSets', function() {
      it('should call listClusterStatefulSets successfully', function(done) {
        //uncomment below and update the code to test listClusterStatefulSets
        //instance.listClusterStatefulSets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listClusterTypes', function() {
      it('should call listClusterTypes successfully', function(done) {
        //uncomment below and update the code to test listClusterTypes
        //instance.listClusterTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listClusterVolumes', function() {
      it('should call listClusterVolumes successfully', function(done) {
        //uncomment below and update the code to test listClusterVolumes
        //instance.listClusterVolumes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listClusterWorkers', function() {
      it('should call listClusterWorkers successfully', function(done) {
        //uncomment below and update the code to test listClusterWorkers
        //instance.listClusterWorkers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listClusters', function() {
      it('should call listClusters successfully', function(done) {
        //uncomment below and update the code to test listClusters
        //instance.listClusters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restartClusterContainer', function() {
      it('should call restartClusterContainer successfully', function(done) {
        //uncomment below and update the code to test restartClusterContainer
        //instance.restartClusterContainer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restartClusterDeployment', function() {
      it('should call restartClusterDeployment successfully', function(done) {
        //uncomment below and update the code to test restartClusterDeployment
        //instance.restartClusterDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restartClusterPod', function() {
      it('should call restartClusterPod successfully', function(done) {
        //uncomment below and update the code to test restartClusterPod
        //instance.restartClusterPod(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restartClusterStatefulSet', function() {
      it('should call restartClusterStatefulSet successfully', function(done) {
        //uncomment below and update the code to test restartClusterStatefulSet
        //instance.restartClusterStatefulSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCluster', function() {
      it('should call updateCluster successfully', function(done) {
        //uncomment below and update the code to test updateCluster
        //instance.updateCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateClusterDatastore', function() {
      it('should call updateClusterDatastore successfully', function(done) {
        //uncomment below and update the code to test updateClusterDatastore
        //instance.updateClusterDatastore(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateClusterNamespace', function() {
      it('should call updateClusterNamespace successfully', function(done) {
        //uncomment below and update the code to test updateClusterNamespace
        //instance.updateClusterNamespace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateClusterPermissions', function() {
      it('should call updateClusterPermissions successfully', function(done) {
        //uncomment below and update the code to test updateClusterPermissions
        //instance.updateClusterPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateClusterUpgradeVersions', function() {
      it('should call updateClusterUpgradeVersions successfully', function(done) {
        //uncomment below and update the code to test updateClusterUpgradeVersions
        //instance.updateClusterUpgradeVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateClusterWorkerCount', function() {
      it('should call updateClusterWorkerCount successfully', function(done) {
        //uncomment below and update the code to test updateClusterWorkerCount
        //instance.updateClusterWorkerCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWikiCluster', function() {
      it('should call updateWikiCluster successfully', function(done) {
        //uncomment below and update the code to test updateWikiCluster
        //instance.updateWikiCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
