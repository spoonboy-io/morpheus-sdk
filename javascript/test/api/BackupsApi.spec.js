/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MorpheusApi);
  }
}(this, function(expect, MorpheusApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MorpheusApi.BackupsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BackupsApi', function() {
    describe('addBackupJobs', function() {
      it('should call addBackupJobs successfully', function(done) {
        //uncomment below and update the code to test addBackupJobs
        //instance.addBackupJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addBackups', function() {
      it('should call addBackups successfully', function(done) {
        //uncomment below and update the code to test addBackups
        //instance.addBackups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('executeBackupJobs', function() {
      it('should call executeBackupJobs successfully', function(done) {
        //uncomment below and update the code to test executeBackupJobs
        //instance.executeBackupJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('executeBackups', function() {
      it('should call executeBackups successfully', function(done) {
        //uncomment below and update the code to test executeBackups
        //instance.executeBackups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBackupJobs', function() {
      it('should call getBackupJobs successfully', function(done) {
        //uncomment below and update the code to test getBackupJobs
        //instance.getBackupJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBackupRestores', function() {
      it('should call getBackupRestores successfully', function(done) {
        //uncomment below and update the code to test getBackupRestores
        //instance.getBackupRestores(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBackupResults', function() {
      it('should call getBackupResults successfully', function(done) {
        //uncomment below and update the code to test getBackupResults
        //instance.getBackupResults(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBackups', function() {
      it('should call getBackups successfully', function(done) {
        //uncomment below and update the code to test getBackups
        //instance.getBackups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBackupJobs', function() {
      it('should call listBackupJobs successfully', function(done) {
        //uncomment below and update the code to test listBackupJobs
        //instance.listBackupJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBackupRestores', function() {
      it('should call listBackupRestores successfully', function(done) {
        //uncomment below and update the code to test listBackupRestores
        //instance.listBackupRestores(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBackupResults', function() {
      it('should call listBackupResults successfully', function(done) {
        //uncomment below and update the code to test listBackupResults
        //instance.listBackupResults(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBackups', function() {
      it('should call listBackups successfully', function(done) {
        //uncomment below and update the code to test listBackups
        //instance.listBackups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeBackupJobs', function() {
      it('should call removeBackupJobs successfully', function(done) {
        //uncomment below and update the code to test removeBackupJobs
        //instance.removeBackupJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeBackupRestores', function() {
      it('should call removeBackupRestores successfully', function(done) {
        //uncomment below and update the code to test removeBackupRestores
        //instance.removeBackupRestores(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeBackupResults', function() {
      it('should call removeBackupResults successfully', function(done) {
        //uncomment below and update the code to test removeBackupResults
        //instance.removeBackupResults(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeBackups', function() {
      it('should call removeBackups successfully', function(done) {
        //uncomment below and update the code to test removeBackups
        //instance.removeBackups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBackupJobs', function() {
      it('should call updateBackupJobs successfully', function(done) {
        //uncomment below and update the code to test updateBackupJobs
        //instance.updateBackupJobs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBackups', function() {
      it('should call updateBackups successfully', function(done) {
        //uncomment below and update the code to test updateBackups
        //instance.updateBackups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
