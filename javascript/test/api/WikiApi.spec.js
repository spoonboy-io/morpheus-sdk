/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MorpheusApi);
  }
}(this, function(expect, MorpheusApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MorpheusApi.WikiApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WikiApi', function() {
    describe('addWiki', function() {
      it('should call addWiki successfully', function(done) {
        //uncomment below and update the code to test addWiki
        //instance.addWiki(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWiki', function() {
      it('should call getWiki successfully', function(done) {
        //uncomment below and update the code to test getWiki
        //instance.getWiki(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWikiApp', function() {
      it('should call getWikiApp successfully', function(done) {
        //uncomment below and update the code to test getWikiApp
        //instance.getWikiApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWikiCategories', function() {
      it('should call getWikiCategories successfully', function(done) {
        //uncomment below and update the code to test getWikiCategories
        //instance.getWikiCategories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWikiCloud', function() {
      it('should call getWikiCloud successfully', function(done) {
        //uncomment below and update the code to test getWikiCloud
        //instance.getWikiCloud(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWikiCluster', function() {
      it('should call getWikiCluster successfully', function(done) {
        //uncomment below and update the code to test getWikiCluster
        //instance.getWikiCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWikiGroup', function() {
      it('should call getWikiGroup successfully', function(done) {
        //uncomment below and update the code to test getWikiGroup
        //instance.getWikiGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWikiInstance', function() {
      it('should call getWikiInstance successfully', function(done) {
        //uncomment below and update the code to test getWikiInstance
        //instance.getWikiInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWikiServer', function() {
      it('should call getWikiServer successfully', function(done) {
        //uncomment below and update the code to test getWikiServer
        //instance.getWikiServer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listWiki', function() {
      it('should call listWiki successfully', function(done) {
        //uncomment below and update the code to test listWiki
        //instance.listWiki(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeWiki', function() {
      it('should call removeWiki successfully', function(done) {
        //uncomment below and update the code to test removeWiki
        //instance.removeWiki(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWiki', function() {
      it('should call updateWiki successfully', function(done) {
        //uncomment below and update the code to test updateWiki
        //instance.updateWiki(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWikiApp', function() {
      it('should call updateWikiApp successfully', function(done) {
        //uncomment below and update the code to test updateWikiApp
        //instance.updateWikiApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWikiCloud', function() {
      it('should call updateWikiCloud successfully', function(done) {
        //uncomment below and update the code to test updateWikiCloud
        //instance.updateWikiCloud(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWikiCluster', function() {
      it('should call updateWikiCluster successfully', function(done) {
        //uncomment below and update the code to test updateWikiCluster
        //instance.updateWikiCluster(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWikiGroup', function() {
      it('should call updateWikiGroup successfully', function(done) {
        //uncomment below and update the code to test updateWikiGroup
        //instance.updateWikiGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWikiInstance', function() {
      it('should call updateWikiInstance successfully', function(done) {
        //uncomment below and update the code to test updateWikiInstance
        //instance.updateWikiInstance(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWikiServer', function() {
      it('should call updateWikiServer successfully', function(done) {
        //uncomment below and update the code to test updateWikiServer
        //instance.updateWikiServer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
