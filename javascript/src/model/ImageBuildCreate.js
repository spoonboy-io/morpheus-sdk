/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImageBuildCreateBootScript from './ImageBuildCreateBootScript';
import ImageBuildCreatePreseedScript from './ImageBuildCreatePreseedScript';
import ImageBuildCreateSite from './ImageBuildCreateSite';
import ImageBuildCreateZone from './ImageBuildCreateZone';

/**
 * The ImageBuildCreate model module.
 * @module model/ImageBuildCreate
 * @version 6.2.1
 */
class ImageBuildCreate {
    /**
     * Constructs a new <code>ImageBuildCreate</code>.
     * @alias module:model/ImageBuildCreate
     */
    constructor() { 
        
        ImageBuildCreate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ImageBuildCreate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImageBuildCreate} obj Optional instance to populate.
     * @return {module:model/ImageBuildCreate} The populated <code>ImageBuildCreate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImageBuildCreate();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('site')) {
                obj['site'] = ImageBuildCreateSite.constructFromObject(data['site']);
            }
            if (data.hasOwnProperty('zone')) {
                obj['zone'] = ImageBuildCreateZone.constructFromObject(data['zone']);
            }
            if (data.hasOwnProperty('config')) {
                obj['config'] = ApiClient.convertToType(data['config'], Object);
            }
            if (data.hasOwnProperty('bootScript')) {
                obj['bootScript'] = ImageBuildCreateBootScript.constructFromObject(data['bootScript']);
            }
            if (data.hasOwnProperty('preseedScript')) {
                obj['preseedScript'] = ImageBuildCreatePreseedScript.constructFromObject(data['preseedScript']);
            }
            if (data.hasOwnProperty('sshUsername')) {
                obj['sshUsername'] = ApiClient.convertToType(data['sshUsername'], 'String');
            }
            if (data.hasOwnProperty('sshPassword')) {
                obj['sshPassword'] = ApiClient.convertToType(data['sshPassword'], 'String');
            }
            if (data.hasOwnProperty('storageProvider')) {
                obj['storageProvider'] = ApiClient.convertToType(data['storageProvider'], 'String');
            }
            if (data.hasOwnProperty('isCloudInit')) {
                obj['isCloudInit'] = ApiClient.convertToType(data['isCloudInit'], 'String');
            }
            if (data.hasOwnProperty('buildOutputName')) {
                obj['buildOutputName'] = ApiClient.convertToType(data['buildOutputName'], 'String');
            }
            if (data.hasOwnProperty('conversionFormats')) {
                obj['conversionFormats'] = ApiClient.convertToType(data['conversionFormats'], 'String');
            }
            if (data.hasOwnProperty('keepResults')) {
                obj['keepResults'] = ApiClient.convertToType(data['keepResults'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * A name for the image build
 * @member {String} name
 */
ImageBuildCreate.prototype['name'] = undefined;

/**
 * A description for the image build
 * @member {String} description
 */
ImageBuildCreate.prototype['description'] = undefined;

/**
 * The image builder type.
 * @member {module:model/ImageBuildCreate.TypeEnum} type
 */
ImageBuildCreate.prototype['type'] = undefined;

/**
 * @member {module:model/ImageBuildCreateSite} site
 */
ImageBuildCreate.prototype['site'] = undefined;

/**
 * @member {module:model/ImageBuildCreateZone} zone
 */
ImageBuildCreate.prototype['zone'] = undefined;

/**
 * A map of config values. This is the instance config that is used for provisioning. See Provisioning Types.
 * @member {Object} config
 */
ImageBuildCreate.prototype['config'] = undefined;

/**
 * @member {module:model/ImageBuildCreateBootScript} bootScript
 */
ImageBuildCreate.prototype['bootScript'] = undefined;

/**
 * @member {module:model/ImageBuildCreatePreseedScript} preseedScript
 */
ImageBuildCreate.prototype['preseedScript'] = undefined;

/**
 * SSH Username
 * @member {String} sshUsername
 */
ImageBuildCreate.prototype['sshUsername'] = undefined;

/**
 * SSH Password
 * @member {String} sshPassword
 */
ImageBuildCreate.prototype['sshPassword'] = undefined;

/**
 * Storage Provider
 * @member {String} storageProvider
 */
ImageBuildCreate.prototype['storageProvider'] = undefined;

/**
 * Cloud Init
 * @member {String} isCloudInit
 */
ImageBuildCreate.prototype['isCloudInit'] = undefined;

/**
 * Build Output Name
 * @member {String} buildOutputName
 */
ImageBuildCreate.prototype['buildOutputName'] = undefined;

/**
 * Conversion Formats
 * @member {module:model/ImageBuildCreate.ConversionFormatsEnum} conversionFormats
 */
ImageBuildCreate.prototype['conversionFormats'] = undefined;

/**
 * Keep Results - Keep only the most recent builds. Older executions will be deleted along with their associated Virtual Images. The value 0 disables this functionality.
 * @member {Number} keepResults
 * @default 0
 */
ImageBuildCreate.prototype['keepResults'] = 0;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
ImageBuildCreate['TypeEnum'] = {

    /**
     * value: "vmware"
     * @const
     */
    "vmware": "vmware"
};


/**
 * Allowed values for the <code>conversionFormats</code> property.
 * @enum {String}
 * @readonly
 */
ImageBuildCreate['ConversionFormatsEnum'] = {

    /**
     * value: "null"
     * @const
     */
    "null": "null",

    /**
     * value: "ovf"
     * @const
     */
    "ovf": "ovf",

    /**
     * value: "qcow2"
     * @const
     */
    "qcow2": "qcow2",

    /**
     * value: "vhd"
     * @const
     */
    "vhd": "vhd"
};



export default ImageBuildCreate;

