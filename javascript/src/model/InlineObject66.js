/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OneOfstringlong from './OneOfstringlong';

/**
 * The InlineObject66 model module.
 * @module model/InlineObject66
 * @version 6.2.1
 */
class InlineObject66 {
    /**
     * Constructs a new <code>InlineObject66</code>.
     * The following parameters are available under the root context of the JSON body. The secret mount is capable of storing the entire JSON object as key&#x3D;value pairs, or just a single string. To store a string instead, use the value query parameter instead of JSON, or pass type&#x3D;string. There are a couple of special keys that the API will look for in the payload. The ttl key is a special key that if present in the payload will be parsed and used as the ttl parameter (lease duration in seconds). The value key is a special key that if present in the payload will be parsed and used as the secret data (instead of the entire payload). This is true when type&#x3D;string. 
     * @alias module:model/InlineObject66
     */
    constructor() { 
        
        InlineObject66.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineObject66</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineObject66} obj Optional instance to populate.
     * @return {module:model/InlineObject66} The populated <code>InlineObject66</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineObject66();

            if (data.hasOwnProperty('ttl')) {
                obj['ttl'] = ApiClient.convertToType(data['ttl'], OneOfstringlong);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Time to Live. The lease duration in seconds, or a human readable format eg. 15m, 8h, 7d. The default is 0 meaning Never expires. This only is applied if the cypher does not yet exist and is created. 
 * @member {module:model/OneOfstringlong} ttl
 */
InlineObject66.prototype['ttl'] = undefined;

/**
 * The secret value to be stored. This is only parsed if type is passed as `string`.
 * @member {String} value
 */
InlineObject66.prototype['value'] = undefined;






export default InlineObject66;

