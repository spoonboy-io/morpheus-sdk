/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InlineResponse20040AppDeployInstance from './InlineResponse20040AppDeployInstance';
import InlineResponse20079LoadBalancerMonitorLoadBalancerType from './InlineResponse20079LoadBalancerMonitorLoadBalancerType';

/**
 * The StorageServer model module.
 * @module model/StorageServer
 * @version 6.2.1
 */
class StorageServer {
    /**
     * Constructs a new <code>StorageServer</code>.
     * @alias module:model/StorageServer
     */
    constructor() { 
        
        StorageServer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StorageServer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StorageServer} obj Optional instance to populate.
     * @return {module:model/StorageServer} The populated <code>StorageServer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StorageServer();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = InlineResponse20079LoadBalancerMonitorLoadBalancerType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('chassis')) {
                obj['chassis'] = ApiClient.convertToType(data['chassis'], 'String');
            }
            if (data.hasOwnProperty('visibility')) {
                obj['visibility'] = ApiClient.convertToType(data['visibility'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('internalId')) {
                obj['internalId'] = ApiClient.convertToType(data['internalId'], 'String');
            }
            if (data.hasOwnProperty('externalId')) {
                obj['externalId'] = ApiClient.convertToType(data['externalId'], 'String');
            }
            if (data.hasOwnProperty('serviceUrl')) {
                obj['serviceUrl'] = ApiClient.convertToType(data['serviceUrl'], 'String');
            }
            if (data.hasOwnProperty('serviceHost')) {
                obj['serviceHost'] = ApiClient.convertToType(data['serviceHost'], 'String');
            }
            if (data.hasOwnProperty('servicePath')) {
                obj['servicePath'] = ApiClient.convertToType(data['servicePath'], 'String');
            }
            if (data.hasOwnProperty('serviceToken')) {
                obj['serviceToken'] = ApiClient.convertToType(data['serviceToken'], 'String');
            }
            if (data.hasOwnProperty('serviceTokenHash')) {
                obj['serviceTokenHash'] = ApiClient.convertToType(data['serviceTokenHash'], 'String');
            }
            if (data.hasOwnProperty('serviceVersion')) {
                obj['serviceVersion'] = ApiClient.convertToType(data['serviceVersion'], 'String');
            }
            if (data.hasOwnProperty('serviceUsername')) {
                obj['serviceUsername'] = ApiClient.convertToType(data['serviceUsername'], 'String');
            }
            if (data.hasOwnProperty('servicePassword')) {
                obj['servicePassword'] = ApiClient.convertToType(data['servicePassword'], 'String');
            }
            if (data.hasOwnProperty('servicePasswordHash')) {
                obj['servicePasswordHash'] = ApiClient.convertToType(data['servicePasswordHash'], 'String');
            }
            if (data.hasOwnProperty('internalIp')) {
                obj['internalIp'] = ApiClient.convertToType(data['internalIp'], 'String');
            }
            if (data.hasOwnProperty('externalIp')) {
                obj['externalIp'] = ApiClient.convertToType(data['externalIp'], 'String');
            }
            if (data.hasOwnProperty('apiPort')) {
                obj['apiPort'] = ApiClient.convertToType(data['apiPort'], 'String');
            }
            if (data.hasOwnProperty('adminPort')) {
                obj['adminPort'] = ApiClient.convertToType(data['adminPort'], 'String');
            }
            if (data.hasOwnProperty('config')) {
                obj['config'] = ApiClient.convertToType(data['config'], Object);
            }
            if (data.hasOwnProperty('refType')) {
                obj['refType'] = ApiClient.convertToType(data['refType'], 'String');
            }
            if (data.hasOwnProperty('refId')) {
                obj['refId'] = ApiClient.convertToType(data['refId'], 'Number');
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('serverVendor')) {
                obj['serverVendor'] = ApiClient.convertToType(data['serverVendor'], 'String');
            }
            if (data.hasOwnProperty('serverModel')) {
                obj['serverModel'] = ApiClient.convertToType(data['serverModel'], 'String');
            }
            if (data.hasOwnProperty('serialNumber')) {
                obj['serialNumber'] = ApiClient.convertToType(data['serialNumber'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('statusMessage')) {
                obj['statusMessage'] = ApiClient.convertToType(data['statusMessage'], 'String');
            }
            if (data.hasOwnProperty('statusDate')) {
                obj['statusDate'] = ApiClient.convertToType(data['statusDate'], 'Date');
            }
            if (data.hasOwnProperty('errorMessage')) {
                obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');
            }
            if (data.hasOwnProperty('maxStorage')) {
                obj['maxStorage'] = ApiClient.convertToType(data['maxStorage'], 'String');
            }
            if (data.hasOwnProperty('usedStorage')) {
                obj['usedStorage'] = ApiClient.convertToType(data['usedStorage'], 'String');
            }
            if (data.hasOwnProperty('diskCount')) {
                obj['diskCount'] = ApiClient.convertToType(data['diskCount'], 'String');
            }
            if (data.hasOwnProperty('dateCreated')) {
                obj['dateCreated'] = ApiClient.convertToType(data['dateCreated'], 'Date');
            }
            if (data.hasOwnProperty('lastUpdated')) {
                obj['lastUpdated'] = ApiClient.convertToType(data['lastUpdated'], 'Date');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('groups')) {
                obj['groups'] = ApiClient.convertToType(data['groups'], [Object]);
            }
            if (data.hasOwnProperty('hostGroups')) {
                obj['hostGroups'] = ApiClient.convertToType(data['hostGroups'], [Object]);
            }
            if (data.hasOwnProperty('hosts')) {
                obj['hosts'] = ApiClient.convertToType(data['hosts'], [Object]);
            }
            if (data.hasOwnProperty('tenants')) {
                obj['tenants'] = ApiClient.convertToType(data['tenants'], [Object]);
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = InlineResponse20040AppDeployInstance.constructFromObject(data['owner']);
            }
            if (data.hasOwnProperty('credential')) {
                obj['credential'] = ApiClient.convertToType(data['credential'], Object);
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
StorageServer.prototype['id'] = undefined;

/**
 * @member {String} name
 */
StorageServer.prototype['name'] = undefined;

/**
 * @member {module:model/InlineResponse20079LoadBalancerMonitorLoadBalancerType} type
 */
StorageServer.prototype['type'] = undefined;

/**
 * @member {String} chassis
 */
StorageServer.prototype['chassis'] = undefined;

/**
 * @member {String} visibility
 */
StorageServer.prototype['visibility'] = undefined;

/**
 * @member {String} description
 */
StorageServer.prototype['description'] = undefined;

/**
 * @member {String} internalId
 */
StorageServer.prototype['internalId'] = undefined;

/**
 * @member {String} externalId
 */
StorageServer.prototype['externalId'] = undefined;

/**
 * @member {String} serviceUrl
 */
StorageServer.prototype['serviceUrl'] = undefined;

/**
 * @member {String} serviceHost
 */
StorageServer.prototype['serviceHost'] = undefined;

/**
 * @member {String} servicePath
 */
StorageServer.prototype['servicePath'] = undefined;

/**
 * @member {String} serviceToken
 */
StorageServer.prototype['serviceToken'] = undefined;

/**
 * @member {String} serviceTokenHash
 */
StorageServer.prototype['serviceTokenHash'] = undefined;

/**
 * @member {String} serviceVersion
 */
StorageServer.prototype['serviceVersion'] = undefined;

/**
 * @member {String} serviceUsername
 */
StorageServer.prototype['serviceUsername'] = undefined;

/**
 * @member {String} servicePassword
 */
StorageServer.prototype['servicePassword'] = undefined;

/**
 * @member {String} servicePasswordHash
 */
StorageServer.prototype['servicePasswordHash'] = undefined;

/**
 * @member {String} internalIp
 */
StorageServer.prototype['internalIp'] = undefined;

/**
 * @member {String} externalIp
 */
StorageServer.prototype['externalIp'] = undefined;

/**
 * @member {String} apiPort
 */
StorageServer.prototype['apiPort'] = undefined;

/**
 * @member {String} adminPort
 */
StorageServer.prototype['adminPort'] = undefined;

/**
 * @member {Object} config
 */
StorageServer.prototype['config'] = undefined;

/**
 * @member {String} refType
 */
StorageServer.prototype['refType'] = undefined;

/**
 * @member {Number} refId
 */
StorageServer.prototype['refId'] = undefined;

/**
 * @member {String} category
 */
StorageServer.prototype['category'] = undefined;

/**
 * @member {String} serverVendor
 */
StorageServer.prototype['serverVendor'] = undefined;

/**
 * @member {String} serverModel
 */
StorageServer.prototype['serverModel'] = undefined;

/**
 * @member {String} serialNumber
 */
StorageServer.prototype['serialNumber'] = undefined;

/**
 * @member {String} status
 */
StorageServer.prototype['status'] = undefined;

/**
 * @member {String} statusMessage
 */
StorageServer.prototype['statusMessage'] = undefined;

/**
 * @member {Date} statusDate
 */
StorageServer.prototype['statusDate'] = undefined;

/**
 * @member {String} errorMessage
 */
StorageServer.prototype['errorMessage'] = undefined;

/**
 * @member {String} maxStorage
 */
StorageServer.prototype['maxStorage'] = undefined;

/**
 * @member {String} usedStorage
 */
StorageServer.prototype['usedStorage'] = undefined;

/**
 * @member {String} diskCount
 */
StorageServer.prototype['diskCount'] = undefined;

/**
 * @member {Date} dateCreated
 */
StorageServer.prototype['dateCreated'] = undefined;

/**
 * @member {Date} lastUpdated
 */
StorageServer.prototype['lastUpdated'] = undefined;

/**
 * @member {Boolean} enabled
 */
StorageServer.prototype['enabled'] = undefined;

/**
 * @member {Array.<Object>} groups
 */
StorageServer.prototype['groups'] = undefined;

/**
 * @member {Array.<Object>} hostGroups
 */
StorageServer.prototype['hostGroups'] = undefined;

/**
 * @member {Array.<Object>} hosts
 */
StorageServer.prototype['hosts'] = undefined;

/**
 * @member {Array.<Object>} tenants
 */
StorageServer.prototype['tenants'] = undefined;

/**
 * @member {module:model/InlineResponse20040AppDeployInstance} owner
 */
StorageServer.prototype['owner'] = undefined;

/**
 * @member {Object} credential
 */
StorageServer.prototype['credential'] = undefined;






export default StorageServer;

