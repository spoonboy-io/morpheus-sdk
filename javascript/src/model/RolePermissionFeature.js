/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RolePermissionFeature model module.
 * @module model/RolePermissionFeature
 * @version 6.2.1
 */
class RolePermissionFeature {
    /**
     * Constructs a new <code>RolePermissionFeature</code>.
     * @alias module:model/RolePermissionFeature
     * @param permissionCode {module:model/RolePermissionFeature.PermissionCodeEnum} The code of the feature permission being changed
     * @param access {module:model/RolePermissionFeature.AccessEnum} The new access level.
     */
    constructor(permissionCode, access) { 
        
        RolePermissionFeature.initialize(this, permissionCode, access);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, permissionCode, access) { 
        obj['permissionCode'] = permissionCode;
        obj['access'] = access;
    }

    /**
     * Constructs a <code>RolePermissionFeature</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RolePermissionFeature} obj Optional instance to populate.
     * @return {module:model/RolePermissionFeature} The populated <code>RolePermissionFeature</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RolePermissionFeature();

            if (data.hasOwnProperty('permissionCode')) {
                obj['permissionCode'] = ApiClient.convertToType(data['permissionCode'], 'String');
            }
            if (data.hasOwnProperty('access')) {
                obj['access'] = ApiClient.convertToType(data['access'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The code of the feature permission being changed
 * @member {module:model/RolePermissionFeature.PermissionCodeEnum} permissionCode
 */
RolePermissionFeature.prototype['permissionCode'] = undefined;

/**
 * The new access level.
 * @member {module:model/RolePermissionFeature.AccessEnum} access
 */
RolePermissionFeature.prototype['access'] = undefined;





/**
 * Allowed values for the <code>permissionCode</code> property.
 * @enum {String}
 * @readonly
 */
RolePermissionFeature['PermissionCodeEnum'] = {

    /**
     * value: "account-usage"
     * @const
     */
    "account-usage": "account-usage",

    /**
     * value: "activity"
     * @const
     */
    "activity": "activity",

    /**
     * value: "admin-accounts"
     * @const
     */
    "admin-accounts": "admin-accounts",

    /**
     * value: "admin-accounts-users"
     * @const
     */
    "admin-accounts-users": "admin-accounts-users",

    /**
     * value: "admin-appliance"
     * @const
     */
    "admin-appliance": "admin-appliance",

    /**
     * value: "admin-backupSettings"
     * @const
     */
    "admin-backupSettings": "admin-backupSettings",

    /**
     * value: "admin-certificates"
     * @const
     */
    "admin-certificates": "admin-certificates",

    /**
     * value: "admin-clients"
     * @const
     */
    "admin-clients": "admin-clients",

    /**
     * value: "admin-cm"
     * @const
     */
    "admin-cm": "admin-cm",

    /**
     * value: "admin-containers"
     * @const
     */
    "admin-containers": "admin-containers",

    /**
     * value: "admin-distributed-workers"
     * @const
     */
    "admin-distributed-workers": "admin-distributed-workers",

    /**
     * value: "admin-environments"
     * @const
     */
    "admin-environments": "admin-environments",

    /**
     * value: "admin-global-policies"
     * @const
     */
    "admin-global-policies": "admin-global-policies",

    /**
     * value: "admin-groups"
     * @const
     */
    "admin-groups": "admin-groups",

    /**
     * value: "admin-guidanceSettings"
     * @const
     */
    "admin-guidanceSettings": "admin-guidanceSettings",

    /**
     * value: "admin-health"
     * @const
     */
    "admin-health": "admin-health",

    /**
     * value: "admin-identity-sources"
     * @const
     */
    "admin-identity-sources": "admin-identity-sources",

    /**
     * value: "admin-keypairs"
     * @const
     */
    "admin-keypairs": "admin-keypairs",

    /**
     * value: "admin-licenses"
     * @const
     */
    "admin-licenses": "admin-licenses",

    /**
     * value: "admin-logSettings"
     * @const
     */
    "admin-logSettings": "admin-logSettings",

    /**
     * value: "admin-monitorSettings"
     * @const
     */
    "admin-monitorSettings": "admin-monitorSettings",

    /**
     * value: "admin-motd"
     * @const
     */
    "admin-motd": "admin-motd",

    /**
     * value: "admin-packages"
     * @const
     */
    "admin-packages": "admin-packages",

    /**
     * value: "admin-plugins"
     * @const
     */
    "admin-plugins": "admin-plugins",

    /**
     * value: "admin-policies"
     * @const
     */
    "admin-policies": "admin-policies",

    /**
     * value: "admin-profiles"
     * @const
     */
    "admin-profiles": "admin-profiles",

    /**
     * value: "admin-provisioningSettings"
     * @const
     */
    "admin-provisioningSettings": "admin-provisioningSettings",

    /**
     * value: "admin-roles"
     * @const
     */
    "admin-roles": "admin-roles",

    /**
     * value: "admin-servers"
     * @const
     */
    "admin-servers": "admin-servers",

    /**
     * value: "admin-servicePlans"
     * @const
     */
    "admin-servicePlans": "admin-servicePlans",

    /**
     * value: "admin-users"
     * @const
     */
    "admin-users": "admin-users",

    /**
     * value: "admin-whitelabel"
     * @const
     */
    "admin-whitelabel": "admin-whitelabel",

    /**
     * value: "admin-zones"
     * @const
     */
    "admin-zones": "admin-zones",

    /**
     * value: "app-templates"
     * @const
     */
    "app-templates": "app-templates",

    /**
     * value: "apps"
     * @const
     */
    "apps": "apps",

    /**
     * value: "arm-template"
     * @const
     */
    "arm-template": "arm-template",

    /**
     * value: "automation-services"
     * @const
     */
    "automation-services": "automation-services",

    /**
     * value: "backup-services"
     * @const
     */
    "backup-services": "backup-services",

    /**
     * value: "backups"
     * @const
     */
    "backups": "backups",

    /**
     * value: "billing"
     * @const
     */
    "billing": "billing",

    /**
     * value: "catalog"
     * @const
     */
    "catalog": "catalog",

    /**
     * value: "cloudFormation-template"
     * @const
     */
    "cloudFormation-template": "cloudFormation-template",

    /**
     * value: "code-repositories"
     * @const
     */
    "code-repositories": "code-repositories",

    /**
     * value: "credentials"
     * @const
     */
    "credentials": "credentials",

    /**
     * value: "dashboard"
     * @const
     */
    "dashboard": "dashboard",

    /**
     * value: "deployment-services"
     * @const
     */
    "deployment-services": "deployment-services",

    /**
     * value: "deployments"
     * @const
     */
    "deployments": "deployments",

    /**
     * value: "execution-request"
     * @const
     */
    "execution-request": "execution-request",

    /**
     * value: "executions"
     * @const
     */
    "executions": "executions",

    /**
     * value: "guidance"
     * @const
     */
    "guidance": "guidance",

    /**
     * value: "helm-template"
     * @const
     */
    "helm-template": "helm-template",

    /**
     * value: "infrastructure-boot"
     * @const
     */
    "infrastructure-boot": "infrastructure-boot",

    /**
     * value: "infrastructure-cluster"
     * @const
     */
    "infrastructure-cluster": "infrastructure-cluster",

    /**
     * value: "infrastructure-dhcp-pool"
     * @const
     */
    "infrastructure-dhcp-pool": "infrastructure-dhcp-pool",

    /**
     * value: "infrastructure-domains"
     * @const
     */
    "infrastructure-domains": "infrastructure-domains",

    /**
     * value: "infrastructure-ippools"
     * @const
     */
    "infrastructure-ippools": "infrastructure-ippools",

    /**
     * value: "infrastructure-kube-cntl"
     * @const
     */
    "infrastructure-kube-cntl": "infrastructure-kube-cntl",

    /**
     * value: "infrastructure-loadbalancer"
     * @const
     */
    "infrastructure-loadbalancer": "infrastructure-loadbalancer",

    /**
     * value: "infrastructure-move-server"
     * @const
     */
    "infrastructure-move-server": "infrastructure-move-server",

    /**
     * value: "infrastructure-nat"
     * @const
     */
    "infrastructure-nat": "infrastructure-nat",

    /**
     * value: "infrastructure-network-dhcp-relay"
     * @const
     */
    "infrastructure-network-dhcp-relay": "infrastructure-network-dhcp-relay",

    /**
     * value: "infrastructure-network-dhcp-routes"
     * @const
     */
    "infrastructure-network-dhcp-routes": "infrastructure-network-dhcp-routes",

    /**
     * value: "infrastructure-network-dhcp-server"
     * @const
     */
    "infrastructure-network-dhcp-server": "infrastructure-network-dhcp-server",

    /**
     * value: "infrastructure-network-firewalls"
     * @const
     */
    "infrastructure-network-firewalls": "infrastructure-network-firewalls",

    /**
     * value: "infrastructure-network-integrations"
     * @const
     */
    "infrastructure-network-integrations": "infrastructure-network-integrations",

    /**
     * value: "infrastructure-network-router-firewalls"
     * @const
     */
    "infrastructure-network-router-firewalls": "infrastructure-network-router-firewalls",

    /**
     * value: "infrastructure-network-router-interfaces"
     * @const
     */
    "infrastructure-network-router-interfaces": "infrastructure-network-router-interfaces",

    /**
     * value: "infrastructure-network-router-redistribution"
     * @const
     */
    "infrastructure-network-router-redistribution": "infrastructure-network-router-redistribution",

    /**
     * value: "infrastructure-network-router-routes"
     * @const
     */
    "infrastructure-network-router-routes": "infrastructure-network-router-routes",

    /**
     * value: "infrastructure-network-server-groups"
     * @const
     */
    "infrastructure-network-server-groups": "infrastructure-network-server-groups",

    /**
     * value: "infrastructure-networks"
     * @const
     */
    "infrastructure-networks": "infrastructure-networks",

    /**
     * value: "infrastructure-proxies"
     * @const
     */
    "infrastructure-proxies": "infrastructure-proxies",

    /**
     * value: "infrastructure-router-dhcp-binding"
     * @const
     */
    "infrastructure-router-dhcp-binding": "infrastructure-router-dhcp-binding",

    /**
     * value: "infrastructure-router-dhcp-relay"
     * @const
     */
    "infrastructure-router-dhcp-relay": "infrastructure-router-dhcp-relay",

    /**
     * value: "infrastructure-routers"
     * @const
     */
    "infrastructure-routers": "infrastructure-routers",

    /**
     * value: "infrastructure-securityGroups"
     * @const
     */
    "infrastructure-securityGroups": "infrastructure-securityGroups",

    /**
     * value: "infrastructure-state"
     * @const
     */
    "infrastructure-state": "infrastructure-state",

    /**
     * value: "infrastructure-storage"
     * @const
     */
    "infrastructure-storage": "infrastructure-storage",

    /**
     * value: "infrastructure-storage-browser"
     * @const
     */
    "infrastructure-storage-browser": "infrastructure-storage-browser",

    /**
     * value: "integrations-ansible"
     * @const
     */
    "integrations-ansible": "integrations-ansible",

    /**
     * value: "job-executions"
     * @const
     */
    "job-executions": "job-executions",

    /**
     * value: "job-templates"
     * @const
     */
    "job-templates": "job-templates",

    /**
     * value: "kubernetes-template"
     * @const
     */
    "kubernetes-template": "kubernetes-template",

    /**
     * value: "library-advanced-node-type-options"
     * @const
     */
    "library-advanced-node-type-options": "library-advanced-node-type-options",

    /**
     * value: "library-options"
     * @const
     */
    "library-options": "library-options",

    /**
     * value: "library-templates"
     * @const
     */
    "library-templates": "library-templates",

    /**
     * value: "logs"
     * @const
     */
    "logs": "logs",

    /**
     * value: "monitoring"
     * @const
     */
    "monitoring": "monitoring",

    /**
     * value: "operations-alarms"
     * @const
     */
    "operations-alarms": "operations-alarms",

    /**
     * value: "operations-approvals"
     * @const
     */
    "operations-approvals": "operations-approvals",

    /**
     * value: "operations-budgets"
     * @const
     */
    "operations-budgets": "operations-budgets",

    /**
     * value: "operations-invoices"
     * @const
     */
    "operations-invoices": "operations-invoices",

    /**
     * value: "operations-wiki"
     * @const
     */
    "operations-wiki": "operations-wiki",

    /**
     * value: "projects"
     * @const
     */
    "projects": "projects",

    /**
     * value: "provisioning"
     * @const
     */
    "provisioning": "provisioning",

    /**
     * value: "provisioning-add"
     * @const
     */
    "provisioning-add": "provisioning-add",

    /**
     * value: "provisioning-admin"
     * @const
     */
    "provisioning-admin": "provisioning-admin",

    /**
     * value: "provisioning-clone"
     * @const
     */
    "provisioning-clone": "provisioning-clone",

    /**
     * value: "provisioning-delete"
     * @const
     */
    "provisioning-delete": "provisioning-delete",

    /**
     * value: "provisioning-edit"
     * @const
     */
    "provisioning-edit": "provisioning-edit",

    /**
     * value: "provisioning-environment"
     * @const
     */
    "provisioning-environment": "provisioning-environment",

    /**
     * value: "provisioning-execute-script"
     * @const
     */
    "provisioning-execute-script": "provisioning-execute-script",

    /**
     * value: "provisioning-execute-task"
     * @const
     */
    "provisioning-execute-task": "provisioning-execute-task",

    /**
     * value: "provisioning-execute-workflow"
     * @const
     */
    "provisioning-execute-workflow": "provisioning-execute-workflow",

    /**
     * value: "provisioning-force-delete"
     * @const
     */
    "provisioning-force-delete": "provisioning-force-delete",

    /**
     * value: "provisioning-import-image"
     * @const
     */
    "provisioning-import-image": "provisioning-import-image",

    /**
     * value: "provisioning-lock"
     * @const
     */
    "provisioning-lock": "provisioning-lock",

    /**
     * value: "provisioning-power"
     * @const
     */
    "provisioning-power": "provisioning-power",

    /**
     * value: "provisioning-reconfigure"
     * @const
     */
    "provisioning-reconfigure": "provisioning-reconfigure",

    /**
     * value: "provisioning-reconfigure-add-disk"
     * @const
     */
    "provisioning-reconfigure-add-disk": "provisioning-reconfigure-add-disk",

    /**
     * value: "provisioning-reconfigure-add-network"
     * @const
     */
    "provisioning-reconfigure-add-network": "provisioning-reconfigure-add-network",

    /**
     * value: "provisioning-reconfigure-change-plan"
     * @const
     */
    "provisioning-reconfigure-change-plan": "provisioning-reconfigure-change-plan",

    /**
     * value: "provisioning-reconfigure-disk-type"
     * @const
     */
    "provisioning-reconfigure-disk-type": "provisioning-reconfigure-disk-type",

    /**
     * value: "provisioning-reconfigure-modify-disk"
     * @const
     */
    "provisioning-reconfigure-modify-disk": "provisioning-reconfigure-modify-disk",

    /**
     * value: "provisioning-reconfigure-modify-network"
     * @const
     */
    "provisioning-reconfigure-modify-network": "provisioning-reconfigure-modify-network",

    /**
     * value: "provisioning-reconfigure-remove-disk"
     * @const
     */
    "provisioning-reconfigure-remove-disk": "provisioning-reconfigure-remove-disk",

    /**
     * value: "provisioning-reconfigure-remove-network"
     * @const
     */
    "provisioning-reconfigure-remove-network": "provisioning-reconfigure-remove-network",

    /**
     * value: "provisioning-remove-control"
     * @const
     */
    "provisioning-remove-control": "provisioning-remove-control",

    /**
     * value: "provisioning-scale"
     * @const
     */
    "provisioning-scale": "provisioning-scale",

    /**
     * value: "provisioning-settings"
     * @const
     */
    "provisioning-settings": "provisioning-settings",

    /**
     * value: "provisioning-state"
     * @const
     */
    "provisioning-state": "provisioning-state",

    /**
     * value: "reports"
     * @const
     */
    "reports": "reports",

    /**
     * value: "reports-analytics"
     * @const
     */
    "reports-analytics": "reports-analytics",

    /**
     * value: "scheduling-execute"
     * @const
     */
    "scheduling-execute": "scheduling-execute",

    /**
     * value: "scheduling-power"
     * @const
     */
    "scheduling-power": "scheduling-power",

    /**
     * value: "security-scan"
     * @const
     */
    "security-scan": "security-scan",

    /**
     * value: "service-catalog"
     * @const
     */
    "service-catalog": "service-catalog",

    /**
     * value: "service-catalog-dashboard"
     * @const
     */
    "service-catalog-dashboard": "service-catalog-dashboard",

    /**
     * value: "service-catalog-inventory"
     * @const
     */
    "service-catalog-inventory": "service-catalog-inventory",

    /**
     * value: "services-archives"
     * @const
     */
    "services-archives": "services-archives",

    /**
     * value: "services-cypher"
     * @const
     */
    "services-cypher": "services-cypher",

    /**
     * value: "services-image-builder"
     * @const
     */
    "services-image-builder": "services-image-builder",

    /**
     * value: "services-kubernetes"
     * @const
     */
    "services-kubernetes": "services-kubernetes",

    /**
     * value: "services-network-registry"
     * @const
     */
    "services-network-registry": "services-network-registry",

    /**
     * value: "services-vdi-copy"
     * @const
     */
    "services-vdi-copy": "services-vdi-copy",

    /**
     * value: "services-vdi-pools"
     * @const
     */
    "services-vdi-pools": "services-vdi-pools",

    /**
     * value: "services-vdi-printer"
     * @const
     */
    "services-vdi-printer": "services-vdi-printer",

    /**
     * value: "snapshots"
     * @const
     */
    "snapshots": "snapshots",

    /**
     * value: "task-scripts"
     * @const
     */
    "task-scripts": "task-scripts",

    /**
     * value: "tasks"
     * @const
     */
    "tasks": "tasks",

    /**
     * value: "terminal"
     * @const
     */
    "terminal": "terminal",

    /**
     * value: "terminal-access"
     * @const
     */
    "terminal-access": "terminal-access",

    /**
     * value: "terraform-template"
     * @const
     */
    "terraform-template": "terraform-template",

    /**
     * value: "thresholds"
     * @const
     */
    "thresholds": "thresholds",

    /**
     * value: "trust-services"
     * @const
     */
    "trust-services": "trust-services",

    /**
     * value: "virtual-images"
     * @const
     */
    "virtual-images": "virtual-images"
};


/**
 * Allowed values for the <code>access</code> property.
 * @enum {String}
 * @readonly
 */
RolePermissionFeature['AccessEnum'] = {

    /**
     * value: "full"
     * @const
     */
    "full": "full",

    /**
     * value: "full_decrypted"
     * @const
     */
    "full_decrypted": "full_decrypted",

    /**
     * value: "group"
     * @const
     */
    "group": "group",

    /**
     * value: "listfiles"
     * @const
     */
    "listfiles": "listfiles",

    /**
     * value: "managerules"
     * @const
     */
    "managerules": "managerules",

    /**
     * value: "no"
     * @const
     */
    "no": "no",

    /**
     * value: "none"
     * @const
     */
    "none": "none",

    /**
     * value: "provision"
     * @const
     */
    "provision": "provision",

    /**
     * value: "read"
     * @const
     */
    "read": "read",

    /**
     * value: "rolemappings"
     * @const
     */
    "rolemappings": "rolemappings",

    /**
     * value: "user"
     * @const
     */
    "user": "user",

    /**
     * value: "view"
     * @const
     */
    "view": "view",

    /**
     * value: "yes"
     * @const
     */
    "yes": "yes"
};



export default RolePermissionFeature;

