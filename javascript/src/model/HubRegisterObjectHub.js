/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HubRegisterObjectHub model module.
 * @module model/HubRegisterObjectHub
 * @version 6.2.1
 */
class HubRegisterObjectHub {
    /**
     * Constructs a new <code>HubRegisterObjectHub</code>.
     * @alias module:model/HubRegisterObjectHub
     * @param companyName {String} Company Name for new Morpheus Hub organization
     * @param firstName {String} First Name for new Morpheus Hub user
     * @param lastName {String} Last Name for new Morpheus Hub user
     * @param email {String} Email for new Morpheus Hub user
     * @param password {String} Password for new Morpheus Hub user
     * @param jobTitle {String} Job title of new Morpheus Hub user
     */
    constructor(companyName, firstName, lastName, email, password, jobTitle) { 
        
        HubRegisterObjectHub.initialize(this, companyName, firstName, lastName, email, password, jobTitle);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, companyName, firstName, lastName, email, password, jobTitle) { 
        obj['companyName'] = companyName;
        obj['firstName'] = firstName;
        obj['lastName'] = lastName;
        obj['email'] = email;
        obj['password'] = password;
        obj['jobTitle'] = jobTitle;
    }

    /**
     * Constructs a <code>HubRegisterObjectHub</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HubRegisterObjectHub} obj Optional instance to populate.
     * @return {module:model/HubRegisterObjectHub} The populated <code>HubRegisterObjectHub</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HubRegisterObjectHub();

            if (data.hasOwnProperty('companyName')) {
                obj['companyName'] = ApiClient.convertToType(data['companyName'], 'String');
            }
            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('jobTitle')) {
                obj['jobTitle'] = ApiClient.convertToType(data['jobTitle'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Company Name for new Morpheus Hub organization
 * @member {String} companyName
 */
HubRegisterObjectHub.prototype['companyName'] = undefined;

/**
 * First Name for new Morpheus Hub user
 * @member {String} firstName
 */
HubRegisterObjectHub.prototype['firstName'] = undefined;

/**
 * Last Name for new Morpheus Hub user
 * @member {String} lastName
 */
HubRegisterObjectHub.prototype['lastName'] = undefined;

/**
 * Email for new Morpheus Hub user
 * @member {String} email
 */
HubRegisterObjectHub.prototype['email'] = undefined;

/**
 * Password for new Morpheus Hub user
 * @member {String} password
 */
HubRegisterObjectHub.prototype['password'] = undefined;

/**
 * Job title of new Morpheus Hub user
 * @member {String} jobTitle
 */
HubRegisterObjectHub.prototype['jobTitle'] = undefined;






export default HubRegisterObjectHub;

