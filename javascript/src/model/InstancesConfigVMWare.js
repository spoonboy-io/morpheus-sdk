/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InstancesConfigVMWare model module.
 * @module model/InstancesConfigVMWare
 * @version 6.2.1
 */
class InstancesConfigVMWare {
    /**
     * Constructs a new <code>InstancesConfigVMWare</code>.
     * @alias module:model/InstancesConfigVMWare
     */
    constructor() { 
        
        InstancesConfigVMWare.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InstancesConfigVMWare</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstancesConfigVMWare} obj Optional instance to populate.
     * @return {module:model/InstancesConfigVMWare} The populated <code>InstancesConfigVMWare</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstancesConfigVMWare();

            if (data.hasOwnProperty('noAgent')) {
                obj['noAgent'] = ApiClient.convertToType(data['noAgent'], 'Boolean');
            }
            if (data.hasOwnProperty('resourcePoolId')) {
                obj['resourcePoolId'] = ApiClient.convertToType(data['resourcePoolId'], 'String');
            }
            if (data.hasOwnProperty('hostId')) {
                obj['hostId'] = ApiClient.convertToType(data['hostId'], 'String');
            }
            if (data.hasOwnProperty('smbiosAssetTag')) {
                obj['smbiosAssetTag'] = ApiClient.convertToType(data['smbiosAssetTag'], 'String');
            }
            if (data.hasOwnProperty('nestedVirtualization')) {
                obj['nestedVirtualization'] = ApiClient.convertToType(data['nestedVirtualization'], 'String');
            }
            if (data.hasOwnProperty('vmwareFolderId')) {
                obj['vmwareFolderId'] = ApiClient.convertToType(data['vmwareFolderId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Skipping Agent installation will result in a lack of logging and guest operating system statistics. Automation scripts may also be adversely affected.
 * @member {Boolean} noAgent
 * @default false
 */
InstancesConfigVMWare.prototype['noAgent'] = false;

/**
 * id of the resource group to be used, can be prefixed with `pool-`. A resource pool group can be specified instead by prefixing its ID with `poolGroup-`.
 * @member {String} resourcePoolId
 */
InstancesConfigVMWare.prototype['resourcePoolId'] = undefined;

/**
 * Specific host to deploy to if so desired.
 * @member {String} hostId
 */
InstancesConfigVMWare.prototype['hostId'] = undefined;

/**
 * Sets the asset tag on the SMBIOS for use by the guest operating system. If left blank, the virtual machine name will be used.
 * @member {String} smbiosAssetTag
 */
InstancesConfigVMWare.prototype['smbiosAssetTag'] = undefined;

/**
 * Enable Nested Virtualization
 * @member {module:model/InstancesConfigVMWare.NestedVirtualizationEnum} nestedVirtualization
 * @default 'off'
 */
InstancesConfigVMWare.prototype['nestedVirtualization'] = 'off';

/**
 * VMWare Folder External ID (as a String) or ID (as an Integer or String)
 * @member {String} vmwareFolderId
 */
InstancesConfigVMWare.prototype['vmwareFolderId'] = undefined;





/**
 * Allowed values for the <code>nestedVirtualization</code> property.
 * @enum {String}
 * @readonly
 */
InstancesConfigVMWare['NestedVirtualizationEnum'] = {

    /**
     * value: "on"
     * @const
     */
    "on": "on",

    /**
     * value: "off"
     * @const
     */
    "off": "off"
};



export default InstancesConfigVMWare;

