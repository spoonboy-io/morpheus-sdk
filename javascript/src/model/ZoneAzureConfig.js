/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ZoneVcenterConfigNetworkServer from './ZoneVcenterConfigNetworkServer';

/**
 * The ZoneAzureConfig model module.
 * @module model/ZoneAzureConfig
 * @version 6.2.1
 */
class ZoneAzureConfig {
    /**
     * Constructs a new <code>ZoneAzureConfig</code>.
     * @alias module:model/ZoneAzureConfig
     */
    constructor() { 
        
        ZoneAzureConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ZoneAzureConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ZoneAzureConfig} obj Optional instance to populate.
     * @return {module:model/ZoneAzureConfig} The populated <code>ZoneAzureConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ZoneAzureConfig();

            if (data.hasOwnProperty('subscriberId')) {
                obj['subscriberId'] = ApiClient.convertToType(data['subscriberId'], 'String');
            }
            if (data.hasOwnProperty('tenantId')) {
                obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
            }
            if (data.hasOwnProperty('clientId')) {
                obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');
            }
            if (data.hasOwnProperty('clientSecret')) {
                obj['clientSecret'] = ApiClient.convertToType(data['clientSecret'], 'String');
            }
            if (data.hasOwnProperty('resourceGroup')) {
                obj['resourceGroup'] = ApiClient.convertToType(data['resourceGroup'], 'String');
            }
            if (data.hasOwnProperty('_importExisting')) {
                obj['_importExisting'] = ApiClient.convertToType(data['_importExisting'], 'String');
            }
            if (data.hasOwnProperty('importExisting')) {
                obj['importExisting'] = ApiClient.convertToType(data['importExisting'], 'String');
            }
            if (data.hasOwnProperty('inventoryLevel')) {
                obj['inventoryLevel'] = ApiClient.convertToType(data['inventoryLevel'], 'String');
            }
            if (data.hasOwnProperty('applianceUrl')) {
                obj['applianceUrl'] = ApiClient.convertToType(data['applianceUrl'], 'String');
            }
            if (data.hasOwnProperty('datacenterName')) {
                obj['datacenterName'] = ApiClient.convertToType(data['datacenterName'], 'String');
            }
            if (data.hasOwnProperty('networkServer.id')) {
                obj['networkServer.id'] = ApiClient.convertToType(data['networkServer.id'], 'String');
            }
            if (data.hasOwnProperty('networkServer')) {
                obj['networkServer'] = ZoneVcenterConfigNetworkServer.constructFromObject(data['networkServer']);
            }
            if (data.hasOwnProperty('securityMode')) {
                obj['securityMode'] = ApiClient.convertToType(data['securityMode'], 'String');
            }
            if (data.hasOwnProperty('certificateProvider')) {
                obj['certificateProvider'] = ApiClient.convertToType(data['certificateProvider'], 'String');
            }
            if (data.hasOwnProperty('backupMode')) {
                obj['backupMode'] = ApiClient.convertToType(data['backupMode'], 'String');
            }
            if (data.hasOwnProperty('replicationMode')) {
                obj['replicationMode'] = ApiClient.convertToType(data['replicationMode'], 'String');
            }
            if (data.hasOwnProperty('dnsIntegrationId')) {
                obj['dnsIntegrationId'] = ApiClient.convertToType(data['dnsIntegrationId'], 'String');
            }
            if (data.hasOwnProperty('configManagementId')) {
                obj['configManagementId'] = ApiClient.convertToType(data['configManagementId'], 'String');
            }
            if (data.hasOwnProperty('configCmdbId')) {
                obj['configCmdbId'] = ApiClient.convertToType(data['configCmdbId'], 'String');
            }
            if (data.hasOwnProperty('securityServer')) {
                obj['securityServer'] = ApiClient.convertToType(data['securityServer'], 'String');
            }
            if (data.hasOwnProperty('accountType')) {
                obj['accountType'] = ApiClient.convertToType(data['accountType'], 'String');
            }
            if (data.hasOwnProperty('serviceRegistryId')) {
                obj['serviceRegistryId'] = ApiClient.convertToType(data['serviceRegistryId'], 'String');
            }
            if (data.hasOwnProperty('cloudType')) {
                obj['cloudType'] = ApiClient.convertToType(data['cloudType'], 'String');
            }
            if (data.hasOwnProperty('rpcMode')) {
                obj['rpcMode'] = ApiClient.convertToType(data['rpcMode'], 'String');
            }
            if (data.hasOwnProperty('diskEncryption')) {
                obj['diskEncryption'] = ApiClient.convertToType(data['diskEncryption'], 'String');
            }
            if (data.hasOwnProperty('encryptionSet')) {
                obj['encryptionSet'] = ApiClient.convertToType(data['encryptionSet'], 'String');
            }
            if (data.hasOwnProperty('cspTenantId')) {
                obj['cspTenantId'] = ApiClient.convertToType(data['cspTenantId'], 'String');
            }
            if (data.hasOwnProperty('cspClientId')) {
                obj['cspClientId'] = ApiClient.convertToType(data['cspClientId'], 'String');
            }
            if (data.hasOwnProperty('cspClientSecret')) {
                obj['cspClientSecret'] = ApiClient.convertToType(data['cspClientSecret'], 'String');
            }
            if (data.hasOwnProperty('cspCustomer')) {
                obj['cspCustomer'] = ApiClient.convertToType(data['cspCustomer'], 'String');
            }
            if (data.hasOwnProperty('configCmdbDiscovery')) {
                obj['configCmdbDiscovery'] = ApiClient.convertToType(data['configCmdbDiscovery'], 'Boolean');
            }
            if (data.hasOwnProperty('azureCostingMode')) {
                obj['azureCostingMode'] = ApiClient.convertToType(data['azureCostingMode'], 'String');
            }
            if (data.hasOwnProperty('clientSecretHash')) {
                obj['clientSecretHash'] = ApiClient.convertToType(data['clientSecretHash'], 'String');
            }
            if (data.hasOwnProperty('cspClientSecretHash')) {
                obj['cspClientSecretHash'] = ApiClient.convertToType(data['cspClientSecretHash'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} subscriberId
 */
ZoneAzureConfig.prototype['subscriberId'] = undefined;

/**
 * @member {String} tenantId
 */
ZoneAzureConfig.prototype['tenantId'] = undefined;

/**
 * @member {String} clientId
 */
ZoneAzureConfig.prototype['clientId'] = undefined;

/**
 * @member {String} clientSecret
 */
ZoneAzureConfig.prototype['clientSecret'] = undefined;

/**
 * @member {String} resourceGroup
 */
ZoneAzureConfig.prototype['resourceGroup'] = undefined;

/**
 * @member {String} _importExisting
 */
ZoneAzureConfig.prototype['_importExisting'] = undefined;

/**
 * @member {String} importExisting
 */
ZoneAzureConfig.prototype['importExisting'] = undefined;

/**
 * @member {String} inventoryLevel
 */
ZoneAzureConfig.prototype['inventoryLevel'] = undefined;

/**
 * @member {String} applianceUrl
 */
ZoneAzureConfig.prototype['applianceUrl'] = undefined;

/**
 * @member {String} datacenterName
 */
ZoneAzureConfig.prototype['datacenterName'] = undefined;

/**
 * @member {String} networkServer.id
 */
ZoneAzureConfig.prototype['networkServer.id'] = undefined;

/**
 * @member {module:model/ZoneVcenterConfigNetworkServer} networkServer
 */
ZoneAzureConfig.prototype['networkServer'] = undefined;

/**
 * @member {String} securityMode
 */
ZoneAzureConfig.prototype['securityMode'] = undefined;

/**
 * @member {String} certificateProvider
 */
ZoneAzureConfig.prototype['certificateProvider'] = undefined;

/**
 * @member {String} backupMode
 */
ZoneAzureConfig.prototype['backupMode'] = undefined;

/**
 * @member {String} replicationMode
 */
ZoneAzureConfig.prototype['replicationMode'] = undefined;

/**
 * @member {String} dnsIntegrationId
 */
ZoneAzureConfig.prototype['dnsIntegrationId'] = undefined;

/**
 * @member {String} configManagementId
 */
ZoneAzureConfig.prototype['configManagementId'] = undefined;

/**
 * @member {String} configCmdbId
 */
ZoneAzureConfig.prototype['configCmdbId'] = undefined;

/**
 * @member {String} securityServer
 */
ZoneAzureConfig.prototype['securityServer'] = undefined;

/**
 * @member {String} accountType
 */
ZoneAzureConfig.prototype['accountType'] = undefined;

/**
 * @member {String} serviceRegistryId
 */
ZoneAzureConfig.prototype['serviceRegistryId'] = undefined;

/**
 * @member {String} cloudType
 */
ZoneAzureConfig.prototype['cloudType'] = undefined;

/**
 * @member {String} rpcMode
 */
ZoneAzureConfig.prototype['rpcMode'] = undefined;

/**
 * @member {String} diskEncryption
 */
ZoneAzureConfig.prototype['diskEncryption'] = undefined;

/**
 * @member {String} encryptionSet
 */
ZoneAzureConfig.prototype['encryptionSet'] = undefined;

/**
 * @member {String} cspTenantId
 */
ZoneAzureConfig.prototype['cspTenantId'] = undefined;

/**
 * @member {String} cspClientId
 */
ZoneAzureConfig.prototype['cspClientId'] = undefined;

/**
 * @member {String} cspClientSecret
 */
ZoneAzureConfig.prototype['cspClientSecret'] = undefined;

/**
 * @member {String} cspCustomer
 */
ZoneAzureConfig.prototype['cspCustomer'] = undefined;

/**
 * @member {Boolean} configCmdbDiscovery
 */
ZoneAzureConfig.prototype['configCmdbDiscovery'] = undefined;

/**
 * @member {String} azureCostingMode
 */
ZoneAzureConfig.prototype['azureCostingMode'] = undefined;

/**
 * @member {String} clientSecretHash
 */
ZoneAzureConfig.prototype['clientSecretHash'] = undefined;

/**
 * @member {String} cspClientSecretHash
 */
ZoneAzureConfig.prototype['cspClientSecretHash'] = undefined;






export default ZoneAzureConfig;

