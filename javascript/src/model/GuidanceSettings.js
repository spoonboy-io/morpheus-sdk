/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GuidanceSettings model module.
 * @module model/GuidanceSettings
 * @version 6.2.1
 */
class GuidanceSettings {
    /**
     * Constructs a new <code>GuidanceSettings</code>.
     * @alias module:model/GuidanceSettings
     */
    constructor() { 
        
        GuidanceSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GuidanceSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GuidanceSettings} obj Optional instance to populate.
     * @return {module:model/GuidanceSettings} The populated <code>GuidanceSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GuidanceSettings();

            if (data.hasOwnProperty('cpuAvgCutoffPower')) {
                obj['cpuAvgCutoffPower'] = ApiClient.convertToType(data['cpuAvgCutoffPower'], 'Number');
            }
            if (data.hasOwnProperty('cpuMaxCutoffPower')) {
                obj['cpuMaxCutoffPower'] = ApiClient.convertToType(data['cpuMaxCutoffPower'], 'Number');
            }
            if (data.hasOwnProperty('networkCutoffPower')) {
                obj['networkCutoffPower'] = ApiClient.convertToType(data['networkCutoffPower'], 'Number');
            }
            if (data.hasOwnProperty('cpuUpAvgStandardCutoffRightSize')) {
                obj['cpuUpAvgStandardCutoffRightSize'] = ApiClient.convertToType(data['cpuUpAvgStandardCutoffRightSize'], 'Number');
            }
            if (data.hasOwnProperty('cpuUpMaxStandardCutoffRightSize')) {
                obj['cpuUpMaxStandardCutoffRightSize'] = ApiClient.convertToType(data['cpuUpMaxStandardCutoffRightSize'], 'Number');
            }
            if (data.hasOwnProperty('memoryUpAvgStandardCutoffRightSize')) {
                obj['memoryUpAvgStandardCutoffRightSize'] = ApiClient.convertToType(data['memoryUpAvgStandardCutoffRightSize'], 'Number');
            }
            if (data.hasOwnProperty('memoryDownAvgStandardCutoffRightSize')) {
                obj['memoryDownAvgStandardCutoffRightSize'] = ApiClient.convertToType(data['memoryDownAvgStandardCutoffRightSize'], 'Number');
            }
            if (data.hasOwnProperty('memoryDownMaxStandardCutoffRightSize')) {
                obj['memoryDownMaxStandardCutoffRightSize'] = ApiClient.convertToType(data['memoryDownMaxStandardCutoffRightSize'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Power Shutdown Average CPU (%). Lower limit for average CPU usage
 * @member {Number} cpuAvgCutoffPower
 */
GuidanceSettings.prototype['cpuAvgCutoffPower'] = undefined;

/**
 * Power Shutdown Maximum CPU (%). Lower limit for peak CPU usage
 * @member {Number} cpuMaxCutoffPower
 */
GuidanceSettings.prototype['cpuMaxCutoffPower'] = undefined;

/**
 * Power Shutdown Network threshold (bytes). Lower limit for average network bandwidth
 * @member {Number} networkCutoffPower
 */
GuidanceSettings.prototype['networkCutoffPower'] = undefined;

/**
 * CPU Up-size Average CPU (%). Upper limit for CPU usage
 * @member {Number} cpuUpAvgStandardCutoffRightSize
 */
GuidanceSettings.prototype['cpuUpAvgStandardCutoffRightSize'] = undefined;

/**
 * CPU Up-size Maximum CPU (%). Upper limit for peak CPU usage
 * @member {Number} cpuUpMaxStandardCutoffRightSize
 */
GuidanceSettings.prototype['cpuUpMaxStandardCutoffRightSize'] = undefined;

/**
 * Memory Up-size Minimum Free Memory (%). Lower limit for average free memory usage
 * @member {Number} memoryUpAvgStandardCutoffRightSize
 */
GuidanceSettings.prototype['memoryUpAvgStandardCutoffRightSize'] = undefined;

/**
 * Memory Down-size Maximum Free Memory (%). Upper limit for average free memory
 * @member {Number} memoryDownAvgStandardCutoffRightSize
 */
GuidanceSettings.prototype['memoryDownAvgStandardCutoffRightSize'] = undefined;

/**
 * Memory Down-size Maximum Free Memory (%). Upper limit for peak memory usage
 * @member {Number} memoryDownMaxStandardCutoffRightSize
 */
GuidanceSettings.prototype['memoryDownMaxStandardCutoffRightSize'] = undefined;






export default GuidanceSettings;

