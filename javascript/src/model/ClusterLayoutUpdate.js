/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiBlueprintsIdUpdatePermissionsResourcePermissionSites from './ApiBlueprintsIdUpdatePermissionsResourcePermissionSites';
import ApiServicePlansServicePlanProvisionType from './ApiServicePlansServicePlanProvisionType';
import ClusterLayoutCreateEnvironmentVariables from './ClusterLayoutCreateEnvironmentVariables';
import ClusterLayoutCreateGroupType from './ClusterLayoutCreateGroupType';
import ClusterLayoutCreateMasters from './ClusterLayoutCreateMasters';

/**
 * The ClusterLayoutUpdate model module.
 * @module model/ClusterLayoutUpdate
 * @version 6.2.1
 */
class ClusterLayoutUpdate {
    /**
     * Constructs a new <code>ClusterLayoutUpdate</code>.
     * @alias module:model/ClusterLayoutUpdate
     */
    constructor() { 
        
        ClusterLayoutUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClusterLayoutUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClusterLayoutUpdate} obj Optional instance to populate.
     * @return {module:model/ClusterLayoutUpdate} The populated <code>ClusterLayoutUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClusterLayoutUpdate();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], ['String']);
            }
            if (data.hasOwnProperty('computeVersion')) {
                obj['computeVersion'] = ApiClient.convertToType(data['computeVersion'], 'String');
            }
            if (data.hasOwnProperty('creatable')) {
                obj['creatable'] = ApiClient.convertToType(data['creatable'], 'Boolean');
            }
            if (data.hasOwnProperty('hasAutoScale')) {
                obj['hasAutoScale'] = ApiClient.convertToType(data['hasAutoScale'], 'Boolean');
            }
            if (data.hasOwnProperty('installContainerRuntime')) {
                obj['installContainerRuntime'] = ApiClient.convertToType(data['installContainerRuntime'], 'Boolean');
            }
            if (data.hasOwnProperty('memoryRequirement')) {
                obj['memoryRequirement'] = ApiClient.convertToType(data['memoryRequirement'], 'Number');
            }
            if (data.hasOwnProperty('groupType')) {
                obj['groupType'] = ClusterLayoutCreateGroupType.constructFromObject(data['groupType']);
            }
            if (data.hasOwnProperty('provisionType')) {
                obj['provisionType'] = ApiServicePlansServicePlanProvisionType.constructFromObject(data['provisionType']);
            }
            if (data.hasOwnProperty('optionTypes')) {
                obj['optionTypes'] = ApiClient.convertToType(data['optionTypes'], [ApiBlueprintsIdUpdatePermissionsResourcePermissionSites]);
            }
            if (data.hasOwnProperty('taskSets')) {
                obj['taskSets'] = ApiClient.convertToType(data['taskSets'], [ApiBlueprintsIdUpdatePermissionsResourcePermissionSites]);
            }
            if (data.hasOwnProperty('environmentVariables')) {
                obj['environmentVariables'] = ApiClient.convertToType(data['environmentVariables'], [ClusterLayoutCreateEnvironmentVariables]);
            }
            if (data.hasOwnProperty('masters')) {
                obj['masters'] = ApiClient.convertToType(data['masters'], [ClusterLayoutCreateMasters]);
            }
            if (data.hasOwnProperty('workers')) {
                obj['workers'] = ApiClient.convertToType(data['workers'], [ClusterLayoutCreateMasters]);
            }
        }
        return obj;
    }


}

/**
 * Cluster layout name
 * @member {String} name
 */
ClusterLayoutUpdate.prototype['name'] = undefined;

/**
 * Cluster layout description
 * @member {String} description
 */
ClusterLayoutUpdate.prototype['description'] = undefined;

/**
 * Array of label strings, can be used for filtering.
 * @member {Array.<String>} labels
 */
ClusterLayoutUpdate.prototype['labels'] = undefined;

/**
 * Version of the cluster layout
 * @member {String} computeVersion
 */
ClusterLayoutUpdate.prototype['computeVersion'] = undefined;

/**
 * Can be used to enable / disable the creatability of the cluster layout.
 * @member {Boolean} creatable
 * @default true
 */
ClusterLayoutUpdate.prototype['creatable'] = true;

/**
 * Can be used to enable / disable the horizontal scaling.
 * @member {Boolean} hasAutoScale
 * @default false
 */
ClusterLayoutUpdate.prototype['hasAutoScale'] = false;

/**
 * Install Docker (container runtime).
 * @member {Boolean} installContainerRuntime
 * @default false
 */
ClusterLayoutUpdate.prototype['installContainerRuntime'] = false;

/**
 * Memory requirement in bytes
 * @member {Number} memoryRequirement
 */
ClusterLayoutUpdate.prototype['memoryRequirement'] = undefined;

/**
 * @member {module:model/ClusterLayoutCreateGroupType} groupType
 */
ClusterLayoutUpdate.prototype['groupType'] = undefined;

/**
 * @member {module:model/ApiServicePlansServicePlanProvisionType} provisionType
 */
ClusterLayoutUpdate.prototype['provisionType'] = undefined;

/**
 * Array of cluster layout option types
 * @member {Array.<module:model/ApiBlueprintsIdUpdatePermissionsResourcePermissionSites>} optionTypes
 */
ClusterLayoutUpdate.prototype['optionTypes'] = undefined;

/**
 * Array of cluster layout task sets
 * @member {Array.<module:model/ApiBlueprintsIdUpdatePermissionsResourcePermissionSites>} taskSets
 */
ClusterLayoutUpdate.prototype['taskSets'] = undefined;

/**
 * Array of cluster layout env variables
 * @member {Array.<module:model/ClusterLayoutCreateEnvironmentVariables>} environmentVariables
 */
ClusterLayoutUpdate.prototype['environmentVariables'] = undefined;

/**
 * Array of cluster layout master nodes
 * @member {Array.<module:model/ClusterLayoutCreateMasters>} masters
 */
ClusterLayoutUpdate.prototype['masters'] = undefined;

/**
 * Array of cluster layout worker nodes
 * @member {Array.<module:model/ClusterLayoutCreateMasters>} workers
 */
ClusterLayoutUpdate.prototype['workers'] = undefined;






export default ClusterLayoutUpdate;

