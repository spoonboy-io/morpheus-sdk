/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InlineResponse20079LoadBalancerMonitorLoadBalancer from './InlineResponse20079LoadBalancerMonitorLoadBalancer';
import InlineResponse20082LoadBalancerInstanceSslCert from './InlineResponse20082LoadBalancerInstanceSslCert';

/**
 * The InlineResponse20082LoadBalancerInstance model module.
 * @module model/InlineResponse20082LoadBalancerInstance
 * @version 6.2.1
 */
class InlineResponse20082LoadBalancerInstance {
    /**
     * Constructs a new <code>InlineResponse20082LoadBalancerInstance</code>.
     * @alias module:model/InlineResponse20082LoadBalancerInstance
     */
    constructor() { 
        
        InlineResponse20082LoadBalancerInstance.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse20082LoadBalancerInstance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse20082LoadBalancerInstance} obj Optional instance to populate.
     * @return {module:model/InlineResponse20082LoadBalancerInstance} The populated <code>InlineResponse20082LoadBalancerInstance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse20082LoadBalancerInstance();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('loadBalancer')) {
                obj['loadBalancer'] = InlineResponse20079LoadBalancerMonitorLoadBalancer.constructFromObject(data['loadBalancer']);
            }
            if (data.hasOwnProperty('instance')) {
                obj['instance'] = ApiClient.convertToType(data['instance'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('internalId')) {
                obj['internalId'] = ApiClient.convertToType(data['internalId'], 'String');
            }
            if (data.hasOwnProperty('externalId')) {
                obj['externalId'] = ApiClient.convertToType(data['externalId'], 'String');
            }
            if (data.hasOwnProperty('dateCreated')) {
                obj['dateCreated'] = ApiClient.convertToType(data['dateCreated'], 'Date');
            }
            if (data.hasOwnProperty('lastUpdated')) {
                obj['lastUpdated'] = ApiClient.convertToType(data['lastUpdated'], 'Date');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('sticky')) {
                obj['sticky'] = ApiClient.convertToType(data['sticky'], 'Boolean');
            }
            if (data.hasOwnProperty('sslEnabled')) {
                obj['sslEnabled'] = ApiClient.convertToType(data['sslEnabled'], 'String');
            }
            if (data.hasOwnProperty('externalAddress')) {
                obj['externalAddress'] = ApiClient.convertToType(data['externalAddress'], 'Boolean');
            }
            if (data.hasOwnProperty('backendPort')) {
                obj['backendPort'] = ApiClient.convertToType(data['backendPort'], 'String');
            }
            if (data.hasOwnProperty('vipType')) {
                obj['vipType'] = ApiClient.convertToType(data['vipType'], 'String');
            }
            if (data.hasOwnProperty('vipAddress')) {
                obj['vipAddress'] = ApiClient.convertToType(data['vipAddress'], 'String');
            }
            if (data.hasOwnProperty('vipHostname')) {
                obj['vipHostname'] = ApiClient.convertToType(data['vipHostname'], 'String');
            }
            if (data.hasOwnProperty('vipProtocol')) {
                obj['vipProtocol'] = ApiClient.convertToType(data['vipProtocol'], 'String');
            }
            if (data.hasOwnProperty('vipScheme')) {
                obj['vipScheme'] = ApiClient.convertToType(data['vipScheme'], 'String');
            }
            if (data.hasOwnProperty('vipMode')) {
                obj['vipMode'] = ApiClient.convertToType(data['vipMode'], 'String');
            }
            if (data.hasOwnProperty('vipName')) {
                obj['vipName'] = ApiClient.convertToType(data['vipName'], 'String');
            }
            if (data.hasOwnProperty('vipPort')) {
                obj['vipPort'] = ApiClient.convertToType(data['vipPort'], 'Number');
            }
            if (data.hasOwnProperty('vipSticky')) {
                obj['vipSticky'] = ApiClient.convertToType(data['vipSticky'], 'String');
            }
            if (data.hasOwnProperty('vipBalance')) {
                obj['vipBalance'] = ApiClient.convertToType(data['vipBalance'], 'String');
            }
            if (data.hasOwnProperty('servicePort')) {
                obj['servicePort'] = ApiClient.convertToType(data['servicePort'], 'String');
            }
            if (data.hasOwnProperty('sourceAddress')) {
                obj['sourceAddress'] = ApiClient.convertToType(data['sourceAddress'], 'String');
            }
            if (data.hasOwnProperty('sslCert')) {
                obj['sslCert'] = InlineResponse20082LoadBalancerInstanceSslCert.constructFromObject(data['sslCert']);
            }
            if (data.hasOwnProperty('sslMode')) {
                obj['sslMode'] = ApiClient.convertToType(data['sslMode'], 'String');
            }
            if (data.hasOwnProperty('sslRedirectMode')) {
                obj['sslRedirectMode'] = ApiClient.convertToType(data['sslRedirectMode'], 'String');
            }
            if (data.hasOwnProperty('vipShared')) {
                obj['vipShared'] = ApiClient.convertToType(data['vipShared'], 'Boolean');
            }
            if (data.hasOwnProperty('vipDirectAddress')) {
                obj['vipDirectAddress'] = ApiClient.convertToType(data['vipDirectAddress'], 'String');
            }
            if (data.hasOwnProperty('serverName')) {
                obj['serverName'] = ApiClient.convertToType(data['serverName'], 'String');
            }
            if (data.hasOwnProperty('poolName')) {
                obj['poolName'] = ApiClient.convertToType(data['poolName'], 'String');
            }
            if (data.hasOwnProperty('removing')) {
                obj['removing'] = ApiClient.convertToType(data['removing'], 'Boolean');
            }
            if (data.hasOwnProperty('vipSource')) {
                obj['vipSource'] = ApiClient.convertToType(data['vipSource'], 'String');
            }
            if (data.hasOwnProperty('extraConfig')) {
                obj['extraConfig'] = ApiClient.convertToType(data['extraConfig'], 'String');
            }
            if (data.hasOwnProperty('serviceAccess')) {
                obj['serviceAccess'] = ApiClient.convertToType(data['serviceAccess'], 'String');
            }
            if (data.hasOwnProperty('networkId')) {
                obj['networkId'] = ApiClient.convertToType(data['networkId'], 'String');
            }
            if (data.hasOwnProperty('subnetId')) {
                obj['subnetId'] = ApiClient.convertToType(data['subnetId'], 'String');
            }
            if (data.hasOwnProperty('externalPortId')) {
                obj['externalPortId'] = ApiClient.convertToType(data['externalPortId'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('vipStatus')) {
                obj['vipStatus'] = ApiClient.convertToType(data['vipStatus'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
InlineResponse20082LoadBalancerInstance.prototype['id'] = undefined;

/**
 * @member {module:model/InlineResponse20079LoadBalancerMonitorLoadBalancer} loadBalancer
 */
InlineResponse20082LoadBalancerInstance.prototype['loadBalancer'] = undefined;

/**
 * @member {String} instance
 */
InlineResponse20082LoadBalancerInstance.prototype['instance'] = undefined;

/**
 * @member {String} description
 */
InlineResponse20082LoadBalancerInstance.prototype['description'] = undefined;

/**
 * @member {String} internalId
 */
InlineResponse20082LoadBalancerInstance.prototype['internalId'] = undefined;

/**
 * @member {String} externalId
 */
InlineResponse20082LoadBalancerInstance.prototype['externalId'] = undefined;

/**
 * @member {Date} dateCreated
 */
InlineResponse20082LoadBalancerInstance.prototype['dateCreated'] = undefined;

/**
 * @member {Date} lastUpdated
 */
InlineResponse20082LoadBalancerInstance.prototype['lastUpdated'] = undefined;

/**
 * @member {Boolean} active
 */
InlineResponse20082LoadBalancerInstance.prototype['active'] = undefined;

/**
 * @member {Boolean} sticky
 */
InlineResponse20082LoadBalancerInstance.prototype['sticky'] = undefined;

/**
 * @member {String} sslEnabled
 */
InlineResponse20082LoadBalancerInstance.prototype['sslEnabled'] = undefined;

/**
 * @member {Boolean} externalAddress
 */
InlineResponse20082LoadBalancerInstance.prototype['externalAddress'] = undefined;

/**
 * @member {String} backendPort
 */
InlineResponse20082LoadBalancerInstance.prototype['backendPort'] = undefined;

/**
 * @member {String} vipType
 */
InlineResponse20082LoadBalancerInstance.prototype['vipType'] = undefined;

/**
 * @member {String} vipAddress
 */
InlineResponse20082LoadBalancerInstance.prototype['vipAddress'] = undefined;

/**
 * @member {String} vipHostname
 */
InlineResponse20082LoadBalancerInstance.prototype['vipHostname'] = undefined;

/**
 * @member {String} vipProtocol
 */
InlineResponse20082LoadBalancerInstance.prototype['vipProtocol'] = undefined;

/**
 * @member {String} vipScheme
 */
InlineResponse20082LoadBalancerInstance.prototype['vipScheme'] = undefined;

/**
 * @member {String} vipMode
 */
InlineResponse20082LoadBalancerInstance.prototype['vipMode'] = undefined;

/**
 * @member {String} vipName
 */
InlineResponse20082LoadBalancerInstance.prototype['vipName'] = undefined;

/**
 * @member {Number} vipPort
 */
InlineResponse20082LoadBalancerInstance.prototype['vipPort'] = undefined;

/**
 * @member {String} vipSticky
 */
InlineResponse20082LoadBalancerInstance.prototype['vipSticky'] = undefined;

/**
 * @member {String} vipBalance
 */
InlineResponse20082LoadBalancerInstance.prototype['vipBalance'] = undefined;

/**
 * @member {String} servicePort
 */
InlineResponse20082LoadBalancerInstance.prototype['servicePort'] = undefined;

/**
 * @member {String} sourceAddress
 */
InlineResponse20082LoadBalancerInstance.prototype['sourceAddress'] = undefined;

/**
 * @member {module:model/InlineResponse20082LoadBalancerInstanceSslCert} sslCert
 */
InlineResponse20082LoadBalancerInstance.prototype['sslCert'] = undefined;

/**
 * @member {String} sslMode
 */
InlineResponse20082LoadBalancerInstance.prototype['sslMode'] = undefined;

/**
 * @member {String} sslRedirectMode
 */
InlineResponse20082LoadBalancerInstance.prototype['sslRedirectMode'] = undefined;

/**
 * @member {Boolean} vipShared
 */
InlineResponse20082LoadBalancerInstance.prototype['vipShared'] = undefined;

/**
 * @member {String} vipDirectAddress
 */
InlineResponse20082LoadBalancerInstance.prototype['vipDirectAddress'] = undefined;

/**
 * @member {String} serverName
 */
InlineResponse20082LoadBalancerInstance.prototype['serverName'] = undefined;

/**
 * @member {String} poolName
 */
InlineResponse20082LoadBalancerInstance.prototype['poolName'] = undefined;

/**
 * @member {Boolean} removing
 */
InlineResponse20082LoadBalancerInstance.prototype['removing'] = undefined;

/**
 * @member {String} vipSource
 */
InlineResponse20082LoadBalancerInstance.prototype['vipSource'] = undefined;

/**
 * @member {String} extraConfig
 */
InlineResponse20082LoadBalancerInstance.prototype['extraConfig'] = undefined;

/**
 * @member {String} serviceAccess
 */
InlineResponse20082LoadBalancerInstance.prototype['serviceAccess'] = undefined;

/**
 * @member {String} networkId
 */
InlineResponse20082LoadBalancerInstance.prototype['networkId'] = undefined;

/**
 * @member {String} subnetId
 */
InlineResponse20082LoadBalancerInstance.prototype['subnetId'] = undefined;

/**
 * @member {String} externalPortId
 */
InlineResponse20082LoadBalancerInstance.prototype['externalPortId'] = undefined;

/**
 * @member {String} status
 */
InlineResponse20082LoadBalancerInstance.prototype['status'] = undefined;

/**
 * @member {String} vipStatus
 */
InlineResponse20082LoadBalancerInstance.prototype['vipStatus'] = undefined;






export default InlineResponse20082LoadBalancerInstance;

