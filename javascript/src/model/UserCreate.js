/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiBlueprintsIdUpdatePermissionsResourcePermissionSites from './ApiBlueprintsIdUpdatePermissionsResourcePermissionSites';

/**
 * The UserCreate model module.
 * @module model/UserCreate
 * @version 6.2.1
 */
class UserCreate {
    /**
     * Constructs a new <code>UserCreate</code>.
     * Payload for creating a new user
     * @alias module:model/UserCreate
     * @param username {String} Username (unique per tenant).
     * @param email {String} Email address
     * @param password {String} Password to apply to the user
     * @param roles {Array.<module:model/ApiBlueprintsIdUpdatePermissionsResourcePermissionSites>} Array of objects with id of the role(s) to assign to the user.
     */
    constructor(username, email, password, roles) { 
        
        UserCreate.initialize(this, username, email, password, roles);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, username, email, password, roles) { 
        obj['username'] = username;
        obj['email'] = email;
        obj['password'] = password;
        obj['roles'] = roles;
    }

    /**
     * Constructs a <code>UserCreate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserCreate} obj Optional instance to populate.
     * @return {module:model/UserCreate} The populated <code>UserCreate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserCreate();

            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('roles')) {
                obj['roles'] = ApiClient.convertToType(data['roles'], [ApiBlueprintsIdUpdatePermissionsResourcePermissionSites]);
            }
            if (data.hasOwnProperty('receiveNotifications')) {
                obj['receiveNotifications'] = ApiClient.convertToType(data['receiveNotifications'], 'Boolean');
            }
            if (data.hasOwnProperty('linuxUsername')) {
                obj['linuxUsername'] = ApiClient.convertToType(data['linuxUsername'], 'String');
            }
            if (data.hasOwnProperty('linuxPassword')) {
                obj['linuxPassword'] = ApiClient.convertToType(data['linuxPassword'], 'String');
            }
            if (data.hasOwnProperty('linuxKeyPairId')) {
                obj['linuxKeyPairId'] = ApiClient.convertToType(data['linuxKeyPairId'], 'Number');
            }
            if (data.hasOwnProperty('windowsUsername')) {
                obj['windowsUsername'] = ApiClient.convertToType(data['windowsUsername'], 'String');
            }
            if (data.hasOwnProperty('windowsPassword')) {
                obj['windowsPassword'] = ApiClient.convertToType(data['windowsPassword'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The user's first name (optional)
 * @member {String} firstName
 */
UserCreate.prototype['firstName'] = undefined;

/**
 * The user's last name (optional)
 * @member {String} lastName
 */
UserCreate.prototype['lastName'] = undefined;

/**
 * Username (unique per tenant).
 * @member {String} username
 */
UserCreate.prototype['username'] = undefined;

/**
 * Email address
 * @member {String} email
 */
UserCreate.prototype['email'] = undefined;

/**
 * Password to apply to the user
 * @member {String} password
 */
UserCreate.prototype['password'] = undefined;

/**
 * Array of objects with id of the role(s) to assign to the user.
 * @member {Array.<module:model/ApiBlueprintsIdUpdatePermissionsResourcePermissionSites>} roles
 */
UserCreate.prototype['roles'] = undefined;

/**
 * Receive Notifications?
 * @member {Boolean} receiveNotifications
 * @default true
 */
UserCreate.prototype['receiveNotifications'] = true;

/**
 * Linux Username, user settings for provisioning
 * @member {String} linuxUsername
 */
UserCreate.prototype['linuxUsername'] = undefined;

/**
 * Linux Password, user settings for provisioning
 * @member {String} linuxPassword
 */
UserCreate.prototype['linuxPassword'] = undefined;

/**
 * Linux SSH Key, user settings for provisioning
 * @member {Number} linuxKeyPairId
 */
UserCreate.prototype['linuxKeyPairId'] = undefined;

/**
 * Windows Username, user settings for provisioning
 * @member {String} windowsUsername
 */
UserCreate.prototype['windowsUsername'] = undefined;

/**
 * Windows Password, user settings for provisioning
 * @member {String} windowsPassword
 */
UserCreate.prototype['windowsPassword'] = undefined;






export default UserCreate;

