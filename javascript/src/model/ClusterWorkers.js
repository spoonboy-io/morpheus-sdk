/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiServersIdMakeManagedServerTags from './ApiServersIdMakeManagedServerTags';
import ClusterLayoutComputeServerType from './ClusterLayoutComputeServerType';
import ClusterMastersInterfaces from './ClusterMastersInterfaces';
import ClusterMastersStats from './ClusterMastersStats';
import ClusterMastersVolumes from './ClusterMastersVolumes';
import InlineResponse200107NetworkPoolCreatedBy from './InlineResponse200107NetworkPoolCreatedBy';
import InlineResponse20040AppDeployInstance from './InlineResponse20040AppDeployInstance';
import InlineResponse20079LoadBalancerMonitorLoadBalancerType from './InlineResponse20079LoadBalancerMonitorLoadBalancerType';

/**
 * The ClusterWorkers model module.
 * @module model/ClusterWorkers
 * @version 6.2.1
 */
class ClusterWorkers {
    /**
     * Constructs a new <code>ClusterWorkers</code>.
     * @alias module:model/ClusterWorkers
     */
    constructor() { 
        
        ClusterWorkers.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClusterWorkers</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClusterWorkers} obj Optional instance to populate.
     * @return {module:model/ClusterWorkers} The populated <code>ClusterWorkers</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClusterWorkers();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('uuid')) {
                obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
            }
            if (data.hasOwnProperty('externalId')) {
                obj['externalId'] = ApiClient.convertToType(data['externalId'], 'String');
            }
            if (data.hasOwnProperty('internalId')) {
                obj['internalId'] = ApiClient.convertToType(data['internalId'], 'String');
            }
            if (data.hasOwnProperty('externalUniqueId')) {
                obj['externalUniqueId'] = ApiClient.convertToType(data['externalUniqueId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('externalName')) {
                obj['externalName'] = ApiClient.convertToType(data['externalName'], 'String');
            }
            if (data.hasOwnProperty('hostname')) {
                obj['hostname'] = ApiClient.convertToType(data['hostname'], 'String');
            }
            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'Number');
            }
            if (data.hasOwnProperty('account')) {
                obj['account'] = InlineResponse20040AppDeployInstance.constructFromObject(data['account']);
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = InlineResponse200107NetworkPoolCreatedBy.constructFromObject(data['owner']);
            }
            if (data.hasOwnProperty('zone')) {
                obj['zone'] = InlineResponse20040AppDeployInstance.constructFromObject(data['zone']);
            }
            if (data.hasOwnProperty('plan')) {
                obj['plan'] = InlineResponse20079LoadBalancerMonitorLoadBalancerType.constructFromObject(data['plan']);
            }
            if (data.hasOwnProperty('computeServerType')) {
                obj['computeServerType'] = ClusterLayoutComputeServerType.constructFromObject(data['computeServerType']);
            }
            if (data.hasOwnProperty('visibility')) {
                obj['visibility'] = ApiClient.convertToType(data['visibility'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('zoneId')) {
                obj['zoneId'] = ApiClient.convertToType(data['zoneId'], 'Number');
            }
            if (data.hasOwnProperty('siteId')) {
                obj['siteId'] = ApiClient.convertToType(data['siteId'], 'Number');
            }
            if (data.hasOwnProperty('resourcePoolId')) {
                obj['resourcePoolId'] = ApiClient.convertToType(data['resourcePoolId'], 'Number');
            }
            if (data.hasOwnProperty('folderId')) {
                obj['folderId'] = ApiClient.convertToType(data['folderId'], 'String');
            }
            if (data.hasOwnProperty('sshHost')) {
                obj['sshHost'] = ApiClient.convertToType(data['sshHost'], 'String');
            }
            if (data.hasOwnProperty('sshPort')) {
                obj['sshPort'] = ApiClient.convertToType(data['sshPort'], 'Number');
            }
            if (data.hasOwnProperty('externalIp')) {
                obj['externalIp'] = ApiClient.convertToType(data['externalIp'], 'String');
            }
            if (data.hasOwnProperty('internalIp')) {
                obj['internalIp'] = ApiClient.convertToType(data['internalIp'], 'String');
            }
            if (data.hasOwnProperty('volumeId')) {
                obj['volumeId'] = ApiClient.convertToType(data['volumeId'], 'String');
            }
            if (data.hasOwnProperty('platform')) {
                obj['platform'] = ApiClient.convertToType(data['platform'], 'String');
            }
            if (data.hasOwnProperty('platformVersion')) {
                obj['platformVersion'] = ApiClient.convertToType(data['platformVersion'], 'String');
            }
            if (data.hasOwnProperty('sshUsername')) {
                obj['sshUsername'] = ApiClient.convertToType(data['sshUsername'], 'String');
            }
            if (data.hasOwnProperty('sshPassword')) {
                obj['sshPassword'] = ApiClient.convertToType(data['sshPassword'], 'String');
            }
            if (data.hasOwnProperty('sshPasswordHash')) {
                obj['sshPasswordHash'] = ApiClient.convertToType(data['sshPasswordHash'], 'String');
            }
            if (data.hasOwnProperty('osDevice')) {
                obj['osDevice'] = ApiClient.convertToType(data['osDevice'], 'String');
            }
            if (data.hasOwnProperty('osType')) {
                obj['osType'] = ApiClient.convertToType(data['osType'], 'String');
            }
            if (data.hasOwnProperty('dataDevice')) {
                obj['dataDevice'] = ApiClient.convertToType(data['dataDevice'], 'String');
            }
            if (data.hasOwnProperty('lvmEnabled')) {
                obj['lvmEnabled'] = ApiClient.convertToType(data['lvmEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('apiKey')) {
                obj['apiKey'] = ApiClient.convertToType(data['apiKey'], 'String');
            }
            if (data.hasOwnProperty('softwareRaid')) {
                obj['softwareRaid'] = ApiClient.convertToType(data['softwareRaid'], 'Boolean');
            }
            if (data.hasOwnProperty('dateCreated')) {
                obj['dateCreated'] = ApiClient.convertToType(data['dateCreated'], 'Date');
            }
            if (data.hasOwnProperty('lastUpdated')) {
                obj['lastUpdated'] = ApiClient.convertToType(data['lastUpdated'], 'Date');
            }
            if (data.hasOwnProperty('stats')) {
                obj['stats'] = ClusterMastersStats.constructFromObject(data['stats']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('statusMessage')) {
                obj['statusMessage'] = ApiClient.convertToType(data['statusMessage'], 'String');
            }
            if (data.hasOwnProperty('errorMessage')) {
                obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');
            }
            if (data.hasOwnProperty('statusDate')) {
                obj['statusDate'] = ApiClient.convertToType(data['statusDate'], 'String');
            }
            if (data.hasOwnProperty('statusPercent')) {
                obj['statusPercent'] = ApiClient.convertToType(data['statusPercent'], 'String');
            }
            if (data.hasOwnProperty('statusEta')) {
                obj['statusEta'] = ApiClient.convertToType(data['statusEta'], 'String');
            }
            if (data.hasOwnProperty('powerState')) {
                obj['powerState'] = ApiClient.convertToType(data['powerState'], 'String');
            }
            if (data.hasOwnProperty('agentInstalled')) {
                obj['agentInstalled'] = ApiClient.convertToType(data['agentInstalled'], 'Boolean');
            }
            if (data.hasOwnProperty('lastAgentUpdate')) {
                obj['lastAgentUpdate'] = ApiClient.convertToType(data['lastAgentUpdate'], 'Date');
            }
            if (data.hasOwnProperty('agentVersion')) {
                obj['agentVersion'] = ApiClient.convertToType(data['agentVersion'], 'String');
            }
            if (data.hasOwnProperty('maxCores')) {
                obj['maxCores'] = ApiClient.convertToType(data['maxCores'], 'Number');
            }
            if (data.hasOwnProperty('coresPerSocket')) {
                obj['coresPerSocket'] = ApiClient.convertToType(data['coresPerSocket'], 'String');
            }
            if (data.hasOwnProperty('maxMemory')) {
                obj['maxMemory'] = ApiClient.convertToType(data['maxMemory'], 'Number');
            }
            if (data.hasOwnProperty('maxStorage')) {
                obj['maxStorage'] = ApiClient.convertToType(data['maxStorage'], 'Number');
            }
            if (data.hasOwnProperty('maxCpu')) {
                obj['maxCpu'] = ApiClient.convertToType(data['maxCpu'], 'Number');
            }
            if (data.hasOwnProperty('hourlyPrice')) {
                obj['hourlyPrice'] = ApiClient.convertToType(data['hourlyPrice'], 'Number');
            }
            if (data.hasOwnProperty('sourceImage')) {
                obj['sourceImage'] = InlineResponse20079LoadBalancerMonitorLoadBalancerType.constructFromObject(data['sourceImage']);
            }
            if (data.hasOwnProperty('serverOs')) {
                obj['serverOs'] = ApiClient.convertToType(data['serverOs'], 'String');
            }
            if (data.hasOwnProperty('volumes')) {
                obj['volumes'] = ApiClient.convertToType(data['volumes'], [ClusterMastersVolumes]);
            }
            if (data.hasOwnProperty('controllers')) {
                obj['controllers'] = ApiClient.convertToType(data['controllers'], [Object]);
            }
            if (data.hasOwnProperty('interfaces')) {
                obj['interfaces'] = ApiClient.convertToType(data['interfaces'], [ClusterMastersInterfaces]);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], ['String']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], [ApiServersIdMakeManagedServerTags]);
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('tagCompliant')) {
                obj['tagCompliant'] = ApiClient.convertToType(data['tagCompliant'], 'String');
            }
            if (data.hasOwnProperty('containers')) {
                obj['containers'] = ApiClient.convertToType(data['containers'], ['Number']);
            }
            if (data.hasOwnProperty('guestConsolePreferred')) {
                obj['guestConsolePreferred'] = ApiClient.convertToType(data['guestConsolePreferred'], 'Boolean');
            }
            if (data.hasOwnProperty('guestConsoleType')) {
                obj['guestConsoleType'] = ApiClient.convertToType(data['guestConsoleType'], 'String');
            }
            if (data.hasOwnProperty('guestConsoleUsername')) {
                obj['guestConsoleUsername'] = ApiClient.convertToType(data['guestConsoleUsername'], 'String');
            }
            if (data.hasOwnProperty('guestConsolePassword')) {
                obj['guestConsolePassword'] = ApiClient.convertToType(data['guestConsolePassword'], 'String');
            }
            if (data.hasOwnProperty('guestConsolePasswordHash')) {
                obj['guestConsolePasswordHash'] = ApiClient.convertToType(data['guestConsolePasswordHash'], 'String');
            }
            if (data.hasOwnProperty('guestConsolePort')) {
                obj['guestConsolePort'] = ApiClient.convertToType(data['guestConsolePort'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
ClusterWorkers.prototype['id'] = undefined;

/**
 * @member {String} uuid
 */
ClusterWorkers.prototype['uuid'] = undefined;

/**
 * @member {String} externalId
 */
ClusterWorkers.prototype['externalId'] = undefined;

/**
 * @member {String} internalId
 */
ClusterWorkers.prototype['internalId'] = undefined;

/**
 * @member {String} externalUniqueId
 */
ClusterWorkers.prototype['externalUniqueId'] = undefined;

/**
 * @member {String} name
 */
ClusterWorkers.prototype['name'] = undefined;

/**
 * @member {String} externalName
 */
ClusterWorkers.prototype['externalName'] = undefined;

/**
 * @member {String} hostname
 */
ClusterWorkers.prototype['hostname'] = undefined;

/**
 * @member {Number} accountId
 */
ClusterWorkers.prototype['accountId'] = undefined;

/**
 * @member {module:model/InlineResponse20040AppDeployInstance} account
 */
ClusterWorkers.prototype['account'] = undefined;

/**
 * @member {module:model/InlineResponse200107NetworkPoolCreatedBy} owner
 */
ClusterWorkers.prototype['owner'] = undefined;

/**
 * @member {module:model/InlineResponse20040AppDeployInstance} zone
 */
ClusterWorkers.prototype['zone'] = undefined;

/**
 * @member {module:model/InlineResponse20079LoadBalancerMonitorLoadBalancerType} plan
 */
ClusterWorkers.prototype['plan'] = undefined;

/**
 * @member {module:model/ClusterLayoutComputeServerType} computeServerType
 */
ClusterWorkers.prototype['computeServerType'] = undefined;

/**
 * @member {String} visibility
 */
ClusterWorkers.prototype['visibility'] = undefined;

/**
 * @member {String} description
 */
ClusterWorkers.prototype['description'] = undefined;

/**
 * @member {Number} zoneId
 */
ClusterWorkers.prototype['zoneId'] = undefined;

/**
 * @member {Number} siteId
 */
ClusterWorkers.prototype['siteId'] = undefined;

/**
 * @member {Number} resourcePoolId
 */
ClusterWorkers.prototype['resourcePoolId'] = undefined;

/**
 * @member {String} folderId
 */
ClusterWorkers.prototype['folderId'] = undefined;

/**
 * @member {String} sshHost
 */
ClusterWorkers.prototype['sshHost'] = undefined;

/**
 * @member {Number} sshPort
 */
ClusterWorkers.prototype['sshPort'] = undefined;

/**
 * @member {String} externalIp
 */
ClusterWorkers.prototype['externalIp'] = undefined;

/**
 * @member {String} internalIp
 */
ClusterWorkers.prototype['internalIp'] = undefined;

/**
 * @member {String} volumeId
 */
ClusterWorkers.prototype['volumeId'] = undefined;

/**
 * @member {String} platform
 */
ClusterWorkers.prototype['platform'] = undefined;

/**
 * @member {String} platformVersion
 */
ClusterWorkers.prototype['platformVersion'] = undefined;

/**
 * @member {String} sshUsername
 */
ClusterWorkers.prototype['sshUsername'] = undefined;

/**
 * @member {String} sshPassword
 */
ClusterWorkers.prototype['sshPassword'] = undefined;

/**
 * @member {String} sshPasswordHash
 */
ClusterWorkers.prototype['sshPasswordHash'] = undefined;

/**
 * @member {String} osDevice
 */
ClusterWorkers.prototype['osDevice'] = undefined;

/**
 * @member {String} osType
 */
ClusterWorkers.prototype['osType'] = undefined;

/**
 * @member {String} dataDevice
 */
ClusterWorkers.prototype['dataDevice'] = undefined;

/**
 * @member {Boolean} lvmEnabled
 */
ClusterWorkers.prototype['lvmEnabled'] = undefined;

/**
 * @member {String} apiKey
 */
ClusterWorkers.prototype['apiKey'] = undefined;

/**
 * @member {Boolean} softwareRaid
 */
ClusterWorkers.prototype['softwareRaid'] = undefined;

/**
 * @member {Date} dateCreated
 */
ClusterWorkers.prototype['dateCreated'] = undefined;

/**
 * @member {Date} lastUpdated
 */
ClusterWorkers.prototype['lastUpdated'] = undefined;

/**
 * @member {module:model/ClusterMastersStats} stats
 */
ClusterWorkers.prototype['stats'] = undefined;

/**
 * @member {String} status
 */
ClusterWorkers.prototype['status'] = undefined;

/**
 * @member {String} statusMessage
 */
ClusterWorkers.prototype['statusMessage'] = undefined;

/**
 * @member {String} errorMessage
 */
ClusterWorkers.prototype['errorMessage'] = undefined;

/**
 * @member {String} statusDate
 */
ClusterWorkers.prototype['statusDate'] = undefined;

/**
 * @member {String} statusPercent
 */
ClusterWorkers.prototype['statusPercent'] = undefined;

/**
 * @member {String} statusEta
 */
ClusterWorkers.prototype['statusEta'] = undefined;

/**
 * @member {String} powerState
 */
ClusterWorkers.prototype['powerState'] = undefined;

/**
 * @member {Boolean} agentInstalled
 */
ClusterWorkers.prototype['agentInstalled'] = undefined;

/**
 * @member {Date} lastAgentUpdate
 */
ClusterWorkers.prototype['lastAgentUpdate'] = undefined;

/**
 * @member {String} agentVersion
 */
ClusterWorkers.prototype['agentVersion'] = undefined;

/**
 * @member {Number} maxCores
 */
ClusterWorkers.prototype['maxCores'] = undefined;

/**
 * @member {String} coresPerSocket
 */
ClusterWorkers.prototype['coresPerSocket'] = undefined;

/**
 * @member {Number} maxMemory
 */
ClusterWorkers.prototype['maxMemory'] = undefined;

/**
 * @member {Number} maxStorage
 */
ClusterWorkers.prototype['maxStorage'] = undefined;

/**
 * @member {Number} maxCpu
 */
ClusterWorkers.prototype['maxCpu'] = undefined;

/**
 * @member {Number} hourlyPrice
 */
ClusterWorkers.prototype['hourlyPrice'] = undefined;

/**
 * @member {module:model/InlineResponse20079LoadBalancerMonitorLoadBalancerType} sourceImage
 */
ClusterWorkers.prototype['sourceImage'] = undefined;

/**
 * @member {String} serverOs
 */
ClusterWorkers.prototype['serverOs'] = undefined;

/**
 * @member {Array.<module:model/ClusterMastersVolumes>} volumes
 */
ClusterWorkers.prototype['volumes'] = undefined;

/**
 * @member {Array.<Object>} controllers
 */
ClusterWorkers.prototype['controllers'] = undefined;

/**
 * @member {Array.<module:model/ClusterMastersInterfaces>} interfaces
 */
ClusterWorkers.prototype['interfaces'] = undefined;

/**
 * @member {Array.<String>} labels
 */
ClusterWorkers.prototype['labels'] = undefined;

/**
 * @member {Array.<module:model/ApiServersIdMakeManagedServerTags>} tags
 */
ClusterWorkers.prototype['tags'] = undefined;

/**
 * @member {Boolean} enabled
 */
ClusterWorkers.prototype['enabled'] = undefined;

/**
 * @member {String} tagCompliant
 */
ClusterWorkers.prototype['tagCompliant'] = undefined;

/**
 * @member {Array.<Number>} containers
 */
ClusterWorkers.prototype['containers'] = undefined;

/**
 * @member {Boolean} guestConsolePreferred
 */
ClusterWorkers.prototype['guestConsolePreferred'] = undefined;

/**
 * @member {String} guestConsoleType
 */
ClusterWorkers.prototype['guestConsoleType'] = undefined;

/**
 * @member {String} guestConsoleUsername
 */
ClusterWorkers.prototype['guestConsoleUsername'] = undefined;

/**
 * @member {String} guestConsolePassword
 */
ClusterWorkers.prototype['guestConsolePassword'] = undefined;

/**
 * @member {String} guestConsolePasswordHash
 */
ClusterWorkers.prototype['guestConsolePasswordHash'] = undefined;

/**
 * @member {String} guestConsolePort
 */
ClusterWorkers.prototype['guestConsolePort'] = undefined;






export default ClusterWorkers;

