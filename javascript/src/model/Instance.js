/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GuidanceVmwareSizingResourceControllers from './GuidanceVmwareSizingResourceControllers';
import InlineResponse200107NetworkPoolCreatedBy from './InlineResponse200107NetworkPoolCreatedBy';
import InlineResponse20040AppDeployInstance from './InlineResponse20040AppDeployInstance';
import InlineResponse20079LoadBalancerMonitorLoadBalancerType from './InlineResponse20079LoadBalancerMonitorLoadBalancerType';
import InstanceConfig from './InstanceConfig';
import InstanceConnectionInfo from './InstanceConnectionInfo';
import InstanceInstancePrice from './InstanceInstancePrice';
import InstanceInstanceType from './InstanceInstanceType';
import InstanceInterfaces from './InstanceInterfaces';
import InstanceLayout from './InstanceLayout';
import InstanceStats from './InstanceStats';
import InstanceVolumes from './InstanceVolumes';

/**
 * The Instance model module.
 * @module model/Instance
 * @version 6.2.1
 */
class Instance {
    /**
     * Constructs a new <code>Instance</code>.
     * @alias module:model/Instance
     */
    constructor() { 
        
        Instance.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Instance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Instance} obj Optional instance to populate.
     * @return {module:model/Instance} The populated <code>Instance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Instance();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('uuid')) {
                obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
            }
            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'Number');
            }
            if (data.hasOwnProperty('tenant')) {
                obj['tenant'] = InlineResponse20040AppDeployInstance.constructFromObject(data['tenant']);
            }
            if (data.hasOwnProperty('instanceType')) {
                obj['instanceType'] = InstanceInstanceType.constructFromObject(data['instanceType']);
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = InlineResponse20040AppDeployInstance.constructFromObject(data['group']);
            }
            if (data.hasOwnProperty('cloud')) {
                obj['cloud'] = InlineResponse20040AppDeployInstance.constructFromObject(data['cloud']);
            }
            if (data.hasOwnProperty('containers')) {
                obj['containers'] = ApiClient.convertToType(data['containers'], ['Number']);
            }
            if (data.hasOwnProperty('servers')) {
                obj['servers'] = ApiClient.convertToType(data['servers'], ['Number']);
            }
            if (data.hasOwnProperty('connectionInfo')) {
                obj['connectionInfo'] = ApiClient.convertToType(data['connectionInfo'], [InstanceConnectionInfo]);
            }
            if (data.hasOwnProperty('layout')) {
                obj['layout'] = InstanceLayout.constructFromObject(data['layout']);
            }
            if (data.hasOwnProperty('plan')) {
                obj['plan'] = InlineResponse20079LoadBalancerMonitorLoadBalancerType.constructFromObject(data['plan']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('environment')) {
                obj['environment'] = ApiClient.convertToType(data['environment'], 'String');
            }
            if (data.hasOwnProperty('config')) {
                obj['config'] = InstanceConfig.constructFromObject(data['config']);
            }
            if (data.hasOwnProperty('configGroup')) {
                obj['configGroup'] = ApiClient.convertToType(data['configGroup'], 'String');
            }
            if (data.hasOwnProperty('configId')) {
                obj['configId'] = ApiClient.convertToType(data['configId'], 'String');
            }
            if (data.hasOwnProperty('configRole')) {
                obj['configRole'] = ApiClient.convertToType(data['configRole'], 'String');
            }
            if (data.hasOwnProperty('volumes')) {
                obj['volumes'] = ApiClient.convertToType(data['volumes'], [InstanceVolumes]);
            }
            if (data.hasOwnProperty('controllers')) {
                obj['controllers'] = ApiClient.convertToType(data['controllers'], [GuidanceVmwareSizingResourceControllers]);
            }
            if (data.hasOwnProperty('interfaces')) {
                obj['interfaces'] = ApiClient.convertToType(data['interfaces'], [InstanceInterfaces]);
            }
            if (data.hasOwnProperty('customOptions')) {
                obj['customOptions'] = ApiClient.convertToType(data['customOptions'], Object);
            }
            if (data.hasOwnProperty('instanceVersion')) {
                obj['instanceVersion'] = ApiClient.convertToType(data['instanceVersion'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], ['String']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], [Object]);
            }
            if (data.hasOwnProperty('evars')) {
                obj['evars'] = ApiClient.convertToType(data['evars'], [Object]);
            }
            if (data.hasOwnProperty('maxMemory')) {
                obj['maxMemory'] = ApiClient.convertToType(data['maxMemory'], 'Number');
            }
            if (data.hasOwnProperty('maxStorage')) {
                obj['maxStorage'] = ApiClient.convertToType(data['maxStorage'], 'Number');
            }
            if (data.hasOwnProperty('maxCores')) {
                obj['maxCores'] = ApiClient.convertToType(data['maxCores'], 'Number');
            }
            if (data.hasOwnProperty('coresPerSocket')) {
                obj['coresPerSocket'] = ApiClient.convertToType(data['coresPerSocket'], 'Number');
            }
            if (data.hasOwnProperty('maxCpu')) {
                obj['maxCpu'] = ApiClient.convertToType(data['maxCpu'], 'String');
            }
            if (data.hasOwnProperty('hourlyCost')) {
                obj['hourlyCost'] = ApiClient.convertToType(data['hourlyCost'], 'Number');
            }
            if (data.hasOwnProperty('hourlyPrice')) {
                obj['hourlyPrice'] = ApiClient.convertToType(data['hourlyPrice'], 'Number');
            }
            if (data.hasOwnProperty('instancePrice')) {
                obj['instancePrice'] = InstanceInstancePrice.constructFromObject(data['instancePrice']);
            }
            if (data.hasOwnProperty('dateCreated')) {
                obj['dateCreated'] = ApiClient.convertToType(data['dateCreated'], 'Date');
            }
            if (data.hasOwnProperty('lastUpdated')) {
                obj['lastUpdated'] = ApiClient.convertToType(data['lastUpdated'], 'Date');
            }
            if (data.hasOwnProperty('hostName')) {
                obj['hostName'] = ApiClient.convertToType(data['hostName'], 'String');
            }
            if (data.hasOwnProperty('domainName')) {
                obj['domainName'] = ApiClient.convertToType(data['domainName'], 'String');
            }
            if (data.hasOwnProperty('environmentPrefix')) {
                obj['environmentPrefix'] = ApiClient.convertToType(data['environmentPrefix'], 'String');
            }
            if (data.hasOwnProperty('firewallEnabled')) {
                obj['firewallEnabled'] = ApiClient.convertToType(data['firewallEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('networkLevel')) {
                obj['networkLevel'] = ApiClient.convertToType(data['networkLevel'], 'String');
            }
            if (data.hasOwnProperty('autoScale')) {
                obj['autoScale'] = ApiClient.convertToType(data['autoScale'], 'Boolean');
            }
            if (data.hasOwnProperty('instanceContext')) {
                obj['instanceContext'] = ApiClient.convertToType(data['instanceContext'], 'String');
            }
            if (data.hasOwnProperty('currentDeployId')) {
                obj['currentDeployId'] = ApiClient.convertToType(data['currentDeployId'], 'String');
            }
            if (data.hasOwnProperty('locked')) {
                obj['locked'] = ApiClient.convertToType(data['locked'], 'Boolean');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('statusMessage')) {
                obj['statusMessage'] = ApiClient.convertToType(data['statusMessage'], 'String');
            }
            if (data.hasOwnProperty('errorMessage')) {
                obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');
            }
            if (data.hasOwnProperty('statusDate')) {
                obj['statusDate'] = ApiClient.convertToType(data['statusDate'], 'Date');
            }
            if (data.hasOwnProperty('statusPercent')) {
                obj['statusPercent'] = ApiClient.convertToType(data['statusPercent'], 'String');
            }
            if (data.hasOwnProperty('statusEta')) {
                obj['statusEta'] = ApiClient.convertToType(data['statusEta'], 'String');
            }
            if (data.hasOwnProperty('userStatus')) {
                obj['userStatus'] = ApiClient.convertToType(data['userStatus'], 'String');
            }
            if (data.hasOwnProperty('expireDays')) {
                obj['expireDays'] = ApiClient.convertToType(data['expireDays'], 'Number');
            }
            if (data.hasOwnProperty('renewDays')) {
                obj['renewDays'] = ApiClient.convertToType(data['renewDays'], 'Number');
            }
            if (data.hasOwnProperty('expireCount')) {
                obj['expireCount'] = ApiClient.convertToType(data['expireCount'], 'Number');
            }
            if (data.hasOwnProperty('expireDate')) {
                obj['expireDate'] = ApiClient.convertToType(data['expireDate'], 'Date');
            }
            if (data.hasOwnProperty('expireWarningDate')) {
                obj['expireWarningDate'] = ApiClient.convertToType(data['expireWarningDate'], 'Date');
            }
            if (data.hasOwnProperty('expireWarningSent')) {
                obj['expireWarningSent'] = ApiClient.convertToType(data['expireWarningSent'], 'Boolean');
            }
            if (data.hasOwnProperty('shutdownDays')) {
                obj['shutdownDays'] = ApiClient.convertToType(data['shutdownDays'], 'Number');
            }
            if (data.hasOwnProperty('shutdownRenewDays')) {
                obj['shutdownRenewDays'] = ApiClient.convertToType(data['shutdownRenewDays'], 'Number');
            }
            if (data.hasOwnProperty('shutdownCount')) {
                obj['shutdownCount'] = ApiClient.convertToType(data['shutdownCount'], 'Number');
            }
            if (data.hasOwnProperty('shutdownDate')) {
                obj['shutdownDate'] = ApiClient.convertToType(data['shutdownDate'], 'Date');
            }
            if (data.hasOwnProperty('shutdownWarningDate')) {
                obj['shutdownWarningDate'] = ApiClient.convertToType(data['shutdownWarningDate'], 'Date');
            }
            if (data.hasOwnProperty('shutdownWarningSent')) {
                obj['shutdownWarningSent'] = ApiClient.convertToType(data['shutdownWarningSent'], 'Boolean');
            }
            if (data.hasOwnProperty('removalDate')) {
                obj['removalDate'] = ApiClient.convertToType(data['removalDate'], 'Date');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = InlineResponse200107NetworkPoolCreatedBy.constructFromObject(data['createdBy']);
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = InlineResponse200107NetworkPoolCreatedBy.constructFromObject(data['owner']);
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('stats')) {
                obj['stats'] = InstanceStats.constructFromObject(data['stats']);
            }
            if (data.hasOwnProperty('powerSchedule')) {
                obj['powerSchedule'] = ApiClient.convertToType(data['powerSchedule'], 'String');
            }
            if (data.hasOwnProperty('isScalable')) {
                obj['isScalable'] = ApiClient.convertToType(data['isScalable'], 'Boolean');
            }
            if (data.hasOwnProperty('instanceThreshold')) {
                obj['instanceThreshold'] = ApiClient.convertToType(data['instanceThreshold'], Object);
            }
            if (data.hasOwnProperty('isBusy')) {
                obj['isBusy'] = ApiClient.convertToType(data['isBusy'], 'Boolean');
            }
            if (data.hasOwnProperty('apps')) {
                obj['apps'] = ApiClient.convertToType(data['apps'], [Object]);
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
Instance.prototype['id'] = undefined;

/**
 * @member {String} uuid
 */
Instance.prototype['uuid'] = undefined;

/**
 * @member {Number} accountId
 */
Instance.prototype['accountId'] = undefined;

/**
 * @member {module:model/InlineResponse20040AppDeployInstance} tenant
 */
Instance.prototype['tenant'] = undefined;

/**
 * @member {module:model/InstanceInstanceType} instanceType
 */
Instance.prototype['instanceType'] = undefined;

/**
 * @member {module:model/InlineResponse20040AppDeployInstance} group
 */
Instance.prototype['group'] = undefined;

/**
 * @member {module:model/InlineResponse20040AppDeployInstance} cloud
 */
Instance.prototype['cloud'] = undefined;

/**
 * @member {Array.<Number>} containers
 */
Instance.prototype['containers'] = undefined;

/**
 * @member {Array.<Number>} servers
 */
Instance.prototype['servers'] = undefined;

/**
 * @member {Array.<module:model/InstanceConnectionInfo>} connectionInfo
 */
Instance.prototype['connectionInfo'] = undefined;

/**
 * @member {module:model/InstanceLayout} layout
 */
Instance.prototype['layout'] = undefined;

/**
 * @member {module:model/InlineResponse20079LoadBalancerMonitorLoadBalancerType} plan
 */
Instance.prototype['plan'] = undefined;

/**
 * @member {String} name
 */
Instance.prototype['name'] = undefined;

/**
 * @member {String} description
 */
Instance.prototype['description'] = undefined;

/**
 * @member {String} environment
 */
Instance.prototype['environment'] = undefined;

/**
 * @member {module:model/InstanceConfig} config
 */
Instance.prototype['config'] = undefined;

/**
 * @member {String} configGroup
 */
Instance.prototype['configGroup'] = undefined;

/**
 * @member {String} configId
 */
Instance.prototype['configId'] = undefined;

/**
 * @member {String} configRole
 */
Instance.prototype['configRole'] = undefined;

/**
 * @member {Array.<module:model/InstanceVolumes>} volumes
 */
Instance.prototype['volumes'] = undefined;

/**
 * @member {Array.<module:model/GuidanceVmwareSizingResourceControllers>} controllers
 */
Instance.prototype['controllers'] = undefined;

/**
 * @member {Array.<module:model/InstanceInterfaces>} interfaces
 */
Instance.prototype['interfaces'] = undefined;

/**
 * @member {Object} customOptions
 */
Instance.prototype['customOptions'] = undefined;

/**
 * @member {String} instanceVersion
 */
Instance.prototype['instanceVersion'] = undefined;

/**
 * @member {Array.<String>} labels
 */
Instance.prototype['labels'] = undefined;

/**
 * @member {Array.<Object>} tags
 */
Instance.prototype['tags'] = undefined;

/**
 * @member {Array.<Object>} evars
 */
Instance.prototype['evars'] = undefined;

/**
 * @member {Number} maxMemory
 */
Instance.prototype['maxMemory'] = undefined;

/**
 * @member {Number} maxStorage
 */
Instance.prototype['maxStorage'] = undefined;

/**
 * @member {Number} maxCores
 */
Instance.prototype['maxCores'] = undefined;

/**
 * @member {Number} coresPerSocket
 */
Instance.prototype['coresPerSocket'] = undefined;

/**
 * @member {String} maxCpu
 */
Instance.prototype['maxCpu'] = undefined;

/**
 * @member {Number} hourlyCost
 */
Instance.prototype['hourlyCost'] = undefined;

/**
 * @member {Number} hourlyPrice
 */
Instance.prototype['hourlyPrice'] = undefined;

/**
 * @member {module:model/InstanceInstancePrice} instancePrice
 */
Instance.prototype['instancePrice'] = undefined;

/**
 * @member {Date} dateCreated
 */
Instance.prototype['dateCreated'] = undefined;

/**
 * @member {Date} lastUpdated
 */
Instance.prototype['lastUpdated'] = undefined;

/**
 * @member {String} hostName
 */
Instance.prototype['hostName'] = undefined;

/**
 * @member {String} domainName
 */
Instance.prototype['domainName'] = undefined;

/**
 * @member {String} environmentPrefix
 */
Instance.prototype['environmentPrefix'] = undefined;

/**
 * @member {Boolean} firewallEnabled
 */
Instance.prototype['firewallEnabled'] = undefined;

/**
 * @member {String} networkLevel
 */
Instance.prototype['networkLevel'] = undefined;

/**
 * @member {Boolean} autoScale
 */
Instance.prototype['autoScale'] = undefined;

/**
 * @member {String} instanceContext
 */
Instance.prototype['instanceContext'] = undefined;

/**
 * @member {String} currentDeployId
 */
Instance.prototype['currentDeployId'] = undefined;

/**
 * @member {Boolean} locked
 */
Instance.prototype['locked'] = undefined;

/**
 * @member {String} status
 */
Instance.prototype['status'] = undefined;

/**
 * @member {String} statusMessage
 */
Instance.prototype['statusMessage'] = undefined;

/**
 * @member {String} errorMessage
 */
Instance.prototype['errorMessage'] = undefined;

/**
 * @member {Date} statusDate
 */
Instance.prototype['statusDate'] = undefined;

/**
 * @member {String} statusPercent
 */
Instance.prototype['statusPercent'] = undefined;

/**
 * @member {String} statusEta
 */
Instance.prototype['statusEta'] = undefined;

/**
 * @member {String} userStatus
 */
Instance.prototype['userStatus'] = undefined;

/**
 * @member {Number} expireDays
 */
Instance.prototype['expireDays'] = undefined;

/**
 * @member {Number} renewDays
 */
Instance.prototype['renewDays'] = undefined;

/**
 * @member {Number} expireCount
 */
Instance.prototype['expireCount'] = undefined;

/**
 * @member {Date} expireDate
 */
Instance.prototype['expireDate'] = undefined;

/**
 * @member {Date} expireWarningDate
 */
Instance.prototype['expireWarningDate'] = undefined;

/**
 * @member {Boolean} expireWarningSent
 */
Instance.prototype['expireWarningSent'] = undefined;

/**
 * @member {Number} shutdownDays
 */
Instance.prototype['shutdownDays'] = undefined;

/**
 * @member {Number} shutdownRenewDays
 */
Instance.prototype['shutdownRenewDays'] = undefined;

/**
 * @member {Number} shutdownCount
 */
Instance.prototype['shutdownCount'] = undefined;

/**
 * @member {Date} shutdownDate
 */
Instance.prototype['shutdownDate'] = undefined;

/**
 * @member {Date} shutdownWarningDate
 */
Instance.prototype['shutdownWarningDate'] = undefined;

/**
 * @member {Boolean} shutdownWarningSent
 */
Instance.prototype['shutdownWarningSent'] = undefined;

/**
 * @member {Date} removalDate
 */
Instance.prototype['removalDate'] = undefined;

/**
 * @member {module:model/InlineResponse200107NetworkPoolCreatedBy} createdBy
 */
Instance.prototype['createdBy'] = undefined;

/**
 * @member {module:model/InlineResponse200107NetworkPoolCreatedBy} owner
 */
Instance.prototype['owner'] = undefined;

/**
 * @member {String} notes
 */
Instance.prototype['notes'] = undefined;

/**
 * @member {module:model/InstanceStats} stats
 */
Instance.prototype['stats'] = undefined;

/**
 * @member {String} powerSchedule
 */
Instance.prototype['powerSchedule'] = undefined;

/**
 * @member {Boolean} isScalable
 */
Instance.prototype['isScalable'] = undefined;

/**
 * @member {Object} instanceThreshold
 */
Instance.prototype['instanceThreshold'] = undefined;

/**
 * @member {Boolean} isBusy
 */
Instance.prototype['isBusy'] = undefined;

/**
 * @member {Array.<Object>} apps
 */
Instance.prototype['apps'] = undefined;






export default Instance;

