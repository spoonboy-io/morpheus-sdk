/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BackupTypeInstance model module.
 * @module model/BackupTypeInstance
 * @version 6.2.1
 */
class BackupTypeInstance {
    /**
     * Constructs a new <code>BackupTypeInstance</code>.
     * @alias module:model/BackupTypeInstance
     * @param locationType {module:model/BackupTypeInstance.LocationTypeEnum} 
     * @param name {String} A name for the backup
     * @param instanceId {Number} The ID of the instance to backup
     * @param containerId {Number} The ID of the container to backup
     * @param backupType {module:model/BackupTypeInstance.BackupTypeEnum} The backup type code, options vary by the type of cloud and source
     * @param jobAction {module:model/BackupTypeInstance.JobActionEnum} Create a new backup job, clone an existing job or add the new backup to an existing job
     */
    constructor(locationType, name, instanceId, containerId, backupType, jobAction) { 
        
        BackupTypeInstance.initialize(this, locationType, name, instanceId, containerId, backupType, jobAction);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, locationType, name, instanceId, containerId, backupType, jobAction) { 
        obj['locationType'] = locationType;
        obj['name'] = name;
        obj['instanceId'] = instanceId;
        obj['containerId'] = containerId;
        obj['backupType'] = backupType;
        obj['jobAction'] = jobAction;
    }

    /**
     * Constructs a <code>BackupTypeInstance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackupTypeInstance} obj Optional instance to populate.
     * @return {module:model/BackupTypeInstance} The populated <code>BackupTypeInstance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackupTypeInstance();

            if (data.hasOwnProperty('locationType')) {
                obj['locationType'] = ApiClient.convertToType(data['locationType'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('instanceId')) {
                obj['instanceId'] = ApiClient.convertToType(data['instanceId'], 'Number');
            }
            if (data.hasOwnProperty('containerId')) {
                obj['containerId'] = ApiClient.convertToType(data['containerId'], 'Number');
            }
            if (data.hasOwnProperty('backupType')) {
                obj['backupType'] = ApiClient.convertToType(data['backupType'], 'String');
            }
            if (data.hasOwnProperty('jobAction')) {
                obj['jobAction'] = ApiClient.convertToType(data['jobAction'], 'String');
            }
            if (data.hasOwnProperty('jobId')) {
                obj['jobId'] = ApiClient.convertToType(data['jobId'], 'Number');
            }
            if (data.hasOwnProperty('jobName')) {
                obj['jobName'] = ApiClient.convertToType(data['jobName'], 'String');
            }
            if (data.hasOwnProperty('jobSchedule')) {
                obj['jobSchedule'] = ApiClient.convertToType(data['jobSchedule'], 'Number');
            }
            if (data.hasOwnProperty('retentionCount')) {
                obj['retentionCount'] = ApiClient.convertToType(data['retentionCount'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/BackupTypeInstance.LocationTypeEnum} locationType
 */
BackupTypeInstance.prototype['locationType'] = undefined;

/**
 * A name for the backup
 * @member {String} name
 */
BackupTypeInstance.prototype['name'] = undefined;

/**
 * The ID of the instance to backup
 * @member {Number} instanceId
 */
BackupTypeInstance.prototype['instanceId'] = undefined;

/**
 * The ID of the container to backup
 * @member {Number} containerId
 */
BackupTypeInstance.prototype['containerId'] = undefined;

/**
 * The backup type code, options vary by the type of cloud and source
 * @member {module:model/BackupTypeInstance.BackupTypeEnum} backupType
 */
BackupTypeInstance.prototype['backupType'] = undefined;

/**
 * Create a new backup job, clone an existing job or add the new backup to an existing job
 * @member {module:model/BackupTypeInstance.JobActionEnum} jobAction
 */
BackupTypeInstance.prototype['jobAction'] = undefined;

/**
 * The ID of the job to clone or add to. Only applies to jobAction `clone` and `addTo`.
 * @member {Number} jobId
 */
BackupTypeInstance.prototype['jobId'] = undefined;

/**
 * Name for new job. Only applies to jobAction `new` and `clone`.
 * @member {String} jobName
 */
BackupTypeInstance.prototype['jobName'] = undefined;

/**
 * The ID of the execute schedule for new job. See Execute Schedules. Only applies to jobAction `new` and `clone`.
 * @member {Number} jobSchedule
 */
BackupTypeInstance.prototype['jobSchedule'] = undefined;

/**
 * Retention Count for new job. By default the backup settings value will be used. Only applies to jobAction `new` and `clone`.
 * @member {Number} retentionCount
 */
BackupTypeInstance.prototype['retentionCount'] = undefined;





/**
 * Allowed values for the <code>locationType</code> property.
 * @enum {String}
 * @readonly
 */
BackupTypeInstance['LocationTypeEnum'] = {

    /**
     * value: "instance"
     * @const
     */
    "instance": "instance"
};


/**
 * Allowed values for the <code>backupType</code> property.
 * @enum {String}
 * @readonly
 */
BackupTypeInstance['BackupTypeEnum'] = {

    /**
     * value: "alibabaSnapshot"
     * @const
     */
    "alibabaSnapshot": "alibabaSnapshot",

    /**
     * value: "amazonSnapshot"
     * @const
     */
    "amazonSnapshot": "amazonSnapshot",

    /**
     * value: "avamarVMWareBackup"
     * @const
     */
    "avamarVMWareBackup": "avamarVMWareBackup",

    /**
     * value: "azureSnapshot"
     * @const
     */
    "azureSnapshot": "azureSnapshot",

    /**
     * value: "bluemixSnapshot"
     * @const
     */
    "bluemixSnapshot": "bluemixSnapshot",

    /**
     * value: "commvaultFileBackup"
     * @const
     */
    "commvaultFileBackup": "commvaultFileBackup",

    /**
     * value: "commvaultOpenstackBackup"
     * @const
     */
    "commvaultOpenstackBackup": "commvaultOpenstackBackup",

    /**
     * value: "commvaultVMWareBackup"
     * @const
     */
    "commvaultVMWareBackup": "commvaultVMWareBackup",

    /**
     * value: "digitaloceanSnapshot"
     * @const
     */
    "digitaloceanSnapshot": "digitaloceanSnapshot",

    /**
     * value: "directoryBackup"
     * @const
     */
    "directoryBackup": "directoryBackup",

    /**
     * value: "esxiSnapshot"
     * @const
     */
    "esxiSnapshot": "esxiSnapshot",

    /**
     * value: "fileBackup"
     * @const
     */
    "fileBackup": "fileBackup",

    /**
     * value: "fusionSnapshot"
     * @const
     */
    "fusionSnapshot": "fusionSnapshot",

    /**
     * value: "googleSnapshot"
     * @const
     */
    "googleSnapshot": "googleSnapshot",

    /**
     * value: "huaweiSnapshot"
     * @const
     */
    "huaweiSnapshot": "huaweiSnapshot",

    /**
     * value: "hypervSnapshot"
     * @const
     */
    "hypervSnapshot": "hypervSnapshot",

    /**
     * value: "kvm"
     * @const
     */
    "kvm": "kvm",

    /**
     * value: "lvmImage"
     * @const
     */
    "lvmImage": "lvmImage",

    /**
     * value: "lvmMigration"
     * @const
     */
    "lvmMigration": "lvmMigration",

    /**
     * value: "lvmSnapshot"
     * @const
     */
    "lvmSnapshot": "lvmSnapshot",

    /**
     * value: "MongoDB"
     * @const
     */
    "MongoDB": "MongoDB",

    /**
     * value: "morpheusAppliance"
     * @const
     */
    "morpheusAppliance": "morpheusAppliance",

    /**
     * value: "morpheusContainerBackup"
     * @const
     */
    "morpheusContainerBackup": "morpheusContainerBackup",

    /**
     * value: "morpheusStorageBackup"
     * @const
     */
    "morpheusStorageBackup": "morpheusStorageBackup",

    /**
     * value: "morpheusVmBackup"
     * @const
     */
    "morpheusVmBackup": "morpheusVmBackup",

    /**
     * value: "MySQL"
     * @const
     */
    "MySQL": "MySQL",

    /**
     * value: "nutanixSnapshot"
     * @const
     */
    "nutanixSnapshot": "nutanixSnapshot",

    /**
     * value: "openstackSnapshot"
     * @const
     */
    "openstackSnapshot": "openstackSnapshot",

    /**
     * value: "opentelekomSnapshot"
     * @const
     */
    "opentelekomSnapshot": "opentelekomSnapshot",

    /**
     * value: "oracleCloudSnapshot"
     * @const
     */
    "oracleCloudSnapshot": "oracleCloudSnapshot",

    /**
     * value: "Postgres"
     * @const
     */
    "Postgres": "Postgres",

    /**
     * value: "powervcSnapshot"
     * @const
     */
    "powervcSnapshot": "powervcSnapshot",

    /**
     * value: "rubrikVMWareBackup"
     * @const
     */
    "rubrikVMWareBackup": "rubrikVMWareBackup",

    /**
     * value: "scvmmSnapshot"
     * @const
     */
    "scvmmSnapshot": "scvmmSnapshot",

    /**
     * value: "softlayerSnapshot"
     * @const
     */
    "softlayerSnapshot": "softlayerSnapshot",

    /**
     * value: "SqlServer"
     * @const
     */
    "SqlServer": "SqlServer",

    /**
     * value: "tarDirectoryBackup"
     * @const
     */
    "tarDirectoryBackup": "tarDirectoryBackup",

    /**
     * value: "upCloudSnapshot"
     * @const
     */
    "upCloudSnapshot": "upCloudSnapshot",

    /**
     * value: "vcdSnapshot"
     * @const
     */
    "vcdSnapshot": "vcdSnapshot",

    /**
     * value: "veeamHypervBackup"
     * @const
     */
    "veeamHypervBackup": "veeamHypervBackup",

    /**
     * value: "veeamScvmmBackup"
     * @const
     */
    "veeamScvmmBackup": "veeamScvmmBackup",

    /**
     * value: "veeamVcdBackup"
     * @const
     */
    "veeamVcdBackup": "veeamVcdBackup",

    /**
     * value: "veeamVMWareBackup"
     * @const
     */
    "veeamVMWareBackup": "veeamVMWareBackup",

    /**
     * value: "virtustreamSnapshot"
     * @const
     */
    "virtustreamSnapshot": "virtustreamSnapshot",

    /**
     * value: "vmwareSnapshot"
     * @const
     */
    "vmwareSnapshot": "vmwareSnapshot",

    /**
     * value: "winMigration"
     * @const
     */
    "winMigration": "winMigration",

    /**
     * value: "xenSnapshot"
     * @const
     */
    "xenSnapshot": "xenSnapshot"
};


/**
 * Allowed values for the <code>jobAction</code> property.
 * @enum {String}
 * @readonly
 */
BackupTypeInstance['JobActionEnum'] = {

    /**
     * value: "new"
     * @const
     */
    "new": "new",

    /**
     * value: "clone"
     * @const
     */
    "clone": "clone",

    /**
     * value: "addTo"
     * @const
     */
    "addTo": "addTo"
};



export default BackupTypeInstance;

