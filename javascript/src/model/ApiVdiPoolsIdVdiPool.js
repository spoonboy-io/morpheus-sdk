/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiVdiPoolsIdVdiPoolConfig from './ApiVdiPoolsIdVdiPoolConfig';

/**
 * The ApiVdiPoolsIdVdiPool model module.
 * @module model/ApiVdiPoolsIdVdiPool
 * @version 6.2.1
 */
class ApiVdiPoolsIdVdiPool {
    /**
     * Constructs a new <code>ApiVdiPoolsIdVdiPool</code>.
     * @alias module:model/ApiVdiPoolsIdVdiPool
     */
    constructor() { 
        
        ApiVdiPoolsIdVdiPool.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiVdiPoolsIdVdiPool</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiVdiPoolsIdVdiPool} obj Optional instance to populate.
     * @return {module:model/ApiVdiPoolsIdVdiPool} The populated <code>ApiVdiPoolsIdVdiPool</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiVdiPoolsIdVdiPool();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'Number');
            }
            if (data.hasOwnProperty('minIdle')) {
                obj['minIdle'] = ApiClient.convertToType(data['minIdle'], 'Number');
            }
            if (data.hasOwnProperty('initialPoolSize')) {
                obj['initialPoolSize'] = ApiClient.convertToType(data['initialPoolSize'], 'Number');
            }
            if (data.hasOwnProperty('maxIdle')) {
                obj['maxIdle'] = ApiClient.convertToType(data['maxIdle'], 'Number');
            }
            if (data.hasOwnProperty('maxPoolSize')) {
                obj['maxPoolSize'] = ApiClient.convertToType(data['maxPoolSize'], 'Number');
            }
            if (data.hasOwnProperty('allocationTimeoutMinutes')) {
                obj['allocationTimeoutMinutes'] = ApiClient.convertToType(data['allocationTimeoutMinutes'], 'Number');
            }
            if (data.hasOwnProperty('persistentUser')) {
                obj['persistentUser'] = ApiClient.convertToType(data['persistentUser'], 'Boolean');
            }
            if (data.hasOwnProperty('recyclable')) {
                obj['recyclable'] = ApiClient.convertToType(data['recyclable'], 'Boolean');
            }
            if (data.hasOwnProperty('allowCopy')) {
                obj['allowCopy'] = ApiClient.convertToType(data['allowCopy'], 'Boolean');
            }
            if (data.hasOwnProperty('allowPrinter')) {
                obj['allowPrinter'] = ApiClient.convertToType(data['allowPrinter'], 'Boolean');
            }
            if (data.hasOwnProperty('allowFileshare')) {
                obj['allowFileshare'] = ApiClient.convertToType(data['allowFileshare'], 'Boolean');
            }
            if (data.hasOwnProperty('allowHypervisorConsole')) {
                obj['allowHypervisorConsole'] = ApiClient.convertToType(data['allowHypervisorConsole'], 'Boolean');
            }
            if (data.hasOwnProperty('autoCreateLocalUserOnReservation')) {
                obj['autoCreateLocalUserOnReservation'] = ApiClient.convertToType(data['autoCreateLocalUserOnReservation'], 'Boolean');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('iconPath')) {
                obj['iconPath'] = ApiClient.convertToType(data['iconPath'], 'String');
            }
            if (data.hasOwnProperty('apps')) {
                obj['apps'] = ApiClient.convertToType(data['apps'], ['Number']);
            }
            if (data.hasOwnProperty('gateway')) {
                obj['gateway'] = ApiClient.convertToType(data['gateway'], 'Number');
            }
            if (data.hasOwnProperty('instanceConfig')) {
                obj['instanceConfig'] = ApiClient.convertToType(data['instanceConfig'], 'String');
            }
            if (data.hasOwnProperty('config')) {
                obj['config'] = ApiVdiPoolsIdVdiPoolConfig.constructFromObject(data['config']);
            }
            if (data.hasOwnProperty('guestConsoleJumpHost')) {
                obj['guestConsoleJumpHost'] = ApiClient.convertToType(data['guestConsoleJumpHost'], 'String');
            }
            if (data.hasOwnProperty('guestConsoleJumpPort')) {
                obj['guestConsoleJumpPort'] = ApiClient.convertToType(data['guestConsoleJumpPort'], 'Number');
            }
            if (data.hasOwnProperty('guestConsoleJumpUsername')) {
                obj['guestConsoleJumpUsername'] = ApiClient.convertToType(data['guestConsoleJumpUsername'], 'String');
            }
            if (data.hasOwnProperty('guestConsoleJumpPassword')) {
                obj['guestConsoleJumpPassword'] = ApiClient.convertToType(data['guestConsoleJumpPassword'], 'String');
            }
            if (data.hasOwnProperty('guestConsoleJumpKeypair')) {
                obj['guestConsoleJumpKeypair'] = ApiClient.convertToType(data['guestConsoleJumpKeypair'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Virtual Desktop name
 * @member {String} name
 */
ApiVdiPoolsIdVdiPool.prototype['name'] = undefined;

/**
 * Virtual Desktop description
 * @member {String} description
 */
ApiVdiPoolsIdVdiPool.prototype['description'] = undefined;

/**
 * Owner (User) ID
 * @member {Number} owner
 */
ApiVdiPoolsIdVdiPool.prototype['owner'] = undefined;

/**
 * Min Idle - Sets the minimum number of idle instances on standby in the pool. The pool will always try to maintain this number of available instances on standby. 
 * @member {Number} minIdle
 */
ApiVdiPoolsIdVdiPool.prototype['minIdle'] = undefined;

/**
 * The initial size of the pool to be allocated on creation
 * @member {Number} initialPoolSize
 */
ApiVdiPoolsIdVdiPool.prototype['initialPoolSize'] = undefined;

/**
 * Sets the maximum number of idle instances on standby in the pool. If the number of idle instances supersedes this, the pool will start removing instances 
 * @member {Number} maxIdle
 */
ApiVdiPoolsIdVdiPool.prototype['maxIdle'] = undefined;

/**
 * Max limit on number of allocations and instances within the pool. 
 * @member {Number} maxPoolSize
 */
ApiVdiPoolsIdVdiPool.prototype['maxPoolSize'] = undefined;

/**
 * Time (in minutes) after a user disconnects before an allocation is recycled or shutdown depending on persistence. 
 * @member {Number} allocationTimeoutMinutes
 */
ApiVdiPoolsIdVdiPool.prototype['allocationTimeoutMinutes'] = undefined;

/**
 * Persistent Desktop Pool
 * @member {Boolean} persistentUser
 * @default false
 */
ApiVdiPoolsIdVdiPool.prototype['persistentUser'] = false;

/**
 * Recyclable VDI Pools only work with cloud types that support snapshot management (i.e. Vmware, Nutanix, VCD)
 * @member {Boolean} recyclable
 * @default false
 */
ApiVdiPoolsIdVdiPool.prototype['recyclable'] = false;

/**
 * Allow copy from desktop
 * @member {Boolean} allowCopy
 * @default false
 */
ApiVdiPoolsIdVdiPool.prototype['allowCopy'] = false;

/**
 * Allow local printers from Desktop
 * @member {Boolean} allowPrinter
 * @default false
 */
ApiVdiPoolsIdVdiPool.prototype['allowPrinter'] = false;

/**
 * Allow File Share
 * @member {Boolean} allowFileshare
 * @default false
 */
ApiVdiPoolsIdVdiPool.prototype['allowFileshare'] = false;

/**
 * Allow hypervisor console
 * @member {Boolean} allowHypervisorConsole
 * @default false
 */
ApiVdiPoolsIdVdiPool.prototype['allowHypervisorConsole'] = false;

/**
 * Auto create local user upon reservation
 * @member {Boolean} autoCreateLocalUserOnReservation
 * @default false
 */
ApiVdiPoolsIdVdiPool.prototype['autoCreateLocalUserOnReservation'] = false;

/**
 * Can be used to enable or disable the VDI pool
 * @member {Boolean} enabled
 * @default true
 */
ApiVdiPoolsIdVdiPool.prototype['enabled'] = true;

/**
 * The relative location of an icon image
 * @member {String} iconPath
 */
ApiVdiPoolsIdVdiPool.prototype['iconPath'] = undefined;

/**
 * Array of VDI App IDs
 * @member {Array.<Number>} apps
 */
ApiVdiPoolsIdVdiPool.prototype['apps'] = undefined;

/**
 * VDI Gateway ID
 * @member {Number} gateway
 */
ApiVdiPoolsIdVdiPool.prototype['gateway'] = undefined;

/**
 * Instance Config JSON. Passing as a string will preserve property order.  See `config` object for required values.
 * @member {String} instanceConfig
 */
ApiVdiPoolsIdVdiPool.prototype['instanceConfig'] = undefined;

/**
 * @member {module:model/ApiVdiPoolsIdVdiPoolConfig} config
 */
ApiVdiPoolsIdVdiPool.prototype['config'] = undefined;

/**
 * Guest Console Jump Host
 * @member {String} guestConsoleJumpHost
 */
ApiVdiPoolsIdVdiPool.prototype['guestConsoleJumpHost'] = undefined;

/**
 * Guest Console Jump Port
 * @member {Number} guestConsoleJumpPort
 */
ApiVdiPoolsIdVdiPool.prototype['guestConsoleJumpPort'] = undefined;

/**
 * Guest Console Jump Username
 * @member {String} guestConsoleJumpUsername
 */
ApiVdiPoolsIdVdiPool.prototype['guestConsoleJumpUsername'] = undefined;

/**
 * Guest Console Jump Password
 * @member {String} guestConsoleJumpPassword
 */
ApiVdiPoolsIdVdiPool.prototype['guestConsoleJumpPassword'] = undefined;

/**
 * Guest Console Jump Key Pair. see `Key Pair`
 * @member {Number} guestConsoleJumpKeypair
 */
ApiVdiPoolsIdVdiPool.prototype['guestConsoleJumpKeypair'] = undefined;






export default ApiVdiPoolsIdVdiPool;

