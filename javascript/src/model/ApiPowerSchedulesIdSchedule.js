/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiPowerSchedulesIdSchedule model module.
 * @module model/ApiPowerSchedulesIdSchedule
 * @version 6.2.1
 */
class ApiPowerSchedulesIdSchedule {
    /**
     * Constructs a new <code>ApiPowerSchedulesIdSchedule</code>.
     * @alias module:model/ApiPowerSchedulesIdSchedule
     */
    constructor() { 
        
        ApiPowerSchedulesIdSchedule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiPowerSchedulesIdSchedule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiPowerSchedulesIdSchedule} obj Optional instance to populate.
     * @return {module:model/ApiPowerSchedulesIdSchedule} The populated <code>ApiPowerSchedulesIdSchedule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiPowerSchedulesIdSchedule();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('scheduleType')) {
                obj['scheduleType'] = ApiClient.convertToType(data['scheduleType'], 'String');
            }
            if (data.hasOwnProperty('scheduleTimezone')) {
                obj['scheduleTimezone'] = ApiClient.convertToType(data['scheduleTimezone'], 'String');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('mondayOnTime')) {
                obj['mondayOnTime'] = ApiClient.convertToType(data['mondayOnTime'], 'String');
            }
            if (data.hasOwnProperty('mondayOffTime')) {
                obj['mondayOffTime'] = ApiClient.convertToType(data['mondayOffTime'], 'String');
            }
            if (data.hasOwnProperty('tuesdayOnTime')) {
                obj['tuesdayOnTime'] = ApiClient.convertToType(data['tuesdayOnTime'], 'String');
            }
            if (data.hasOwnProperty('tuesdayOffTime')) {
                obj['tuesdayOffTime'] = ApiClient.convertToType(data['tuesdayOffTime'], 'String');
            }
            if (data.hasOwnProperty('wednesdayOnTime')) {
                obj['wednesdayOnTime'] = ApiClient.convertToType(data['wednesdayOnTime'], 'String');
            }
            if (data.hasOwnProperty('wednesdayOffTime')) {
                obj['wednesdayOffTime'] = ApiClient.convertToType(data['wednesdayOffTime'], 'String');
            }
            if (data.hasOwnProperty('thursdayOnTime')) {
                obj['thursdayOnTime'] = ApiClient.convertToType(data['thursdayOnTime'], 'String');
            }
            if (data.hasOwnProperty('thursdayOffTime')) {
                obj['thursdayOffTime'] = ApiClient.convertToType(data['thursdayOffTime'], 'String');
            }
            if (data.hasOwnProperty('fridayOnTime')) {
                obj['fridayOnTime'] = ApiClient.convertToType(data['fridayOnTime'], 'String');
            }
            if (data.hasOwnProperty('fridayOffTime')) {
                obj['fridayOffTime'] = ApiClient.convertToType(data['fridayOffTime'], 'String');
            }
            if (data.hasOwnProperty('saturdayOnTime')) {
                obj['saturdayOnTime'] = ApiClient.convertToType(data['saturdayOnTime'], 'String');
            }
            if (data.hasOwnProperty('saturdayOffTime')) {
                obj['saturdayOffTime'] = ApiClient.convertToType(data['saturdayOffTime'], 'String');
            }
            if (data.hasOwnProperty('sundayOnTime')) {
                obj['sundayOnTime'] = ApiClient.convertToType(data['sundayOnTime'], 'String');
            }
            if (data.hasOwnProperty('sundayOffTime')) {
                obj['sundayOffTime'] = ApiClient.convertToType(data['sundayOffTime'], 'String');
            }
        }
        return obj;
    }


}

/**
 * A name for the power schedule
 * @member {String} name
 */
ApiPowerSchedulesIdSchedule.prototype['name'] = undefined;

/**
 * A description for the power schedule
 * @member {String} description
 */
ApiPowerSchedulesIdSchedule.prototype['description'] = undefined;

/**
 * Type of schedule `power` on or `power off`
 * @member {module:model/ApiPowerSchedulesIdSchedule.ScheduleTypeEnum} scheduleType
 */
ApiPowerSchedulesIdSchedule.prototype['scheduleType'] = undefined;

/**
 * Time Zone eg. America/New_York, Europe/Amsterdam, etc.
 * @member {String} scheduleTimezone
 * @default 'UTC'
 */
ApiPowerSchedulesIdSchedule.prototype['scheduleTimezone'] = 'UTC';

/**
 * Is the power schedule enabled
 * @member {Boolean} enabled
 * @default true
 */
ApiPowerSchedulesIdSchedule.prototype['enabled'] = true;

/**
 * Monday Start time of the day in 24-hour format
 * @member {String} mondayOnTime
 * @default '00:00'
 */
ApiPowerSchedulesIdSchedule.prototype['mondayOnTime'] = '00:00';

/**
 * Monday Off time of the day in 24-hour format
 * @member {String} mondayOffTime
 * @default '24:00'
 */
ApiPowerSchedulesIdSchedule.prototype['mondayOffTime'] = '24:00';

/**
 * Tuesday Start time of the day in 24-hour format
 * @member {String} tuesdayOnTime
 * @default '00:00'
 */
ApiPowerSchedulesIdSchedule.prototype['tuesdayOnTime'] = '00:00';

/**
 * Tuesday Off time of the day in 24-hour format
 * @member {String} tuesdayOffTime
 * @default '24:00'
 */
ApiPowerSchedulesIdSchedule.prototype['tuesdayOffTime'] = '24:00';

/**
 * Wednesday Start time of the day in 24-hour format
 * @member {String} wednesdayOnTime
 * @default '00:00'
 */
ApiPowerSchedulesIdSchedule.prototype['wednesdayOnTime'] = '00:00';

/**
 * Wednesday Off time of the day in 24-hour format
 * @member {String} wednesdayOffTime
 * @default '24:00'
 */
ApiPowerSchedulesIdSchedule.prototype['wednesdayOffTime'] = '24:00';

/**
 * Thursday Start time of the day in 24-hour format
 * @member {String} thursdayOnTime
 * @default '00:00'
 */
ApiPowerSchedulesIdSchedule.prototype['thursdayOnTime'] = '00:00';

/**
 * Thursday Off time of the day in 24-hour format
 * @member {String} thursdayOffTime
 * @default '24:00'
 */
ApiPowerSchedulesIdSchedule.prototype['thursdayOffTime'] = '24:00';

/**
 * Friday Start time of the day in 24-hour format
 * @member {String} fridayOnTime
 * @default '00:00'
 */
ApiPowerSchedulesIdSchedule.prototype['fridayOnTime'] = '00:00';

/**
 * Friday Off time of the day in 24-hour format
 * @member {String} fridayOffTime
 * @default '24:00'
 */
ApiPowerSchedulesIdSchedule.prototype['fridayOffTime'] = '24:00';

/**
 * Saturday Start time of the day in 24-hour format
 * @member {String} saturdayOnTime
 * @default '00:00'
 */
ApiPowerSchedulesIdSchedule.prototype['saturdayOnTime'] = '00:00';

/**
 * Saturday Off time of the day in 24-hour format
 * @member {String} saturdayOffTime
 * @default '24:00'
 */
ApiPowerSchedulesIdSchedule.prototype['saturdayOffTime'] = '24:00';

/**
 * Sunday Start time of the day in 24-hour format
 * @member {String} sundayOnTime
 * @default '00:00'
 */
ApiPowerSchedulesIdSchedule.prototype['sundayOnTime'] = '00:00';

/**
 * Sunday Off time of the day in 24-hour format
 * @member {String} sundayOffTime
 * @default '24:00'
 */
ApiPowerSchedulesIdSchedule.prototype['sundayOffTime'] = '24:00';





/**
 * Allowed values for the <code>scheduleType</code> property.
 * @enum {String}
 * @readonly
 */
ApiPowerSchedulesIdSchedule['ScheduleTypeEnum'] = {

    /**
     * value: "power"
     * @const
     */
    "power": "power",

    /**
     * value: "power off"
     * @const
     */
    "power off": "power off"
};



export default ApiPowerSchedulesIdSchedule;

