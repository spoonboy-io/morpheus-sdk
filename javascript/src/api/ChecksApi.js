/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.1.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AddCheckApps200Response from '../model/AddCheckApps200Response';
import AddCheckAppsRequest from '../model/AddCheckAppsRequest';
import DefaultError from '../model/DefaultError';
import ListCheckApps200Response from '../model/ListCheckApps200Response';

/**
* Checks service.
* @module api/ChecksApi
* @version 6.1.1
*/
export default class ChecksApi {

    /**
    * Constructs a new ChecksApi. 
    * @alias module:api/ChecksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the addCheckApps operation.
     * @callback module:api/ChecksApi~addCheckAppsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AddCheckApps200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a New Check App
     * Create a new check app.
     * @param {Object} opts Optional parameters
     * @param {module:model/AddCheckAppsRequest} [addCheckAppsRequest] 
     * @param {module:api/ChecksApi~addCheckAppsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AddCheckApps200Response}
     */
    addCheckApps(opts, callback) {
      opts = opts || {};
      let postBody = opts['addCheckAppsRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AddCheckApps200Response;
      return this.apiClient.callApi(
        '/api/monitoring/apps', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listCheckApps operation.
     * @callback module:api/ChecksApi~listCheckAppsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListCheckApps200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List All Check Apps
     * Get a list of check apps.
     * @param {Object} opts Optional parameters
     * @param {Number} [max = 25)] Maximum number of records to return
     * @param {Number} [offset = 0)] Offset records, the number of records to skip, for paginating requests
     * @param {String} [sort = 'name')] Sort order, the name of the property to sort by
     * @param {String} [name] Filter by name, wildcard may be specified as %, eg. example-%
     * @param {String} [phrase] Search phrase for partial matches on name or description
     * @param {String} [status] The instance status for filtering.
     * @param {Date} [lastUpdated] Date filter, restricts query to only load resources updated more recently than the date specified (ISO 8601)
     * @param {Boolean} [deleted] If true, only deleted resources or instances in pending removal status are returned.
     * @param {module:api/ChecksApi~listCheckAppsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListCheckApps200Response}
     */
    listCheckApps(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'max': opts['max'],
        'offset': opts['offset'],
        'sort': opts['sort'],
        'name': opts['name'],
        'phrase': opts['phrase'],
        'status': opts['status'],
        'lastUpdated': opts['lastUpdated'],
        'deleted': opts['deleted']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListCheckApps200Response;
      return this.apiClient.callApi(
        '/api/monitoring/apps', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
