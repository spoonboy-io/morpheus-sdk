/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.1.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DefaultError from '../model/DefaultError';
import ForgotPassword200Response from '../model/ForgotPassword200Response';
import ForgotPasswordRequest from '../model/ForgotPasswordRequest';
import ResetPassword200Response from '../model/ResetPassword200Response';
import ResetPasswordRequest from '../model/ResetPasswordRequest';

/**
* Authentication service.
* @module api/AuthenticationApi
* @version 6.1.1
*/
export default class AuthenticationApi {

    /**
    * Constructs a new AuthenticationApi. 
    * @alias module:api/AuthenticationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the forgotPassword operation.
     * @callback module:api/AuthenticationApi~forgotPasswordCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ForgotPassword200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Request a reset password email
     * This endpoint will trigger the Reset your password email to be sent to the specified user.  The User is identified by `username` and, if they exist, will be notified via their configured email address. The email notification will indicate a Reset Password Request was made and it will include a token.  Once you obtain the token from the email, it may be used to reset the password of your user.  **Note**: This is an unauthorized endpoint and the response will always appear successful, it is not possible determine from the response whether the user exists or if an email was sent. 
     * @param {Object} opts Optional parameters
     * @param {module:model/ForgotPasswordRequest} [forgotPasswordRequest] 
     * @param {module:api/AuthenticationApi~forgotPasswordCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ForgotPassword200Response}
     */
    forgotPassword(opts, callback) {
      opts = opts || {};
      let postBody = opts['forgotPasswordRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ForgotPassword200Response;
      return this.apiClient.callApi(
        '/api/forgot/send-email', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resetPassword operation.
     * @callback module:api/AuthenticationApi~resetPasswordCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResetPassword200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reset user password
     * This endpoint will reset the password for a user, updating it to the specified value. A secret token must be passed to identify the user who is being updated.  **Note**: You can obtain this token by inspecting the URL of the “Click here to reset” link seen in the email. 
     * @param {Object} opts Optional parameters
     * @param {module:model/ResetPasswordRequest} [resetPasswordRequest] 
     * @param {module:api/AuthenticationApi~resetPasswordCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResetPassword200Response}
     */
    resetPassword(opts, callback) {
      opts = opts || {};
      let postBody = opts['resetPasswordRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ResetPassword200Response;
      return this.apiClient.callApi(
        '/api/forgot/reset-password', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
