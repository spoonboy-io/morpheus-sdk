/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DefaultError from '../model/DefaultError';
import InlineObject206 from '../model/InlineObject206';
import InlineObject207 from '../model/InlineObject207';
import InlineResponse200131 from '../model/InlineResponse200131';
import InlineResponse200132 from '../model/InlineResponse200132';
import Model200Success from '../model/Model200Success';

/**
* ResourcePools service.
* @module api/ResourcePoolsApi
* @version 6.2.1
*/
export default class ResourcePoolsApi {

    /**
    * Constructs a new ResourcePoolsApi. 
    * @alias module:api/ResourcePoolsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createResourcePoolGroup operation.
     * @callback module:api/ResourcePoolsApi~createResourcePoolGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200132} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a Resource Pool Group
     * Use this command to create a resource pool group. 
     * @param {Object} opts Optional parameters
     * @param {module:model/InlineObject206} opts.inlineObject206 
     * @param {module:api/ResourcePoolsApi~createResourcePoolGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200132}
     */
    createResourcePoolGroup(opts, callback) {
      opts = opts || {};
      let postBody = opts['inlineObject206'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InlineResponse200132;
      return this.apiClient.callApi(
        '/api/resource-pools/groups', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteResourcePoolGroup operation.
     * @callback module:api/ResourcePoolsApi~deleteResourcePoolGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Model200Success} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a Resource Pool Group
     * Will delete a Resource Pool Group from the system and make it no longer usable.
     * @param {Number} id Morpheus ID of the Object being referenced
     * @param {module:api/ResourcePoolsApi~deleteResourcePoolGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Model200Success}
     */
    deleteResourcePoolGroup(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteResourcePoolGroup");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Model200Success;
      return this.apiClient.callApi(
        '/api/resource-pools/groups/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getResourcePoolGroups operation.
     * @callback module:api/ResourcePoolsApi~getResourcePoolGroupsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200131} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all Resource Pool Groups
     * This endpoint retrieves all Resource Pool Groups associated with the account. 
     * @param {module:api/ResourcePoolsApi~getResourcePoolGroupsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200131}
     */
    getResourcePoolGroups(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse200131;
      return this.apiClient.callApi(
        '/api/resource-pools/groups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getresourcePoolGroup operation.
     * @callback module:api/ResourcePoolsApi~getresourcePoolGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200132} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a Specific Resource Pool Group
     * This endpoint retrieves a specific Resource Pool Group. 
     * @param {Number} id Morpheus ID of the Object being referenced
     * @param {module:api/ResourcePoolsApi~getresourcePoolGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200132}
     */
    getresourcePoolGroup(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getresourcePoolGroup");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse200132;
      return this.apiClient.callApi(
        '/api/resource-pools/groups/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateResourcePoolGroup operation.
     * @callback module:api/ResourcePoolsApi~updateResourcePoolGroupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200132} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a Resource Pool Group
     * Use this command to update an existing resource pool Group. 
     * @param {Number} id Morpheus ID of the Object being referenced
     * @param {Object} opts Optional parameters
     * @param {module:model/InlineObject207} opts.inlineObject207 
     * @param {module:api/ResourcePoolsApi~updateResourcePoolGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200132}
     */
    updateResourcePoolGroup(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['inlineObject207'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling updateResourcePoolGroup");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InlineResponse200132;
      return this.apiClient.callApi(
        '/api/resource-pools/groups/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
