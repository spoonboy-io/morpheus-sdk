/**
 * Morpheus API
 * Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.
 *
 * The version of the OpenAPI document: 6.2.1
 * Contact: dev@morpheusdata.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DefaultError from '../model/DefaultError';

/**
* Billing service.
* @module api/BillingApi
* @version 6.2.1
*/
export default class BillingApi {

    /**
    * Constructs a new BillingApi. 
    * @alias module:api/BillingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getBillingAccount operation.
     * @callback module:api/BillingApi~getBillingAccountCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This endpoint will retrieve a specific account by id if the user has permission to access it
     * Will retrieve billing information for a specific tenant, if it is the current account or a sub account of the requesting user's account. 
     * @param {Number} id Morpheus ID of the Object being referenced
     * @param {Object} opts Optional parameters
     * @param {String} opts.startDate Filter by startDate greater than or equal to a specified date
     * @param {String} opts.endDate Filter by endDate less than or equal to a specified date
     * @param {Boolean} opts.includeUsages Optional ability to suppress the usage records (default to true)
     * @param {Number} opts.maxUsages Optional ability to limit the usages returned
     * @param {Number} opts.offsetUsages Optional ability to offset the usages returned, for use with maxUsages to paginate
     * @param {Boolean} opts.includeComputeServers Optional ability to exclude compute servers (default to true)
     * @param {Boolean} opts.includeInstances Optional ability to exclude instances (default to true)
     * @param {Boolean} opts.includeDiscoveredServers Optional ability to exclude discovered servers (default to true)
     * @param {Boolean} opts.includeLoadBalancers Optional ability to exclude load balancers (default to true)
     * @param {Boolean} opts.includeVirtualImages Optional ability to exclude virtual images (default to true)
     * @param {Boolean} opts.includeSnapshots Optional ability to exclude snapshots (default to true)
     * @param {module:api/BillingApi~getBillingAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getBillingAccount(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getBillingAccount");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'includeUsages': opts['includeUsages'],
        'maxUsages': opts['maxUsages'],
        'offsetUsages': opts['offsetUsages'],
        'includeComputeServers': opts['includeComputeServers'],
        'includeInstances': opts['includeInstances'],
        'includeDiscoveredServers': opts['includeDiscoveredServers'],
        'includeLoadBalancers': opts['includeLoadBalancers'],
        'includeVirtualImages': opts['includeVirtualImages'],
        'includeSnapshots': opts['includeSnapshots']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/billing/account/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getBillingInstancesIdentifier operation.
     * @callback module:api/BillingApi~getBillingInstancesIdentifierCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves billing information for an instance in the requestor's account. Use instanceUUID whenever possible.
     * Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date. 
     * @param {String} identifier Morpheus UUID or ID of the Object being created or referenced
     * @param {Object} opts Optional parameters
     * @param {String} opts.startDate Filter by startDate greater than or equal to a specified date
     * @param {String} opts.endDate Filter by endDate less than or equal to a specified date
     * @param {Boolean} opts.includeUsages Optional ability to suppress the usage records (default to true)
     * @param {Number} opts.maxUsages Optional ability to limit the usages returned
     * @param {Number} opts.offsetUsages Optional ability to offset the usages returned, for use with maxUsages to paginate
     * @param {Boolean} opts.includeTenants Optional ability to include all subtenant billing information when calling from a master tenant user (default to false)
     * @param {Number} opts.accountId Filter by Tenant ID. This is only available to master tenant users with permission to manage tenants and users.
     * @param {module:api/BillingApi~getBillingInstancesIdentifierCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getBillingInstancesIdentifier(identifier, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'identifier' is set
      if (identifier === undefined || identifier === null) {
        throw new Error("Missing the required parameter 'identifier' when calling getBillingInstancesIdentifier");
      }

      let pathParams = {
        'identifier': identifier
      };
      let queryParams = {
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'includeUsages': opts['includeUsages'],
        'maxUsages': opts['maxUsages'],
        'offsetUsages': opts['offsetUsages'],
        'includeTenants': opts['includeTenants'],
        'accountId': opts['accountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/billing/instances/{identifier}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getBillingServersIdentifier operation.
     * @callback module:api/BillingApi~getBillingServersIdentifierCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves billing information for a specific server (container host) in the requestor's account. Use refUUID whenever possible.
     * Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date. 
     * @param {String} identifier Morpheus UUID or ID of the Object being created or referenced
     * @param {Object} opts Optional parameters
     * @param {String} opts.startDate Filter by startDate greater than or equal to a specified date
     * @param {String} opts.endDate Filter by endDate less than or equal to a specified date
     * @param {Boolean} opts.includeUsages Optional ability to suppress the usage records (default to true)
     * @param {Number} opts.maxUsages Optional ability to limit the usages returned
     * @param {Number} opts.offsetUsages Optional ability to offset the usages returned, for use with maxUsages to paginate
     * @param {Boolean} opts.includeTenants Optional ability to include all subtenant billing information when calling from a master tenant user (default to false)
     * @param {Number} opts.accountId Filter by Tenant ID. This is only available to master tenant users with permission to manage tenants and users.
     * @param {module:api/BillingApi~getBillingServersIdentifierCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getBillingServersIdentifier(identifier, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'identifier' is set
      if (identifier === undefined || identifier === null) {
        throw new Error("Missing the required parameter 'identifier' when calling getBillingServersIdentifier");
      }

      let pathParams = {
        'identifier': identifier
      };
      let queryParams = {
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'includeUsages': opts['includeUsages'],
        'maxUsages': opts['maxUsages'],
        'offsetUsages': opts['offsetUsages'],
        'includeTenants': opts['includeTenants'],
        'accountId': opts['accountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/billing/servers/{identifier}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getBillingZoneIdentifier operation.
     * @callback module:api/BillingApi~getBillingZoneIdentifierCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves billing information for a specific zone in the requestor's account. Use zoneUUID whenever possible.
     * Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date. 
     * @param {String} identifier Morpheus UUID or ID of the Object being created or referenced
     * @param {Object} opts Optional parameters
     * @param {String} opts.startDate Filter by startDate greater than or equal to a specified date
     * @param {String} opts.endDate Filter by endDate less than or equal to a specified date
     * @param {Boolean} opts.includeUsages Optional ability to suppress the usage records (default to true)
     * @param {Number} opts.maxUsages Optional ability to limit the usages returned
     * @param {Number} opts.offsetUsages Optional ability to offset the usages returned, for use with maxUsages to paginate
     * @param {Boolean} opts.includeComputeServers Optional ability to exclude compute servers (default to true)
     * @param {Boolean} opts.includeInstances Optional ability to exclude instances (default to true)
     * @param {Boolean} opts.includeDiscoveredServers Optional ability to exclude discovered servers (default to true)
     * @param {Boolean} opts.includeLoadBalancers Optional ability to exclude load balancers (default to true)
     * @param {Boolean} opts.includeVirtualImages Optional ability to exclude virtual images (default to true)
     * @param {Boolean} opts.includeSnapshots Optional ability to exclude snapshots (default to true)
     * @param {module:api/BillingApi~getBillingZoneIdentifierCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getBillingZoneIdentifier(identifier, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'identifier' is set
      if (identifier === undefined || identifier === null) {
        throw new Error("Missing the required parameter 'identifier' when calling getBillingZoneIdentifier");
      }

      let pathParams = {
        'identifier': identifier
      };
      let queryParams = {
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'includeUsages': opts['includeUsages'],
        'maxUsages': opts['maxUsages'],
        'offsetUsages': opts['offsetUsages'],
        'includeComputeServers': opts['includeComputeServers'],
        'includeInstances': opts['includeInstances'],
        'includeDiscoveredServers': opts['includeDiscoveredServers'],
        'includeLoadBalancers': opts['includeLoadBalancers'],
        'includeVirtualImages': opts['includeVirtualImages'],
        'includeSnapshots': opts['includeSnapshots']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/billing/zones/{identifier}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listBillingAccount operation.
     * @callback module:api/BillingApi~listBillingAccountCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves billing information for the requesting user's account.
     * Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date. 
     * @param {Object} opts Optional parameters
     * @param {String} opts.startDate Filter by startDate greater than or equal to a specified date
     * @param {String} opts.endDate Filter by endDate less than or equal to a specified date
     * @param {Boolean} opts.includeUsages Optional ability to suppress the usage records (default to true)
     * @param {Number} opts.maxUsages Optional ability to limit the usages returned
     * @param {Number} opts.offsetUsages Optional ability to offset the usages returned, for use with maxUsages to paginate
     * @param {Boolean} opts.includeComputeServers Optional ability to exclude compute servers (default to true)
     * @param {Boolean} opts.includeInstances Optional ability to exclude instances (default to true)
     * @param {Boolean} opts.includeDiscoveredServers Optional ability to exclude discovered servers (default to true)
     * @param {Boolean} opts.includeLoadBalancers Optional ability to exclude load balancers (default to true)
     * @param {Boolean} opts.includeVirtualImages Optional ability to exclude virtual images (default to true)
     * @param {Boolean} opts.includeSnapshots Optional ability to exclude snapshots (default to true)
     * @param {module:api/BillingApi~listBillingAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    listBillingAccount(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'includeUsages': opts['includeUsages'],
        'maxUsages': opts['maxUsages'],
        'offsetUsages': opts['offsetUsages'],
        'includeComputeServers': opts['includeComputeServers'],
        'includeInstances': opts['includeInstances'],
        'includeDiscoveredServers': opts['includeDiscoveredServers'],
        'includeLoadBalancers': opts['includeLoadBalancers'],
        'includeVirtualImages': opts['includeVirtualImages'],
        'includeSnapshots': opts['includeSnapshots']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/billing/account', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listBillingInstances operation.
     * @callback module:api/BillingApi~listBillingInstancesCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves billing information for all instances on the requestor's account.
     * Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date. 
     * @param {Object} opts Optional parameters
     * @param {String} opts.startDate Filter by startDate greater than or equal to a specified date
     * @param {String} opts.endDate Filter by endDate less than or equal to a specified date
     * @param {Boolean} opts.includeUsages Optional ability to suppress the usage records (default to true)
     * @param {Number} opts.maxUsages Optional ability to limit the usages returned
     * @param {Number} opts.offsetUsages Optional ability to offset the usages returned, for use with maxUsages to paginate
     * @param {Boolean} opts.includeTenants Optional ability to include all subtenant billing information when calling from a master tenant user (default to false)
     * @param {Number} opts.accountId Filter by Tenant ID. This is only available to master tenant users with permission to manage tenants and users.
     * @param {module:api/BillingApi~listBillingInstancesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    listBillingInstances(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'includeUsages': opts['includeUsages'],
        'maxUsages': opts['maxUsages'],
        'offsetUsages': opts['offsetUsages'],
        'includeTenants': opts['includeTenants'],
        'accountId': opts['accountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/billing/instances', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listBillingServers operation.
     * @callback module:api/BillingApi~listBillingServersCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves billing information for all servers (container hosts) on the requestor's account.
     * Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date. 
     * @param {Object} opts Optional parameters
     * @param {String} opts.startDate Filter by startDate greater than or equal to a specified date
     * @param {String} opts.endDate Filter by endDate less than or equal to a specified date
     * @param {Boolean} opts.includeUsages Optional ability to suppress the usage records (default to true)
     * @param {Number} opts.maxUsages Optional ability to limit the usages returned
     * @param {Number} opts.offsetUsages Optional ability to offset the usages returned, for use with maxUsages to paginate
     * @param {Boolean} opts.includeTenants Optional ability to include all subtenant billing information when calling from a master tenant user (default to false)
     * @param {Number} opts.accountId Filter by Tenant ID. This is only available to master tenant users with permission to manage tenants and users.
     * @param {module:api/BillingApi~listBillingServersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    listBillingServers(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'includeUsages': opts['includeUsages'],
        'maxUsages': opts['maxUsages'],
        'offsetUsages': opts['offsetUsages'],
        'includeTenants': opts['includeTenants'],
        'accountId': opts['accountId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/billing/servers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listBillingZone operation.
     * @callback module:api/BillingApi~listBillingZoneCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves billing information for all zones on the requestor's account.
     * Provides API interfaces for viewing billing usage information by tenant, zone, instance or server. By default, usage returned is from the beginning of the current month until now. The date range is parameterized but the end date cannot exceed the current date. 
     * @param {Object} opts Optional parameters
     * @param {String} opts.startDate Filter by startDate greater than or equal to a specified date
     * @param {String} opts.endDate Filter by endDate less than or equal to a specified date
     * @param {Boolean} opts.includeUsages Optional ability to suppress the usage records (default to true)
     * @param {Number} opts.maxUsages Optional ability to limit the usages returned
     * @param {Number} opts.offsetUsages Optional ability to offset the usages returned, for use with maxUsages to paginate
     * @param {Boolean} opts.includeComputeServers Optional ability to exclude compute servers (default to true)
     * @param {Boolean} opts.includeInstances Optional ability to exclude instances (default to true)
     * @param {Boolean} opts.includeDiscoveredServers Optional ability to exclude discovered servers (default to true)
     * @param {Boolean} opts.includeLoadBalancers Optional ability to exclude load balancers (default to true)
     * @param {Boolean} opts.includeVirtualImages Optional ability to exclude virtual images (default to true)
     * @param {Boolean} opts.includeSnapshots Optional ability to exclude snapshots (default to true)
     * @param {module:api/BillingApi~listBillingZoneCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    listBillingZone(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'includeUsages': opts['includeUsages'],
        'maxUsages': opts['maxUsages'],
        'offsetUsages': opts['offsetUsages'],
        'includeComputeServers': opts['includeComputeServers'],
        'includeInstances': opts['includeInstances'],
        'includeDiscoveredServers': opts['includeDiscoveredServers'],
        'includeLoadBalancers': opts['includeLoadBalancers'],
        'includeVirtualImages': opts['includeVirtualImages'],
        'includeSnapshots': opts['includeSnapshots']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/billing/zones', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
